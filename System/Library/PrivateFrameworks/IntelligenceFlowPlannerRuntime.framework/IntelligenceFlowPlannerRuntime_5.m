uint64_t sub_23F5C16EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 16 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1))
          break;
        result = sub_23F61CC64();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        result = *v12;
        v10 = v12[1];
        *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_23F5C17B0(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  char *v15;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_23F37A280(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_47;
    v18 = (char *)(a3 - 16);
    while (1)
    {
      v19 = v18 + 16;
      v20 = (char *)(v12 - 16);
      v21 = *(_QWORD *)(v12 - 16) == *((_QWORD *)v6 - 2) && *(_QWORD *)(v12 - 8) == *((_QWORD *)v6 - 1);
      if (v21 || (sub_23F61CC64() & 1) == 0)
      {
        v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23)
          goto LABEL_43;
      }
      else
      {
        v22 = v19 != v6 || v18 >= v6;
        v20 = v6 - 16;
        v6 -= 16;
        if (!v22)
          goto LABEL_43;
      }
      *(_OWORD *)v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_47;
    }
  }
  sub_23F37A280(a1, (a2 - a1) / 16, a4);
  v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v14 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (!v14 && (sub_23F61CC64() & 1) != 0)
        break;
      v15 = v4;
      v14 = v7 == v4;
      v4 += 16;
      if (!v14)
        goto LABEL_15;
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v15 = v6;
    v14 = v7 == v6;
    v6 += 16;
    if (v14)
      goto LABEL_16;
LABEL_15:
    *(_OWORD *)v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  sub_23F37A280(v4, (uint64_t)(v12 - (_QWORD)v4) / 16, v6);
  return 1;
}

uint64_t sub_23F5C1954(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23F616BC8();
  if (!result || (result = sub_23F616BE0(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_23F616BD4();
      sub_23F61BEE4();
      sub_23F5C1FB8(&qword_256E7DF78, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6B80], MEMORY[0x24BDC6B70]);
      return sub_23F61BE78();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23F5C1A1C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23F4A7438(a1, a2);
  return a1;
}

uint64_t sub_23F5C1A30()
{
  sub_23F61BEE4();
  sub_23F5C1FB8(&qword_256E7DF78, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6B80], MEMORY[0x24BDC6B70]);
  return sub_23F61BE78();
}

_QWORD *sub_23F5C1B40(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE v9[8];

  if ((a2 & 0x1000000000000000) != 0)
    v4 = sub_23F61C2EC();
  else
    v4 = sub_23F61C2F8();
  v5 = v4;
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v6 = sub_23F5C1F48(v4, 0);
  sub_23F617BA0();
  v7 = sub_23F5C1C0C((uint64_t)v9, (uint64_t)(v6 + 4), v5, a1, a2);
  swift_bridgeObjectRelease();
  if (v7 != v5)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v6;
}

uint64_t sub_23F5C1C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unsigned int v23;
  uint64_t *v24;
  __int16 v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];

  if ((a5 & 0x2000000000000000) != 0)
    v8 = HIBYTE(a5) & 0xF;
  else
    v8 = a4 & 0xFFFFFFFFFFFFLL;
  if (!a2)
  {
    v11 = 0;
    v12 = 0;
    a3 = 0;
    v15 = 1;
    goto LABEL_32;
  }
  sub_23F617BA0();
  if (!a3)
  {
    v11 = 0;
    v12 = 0;
    v15 = 1;
    goto LABEL_31;
  }
  if (a3 < 0)
  {
    __break(1u);
    JUMPOUT(0x23F5C1F28);
  }
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = a5 & 0xFFFFFFFFFFFFFFLL;
  v30 = a1;
  v15 = 1;
  v16 = qword_23F5C1F38;
  v17 = qword_23F5C1F28;
  while ((v15 & 1) == 0)
  {
    v15 = 1;
    LOWORD(v19) = v12;
    v12 = 0;
LABEL_23:
    *(_WORD *)(a2 + 2 * v13++) = v19;
    if (a3 == v13)
      goto LABEL_30;
  }
  if (v11 < v8)
  {
    if ((a5 & 0x1000000000000000) != 0)
    {
      v21 = v14;
      v22 = v16;
      v23 = sub_23F61C8D4();
      v17 = qword_23F5C1F28;
      v16 = v22;
      v14 = v21;
      v19 = v23;
    }
    else
    {
      if ((a5 & 0x2000000000000000) == 0)
      {
        v18 = (a5 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((a4 & 0x1000000000000000) == 0)
        {
          v26 = v14;
          v27 = v16;
          v18 = sub_23F61C934();
          v17 = qword_23F5C1F28;
          v16 = v27;
          v14 = v26;
        }
        v19 = *(unsigned __int8 *)(v18 + v11);
        if (*(char *)(v18 + v11) < 0)
          __asm { BR              X9 }
        ++v11;
LABEL_22:
        v15 = 1;
        goto LABEL_23;
      }
      v31[0] = a4;
      v31[1] = v14;
      v19 = *((unsigned __int8 *)v31 + v11);
      if (*((char *)v31 + v11) < 0)
        __asm { BR              X9 }
      v20 = 1;
    }
    v11 += v20;
    if (HIWORD(v19))
    {
      v29 = v14;
      v24 = v17;
      v12 = sub_23F61CD9C();
      v25 = sub_23F61CD9C();
      v17 = v24;
      v16 = qword_23F5C1F38;
      v14 = v29;
      LOWORD(v19) = v25;
      v15 = 0;
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  v15 = 1;
  a3 = v13;
LABEL_30:
  a1 = v30;
LABEL_31:
  swift_bridgeObjectRelease();
LABEL_32:
  *(_QWORD *)a1 = a4;
  *(_QWORD *)(a1 + 8) = a5;
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = v8;
  *(_WORD *)(a1 + 32) = v12;
  *(_BYTE *)(a1 + 34) = v15;
  return a3;
}

_QWORD *sub_23F5C1F48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23F35D2E8(&qword_256E700E0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 2);
  return v4;
}

uint64_t sub_23F5C1FB8(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x242670A44](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F5C1FF8()
{
  return sub_23F61C790();
}

void sub_23F5C2008()
{
  sub_23F376C88();
}

uint64_t sub_23F5C2014()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F5C201C()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23F5C2024()
{
  return swift_bridgeObjectRelease();
}

void sub_23F5C2038(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F37AE00(a1, v3, a3);
}

void sub_23F5C2040()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F37AE00(*(_QWORD *)(v1 - 160), v0, (uint64_t *)(v1 - 136));
}

void sub_23F5C2050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v0, v1, (uint64_t *)(v2 - 136));
}

uint64_t sub_23F5C206C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F5C2078()
{
  return sub_23F61BFC8();
}

uint64_t sub_23F5C2080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  v3[15] = sub_23F35D2E8(&qword_256E6FE48);
  v3[16] = sub_23F366654();
  v3[17] = swift_task_alloc();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F5C20E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t (*v28)(void);

  sub_23F3836F0();
  sub_23F38231C(*(_QWORD *)(v0 + 96), (_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 144) = v1;
  *(_QWORD *)(v0 + 152) = v2;
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 160) = v4;
  *(_QWORD *)(v0 + 168) = v6;
  result = sub_23F617BA0();
  if (v5)
  {
    v8 = (v5 - 1) & v5;
    v9 = __clz(__rbit64(v5)) | (v3 << 6);
    v10 = v3;
LABEL_3:
    *(_QWORD *)(v0 + 176) = v10;
    *(_QWORD *)(v0 + 184) = v8;
    v12 = *(uint64_t **)(v0 + 128);
    v11 = *(char **)(v0 + 136);
    v13 = *(_QWORD *)(v0 + 120);
    v14 = *(int **)(v0 + 104);
    v15 = *(_QWORD *)(v1 + 56);
    v16 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v18 = *v16;
    v17 = v16[1];
    v19 = sub_23F61B92C();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(&v11[*(int *)(v13 + 48)], v15 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v9, v19);
    *(_QWORD *)v11 = v18;
    *((_QWORD *)v11 + 1) = v17;
    sub_23F5C2E18((uint64_t)v11, (uint64_t)v12, &qword_256E6FE48);
    v20 = *v12;
    v21 = v12[1];
    v22 = (uint64_t)v12 + *(int *)(v13 + 48);
    v28 = (uint64_t (*)(void))((char *)v14 + *v14);
    sub_23F617BA0();
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v23;
    *v23 = v0;
    v23[1] = sub_23F5C22EC;
    return sub_23F5C2EA0(v0 + 16, v20, v21, v22, v28);
  }
  v24 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    if (v24 < (uint64_t)((unint64_t)(v4 + 64) >> 6))
    {
      v25 = *(_QWORD *)(v2 + 8 * v24);
      v10 = v3 + 1;
      if (v25)
      {
LABEL_7:
        v8 = (v25 - 1) & v25;
        v9 = __clz(__rbit64(v25)) + (v10 << 6);
        goto LABEL_3;
      }
      v26 = (unint64_t)(v4 + 64) >> 6;
      v10 = v3 + 2;
      if (v3 + 2 < v26)
      {
        v25 = *(_QWORD *)(v2 + 8 * v10);
        if (v25)
          goto LABEL_7;
        v10 = v3 + 3;
        if (v3 + 3 < v26)
        {
          v25 = *(_QWORD *)(v2 + 8 * v10);
          if (v25)
            goto LABEL_7;
          v10 = v3 + 4;
          if (v3 + 4 < v26)
          {
            v25 = *(_QWORD *)(v2 + 8 * v10);
            if (v25)
              goto LABEL_7;
            v10 = v3 + 5;
            if (v3 + 5 < v26)
            {
              v25 = *(_QWORD *)(v2 + 8 * v10);
              if (v25)
                goto LABEL_7;
              v27 = v3 + 6;
              while (v27 < v26)
              {
                v25 = *(_QWORD *)(v2 + 8 * v27++);
                if (v25)
                {
                  v10 = v27 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    swift_release();
    swift_task_dealloc();
    sub_23F3666C4();
    return sub_23F5C2E5C(MEMORY[0x24BEE4AF8], *(uint64_t (**)(void))(v0 + 8));
  }
  return result;
}

uint64_t sub_23F5C22EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F5C234C()
{
  _QWORD *v0;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);

  sub_23F3836F0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2 = v0[21];
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23F5C2F3C();
    v2 = v33;
  }
  v3 = *(_QWORD *)(v2 + 16);
  if (v3 >= *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_23F5C2F3C();
    v2 = v34;
  }
  v4 = v0[16];
  *(_QWORD *)(v2 + 16) = v3 + 1;
  sub_23F5C2E18((uint64_t)(v0 + 2), v2 + 40 * v3 + 32, &qword_256E70568);
  result = sub_23F5C2DD8(v4);
  v6 = v0[22];
  v7 = v0[23];
  v0[21] = v2;
  if (v7)
  {
    v8 = (v7 - 1) & v7;
    v9 = __clz(__rbit64(v7)) | (v6 << 6);
    v10 = v6;
LABEL_7:
    v0[22] = v10;
    v0[23] = v8;
    v12 = (char *)v0[17];
    v11 = v0[18];
    v14 = v0[15];
    v13 = (uint64_t *)v0[16];
    v15 = (int *)v0[13];
    v16 = *(_QWORD *)(v11 + 56);
    v17 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v9);
    v19 = *v17;
    v18 = v17[1];
    v20 = sub_23F61B92C();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(&v12[*(int *)(v14 + 48)], v16 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v9, v20);
    *(_QWORD *)v12 = v19;
    *((_QWORD *)v12 + 1) = v18;
    sub_23F5C2E18((uint64_t)v12, (uint64_t)v13, &qword_256E6FE48);
    v21 = *v13;
    v22 = v13[1];
    v23 = (uint64_t)v13 + *(int *)(v14 + 48);
    v35 = (uint64_t (*)(void))((char *)v15 + *v15);
    sub_23F617BA0();
    v24 = (_QWORD *)swift_task_alloc();
    v0[24] = v24;
    *v24 = v0;
    v24[1] = sub_23F5C22EC;
    return sub_23F5C2EA0((uint64_t)(v0 + 2), v21, v22, v23, v35);
  }
  v25 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
  }
  else
  {
    v26 = v0[20] + 64;
    if (v25 < (uint64_t)(v26 >> 6))
    {
      v27 = v0[19];
      v28 = *(_QWORD *)(v27 + 8 * v25);
      v10 = v6 + 1;
      if (v28)
      {
LABEL_11:
        v8 = (v28 - 1) & v28;
        v9 = __clz(__rbit64(v28)) + (v10 << 6);
        goto LABEL_7;
      }
      v29 = v26 >> 6;
      v10 = v6 + 2;
      if (v6 + 2 < v29)
      {
        v28 = *(_QWORD *)(v27 + 8 * v10);
        if (v28)
          goto LABEL_11;
        v10 = v6 + 3;
        if (v6 + 3 < v29)
        {
          v28 = *(_QWORD *)(v27 + 8 * v10);
          if (v28)
            goto LABEL_11;
          v10 = v6 + 4;
          if (v6 + 4 < v29)
          {
            v28 = *(_QWORD *)(v27 + 8 * v10);
            if (v28)
              goto LABEL_11;
            v10 = v6 + 5;
            if (v6 + 5 < v29)
            {
              v28 = *(_QWORD *)(v27 + 8 * v10);
              if (v28)
                goto LABEL_11;
              v30 = v6 + 6;
              while (v30 < v29)
              {
                v28 = *(_QWORD *)(v27 + 8 * v30++);
                if (v28)
                {
                  v10 = v30 - 1;
                  goto LABEL_11;
                }
              }
            }
          }
        }
      }
    }
    swift_release();
    swift_task_dealloc();
    sub_23F3666C4();
    v31 = sub_23F5C2F20();
    return sub_23F5C2E5C(v31, v32);
  }
  return result;
}

uint64_t sub_23F5C25A4()
{
  uint64_t v0;

  sub_23F5C2DD8(*(_QWORD *)(v0 + 128));
  swift_release();
  swift_task_dealloc();
  sub_23F3666C4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Dictionary.asyncMapValues<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v10;

  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  sub_23F61C730();
  v7[10] = sub_23F366578();
  v7[11] = *(_QWORD *)(a4 - 8);
  v7[12] = sub_23F366578();
  v7[13] = *(_QWORD *)(a5 - 8);
  v7[14] = sub_23F366578();
  v7[15] = swift_getTupleTypeMetadata2();
  v10 = sub_23F61C730();
  v7[16] = v10;
  v7[17] = *(_QWORD *)(v10 - 8);
  v7[18] = sub_23F366654();
  v7[19] = swift_task_alloc();
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F5C26C0()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;

  sub_23F3836F0();
  v1 = v0[5];
  v0[2] = sub_23F61BFA4();
  v2 = v0[5];
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = 0;
    v4 = 0;
    v5 = 0;
    v1 = sub_23F61CA3C() | 0x8000000000000000;
  }
  else
  {
    v3 = (_QWORD *)(v2 + 64);
    v6 = -1 << *(_BYTE *)(v2 + 32);
    v4 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(v2 + 64);
  }
  v0[20] = v1;
  v0[21] = v3;
  v9 = v0[15];
  v10 = v0[13];
  v11 = v0[11];
  v0[23] = 0;
  v0[24] = v5;
  v0[22] = v4;
  sub_23F617BA0();
  if ((v1 & 0x8000000000000000) != 0)
  {
    if (sub_23F61CA48())
    {
      sub_23F61CC34();
      swift_unknownObjectRelease();
      sub_23F61CC34();
      swift_unknownObjectRelease();
      v17 = 0;
      v12 = 0;
    }
    else
    {
      v12 = 0;
      v17 = 1;
    }
    v14 = v5;
  }
  else
  {
    if (v5)
    {
      v34 = v9;
      v12 = 0;
      v13 = __clz(__rbit64(v5));
      v14 = (v5 - 1) & v5;
LABEL_10:
      v15 = v0[18];
      v16 = v0[7];
      (*(void (**)(uint64_t, unint64_t, _QWORD))(v11 + 16))(v15, *(_QWORD *)(v1 + 48) + *(_QWORD *)(v11 + 72) * v13, v0[6]);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(v15 + *(int *)(v34 + 48), *(_QWORD *)(v1 + 56) + *(_QWORD *)(v10 + 72) * v13, v16);
      v17 = 0;
      goto LABEL_21;
    }
    v18 = v4 + 64;
    if ((unint64_t)(v4 + 64) <= 0x7F)
    {
      v12 = 0;
      v14 = 0;
LABEL_20:
      v17 = 1;
      goto LABEL_21;
    }
    v19 = v3[1];
    if (v19)
    {
      v34 = v9;
      v12 = 1;
LABEL_16:
      v14 = (v19 - 1) & v19;
      v13 = __clz(__rbit64(v19)) + (v12 << 6);
      goto LABEL_10;
    }
    if (v18 < 0xC0)
    {
      v14 = 0;
      v17 = 1;
      v12 = 1;
    }
    else
    {
      v19 = v3[2];
      if (v19)
      {
        v34 = v9;
        v12 = 2;
        goto LABEL_16;
      }
      if (v18 >= 0x100)
      {
        v19 = v3[3];
        if (v19)
        {
          v34 = v9;
          v12 = 3;
          goto LABEL_16;
        }
        v32 = v18 >> 6;
        v33 = 4;
        while (v33 < v32)
        {
          v19 = v3[v33++];
          if (v19)
          {
            v34 = v9;
            v12 = v33 - 1;
            goto LABEL_16;
          }
        }
        v14 = 0;
        v12 = v32 - 1;
        goto LABEL_20;
      }
      v14 = 0;
      v17 = 1;
      v12 = 2;
    }
  }
LABEL_21:
  v0[25] = v12;
  v0[26] = v14;
  v21 = v0[18];
  v20 = v0[19];
  v22 = v0[16];
  v23 = v0[17];
  v24 = v0[15];
  sub_23F36196C(v21, v17, 1, v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v20, v21, v22);
  if (sub_23F36195C(v20, 1, v24) == 1)
  {
    sub_23F382E18();
    sub_23F5C2F30();
    sub_23F3666C4();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23F3666E4();
    v25 = sub_23F5C2F20();
    return sub_23F5C2E5C(v25, v26);
  }
  else
  {
    sub_23F5C2E78();
    sub_23F5C2F0C();
    v28 = (_QWORD *)sub_23F5C2EF8();
    v29 = sub_23F5C2ED8(v28);
    return sub_23F5C2EBC(v29, v30, v31);
  }
}

uint64_t sub_23F5C29CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[11] + 8))(v2[12], v2[6]);
    swift_bridgeObjectRelease();
  }
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F5C2A3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  int64_t v30;
  int64_t v31;

  sub_23F3836F0();
  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[7];
  sub_23F5C2F48(v0[10], 0);
  sub_23F61C010();
  sub_23F61C01C();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6 = v0[25];
  v5 = v0[26];
  v0[23] = v6;
  v0[24] = v5;
  v7 = v0[20];
  if (v7 < 0)
  {
    if (sub_23F61CA48())
    {
      sub_23F61CC34();
      swift_unknownObjectRelease();
      sub_23F61CC34();
      swift_unknownObjectRelease();
      v15 = 0;
    }
    else
    {
      v15 = 1;
    }
    v10 = v6;
    v8 = v5;
    goto LABEL_14;
  }
  if (v5)
  {
    v8 = (v5 - 1) & v5;
    v9 = __clz(__rbit64(v5)) | (v6 << 6);
    v10 = v6;
LABEL_4:
    v11 = v0[18];
    v12 = v0[15];
    v13 = v0[13];
    v14 = v0[7];
    (*(void (**)(uint64_t, unint64_t, _QWORD))(v0[11] + 16))(v11, *(_QWORD *)(v7 + 48) + *(_QWORD *)(v0[11] + 72) * v9, v0[6]);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16))(v11 + *(int *)(v12 + 48), *(_QWORD *)(v7 + 56) + *(_QWORD *)(v13 + 72) * v9, v14);
    v15 = 0;
    goto LABEL_14;
  }
  v10 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  v16 = v0[22] + 64;
  if (v10 >= (uint64_t)(v16 >> 6))
  {
    v8 = 0;
    v15 = 1;
    v10 = v6;
  }
  else
  {
    v17 = v0[21];
    v18 = *(_QWORD *)(v17 + 8 * v10);
    if (v18)
    {
LABEL_10:
      v8 = (v18 - 1) & v18;
      v9 = __clz(__rbit64(v18)) + (v10 << 6);
      goto LABEL_4;
    }
    v30 = v16 >> 6;
    if (v6 + 2 >= v30)
    {
      v8 = 0;
LABEL_21:
      v15 = 1;
      goto LABEL_14;
    }
    v18 = *(_QWORD *)(v17 + 8 * (v6 + 2));
    if (v18)
    {
      v10 = v6 + 2;
      goto LABEL_10;
    }
    v31 = v6 + 3;
    if (v6 + 3 < v30)
    {
      v18 = *(_QWORD *)(v17 + 8 * v31);
      if (v18)
      {
        v10 = v6 + 3;
        goto LABEL_10;
      }
      while (1)
      {
        v10 = v31 + 1;
        if (__OFADD__(v31, 1))
          break;
        if (v10 >= v30)
        {
          v8 = 0;
          v10 = v30 - 1;
          goto LABEL_21;
        }
        v18 = *(_QWORD *)(v17 + 8 * v10);
        ++v31;
        if (v18)
          goto LABEL_10;
      }
LABEL_31:
      __break(1u);
      return result;
    }
    v8 = 0;
    v15 = 1;
    v10 = v6 + 2;
  }
LABEL_14:
  v0[25] = v10;
  v0[26] = v8;
  v20 = v0[18];
  v19 = v0[19];
  v22 = v0[16];
  v21 = v0[17];
  v23 = v0[15];
  sub_23F5C2F48(v20, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v19, v20, v22);
  if (sub_23F36195C(v19, 1, v23) == 1)
  {
    sub_23F382E18();
    sub_23F5C2F30();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23F3666E4();
    swift_task_dealloc();
    v24 = sub_23F5C2F20();
    return sub_23F5C2E5C(v24, v25);
  }
  else
  {
    sub_23F5C2E78();
    sub_23F5C2F0C();
    v26 = (_QWORD *)sub_23F5C2EF8();
    v27 = sub_23F5C2ED8(v26);
    return sub_23F5C2EBC(v27, v28, v29);
  }
}

uint64_t sub_23F5C2D2C()
{
  uint64_t v0;

  sub_23F3836F0();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 56));
  sub_23F382E18();
  sub_23F3666E4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F5C2DD8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E6FE48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F5C2E18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23F35D2E8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23F5C2E5C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23F5C2E78()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[13] + 32))(v0[14], v0[19] + *(int *)(v0[15] + 48), v0[7]);
}

uint64_t sub_23F5C2EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_23F5C2EBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23F5C2ED8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 216) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 80);
}

uint64_t sub_23F5C2EF8()
{
  return swift_task_alloc();
}

uint64_t sub_23F5C2F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v0, v1, v2);
}

uint64_t sub_23F5C2F20()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5C2F30()
{
  return swift_task_dealloc();
}

void sub_23F5C2F3C()
{
  sub_23F377AA0();
}

uint64_t sub_23F5C2F48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F36196C(a1, a2, 1, v2);
}

uint64_t sub_23F5C2F54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t result;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];

  v29 = sub_23F35D2E8(&qword_256E791B8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F362AAC();
  v5 = (uint64_t *)(v3 - v4);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - v7;
  v30 = MEMORY[0x24BEE4B00];
  sub_23F38231C(a1, v31);
  v9 = v31[0];
  v10 = v31[3];
  v11 = v31[4];
  v27 = v31[1];
  v28 = (unint64_t)(v31[2] + 64) >> 6;
  sub_23F617BA0();
  if (!v11)
    goto LABEL_3;
LABEL_2:
  v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  v13 = v12 | (v10 << 6);
  while (1)
  {
    v20 = *(_QWORD *)(v9 + 56);
    v21 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v13);
    v22 = *v21;
    v23 = v21[1];
    v24 = sub_23F618470();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(&v8[*(int *)(v29 + 48)], v20 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v13, v24);
    *(_QWORD *)v8 = v22;
    *((_QWORD *)v8 + 1) = v23;
    sub_23F435730((uint64_t)v8, (uint64_t)v5, &qword_256E791B8);
    sub_23F617BA0();
    sub_23F5C4248((uint64_t)&v30, v5);
    sub_23F3625D8((uint64_t)v5, &qword_256E791B8);
    if (v11)
      goto LABEL_2;
LABEL_3:
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v14 >= v28)
      goto LABEL_28;
    v15 = *(_QWORD *)(v27 + 8 * v14);
    if (!v15)
    {
      sub_23F5C49D4();
      if (v16 == v17)
        goto LABEL_28;
      sub_23F5C49C0();
      if (v15)
        goto LABEL_18;
      sub_23F5C49D4();
      if (v16 == v17)
        goto LABEL_28;
      sub_23F5C49C0();
      if (v15)
        goto LABEL_18;
      sub_23F5C49D4();
      if (v16 == v17)
        goto LABEL_28;
      sub_23F5C49C0();
      if (v15)
        goto LABEL_18;
      sub_23F5C49D4();
      if (v16 == v17)
        goto LABEL_28;
      sub_23F5C49C0();
      if (v15)
      {
LABEL_18:
        v14 = v18;
      }
      else
      {
        v14 = v19 + 5;
        if (v14 >= v28)
          goto LABEL_28;
        v15 = *(_QWORD *)(v27 + 8 * v14);
        if (!v15)
        {
          v25 = v10 + 7;
          while (v25 < v28)
          {
            v15 = *(_QWORD *)(v27 + 8 * v25++);
            if (v15)
            {
              v14 = v25 - 1;
              goto LABEL_19;
            }
          }
LABEL_28:
          swift_release();
          return v30;
        }
      }
    }
LABEL_19:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v14 << 6);
    v10 = v14;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  sub_23F3625D8((uint64_t)v5, &qword_256E791B8);
  result = swift_release();
  __break(1u);
  return result;
}

void sub_23F5C31BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a5;
  v39 = a3;
  v41 = a2;
  sub_23F35D2E8(qword_256E791C0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v38 = v8;
  sub_23F35D2E8(&qword_256E70268);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F38F964();
  v12 = v11 - v10;
  v13 = sub_23F61BBA8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F362AAC();
  v17 = v15 - v16;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v36 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v36 - v22;
  v24 = a1;
  v25 = a1;
  v26 = v41;
  sub_23F5C3790(v25, v41, a4, v12);
  if (sub_23F36195C(v12, 1, v13) != 1)
  {
    v31 = sub_23F383C64((uint64_t)v23, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
LABEL_8:
    v30 = v40;
    MEMORY[0x24266F0AC](v31);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
    v29 = 0;
    goto LABEL_9;
  }
  v36 = v13;
  v37 = v21;
  v27 = v17;
  v28 = v38;
  sub_23F3625D8(v12, &qword_256E70268);
  if (sub_23F5C3444(v24, v26, v39))
  {
    v29 = 1;
    v30 = v40;
LABEL_9:
    v35 = sub_23F61B95C();
    sub_23F36196C(v30, v29, 1, v35);
    goto LABEL_10;
  }
  sub_23F383E5C();
  sub_23F3687E4(v24, v26, a4);
  swift_bridgeObjectRelease();
  v32 = type metadata accessor for ParameterPromptMap(0);
  if (sub_23F36195C(v28, 1, v32) != 1)
  {
    v13 = v36;
    sub_23F383C64(v27, v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
    sub_23F3663AC(v28, type metadata accessor for ParameterPromptMap);
    v34 = (uint64_t)v37;
    v31 = sub_23F383C64((uint64_t)v37, v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
    v23 = (char *)v34;
    goto LABEL_8;
  }
  sub_23F3625D8(v28, qword_256E791C0);
  sub_23F52383C();
  sub_23F362D64();
  *(_QWORD *)v33 = v24;
  *(_QWORD *)(v33 + 8) = v26;
  *(_BYTE *)(v33 + 16) = 1;
  sub_23F383E5C();
  swift_willThrow();
LABEL_10:
  sub_23F362870();
}

BOOL sub_23F5C3444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  void (*v23)(uint64_t, uint64_t);
  _QWORD v25[2];

  sub_23F35D2E8(&qword_256E70C98);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F362838();
  type metadata accessor for RenderableTool();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F38F964();
  v11 = v10 - v9;
  v12 = sub_23F61B4F4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F362AAC();
  v16 = v14 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v25 - v18;
  sub_23F5C3A2C(a3, v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_23F3663AC(v11, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
    return 0;
  }
  sub_23F35D2E8(&qword_256E708E0);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v19, v11, v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v16, v19, v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v13 + 88))(v16, v12) != *MEMORY[0x24BEB8EC0])
  {
    v23 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v23(v16, v12);
    v23((uint64_t)v19, v12);
    return 0;
  }
  v25[0] = a1;
  v25[1] = a2;
  if (qword_256E6F100 != -1)
    swift_once();
  v20 = sub_23F35D2E8(&qword_256E70C90);
  sub_23F361498(v20, (uint64_t)qword_256E7DFA8);
  sub_23F440EE8();
  sub_23F5AB6E4(&qword_256E70CA8, &qword_256E70C90);
  sub_23F61C058();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  v21 = sub_23F35D2E8(&qword_256E70CB0);
  v22 = sub_23F36195C(v3, 1, v21) != 1;
  sub_23F3625D8(v3, &qword_256E70C98);
  return v22;
}

uint64_t sub_23F5C36B4()
{
  uint64_t v0;

  v0 = sub_23F35D2E8(&qword_256E74740);
  sub_23F3F3F64(v0, qword_256E7DF90);
  sub_23F361498(v0, (uint64_t)qword_256E7DF90);
  sub_23F35D2E8(&qword_256E74778);
  return sub_23F6186B0();
}

uint64_t sub_23F5C3730()
{
  uint64_t v0;

  v0 = sub_23F35D2E8(&qword_256E70C90);
  sub_23F3F3F64(v0, qword_256E7DFA8);
  sub_23F361498(v0, (uint64_t)qword_256E7DFA8);
  return MEMORY[0x24266BC38](7368801, 0xE300000000000000, MEMORY[0x24BEE1E08]);
}

uint64_t sub_23F5C3790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v8 = sub_23F35D2E8(qword_256E791C0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E7DFC0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a1;
  v32 = a2;
  if (qword_256E6F0F8 != -1)
    swift_once();
  v14 = sub_23F35D2E8(&qword_256E74740);
  sub_23F361498(v14, (uint64_t)qword_256E7DF90);
  sub_23F440EE8();
  sub_23F5AB6E4(&qword_256E74788, &qword_256E74740);
  sub_23F61C058();
  v15 = sub_23F35D2E8(&qword_256E7D858);
  if (sub_23F36195C((uint64_t)v13, 1, v15) == 1)
  {
    v16 = &qword_256E7DFC0;
    v17 = (uint64_t)v13;
  }
  else
  {
    swift_getKeyPath();
    sub_23F618704();
    swift_release();
    v18 = v31;
    v19 = v32;
    v20 = v33;
    v21 = v34;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
    v22 = MEMORY[0x24266F6AC](v18, v19, v20, v21);
    v24 = v23;
    swift_bridgeObjectRelease();
    sub_23F3687E4(v22, v24, a3);
    swift_bridgeObjectRelease();
    v25 = type metadata accessor for ParameterPromptMap(0);
    if (sub_23F36195C((uint64_t)v10, 1, v25) != 1)
    {
      v29 = sub_23F61BBA8();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(a4, v10, v29);
      sub_23F3663AC((uint64_t)v10, type metadata accessor for ParameterPromptMap);
      v27 = a4;
      v28 = 0;
      v26 = v29;
      return sub_23F36196C(v27, v28, 1, v26);
    }
    v16 = qword_256E791C0;
    v17 = (uint64_t)v10;
  }
  sub_23F3625D8(v17, v16);
  v26 = sub_23F61BBA8();
  v27 = a4;
  v28 = 1;
  return sub_23F36196C(v27, v28, 1, v26);
}

uint64_t sub_23F5C3A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RenderableTool();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23F5C3A70(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t *v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  _BYTE v96[4];
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v112 = a1;
  v107 = a4;
  v110 = a3;
  v6 = sub_23F619E98();
  v105 = *(_QWORD *)(v6 - 8);
  v106 = v6;
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v109 = v7;
  v8 = sub_23F61BBA8();
  v102 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  v103 = v8;
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v101 = v9;
  sub_23F35D2E8(qword_256E791C0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F362838();
  sub_23F35D2E8(&qword_256E6FD18);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  v111 = v12;
  v114 = sub_23F35D2E8(&qword_256E6FCD8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F362AAC();
  v108 = v14 - v15;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v104 = (uint64_t *)&v96[-v18];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (uint64_t *)&v96[-v20];
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = &v96[-v23];
  MEMORY[0x24BDAC7A8](v22);
  v113 = (uint64_t *)&v96[-v25];
  sub_23F35D2E8(&qword_256E7DFC0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F38F964();
  v29 = v28 - v27;
  v30 = a2[1];
  v115 = *a2;
  v116 = v30;
  if (qword_256E6F0F8 != -1)
    swift_once();
  v31 = sub_23F35D2E8(&qword_256E74740);
  sub_23F361498(v31, (uint64_t)qword_256E7DF90);
  sub_23F440EE8();
  sub_23F5AB6E4(&qword_256E74788, &qword_256E74740);
  sub_23F61C058();
  v32 = sub_23F35D2E8(&qword_256E7D858);
  if (sub_23F36195C(v29, 1, v32) == 1)
  {
    sub_23F3625D8(v29, &qword_256E7DFC0);
    v33 = v113;
    v34 = v114;
    v35 = (uint64_t)v113 + *(int *)(v114 + 48);
    v36 = a2[1];
    *v113 = *a2;
    v33[1] = v36;
    v37 = sub_23F6184B8();
    v38 = *(_QWORD *)(v37 - 8);
    sub_23F5C49E0(v35);
    v39 = (uint64_t)&v24[*(int *)(v34 + 48)];
    sub_23F5C49E0(v39);
    v40 = v111;
    sub_23F38431C((uint64_t)v111, v39, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 32));
    sub_23F5C49B0((uint64_t)v40);
    sub_23F383E5C();
    sub_23F372D54();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v35, v37);
  }
  else
  {
    swift_getKeyPath();
    sub_23F618704();
    swift_release();
    v41 = v115;
    v42 = v116;
    v43 = v117;
    v44 = v118;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v29, v32);
    v45 = MEMORY[0x24266F6AC](v41, v42, v43, v44);
    v47 = v46;
    swift_bridgeObjectRelease();
    sub_23F617BA0();
    sub_23F3687E4(v45, v47, v110);
    swift_bridgeObjectRelease();
    v48 = type metadata accessor for ParameterPromptMap(0);
    if (sub_23F36195C(v4, 1, v48) == 1)
    {
      sub_23F3625D8(v4, qword_256E791C0);
      sub_23F52383C();
      sub_23F362D64();
      *(_QWORD *)v49 = v45;
      *(_QWORD *)(v49 + 8) = v47;
      *(_BYTE *)(v49 + 16) = 1;
      swift_willThrow();
    }
    else
    {
      v110 = v45;
      v50 = v101;
      v51 = v102;
      v52 = v103;
      (*((void (**)(uint64_t, uint64_t, uint64_t))v102 + 2))(v101, v4, v103);
      sub_23F3663AC(v4, type metadata accessor for ParameterPromptMap);
      v53 = sub_23F61BB78();
      v99 = v54;
      v100 = v53;
      (*((void (**)(uint64_t, uint64_t))v51 + 1))(v50, v52);
      v55 = v109;
      sub_23F619088();
      v56 = v114;
      v57 = *(int *)(v114 + 48);
      v58 = (uint64_t)v21 + v57;
      v59 = (uint64_t)a2 + v57;
      v60 = a2[1];
      *v21 = *a2;
      v21[1] = v60;
      v61 = sub_23F6184B8();
      v103 = *(_QWORD *)(v61 - 8);
      v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 16);
      v101 = v59;
      v102 = v62;
      sub_23F38431C(v58, v59, v62);
      v63 = v104;
      sub_23F5C4958((uint64_t)v21, (uint64_t)v104);
      v64 = v108;
      sub_23F435730((uint64_t)v21, v108, &qword_256E6FCD8);
      swift_bridgeObjectRetain_n();
      sub_23F617BA0();
      v65 = sub_23F619E8C();
      v66 = sub_23F61C610();
      v67 = v66;
      if (os_log_type_enabled(v65, v66))
      {
        v68 = swift_slowAlloc();
        v97 = v67;
        v69 = v68;
        v98 = swift_slowAlloc();
        v115 = v98;
        *(_DWORD *)v69 = 136315394;
        v70 = *(int *)(v56 + 48);
        v71 = v113;
        v72 = (uint64_t)v113 + v70;
        v73 = (uint64_t)v63 + v70;
        v74 = (uint64_t)v63;
        v75 = *v63;
        v76 = *(_QWORD *)(v74 + 8);
        *v113 = v75;
        v71[1] = v76;
        v102(v72, v73, v61);
        v77 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
        sub_23F617BA0();
        v77(v72, v61);
        sub_23F37AE00(v75, v76, &v115);
        v119 = v78;
        sub_23F5C49A0();
        swift_bridgeObjectRelease();
        sub_23F3625D8(v108, &qword_256E6FCD8);
        sub_23F3625D8(v74, &qword_256E6FCD8);
        *(_WORD *)(v69 + 12) = 2080;
        sub_23F617BA0();
        sub_23F37AE00(v110, v47, &v115);
        v119 = v79;
        sub_23F5C49A0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23F35A000, v65, (os_log_type_t)v97, "[PromptMapperResolver] Resolving shadowed parameter %s to %s", (uint8_t *)v69, 0x16u);
        swift_arrayDestroy();
        sub_23F366530();
      }
      sub_23F3625D8(v64, &qword_256E6FCD8);
      sub_23F3625D8((uint64_t)v63, &qword_256E6FCD8);

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v55, v106);
      v80 = sub_23F35D2E8(&qword_256E791A8);
      v109 = swift_allocBox();
      v82 = (uint64_t *)&v81[*(int *)(v80 + 48)];
      v83 = (uint64_t)&v81[*(int *)(v80 + 64)];
      *v81 = 1;
      v84 = sub_23F35D2E8(&qword_256E70A48);
      v85 = swift_allocBox();
      v87 = v86;
      v88 = (uint64_t *)((char *)v86 + *(int *)(v84 + 48));
      v89 = sub_23F617D08();
      v90 = swift_allocBox();
      sub_23F383C64(v91, v107, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 16));
      *v87 = v90;
      v92 = v103;
      sub_23F5C49CC((uint64_t)v87, *MEMORY[0x24BE54918]);
      v93 = v99;
      *v88 = v100;
      v88[1] = v93;
      *v82 = v85;
      sub_23F5C49CC((uint64_t)v82, *MEMORY[0x24BE54938]);
      v94 = (uint64_t)v113 + *(int *)(v114 + 48);
      sub_23F38431C(v94, v101, v102);
      sub_23F38431C(v83, v94, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 32));
      v95 = v111;
      *v111 = v109;
      sub_23F5C49CC((uint64_t)v95, *MEMORY[0x24BE54970]);
      sub_23F5C49B0((uint64_t)v95);
      sub_23F372D54();
    }
  }
  sub_23F362870();
}

void sub_23F5C4248(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  char *v64;
  char *v65;
  char *v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v72 = a1;
  v3 = sub_23F6184B8();
  MEMORY[0x24BDAC7A8](v3);
  v64 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F61847C();
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v62 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E6FD30);
  MEMORY[0x24BDAC7A8](v7);
  v71 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F619E98();
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v66 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E70C98);
  MEMORY[0x24BDAC7A8](v11);
  v56 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F35D2E8(&qword_256E7DFC0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F35D2E8(&qword_256E791B8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = v17;
  v20 = *(int *)(v17 + 48);
  v21 = (char *)v19 + v20;
  v22 = (char *)a2 + v20;
  v24 = *a2;
  v23 = a2[1];
  v63 = a2;
  *v19 = v24;
  v19[1] = v23;
  v25 = sub_23F618470();
  v26 = *(_QWORD *)(v25 - 8);
  v67 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v68 = v22;
  v67(v21, v22, v25);
  v27 = *(void (**)(char *, uint64_t))(v26 + 8);
  sub_23F617BA0();
  v70 = v25;
  v57 = v27;
  v27(v21, v25);
  v65 = (char *)v24;
  v73 = (char *)v24;
  v74 = v23;
  if (qword_256E6F0F8 != -1)
    swift_once();
  v28 = sub_23F35D2E8(&qword_256E74740);
  sub_23F361498(v28, (uint64_t)qword_256E7DF90);
  sub_23F440EE8();
  sub_23F5AB6E4(&qword_256E74788, &qword_256E74740);
  sub_23F61C058();
  v29 = sub_23F35D2E8(&qword_256E7D858);
  if (sub_23F36195C((uint64_t)v15, 1, v29) == 1)
  {
    sub_23F3625D8((uint64_t)v15, &qword_256E7DFC0);
    v73 = v65;
    v74 = v23;
    if (qword_256E6F100 != -1)
      swift_once();
    v30 = sub_23F35D2E8(&qword_256E70C90);
    sub_23F361498(v30, (uint64_t)qword_256E7DFA8);
    sub_23F5AB6E4(&qword_256E70CA8, &qword_256E70C90);
    v31 = (uint64_t)v56;
    sub_23F61C058();
    v32 = sub_23F35D2E8(&qword_256E70CB0);
    if (sub_23F36195C(v31, 1, v32) != 1)
    {
      swift_bridgeObjectRelease();
      sub_23F3625D8(v31, &qword_256E70C98);
      return;
    }
    sub_23F3625D8(v31, &qword_256E70C98);
    v33 = (char *)v19 + *(int *)(v69 + 48);
    v34 = v70;
    v67(v33, v68, v70);
    v35 = (uint64_t)v71;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v71, v33, v34);
    sub_23F36196C(v35, 0, 1, v34);
  }
  else
  {
    swift_getKeyPath();
    sub_23F618704();
    swift_release();
    v36 = (uint64_t)v73;
    v37 = v74;
    v38 = v75;
    v39 = v76;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v15, v29);
    v40 = MEMORY[0x24266F6AC](v36, v37, v38, v39);
    v42 = v41;
    swift_bridgeObjectRelease();
    v43 = v66;
    sub_23F619088();
    swift_bridgeObjectRetain_n();
    sub_23F617BA0();
    v44 = sub_23F619E8C();
    v45 = sub_23F61C610();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = swift_slowAlloc();
      v56 = (char *)swift_slowAlloc();
      v73 = v56;
      *(_DWORD *)v46 = 136315394;
      sub_23F617BA0();
      sub_23F37AE00((uint64_t)v65, v23, (uint64_t *)&v73);
      v77 = v47;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 12) = 2080;
      sub_23F617BA0();
      sub_23F37AE00(v40, v42, (uint64_t *)&v73);
      v77 = v48;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23F35A000, v44, v45, "[PromptMapperResolver] Resolving shadowed parameter %s to %s", (uint8_t *)v46, 0x16u);
      v49 = v56;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v49, -1, -1);
      MEMORY[0x242670B70](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v58 + 8))(v66, v59);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v43, v59);
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v62, *MEMORY[0x24BE548D8], v61);
    v50 = v68;
    v51 = (char *)v19 + *(int *)(v69 + 48);
    v52 = v63[1];
    *v19 = *v63;
    v19[1] = v52;
    v53 = v70;
    v67(v51, v50, v70);
    sub_23F61844C();
    v57(v51, v53);
    v54 = (uint64_t)v71;
    sub_23F618458();
    sub_23F36196C(v54, 0, 1, v53);
  }
  sub_23F372C64();
}

uint64_t sub_23F5C4958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FCD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5C49A0()
{
  return sub_23F61C790();
}

uint64_t sub_23F5C49B0(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(a1, 0, 1, v1);
}

uint64_t sub_23F5C49CC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F5C49E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t StructuredContext.SiriRequestContext.mode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  unsigned int *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = sub_23F619E98();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v29 - v7;
  v9 = sub_23F618DC4();
  if (!v10)
  {
    sub_23F619124();
    v15 = sub_23F619E8C();
    v16 = sub_23F61C628();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)sub_23F366668();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_23F35A000, v15, v16, "No response mode", v17, 2u);
      sub_23F366530();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    goto LABEL_11;
  }
  v11 = v9;
  v12 = v10;
  v13 = v9 == 0x6C6E4F6563696F56 && v10 == 0xE900000000000079;
  if (!v13 && (sub_23F5C4E10() & 1) == 0)
  {
    v20 = v11 == 0x726F466563696F56 && v12 == 0xEC00000064726177;
    if (v20 || (sub_23F5C4E10() & 1) != 0)
    {
      sub_23F3837B0();
      v14 = (unsigned int *)MEMORY[0x24BE54EE8];
      goto LABEL_30;
    }
    v21 = v11 == 0x4679616C70736944 && v12 == 0xEE0064726177726FLL;
    if (v21 || (sub_23F5C4E10() & 1) != 0)
    {
      sub_23F3837B0();
      v14 = (unsigned int *)MEMORY[0x24BE54EF0];
      goto LABEL_30;
    }
    v22 = v11 == 0x4F79616C70736944 && v12 == 0xEB00000000796C6ELL;
    if (v22 || (sub_23F5C4E10() & 1) != 0)
    {
      sub_23F3837B0();
      v14 = (unsigned int *)MEMORY[0x24BE54EE0];
      goto LABEL_30;
    }
    sub_23F619124();
    sub_23F617BA0();
    v25 = sub_23F619E8C();
    v26 = sub_23F61C634();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)sub_23F366668();
      v30 = sub_23F366668();
      v32 = v30;
      *(_DWORD *)v27 = 136315138;
      v29 = v27 + 4;
      sub_23F617BA0();
      sub_23F37AE00(v11, v12, &v32);
      v31 = v28;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23F35A000, v25, v26, "Unknown response mode %s", v27, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
LABEL_11:
    v18 = sub_23F61A0D8();
    return sub_23F36196C(a1, 1, 1, v18);
  }
  sub_23F3837B0();
  v14 = (unsigned int *)MEMORY[0x24BE54F08];
LABEL_30:
  v23 = *v14;
  v24 = sub_23F61A0D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(a1, v23, v24);
  return sub_23F36196C(a1, 0, 1, v24);
}

uint64_t sub_23F5C4E10()
{
  return sub_23F61CC64();
}

uint64_t sub_23F5C4E20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F35D2E8(&qword_256E7DFE8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)&v28 - v5;
  v6 = sub_23F5C7304();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3838E4();
  v28 = v11;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v12);
  v30 = (char *)&v28 - v13;
  v34 = a1;
  v14 = sub_23F617468();
  sub_23F5C71B0(&qword_256E7DFF0, MEMORY[0x24BE68FE0]);
  v15 = sub_23F61C370();
  v33 = MEMORY[0x24BEE4AF8];
  sub_23F37C65C();
  v32 = a1;
  swift_retain();
  v31 = v14;
  result = sub_23F61C364();
  if (v15 < 0)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  if (v15)
  {
    sub_23F5C71B0(&qword_256E7DFF8, MEMORY[0x24BE68FE8]);
    do
    {
      sub_23F61C784();
      result = sub_23F5C7224();
      if (v17)
        goto LABEL_21;
      sub_23F383C64((uint64_t)v10, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
      v18 = v33;
      if ((sub_23F3B1CDC() & 1) == 0)
      {
        sub_23F5C71FC();
        v18 = v33;
      }
      v19 = *(_QWORD *)(v18 + 16);
      if (v19 >= *(_QWORD *)(v18 + 24) >> 1)
      {
        sub_23F5C71FC();
        v18 = v33;
      }
      *(_QWORD *)(v18 + 16) = v19 + 1;
      v20 = sub_23F5C7244();
      sub_23F383C64(v20, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
      v33 = v18;
    }
    while (--v15);
  }
  sub_23F5C71B0(&qword_256E7DFF8, MEMORY[0x24BE68FE8]);
  v21 = (uint64_t)v29;
  sub_23F5C72AC();
  sub_23F5C7224();
  v22 = v28;
  if (!v17)
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 32);
    do
    {
      v24 = (uint64_t)v30;
      v23(v30, v21, v6);
      sub_23F383C64(v22, v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
      sub_23F585638(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
      v25 = v33;
      if ((sub_23F3B1CDC() & 1) == 0)
      {
        sub_23F5C71FC();
        v25 = v33;
      }
      v26 = *(_QWORD *)(v25 + 16);
      if (v26 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        sub_23F5C71FC();
        v25 = v33;
      }
      *(_QWORD *)(v25 + 16) = v26 + 1;
      v27 = sub_23F5C7244();
      v23((char *)v27, v22, v6);
      v33 = v25;
      sub_23F5C72AC();
      sub_23F5C7224();
    }
    while (!v17);
  }
  swift_release();
  sub_23F3CFCB0(v21, &qword_256E7DFE8);
  return v33;
}

IntelligenceFlowPlannerRuntime::SmithWatermanTokenAligner __swiftcall SmithWatermanTokenAligner.init(gapPenalty:)(IntelligenceFlowPlannerRuntime::SmithWatermanTokenAligner gapPenalty)
{
  IntelligenceFlowPlannerRuntime::SmithWatermanTokenAligner *v1;

  v1->gapPenalty = gapPenalty.gapPenalty;
  return gapPenalty;
}

uint64_t SmithWatermanTokenAligner.Direction.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F5C5194 + 4 * byte_23F630420[*v0]))(120, 0xE100000000000000);
}

uint64_t sub_23F5C5194()
{
  return 9864930;
}

IntelligenceFlowPlannerRuntime::SmithWatermanTokenAligner::Direction_optional __swiftcall SmithWatermanTokenAligner.Direction.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (IntelligenceFlowPlannerRuntime::SmithWatermanTokenAligner::Direction_optional)rawValue;
}

uint64_t SmithWatermanTokenAligner.Direction.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

IntelligenceFlowPlannerRuntime::SmithWatermanTokenAligner::Direction_optional sub_23F5C51E4(Swift::Int *a1)
{
  return SmithWatermanTokenAligner.Direction.init(rawValue:)(*a1);
}

uint64_t sub_23F5C51EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SmithWatermanTokenAligner.Direction.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t SmithWatermanTokenAligner.AlignmentResult.alignedTokens.getter()
{
  return sub_23F617BA0();
}

uint64_t SmithWatermanTokenAligner.AlignmentResult.alignedTokens.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SmithWatermanTokenAligner.AlignmentResult.alignedTokens.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void SmithWatermanTokenAligner.AlignmentResult.lowerBound.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F5C72FC();
  sub_23F5C72DC();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F5C7204();
  if (v0)
  {
    sub_23F5C72BC(v3, v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
    sub_23F6174D4();
    sub_23F5C729C();
  }
  sub_23F383488();
}

void SmithWatermanTokenAligner.AlignmentResult.upperBound.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F5C72FC();
  sub_23F5C72DC();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F5C7204();
  if (v0)
  {
    sub_23F5C72BC(v3, v4+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * (v0 - 1));
    sub_23F6174D4();
    sub_23F5C729C();
  }
  sub_23F383488();
}

void SmithWatermanTokenAligner.align(_:to:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  double v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD v87[4];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v6 = v3;
  v89 = a1;
  v87[3] = a3;
  sub_23F35D2E8(&qword_256E7DFC8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v93 = v9;
  v10 = sub_23F5C7304();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3834D0();
  v87[1] = v12;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3838E4();
  v99 = v14;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3838E4();
  v87[2] = v16;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F3838E4();
  v100 = v18;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3838E4();
  v95 = v20;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F3838E4();
  v92 = v22;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3838E4();
  v96 = v24;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v87 - v26;
  v28 = sub_23F35D2E8(&qword_256E7DFD0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F36285C();
  v94 = v30;
  sub_23F35D2E8(&qword_256E7DFD8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (_QWORD *)((char *)v87 - v33);
  v35 = *v6;
  v36 = sub_23F5C4E20(a2);
  v88 = v4;
  v37 = 0;
  v38 = *(_QWORD *)(v36 + 16);
  v101 = MEMORY[0x24BEE4AF8];
  v102 = v10;
  v90 = MEMORY[0x24BEE4AF8];
  v91 = v36;
  v103 = v11;
  v97 = v38;
  while (1)
  {
    if (v37 == v38)
    {
      v39 = 1;
      v37 = v38;
    }
    else
    {
      if (v37 >= *(_QWORD *)(v36 + 16))
        goto LABEL_52;
      sub_23F383EB8();
      v42 = v94 + *(int *)(v28 + 48);
      sub_23F383C64(v42, v40 + v41 + *(_QWORD *)(v11 + 72) * v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 16));
      v43 = (uint64_t)v5 + *(int *)(v28 + 48);
      *v5 = v37;
      v44 = v42;
      v38 = v97;
      v11 = v103;
      sub_23F383C64(v43, v44, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 32));
      v39 = 0;
      ++v37;
    }
    sub_23F36196C((uint64_t)v5, v39, 1, v28);
    sub_23F5C5E50((uint64_t)v5, (uint64_t)v34);
    if (sub_23F36195C((uint64_t)v34, 1, v28) == 1)
    {
      v59 = v88;
      v60 = sub_23F5C4E20(v89);
      v88 = v59;
      v61 = MEMORY[0x24BEE4AF8];
      v106 = MEMORY[0x24BEE4AF8];
      v62 = *(_QWORD *)(v60 + 16);
      if (!v62)
        goto LABEL_30;
      v63 = 0;
      v64 = v92;
      while (v63 < *(_QWORD *)(v60 + 16))
      {
        v65 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
        v66 = *(_QWORD *)(v11 + 72);
        sub_23F383C64(v64, v60 + v65 + v66 * v63, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
        if ((sub_23F6174C8() & 1) != 0)
        {
          v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
          v67(v95, v64, v10);
          v68 = v106;
          if ((sub_23F3B1CDC() & 1) == 0)
          {
            sub_23F5C71FC();
            v68 = v106;
          }
          v69 = *(_QWORD *)(v68 + 16);
          if (v69 >= *(_QWORD *)(v68 + 24) >> 1)
          {
            sub_23F5C71FC();
            v68 = v106;
          }
          *(_QWORD *)(v68 + 16) = v69 + 1;
          v70 = v68 + v65 + v69 * v66;
          v10 = v102;
          v67(v70, v95, v102);
          v106 = v68;
          v11 = v103;
          v64 = v92;
        }
        else
        {
          sub_23F585638(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
        }
        if (v62 == ++v63)
        {
          v61 = v106;
LABEL_30:
          swift_bridgeObjectRelease();
          v106 = v35;
          v71 = sub_23F3668F4();
          v94 = v61;
          sub_23F5C5E98(v71, v61);
          v73 = v72;
          v98 = v74;
          swift_bridgeObjectRelease();
          v75 = *(_QWORD *)(v73 + 16);
          if (v75)
          {
            v76 = 0;
            v77 = 0;
            v78 = 0;
            v79 = -INFINITY;
            do
            {
              v80 = *(_QWORD *)(v73 + 32 + 8 * v78);
              v81 = *(_QWORD *)(v80 + 16);
              if (v81)
              {
                v82 = 0;
                v83 = v80 + 32;
                do
                {
                  v84 = *(double *)(v83 + 8 * v82);
                  if (v79 < v84)
                    v76 = v82;
                  v85 = v82 + 1;
                  if (v79 < v84)
                  {
                    v79 = *(double *)(v83 + 8 * v82);
                    v77 = v78;
                  }
                  ++v82;
                }
                while (v81 != v85);
              }
              ++v78;
            }
            while (v78 != v75);
          }
          else
          {
            v76 = 0;
            v77 = 0;
          }
          v89 = v73;
          v105 = MEMORY[0x24BEE4AF8];
          v106 = MEMORY[0x24BEE4AF8];
          v104 = MEMORY[0x24BEE4AF8];
          if ((v77 & 0x8000000000000000) != 0)
          {
            __break(1u);
            JUMPOUT(0x23F5C5BDCLL);
          }
          v97 = v98 + 32;
          if (v77 >= *(_QWORD *)(v98 + 16))
          {
            __break(1u);
          }
          else if ((v76 & 0x8000000000000000) == 0)
          {
            v86 = *(_QWORD *)(v97 + 8 * v77);
            if (v76 < *(_QWORD *)(v86 + 16))
              __asm { BR              X9 }
LABEL_50:
            __break(1u);
            JUMPOUT(0x23F5C5DC8);
          }
          __break(1u);
          goto LABEL_50;
        }
      }
      __break(1u);
LABEL_52:
      __break(1u);
      JUMPOUT(0x23F5C5DFCLL);
    }
    v98 = *v34;
    sub_23F384488((uint64_t)v27, (uint64_t)v34 + *(int *)(v28 + 48));
    if ((sub_23F6174C8() & 1) != 0)
    {
      sub_23F383C64(v96, (uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
      v45 = v101;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F3C0670();
        sub_23F3781A0();
        v45 = v55;
      }
      v46 = v90;
      v48 = *(_QWORD *)(v45 + 16);
      v47 = *(_QWORD *)(v45 + 24);
      v101 = v45;
      if (v48 >= v47 >> 1)
      {
        sub_23F5C7328(v47);
        sub_23F3781A0();
        v101 = v56;
      }
      *(_QWORD *)(v101 + 16) = v48 + 1;
      sub_23F383EB8();
      v52 = v50 + v49 + *(_QWORD *)(v51 + 72) * v48;
      v10 = v102;
      sub_23F384488(v52, v96);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F3C0670();
        sub_23F377218();
        v46 = v57;
      }
      v54 = *(_QWORD *)(v46 + 16);
      v53 = *(_QWORD *)(v46 + 24);
      if (v54 >= v53 >> 1)
      {
        sub_23F5C7328(v53);
        sub_23F377218();
        v46 = v58;
      }
      *(_QWORD *)(v46 + 16) = v54 + 1;
      v90 = v46;
      v38 = v97;
      *(_QWORD *)(v46 + 8 * v54 + 32) = v98;
      v11 = v103;
    }
    sub_23F585638(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    v36 = v91;
  }
}

uint64_t sub_23F5C5E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E7DFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23F5C5E98(uint64_t a1, uint64_t a2)
{
  double *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t *v71;
  double v72;

  v5 = sub_23F5C72FC();
  v6 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  v64 = v6;
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3834D0();
  v62 = v7;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v8);
  v61 = (char *)&v56 - v9;
  v10 = *v2;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a2 + 16);
  v13 = sub_23F5C62EC(v12 + 1, 0.0);
  v14 = sub_23F5C645C(v13, v11 + 1, &qword_256E700D8);
  v15 = sub_23F5C63A4(0, v12 + 1);
  v16 = sub_23F5C645C(v15, v11 + 1, &qword_256E700C8);
  v58 = v11;
  if (v11 && v12)
  {
    v17 = (unint64_t *)(v14 + 16);
    if (!*(_QWORD *)(v14 + 16))
      goto LABEL_38;
    v18 = 0;
    sub_23F383EB8();
    v20 = a1 + v19;
    v57 = a2 + v19;
    v59 = *(_QWORD *)(v21 + 72);
    v60 = v12 - 1;
    v22 = 1;
    v56 = v20;
    v66 = v20;
    while (1)
    {
      v23 = 0;
      v24 = v18;
      v25 = v57;
      v67 = v22;
      v65 = v18;
      while (1)
      {
        v26 = v14 + 32;
        v27 = *(_QWORD *)(v14 + 32 + 8 * v24);
        if (v23 >= *(_QWORD *)(v27 + 16))
        {
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return;
        }
        v69 = v16;
        v70 = v14;
        v28 = *(double *)(v27 + 8 * v23 + 32);
        v30 = v63;
        v29 = v64;
        v31 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
        v32 = v61;
        v31(v61, v66, v63);
        v33 = v62;
        v68 = v25;
        v31(v62, v25, v30);
        v72 = v10;
        v34 = sub_23F6174B0();
        v71 = v17;
        v36 = v35;
        v37 = sub_23F6174B0();
        sub_23F5C6540(v34, v36, v37, v38);
        v40 = v39;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = *(_QWORD *)(v29 + 8);
        ((void (*)(char *, uint64_t))v41)(v33, v30);
        v42 = v32;
        v18 = v67;
        ((void (*)(char *, uint64_t))v41)(v42, v30);
        if (v18 >= *v71)
          goto LABEL_41;
        v43 = *(_QWORD *)(v26 + 8 * v18);
        if (v23 >= *(_QWORD *)(v43 + 16))
          goto LABEL_42;
        v44 = v23 + 1;
        v24 = v65;
        v45 = *(_QWORD *)(v26 + 8 * v65);
        if (v23 + 1 >= *(_QWORD *)(v45 + 16))
          goto LABEL_43;
        v46 = v28 + 1.0 - v40;
        v47 = *(double *)(v43 + 8 * v23 + 32) - v10;
        v48 = *(double *)(v45 + 8 * v23 + 40) - v10;
        if (v46 <= 0.0)
        {
          v16 = v69;
          v14 = v70;
          if (v47 <= 0.0)
          {
            if (v48 <= 0.0)
            {
              v49 = 0;
              v48 = 0.0;
              if ((sub_23F3849CC() & 1) != 0)
                goto LABEL_21;
              goto LABEL_35;
            }
LABEL_20:
            v49 = 3;
            if ((sub_23F3849CC() & 1) != 0)
              goto LABEL_21;
            goto LABEL_35;
          }
        }
        else
        {
          v16 = v69;
          v14 = v70;
          if (v46 >= v47)
          {
            if (v46 < v48)
              goto LABEL_20;
            v49 = 1;
            v48 = v46;
            if ((sub_23F3849CC() & 1) != 0)
            {
              v48 = v46;
              goto LABEL_21;
            }
            goto LABEL_35;
          }
        }
        if (v47 < v48)
          goto LABEL_20;
        v49 = 2;
        v48 = *(double *)(v43 + 8 * v23 + 32) - v10;
        if ((sub_23F3849CC() & 1) != 0)
        {
          v48 = v47;
          goto LABEL_21;
        }
LABEL_35:
        sub_23F492568();
        v14 = v52;
LABEL_21:
        v17 = (unint64_t *)(v14 + 16);
        if (v18 >= *(_QWORD *)(v14 + 16))
          goto LABEL_44;
        v50 = sub_23F5C7310();
        *(_QWORD *)(v14 + 32 + 8 * v18) = v41;
        if ((v50 & 1) == 0)
        {
          sub_23F492558();
          v41 = v53;
          *(_QWORD *)(v14 + 32 + 8 * v18) = v53;
        }
        if (v44 >= *(_QWORD *)(v41 + 16))
          goto LABEL_45;
        *(double *)(v41 + 8 * v23 + 40) = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F492548();
          v16 = v54;
        }
        if (v18 >= *(_QWORD *)(v16 + 16))
          goto LABEL_46;
        v51 = sub_23F5C7310();
        *(_QWORD *)(v16 + 32 + 8 * v18) = v41;
        if ((v51 & 1) == 0)
        {
          sub_23F492538();
          v41 = v55;
          *(_QWORD *)(v16 + 32 + 8 * v18) = v55;
        }
        if (v44 >= *(_QWORD *)(v41 + 16))
          goto LABEL_47;
        *(_BYTE *)(v41 + v23 + 33) = v49;
        if (v60 == v23)
          break;
        ++v23;
        v25 = v68 + v59;
        if (v18 > *v17)
          goto LABEL_38;
      }
      if (v18 == v58)
        return;
      v22 = v18 + 1;
      v66 = v56 + v59 * v18;
      v17 = (unint64_t *)(v14 + 16);
      if (v18 >= *(_QWORD *)(v14 + 16))
      {
LABEL_38:
        __break(1u);
        return;
      }
    }
  }
}

uint64_t sub_23F5C62EC(uint64_t a1, double a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  if (a1 < 0)
  {
    result = sub_23F61CA54();
    __break(1u);
  }
  else if (a1)
  {
    result = sub_23F61C418();
    v5 = 0;
    *(_QWORD *)(result + 16) = a1;
    do
    {
      v6 = result + 8 * v5++;
      *(double *)(v6 + 32) = a2;
    }
    while (a1 != v5);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_23F5C63A4(int a1, size_t a2)
{
  uint64_t v4;
  uint64_t result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_23F61CA54();
    __break(1u);
  }
  else
  {
    if (!a2)
      return MEMORY[0x24BEE4AF8];
    v4 = sub_23F61C418();
    *(_QWORD *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return v4;
  }
  return result;
}

uint64_t sub_23F5C645C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_23F61CA54();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_23F35D2E8(a3);
      v5 = (_QWORD *)sub_23F61C418();
      v6 = v5;
      v5[2] = a2;
      v5[4] = a1;
      if (a2 != 1)
      {
        v5[5] = a1;
        v7 = a2 - 2;
        if (v7)
        {
          v8 = v5 + 6;
          do
          {
            *v8++ = a1;
            sub_23F3668F4();
            --v7;
          }
          while (v7);
        }
        sub_23F3668F4();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    return (uint64_t)v6;
  }
  return result;
}

uint64_t sub_23F5C6540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t result;
  uint64_t inited;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  double v29;
  char v31;
  double v32;
  double v33;
  double v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;

  v8 = sub_23F61C238();
  if (v8 < sub_23F5C71F0())
    return sub_23F5C6540(a3, a4, a1, a2);
  if (!sub_23F5C71F0())
    return sub_23F5C7354();
  sub_23F35D2E8(&qword_256E70318);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E980;
  *(double *)(inited + 32) = (double)sub_23F5C7354();
  *(double *)(inited + 40) = (double)sub_23F5C71F0();
  sub_23F385AE4(inited);
  v12 = v11;
  result = swift_setDeallocating();
  if ((v12 & 1) == 0)
  {
    result = sub_23F5C71F0();
    if (__OFADD__(result, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    sub_23F54316C(0.0, (double)(result + 1), 1.0);
    v14 = v13;
    sub_23F617BA0();
    result = sub_23F61C2A4();
    if (v15)
    {
      v16 = result;
      v17 = v15;
      v18 = 0;
      while (1)
      {
        v19 = v18 + 1;
        if (__OFADD__(v18, 1))
          break;
        v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_23F61E7E0;
        *(double *)(v20 + 32) = (double)v18 + 1.0;
        sub_23F3668F4();
        result = sub_23F61C2A4();
        if (v21)
        {
          v22 = result;
          v23 = v21;
          v24 = 0;
          while (v24 + 1 < *(_QWORD *)(v14 + 16))
          {
            if (v24 >= *(_QWORD *)(v20 + 16))
              goto LABEL_37;
            v25 = v14 + 8 * v24;
            v26 = *(double *)(v25 + 32);
            v27 = *(double *)(v25 + 40) + 1.0;
            v28 = v20 + 8 * v24;
            if (*(double *)(v28 + 32) + 1.0 >= v27)
              v29 = v27;
            else
              v29 = *(double *)(v28 + 32) + 1.0;
            if (v16 == v22 && v17 == v23)
            {
              swift_bridgeObjectRelease();
              v32 = 0.0;
            }
            else
            {
              v31 = sub_23F61CC64();
              swift_bridgeObjectRelease();
              if ((v31 & 1) != 0)
                v32 = 0.0;
              else
                v32 = 1.0;
            }
            v33 = v26 + v32;
            if (v33 >= v29)
              v34 = v29;
            else
              v34 = v33;
            v35 = *(_QWORD *)(v20 + 16);
            if (v35 >= *(_QWORD *)(v20 + 24) >> 1)
            {
              sub_23F376CA4();
              v20 = v37;
            }
            *(_QWORD *)(v20 + 16) = v35 + 1;
            *(double *)(v20 + 8 * v35 + 32) = v34;
            result = sub_23F61C2A4();
            v22 = result;
            v23 = v36;
            ++v24;
            if (!v36)
              goto LABEL_30;
          }
          __break(1u);
LABEL_37:
          __break(1u);
          break;
        }
LABEL_30:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = sub_23F61C2A4();
        v16 = result;
        v17 = v38;
        v18 = v19;
        v14 = v20;
        if (!v38)
          goto LABEL_34;
      }
      __break(1u);
      goto LABEL_39;
    }
    v20 = v14;
LABEL_34:
    swift_bridgeObjectRelease();
    sub_23F3F15F0(v20);
    v40 = v39;
    result = swift_bridgeObjectRelease();
    if ((v40 & 1) != 0)
      goto LABEL_40;
  }
  return result;
}

uint64_t sub_23F5C688C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char v18;
  unint64_t v19;

  if (result < 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v7 = result;
  v8 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (__OFADD__(v6, v9))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v6 + v9 > *(_QWORD *)(v5 + 24) >> 1)
  {
    sub_23F377800();
    v5 = v12;
    *v3 = v12;
  }
  v13 = v5 + 32 + 40 * v7;
  sub_23F35D2E8(&qword_256E70420);
  result = swift_arrayDestroy();
  if (!v9)
  {
LABEL_13:
    v18 = 0;
    v19 = v5 + 40 * v7 - 8;
    while ((v18 & 1) == 0)
    {
      v19 += 40;
      result = sub_23F361418(a3, v19);
      v18 = 1;
      if (v19 >= v13)
        return sub_23F3CFCB0(a3, &qword_256E7E000);
    }
    __break(1u);
    goto LABEL_18;
  }
  v14 = *(_QWORD *)(v5 + 16);
  if (__OFSUB__(v14, a2))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  result = sub_23F37A92C(v5 + 32 + 40 * a2, v14 - a2, v13 + 40);
  v15 = *(_QWORD *)(v5 + 16);
  v16 = __OFADD__(v15, v9);
  v17 = v15 + v9;
  if (!v16)
  {
    *(_QWORD *)(v5 + 16) = v17;
    goto LABEL_13;
  }
LABEL_24:
  __break(1u);
  return result;
}

void sub_23F5C69F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = a1 - a2;
  if (__OFSUB__(0, v6))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v5, v7))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v5 - v6 > *(_QWORD *)(v4 + 24) >> 1)
  {
    sub_23F377E30();
    v4 = v8;
  }
  v9 = *(_QWORD *)(sub_23F618C20() - 8);
  v10 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v11 = *(_QWORD *)(v9 + 72);
  swift_arrayDestroy();
  if (!v6)
    goto LABEL_13;
  v12 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v12, a2))
    goto LABEL_19;
  sub_23F37ABC8(v10 + v11 * a2, v12 - a2);
  v13 = *(_QWORD *)(v4 + 16);
  v14 = __OFADD__(v13, v7);
  v15 = v13 - v6;
  if (!v14)
  {
    *(_QWORD *)(v4 + 16) = v15;
LABEL_13:
    *v2 = v4;
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_23F5C6B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  char v21;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (__OFADD__(v6, v9))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v6 + v9 > *(_QWORD *)(v5 + 24) >> 1)
  {
    sub_23F3781A0();
    v5 = v11;
    *v3 = v11;
  }
  v12 = sub_23F6174EC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = v5 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v14 + v15 * a1;
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_13;
  v17 = *(_QWORD *)(v5 + 16);
  if (__OFSUB__(v17, a2))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_23F37ACF8(v14 + v15 * a2, v17 - a2);
  v18 = *(_QWORD *)(v5 + 16);
  v19 = __OFADD__(v18, v9);
  v20 = v18 + v9;
  if (!v19)
  {
    *(_QWORD *)(v5 + 16) = v20;
LABEL_13:
    if (v15 < 1)
    {
LABEL_17:
      sub_23F3CFCB0(a3, &qword_256E7DFC8);
      return;
    }
    v21 = 0;
    while ((v21 & 1) == 0)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v14 + v15 * a1, a3, v12);
      v14 += v15;
      v21 = 1;
      if (v14 + v15 * (a1 - 1) >= v16)
        goto LABEL_17;
    }
    goto LABEL_24;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_23F5C6C9C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = result;
  v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 + v10 > *(_QWORD *)(v6 + 24) >> 1)
  {
    sub_23F376C88();
    v6 = v13;
  }
  v14 = v6 + 32 + 16 * v8;
  result = swift_arrayDestroy();
  if (!v10)
    goto LABEL_13;
  v15 = *(_QWORD *)(v6 + 16);
  if (__OFSUB__(v15, a2))
    goto LABEL_19;
  result = (uint64_t)sub_23F37A280((char *)(v6 + 32 + 16 * a2), v15 - a2, (char *)(v14 + 16));
  v16 = *(_QWORD *)(v6 + 16);
  v17 = __OFADD__(v16, v10);
  v18 = v16 + v10;
  if (!v17)
  {
    *(_QWORD *)(v6 + 16) = v18;
LABEL_13:
    *(_QWORD *)v14 = a3;
    *(_QWORD *)(v14 + 8) = a4;
    *v4 = v6;
    return result;
  }
LABEL_20:
  __break(1u);
  return result;
}

unint64_t sub_23F5C6DB4()
{
  unint64_t result;

  result = qword_256E7DFE0;
  if (!qword_256E7DFE0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for SmithWatermanTokenAligner.Direction, &type metadata for SmithWatermanTokenAligner.Direction);
    atomic_store(result, (unint64_t *)&qword_256E7DFE0);
  }
  return result;
}

void type metadata accessor for SmithWatermanTokenAligner()
{
  sub_23F362C18();
}

uint64_t storeEnumTagSinglePayload for SmithWatermanTokenAligner.Direction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F5C6E48 + 4 * byte_23F630429[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F5C6E7C + 4 * byte_23F630424[v4]))();
}

uint64_t sub_23F5C6E7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5C6E84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5C6E8CLL);
  return result;
}

uint64_t sub_23F5C6E98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5C6EA0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23F5C6EA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5C6EAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SmithWatermanTokenAligner.Direction()
{
  sub_23F362C18();
}

uint64_t destroy for SmithWatermanTokenAligner.AlignmentResult()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SmithWatermanTokenAligner.AlignmentResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

_QWORD *assignWithCopy for SmithWatermanTokenAligner.AlignmentResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for TrialEnrollment(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SmithWatermanTokenAligner.AlignmentResult(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SmithWatermanTokenAligner.AlignmentResult(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SmithWatermanTokenAligner.AlignmentResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SmithWatermanTokenAligner.AlignmentResult()
{
  sub_23F362C18();
}

uint64_t sub_23F5C71B0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23F617468();
    result = MEMORY[0x242670A44](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F5C71F0()
{
  return sub_23F61C238();
}

void sub_23F5C71FC()
{
  sub_23F37C65C();
}

uint64_t sub_23F5C7224()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36195C(v1, 1, v0);
}

unint64_t sub_23F5C7244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return v0
       + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
       + *(_QWORD *)(v1 + 72) * v2;
}

void sub_23F5C7260()
{
  uint64_t v0;

  sub_23F5C6B04(0, 0, v0);
}

uint64_t sub_23F5C7274()
{
  return 0;
}

uint64_t sub_23F5C7284(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void sub_23F5C728C()
{
  JUMPOUT(0x24266F838);
}

uint64_t sub_23F5C729C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F5C72AC()
{
  return sub_23F61C784();
}

uint64_t sub_23F5C72BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, a2, v2);
}

uint64_t sub_23F5C72CC()
{
  return 0;
}

uint64_t sub_23F5C72F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 - 192))(a1, *(_QWORD *)(v2 - 200), v1);
}

uint64_t sub_23F5C72FC()
{
  return sub_23F6174EC();
}

uint64_t sub_23F5C7304()
{
  return sub_23F6174EC();
}

uint64_t sub_23F5C7310()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F5C731C()
{
  return sub_23F61C238();
}

BOOL sub_23F5C7328@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_23F5C7348()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(v0, *(_QWORD *)(v2 - 144));
}

uint64_t sub_23F5C7354()
{
  return sub_23F61C238();
}

uint64_t SNLPLLMPlannerResponse.planEvents.getter()
{
  return sub_23F617BA0();
}

uint64_t SNLPLLMPlannerResponse.planEvents.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*SNLPLLMPlannerResponse.planEvents.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

IntelligenceFlowPlannerRuntime::SNLPLLMPlannerResponse __swiftcall SNLPLLMPlannerResponse.init(planEvents:)(IntelligenceFlowPlannerRuntime::SNLPLLMPlannerResponse planEvents)
{
  IntelligenceFlowPlannerRuntime::SNLPLLMPlannerResponse *v1;

  v1->planEvents._rawValue = planEvents.planEvents._rawValue;
  return planEvents;
}

uint64_t sub_23F5C73A8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E6576456E616C70 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F5C7438()
{
  return 0x6E6576456E616C70;
}

uint64_t sub_23F5C7458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F5C73A8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F5C7480()
{
  sub_23F5C75C8();
  return sub_23F61CDC0();
}

uint64_t sub_23F5C74A8()
{
  sub_23F5C75C8();
  return sub_23F61CDCC();
}

void SNLPLLMPlannerResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23F35D2E8(&qword_256E7E008);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F362930();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5C75C8();
  sub_23F44D4B8();
  sub_23F35D2E8(&qword_256E7E018);
  sub_23F5C7760(&qword_256E7E020, &qword_256E7E028, (uint64_t)&protocol conformance descriptor for SNLPLLMResponsePlanEvent, MEMORY[0x24BEE12A0]);
  sub_23F61CBE0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  sub_23F362870();
}

unint64_t sub_23F5C75C8()
{
  unint64_t result;

  result = qword_256E7E010;
  if (!qword_256E7E010)
  {
    result = MEMORY[0x242670A44](&unk_23F630844, &type metadata for SNLPLLMPlannerResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E010);
  }
  return result;
}

uint64_t type metadata accessor for SNLPLLMResponsePlanEvent()
{
  uint64_t result;

  result = qword_256E7E0B8;
  if (!qword_256E7E0B8)
    return swift_getSingletonMetadata();
  return result;
}

void SNLPLLMPlannerResponse.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F35D2E8(&qword_256E7E030);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F383EC4();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5C75C8();
  sub_23F61CD84();
  if (!v2)
  {
    sub_23F35D2E8(&qword_256E7E018);
    sub_23F5C7760(&qword_256E7E038, &qword_256E7E040, (uint64_t)&protocol conformance descriptor for SNLPLLMResponsePlanEvent, MEMORY[0x24BEE12D0]);
    sub_23F61CB44();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
    *a2 = v8;
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
  sub_23F362870();
}

uint64_t sub_23F5C7760(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_23F35EB74(&qword_256E7E018);
    v10 = sub_23F3CFCEC(a2, (uint64_t (*)(uint64_t))type metadata accessor for SNLPLLMResponsePlanEvent, a3);
    result = MEMORY[0x242670A44](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23F5C77E4(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  SNLPLLMPlannerResponse.init(from:)(a1, a2);
}

void sub_23F5C77F8(_QWORD *a1)
{
  SNLPLLMPlannerResponse.encode(to:)(a1);
}

uint64_t SNLPLLMResponsePlanEvent.transcriptEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23F50760C();
  return sub_23F3F9C0C(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t SNLPLLMResponsePlanEvent.transcriptEvent.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23F50760C();
  return sub_23F3F9C0C(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*SNLPLLMResponsePlanEvent.transcriptEvent.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SNLPLLMResponsePlanEvent.planText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(sub_23F5C8674() + 20));
  sub_23F617BA0();
  return v1;
}

void SNLPLLMResponsePlanEvent.planText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(sub_23F5C8674() + 20));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  sub_23F362B80();
}

uint64_t (*SNLPLLMResponsePlanEvent.planText.modify())(_QWORD, _QWORD)
{
  sub_23F5C8674();
  return nullsub_1;
}

void SNLPLLMResponsePlanEvent.init(transcriptEvent:planText:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = sub_23F50760C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = (_QWORD *)(a4 + *(int *)(sub_23F5C8674() + 20));
  *v9 = a2;
  v9[1] = a3;
  sub_23F362B80();
}

uint64_t sub_23F5C7964(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x697263736E617274 && a2 == 0xEF746E6576457470;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x747865546E616C70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F5C7A74(char a1)
{
  if ((a1 & 1) != 0)
    return 0x747865546E616C70;
  else
    return 0x697263736E617274;
}

uint64_t sub_23F5C7AB8()
{
  char *v0;

  return sub_23F5C7A74(*v0);
}

uint64_t sub_23F5C7AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F5C7964(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F5C7AE4()
{
  sub_23F5C7C7C();
  return sub_23F61CDC0();
}

uint64_t sub_23F5C7B0C()
{
  sub_23F5C7C7C();
  return sub_23F61CDCC();
}

uint64_t SNLPLLMResponsePlanEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = sub_23F35D2E8(&qword_256E7E048);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5C7C7C();
  sub_23F44D4B8();
  v8[15] = 0;
  sub_23F61B2E4();
  sub_23F3CFCEC(&qword_256E74898, (uint64_t (*)(uint64_t))MEMORY[0x24BE56CD0], MEMORY[0x24BE56CE0]);
  sub_23F61CBE0();
  if (!v1)
  {
    type metadata accessor for SNLPLLMResponsePlanEvent();
    v8[14] = 1;
    sub_23F61CBB0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23F5C7C7C()
{
  unint64_t result;

  result = qword_256E7E050;
  if (!qword_256E7E050)
  {
    result = MEMORY[0x242670A44](&unk_23F6307F4, &type metadata for SNLPLLMResponsePlanEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E050);
  }
  return result;
}

void SNLPLLMResponsePlanEvent.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  char v23;

  v17 = a2;
  v20 = sub_23F61B2E4();
  v18 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v21 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F35D2E8(&qword_256E7E058);
  v6 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  sub_23F362930();
  v7 = type metadata accessor for SNLPLLMResponsePlanEvent();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F383EC4();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5C7C7C();
  sub_23F61CD84();
  if (v2)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
  }
  else
  {
    v15 = a1;
    v16 = v6;
    v8 = v18;
    v23 = 0;
    sub_23F3CFCEC(&qword_256E748B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE56CD0], MEMORY[0x24BE56CE8]);
    v9 = v20;
    sub_23F61CB44();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v3, v21, v9);
    v22 = 1;
    v10 = sub_23F61CB14();
    v12 = v11;
    sub_23F5C8660();
    v13 = (uint64_t *)(v3 + *(int *)(v7 + 20));
    *v13 = v10;
    v13[1] = v12;
    sub_23F5C7ECC(v3, v17);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v15);
    sub_23F5C7F10(v3);
  }
  sub_23F362870();
}

uint64_t sub_23F5C7ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SNLPLLMResponsePlanEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5C7F10(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SNLPLLMResponsePlanEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23F5C7F4C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  SNLPLLMResponsePlanEvent.init(from:)(a1, a2);
}

uint64_t sub_23F5C7F60(_QWORD *a1)
{
  return SNLPLLMResponsePlanEvent.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SNLPLLMPlannerResponse()
{
  return &type metadata for SNLPLLMPlannerResponse;
}

uint64_t *initializeBufferWithCopyOfBuffer for SNLPLLMResponsePlanEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B2E4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    sub_23F617BA0();
  }
  return a1;
}

uint64_t destroy for SNLPLLMResponsePlanEvent(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61B2E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SNLPLLMResponsePlanEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23F61B2E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for SNLPLLMResponsePlanEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23F61B2E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SNLPLLMResponsePlanEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B2E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SNLPLLMResponsePlanEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23F61B2E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SNLPLLMResponsePlanEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5C8218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F50760C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SNLPLLMResponsePlanEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F5C829C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_23F50760C();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23F36196C(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
    sub_23F362B80();
  }
}

uint64_t sub_23F5C8308()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B2E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SNLPLLMResponsePlanEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F5C83C4 + 4 * byte_23F630555[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F5C83F8 + 4 * asc_23F630550[v4]))();
}

uint64_t sub_23F5C83F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5C8400(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5C8408);
  return result;
}

uint64_t sub_23F5C8414(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5C841CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F5C8420(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5C8428(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNLPLLMResponsePlanEvent.CodingKeys()
{
  return &type metadata for SNLPLLMResponsePlanEvent.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SNLPLLMPlannerResponse.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F5C8484 + 4 * byte_23F63055A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F5C84A4 + 4 * byte_23F63055F[v4]))();
}

_BYTE *sub_23F5C8484(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F5C84A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F5C84AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F5C84B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F5C84BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F5C84C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SNLPLLMPlannerResponse.CodingKeys()
{
  return &type metadata for SNLPLLMPlannerResponse.CodingKeys;
}

unint64_t sub_23F5C84E4()
{
  unint64_t result;

  result = qword_256E7E0F0;
  if (!qword_256E7E0F0)
  {
    result = MEMORY[0x242670A44](&unk_23F630714, &type metadata for SNLPLLMPlannerResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E0F0);
  }
  return result;
}

unint64_t sub_23F5C8524()
{
  unint64_t result;

  result = qword_256E7E0F8;
  if (!qword_256E7E0F8)
  {
    result = MEMORY[0x242670A44](&unk_23F6307CC, &type metadata for SNLPLLMResponsePlanEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E0F8);
  }
  return result;
}

unint64_t sub_23F5C8564()
{
  unint64_t result;

  result = qword_256E7E100;
  if (!qword_256E7E100)
  {
    result = MEMORY[0x242670A44](&unk_23F63073C, &type metadata for SNLPLLMResponsePlanEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E100);
  }
  return result;
}

unint64_t sub_23F5C85A4()
{
  unint64_t result;

  result = qword_256E7E108;
  if (!qword_256E7E108)
  {
    result = MEMORY[0x242670A44](&unk_23F630764, &type metadata for SNLPLLMResponsePlanEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E108);
  }
  return result;
}

unint64_t sub_23F5C85E4()
{
  unint64_t result;

  result = qword_256E7E110;
  if (!qword_256E7E110)
  {
    result = MEMORY[0x242670A44](&unk_23F630684, &type metadata for SNLPLLMPlannerResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E110);
  }
  return result;
}

unint64_t sub_23F5C8624()
{
  unint64_t result;

  result = qword_256E7E118;
  if (!qword_256E7E118)
  {
    result = MEMORY[0x242670A44](&unk_23F6306AC, &type metadata for SNLPLLMPlannerResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E118);
  }
  return result;
}

uint64_t sub_23F5C8660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v0, v1);
}

uint64_t sub_23F5C8674()
{
  return type metadata accessor for SNLPLLMResponsePlanEvent();
}

uint64_t sub_23F5C867C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = *(_QWORD *)(sub_23F61B92C() - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    sub_23F617BA0();
    v8 = MEMORY[0x24BEE4AF8];
    v18 = v7;
    do
    {
      v9 = sub_23F417D48(v6);
      if (v2)
      {

        v2 = 0;
      }
      else
      {
        v11 = v10;
        if (v10)
        {
          v12 = v9;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F376C88();
            v8 = v15;
          }
          v13 = *(_QWORD *)(v8 + 16);
          if (v13 >= *(_QWORD *)(v8 + 24) >> 1)
          {
            sub_23F376C88();
            v8 = v16;
          }
          *(_QWORD *)(v8 + 16) = v13 + 1;
          v14 = v8 + 16 * v13;
          *(_QWORD *)(v14 + 32) = v12;
          *(_QWORD *)(v14 + 40) = v11;
          v7 = v18;
        }
      }
      v6 += v7;
      --v3;
    }
    while (v3);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v8;
}

uint64_t sub_23F5C87E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = *(_QWORD *)(sub_23F61B92C() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v16 = *(_QWORD *)(v4 + 72);
    sub_23F617BA0();
    v6 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v7 = sub_23F417D48(v5);
      if (v1)
        break;
      v9 = v8;
      if (v8)
      {
        v10 = v7;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F543650();
          v6 = v13;
        }
        v11 = *(_QWORD *)(v6 + 16);
        if (v11 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_23F543650();
          v6 = v14;
        }
        *(_QWORD *)(v6 + 16) = v11 + 1;
        v12 = v6 + 16 * v11;
        *(_QWORD *)(v12 + 32) = v10;
        *(_QWORD *)(v12 + 40) = v9;
      }
      v5 += v16;
      if (!--v2)
      {
        sub_23F366748();
        sub_23F524748();
        return v6;
      }
    }
    sub_23F366748();
    swift_bridgeObjectRelease();
    sub_23F524748();
  }
  else
  {
    sub_23F366748();
    return MEMORY[0x24BEE4AF8];
  }
  return v6;
}

uint64_t sub_23F5C892C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_23F5CF210(a1, (uint64_t)sub_23F4324E0, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  sub_23F384450();
  if (v2)
    sub_23F362984();
  return v6;
}

uint64_t sub_23F5C89A0(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t result;
  unint64_t v12;
  int64_t i;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  int64_t v46;
  uint64_t v47;
  _QWORD *v48;
  int64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(uint64_t *__return_ptr, char *);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];
  uint64_t v63;
  int64_t v64;
  unint64_t v65;
  uint64_t v66;

  v53 = a2;
  v52 = a1;
  v56 = sub_23F35D2E8(&qword_256E7E148);
  v4 = MEMORY[0x24BDAC7A8](v56);
  v48 = (uint64_t *)((char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v58 = (uint64_t *)((char *)&v47 - v7);
  MEMORY[0x24BDAC7A8](v6);
  v51 = (char *)&v47 - v8;
  v66 = MEMORY[0x24BEE4B00];
  sub_23F38231C(a3, v62);
  v54 = v62[0];
  v50 = v62[1];
  v9 = v64;
  v10 = v65;
  v47 = v63;
  v49 = (unint64_t)(v63 + 64) >> 6;
  result = sub_23F617BA0();
  if (!v10)
    goto LABEL_3;
LABEL_2:
  v57 = (v10 - 1) & v10;
  v12 = __clz(__rbit64(v10)) | (v9 << 6);
  for (i = v9; ; v12 = __clz(__rbit64(v14)) + (i << 6))
  {
    v16 = *(_QWORD *)(v54 + 56);
    v17 = (uint64_t *)(*(_QWORD *)(v54 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    v20 = sub_23F61B080();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = v16 + *(_QWORD *)(v21 + 72) * v12;
    v23 = v56;
    v24 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(&v51[*(int *)(v56 + 48)], v22, v20);
    *v24 = v19;
    v24[1] = v18;
    v25 = (uint64_t)v24;
    v26 = v58;
    sub_23F5CF410(v25, (uint64_t)v58);
    v27 = (char *)v26 + *(int *)(v23 + 48);
    sub_23F617BA0();
    v28 = v59;
    v52(&v60, v27);
    v59 = v28;
    if (v28)
    {
      sub_23F3CFCB0((uint64_t)v58, &qword_256E7E148);
      swift_release();
      return sub_23F382E18();
    }
    v29 = v61;
    if (!v61)
    {
      sub_23F3CFCB0((uint64_t)v58, &qword_256E7E148);
      result = swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    v55 = v60;
    v30 = v48;
    v31 = (char *)v48 + *(int *)(v56 + 48);
    v33 = *v58;
    v32 = v58[1];
    *v48 = *v58;
    v30[1] = v32;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v31, v27, v20);
    v34 = v66;
    if (*(_QWORD *)(v66 + 24) <= *(_QWORD *)(v66 + 16))
    {
      sub_23F514C04();
      v34 = v66;
    }
    sub_23F61CD30();
    sub_23F61C22C();
    result = sub_23F61CD60();
    v35 = v34 + 64;
    v36 = -1 << *(_BYTE *)(v34 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v34 + 64 + 8 * (v37 >> 6))) == 0)
      break;
    v39 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v34 + 64 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
LABEL_28:
    *(_QWORD *)(v35 + ((v39 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v39;
    v44 = (_QWORD *)(*(_QWORD *)(v34 + 48) + 16 * v39);
    *v44 = v33;
    v44[1] = v32;
    v45 = (_QWORD *)(*(_QWORD *)(v34 + 56) + 16 * v39);
    *v45 = v55;
    v45[1] = v29;
    ++*(_QWORD *)(v34 + 16);
    result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v31, v20);
LABEL_29:
    v9 = i;
    v10 = v57;
    if (v57)
      goto LABEL_2;
LABEL_3:
    i = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_40;
    if (i >= v49)
      goto LABEL_38;
    v14 = *(_QWORD *)(v50 + 8 * i);
    if (!v14)
    {
      v15 = v9 + 2;
      if (v9 + 2 >= v49)
        goto LABEL_38;
      v14 = *(_QWORD *)(v50 + 8 * v15);
      if (v14)
        goto LABEL_12;
      v15 = v9 + 3;
      if (v9 + 3 >= v49)
        goto LABEL_38;
      v14 = *(_QWORD *)(v50 + 8 * v15);
      if (v14)
        goto LABEL_12;
      v15 = v9 + 4;
      if (v9 + 4 >= v49)
        goto LABEL_38;
      v14 = *(_QWORD *)(v50 + 8 * v15);
      if (v14)
      {
LABEL_12:
        i = v15;
      }
      else
      {
        i = v9 + 5;
        if (v9 + 5 >= v49)
          goto LABEL_38;
        v14 = *(_QWORD *)(v50 + 8 * i);
        if (!v14)
        {
          v46 = v9 + 6;
          while (v46 < v49)
          {
            v14 = *(_QWORD *)(v50 + 8 * v46++);
            if (v14)
            {
              i = v46 - 1;
              goto LABEL_13;
            }
          }
LABEL_38:
          sub_23F382E18();
          return v66;
        }
      }
    }
LABEL_13:
    v57 = (v14 - 1) & v14;
  }
  v40 = 0;
  v41 = (unint64_t)(63 - v36) >> 6;
  while (++v38 != v41 || (v40 & 1) == 0)
  {
    v42 = v38 == v41;
    if (v38 == v41)
      v38 = 0;
    v40 |= v42;
    v43 = *(_QWORD *)(v35 + 8 * v38);
    if (v43 != -1)
    {
      v39 = __clz(__rbit64(~v43)) + (v38 << 6);
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

void StatementResultDigest.getInputKeyValues(dialogValues:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_23F35D2E8(&qword_256E73D30);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F383EC4();
  v4 = type metadata accessor for TypedValueFormatter(0);
  sub_23F36196C(v1, 1, 1, v4);
  sub_23F5CFDEC(a1);
  sub_23F5CFB84();
  sub_23F4DC270();
}

uint64_t sub_23F5C8F10(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  void (*v167)(uint64_t, _QWORD *);
  uint64_t v168;
  void (*v169)(char *);
  void (*v170)(uint64_t, uint64_t);
  void (*v171)(char *, char *, uint64_t);
  int v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  __n128 *v177;
  __n128 *v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(char *, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t (*v186)(uint64_t);
  int v187;
  uint64_t v188;
  int v189;
  int v190;
  void (*v191)(uint64_t, uint64_t);
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  __n128 *v207;
  __n128 *v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  int v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t (*v219)(uint64_t, uint64_t);
  uint64_t v220;
  __n128 *v221;
  __n128 *v222;
  uint64_t v223;
  unint64_t v224;
  unint64_t v225;
  _QWORD *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  void *v246;
  uint64_t v247;
  _QWORD *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  void (*v252)(uint64_t, uint64_t);
  uint64_t v253;
  _QWORD *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint8_t *v266;
  uint64_t v267;
  uint64_t v268;
  NSObject *v269;
  NSObject *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  void (*v278)(uint64_t, uint64_t);
  uint64_t isUniquelyReferenced_nonNull_native;
  os_log_t v280;
  uint64_t v281;
  uint64_t v282;
  char v283;
  unint64_t v284;
  char v285;
  uint64_t v286;
  char v287;
  uint64_t *v288;
  void (*v289)(uint64_t, uint64_t);
  char v290;
  char v291;
  os_log_t *v292;
  uint64_t *v293;
  void (*v294)(uint64_t, uint64_t);
  uint64_t v295;
  BOOL v296;
  uint64_t v297;
  __n128 *v298;
  __n128 *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  void *v308;
  os_log_type_t v309;
  _WORD *v310;
  uint64_t v311;
  uint64_t v312;
  void (*v313)(uint64_t, uint64_t);
  uint64_t v314;
  uint64_t v315;
  _QWORD *v316;
  uint64_t v317;
  BOOL v318;
  __n128 *v319;
  __n128 *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  unint64_t v325;
  uint64_t v326;
  void (*v327)(uint64_t, unint64_t, uint64_t);
  uint64_t v328;
  uint64_t v329;
  uint64_t (*v331)(uint64_t, _QWORD);
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t (*v341)(uint64_t, _QWORD);
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t (*v352)(uint64_t, _QWORD);
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  __n128 *v358;
  __n128 *v359;
  unint64_t v360;
  unint64_t v361;
  _QWORD *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t (*v365)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v366;
  _WORD *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t (*v370)(uint64_t, uint64_t);
  __n128 *v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  void (*v381)(uint64_t, uint64_t);
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t (*v388)(uint64_t, _QWORD);
  uint64_t v389;
  __n128 *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  unint64_t v394;
  unint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t *v398;
  uint64_t v399;
  uint64_t (*v400)(uint64_t, uint64_t, uint64_t);
  uint64_t v401;
  uint64_t v402;
  os_log_type_t v403;
  _WORD *v404;
  uint64_t v405;
  uint64_t v406;
  __n128 *v407;
  uint64_t v408;
  uint64_t v409;
  _QWORD *v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  __n128 *v422;
  _QWORD *v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  void (*v435)(uint64_t, uint64_t);
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t (*v440)(uint64_t, _QWORD);
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t (*v444)(uint64_t, uint64_t);
  uint64_t v445;
  void (*v446)(uint64_t, char *, uint64_t);
  char *v447;
  uint64_t v448;
  uint64_t v449;
  __n128 *v450;
  _QWORD *v451;
  uint64_t v452;
  uint64_t v453;
  _QWORD *v454;
  uint64_t v455;
  uint64_t v456;
  void (*v457)(uint64_t, uint64_t, uint64_t);
  char *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t (*v466)(uint64_t, uint64_t, uint64_t);
  uint64_t v467;
  uint64_t v468;
  os_log_type_t v469;
  _WORD *v470;
  uint64_t v471;
  uint64_t v472;
  _QWORD *v473;
  uint64_t v474;
  uint64_t (*v475)(uint64_t, uint64_t);
  __n128 *v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  __n128 *v491;
  _QWORD *v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  void (*v497)(uint64_t, uint64_t);
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  char v501;
  __n128 *v502;
  __n128 *v503;
  unint64_t v504;
  unint64_t v505;
  unint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  void (*v510)(uint64_t);
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t (*v514)(uint64_t, uint64_t, uint64_t);
  uint64_t v515;
  os_log_type_t v516;
  _BOOL4 v517;
  uint64_t v518;
  _WORD *v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  void (*v525)(void);
  __n128 *v526;
  __n128 *v527;
  unint64_t v528;
  unint64_t v529;
  unint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  unint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  __n128 *inited;
  _QWORD *v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  void (*v557)(uint64_t, uint64_t);
  uint64_t v558;
  uint64_t (*v559)(uint64_t, uint64_t);
  uint64_t v560;
  uint64_t v561;
  char *v562;
  uint64_t v563;
  uint64_t v564;
  unint64_t v565;
  uint64_t v566;
  NSObject *v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint8_t *v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t (*v579)(uint64_t, uint64_t, uint64_t);
  uint64_t v580;
  uint64_t v581;
  os_log_type_t v582;
  _BOOL4 v583;
  _WORD *v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t result;
  __n128 *v588;
  uint64_t v589;
  uint64_t v590;
  _QWORD *v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  __n128 *v603;
  _QWORD *v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  void (*v615)(uint64_t, uint64_t);
  uint64_t v616;
  void (*v617)(uint64_t, uint64_t);
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  void (*v621)(uint64_t, uint64_t);
  uint64_t v622;
  uint64_t v623;
  uint64_t *v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  char v628;
  uint64_t (*v629)(uint64_t, uint64_t);
  uint64_t v630;
  char *v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  char *v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  char *v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  char *v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  void *v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  void (*v734)(uint64_t, _QWORD *);
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  _QWORD *v743;
  char *v744;
  uint64_t v745;
  _QWORD *v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint8_t *v751;
  uint64_t v752;
  void (*v753)(uint64_t, uint64_t);
  uint64_t v754;
  __int128 v755;
  uint64_t v756[61];
  uint64_t v757;

  v721 = a2;
  v724 = a1;
  v641 = sub_23F617D14();
  v639 = *(_QWORD *)(v641 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F36285C();
  v640 = v5;
  sub_23F39C56C();
  v6 = sub_23F617D2C();
  v634 = *(_QWORD *)(v6 - 8);
  v635 = v6;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v633 = v8;
  sub_23F39C56C();
  v646 = sub_23F617D50();
  v652 = *(_QWORD *)(v646 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v651 = v10;
  sub_23F39C56C();
  v664 = sub_23F61814C();
  v674 = *(_QWORD *)(v664 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  v673 = v12;
  sub_23F39C56C();
  v684 = sub_23F618428();
  v680 = *(_QWORD *)(v684 - 8);
  sub_23F5CFC8C();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F5CF818();
  v657 = v14;
  sub_23F5CF8A4();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F383780();
  v644 = v16;
  v645 = v17;
  sub_23F5CF8A4();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F383780();
  v694 = v19;
  sub_23F39C56C();
  v692 = sub_23F618254();
  v688 = *(_QWORD *)(v692 - 8);
  sub_23F5CFC8C();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F5CF818();
  v678 = v21;
  sub_23F5CF8A4();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F383780();
  v655 = v23;
  v656 = v24;
  sub_23F5CF8A4();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F383780();
  v701 = v26;
  sub_23F35D2E8(&qword_256E6FAD8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F3834D0();
  v632 = v28;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F3838E4();
  v649 = v30;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F383780();
  v751 = v32;
  sub_23F39C56C();
  v752 = sub_23F61B5D8();
  *(_QWORD *)&v755 = *(_QWORD *)(v752 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F36285C();
  v750 = v34;
  sub_23F39C56C();
  v723 = sub_23F61820C();
  v722 = *(_QWORD *)(v723 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F36285C();
  v719 = v36;
  sub_23F39C56C();
  v660 = sub_23F618284();
  v658 = *(_QWORD *)(v660 - 8);
  sub_23F5CFC8C();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F5CF818();
  v654 = v38;
  sub_23F5CF8A4();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F383780();
  v642 = v40;
  v643 = v41;
  sub_23F5CF8A4();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F383780();
  v659 = v43;
  sub_23F39C56C();
  v700 = sub_23F618350();
  v696 = *(_QWORD *)(v700 - 8);
  sub_23F5CFC8C();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F5CF818();
  v686 = v45;
  sub_23F5CF8A4();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F383780();
  v665 = v47;
  v666 = v48;
  sub_23F5CF8A4();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F383780();
  v707 = v50;
  sub_23F39C56C();
  v706 = sub_23F6182F0();
  v702 = *(_QWORD *)(v706 - 8);
  sub_23F5CFC8C();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F5CF818();
  v685 = v52;
  sub_23F5CF8A4();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F383780();
  v675 = v54;
  v676 = v55;
  sub_23F5CF8A4();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F383780();
  v718 = v57;
  sub_23F39C56C();
  v717 = sub_23F619E98();
  v716 = *(_QWORD *)(v717 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F3834D0();
  v668 = v59;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F3838E4();
  v667 = v61;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F3838E4();
  v653 = v63;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F3838E4();
  v677 = v65;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F3838E4();
  v693 = v67;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F3838E4();
  v650 = v69;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F3838E4();
  v669 = v71;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F3838E4();
  v679 = v73;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F3838E4();
  v708 = v75;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F3838E4();
  v687 = v77;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F3838E4();
  v695 = v79;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F383780();
  v705 = v81;
  sub_23F39C56C();
  v729 = sub_23F61BBA8();
  v730 = *(_QWORD *)(v729 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v82);
  sub_23F3834D0();
  v689 = v83;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v84);
  sub_23F3838E4();
  v697 = v85;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v86);
  sub_23F3838E4();
  v703 = v87;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v88);
  sub_23F3838E4();
  v709 = v89;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v90);
  sub_23F383780();
  v720 = v91;
  sub_23F35D2E8(&qword_256E70238);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v92);
  sub_23F3834D0();
  v638 = v93;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v94);
  sub_23F3838E4();
  v661 = v95;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v96);
  sub_23F3838E4();
  v671 = v97;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v98);
  sub_23F3838E4();
  v681 = v99;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v100);
  sub_23F3838E4();
  v690 = v101;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v102);
  sub_23F3838E4();
  v698 = v103;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v104);
  sub_23F383780();
  v704 = v105;
  sub_23F35D2E8(&qword_256E70268);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v106);
  sub_23F3834D0();
  v663 = v107;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v108);
  sub_23F3838E4();
  v672 = v109;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v110);
  sub_23F3838E4();
  v682 = v111;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v112);
  sub_23F3838E4();
  v691 = v113;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v114);
  sub_23F383780();
  v699 = v115;
  sub_23F39C56C();
  v715 = sub_23F618230();
  v714 = *(_QWORD *)(v715 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v116);
  sub_23F36285C();
  v726 = v117;
  sub_23F39C56C();
  v713 = sub_23F61B6E0();
  v712 = *(_QWORD *)(v713 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v118);
  sub_23F36285C();
  v711 = v119;
  sub_23F39C56C();
  v725 = sub_23F61B92C();
  v728 = *(_QWORD *)(v725 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v120);
  sub_23F3834D0();
  v670 = v121;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v122);
  sub_23F3838E4();
  v648 = v123;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v124);
  sub_23F3838E4();
  v662 = v125;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v126);
  sub_23F3838E4();
  v683 = v127;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v128);
  sub_23F3838E4();
  v710 = v129;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v130);
  sub_23F383780();
  v727 = v131;
  sub_23F39C56C();
  v749 = sub_23F618614();
  v748 = *(_QWORD *)(v749 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v132);
  sub_23F36285C();
  v747 = v133;
  sub_23F35D2E8(&qword_256E6FB18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v134);
  sub_23F36285C();
  v738 = v135;
  sub_23F39C56C();
  v740 = sub_23F61811C();
  v733 = *(_QWORD *)(v740 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v136);
  sub_23F36285C();
  v732 = v137;
  sub_23F35D2E8(&qword_256E73D28);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v138);
  sub_23F36285C();
  v735 = v139;
  sub_23F39C56C();
  v742 = sub_23F617DD4();
  v741 = *(_QWORD *)(v742 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v140);
  sub_23F36285C();
  v745 = v141;
  sub_23F39C56C();
  v753 = (void (*)(uint64_t, uint64_t))sub_23F61ACA8();
  v744 = (char *)*((_QWORD *)v753 - 1);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v142);
  sub_23F3834D0();
  v737 = v143;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v144);
  v146 = (char *)&v631 - v145;
  v147 = (_QWORD *)sub_23F61A504();
  v743 = (_QWORD *)*(v147 - 1);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v148);
  sub_23F3834D0();
  v736 = v149;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v150);
  v152 = (char *)&v631 - v151;
  v153 = sub_23F618134();
  v154 = *(_QWORD *)(v153 - 8);
  MEMORY[0x24BDAC7A8](v153);
  sub_23F5CF818();
  v631 = v155;
  sub_23F5CF8A4();
  MEMORY[0x24BDAC7A8](v156);
  sub_23F383780();
  v647 = (char *)v157;
  sub_23F5CF8A4();
  MEMORY[0x24BDAC7A8](v158);
  sub_23F383780();
  v637 = v159;
  sub_23F5CF8A4();
  v161 = MEMORY[0x24BDAC7A8](v160);
  v163 = (char *)&v631 - v162;
  v636 = v164;
  MEMORY[0x24BDAC7A8](v161);
  v166 = (char *)&v631 - v165;
  v754 = (uint64_t)v2;
  sub_23F61AB4C();
  sub_23F61A4F8();
  v167 = (void (*)(uint64_t, _QWORD *))v743[1];
  v743 = v147;
  v734 = v167;
  v167((uint64_t)v152, v147);
  sub_23F61AC78();
  v168 = v154;
  v169 = (void (*)(char *))*((_QWORD *)v744 + 1);
  v170 = v753;
  v169(v146);
  v171 = *(void (**)(char *, char *, uint64_t))(v168 + 16);
  v744 = v166;
  v171(v163, v166, v153);
  v172 = (*(uint64_t (**)(char *, uint64_t))(v168 + 88))(v163, v153);
  if (v172 != *MEMORY[0x24BE53328])
  {
    v739 = v153;
    if (v172 == *MEMORY[0x24BE532D8])
    {
      sub_23F35D2E8(qword_256E71B18);
      v177 = (__n128 *)sub_23F36682C();
      v178 = sub_23F5CF640(v177, (__n128)xmmword_23F61E7E0);
      v178[4].n128_u64[1] = MEMORY[0x24BEE0D00];
      sub_23F5CF9C8((uint64_t)v178, 0xD000000000000012);
      v179 = sub_23F61BFEC();
      v180 = v168;
      v168 = v179;
      v181 = *(void (**)(char *, uint64_t))(v180 + 8);
      v182 = v739;
      v181(v744, v739);
      v181(v163, v182);
      return v168;
    }
    v215 = *MEMORY[0x24BE532E0];
    v216 = v746;
    v731 = v168;
    if (v172 == v215)
    {
      v217 = sub_23F5CFAC4();
      v218 = v739;
      sub_23F383D74(v217, v219);
      v220 = v719;
      (*(void (**)(uint64_t, char *, uint64_t))(v722 + 32))(v719, v163, v723);
      sub_23F35D2E8(qword_256E71B18);
      v221 = (__n128 *)sub_23F36682C();
      v222 = sub_23F5CF8F4(v221, (__n128)xmmword_23F61E980);
      v223 = MEMORY[0x24BEE0D00];
      v222[2].n128_u64[0] = v224;
      v222[2].n128_u64[1] = v225;
      v226 = sub_23F5CF9D8(v222, v223, 0xD000000000000012);
      v226[11] = v227;
      v226[12] = 7368769;
      v226[13] = 0xE300000000000000;
      v757 = sub_23F61BFEC();
      v228 = MEMORY[0x24266B710]();
      v229 = *(_QWORD *)(v228 + 16);
      if (v229)
      {
        v230 = *(unsigned __int8 *)(v755 + 80);
        v749 = v228;
        v231 = v228 + ((v230 + 32) & ~v230);
        v754 = *(_QWORD *)(v755 + 72);
        v753 = *(void (**)(uint64_t, uint64_t))(v755 + 16);
        v232 = MEMORY[0x24BEE4AF8];
        v233 = v752;
        v234 = (uint64_t)v751;
        v235 = v750;
        do
        {
          ((void (*)(uint64_t, uint64_t, uint64_t))v753)(v235, v231, v233);
          sub_23F61B578();
          v236 = sub_23F5CFE54();
          sub_23F383740(v234, 1, v236);
          if (v318)
          {
            sub_23F3CFCB0(v234, &qword_256E6FAD8);
            sub_23F383D74(v235, *(uint64_t (**)(uint64_t, uint64_t))(v755 + 8));
          }
          else
          {
            v237 = sub_23F61B968();
            v238 = v234;
            v240 = v239;
            sub_23F5CFBCC(v238, *(_QWORD *)(v236 - 8));
            sub_23F383D74(v235, *(uint64_t (**)(uint64_t, uint64_t))(v755 + 8));
            v241 = sub_23F40C38C();
            if ((v241 & 1) == 0)
            {
              sub_23F5CFE20();
              v232 = v244;
            }
            v242 = *(_QWORD *)(v232 + 16);
            if (v242 >= *(_QWORD *)(v232 + 24) >> 1)
            {
              sub_23F5CFE20();
              v232 = v245;
            }
            *(_QWORD *)(v232 + 16) = v242 + 1;
            v243 = v232 + 16 * v242;
            *(_QWORD *)(v243 + 32) = v237;
            *(_QWORD *)(v243 + 40) = v240;
            v233 = v752;
            v234 = (uint64_t)v751;
            v235 = v750;
          }
          v231 += v754;
          --v229;
        }
        while (v229);
        v260 = swift_bridgeObjectRelease();
        v218 = v739;
        v220 = v719;
      }
      else
      {
        v260 = swift_bridgeObjectRelease();
        v232 = MEMORY[0x24BEE4AF8];
      }
      v305 = *(_QWORD *)(v232 + 16);
      v306 = *(_QWORD *)(MEMORY[0x24266B710](v260) + 16);
      swift_bridgeObjectRelease();
      if (v305 == v306)
      {
        v307 = sub_23F35D2E8(&qword_256E70580);
        sub_23F5CF674(v307);
      }
      else
      {
        sub_23F362C60();
        v308 = v708;
        sub_23F619124();
        sub_23F619E8C();
        v309 = sub_23F3F0EEC();
        if (sub_23F49BA04(v309))
        {
          v310 = (_WORD *)sub_23F366668();
          sub_23F507DB0(v310);
          sub_23F5CF74C(&dword_23F35A000, v311, v312, "DefaultFallbackDialogGenerator.generateFallback: some disambiguation values cannot be represented");
          sub_23F366530();
        }

        sub_23F5CF79C((uint64_t)v308, *(uint64_t (**)(uint64_t, _QWORD))(v716 + 8));
      }
      (*(void (**)(uint64_t, uint64_t))(v722 + 8))(v220, v723);
      v313 = *(void (**)(uint64_t, uint64_t))(v731 + 8);
      v314 = (uint64_t)v744;
      v315 = v218;
      goto LABEL_66;
    }
    if (v172 == *MEMORY[0x24BE532E8])
    {
      v256 = v739;
      sub_23F383F80((uint64_t)v163, *(uint64_t (**)(uint64_t, uint64_t))(v168 + 96));
      (*(void (**)(uint64_t, char *, uint64_t))(v714 + 32))(v726, v163, v715);
      v257 = v704;
      sub_23F5CFAA0();
      sub_23F5CF77C(v257);
      if (v318)
      {
        sub_23F3CFCB0(v257, &qword_256E70238);
        v258 = v705;
      }
      else
      {
        v168 = v257;
        v323 = sub_23F61B530();
        sub_23F383CA8(v257, *(uint64_t (**)(uint64_t, uint64_t))(v755 + 8));
        v324 = *(_QWORD *)(v323 + 16);
        if (v324)
        {
          v325 = v323 + ((*(unsigned __int8 *)(v730 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v730 + 80));
          v326 = *(_QWORD *)(v730 + 72);
          v327 = *(void (**)(uint64_t, unint64_t, uint64_t))(v730 + 16);
          sub_23F617BA0();
          v168 = v729;
          v328 = v720;
          while (1)
          {
            v327(v328, v325, v168);
            sub_23F5CFB28();
            sub_23F5CFD10();
            v168 = v726;
            if (v256 == sub_23F618224() && v328 == v329)
              break;
            v256 = sub_23F5CF6A8();
            sub_23F384120();
            sub_23F362984();
            if ((v256 & 1) != 0)
              goto LABEL_122;
            sub_23F5CFAB8();
            v328 = v720;
            sub_23F5CF894(v331);
            v325 += v326;
            if (!--v324)
            {
              sub_23F362C60();
              v332 = 1;
              v256 = v739;
              goto LABEL_105;
            }
          }
          sub_23F362C60();
          sub_23F384120();
LABEL_122:
          v168 = v729;
          v258 = v705;
          sub_23F384120();
          sub_23F5CFD6C();
          v348 = v699;
          sub_23F3D9B80(v699, v720, v365);
          v332 = 0;
          v256 = v739;
        }
        else
        {
          sub_23F5CFCD4();
LABEL_105:
          v258 = v705;
          v348 = v699;
        }
        sub_23F36196C(v348, v332, 1, v168);
        sub_23F362C60();
        sub_23F383740(v348, 1, v168);
        if (!v318)
        {
          sub_23F61BB84();
          sub_23F5CFAB8();
          sub_23F383D74(v348, v370);
          sub_23F35D2E8(qword_256E71B18);
          v371 = (__n128 *)sub_23F36682C();
          sub_23F5CF640(v371, (__n128)xmmword_23F61EBC0);
          v372 = v256;
          v373 = MEMORY[0x24BEE0D00];
          sub_23F5CFA94();
          sub_23F5CF9C8(v374, v375);
          sub_23F5CFE0C();
          *(_QWORD *)(v376 + 72) = v373;
          *(_QWORD *)(v376 + 80) = v258;
          sub_23F5CF96C(v376);
          v377 = v726;
          v378 = sub_23F618224();
          sub_23F5CFA28(v378, v379);
          v380 = sub_23F61BFEC();
          (*(void (**)(char *, uint64_t))(v731 + 8))(v744, v372);
          v381 = *(void (**)(uint64_t, uint64_t))(v714 + 8);
          v382 = v377;
          v383 = v715;
LABEL_129:
          v381(v382, v383);
          return v380;
        }
        sub_23F3CFCB0(v348, &qword_256E70268);
      }
      sub_23F5CFB04();
      sub_23F507654();
      v366 = sub_23F3F0EEC();
      if (sub_23F49BA04(v366))
      {
        v367 = (_WORD *)sub_23F366668();
        sub_23F507DB0(v367);
        sub_23F5CF74C(&dword_23F35A000, v368, v369, "DefaultFallbackDialogGenerator.generateFallback: no parameter name");
        sub_23F366530();
      }

      sub_23F5CF79C(v258, *(uint64_t (**)(uint64_t, _QWORD))(v716 + 8));
      sub_23F5CF034();
      sub_23F362D64();
      sub_23F5CF8E0();
      sub_23F5CF82C();
      (*(void (**)(uint64_t, uint64_t))(v714 + 8))(v726, v715);
      return v168;
    }
    if (v172 == *MEMORY[0x24BE53300])
    {
      sub_23F383D74((uint64_t)v163, *(uint64_t (**)(uint64_t, uint64_t))(v168 + 96));
      v261 = v702;
      v262 = v718;
      sub_23F5CFD64(*(uint64_t (**)(void))(v702 + 32));
      v263 = v698;
      sub_23F5CFAA0();
      v264 = sub_23F5CF77C(v263);
      if (v318)
      {
        sub_23F5CFD34(v264, &qword_256E70238);
      }
      else
      {
        sub_23F5CFCCC();
        sub_23F5CF760();
        v337 = *(_QWORD *)(v263 + 16);
        if (v337)
        {
          sub_23F5CF6C4();
          v338 = v709;
          while (1)
          {
            sub_23F5CF938();
            sub_23F5CFB28();
            sub_23F5CFD10();
            v168 = v718;
            if (v262 == sub_23F618224() && v338 == v339)
              break;
            v262 = sub_23F5CF6A8();
            sub_23F384120();
            sub_23F362984();
            if ((v262 & 1) != 0)
              goto LABEL_147;
            sub_23F5CFAB8();
            v338 = v709;
            sub_23F5CF894(v341);
            sub_23F5CFE48();
            if (v318)
            {
              sub_23F362C60();
              sub_23F5CFAF4();
              v262 = v718;
              goto LABEL_131;
            }
          }
          sub_23F362C60();
          sub_23F384120();
LABEL_147:
          v168 = v729;
          sub_23F384120();
          sub_23F5CFD6C();
          v384 = v691;
          sub_23F3D9B80(v691, v709, v400);
          sub_23F5CFD00();
          v262 = v718;
        }
        else
        {
          sub_23F5CFCD4();
LABEL_131:
          v384 = v691;
        }
        sub_23F36196C(v384, v342, 1, v168);
        sub_23F362C60();
        v401 = sub_23F383740(v384, 1, v168);
        if (!v318)
        {
          sub_23F5CFA50();
          sub_23F5CF9A8();
          sub_23F35D2E8(qword_256E71B18);
          v407 = (__n128 *)sub_23F36682C();
          v755 = xmmword_23F61EBC0;
          sub_23F5CF640(v407, (__n128)xmmword_23F61EBC0);
          v408 = MEMORY[0x24BEE0D00];
          sub_23F5CFA94();
          v410[6] = v409 + 2;
          v410[7] = 0x800000023F63B1E0;
          v410[9] = v408;
          v410[10] = v216;
          sub_23F5CF96C((uint64_t)v410);
          v411 = sub_23F618224();
          sub_23F5CFA00(v411, v412);
          v413 = v718;
          v757 = sub_23F5CFE04();
          sub_23F6182E4();
          sub_23F5CFC08();
          if (v3)
          {
            v746 = v3;
            sub_23F5CF880();
            sub_23F619124();
            v415 = v702;
            v416 = v675;
            sub_23F507B0C(v675, v413);
            sub_23F507B0C(v685, v416);
            sub_23F5CFC98();
            sub_23F5CFB48();
            v417 = swift_allocObject();
            sub_23F5CF7E0(v417);
            sub_23F619E8C();
            sub_23F5CFBF4();
            v418 = sub_23F36682C();
            sub_23F5CFB3C(v418);
            v419 = sub_23F36682C();
            sub_23F5CF948(v419);
            v420 = sub_23F36682C();
            *(_QWORD *)(v420 + 16) = sub_23F5CF1C8;
            *(_QWORD *)(v420 + 24) = v415;
            v421 = sub_23F36682C();
            *(_QWORD *)(v421 + 16) = sub_23F5CF5F8;
            *(_QWORD *)(v421 + 24) = v420;
            sub_23F35D2E8(&qword_256E7E130);
            v422 = (__n128 *)sub_23F36682C();
            sub_23F5CFAE4(v422);
            v423[4] = sub_23F5CF600;
            v423[5] = v418;
            v423[6] = sub_23F5CF600;
            v423[7] = v337;
            sub_23F5CFDC0((uint64_t)v423, (uint64_t)sub_23F5CF5FC);
            sub_23F4161E8();
            sub_23F5CFB14();
            sub_23F3D9B78();
            sub_23F3D9D3C();
            sub_23F3D0A10();
            sub_23F513618();
            if (sub_23F5CF7A4())
            {
              sub_23F366668();
              v424 = sub_23F366668();
              sub_23F5CF7F8(v424);
              sub_23F5CF870();
              sub_23F5CFC64();
              sub_23F5CFC48();
              sub_23F6182E4();
              v425 = sub_23F5CFB98();
              sub_23F5CFBFC(v425, v426);
              sub_23F5CF854(v427);
              sub_23F3667A8();
              sub_23F3DDBDC();
              sub_23F384AF8();
              sub_23F362984();
              v428 = sub_23F5CFB30();
              sub_23F5CFB7C(v428);
              sub_23F5CF734(&dword_23F35A000, v429, v430, "Could not format %s, using generic fallback dialog");
              sub_23F5CF7B8();
              sub_23F366530();
            }
            sub_23F5CF8EC();
            sub_23F3667A8();
            sub_23F3DDBDC();
            sub_23F384AF8();
            sub_23F5CFBEC();
            v435 = *(void (**)(uint64_t, uint64_t))(v702 + 8);
            v436 = v706;
            sub_23F3ECBA8(v685);
            sub_23F383EDC();
            sub_23F517218();
            sub_23F5CF79C(v693, *(uint64_t (**)(uint64_t, _QWORD))(v716 + 8));
            sub_23F5CF660();
            v435(v718, v436);
          }
          else
          {
            v433 = v414;
            sub_23F5CF880();
            v434 = v702;
            if (v433)
              sub_23F5CFC28();
            else
              sub_23F5CFD3C();
            sub_23F5CF708();
            sub_23F5CF958();
            (*(void (**)(uint64_t, uint64_t))(v434 + 8))(v413, v706);
          }
          return v757;
        }
        sub_23F5CFD2C(v401, &qword_256E70268);
        v261 = v702;
      }
      v402 = v695;
      sub_23F5CFB04();
      sub_23F507654();
      v403 = sub_23F3F0EEC();
      if (sub_23F49BA04(v403))
      {
        v404 = (_WORD *)sub_23F366668();
        sub_23F507DB0(v404);
        sub_23F5CF74C(&dword_23F35A000, v405, v406, "DefaultFallbackDialogGenerator.generateFallback: no parameter name");
        sub_23F366530();
      }

      sub_23F5CF79C(v402, *(uint64_t (**)(uint64_t, _QWORD))(v716 + 8));
      sub_23F5CF034();
      sub_23F362D64();
      sub_23F5CF8E0();
      sub_23F5CF840();
      (*(void (**)(uint64_t, uint64_t))(v261 + 8))(v262, v706);
      return v168;
    }
    if (v172 == *MEMORY[0x24BE53308])
    {
      sub_23F383D74((uint64_t)v163, *(uint64_t (**)(uint64_t, uint64_t))(v168 + 96));
      v333 = v696;
      v334 = v707;
      sub_23F5CFD64(*(uint64_t (**)(void))(v696 + 32));
      v335 = v690;
      sub_23F5CFAA0();
      v336 = sub_23F5CF77C(v335);
      if (v318)
      {
        sub_23F5CFD34(v336, &qword_256E70238);
      }
      else
      {
        sub_23F5CFCCC();
        sub_23F5CF760();
        if (*(_QWORD *)(v335 + 16))
        {
          sub_23F5CF6C4();
          v349 = v703;
          while (1)
          {
            sub_23F5CF938();
            sub_23F5CFB28();
            sub_23F5CFD10();
            v168 = v707;
            if (v334 == sub_23F61832C() && v349 == v350)
              break;
            v334 = sub_23F5CF6A8();
            sub_23F384120();
            sub_23F362984();
            if ((v334 & 1) != 0)
              goto LABEL_177;
            sub_23F5CFAB8();
            v349 = v703;
            sub_23F5CF894(v352);
            sub_23F5CFE48();
            if (v318)
            {
              sub_23F362C60();
              sub_23F5CFAF4();
              v334 = v707;
              goto LABEL_158;
            }
          }
          sub_23F362C60();
          sub_23F384120();
LABEL_177:
          v168 = v729;
          v431 = v686;
          sub_23F384120();
          sub_23F5CFD6C();
          v432 = v682;
          sub_23F3D9B80(v682, v703, v466);
          sub_23F5CFD00();
          v334 = v707;
        }
        else
        {
          sub_23F5CFCD4();
LABEL_158:
          v431 = v686;
          v432 = v682;
        }
        sub_23F36196C(v432, v353, 1, v168);
        sub_23F362C60();
        v467 = sub_23F383740(v432, 1, v168);
        if (!v318)
        {
          v473 = v216;
          sub_23F5CFE0C();
          sub_23F61BB84();
          sub_23F5CFAB8();
          sub_23F383D74(v474, v475);
          sub_23F35D2E8(qword_256E71B18);
          v476 = (__n128 *)sub_23F36682C();
          v755 = xmmword_23F61EBC0;
          sub_23F5CF640(v476, (__n128)xmmword_23F61EBC0);
          v477 = MEMORY[0x24BEE0D00];
          sub_23F5CFA94();
          v480 = sub_23F5CF9C8(v479, v478 | 4);
          *(_QWORD *)(v480 + 72) = v477;
          *(_QWORD *)(v480 + 80) = v216;
          sub_23F5CF96C(v480);
          v481 = sub_23F61832C();
          sub_23F5CFA28(v481, v482);
          v483 = v707;
          v757 = sub_23F61BFEC();
          v484 = MEMORY[0x24266B854]();
          sub_23F5CFB1C();
          sub_23F5C87E0(v484);
          if (v216)
          {
            v746 = v216;
            sub_23F362984();
            sub_23F619124();
            v485 = v665;
            sub_23F507B0C(v665, v483);
            sub_23F507B0C(v431, v485);
            sub_23F5CFC98();
            sub_23F5CFB48();
            v486 = swift_allocObject();
            sub_23F5CF7E0(v486);
            sub_23F619E8C();
            sub_23F5CFBF4();
            v487 = sub_23F36682C();
            sub_23F5CFB3C(v487);
            v488 = sub_23F36682C();
            sub_23F5CF948(v488);
            v489 = sub_23F36682C();
            *(_QWORD *)(v489 + 16) = sub_23F5CF13C;
            *(_QWORD *)(v489 + 24) = v483;
            v490 = sub_23F36682C();
            *(_QWORD *)(v490 + 16) = sub_23F5CF5F8;
            *(_QWORD *)(v490 + 24) = v489;
            sub_23F35D2E8(&qword_256E7E130);
            v491 = (__n128 *)sub_23F36682C();
            sub_23F5CFAE4(v491);
            v492[4] = sub_23F5CF600;
            v492[5] = v487;
            v492[6] = sub_23F5CF600;
            v492[7] = v473;
            sub_23F5CFD78((uint64_t)v492, (uint64_t)sub_23F5CF5FC);
            sub_23F4161E8();
            sub_23F5CFB14();
            sub_23F3D0A10();
            sub_23F3D9D3C();
            sub_23F3D9B78();
            sub_23F513618();
            if (sub_23F5CF7A4())
            {
              v493 = sub_23F366668();
              v754 = sub_23F366668();
              v756[0] = v754;
              *(_WORD *)v493 = 258;
              *(_BYTE *)(v493 + 2) = 32;
              sub_23F384AF8();
              sub_23F5CF870();
              v752 = v493 + 4;
              sub_23F5CFC48();
              MEMORY[0x24266B854]();
              sub_23F5CFDE0();
            }
            sub_23F5CF8EC();
            sub_23F3667A8();
            sub_23F3DDBDC();
            sub_23F383EDC();
            sub_23F5CFBEC();
            v497 = *(void (**)(uint64_t, uint64_t))(v696 + 8);
            v498 = v700;
            sub_23F3ECBA8(v686);
            sub_23F384AF8();
            sub_23F517218();
            sub_23F5CF79C(v677, *(uint64_t (**)(uint64_t, _QWORD))(v716 + 8));
            sub_23F5CF660();
            v497(v707, v498);
          }
          else
          {
            sub_23F362984();
            v496 = sub_23F35D2E8(&qword_256E70580);
            sub_23F5CF674(v496);
            sub_23F5CF660();
            (*(void (**)(uint64_t, uint64_t))(v696 + 8))(v483, v700);
          }
          return v757;
        }
        sub_23F5CFD2C(v467, &qword_256E70268);
        v333 = v696;
      }
      v468 = v687;
      sub_23F5CFB04();
      sub_23F507654();
      v469 = sub_23F3F0EEC();
      if (sub_23F49BA04(v469))
      {
        v470 = (_WORD *)sub_23F366668();
        sub_23F507DB0(v470);
        sub_23F5CF74C(&dword_23F35A000, v471, v472, "DefaultFallbackDialogGenerator.generateFallback: no parameter name");
        sub_23F366530();
      }

      sub_23F5CF79C(v468, *(uint64_t (**)(uint64_t, _QWORD))(v716 + 8));
      sub_23F5CF034();
      sub_23F362D64();
      sub_23F5CF8E0();
      sub_23F5CF840();
      (*(void (**)(uint64_t, uint64_t))(v333 + 8))(v334, v700);
      return v168;
    }
    if (v172 == *MEMORY[0x24BE532F0])
    {
      sub_23F383D74((uint64_t)v163, *(uint64_t (**)(uint64_t, uint64_t))(v168 + 96));
      v343 = v688;
      v344 = v701;
      sub_23F5CFD64(*(uint64_t (**)(void))(v688 + 32));
      v345 = v681;
      sub_23F5CFAA0();
      sub_23F5CF77C(v345);
      if (v318)
      {
        v346 = &qword_256E70238;
        v347 = v345;
      }
      else
      {
        sub_23F5CFCCC();
        sub_23F5CF760();
        if (*(_QWORD *)(v345 + 16))
        {
          sub_23F5CF6C4();
          v385 = v697;
          while (1)
          {
            sub_23F5CF938();
            sub_23F5CFB28();
            sub_23F5CFD10();
            v168 = v701;
            if (v343 == sub_23F618224() && v385 == v386)
              break;
            v343 = sub_23F5CF6A8();
            sub_23F384120();
            sub_23F362984();
            if ((v343 & 1) != 0)
              goto LABEL_202;
            sub_23F5CFAB8();
            v385 = v697;
            sub_23F5CF894(v388);
            sub_23F5CFE48();
            if (v318)
            {
              sub_23F362C60();
              sub_23F5CFAF4();
              v344 = v701;
              v343 = v688;
              goto LABEL_188;
            }
          }
LABEL_201:
          sub_23F362C60();
          sub_23F384120();
LABEL_202:
          v216 = v746;
          v168 = v729;
          v494 = v678;
          sub_23F384120();
          sub_23F5CFD6C();
          v495 = v672;
          sub_23F3D9B80(v672, v697, v514);
          v389 = 0;
          v344 = v701;
          v343 = v688;
        }
        else
        {
          sub_23F5CFCD4();
          v344 = v701;
LABEL_188:
          v494 = v678;
          v495 = v672;
        }
        sub_23F36196C(v495, v389, 1, v168);
        sub_23F362C60();
        sub_23F383740(v495, 1, v168);
        if (!v318)
        {
          v522 = sub_23F61BB84();
          v524 = v523;
          sub_23F5CFAB8();
          v525();
          sub_23F35D2E8(qword_256E71B18);
          v526 = (__n128 *)sub_23F36682C();
          v755 = xmmword_23F61EBC0;
          v527 = sub_23F5CF8F4(v526, (__n128)xmmword_23F61EBC0);
          v528 = MEMORY[0x24BEE0D00];
          v527[2].n128_u64[0] = v529;
          v527[2].n128_u64[1] = v530;
          sub_23F5CFA94();
          v533 = sub_23F5CF9C8(v531, v532);
          *(_QWORD *)(v533 + 72) = v528;
          strcpy((char *)(v533 + 80), "parameterName");
          *(_WORD *)(v533 + 94) = -4864;
          *(_QWORD *)(v533 + 96) = v522;
          *(_QWORD *)(v533 + 104) = v524;
          *(_QWORD *)(v533 + 120) = v528;
          *(_QWORD *)(v533 + 128) = 0x6574656D61726170;
          *(_QWORD *)(v533 + 136) = 0xEB00000000644972;
          v534 = sub_23F618224();
          v526[10].n128_u64[1] = v528;
          v526[9].n128_u64[0] = v534;
          v526[9].n128_u64[1] = v535;
          v757 = sub_23F5CFE04();
          v536 = v662;
          sub_23F618248();
          sub_23F417D48(v536);
          if (v216)
          {
            v746 = v216;
            sub_23F5CFBB8();
            sub_23F619124();
            v538 = v688;
            v539 = v655;
            sub_23F507B0C(v655, v344);
            sub_23F507B0C(v494, v539);
            sub_23F5CFC98();
            sub_23F5CFB48();
            v540 = swift_allocObject();
            sub_23F5CF7E0(v540);
            sub_23F619E8C();
            sub_23F5CFBF4();
            v541 = sub_23F36682C();
            sub_23F5CFB3C(v541);
            v542 = sub_23F36682C();
            sub_23F5CF948(v542);
            v543 = sub_23F36682C();
            *(_QWORD *)(v543 + 16) = sub_23F5CF0DC;
            *(_QWORD *)(v543 + 24) = v538;
            v544 = sub_23F36682C();
            *(_QWORD *)(v544 + 16) = sub_23F5CF5F8;
            *(_QWORD *)(v544 + 24) = v543;
            sub_23F35D2E8(&qword_256E7E130);
            inited = (__n128 *)swift_initStackObject();
            sub_23F5CFAE4(inited);
            v546[4] = sub_23F5CF600;
            v546[5] = v541;
            v546[6] = sub_23F5CF600;
            v546[7] = v344;
            sub_23F5CFDC0((uint64_t)v546, (uint64_t)sub_23F5CF5FC);
            sub_23F4161E8();
            sub_23F5CFB14();
            sub_23F3D9B78();
            sub_23F3D9D3C();
            sub_23F3D0A10();
            sub_23F513618();
            if (sub_23F5CF7A4())
            {
              sub_23F366668();
              v547 = sub_23F366668();
              sub_23F5CF7F8(v547);
              sub_23F5CF870();
              sub_23F5CFC64();
              sub_23F5CFC48();
              sub_23F618248();
              v548 = sub_23F5CFB98();
              sub_23F5CFBFC(v548, v549);
              sub_23F5CF854(v550);
              sub_23F3667A8();
              sub_23F3DDBDC();
              sub_23F384AF8();
              sub_23F362984();
              v551 = sub_23F5CFB30();
              sub_23F5CFB7C(v551);
              sub_23F5CF734(&dword_23F35A000, v552, v553, "Could not format %s, using generic fallback dialog");
              sub_23F5CF7B8();
              sub_23F366530();
            }
            sub_23F5CF8EC();
            sub_23F3667A8();
            sub_23F3DDBDC();
            sub_23F384AF8();
            sub_23F5CFBEC();
            v557 = *(void (**)(uint64_t, uint64_t))(v688 + 8);
            v558 = v692;
            sub_23F3ECBA8(v678);
            sub_23F383EDC();
            sub_23F517218();
            sub_23F5CF79C(v667, *(uint64_t (**)(uint64_t, _QWORD))(v716 + 8));
            sub_23F5CF660();
            v557(v701, v558);
            return v757;
          }
          v555 = v537;
          sub_23F5CFBB8();
          v556 = v688;
          if (v555)
            sub_23F5CFC28();
          else
            sub_23F5CFD3C();
          v443 = v692;
          sub_23F5CF708();
          sub_23F5CF958();
          v313 = *(void (**)(uint64_t, uint64_t))(v556 + 8);
          v314 = v344;
          goto LABEL_253;
        }
        v346 = &qword_256E70268;
        v347 = v495;
      }
      sub_23F3CFCB0(v347, v346);
      v515 = v679;
      sub_23F5CFB04();
      sub_23F507654();
      v516 = sub_23F3F0EEC();
      v517 = sub_23F49BA04(v516);
      v518 = v692;
      if (v517)
      {
        v519 = (_WORD *)sub_23F366668();
        sub_23F507DB0(v519);
        sub_23F5CF74C(&dword_23F35A000, v520, v521, "DefaultFallbackDialogGenerator.generateFallback: no parameter name");
        sub_23F366530();
      }

      sub_23F5CF79C(v515, *(uint64_t (**)(uint64_t, _QWORD))(v716 + 8));
      sub_23F5CF034();
      sub_23F362D64();
      sub_23F5CF8E0();
      sub_23F5CF840();
      v252 = *(void (**)(uint64_t, uint64_t))(v343 + 8);
      v250 = v344;
LABEL_229:
      v251 = v518;
      goto LABEL_230;
    }
    if (v172 == *MEMORY[0x24BE53310])
    {
      sub_23F383D74((uint64_t)v163, *(uint64_t (**)(uint64_t, uint64_t))(v168 + 96));
      v354 = v680;
      v355 = v694;
      sub_23F5CFD64(*(uint64_t (**)(void))(v680 + 32));
      v356 = v671;
      sub_23F5CFAA0();
      v357 = sub_23F5CF77C(v356);
      if (v318)
      {
        sub_23F5CFD34(v357, &qword_256E70238);
      }
      else
      {
        sub_23F5CFCCC();
        sub_23F5CF760();
        isUniquelyReferenced_nonNull_native = *(_QWORD *)(v356 + 16);
        if (isUniquelyReferenced_nonNull_native)
        {
          sub_23F5CF6C4();
          v437 = v689;
          while (1)
          {
            sub_23F5CF938();
            sub_23F5CFB28();
            sub_23F5CFD10();
            v168 = v694;
            if (v355 == sub_23F618224() && v437 == v438)
              break;
            v355 = sub_23F5CF6A8();
            sub_23F384120();
            sub_23F362984();
            if ((v355 & 1) != 0)
              goto LABEL_222;
            sub_23F5CFAB8();
            v437 = v689;
            sub_23F5CF894(v440);
            sub_23F5CFE48();
            if (v318)
            {
              sub_23F362C60();
              sub_23F5CFAF4();
              v355 = v694;
              goto LABEL_213;
            }
          }
LABEL_221:
          sub_23F362C60();
          sub_23F384120();
LABEL_222:
          v168 = v729;
          sub_23F384120();
          sub_23F5CFD6C();
          v554 = v663;
          sub_23F3D9B80(v663, v689, v579);
          sub_23F5CFD00();
          v355 = v694;
        }
        else
        {
          sub_23F5CFCD4();
LABEL_213:
          v554 = v663;
        }
        sub_23F36196C(v554, v441, 1, v168);
        sub_23F362C60();
        v580 = sub_23F383740(v554, 1, v168);
        if (!v318)
        {
          sub_23F5CFA50();
          sub_23F5CF9A8();
          sub_23F35D2E8(qword_256E71B18);
          v588 = (__n128 *)swift_initStackObject();
          v755 = xmmword_23F61EBC0;
          sub_23F5CF640(v588, (__n128)xmmword_23F61EBC0);
          v589 = MEMORY[0x24BEE0D00];
          sub_23F5CFA94();
          v591[6] = v590 | 8;
          v591[7] = 0x800000023F63A2C0;
          v591[9] = v589;
          v591[10] = v216;
          sub_23F5CF96C((uint64_t)v591);
          v592 = sub_23F618224();
          sub_23F5CFA00(v592, v593);
          v594 = v694;
          v757 = sub_23F5CFE04();
          sub_23F61841C();
          sub_23F5CFC08();
          if (v3)
          {
            v746 = v3;
            sub_23F5CF880();
            sub_23F619124();
            v596 = v680;
            v597 = v644;
            sub_23F507B0C(v644, v594);
            sub_23F507B0C(v657, v597);
            sub_23F5CFC98();
            sub_23F5CFB48();
            v598 = swift_allocObject();
            sub_23F5CF7E0(v598);
            sub_23F619E8C();
            sub_23F5CFBF4();
            v599 = sub_23F36682C();
            sub_23F5CFB3C(v599);
            v600 = sub_23F36682C();
            sub_23F5CF948(v600);
            v601 = sub_23F36682C();
            *(_QWORD *)(v601 + 16) = sub_23F5CF07C;
            *(_QWORD *)(v601 + 24) = v596;
            v602 = sub_23F36682C();
            *(_QWORD *)(v602 + 16) = sub_23F5CF5F8;
            *(_QWORD *)(v602 + 24) = v601;
            sub_23F35D2E8(&qword_256E7E130);
            v603 = (__n128 *)swift_initStackObject();
            sub_23F5CFAE4(v603);
            v604[4] = sub_23F5CF600;
            v604[5] = v599;
            v604[6] = sub_23F5CF600;
            v604[7] = isUniquelyReferenced_nonNull_native;
            sub_23F5CFDC0((uint64_t)v604, (uint64_t)sub_23F5CF5FC);
            sub_23F4161E8();
            sub_23F5CFB14();
            sub_23F3D9B78();
            sub_23F3D9D3C();
            sub_23F3D0A10();
            sub_23F513618();
            if (sub_23F5CF7A4())
            {
              sub_23F366668();
              v605 = sub_23F366668();
              sub_23F5CF7F8(v605);
              sub_23F5CF870();
              sub_23F5CFC64();
              sub_23F5CFC48();
              sub_23F61841C();
              v606 = sub_23F5CFB98();
              sub_23F5CFBFC(v606, v607);
              sub_23F5CF854(v608);
              sub_23F3667A8();
              sub_23F3DDBDC();
              sub_23F384AF8();
              sub_23F362984();
              v609 = sub_23F5CFB30();
              sub_23F5CFB7C(v609);
              sub_23F5CF734(&dword_23F35A000, v610, v611, "Could not format %s, using generic fallback dialog");
              sub_23F5CF7B8();
              sub_23F366530();
            }
            sub_23F5CF8EC();
            sub_23F3667A8();
            sub_23F3DDBDC();
            sub_23F384AF8();
            sub_23F5CFBEC();
            v617 = *(void (**)(uint64_t, uint64_t))(v680 + 8);
            v618 = v684;
            sub_23F3ECBA8(v657);
            sub_23F383EDC();
            sub_23F517218();
            sub_23F5CF79C(v668, *(uint64_t (**)(uint64_t, _QWORD))(v716 + 8));
            sub_23F5CF660();
            v617(v694, v618);
            return v757;
          }
          v613 = v595;
          sub_23F5CF880();
          v614 = v680;
          if (v613)
            sub_23F5CFC28();
          else
            sub_23F5CFD3C();
          v443 = v684;
          sub_23F5CF708();
          sub_23F5CF958();
          v313 = *(void (**)(uint64_t, uint64_t))(v614 + 8);
          v314 = v594;
          goto LABEL_253;
        }
        sub_23F5CFD2C(v580, &qword_256E70268);
        v354 = v680;
      }
      v581 = v669;
      sub_23F5CFB04();
      sub_23F507654();
      v582 = sub_23F3F0EEC();
      v583 = sub_23F49BA04(v582);
      v518 = v684;
      if (v583)
      {
        v584 = (_WORD *)sub_23F366668();
        sub_23F507DB0(v584);
        sub_23F5CF74C(&dword_23F35A000, v585, v586, "DefaultFallbackDialogGenerator.generateFallback: no parameter name");
        sub_23F366530();
      }

      sub_23F5CF79C(v581, *(uint64_t (**)(uint64_t, _QWORD))(v716 + 8));
      sub_23F5CF034();
      sub_23F362D64();
      sub_23F5CF8E0();
      sub_23F5CF840();
      v252 = *(void (**)(uint64_t, uint64_t))(v354 + 8);
      v250 = v355;
      goto LABEL_229;
    }
    if (v172 == *MEMORY[0x24BE532D0])
    {
      sub_23F383F80((uint64_t)v163, *(uint64_t (**)(uint64_t, uint64_t))(v168 + 96));
      sub_23F383F00(v673, (uint64_t)v163, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v674 + 32));
      sub_23F35D2E8(&qword_256E7E140);
      v390 = (__n128 *)swift_initStackObject();
      sub_23F5CF640(v390, (__n128)xmmword_23F61E980);
      sub_23F5CFA94();
      v393 = sub_23F5CF9C8(v392, v391 - 2);
      *(_QWORD *)(v393 + 64) = 0x6D65726975716572;
      *(_QWORD *)(v393 + 72) = 0xEB00000000746E65;
      sub_23F5CC988();
      v390[5].n128_u64[0] = v394;
      v390[5].n128_u64[1] = v395;
      sub_23F35D2E8(&qword_256E70FD8);
      v396 = sub_23F61BFEC();
      v397 = v661;
      sub_23F5CFAA0();
      sub_23F5CF77C(v397);
      if (v318)
      {
        v398 = &qword_256E70238;
        v399 = v397;
      }
      else
      {
        v499 = v649;
        sub_23F61B578();
        sub_23F383CA8(v397, *(uint64_t (**)(uint64_t, uint64_t))(v755 + 8));
        v500 = sub_23F5CFE54();
        sub_23F383740(v499, 1, v500);
        if (!v501)
        {
          sub_23F61B968();
          sub_23F5CFE34();
          sub_23F383CA8(v499, v559);
          sub_23F40C38C();
          sub_23F5CF8B0();
          v396 = v756[0];
          sub_23F384450();
LABEL_217:
          static MobileGestalt.answerProductKey.getter();
          sub_23F40C38C();
          v756[0] = v396;
          sub_23F37ECDC();
          sub_23F384450();
          sub_23F585B30();
          v561 = v560;
          sub_23F362984();
          sub_23F5CFBCC(v673, v674);
          sub_23F383F80((uint64_t)v744, *(uint64_t (**)(uint64_t, uint64_t))(v168 + 8));
          return v561;
        }
        v398 = &qword_256E6FAD8;
        v399 = v499;
      }
      sub_23F3CFCB0(v399, v398);
      goto LABEL_217;
    }
    if (v172 == *MEMORY[0x24BE532F8])
    {
      v442 = sub_23F5CFAC4();
      v443 = v739;
      sub_23F383CA8(v442, v444);
      v445 = v658;
      v446 = *(void (**)(uint64_t, char *, uint64_t))(v658 + 32);
      v447 = v163;
      v449 = v659;
      v448 = v660;
      v446(v659, v447, v660);
      sub_23F35D2E8(qword_256E71B18);
      v450 = (__n128 *)sub_23F36682C();
      sub_23F5CF640(v450, (__n128)xmmword_23F61E980);
      sub_23F5CFA94();
      v454 = sub_23F5CF9D8(v451, v452, v453);
      v454[11] = v455;
      v454[12] = 0x726577736E41;
      v454[13] = 0xE600000000000000;
      v757 = sub_23F61BFEC();
      v456 = MEMORY[0x24266B788]();
      sub_23F5CFB1C();
      sub_23F5C87E0(v456);
      if (v216)
      {
        v746 = v216;
        sub_23F362984();
        sub_23F5CFB04();
        v457 = *(void (**)(uint64_t, uint64_t, uint64_t))(v445 + 16);
        v458 = v642;
        v457((uint64_t)v642, v449, v448);
        v457(v654, (uint64_t)v458, v448);
        sub_23F5CFC98();
        sub_23F5CFB48();
        v459 = swift_allocObject();
        v446((uint64_t)v457 + v459, v458, v448);
        sub_23F507654();
        sub_23F5CFBF4();
        v460 = sub_23F36682C();
        sub_23F5CFB3C(v460);
        v461 = sub_23F36682C();
        sub_23F5CF948(v461);
        v462 = sub_23F36682C();
        *(_QWORD *)(v462 + 16) = sub_23F5CF10C;
        *(_QWORD *)(v462 + 24) = v459;
        v463 = sub_23F36682C();
        *(_QWORD *)(v463 + 16) = sub_23F5CF5F8;
        *(_QWORD *)(v463 + 24) = v462;
        sub_23F35D2E8(&qword_256E7E130);
        v464 = sub_23F36682C();
        *(_OWORD *)(v464 + 16) = xmmword_23F61EBC0;
        *(_QWORD *)(v464 + 32) = sub_23F5CF600;
        *(_QWORD *)(v464 + 40) = v460;
        *(_QWORD *)(v464 + 48) = sub_23F5CF600;
        *(_QWORD *)(v464 + 56) = v449;
        sub_23F5CFD78(v464, (uint64_t)sub_23F5CF5FC);
        sub_23F4161E8();
        sub_23F5CFB14();
        sub_23F3D0A10();
        sub_23F3D9D3C();
        sub_23F3D9B78();
        sub_23F513618();
        if (sub_23F5CF7A4())
        {
          v465 = sub_23F366668();
          v754 = sub_23F366668();
          v756[0] = v754;
          *(_WORD *)v465 = 258;
          *(_BYTE *)(v465 + 2) = 32;
          sub_23F384AF8();
          sub_23F5CF870();
          v752 = v465 + 4;
          sub_23F5CFC48();
          MEMORY[0x24266B788]();
          sub_23F5CFDE0();
        }
        sub_23F5CF8EC();
        sub_23F3667A8();
        sub_23F3DDBDC();
        sub_23F383EDC();
        sub_23F5CFBEC();
        v615 = *(void (**)(uint64_t, uint64_t))(v658 + 8);
        v616 = v660;
        sub_23F3ECBA8(v654);
        sub_23F384AF8();
        sub_23F517218();
        sub_23F5CF79C(v653, *(uint64_t (**)(uint64_t, _QWORD))(v716 + 8));
        v615(v659, v616);
        sub_23F5CF660();
        return v757;
      }
      sub_23F362984();
      v612 = sub_23F35D2E8(&qword_256E70580);
      sub_23F5CF674(v612);
      sub_23F383F80(v449, *(uint64_t (**)(uint64_t, uint64_t))(v445 + 8));
      v313 = *(void (**)(uint64_t, uint64_t))(v731 + 8);
      v314 = (uint64_t)v744;
LABEL_253:
      v315 = v443;
LABEL_66:
      v313(v314, v315);
      return v757;
    }
    if (v172 != *MEMORY[0x24BE53320])
    {
      *(_QWORD *)&v755 = v163;
      sub_23F619124();
      v562 = v637;
      v563 = v739;
      v171(v637, v744, v739);
      v171(v647, v562, v563);
      v564 = v168;
      v565 = (*(unsigned __int8 *)(v168 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80);
      sub_23F5CFB48();
      v566 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v564 + 32))(v566 + v565, v562, v563);
      v567 = sub_23F619E8C();
      LODWORD(v754) = sub_23F61C628();
      v568 = sub_23F36682C();
      sub_23F5CFB3C(v568);
      v569 = sub_23F36682C();
      sub_23F5CF948(v569);
      v570 = sub_23F36682C();
      *(_QWORD *)(v570 + 16) = sub_23F5CEFF8;
      *(_QWORD *)(v570 + 24) = v566;
      v571 = sub_23F36682C();
      *(_QWORD *)(v571 + 16) = sub_23F5CF024;
      *(_QWORD *)(v571 + 24) = v570;
      sub_23F35D2E8(&qword_256E7E130);
      v572 = swift_initStackObject();
      *(_OWORD *)(v572 + 16) = xmmword_23F61EBC0;
      *(_QWORD *)(v572 + 32) = sub_23F5CF018;
      *(_QWORD *)(v572 + 40) = v568;
      *(_QWORD *)(v572 + 48) = sub_23F5CF600;
      *(_QWORD *)(v572 + 56) = v564;
      sub_23F5CFD78(v572, (uint64_t)sub_23F5CF02C);
      swift_retain();
      sub_23F5CFB14();
      sub_23F3D0A10();
      sub_23F3D9D3C();
      sub_23F3D9B78();
      sub_23F513618();
      v168 = v754;
      v754 = (uint64_t)v567;
      if (os_log_type_enabled(v567, (os_log_type_t)v168))
      {
        v573 = sub_23F366668();
        LODWORD(v752) = v168;
        v574 = (uint8_t *)v573;
        v753 = (void (*)(uint64_t, uint64_t))sub_23F366668();
        v756[0] = (uint64_t)v753;
        *(_WORD *)v574 = 258;
        v574[2] = 32;
        sub_23F384AF8();
        v574[3] = 8;
        sub_23F517218();
        v751 = v574 + 4;
        v575 = (uint64_t)v647;
        v171(v631, v647, v739);
        v576 = sub_23F61C16C();
        sub_23F37AE00(v576, v577, v756);
        v756[60] = v578;
        sub_23F61C790();
        swift_release();
        sub_23F3DDBDC();
        sub_23F383EDC();
        sub_23F38458C();
        sub_23F5CFC74(v575);
        _os_log_impl(&dword_23F35A000, (os_log_t)v754, (os_log_type_t)v752, "ToolResult.getOutputKeyValues: no fallback for unknown outcome %s", v574, 0xCu);
        swift_arrayDestroy();
        sub_23F366530();
      }
      swift_release();
      sub_23F3DDBDC();
      sub_23F383EDC();
      sub_23F517218();
      sub_23F384AF8();
      sub_23F5CFC74((uint64_t)v647);

      sub_23F5CF79C(v650, *(uint64_t (**)(uint64_t, _QWORD))(v716 + 8));
      sub_23F5CF034();
      sub_23F362D64();
      sub_23F5CF8E0();
      sub_23F5CFC74((uint64_t)v744);
      sub_23F5CFC74(v755);
      return v168;
    }
    sub_23F383F80((uint64_t)v163, *(uint64_t (**)(uint64_t, uint64_t))(v168 + 96));
    sub_23F383F00(v651, (uint64_t)v163, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v652 + 32));
    sub_23F35D2E8(&qword_256E7E140);
    v502 = (__n128 *)swift_initStackObject();
    v503 = sub_23F5CF640(v502, (__n128)xmmword_23F61E980);
    v503[3] = (__n128)xmmword_23F6308C0;
    v503[4].n128_u64[0] = 0x6572756C696166;
    v503[4].n128_u64[1] = v504;
    sub_23F5CD560();
    v502[5].n128_u64[0] = v505;
    v502[5].n128_u64[1] = v506;
    sub_23F35D2E8(&qword_256E70FD8);
    v507 = sub_23F61BFEC();
    v508 = v640;
    sub_23F617D44();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v639 + 88))(v508, v641) == *MEMORY[0x24BE522B0])
    {
      v509 = sub_23F3848D8();
      v510(v509);
      v511 = v633;
      v512 = v634;
      v513 = v635;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v634 + 32))(v633, v508, v635);
      sub_23F617D20();
      sub_23F40C38C();
      v756[0] = v507;
      sub_23F5CFA94();
      sub_23F37ECDC();
      sub_23F384450();
      (*(void (**)(uint64_t, uint64_t))(v512 + 8))(v511, v513);
    }
    else
    {
      v619 = sub_23F3848D8();
      v621(v619, v620);
    }
    v622 = v752;
    v623 = v638;
    sub_23F5CFAA0();
    sub_23F383740(v623, 1, v622);
    if (v318)
    {
      v624 = &qword_256E70238;
      v625 = v623;
    }
    else
    {
      v626 = v632;
      sub_23F61B578();
      sub_23F383CA8(v623, *(uint64_t (**)(uint64_t, uint64_t))(v755 + 8));
      v627 = sub_23F5CFE54();
      sub_23F383740(v626, 1, v627);
      if (!v628)
      {
        sub_23F61B968();
        sub_23F5CFE34();
        sub_23F383CA8(v626, v629);
        sub_23F40C38C();
        sub_23F5CF8B0();
        sub_23F384450();
LABEL_254:
        sub_23F585B30();
        v380 = v630;
        sub_23F362C60();
        sub_23F5CFBCC(v651, v652);
        v382 = sub_23F5CFD80();
        goto LABEL_129;
      }
      v624 = &qword_256E6FAD8;
      v625 = v626;
    }
    sub_23F3CFCB0(v625, v624);
    goto LABEL_254;
  }
  v731 = v168;
  sub_23F383F80((uint64_t)v163, *(uint64_t (**)(uint64_t, uint64_t))(v168 + 96));
  (*(void (**)(uint64_t, char *, uint64_t))(v741 + 32))(v745, v163, v742);
  v173 = v735;
  sub_23F61AB58();
  v174 = sub_23F61A21C();
  v175 = sub_23F383740(v173, 1, v174);
  if (v318)
  {
    sub_23F5CFD2C(v175, &qword_256E73D28);
    v176 = MEMORY[0x24BEE4B00];
  }
  else
  {
    v183 = v153;
    v184 = *(_QWORD *)(v174 - 8);
    v185 = sub_23F3848D8();
    v187 = v186(v185);
    v188 = v173;
    v189 = v187;
    v190 = *MEMORY[0x24BE551B8];
    v191 = *(void (**)(uint64_t, uint64_t))(v184 + 8);
    v153 = v183;
    v191(v188, v174);
    v176 = MEMORY[0x24BEE4B00];
    if (v189 == v190)
    {
      swift_isUniquelyReferenced_nonNull_native();
      v756[0] = v176;
      sub_23F37EECC();
      v176 = v756[0];
      sub_23F384450();
    }
  }
  v735 = v176;
  v192 = v736;
  sub_23F61AB4C();
  v193 = v737;
  sub_23F61A4F8();
  v734(v192, v743);
  v194 = v738;
  sub_23F61AC9C();
  ((void (*)(uint64_t, _QWORD))v169)(v193, v170);
  v195 = sub_23F383740(v194, 1, v740);
  if (v318)
  {
    sub_23F5CFD34(v195, &qword_256E6FB18);
    v196 = v727;
    sub_23F617DA4();
    v197 = v728;
    v198 = v725;
    v199 = (*(uint64_t (**)(uint64_t, uint64_t))(v728 + 88))(v196, v725);
    v200 = v746;
    if (v199 == *MEMORY[0x24BEB9988])
    {
      (*(void (**)(uint64_t, uint64_t))(v197 + 96))(v196, v198);
      v201 = swift_projectBox();
      v202 = v712;
      v203 = v711;
      v204 = v713;
      sub_23F383F00(v711, v201, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v712 + 16));
      v205 = sub_23F61B6D4();
      sub_23F5CFB1C();
      v206 = sub_23F5C867C(v205);
      swift_bridgeObjectRelease();
      sub_23F35D2E8(qword_256E71B18);
      v207 = (__n128 *)sub_23F36682C();
      v208 = sub_23F5CF640(v207, (__n128)xmmword_23F61E980);
      v739 = v153;
      v209 = MEMORY[0x24BEE0D00];
      v210 = (_QWORD *)sub_23F5CF980((uint64_t)v208);
      v210[9] = v209;
      v210[10] = v211;
      v210[11] = 0xEC0000007365756CLL;
      v207[7].n128_u64[1] = sub_23F35D2E8(&qword_256E70580);
      v207[6].n128_u64[0] = v206;
      v212 = sub_23F61BFEC();
      sub_23F617BA0();
      sub_23F585874();
      v214 = v213;
      swift_bridgeObjectRelease();
      v168 = sub_23F5C892C(v214, v212);
      (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v203, v204);
      swift_bridgeObjectRelease();
      sub_23F5CF7CC();
      (*(void (**)(char *, uint64_t))(v731 + 8))(v744, v739);
      swift_release();
      return v168;
    }
    v253 = v710;
    sub_23F617DA4();
    v254 = sub_23F417D48(v253);
    if (v200)
    {

      sub_23F5CFBA4();
    }
    else
    {
      v316 = v254;
      v317 = v255;
      sub_23F5CFBA4();
      if (v317)
      {
        v318 = v316 == (_QWORD *)1701736302 && v317 == 0xE400000000000000;
        if (!v318 && (sub_23F61CC64() & 1) == 0)
        {
          sub_23F35D2E8(qword_256E71B18);
          v358 = (__n128 *)sub_23F36682C();
          v359 = sub_23F5CF8F4(v358, (__n128)xmmword_23F61E980);
          v359[2].n128_u64[0] = v360;
          v359[2].n128_u64[1] = v361;
          v362 = (_QWORD *)sub_23F5CF980((uint64_t)v359);
          v362[9] = v363;
          v362[10] = v364;
          v362[15] = v363;
          v362[11] = 0xEB0000000065756CLL;
          v362[12] = v316;
          v362[13] = v317;
          sub_23F61BFEC();
          sub_23F617BA0();
          sub_23F585874();
          sub_23F38458C();
          v168 = sub_23F5CFD1C();
          sub_23F38458C();
          sub_23F5CF7CC();
          sub_23F5CF82C();
          v321 = v727;
          v322 = v198;
          goto LABEL_76;
        }
        sub_23F362C60();
      }
    }
    sub_23F35D2E8(qword_256E71B18);
    v319 = (__n128 *)sub_23F36682C();
    v320 = sub_23F5CF640(v319, (__n128)xmmword_23F61E7E0);
    sub_23F5CFB54(v320, MEMORY[0x24BEE0D00]);
    sub_23F61BFEC();
    sub_23F383EB0();
    sub_23F585874();
    sub_23F384120();
    v168 = sub_23F5CFD1C();
    sub_23F384120();
    sub_23F5CF7CC();
    sub_23F5CF82C();
    v321 = v727;
    v322 = v198;
LABEL_76:
    v170(v321, v322);
    return v168;
  }
  sub_23F3D9B80(v732, v194, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v733 + 32));
  sub_23F6185C0();
  sub_23F617018();
  v246 = (void *)sub_23F6185A8();
  v247 = MEMORY[0x24266B5F0]();
  v248 = v746;
  if (v247)
  {
    v168 = v247;
    v249 = sub_23F5BBAA8(v246, v247);
    if (v248)
    {

      sub_23F362984();
      sub_23F5CFBD8();
      swift_bridgeObjectRelease();
      sub_23F5CF7CC();
      v250 = sub_23F5CFD80();
LABEL_230:
      v252(v250, v251);
      return v168;
    }
    v265 = v249;
    swift_bridgeObjectRelease();
    v259 = v265;
  }
  else
  {
    v259 = MEMORY[0x24BEE4AF8];
  }
  v746 = v248;
  v266 = *(uint8_t **)(v259 + 16);
  v743 = v246;
  if (!v266)
  {
LABEL_58:
    swift_bridgeObjectRelease();
    sub_23F35D2E8(qword_256E71B18);
    v298 = (__n128 *)sub_23F36682C();
    v299 = sub_23F5CF640(v298, (__n128)xmmword_23F61E7E0);
    sub_23F5CFB54(v299, MEMORY[0x24BEE0D00]);
    v300 = sub_23F61BFEC();
    sub_23F585678();
    v302 = v301;
    sub_23F384364();
    sub_23F5C892C(v302, v300);
    sub_23F383EB0();
    sub_23F585874();
    sub_23F384120();
    v303 = sub_23F3848D8();
    v168 = sub_23F5C892C(v303, v304);

    sub_23F5CFBD8();
    sub_23F384120();
    sub_23F5CF7CC();
    sub_23F5CF82C();
    return v168;
  }
  v739 = v153;
  v3 = (_QWORD *)v259;
  v267 = sub_23F617BA0();
  v216 = (_QWORD *)MEMORY[0x24BEE4B00];
  v738 = v267;
  v268 = v267 + 64;
  while (1)
  {
    v269 = *(NSObject **)(v268 - 32);
    v270 = *(NSObject **)(v268 - 24);
    v272 = *(_QWORD *)(v268 - 8);
    v271 = *(_QWORD *)v268;
    if (!*(_QWORD *)(*(_QWORD *)v268 + 16))
    {
      sub_23F5CFDA0();
      sub_23F383EB0();
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F3754D4((uint64_t)v269, (uint64_t)v270);
      v291 = v290;
      sub_23F384364();
      if ((v291 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v754 = (uint64_t)v270;
        v756[0] = (uint64_t)v216;
        *(_QWORD *)&v755 = v272;
        sub_23F35D2E8(&qword_256E6FCB0);
        sub_23F61CA18();
        v216 = (_QWORD *)v756[0];
        swift_bridgeObjectRelease();
        sub_23F5CFB30();
        sub_23F61CA30();
        sub_23F38458C();
        swift_bridgeObjectRelease();
        sub_23F362984();
        sub_23F384A80();
        sub_23F384450();
      }
      else
      {
        sub_23F38458C();
        sub_23F384120();
        sub_23F384A80();
      }
      goto LABEL_56;
    }
    v751 = v266;
    v754 = (uint64_t)v269;
    v273 = v748;
    v274 = v271 + ((*(unsigned __int8 *)(v748 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v748 + 80));
    v275 = v271;
    v276 = v747;
    v277 = v749;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v748 + 16))(v747, v274, v749);
    sub_23F5CFDA0();
    *(_QWORD *)&v755 = v272;
    sub_23F383EB0();
    v750 = v275;
    sub_23F617BA0();
    v752 = sub_23F6185FC();
    v753 = v278;
    (*(void (**)(uint64_t, uint64_t))(v273 + 8))(v276, v277);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v756[0] = (uint64_t)v216;
    v280 = (os_log_t)v754;
    v281 = (uint64_t)v270;
    v282 = sub_23F3754D4(v754, (uint64_t)v270);
    if (__OFADD__(v216[2], (v283 & 1) == 0))
    {
      __break(1u);
      goto LABEL_201;
    }
    v284 = v282;
    v285 = v283;
    sub_23F35D2E8(&qword_256E6FCB0);
    if ((sub_23F61CA18() & 1) != 0)
      break;
LABEL_48:
    v216 = (_QWORD *)v756[0];
    if ((v285 & 1) != 0)
    {
      v288 = (uint64_t *)(*(_QWORD *)(v756[0] + 56) + 16 * v284);
      swift_bridgeObjectRelease();
      v289 = v753;
      *v288 = v752;
      v288[1] = (uint64_t)v289;
    }
    else
    {
      *(_QWORD *)(v756[0] + 8 * (v284 >> 6) + 64) |= 1 << v284;
      v292 = (os_log_t *)(v216[6] + 16 * v284);
      *v292 = v280;
      v292[1] = (os_log_t)v281;
      v293 = (uint64_t *)(v216[7] + 16 * v284);
      v294 = v753;
      *v293 = v752;
      v293[1] = (uint64_t)v294;
      v295 = v216[2];
      v296 = __OFADD__(v295, 1);
      v297 = v295 + 1;
      if (v296)
      {
        __break(1u);
        goto LABEL_221;
      }
      v216[2] = v297;
      sub_23F617BA0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F384A80();
    sub_23F384450();
    v266 = v751;
LABEL_56:
    v268 += 40;
    if (!--v266)
    {
      sub_23F362984();
      goto LABEL_58;
    }
  }
  v286 = sub_23F3754D4((uint64_t)v280, v281);
  if ((v285 & 1) == (v287 & 1))
  {
    v284 = v286;
    goto LABEL_48;
  }
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

void static MobileGestalt.answerProductKey.getter()
{
  if (qword_256E6EED0 != -1)
    swift_once();
  __asm { BR              X10 }
}

id sub_23F5CC92C()
{
  void *v0;
  id v1;

  v0 = (void *)sub_23F61C0E8();
  sub_23F362D18();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleWithIdentifier_, v0);

  return v1;
}

void sub_23F5CC988()
{
  uint64_t v0;
  uint64_t v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  char *v40;
  NSObject *v41;
  Class isa;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(uint64_t, NSObject *);
  uint64_t v51;
  uint64_t v52;
  int v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t);
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t);
  int v92;
  uint64_t v93;
  os_log_type_t v94;
  uint64_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint8_t *v116;
  uint8_t *v117;
  uint64_t v118;
  uint8_t *v119;
  uint8_t *v120;
  uint64_t v121;
  uint64_t v122;

  v1 = sub_23F6182FC();
  v2 = *(uint8_t **)(v1 - 8);
  v116 = (uint8_t *)v1;
  v117 = v2;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3834D0();
  v101 = v4;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3838E4();
  v102 = v6;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3838E4();
  v114 = v8;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F383780();
  v115 = v10;
  sub_23F39C56C();
  v11 = (uint8_t *)sub_23F617E4C();
  v12 = *((_QWORD *)v11 - 1);
  v120 = v11;
  v121 = v12;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3834D0();
  v107 = v14;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3838E4();
  v108 = v16;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F3838E4();
  v119 = (uint8_t *)v18;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F383780();
  v118 = v20;
  sub_23F39C56C();
  v21 = sub_23F619E98();
  v112 = *(_QWORD *)(v21 - 8);
  v113 = v21;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3834D0();
  v111 = v23;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3838E4();
  v103 = v25;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F3838E4();
  v109 = v27;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F383780();
  v106 = v29;
  sub_23F39C56C();
  v30 = sub_23F6181DC();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  sub_23F3834D0();
  v104 = v32;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F3838E4();
  v105 = v34;
  sub_23F383588();
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (uint8_t *)&v101 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v101 - v39;
  v41 = sub_23F61814C();
  isa = v41[-1].isa;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v101 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  sub_23F3838E4();
  v110 = v46;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v47);
  v49 = (char *)&v101 - v48;
  v50 = (void (*)(uint64_t, NSObject *))*((_QWORD *)isa + 2);
  v51 = sub_23F3848D8();
  sub_23F5CFE2C(v51, v52);
  v53 = (*((uint64_t (**)(char *, NSObject *))isa + 11))(v49, v41);
  if (v53 != *MEMORY[0x24BE53360])
  {
    if (v53 == *MEMORY[0x24BE53358])
    {
      sub_23F5CFAA8();
      v56 = v121;
      v57 = v118;
      sub_23F5CFB70(v118, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v121 + 32));
      v58 = (uint64_t)v119;
      sub_23F5CFB0C((uint64_t)v119, v57);
      v59 = sub_23F3D98EC(v58, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 88));
      if (v59 == *MEMORY[0x24BE525E0] || v59 == *MEMORY[0x24BE525E8])
        goto LABEL_23;
      if (v59 == *MEMORY[0x24BE525F0])
        goto LABEL_21;
      v72 = v109;
      sub_23F619124();
      v73 = v108;
      sub_23F5CFB0C(v108, v57);
      sub_23F619E8C();
      v74 = sub_23F40B504();
      if (os_log_type_enabled(v41, v74))
      {
        v75 = (uint8_t *)sub_23F366668();
        v122 = sub_23F366668();
        v117 = v75;
        *(_DWORD *)v75 = 136315138;
        v116 = v75 + 4;
        sub_23F5CFB0C(v107, v73);
        v76 = sub_23F5CFDAC();
        sub_23F482C90(v76, v77);
        sub_23F5276E0(v78);
        sub_23F5CFDD4();
        swift_bridgeObjectRelease();
        sub_23F5CFA8C(v73);
        sub_23F38485C(&dword_23F35A000, v41, v74, "Unknown appRequirement when converting to string %s", v117);
        sub_23F3B17D4();
        sub_23F366530();
      }

      sub_23F5CFA8C(v73);
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v72, v113);
      sub_23F5CFA8C(v57);
      v82 = v58;
LABEL_37:
      sub_23F5CFA8C(v82);
      goto LABEL_53;
    }
    if (v53 != *MEMORY[0x24BE53350])
    {
      if (v53 == *MEMORY[0x24BE53368])
        goto LABEL_53;
      v64 = v111;
      sub_23F619124();
      v65 = v110;
      sub_23F5CFE2C(v110, v0);
      v66 = sub_23F619E8C();
      v67 = sub_23F61C628();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)sub_23F366668();
        v121 = sub_23F366668();
        v122 = v121;
        v120 = v68;
        *(_DWORD *)v68 = 136315138;
        v119 = v68 + 4;
        sub_23F5CFE2C((uint64_t)v45, v65);
        v69 = sub_23F61C16C();
        sub_23F482C90(v69, v70);
        sub_23F5CFCA4(v71);
        sub_23F61C790();
        swift_bridgeObjectRelease();
        (*((void (**)(uint64_t, NSObject *))isa + 1))(v65, v41);
        sub_23F38485C(&dword_23F35A000, v66, v67, "Unknown actionRequirement when converting to string %s", v120);
        sub_23F3B17D4();
        sub_23F366530();
      }
      v50 = (void (*)(uint64_t, NSObject *))*((_QWORD *)isa + 1);
      v50(v65, v41);

      sub_23F5CFDC8();
      v79(v64);
      v80 = (uint8_t *)v49;
      v81 = (uint64_t)v41;
      goto LABEL_33;
    }
    sub_23F5CFAA8();
    v60 = v117;
    v61 = v115;
    sub_23F5CFB70(v115, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v117 + 4));
    v62 = v114;
    sub_23F5CFB0C(v114, v61);
    v63 = sub_23F3D98EC(v62, *((uint64_t (**)(uint64_t, uint64_t))v60 + 11));
    if (v63 == *MEMORY[0x24BE53978] || v63 == *MEMORY[0x24BE539A8])
    {
LABEL_45:
      sub_23F5CF6F8();
      goto LABEL_53;
    }
    if (v63 == *MEMORY[0x24BE53970])
    {
      sub_23F5CF6F8();
      sub_23F5247A8();
      goto LABEL_53;
    }
    if (v63 != *MEMORY[0x24BE53998])
    {
      if (v63 == *MEMORY[0x24BE53980] || v63 == *MEMORY[0x24BE539A0])
        goto LABEL_45;
      if (v63 == *MEMORY[0x24BE53988])
      {
        sub_23F5CF6F8();
        sub_23F5CFCE0();
        goto LABEL_53;
      }
      if (v63 != *MEMORY[0x24BE53990])
      {
        v92 = v103;
        sub_23F619124();
        v93 = v102;
        sub_23F5CFB0C(v102, v61);
        sub_23F619E8C();
        v94 = sub_23F40B504();
        if (sub_23F40B304(v94))
        {
          v95 = sub_23F366668();
          LODWORD(v121) = v92;
          v96 = (uint8_t *)v95;
          v122 = sub_23F366668();
          *(_DWORD *)v96 = 136315138;
          v120 = v96 + 4;
          sub_23F5CFB0C(v101, v93);
          v97 = sub_23F5CFDAC();
          sub_23F482C90(v97, v98);
          sub_23F5276E0(v99);
          sub_23F61C790();
          swift_bridgeObjectRelease();
          sub_23F5CFA8C(v93);
          sub_23F38485C(&dword_23F35A000, v41, (os_log_type_t)v121, "ToolResult.getOutputKeyValues: unknown permissionRequirement %s", v96);
          sub_23F3B17D4();
          sub_23F366530();
        }

        sub_23F5CFA8C(v93);
        sub_23F5CFDC8();
        v100(v103);
        sub_23F5CFA8C(v61);
        v82 = v62;
        goto LABEL_37;
      }
    }
    sub_23F5CF6F8();
    sub_23F5CFCF0();
    goto LABEL_53;
  }
  sub_23F5CFAA8();
  sub_23F5CFB70((uint64_t)v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 32));
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
  sub_23F5CFDB4((uint64_t)v38);
  v55 = sub_23F3D98EC((uint64_t)v38, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 88));
  if (v55 != *MEMORY[0x24BE53590])
  {
    if (v55 == *MEMORY[0x24BE53588])
    {
      sub_23F41150C((uint64_t)v40);
      sub_23F41150C((uint64_t)v38);
      sub_23F5CFCF0();
      goto LABEL_53;
    }
    if (v55 == *MEMORY[0x24BE53530] || v55 == *MEMORY[0x24BE53578])
    {
LABEL_23:
      sub_23F5CF6E8();
      goto LABEL_53;
    }
    if (v55 == *MEMORY[0x24BE53500] || v55 == *MEMORY[0x24BE53528])
    {
      sub_23F5CF6E8();
      sub_23F5247A8();
      goto LABEL_53;
    }
    if (v55 == *MEMORY[0x24BE53580])
    {
LABEL_21:
      sub_23F5CF6E8();
      sub_23F5CFCE0();
      goto LABEL_53;
    }
    v83 = v106;
    sub_23F619124();
    v84 = v105;
    sub_23F5CFDB4(v105);
    sub_23F619E8C();
    v85 = sub_23F40B504();
    if (sub_23F40B304(v85))
    {
      v86 = (uint8_t *)sub_23F366668();
      v87 = sub_23F366668();
      v120 = v38;
      v122 = v87;
      v121 = (uint64_t)v40;
      *(_DWORD *)v86 = 136315138;
      v119 = v86 + 4;
      v54(v104, v84, v30);
      v88 = sub_23F5CFDAC();
      sub_23F482C90(v88, v89);
      sub_23F5CFCA4(v90);
      sub_23F61C790();
      swift_bridgeObjectRelease();
      sub_23F5CFC7C();
      sub_23F38485C(&dword_23F35A000, v41, (os_log_type_t)v83, "Unknown systemRequirement when converting to string: %s", v86);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F5CFC7C();
    sub_23F5CFDC8();
    v91(v83);
    v50((uint64_t)v40, v30);
    v80 = v38;
    v81 = v30;
LABEL_33:
    v50((uint64_t)v80, v81);
    goto LABEL_53;
  }
  sub_23F41150C((uint64_t)v40);
  sub_23F41150C((uint64_t)v38);
  sub_23F5247A8();
LABEL_53:
  sub_23F362948();
}

void sub_23F5CD560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  BOOL v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint8_t *v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = sub_23F617D50();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F38F964();
  v5 = v4 - v3;
  v6 = sub_23F619E98();
  v27 = *(_QWORD *)(v6 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v28 = v8;
  sub_23F39C56C();
  v9 = sub_23F617D14();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v22 - v12;
  sub_23F617D44();
  v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
  if (v14 == *MEMORY[0x24BE522B0])
  {
LABEL_2:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_8;
  }
  if (v14 != *MEMORY[0x24BE52248]
    && v14 != *MEMORY[0x24BE522B8]
    && v14 != *MEMORY[0x24BE52298]
    && v14 != *MEMORY[0x24BE52268]
    && v14 != *MEMORY[0x24BE522A0])
  {
    v26 = v6;
    if (v14 != *MEMORY[0x24BE52250]
      && v14 != *MEMORY[0x24BE52258]
      && v14 != *MEMORY[0x24BE522A8]
      && v14 != *MEMORY[0x24BE522C0]
      && v14 != *MEMORY[0x24BE52278]
      && v14 != *MEMORY[0x24BE52290]
      && v14 != *MEMORY[0x24BE522C8])
    {
      v15 = v14 == *MEMORY[0x24BE52280] || v14 == *MEMORY[0x24BE52260];
      if (!v15 && v14 != *MEMORY[0x24BE52270])
      {
        sub_23F619124();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v0, v1);
        v16 = sub_23F619E8C();
        v17 = sub_23F61C628();
        v25 = v16;
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)sub_23F366668();
          v24 = sub_23F366668();
          v30 = v24;
          v23 = v18;
          *(_DWORD *)v18 = 136315138;
          v22[1] = v18 + 4;
          sub_23F617D44();
          v19 = sub_23F61C16C();
          sub_23F37AE00(v19, v20, &v30);
          v29 = v21;
          sub_23F5CFDD4();
          sub_23F362984();
          sub_23F5CFC54();
          sub_23F38485C(&dword_23F35A000, v25, v17, "Unknown failure when converting to string %s", v23);
          sub_23F3B17D4();
          sub_23F366530();
        }
        sub_23F5CFC54();

        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
        goto LABEL_2;
      }
    }
  }
LABEL_8:
  sub_23F362948();
}

void sub_23F5CDA54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  id v14;
  uint64_t v15;
  BOOL v16;
  id v17;

  v3 = sub_23F6170CC();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F38F964();
  sub_23F61C0D0();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  sub_23F4DE5C8();
  v5 = sub_23F5CC92C();
  if (v5)
  {
    v6 = v5;
    v7 = sub_23F5CE72C(a2);
    if (v8)
    {
      v9 = v7;
      v10 = v8;
      sub_23F617BA0();
      sub_23F61C0C4();
      sub_23F5CFCBC();
      v17 = v6;
      if (sub_23F5CF910() == v9 && v10 == v11)
      {
        sub_23F362984();
LABEL_11:
        swift_bridgeObjectRelease();

        goto LABEL_12;
      }
      v13 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        goto LABEL_11;
      sub_23F61C0C4();
      sub_23F5CFCBC();
      v14 = v17;
      v16 = sub_23F5CF910() == 0x75536E6F73616572 && v15 == 0xEC00000078696666;
      if (v16 || (sub_23F61CC64() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_23F362984();

      }
      else
      {
        sub_23F61C280();
        sub_23F61C280();

        sub_23F362D18();
      }
    }
    else
    {

    }
  }
LABEL_12:
  sub_23F362948();
}

uint64_t sub_23F5CDCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];

  sub_23F35D2E8(&qword_256E70230);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F383EC4();
  sub_23F61AB88();
  v6 = sub_23F61B0BC();
  sub_23F383740(v2, 1, v6);
  if (v7)
  {
    sub_23F3CFCB0(v2, &qword_256E70230);
    return sub_23F61BFEC();
  }
  else
  {
    v8 = sub_23F61B098();
    v9 = sub_23F383F80(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8));
    MEMORY[0x24BDAC7A8](v9);
    v12[2] = a1;
    v12[3] = a2;
    v10 = sub_23F5C89A0((void (*)(uint64_t *__return_ptr, char *))sub_23F5CF3F8, (uint64_t)v12, v8);
    sub_23F384364();
  }
  return v10;
}

void StatementResultDigest.getInputKeyValues(typedValueFormatter:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_23F35D2E8(&qword_256E73D30);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F383EC4();
  sub_23F5CEFA8(a1, v1);
  v4 = type metadata accessor for TypedValueFormatter(0);
  sub_23F36196C(v1, 0, 1, v4);
  sub_23F5CFDEC(0);
  sub_23F5CFB84();
  sub_23F4DC270();
}

uint64_t sub_23F5CDE70@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (**v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  os_log_t v36;
  char *v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, os_log_t);
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, os_log_t);
  os_log_t v56;
  char *v57;
  uint64_t result;
  uint64_t v59;
  char *v60;
  os_log_t v61;
  char *v62;
  char *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  os_log_t v70;
  uint8_t *v71;
  uint64_t v72;
  char *v73;
  uint64_t (**v74)(char *, uint64_t);
  _QWORD *v75;
  void (*v76)(char *, os_log_t);
  _QWORD *v77;
  void (*v78)(char *, os_log_t);
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, os_log_t);
  uint8_t *v85;
  char *v86;
  void (*v87)(char *, os_log_t);
  uint8_t *v88;
  uint8_t *v89;
  uint64_t isa;
  os_log_t v91;
  char *v92;
  char *v93;
  os_log_t v94;
  char *v95;
  char *v96;
  char *v97;
  void (**v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;

  v101 = a4;
  v97 = a3;
  v92 = a2;
  v5 = sub_23F61B080();
  v94 = *(os_log_t *)(v5 - 8);
  v95 = (char *)v5;
  MEMORY[0x24BDAC7A8](v5);
  v93 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F619E98();
  v99 = *(_QWORD *)(v7 - 8);
  v100 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v89 = (uint8_t *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v96 = (char *)&v88 - v10;
  v11 = sub_23F35D2E8(&qword_256E73D30);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v88 = (uint8_t *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v98 = (void (**)(char *, uint64_t))((char *)&v88 - v14);
  v15 = sub_23F61B92C();
  isa = (uint64_t)v15[-1].isa;
  v91 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v88 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v88 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v88 - v25;
  v27 = sub_23F61A7E0();
  v28 = *(void (***)(char *, uint64_t))(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v88 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v88 - v32;
  sub_23F61B074();
  if (((unsigned int (*)(char *, uint64_t))v28[11])(v33, v27) == *MEMORY[0x24BE55998])
  {
    v95 = v18;
    v96 = v21;
    v28[12](v33, v27);
    v34 = isa;
    v35 = v33;
    v36 = v91;
    (*(void (**)(char *, char *, os_log_t))(isa + 32))(v26, v35, v91);
    v37 = v92;
    if (v92)
    {
      v38 = v102;
      v40 = sub_23F417D48((uint64_t)v26);
      v41 = v38;
      v42 = (uint64_t)v97;
      v43 = (uint64_t)v98;
      if (v38)
        goto LABEL_4;
      v37 = v39;
    }
    else
    {
      v40 = 0;
      v41 = v102;
      v42 = (uint64_t)v97;
      v43 = (uint64_t)v98;
    }
    sub_23F5CF458(v42, v43);
    (*(void (**)(char *, char *, os_log_t))(v34 + 16))(v24, v26, v36);
    if (v37)
    {
      v76 = *(void (**)(char *, os_log_t))(v34 + 8);
      v76(v24, v36);
      sub_23F3CFCB0(v43, &qword_256E73D30);
      result = ((uint64_t (*)(char *, os_log_t))v76)(v26, v36);
    }
    else
    {
      v80 = v43;
      v81 = v43;
      v82 = (uint64_t)v88;
      sub_23F5CF458(v80, (uint64_t)v88);
      v83 = type metadata accessor for TypedValueFormatter(0);
      if (sub_23F36195C(v82, 1, v83) == 1)
      {
        v84 = *(void (**)(char *, os_log_t))(v34 + 8);
        v84(v24, v36);
        sub_23F3CFCB0(v81, &qword_256E73D30);
        v84(v26, v36);
        result = sub_23F3CFCB0(v82, &qword_256E73D30);
LABEL_17:
        v79 = v101;
        *v101 = 0;
        v79[1] = 0;
        return result;
      }
      v85 = sub_23F600510((uint64_t)v24);
      if (v41)
      {
        (*(void (**)(char *, os_log_t))(v34 + 8))(v24, v36);
        sub_23F3CFCB0((uint64_t)v98, &qword_256E73D30);
        sub_23F5CF4A0(v82);
LABEL_4:
        v98 = (void (**)(char *, uint64_t))v41;
        v44 = v89;
        v45 = v96;
        sub_23F619124();
        v46 = v34;
        v47 = *(void (**)(char *, char *, os_log_t))(v34 + 16);
        v47(v45, v26, v36);
        v48 = sub_23F619E8C();
        v49 = sub_23F61C628();
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc();
          v51 = swift_slowAlloc();
          v102 = 0;
          v96 = (char *)v51;
          v104 = v51;
          *(_DWORD *)v50 = 136315138;
          v93 = (char *)(v50 + 4);
          v94 = v48;
          v47(v95, v45, v36);
          v52 = sub_23F61C16C();
          v97 = v26;
          sub_23F37AE00(v52, v53, &v104);
          v103 = v54;
          sub_23F61C790();
          swift_bridgeObjectRelease();
          v55 = *(void (**)(char *, os_log_t))(v46 + 8);
          v55(v45, v36);
          v56 = v94;
          _os_log_impl(&dword_23F35A000, v94, v49, "Error formatting %s, not including in input key values", v50, 0xCu);
          v57 = v96;
          swift_arrayDestroy();
          MEMORY[0x242670B70](v57, -1, -1);
          MEMORY[0x242670B70](v50, -1, -1);

          (*(void (**)(uint8_t *, uint64_t))(v99 + 8))(v89, v100);
          result = ((uint64_t (*)(char *, os_log_t))v55)(v97, v36);
        }
        else
        {

          v78 = *(void (**)(char *, os_log_t))(v46 + 8);
          v78(v45, v36);
          (*(void (**)(uint8_t *, uint64_t))(v99 + 8))(v44, v100);
          result = ((uint64_t (*)(char *, os_log_t))v78)(v26, v36);
        }
        goto LABEL_17;
      }
      v40 = v85;
      v37 = v86;
      v87 = *(void (**)(char *, os_log_t))(v34 + 8);
      v87(v24, v36);
      sub_23F3CFCB0((uint64_t)v98, &qword_256E73D30);
      v87(v26, v36);
      result = sub_23F5CF4A0(v82);
    }
    v77 = v101;
    *v101 = v40;
    v77[1] = v37;
    return result;
  }
  v92 = v31;
  v97 = v33;
  v98 = v28;
  v59 = v27;
  v60 = v96;
  sub_23F619124();
  v62 = v93;
  v61 = v94;
  v63 = v95;
  ((void (*)(char *, uint64_t, char *))v94[2].isa)(v93, a1, v95);
  v64 = sub_23F619E8C();
  v65 = sub_23F61C628();
  if (os_log_type_enabled(v64, v65))
  {
    v91 = v64;
    v66 = (uint8_t *)swift_slowAlloc();
    isa = swift_slowAlloc();
    v104 = isa;
    *(_DWORD *)v66 = 136315138;
    v88 = v66 + 4;
    v89 = v66;
    sub_23F61B074();
    v67 = sub_23F61C16C();
    sub_23F37AE00(v67, v68, &v104);
    v103 = v69;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *))v61[1].isa)(v62, v63);
    v70 = v91;
    v71 = v89;
    _os_log_impl(&dword_23F35A000, v91, v65, "Unsupported parameter value %s, not including in input key values", v89, 0xCu);
    v72 = isa;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v72, -1, -1);
    MEMORY[0x242670B70](v71, -1, -1);

  }
  else
  {
    ((void (*)(char *, char *))v61[1].isa)(v62, v63);

  }
  (*(void (**)(char *, uint64_t))(v99 + 8))(v60, v100);
  v73 = v97;
  v74 = (uint64_t (**)(char *, uint64_t))v98;
  v75 = v101;
  *v101 = 0;
  v75[1] = 0;
  return v74[1](v73, v59);
}

void sub_23F5CE5FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;

  v2 = a2();
  v3 = sub_23F61B92C();
  MEMORY[0x24266F8F8](v2, v3);
  sub_23F362D18();
  sub_23F362B80();
}

void sub_23F5CE648(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;

  sub_23F61B92C();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F38F964();
  a2();
  sub_23F61C16C();
  sub_23F362B80();
}

uint64_t sub_23F5CE6AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_23F618134();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  return sub_23F61C16C();
}

uint64_t sub_23F5CE72C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;

  v68 = a1;
  v2 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v2);
  v67 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F61B92C();
  v69 = *(_QWORD *)(v4 - 8);
  v70 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v75 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_23F61B8A8();
  v64 = *(_QWORD *)(v66 - 8);
  v6 = MEMORY[0x24BDAC7A8](v66);
  v65 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v76 = (char *)&v63 - v8;
  v9 = sub_23F617DD4();
  v72 = *(_QWORD *)(v9 - 8);
  v73 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v71 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_23F618134();
  v11 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F61ACA8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F61A504();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v63 - v23;
  v74 = v1;
  sub_23F61AB4C();
  sub_23F61A4F8();
  v25 = *(void (**)(char *, uint64_t))(v19 + 8);
  v25(v24, v18);
  sub_23F61AC78();
  v26 = v14;
  v27 = v77;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v26);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v27);
  if (v28 != *MEMORY[0x24BE53328])
  {
    v38 = v28;
    if (v28 == *MEMORY[0x24BE532D8] || v28 == *MEMORY[0x24BE532E0])
    {
      v39 = 0xD000000000000012;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
    }
    else if (v28 == *MEMORY[0x24BE532E8])
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
      return 0xD000000000000013;
    }
    else if (v28 == *MEMORY[0x24BE53300])
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
      return 0xD000000000000015;
    }
    else
    {
      if (v28 == *MEMORY[0x24BE53308])
        goto LABEL_33;
      if (v28 == *MEMORY[0x24BE532F0] || v28 == *MEMORY[0x24BE53310] || v28 == *MEMORY[0x24BE532D0])
      {
        v39 = 0x6572756C696166;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
        return v39;
      }
      if (v28 == *MEMORY[0x24BE532F8])
      {
LABEL_33:
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
        return 0xD000000000000017;
      }
      else
      {
        v62 = *MEMORY[0x24BE53320];
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
        if (v38 == v62)
          return 0x6572756C696166;
        else
          return 0;
      }
    }
    return v39;
  }
  (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v27);
  v30 = v71;
  v29 = v72;
  v31 = v73;
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v71, v13, v73);
  sub_23F61AB4C();
  v32 = sub_23F61A4E0();
  v34 = v33;
  v25(v22, v18);
  v35 = v29;
  v36 = v75;
  v37 = v76;
  if (v34)
  {
    if (v32 == 0xD000000000000033 && v34 == 0x800000023F636800)
    {
      swift_bridgeObjectRelease();
LABEL_11:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
      return 0x5373736563637573;
    }
    v40 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v40 & 1) != 0)
      goto LABEL_11;
  }
  sub_23F617DA4();
  v42 = v69;
  v41 = v70;
  if ((*(unsigned int (**)(char *, uint64_t))(v69 + 88))(v36, v70) == *MEMORY[0x24BEB9A00])
  {
    (*(void (**)(char *, uint64_t))(v42 + 96))(v36, v41);
    v43 = swift_projectBox();
    v44 = v64;
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
    v46 = v66;
    v45(v37, v43, v66);
    v47 = v46;
    swift_release();
    v48 = v65;
    v45(v65, (uint64_t)v37, v47);
    v49 = v48;
    v50 = (*(uint64_t (**)(char *, uint64_t))(v44 + 88))(v48, v47);
    v51 = *(void (**)(char *, uint64_t))(v44 + 8);
    if (v50 == *MEMORY[0x24BEB9940])
    {
      v52 = v49;
      v39 = 0x4573736563637573;
      v51(v52, v47);
      v51(v37, v47);
LABEL_25:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v31);
      return v39;
    }
    v51(v37, v47);
    v51(v49, v47);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v41);
  }
  v53 = (uint64_t)v67;
  sub_23F61AB70();
  v54 = sub_23F61B5D8();
  if (sub_23F36195C(v53, 1, v54) == 1)
  {
    sub_23F3CFCB0(v53, &qword_256E70238);
  }
  else
  {
    sub_23F61B560();
    v55 = v53;
    v57 = v56;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v55, v54);
    if (v57)
      goto LABEL_23;
  }
  swift_bridgeObjectRelease();
LABEL_23:
  sub_23F5DF24C();
  v59 = v58;
  swift_bridgeObjectRelease();
  if (!v59)
  {
    v39 = 0x4573736563637573;
    goto LABEL_25;
  }
  v60 = *(_QWORD *)(v59 + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v31);
  if (v60 >= 3)
    return 0xD000000000000010;
  else
    return 0x4173736563637573;
}

uint64_t sub_23F5CEF24()
{
  sub_23F5CF5BC();
  return sub_23F61CCAC();
}

uint64_t sub_23F5CEF4C()
{
  sub_23F5CF5BC();
  return sub_23F61CCA0();
}

uint64_t sub_23F5CEF74()
{
  uint64_t v0;

  v0 = qword_256E7E120;
  sub_23F617BA0();
  return v0;
}

uint64_t sub_23F5CEFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TypedValueFormatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5CEFEC()
{
  return sub_23F5CF16C((uint64_t (*)(_QWORD))MEMORY[0x24BE53330]);
}

uint64_t sub_23F5CEFF8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F618134();
  v1 = sub_23F5CFD4C(v0);
  return sub_23F5CE6AC(v1);
}

_BYTE **sub_23F5CF018(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23F37B46C(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

void sub_23F5CF024()
{
  uint64_t v0;

  sub_23F37AD84(*(void (**)(void))(v0 + 16));
}

void sub_23F5CF02C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F37ADA0(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

unint64_t sub_23F5CF034()
{
  unint64_t result;

  result = qword_256E7E138;
  if (!qword_256E7E138)
  {
    result = MEMORY[0x242670A44](&unk_23F6309B8, &type metadata for ToolResultError);
    atomic_store(result, (unint64_t *)&qword_256E7E138);
  }
  return result;
}

uint64_t sub_23F5CF070()
{
  return sub_23F5CF16C((uint64_t (*)(_QWORD))MEMORY[0x24BE53EE8]);
}

void sub_23F5CF07C()
{
  sub_23F5CF098((uint64_t (*)(_QWORD))MEMORY[0x24BE53EE8], (uint64_t)MEMORY[0x24BE53EE0], (void (*)(uint64_t, uint64_t))sub_23F5CE648);
}

void sub_23F5CF098(uint64_t (*a1)(_QWORD), uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23F5CFDF8(a1);
  v6 = sub_23F5CFD4C(v5);
  a3(v6, a2);
  sub_23F362B80();
}

uint64_t sub_23F5CF0D0()
{
  return sub_23F5CF16C((uint64_t (*)(_QWORD))MEMORY[0x24BE536C0]);
}

void sub_23F5CF0DC()
{
  sub_23F5CF098((uint64_t (*)(_QWORD))MEMORY[0x24BE536C0], (uint64_t)MEMORY[0x24BE53688], (void (*)(uint64_t, uint64_t))sub_23F5CE648);
}

uint64_t sub_23F5CF100()
{
  return sub_23F5CF16C((uint64_t (*)(_QWORD))MEMORY[0x24BE53778]);
}

void sub_23F5CF10C()
{
  sub_23F5CF098((uint64_t (*)(_QWORD))MEMORY[0x24BE53778], (uint64_t)MEMORY[0x24BE53770], (void (*)(uint64_t, uint64_t))sub_23F5CE5FC);
}

uint64_t sub_23F5CF130()
{
  return sub_23F5CF16C((uint64_t (*)(_QWORD))MEMORY[0x24BE53AD0]);
}

void sub_23F5CF13C()
{
  sub_23F5CF098((uint64_t (*)(_QWORD))MEMORY[0x24BE53AD0], (uint64_t)MEMORY[0x24BE53AC8], (void (*)(uint64_t, uint64_t))sub_23F5CE5FC);
}

uint64_t sub_23F5CF160()
{
  return sub_23F5CF16C((uint64_t (*)(_QWORD))MEMORY[0x24BE53960]);
}

uint64_t sub_23F5CF16C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F5CFDF8(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

void sub_23F5CF1C8()
{
  sub_23F5CF098((uint64_t (*)(_QWORD))MEMORY[0x24BE53960], (uint64_t)MEMORY[0x24BE53958], (void (*)(uint64_t, uint64_t))sub_23F5CE648);
}

uint64_t sub_23F5CF1EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F5CF210(uint64_t a1, uint64_t a2, _QWORD *a3, char a4, _QWORD *a5)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  _OWORD *v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  v7 = a3;
  sub_23F5E2968(&v51, a1, a2, a3);
  sub_23F617BA0();
  v9 = swift_retain();
  sub_23F5CFD94(v9, v10, v11, v12, v13, v14, v15, v16, (uint64_t)v7, a1, v43, *((uint64_t *)&v43 + 1), v44, v45, v46, *((uint64_t *)&v46 + 1), v47, v48, v49);
  v17 = *((_QWORD *)&v49 + 1);
  if (!*((_QWORD *)&v49 + 1))
  {
LABEL_14:
    swift_release();
    sub_23F524748();
    sub_23F382E18();
    return swift_release();
  }
  while (1)
  {
    v18 = v49;
    sub_23F382A70(&v50, &v46);
    v20 = sub_23F5CFC18();
    v21 = v7[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      break;
    v24 = v19;
    if (v7[3] >= v23)
    {
      if ((a4 & 1) != 0)
      {
        if ((v19 & 1) != 0)
          goto LABEL_9;
      }
      else
      {
        sub_23F35D2E8(&qword_256E6FCA0);
        v7 = a5;
        sub_23F61CA24();
        if ((v24 & 1) != 0)
          goto LABEL_9;
      }
    }
    else
    {
      v7 = a5;
      sub_23F514DCC(v23, a4 & 1);
      v25 = sub_23F5CFC18();
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_17;
      v20 = v25;
      if ((v24 & 1) != 0)
      {
LABEL_9:
        sub_23F382B64((uint64_t)&v46, (uint64_t)&v43);
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v46);
        sub_23F38458C();
        v27 = (_OWORD *)(*(_QWORD *)(*a5 + 56) + 32 * v20);
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v27);
        v28 = sub_23F382A70(&v43, v27);
        goto LABEL_13;
      }
    }
    v7 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v20 >> 6) + 64) |= 1 << v20;
    v36 = (_QWORD *)(v7[6] + 16 * v20);
    *v36 = v18;
    v36[1] = v17;
    v28 = sub_23F382A70(&v46, (_OWORD *)(v7[7] + 32 * v20));
    v37 = v7[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_16;
    v7[2] = v39;
LABEL_13:
    sub_23F5CFD94((uint64_t)v28, v29, v30, v31, v32, v33, v34, v35, v41, v42, v43, *((uint64_t *)&v43 + 1), v44, v45, v46, *((uint64_t *)&v46 + 1), v47, v48, v49);
    v17 = *((_QWORD *)&v49 + 1);
    a4 = 1;
    if (!*((_QWORD *)&v49 + 1))
      goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F5CF3F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_23F5CDE70(a1, *(char **)(v2 + 16), *(char **)(v2 + 24), a2);
}

uint64_t sub_23F5CF410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E7E148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5CF458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E73D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5CF4A0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TypedValueFormatter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for ToolResultError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F5CF51C + 4 * byte_23F6308D9[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F5CF53C + 4 * byte_23F6308DE[v4]))();
}

_BYTE *sub_23F5CF51C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F5CF53C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F5CF544(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F5CF54C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F5CF554(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F5CF55C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ToolResultError()
{
  return &type metadata for ToolResultError;
}

unint64_t sub_23F5CF580()
{
  unint64_t result;

  result = qword_256E7E150;
  if (!qword_256E7E150)
  {
    result = MEMORY[0x242670A44](&unk_23F630990, &type metadata for ToolResultError);
    atomic_store(result, (unint64_t *)&qword_256E7E150);
  }
  return result;
}

unint64_t sub_23F5CF5BC()
{
  unint64_t result;

  result = qword_256E7E158;
  if (!qword_256E7E158)
  {
    result = MEMORY[0x242670A44](&unk_23F630910, &type metadata for ToolResultError);
    atomic_store(result, (unint64_t *)&qword_256E7E158);
  }
  return result;
}

uint64_t sub_23F5CF630()
{
  return swift_deallocObject();
}

__n128 *sub_23F5CF640(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x656D6F6374756FLL;
  result[2].n128_u64[1] = 0xE700000000000000;
  return result;
}

uint64_t sub_23F5CF660()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[100] + 8))(v0[113], v0[108]);
}

void sub_23F5CF674(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 1112) = a1;
  *(_QWORD *)(v1 + 1088) = v2;
  sub_23F372ABC(v1 + 1088, 0x6574656D61726170, 0xEF7365756C615672);
}

uint64_t sub_23F5CF6A8()
{
  return sub_23F61CC64();
}

uint64_t sub_23F5CF6C4()
{
  return sub_23F617BA0();
}

uint64_t sub_23F5CF6E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F5CF6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void sub_23F5CF708()
{
  uint64_t v0;

  sub_23F372ABC(v0 + 1088, 0x6574656D61726170, 0xEE0065756C615672);
}

void sub_23F5CF734(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint8_t *v5;

  _os_log_impl(a1, *(os_log_t *)(v4 + 992), (os_log_type_t)*(_DWORD *)(v4 + 976), a4, v5, 0xCu);
}

void sub_23F5CF74C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_23F5CF760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 992) + 8))(v1, v2);
}

uint64_t sub_23F5CF77C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, *(_QWORD *)(v1 + 968));
}

uint64_t sub_23F5CF79C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 688));
}

BOOL sub_23F5CF7A4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;

  *(_QWORD *)(v0 + 992) = v1;
  return os_log_type_enabled(v1, v2);
}

uint64_t sub_23F5CF7B8()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F5CF7CC()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[110] + 8))(v0[114], v0[111]);
}

uint64_t sub_23F5CF7E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 976))(a1 + v2, v3, v4);
}

uint64_t sub_23F5CF7F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 984) = a1;
  *(_QWORD *)(v1 + 1088) = a1;
  *(_WORD *)v2 = 258;
  *(_BYTE *)(v2 + 2) = 32;
  return swift_release();
}

uint64_t sub_23F5CF82C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 800) + 8))(*(_QWORD *)(v0 + 904), v1);
}

uint64_t sub_23F5CF840()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 800) + 8))(*(_QWORD *)(v0 + 904), v1);
}

uint64_t sub_23F5CF854(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F5CF870()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 3) = 8;
  return swift_release();
}

uint64_t sub_23F5CF880()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 776) + 8))(v1, *(_QWORD *)(v0 + 752));
}

uint64_t sub_23F5CF894@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, *(_QWORD *)(v1 + 784));
}

void sub_23F5CF8B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 1088) = v1;
  sub_23F37ECDC();
}

uint64_t sub_23F5CF8E0()
{
  return swift_willThrow();
}

void sub_23F5CF8EC()
{
  uint64_t v0;

}

__n128 *sub_23F5CF8F4(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t sub_23F5CF910()
{
  return sub_23F61C154();
}

uint64_t sub_23F5CF938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v2, v1, v0);
}

uint64_t sub_23F5CF948(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

uint64_t sub_23F5CF958()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 800) + 8))(*(_QWORD *)(v0 + 904), v1);
}

uint64_t sub_23F5CF96C(uint64_t result)
{
  *(_QWORD *)(result + 88) = 0xEB00000000644972;
  return result;
}

uint64_t sub_23F5CF980(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 48) = 0x73736563637573;
  *(_QWORD *)(result + 56) = v1;
  return result;
}

uint64_t sub_23F5CF9A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 792) + 8))(v2, v1);
}

uint64_t sub_23F5CF9C8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(result + 48) = a2;
  *(_QWORD *)(result + 56) = (v2 - 32) | 0x8000000000000000;
  return result;
}

_QWORD *sub_23F5CF9D8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  result[6] = a3;
  result[7] = (v3 - 32) | 0x8000000000000000;
  result[9] = a2;
  result[10] = v4;
  result[15] = a2;
  return result;
}

uint64_t sub_23F5CFA00(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[12] = result;
  v5[13] = a2;
  v5[15] = v2;
  v5[16] = v6;
  v5[21] = v2;
  v5[17] = 0xED0000656D614E72;
  v5[18] = v3;
  v5[19] = v4;
  return result;
}

uint64_t sub_23F5CFA28(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[12] = result;
  v4[13] = a2;
  v4[15] = v5;
  v4[16] = v6;
  v4[21] = v5;
  v4[17] = 0xED0000656D614E72;
  v4[18] = v2;
  v4[19] = v3;
  return result;
}

uint64_t sub_23F5CFA50()
{
  return sub_23F61BB84();
}

uint64_t sub_23F5CFA70(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F5CFA8C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F5CFAA0()
{
  return sub_23F61AB70();
}

uint64_t sub_23F5CFAA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v1, v0);
}

uint64_t sub_23F5CFAC4()
{
  uint64_t v0;

  return v0;
}

__n128 sub_23F5CFAE4(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = v1[62];
  a1[1] = result;
  return result;
}

uint64_t sub_23F5CFB04()
{
  return sub_23F619124();
}

uint64_t sub_23F5CFB0C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F5CFB14()
{
  return swift_retain();
}

uint64_t sub_23F5CFB1C()
{
  return swift_retain();
}

uint64_t sub_23F5CFB28()
{
  return sub_23F61BB78();
}

uint64_t sub_23F5CFB30()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5CFB3C(uint64_t result)
{
  *(_BYTE *)(result + 16) = 32;
  return result;
}

_QWORD *sub_23F5CFB54(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  result[9] = a2;
  result[6] = 0x73736563637573;
  result[7] = v2;
  return result;
}

uint64_t sub_23F5CFB70@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_23F5CFB7C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F5CFB84()
{
  uint64_t *v0;
  uint64_t v1;

  return sub_23F3CFCB0(v1, v0);
}

uint64_t sub_23F5CFB98()
{
  return sub_23F61C16C();
}

uint64_t sub_23F5CFBA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 776) + 8))(v2, v1);
}

uint64_t sub_23F5CFBB8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 776) + 8))(v1, *(_QWORD *)(v0 + 752));
}

uint64_t sub_23F5CFBCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, v2);
}

uint64_t sub_23F5CFBD8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[102] + 8))(v0[101], v0[109]);
}

void sub_23F5CFBEC()
{
  uint64_t v0;

}

uint64_t sub_23F5CFBF4()
{
  return sub_23F61C628();
}

void sub_23F5CFBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 + 1088));
}

_QWORD *sub_23F5CFC08()
{
  uint64_t v0;

  return sub_23F417D48(v0);
}

uint64_t sub_23F5CFC18()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3754D4(v1, v0);
}

void sub_23F5CFC28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[139] = v2;
  v0[136] = v1;
  v0[137] = v3;
}

void sub_23F5CFC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v2, v1, (uint64_t *)(v0 + 1088));
}

void sub_23F5CFC48()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 976) = v1;
}

uint64_t sub_23F5CFC54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F5CFC74(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F5CFC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23F5CFCA4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_23F5CFCBC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, _QWORD, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v0, *(_QWORD *)(v3 - 112), v2);
}

uint64_t sub_23F5CFCCC()
{
  return sub_23F61B530();
}

uint64_t sub_23F5CFD1C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F5C892C(v1, v0);
}

uint64_t sub_23F5CFD2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_23F3CFCB0(v2, a2);
}

uint64_t sub_23F5CFD34(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_23F3CFCB0(v2, a2);
}

double sub_23F5CFD3C()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 1104) = 0u;
  *(_OWORD *)(v0 + 1088) = 0u;
  return result;
}

uint64_t sub_23F5CFD4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v1 + ((v2 + 16) & ~v2);
}

uint64_t sub_23F5CFD64@<X0>(uint64_t (*a1)(void)@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 976) = a1;
  return a1();
}

uint64_t sub_23F5CFD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 64) = a2;
  *(_QWORD *)(a1 + 72) = v2;
  return swift_setDeallocating();
}

uint64_t sub_23F5CFD80()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 904);
}

void sub_23F5CFD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int128 a19)
{
  sub_23F5E31C0(&a19);
}

uint64_t sub_23F5CFDA0()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23F5CFDAC()
{
  return sub_23F61C16C();
}

uint64_t sub_23F5CFDB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t sub_23F5CFDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 64) = a2;
  *(_QWORD *)(a1 + 72) = v2;
  return swift_setDeallocating();
}

uint64_t sub_23F5CFDD4()
{
  return sub_23F61C790();
}

void sub_23F5CFDE0()
{
  JUMPOUT(0x24266F8F8);
}

uint64_t sub_23F5CFDEC(uint64_t a1)
{
  uint64_t v1;

  return sub_23F5CDCB4(a1, v1);
}

uint64_t sub_23F5CFDF8(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t sub_23F5CFE04()
{
  return sub_23F61BFEC();
}

void sub_23F5CFE20()
{
  sub_23F376C88();
}

uint64_t sub_23F5CFE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F5CFE54()
{
  return sub_23F61B980();
}

uint64_t static InterpreterError.errorDomain.getter()
{
  uint64_t v0;

  sub_23F3B1450();
  v0 = qword_256E7E160;
  sub_23F617BA0();
  return v0;
}

uint64_t static InterpreterError.errorDomain.setter(uint64_t a1, uint64_t a2)
{
  sub_23F3B1450();
  qword_256E7E160 = a1;
  qword_256E7E168 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static InterpreterError.errorDomain.modify())()
{
  sub_23F3B1450();
  return j__swift_endAccess_0;
}

void InterpreterError.errorCode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  sub_23F384B58();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F38F964();
  sub_23F5D00CC(v0, v3 - v2);
  v4 = (char *)sub_23F5CFFA8 + 4 * byte_23F630A00[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F5CFFA8()
{
  sub_23F5D159C();
  return 1;
}

uint64_t type metadata accessor for InterpreterError()
{
  uint64_t result;

  result = qword_256E7E1F0;
  if (!qword_256E7E1F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F5D00CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InterpreterError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5D0110(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InterpreterError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void InterpreterError.errorUserInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;

  v1 = sub_23F384048();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F38F964();
  v2 = sub_23F617D08();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  sub_23F384B58();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F38F964();
  sub_23F5D00CC(v0, v5 - v4);
  v6 = (char *)sub_23F5D0228 + 4 * byte_23F630A13[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F5D0228()
{
  return sub_23F61BFEC();
}

void sub_23F5D0278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t *v5;

  sub_23F384918(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  sub_23F35D2E8(qword_256E71B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x800000023F63BC40;
  *(_QWORD *)(inited + 72) = v0;
  v5 = sub_23F36145C((uint64_t *)(inited + 48));
  sub_23F384918((uint64_t)v5, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_23F61BFEC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  JUMPOUT(0x23F5D0254);
}

void static InterpreterError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD v25[8];
  uint64_t v26;
  uint64_t v27;

  v26 = a1;
  v27 = a2;
  v2 = sub_23F384048();
  v25[6] = *(_QWORD *)(v2 - 8);
  v25[7] = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v25[3] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v25[2] = (char *)v25 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v25[1] = (char *)v25 - v7;
  v8 = sub_23F617D08();
  v25[4] = *(_QWORD *)(v8 - 8);
  v25[5] = v8;
  MEMORY[0x24BDAC7A8](v8);
  sub_23F38F964();
  v25[0] = v10 - v9;
  sub_23F384B58();
  sub_23F3834C0();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  sub_23F35D2E8(&qword_256E7E178);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F38F964();
  v21 = v20 - v19;
  v23 = v20 - v19 + *(int *)(v22 + 48);
  sub_23F5D00CC(v26, v20 - v19);
  sub_23F5D00CC(v27, v23);
  v27 = v21;
  v24 = (char *)sub_23F5D0778 + 4 * byte_23F630A26[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F5D0778()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v5 = sub_23F5D1590();
  sub_23F5D00CC(v5, v2);
  if (sub_23F362B48())
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 128) + 8))(v2, *(_QWORD *)(v4 - 120));
    sub_23F5D0B60(v3);
    v0 = 0;
  }
  else
  {
    v7 = *(_QWORD *)(v4 - 128);
    v8 = *(_QWORD *)(v4 - 120);
    sub_23F384918(*(_QWORD *)(v4 - 160), v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
    sub_23F617CD8();
    sub_23F5D15A4();
    ((void (*)(uint64_t, uint64_t))v7)(v2, v8);
    sub_23F5D15E0();
  }
  return v0 & 1;
}

uint64_t sub_23F5D0B60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E7E178);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F5D0BA0()
{
  sub_23F5D1550(&qword_256E7E228, (uint64_t)&protocol conformance descriptor for InterpreterError);
  return sub_23F61CCAC();
}

uint64_t sub_23F5D0BD8()
{
  sub_23F5D1550(&qword_256E7E228, (uint64_t)&protocol conformance descriptor for InterpreterError);
  return sub_23F61CCA0();
}

uint64_t sub_23F5D0C14()
{
  return sub_23F5D1550((unint64_t *)&qword_256E6FB48, (uint64_t)&protocol conformance descriptor for InterpreterError);
}

uint64_t *initializeBufferWithCopyOfBuffer for InterpreterError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_23F617D08();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_10;
      case 1u:
      case 2u:
      case 5u:
        v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        sub_23F617BA0();
        goto LABEL_10;
      case 3u:
        v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        v10 = a2[2];
        v11 = a2[3];
        a1[2] = v10;
        a1[3] = v11;
        sub_23F617BA0();
        sub_23F617BA0();
        goto LABEL_10;
      case 4u:
        v12 = sub_23F61B92C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        goto LABEL_10;
      case 6u:
        v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        sub_23F617BA0();
        v15 = *(int *)(sub_23F35D2E8(&qword_256E7E170) + 48);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_23F61B92C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for InterpreterError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_23F617D08();
      goto LABEL_7;
    case 1:
    case 2:
    case 5:
      return swift_bridgeObjectRelease();
    case 3:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 4:
      goto LABEL_6;
    case 6:
      swift_bridgeObjectRelease();
      a1 += *(int *)(sub_23F35D2E8(&qword_256E7E170) + 48);
LABEL_6:
      v3 = sub_23F61B92C();
LABEL_7:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for InterpreterError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_23F617D08();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_8;
    case 1u:
    case 2u:
    case 5u:
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      sub_23F617BA0();
      goto LABEL_8;
    case 3u:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[2];
      v9 = a2[3];
      a1[2] = v8;
      a1[3] = v9;
      sub_23F617BA0();
      sub_23F617BA0();
      goto LABEL_8;
    case 4u:
      v10 = sub_23F61B92C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      goto LABEL_8;
    case 6u:
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      sub_23F617BA0();
      v13 = *(int *)(sub_23F35D2E8(&qword_256E7E170) + 48);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23F61B92C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for InterpreterError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_23F5D0110((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_23F617D08();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_9;
      case 1u:
      case 2u:
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        sub_23F617BA0();
        goto LABEL_9;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        sub_23F617BA0();
        sub_23F617BA0();
        goto LABEL_9;
      case 4u:
        v7 = sub_23F61B92C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_9;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        sub_23F617BA0();
        v8 = *(int *)(sub_23F35D2E8(&qword_256E7E170) + 48);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_23F61B92C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for InterpreterError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 6)
  {
    *a1 = *a2;
    v8 = *(int *)(sub_23F35D2E8(&qword_256E7E170) + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F61B92C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  }
  else if (EnumCaseMultiPayload == 4)
  {
    v12 = sub_23F61B92C();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = sub_23F617D08();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for InterpreterError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_23F5D0110((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 6)
    {
      *a1 = *a2;
      v8 = *(int *)(sub_23F35D2E8(&qword_256E7E170) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23F61B92C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    }
    else if (EnumCaseMultiPayload == 4)
    {
      v12 = sub_23F61B92C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = sub_23F617D08();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F5D14A0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char *v10;

  result = sub_23F617D08();
  if (v1 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v5 = &unk_23F630B20;
    v6 = &unk_23F630B20;
    v7 = &unk_23F630B38;
    result = sub_23F61B92C();
    if (v2 <= 0x3F)
    {
      v8 = *(_QWORD *)(result - 8) + 64;
      v9 = &unk_23F630B20;
      swift_getTupleTypeLayout2();
      v10 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23F5D1550(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for InterpreterError();
    result = MEMORY[0x242670A44](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F5D1590()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 88);
}

uint64_t sub_23F5D159C()
{
  uint64_t v0;

  return sub_23F5D0110(v0);
}

uint64_t sub_23F5D15A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F5D15B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(a1, v2, v1);
}

__n128 *sub_23F5D15C8(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t sub_23F5D15E0()
{
  uint64_t v0;

  return sub_23F5D0110(v0);
}

uint64_t sub_23F5D15E8()
{
  uint64_t v0;

  return v0;
}

void StepResolution.toEventPayloads()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD v40[8];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v0 = sub_23F61ABF4();
  v59 = *(_QWORD *)(v0 - 8);
  v60 = v0;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F36285C();
  v58 = v2;
  v3 = sub_23F61AA38();
  sub_23F383E7C(v3, (uint64_t)&v66);
  v42 = v4;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v7 = sub_23F5D3B40(v6);
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v55 = v9;
  v41 = sub_23F61A3A8();
  v40[7] = *(_QWORD *)(v41 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  v12 = sub_23F5D3B30(v11);
  v53 = *(_QWORD *)(v12 - 8);
  v54 = v12;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v52 = v14;
  v15 = sub_23F61ADEC();
  v61 = *(_QWORD *)(v15 - 8);
  v62 = v15;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  v63 = v17;
  v18 = sub_23F618134();
  sub_23F383E7C(v18, (uint64_t)&v65);
  v40[4] = v19;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F36285C();
  sub_23F3B13F0(v21);
  v22 = sub_23F61ACA8();
  sub_23F383E7C(v22, (uint64_t)&v64);
  v40[1] = v23;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v24);
  v44 = sub_23F5D3B20((uint64_t)v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = *(_QWORD *)(v44 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F36285C();
  v28 = sub_23F5D3B50(v27);
  v50 = *(_QWORD *)(v28 - 8);
  v51 = v28;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F36285C();
  v49 = v30;
  v31 = sub_23F61A138();
  v47 = *(_QWORD *)(v31 - 8);
  v48 = v31;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F36285C();
  v46 = v33;
  v45 = sub_23F61B44C();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F38F964();
  v34 = sub_23F61A09C();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F3E2718();
  v35 = sub_23F61B0BC();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F38F964();
  type metadata accessor for StepResolution();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F38F964();
  sub_23F5D2028(v64, v38 - v37);
  v39 = (char *)sub_23F5D18F8 + 4 * word_23F630BA0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F5D18F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v2, v3, v0);
  sub_23F35D2E8(&qword_256E7E230);
  v4 = sub_23F61B2C0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23F61E7E0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 16))(v7 + v6, v2, v0);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v5 + 104))(v7 + v6, *MEMORY[0x24BE56AF8], v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
  return v7;
}

uint64_t type metadata accessor for StepResolution()
{
  uint64_t result;

  result = qword_256E7E2B8;
  if (!qword_256E7E2B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F5D2028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StepResolution();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void static StepResolution.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _QWORD v65[18];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v90 = a1;
  v4 = sub_23F61ABF4();
  v79 = *(_QWORD *)(v4 - 8);
  v80 = v4;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  sub_23F3B13F0(v6);
  v7 = sub_23F61AA38();
  v77 = *(_QWORD *)(v7 - 8);
  v78 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v10 = sub_23F5D3B40(v9);
  v75 = *(_QWORD *)(v10 - 8);
  v76 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3B13F0((uint64_t)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_23F61A3A8();
  v73 = *(_QWORD *)(v13 - 8);
  v74 = v13;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  v16 = sub_23F5D3B30(v15);
  v71 = *(_QWORD *)(v16 - 8);
  v72 = v16;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F36285C();
  sub_23F3B13F0(v18);
  v70 = sub_23F61ADEC();
  v69 = *(_QWORD *)(v70 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F36285C();
  v21 = sub_23F5D3B20(v20);
  sub_23F383E7C(v21, (uint64_t)&v94);
  v68 = v22;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F36285C();
  v25 = sub_23F5D3B50(v24);
  sub_23F383E7C(v25, (uint64_t)&v93);
  v67 = v26;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F36285C();
  sub_23F3B13F0(v28);
  v66 = sub_23F61A138();
  v65[17] = *(_QWORD *)(v66 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F36285C();
  sub_23F3B13F0(v30);
  v31 = sub_23F61B44C();
  sub_23F383E7C(v31, (uint64_t)&v92);
  v65[15] = v32;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F36285C();
  sub_23F3B13F0(v34);
  v35 = sub_23F61A09C();
  sub_23F383E7C(v35, (uint64_t)&v91);
  v65[13] = v36;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F36285C();
  sub_23F3B13F0(v38);
  v39 = sub_23F61B0BC();
  v88 = *(_QWORD *)(v39 - 8);
  v89 = v39;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F36285C();
  sub_23F3B13F0(v41);
  type metadata accessor for StepResolution();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v42);
  v87 = (char *)v65 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F3838E4();
  v86 = v45;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F3838E4();
  v85 = v47;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F3838E4();
  v84 = v49;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F3838E4();
  v83 = v51;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F3838E4();
  v82 = v53;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F3838E4();
  v81 = v55;
  sub_23F383588();
  v57 = MEMORY[0x24BDAC7A8](v56);
  v58 = MEMORY[0x24BDAC7A8](v57);
  v59 = MEMORY[0x24BDAC7A8](v58);
  v60 = MEMORY[0x24BDAC7A8](v59);
  MEMORY[0x24BDAC7A8](v60);
  sub_23F35D2E8(&qword_256E7E238);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F3E2718();
  v63 = v2 + *(int *)(v62 + 48);
  sub_23F5D2028(v90, v2);
  sub_23F5D2028(a2, v63);
  v64 = (char *)sub_23F5D2468 + 4 * byte_23F630BBC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F5D2468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;

  sub_23F5D2028(v1, v0);
  if (sub_23F5D3A9C())
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 112) + 8))(v0, *(_QWORD *)(v3 - 104));
    sub_23F5D28D4(v1);
    v4 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v3 - 112);
    v7 = *(_QWORD *)(v3 - 104);
    sub_23F384918(*(_QWORD *)(v3 - 440), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
    v4 = sub_23F61B0A4();
    v8 = *(void (**)(uint64_t))(v6 + 8);
    v9 = sub_23F5D3AD0();
    v8(v9);
    ((void (*)(uint64_t, uint64_t))v8)(v0, v7);
    sub_23F5D2914(v1);
  }
  return v4 & 1;
}

uint64_t sub_23F5D28D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E7E238);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F5D2914(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StepResolution();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of StepResolving.resolve(sessionState:contextId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23F3E2AC4;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t *initializeBufferWithCopyOfBuffer for StepResolution(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_23F61B0BC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_17;
      case 1u:
        v9 = sub_23F61A09C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_17;
      case 2u:
        v10 = sub_23F61B44C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_17;
      case 3u:
        v11 = sub_23F61A138();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        goto LABEL_17;
      case 4u:
        v12 = sub_23F61AA14();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        goto LABEL_17;
      case 5u:
        v13 = sub_23F61A504();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        goto LABEL_17;
      case 6u:
        v14 = sub_23F61ADEC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        goto LABEL_17;
      case 7u:
        v15 = sub_23F61A7B0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        goto LABEL_17;
      case 8u:
        v16 = sub_23F61A3A8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        goto LABEL_17;
      case 9u:
        v17 = sub_23F61A564();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        goto LABEL_17;
      case 0xAu:
        v18 = sub_23F61AA38();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        goto LABEL_17;
      case 0xBu:
        v19 = sub_23F61ABF4();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for StepResolution(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_23F61B0BC();
      goto LABEL_14;
    case 1:
      v3 = sub_23F61A09C();
      goto LABEL_14;
    case 2:
      v3 = sub_23F61B44C();
      goto LABEL_14;
    case 3:
      v3 = sub_23F61A138();
      goto LABEL_14;
    case 4:
      v3 = sub_23F61AA14();
      goto LABEL_14;
    case 5:
      v3 = sub_23F61A504();
      goto LABEL_14;
    case 6:
      v3 = sub_23F61ADEC();
      goto LABEL_14;
    case 7:
      v3 = sub_23F61A7B0();
      goto LABEL_14;
    case 8:
      v3 = sub_23F61A3A8();
      goto LABEL_14;
    case 9:
      v3 = sub_23F61A564();
      goto LABEL_14;
    case 10:
      v3 = sub_23F61AA38();
      goto LABEL_14;
    case 11:
      v3 = sub_23F61ABF4();
LABEL_14:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for StepResolution(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_23F61B0BC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_14;
    case 1u:
      v7 = sub_23F61A09C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_14;
    case 2u:
      v8 = sub_23F61B44C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_14;
    case 3u:
      v9 = sub_23F61A138();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      goto LABEL_14;
    case 4u:
      v10 = sub_23F61AA14();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      goto LABEL_14;
    case 5u:
      v11 = sub_23F61A504();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      goto LABEL_14;
    case 6u:
      v12 = sub_23F61ADEC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      goto LABEL_14;
    case 7u:
      v13 = sub_23F61A7B0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      goto LABEL_14;
    case 8u:
      v14 = sub_23F61A3A8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      goto LABEL_14;
    case 9u:
      v15 = sub_23F61A564();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      goto LABEL_14;
    case 0xAu:
      v16 = sub_23F61AA38();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      goto LABEL_14;
    case 0xBu:
      v17 = sub_23F61ABF4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for StepResolution(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_23F5D2914((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_23F61B0BC();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_16;
      case 1u:
        v7 = sub_23F61A09C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_16;
      case 2u:
        v8 = sub_23F61B44C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_16;
      case 3u:
        v9 = sub_23F61A138();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_16;
      case 4u:
        v10 = sub_23F61AA14();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_16;
      case 5u:
        v11 = sub_23F61A504();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        goto LABEL_16;
      case 6u:
        v12 = sub_23F61ADEC();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        goto LABEL_16;
      case 7u:
        v13 = sub_23F61A7B0();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        goto LABEL_16;
      case 8u:
        v14 = sub_23F61A3A8();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        goto LABEL_16;
      case 9u:
        v15 = sub_23F61A564();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        goto LABEL_16;
      case 0xAu:
        v16 = sub_23F61AA38();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        goto LABEL_16;
      case 0xBu:
        v17 = sub_23F61ABF4();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for StepResolution(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_23F61B0BC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_14;
    case 1u:
      v7 = sub_23F61A09C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_14;
    case 2u:
      v8 = sub_23F61B44C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      goto LABEL_14;
    case 3u:
      v9 = sub_23F61A138();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      goto LABEL_14;
    case 4u:
      v10 = sub_23F61AA14();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      goto LABEL_14;
    case 5u:
      v11 = sub_23F61A504();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      goto LABEL_14;
    case 6u:
      v12 = sub_23F61ADEC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      goto LABEL_14;
    case 7u:
      v13 = sub_23F61A7B0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      goto LABEL_14;
    case 8u:
      v14 = sub_23F61A3A8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_14;
    case 9u:
      v15 = sub_23F61A564();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
      goto LABEL_14;
    case 0xAu:
      v16 = sub_23F61AA38();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      goto LABEL_14;
    case 0xBu:
      v17 = sub_23F61ABF4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for StepResolution(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_23F5D2914((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_23F61B0BC();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_16;
      case 1u:
        v7 = sub_23F61A09C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        goto LABEL_16;
      case 2u:
        v8 = sub_23F61B44C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        goto LABEL_16;
      case 3u:
        v9 = sub_23F61A138();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        goto LABEL_16;
      case 4u:
        v10 = sub_23F61AA14();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        goto LABEL_16;
      case 5u:
        v11 = sub_23F61A504();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        goto LABEL_16;
      case 6u:
        v12 = sub_23F61ADEC();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        goto LABEL_16;
      case 7u:
        v13 = sub_23F61A7B0();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        goto LABEL_16;
      case 8u:
        v14 = sub_23F61A3A8();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        goto LABEL_16;
      case 9u:
        v15 = sub_23F61A564();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
        goto LABEL_16;
      case 0xAu:
        v16 = sub_23F61AA38();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
        goto LABEL_16;
      case 0xBu:
        v17 = sub_23F61ABF4();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23F5D38B4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  result = sub_23F61B0BC();
  if (v1 <= 0x3F)
  {
    result = sub_23F61A09C();
    if (v2 <= 0x3F)
    {
      result = sub_23F61B44C();
      if (v3 <= 0x3F)
      {
        result = sub_23F61A138();
        if (v4 <= 0x3F)
        {
          result = sub_23F61AA14();
          if (v5 <= 0x3F)
          {
            result = sub_23F61A504();
            if (v6 <= 0x3F)
            {
              result = sub_23F61ADEC();
              if (v7 <= 0x3F)
              {
                result = sub_23F61A7B0();
                if (v8 <= 0x3F)
                {
                  result = sub_23F61A3A8();
                  if (v9 <= 0x3F)
                  {
                    result = sub_23F61A564();
                    if (v10 <= 0x3F)
                    {
                      result = sub_23F61AA38();
                      if (v11 <= 0x3F)
                      {
                        result = sub_23F61ABF4();
                        if (v12 <= 0x3F)
                        {
                          swift_initEnumMetadataMultiPayload();
                          return 0;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_23F5D3A4C()
{
  return swift_allocObject();
}

uint64_t sub_23F5D3A74(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  a1[1] = a2;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)a1 + v2, v5, v3);
}

uint64_t sub_23F5D3A90()
{
  return sub_23F61B2C0();
}

uint64_t sub_23F5D3A9C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F5D3AA8()
{
  return swift_allocObject();
}

uint64_t sub_23F5D3AB4@<X0>(uint64_t (*a1)(_QWORD, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(*(_QWORD *)(v1 - 256), v3, v2);
}

uint64_t sub_23F5D3AC8(uint64_t a1)
{
  uint64_t v1;

  return sub_23F5D2028(a1, v1);
}

uint64_t sub_23F5D3AD0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5D3ADC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5D3AEC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23F5D3AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F5D3B10()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5D3B20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_23F61A504();
}

uint64_t sub_23F5D3B30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_23F61A7B0();
}

uint64_t sub_23F5D3B40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_23F61A564();
}

uint64_t sub_23F5D3B50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_23F61AA14();
}

uint64_t sub_23F5D3B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v2, a2, v3);
}

uint64_t sub_23F5D3B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v2, a2, v3);
}

uint64_t sub_23F5D3B88(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t String.djb2Hash<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v14 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v17 = a2;
  v18 = a3;
  swift_getAssociatedConformanceWitness();
  sub_23F617BA0();
  sub_23F61CC7C();
  sub_23F61CC40();
  v15 = a4;
  v16 = a5;
  sub_23F5D3EA0();
  sub_23F61C37C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5D3D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t);
  _QWORD v14[2];
  char v15;
  uint64_t v16;

  v14[1] = a3;
  v4 = *(_QWORD *)(a2 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v14 - v8;
  v11 = *v10;
  v16 = 5;
  sub_23F5D3EDC();
  sub_23F61C814();
  sub_23F61CA0C();
  v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, a2);
  v15 = v11;
  sub_23F5D3F18();
  sub_23F61C820();
  sub_23F61CA0C();
  v12(v7, a2);
  return ((uint64_t (*)(char *, uint64_t))v12)(v9, a2);
}

uint64_t sub_23F5D3E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23F5D3D2C(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_23F5D3EA0()
{
  unint64_t result;

  result = qword_256E7E2F0;
  if (!qword_256E7E2F0)
  {
    result = MEMORY[0x242670A44](MEMORY[0x24BEE0C58], MEMORY[0x24BEE0C50]);
    atomic_store(result, (unint64_t *)&qword_256E7E2F0);
  }
  return result;
}

unint64_t sub_23F5D3EDC()
{
  unint64_t result;

  result = qword_256E7E2F8;
  if (!qword_256E7E2F8)
  {
    result = MEMORY[0x242670A44](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_256E7E2F8);
  }
  return result;
}

unint64_t sub_23F5D3F18()
{
  unint64_t result;

  result = qword_256E7E300;
  if (!qword_256E7E300)
  {
    result = MEMORY[0x242670A44](MEMORY[0x24BEE4298], MEMORY[0x24BEE4260]);
    atomic_store(result, (unint64_t *)&qword_256E7E300);
  }
  return result;
}

uint64_t sub_23F5D3F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v8;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v30[2];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v6 = v5;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v34 = MEMORY[0x24BEE4AF8];
    sub_23F37C39C(0, v8, 0);
    v10 = v34;
    v11 = (uint64_t *)(a1 + 40);
    v28 = a3;
    while (1)
    {
      v12 = v10;
      v13 = *(v11 - 1);
      v14 = *v11;
      sub_23F617BA0();
      v10 = a3;
      v15 = sub_23F617474();
      if (v6)
        break;
      SmithWatermanTokenAligner.align(_:to:)(a5, v15, (uint64_t)v30);
      v6 = 0;
      swift_release();
      v16 = v30[0];
      v17 = v30[1];
      v18 = v31;
      v19 = v32;
      v20 = v33;
      v10 = v12;
      v34 = v12;
      v21 = *(_QWORD *)(v12 + 16);
      v22 = *(_QWORD *)(v10 + 24);
      if (v21 >= v22 >> 1)
      {
        v26 = v32;
        v27 = v31;
        v25 = v33;
        sub_23F37C39C((char *)(v22 > 1), v21 + 1, 1);
        v20 = v25;
        v19 = v26;
        v18 = v27;
        v10 = v34;
      }
      v11 += 2;
      *(_QWORD *)(v10 + 16) = v21 + 1;
      v23 = v10 + 80 * v21;
      *(_QWORD *)(v23 + 32) = v13;
      *(_QWORD *)(v23 + 40) = v14;
      *(_QWORD *)(v23 + 48) = v16;
      *(_QWORD *)(v23 + 56) = v17;
      *(_OWORD *)(v23 + 64) = v18;
      *(_OWORD *)(v23 + 80) = v19;
      *(_OWORD *)(v23 + 96) = v20;
      --v8;
      a3 = v28;
      if (!v8)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v10 = MEMORY[0x24BEE4AF8];
LABEL_10:
    swift_release();
  }
  return v10;
}

uint64_t sub_23F5D4190(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;

  v2 = sub_23F61B95C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - v7;
  v9 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 56);
  v24 = (unint64_t)(v10 + 63) >> 6;
  result = sub_23F617BA0();
  v14 = 0;
  while (v12)
  {
    v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v16 = v15 | (v14 << 6);
LABEL_22:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v16, v2);
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    v21 = sub_23F5D4664(v20);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    if ((v21 & 1) != 0)
    {
      v22 = 1;
LABEL_25:
      swift_release();
      return v22;
    }
  }
  v17 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v17 >= v24)
    goto LABEL_24;
  v18 = *(_QWORD *)(v9 + 8 * v17);
  ++v14;
  if (v18)
    goto LABEL_21;
  v14 = v17 + 1;
  if (v17 + 1 >= v24)
    goto LABEL_24;
  v18 = *(_QWORD *)(v9 + 8 * v14);
  if (v18)
    goto LABEL_21;
  v14 = v17 + 2;
  if (v17 + 2 >= v24)
    goto LABEL_24;
  v18 = *(_QWORD *)(v9 + 8 * v14);
  if (v18)
    goto LABEL_21;
  v14 = v17 + 3;
  if (v17 + 3 >= v24)
    goto LABEL_24;
  v18 = *(_QWORD *)(v9 + 8 * v14);
  if (v18)
  {
LABEL_21:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_22;
  }
  v19 = v17 + 4;
  if (v19 >= v24)
  {
LABEL_24:
    v22 = 0;
    goto LABEL_25;
  }
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v24)
      goto LABEL_24;
    v18 = *(_QWORD *)(v9 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t StringExprsAreQuotesRequirement.init(aligner:locale:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a2;
  v29 = a3;
  v4 = sub_23F6170CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F362AAC();
  v8 = v6 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - v10;
  v12 = *a1;
  sub_23F35D2E8(&qword_256E7E308);
  v13 = *(_QWORD *)(sub_23F617480() - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_23F61EBC0;
  v17 = v16 + v15;
  sub_23F5D5760(v17, *MEMORY[0x24BE69028]);
  sub_23F5D5760(v17 + v14, *MEMORY[0x24BE69010]);
  sub_23F5D5760(v17 + 2 * v14, *MEMORY[0x24BE69000]);
  v18 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v11, v30, v4);
  sub_23F617510();
  sub_23F3668A0();
  sub_23F3668F4();
  v19 = v31;
  v20 = sub_23F617504();
  if (v19)
  {
    sub_23F383CA8(v18, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_23F362D18();
    return sub_23F362D18();
  }
  else
  {
    v21 = v20;
    sub_23F6174A4();
    sub_23F3668A0();
    sub_23F3668F4();
    sub_23F3D9D3C();
    sub_23F617498();
    v31 = v4;
    sub_23F61709C();
    v23 = sub_23F61748C();
    swift_release();
    v24 = v8;
    v25 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v26 = v31;
    v25(v18, v31);
    v25(v24, v26);
    sub_23F3D9D3C();
    swift_retain();
    sub_23F517218();
    v27 = v29;
    *v29 = v21;
    v27[1] = v23;
    v27[2] = v16;
    v27[3] = v12;
    sub_23F362D18();
    swift_release();
    return sub_23F517218();
  }
}

uint64_t sub_23F5D4664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t (**v22)(uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v32[16];

  v1 = v0;
  v2 = sub_23F61B9EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_23F61B95C();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F362AAC();
  v9 = v7 - v8;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = &v32[-v12];
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = &v32[-v15];
  MEMORY[0x24BDAC7A8](v14);
  v18 = &v32[-v17];
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v19 + 16);
  v21 = v1;
  v22 = (uint64_t (**)(uint64_t, uint64_t))v19;
  v20(&v32[-v17], v21, v6);
  v23 = v22[11]((uint64_t)v18, v6);
  if (v23 == *MEMORY[0x24BEB9A88])
  {
    sub_23F40EA8C(v9);
    sub_23F383E88(v9, v22[12]);
    v24 = swift_projectBox();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v24, v2) == *MEMORY[0x24BEB9D18])
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v24, v2);
      (*(void (**)(_BYTE *, uint64_t))(v3 + 96))(v5, v2);
      v25 = sub_23F61B9BC();
      v26 = swift_projectBox();
      v27 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 88))(v26, v25);
      if (v27 == *MEMORY[0x24BEB9CC0])
      {
        sub_23F3667A8();
        v28 = 1;
      }
      else
      {
        v28 = v27 == *MEMORY[0x24BEB9C70];
        sub_23F3667A8();
      }
    }
    else
    {
      v28 = 0;
    }
  }
  else if (v23 == *MEMORY[0x24BEB9A50] || v23 == *MEMORY[0x24BEB9AA0])
  {
    sub_23F40EA8C((uint64_t)v16);
    sub_23F383E88((uint64_t)v16, v22[12]);
    v29 = swift_projectBox();
    v30 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v20)(v13, v29, v6);
    v28 = sub_23F5D4664(v30);
    sub_23F383E88((uint64_t)v13, v22[1]);
  }
  else
  {
    if (v23 != *MEMORY[0x24BEB9A90])
    {
      v28 = 0;
      goto LABEL_14;
    }
    sub_23F40EA8C((uint64_t)v16);
    sub_23F383E88((uint64_t)v16, v22[12]);
    v28 = sub_23F5D4190(*(_QWORD *)(*(_QWORD *)v16 + 16));
  }
  sub_23F3667A8();
LABEL_14:
  sub_23F383E88((uint64_t)v18, v22[1]);
  return v28 & 1;
}

NSObject *StringExprsAreQuotesRequirement.enforce(_:quotes:)(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  NSObject *v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  double *v54;
  uint64_t v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_t v67;
  uint64_t v68;
  _BYTE *v69;
  NSObject *result;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[3];
  char *v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t);
  void (*v111)(uint64_t, uint64_t);
  unint64_t v112;
  NSObject *v113;
  uint64_t v114;
  char *v115;
  os_log_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  os_log_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v120 = a3;
  v122 = a2;
  v5 = sub_23F619E98();
  v6 = *(_QWORD *)(v5 - 8);
  v117 = v5;
  v118 = v6;
  MEMORY[0x24BDAC7A8](v5);
  sub_23F362AAC();
  v119 = v7 - v8;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v116 = (os_log_t)((char *)v103 - v11);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v115 = (char *)v103 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v103 - v14;
  v16 = sub_23F35D2E8(&qword_256E7DFE8);
  MEMORY[0x24BDAC7A8](v16);
  sub_23F362AAC();
  v19 = v17 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = ((char *)v103 - v21);
  v23 = *v3;
  v24 = v3[1];
  v25 = v3[2];
  v26 = v121;
  v27 = sub_23F617474();
  if (v26)
    return v22;
  v106 = v19;
  v107 = v22;
  v105 = a1;
  v104 = v15;
  v109 = v27;
  v28 = (uint64_t)v120;
  if (!v120[2].isa)
  {
    v22 = v119;
    sub_23F6190A0();
    v31 = (void *)sub_23F619E8C();
    v32 = sub_23F61C628();
    if (sub_23F40B304(v32))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F40B33C(&dword_23F35A000, v33, v34, "Error! Quote checker called without any strings to quote. Quoting empty string instead.");
      sub_23F366530();
    }

    sub_23F383CA8((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v118 + 8));
    sub_23F5D5734();
    sub_23F5D574C();
    return v22;
  }
  swift_retain();
  sub_23F3D9D3C();
  sub_23F384B00();
  v29 = v109;
  swift_retain();
  v30 = sub_23F5D3F54(v28, v23, v24, v25, v29);
  v35 = *(_QWORD *)(v30 + 16);
  v103[2] = 0;
  if (!v35)
  {
    swift_bridgeObjectRelease();
    v22 = v116;
    sub_23F6190A0();
    v46 = (void *)sub_23F619E8C();
    v47 = sub_23F61C628();
    v48 = sub_23F40B304(v47);
    v49 = v118;
    if (v48)
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F40B33C(&dword_23F35A000, v50, v51, "Error! Quote checker unable to locate best alignment. Quoting empty string instead.");
      sub_23F366530();
    }

    sub_23F383CA8((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
    sub_23F5D5734();
    sub_23F5D574C();
    return v22;
  }
  v36 = *(NSObject **)(v30 + 40);
  v108 = *(_QWORD *)(v30 + 32);
  v37 = *(NSObject **)(v30 + 48);
  v38 = *(_QWORD *)(v30 + 64);
  v39 = *(_QWORD *)(v30 + 72);
  v41 = *(_QWORD *)(v30 + 80);
  v40 = *(void (**)(uint64_t, uint64_t))(v30 + 88);
  v42 = *(_QWORD *)(v30 + 96);
  v43 = v30;
  v113 = *(NSObject **)(v30 + 104);
  v44 = v35 - 1;
  v120 = v36;
  v121 = v42;
  if (v35 == 1)
  {
    sub_23F383738();
    sub_23F3B1EA4();
    v45 = v38;
    sub_23F617BA0();
    sub_23F383E5C();
    v119 = v41;
    sub_23F384A00();
    sub_23F3668F4();
    sub_23F383EB0();
    sub_23F617BA0();
    v22 = v37;
  }
  else
  {
    v52 = *(double *)(v30 + 56);
    sub_23F384B00();
    sub_23F383738();
    v116 = v37;
    sub_23F3B1EA4();
    v114 = v38;
    sub_23F617BA0();
    sub_23F383E5C();
    sub_23F384A00();
    sub_23F3668F4();
    sub_23F383EB0();
    v53 = sub_23F617BA0();
    v103[1] = v43;
    v54 = (double *)(v43 + 184);
    v55 = v53;
    do
    {
      v56 = *(v54 - 6);
      if (v52 < v56)
      {
        v58 = *((_QWORD *)v54 - 1);
        v57 = *v54;
        v59 = *((_QWORD *)v54 - 3);
        v110 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v54 - 2);
        v111 = v40;
        v119 = v41;
        v61 = *((_QWORD *)v54 - 5);
        v60 = *((_QWORD *)v54 - 4);
        v112 = v39;
        v62 = *((_QWORD *)v54 - 7);
        v113 = *((_QWORD *)v54 - 8);
        v108 = *((_QWORD *)v54 - 9);
        sub_23F617BA0();
        sub_23F383E5C();
        sub_23F383738();
        sub_23F3668F4();
        sub_23F617BA0();
        sub_23F384B00();
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F38458C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v120 = v113;
        v121 = v58;
        v116 = v62;
        v114 = v61;
        v39 = v60;
        v41 = v59;
        v40 = v110;
        v55 = *(_QWORD *)&v57;
        v52 = v56;
      }
      v54 += 10;
      --v44;
    }
    while (v44);
    v113 = v55;
    v119 = v41;
    v22 = v116;
    swift_bridgeObjectRelease();
    v45 = v114;
  }
  sub_23F384364();
  v63 = (uint64_t)v107;
  sub_23F3701C4((uint64_t)v22, (uint64_t)v107);
  v114 = sub_23F6174EC();
  if (sub_23F36195C(v63, 1, v114) == 1)
  {
    v64 = v63;
LABEL_22:
    sub_23F5D5400(v64);
    sub_23F362D18();
    sub_23F384364();
    swift_bridgeObjectRelease();
    sub_23F3B5F04();
    sub_23F38458C();
    sub_23F362C60();
    sub_23F384120();
    swift_bridgeObjectRelease();
    sub_23F5D5440();
    swift_allocError();
    *v69 = 1;
    swift_willThrow();
    swift_release();
    return v22;
  }
  sub_23F383EB0();
  sub_23F617BA0();
  sub_23F383E5C();
  sub_23F617BA0();
  sub_23F383738();
  v116 = v22;
  v65 = v121;
  sub_23F383EB0();
  sub_23F384B00();
  v112 = sub_23F6174D4();
  v66 = v114;
  v111 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 8);
  v111(v63, v114);
  sub_23F384364();
  v121 = v65;
  v67 = v116;
  swift_bridgeObjectRelease();
  sub_23F3B5F04();
  sub_23F362C60();
  sub_23F3837B0();
  swift_bridgeObjectRelease();
  sub_23F384120();
  v68 = v106;
  sub_23F3F1548((uint64_t)v67, v106);
  if (sub_23F36195C(v68, 1, v66) == 1)
  {
    v64 = v68;
    v120 = v67;
    v22 = v45;
    goto LABEL_22;
  }
  v71 = v68;
  sub_23F6174D4();
  v73 = v72;
  v111(v71, v114);
  sub_23F384364();
  swift_bridgeObjectRelease();
  sub_23F3B5F04();
  sub_23F38458C();
  sub_23F362C60();
  sub_23F3837B0();
  sub_23F384120();
  result = v112;
  if (v73 >> 14 >= v112 >> 14)
  {
    v22 = sub_23F61C34C();
    v75 = v74;
    v77 = v76;
    v79 = v78;
    v81 = MEMORY[0x24266F6AC]() == v105 && v80 == v122;
    v82 = v118;
    if (v81)
    {
      sub_23F38458C();
    }
    else
    {
      v83 = sub_23F61CC64();
      sub_23F362D18();
      if ((v83 & 1) == 0)
      {
        v121 = v77;
        v84 = v115;
        sub_23F6190A0();
        sub_23F3C07EC();
        swift_bridgeObjectRetain_n();
        v85 = (uint64_t)v120;
        sub_23F3B1EA4();
        v86 = sub_23F619E8C();
        v87 = sub_23F61C610();
        v88 = v87;
        if (os_log_type_enabled(v86, v87))
        {
          v89 = sub_23F366668();
          v119 = sub_23F366668();
          v124 = v119;
          *(_DWORD *)v89 = 136315650;
          v116 = v86;
          sub_23F384A00();
          sub_23F5D573C();
          v123 = v90;
          sub_23F5D5724();
          sub_23F3E01D0();
          *(_WORD *)(v89 + 12) = 2080;
          sub_23F383E5C();
          v91 = MEMORY[0x24266F6AC](v22, v75, v121, v79);
          LODWORD(v122) = v88;
          v93 = v92;
          sub_23F3837B0();
          sub_23F37AE00(v91, v93, &v124);
          v123 = v94;
          sub_23F5D5724();
          sub_23F384A80();
          sub_23F384364();
          *(_WORD *)(v89 + 22) = 2080;
          sub_23F3B1EA4();
          sub_23F37AE00(v108, v85, &v124);
          v123 = v95;
          sub_23F5D5724();
          sub_23F3E01D0();
          _os_log_impl(&dword_23F35A000, v116, (os_log_type_t)v122, "Quote checker replaced \"%s\" with \"%s\", quoting from \"%s\"", (uint8_t *)v89, 0x20u);
          swift_arrayDestroy();
          sub_23F366530();
        }

        sub_23F384A80();
        sub_23F384A80();
        sub_23F384A80();
        sub_23F5D5734();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v117);
        return v22;
      }
    }
    v96 = v104;
    sub_23F6190A0();
    sub_23F3C07EC();
    v97 = (uint64_t)v120;
    sub_23F384B00();
    v98 = sub_23F619E8C();
    v99 = sub_23F61C610();
    LODWORD(v122) = v99;
    if (os_log_type_enabled(v98, v99))
    {
      v100 = sub_23F366668();
      v119 = sub_23F366668();
      v124 = v119;
      *(_DWORD *)v100 = 136315394;
      sub_23F384A00();
      sub_23F5D573C();
      v123 = v101;
      v121 = v77;
      sub_23F61C790();
      sub_23F3E01D0();
      *(_WORD *)(v100 + 12) = 2080;
      sub_23F384B00();
      sub_23F37AE00(v108, v97, &v124);
      v123 = v102;
      sub_23F61C790();
      sub_23F3E01D0();
      _os_log_impl(&dword_23F35A000, v98, (os_log_type_t)v122, "Quote checker validated \"%s\" is a quote from \"%s\"", (uint8_t *)v100, 0x16u);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F5D5734();
    sub_23F384A80();
    sub_23F384A80();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v96, v117);
    return v22;
  }
  __break(1u);
  return result;
}

uint64_t sub_23F5D5364()
{
  sub_23F5D56E8();
  return sub_23F61CCAC();
}

uint64_t sub_23F5D538C()
{
  sub_23F5D56E8();
  return sub_23F61CCA0();
}

uint64_t sub_23F5D53B4()
{
  return 0x6E656D6E67696C41;
}

uint64_t StringExprsAreQuotesRequirement.analyzerFactoryFeatures.getter()
{
  return sub_23F617BA0();
}

uint64_t StringExprsAreQuotesRequirement.tokenize(rawValue:)()
{
  return sub_23F617474();
}

uint64_t sub_23F5D5400(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E7DFE8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23F5D5440()
{
  unint64_t result;

  result = qword_256E7E310;
  if (!qword_256E7E310)
  {
    result = MEMORY[0x242670A44](&unk_23F630D98, &type metadata for StringExprsAreQuotesRequirement.AlignmentError);
    atomic_store(result, (unint64_t *)&qword_256E7E310);
  }
  return result;
}

uint64_t destroy for StringExprsAreQuotesRequirement()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for StringExprsAreQuotesRequirement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  sub_23F617BA0();
  return a1;
}

_QWORD *assignWithCopy for StringExprsAreQuotesRequirement(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for StringExprsAreQuotesRequirement(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for StringExprsAreQuotesRequirement()
{
  return &type metadata for StringExprsAreQuotesRequirement;
}

uint64_t storeEnumTagSinglePayload for StringExprsAreQuotesRequirement.AlignmentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F5D5624 + 4 * byte_23F630CB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F5D5658 + 4 * byte_23F630CB0[v4]))();
}

uint64_t sub_23F5D5658(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5D5660(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5D5668);
  return result;
}

uint64_t sub_23F5D5674(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5D567CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F5D5680(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5D5688(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StringExprsAreQuotesRequirement.AlignmentError()
{
  return &type metadata for StringExprsAreQuotesRequirement.AlignmentError;
}

unint64_t sub_23F5D56AC()
{
  unint64_t result;

  result = qword_256E7E318;
  if (!qword_256E7E318)
  {
    result = MEMORY[0x242670A44](&unk_23F630D70, &type metadata for StringExprsAreQuotesRequirement.AlignmentError);
    atomic_store(result, (unint64_t *)&qword_256E7E318);
  }
  return result;
}

unint64_t sub_23F5D56E8()
{
  unint64_t result;

  result = qword_256E7E320[0];
  if (!qword_256E7E320[0])
  {
    result = MEMORY[0x242670A44](&unk_23F630CF0, &type metadata for StringExprsAreQuotesRequirement.AlignmentError);
    atomic_store(result, qword_256E7E320);
  }
  return result;
}

uint64_t sub_23F5D5724()
{
  return sub_23F61C790();
}

uint64_t sub_23F5D5734()
{
  return swift_release();
}

void sub_23F5D573C()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F37AE00(*(_QWORD *)(v1 - 256), v0, (uint64_t *)(v1 - 72));
}

uint64_t sub_23F5D5760(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t type metadata accessor for StubModelInterface(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F40C13C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StubModelInterface);
}

uint64_t sub_23F5D5774()
{
  uint64_t v0;

  return sub_23F5D578C(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8), v0, 0, 0xE000000000000000);
}

uint64_t sub_23F5D578C(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

ValueMetadata *type metadata accessor for TCCService()
{
  return &type metadata for TCCService;
}

uint64_t sub_23F5D57B4(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  os_log_type_t v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  os_log_type_t v56;
  uint8_t *v57;
  char *v58;
  char *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  char *v63;
  os_log_type_t v64;
  uint8_t *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t aBlock[6];
  uint64_t v82;

  v79 = a3;
  v5 = sub_23F619E98();
  v80 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v78 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v77 = (char *)&v73 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v73 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v73 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v73 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v73 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v73 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v73 - v25;
  if ((sub_23F61C310() & 1) != 0)
  {
    v79 = (uint64_t)a1;
    sub_23F619094();
    swift_bridgeObjectRetain_n();
    sub_23F619E8C();
    v27 = sub_23F40B504();
    if (sub_23F3D9BD4(v27))
    {
      v28 = (_DWORD *)sub_23F366668();
      aBlock[0] = sub_23F366668();
      *v28 = 136315138;
      sub_23F617BA0();
      sub_23F37AE00(v79, a2, aBlock);
      v82 = v29;
      sub_23F61C790();
      sub_23F3E01D0();
      sub_23F5D65C0(&dword_23F35A000, v30, v31, "Overriding TCC for 1P: %s");
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F384A80();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v26, v5);
    return 1;
  }
  v75 = v12;
  v76 = a2;
  v32 = v5;
  sub_23F3E0278();
  v33 = sub_23F619E8C();
  v34 = sub_23F61C61C();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)sub_23F366668();
    *(_WORD *)v35 = 0;
    sub_23F4114BC(&dword_23F35A000, v33, v34, "Running TCC Services check", v35);
    sub_23F366530();
  }

  v36 = *(void (**)(char *, uint64_t))(v80 + 8);
  v37 = v32;
  v36(v24, v32);
  sub_23F5D5FFC(v79);
  v39 = v38;
  sub_23F35DEE0();
  if ((v40 & 1) != 0)
  {
    sub_23F3B5F04();
    sub_23F619148();
    sub_23F619E8C();
    v41 = sub_23F3B1BD4();
    if (sub_23F40B304(v41))
    {
      v42 = (uint8_t *)sub_23F366668();
      *(_WORD *)v42 = 0;
      sub_23F4114BC(&dword_23F35A000, a1, (os_log_type_t)v21, "No TCC Service defined for type", v42);
      sub_23F366530();
    }

    v36(v21, v32);
    return 1;
  }
  v74 = v15;
  v44 = swift_allocObject();
  *(_BYTE *)(v44 + 16) = 0;
  if (!tcc_message_options_create())
  {
    sub_23F3B5F04();
    v55 = v78;
    sub_23F619148();
    sub_23F619E8C();
    v56 = sub_23F40B504();
    if (sub_23F40B304(v56))
    {
      v57 = (uint8_t *)sub_23F366668();
      *(_WORD *)v57 = 0;
      sub_23F4114BC(&dword_23F35A000, a1, (os_log_type_t)v55, "Unable to create TCC Options and complete TCC check", v57);
      sub_23F366530();
    }

    v58 = v55;
    goto LABEL_29;
  }
  v73 = v18;
  tcc_message_options_set_reply_handler_policy();
  sub_23F61C190();
  v45 = tcc_identity_create();
  swift_release();
  if (!v45)
  {
    sub_23F3B5F04();
    v59 = v77;
    sub_23F619148();
    v60 = sub_23F619E8C();
    v61 = sub_23F61C628();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)sub_23F366668();
      *(_WORD *)v62 = 0;
      sub_23F4114BC(&dword_23F35A000, v60, v61, "Unable to create TCC Identity and complete TCC check", v62);
      sub_23F366530();
    }

    sub_23F3ECBC8();
    v58 = v59;
    goto LABEL_29;
  }
  v46 = tcc_server_create();
  if (!v46)
  {
    sub_23F3B5F04();
    v63 = v75;
    sub_23F619148();
    sub_23F619E8C();
    v64 = sub_23F40B504();
    if (sub_23F40B304(v64))
    {
      v65 = (uint8_t *)sub_23F366668();
      *(_WORD *)v65 = 0;
      sub_23F4114BC(&dword_23F35A000, a1, (os_log_type_t)v63, "Unable to create TCC Server and complete TCC check", v65);
      sub_23F366530();
    }

    sub_23F44D474();
    sub_23F44D474();
    v58 = v63;
LABEL_29:
    v36(v58, v37);
    swift_release();
    return 0;
  }
  v47 = v46;
  v79 = (uint64_t)a1;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = v39;
  *(_QWORD *)(v48 + 24) = v44;
  aBlock[4] = (uint64_t)sub_23F5D65A0;
  aBlock[5] = v48;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23F5D650C;
  aBlock[3] = (uint64_t)&unk_250FDF738;
  v49 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  v80 = v47;
  tcc_server_message_get_authorization_records_by_identity();
  _Block_release(v49);
  sub_23F3ECBC8();
  swift_beginAccess();
  if (*(_BYTE *)(v44 + 16) == 1)
  {
    sub_23F3E0278();
    sub_23F5D6634();
    sub_23F619E8C();
    v50 = sub_23F3B1BD4();
    if (sub_23F3D9BD4(v50))
    {
      v77 = (char *)v45;
      sub_23F366668();
      v51 = sub_23F366668();
      v78 = (char *)v44;
      v82 = v51;
      sub_23F5D65F0(4.8149e-34);
      sub_23F5D6624();
      sub_23F5D65D4(v52);
      sub_23F3E01D0();
      sub_23F5D65C0(&dword_23F35A000, v53, v54, "%s has permission to access the 1p candidate store");
      sub_23F5D660C();
      sub_23F366530();
    }

    sub_23F44D474();
    sub_23F5D661C();
    sub_23F384A80();
    sub_23F3ECBC8();
    v71 = v73;
  }
  else
  {
    sub_23F3E0278();
    sub_23F5D6634();
    sub_23F619E8C();
    v66 = sub_23F3B1BD4();
    if (sub_23F3D9BD4(v66))
    {
      v77 = (char *)v45;
      sub_23F366668();
      v67 = sub_23F366668();
      v78 = (char *)v44;
      v82 = v67;
      sub_23F5D65F0(4.8149e-34);
      sub_23F5D6624();
      sub_23F5D65D4(v68);
      sub_23F3E01D0();
      sub_23F5D65C0(&dword_23F35A000, v69, v70, "%s does not have permission to access 1p candidate store");
      sub_23F5D660C();
      sub_23F366530();
    }

    sub_23F384A80();
    sub_23F44D474();
    sub_23F5D661C();
    sub_23F3ECBC8();
    v71 = v74;
  }
  v36(v71, v37);
  v43 = *(unsigned __int8 *)(v44 + 16);
  swift_release();
  return v43;
}

void sub_23F5D5FFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t);
  uint64_t inited;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_BYTE *, uint64_t);
  _BYTE v26[64];

  v2 = sub_23F61B9BC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v26[-v7];
  v9 = sub_23F61B9EC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v10 + 88))(v12, v9) == *MEMORY[0x24BEB9D18])
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 96))(v12, v9);
    v13 = swift_projectBox();
    v14 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16);
    v14(v8, v13, v2);
    v14(v6, (uint64_t)v8, v2);
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v3 + 88))(v6, v2) == *MEMORY[0x24BEB9CB8])
    {
      sub_23F35D2E8(&qword_256E700E8);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23F61E980;
      if (*MEMORY[0x24BEB3858])
      {
        v16 = (_QWORD *)inited;
        v17 = (id)*MEMORY[0x24BEB3858];
        v18 = sub_23F61C10C();
        v20 = v19;

        v16[4] = v18;
        v16[5] = v20;
        if (*MEMORY[0x24BEB3830])
        {
          v21 = (id)*MEMORY[0x24BEB3830];
          v22 = sub_23F61C10C();
          v24 = v23;

          v16[6] = v22;
          v16[7] = v24;
          sub_23F3E3708((uint64_t)v16);
          (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
          swift_release();
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      v25 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
      v25(v8, v2);
      v25(v6, v2);
      swift_release();
    }
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_23F5D6258()
{
  return swift_deallocObject();
}

uint64_t sub_23F5D6268(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t authorization_right;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD v28[2];
  uint64_t v29[3];
  id v30;

  v8 = sub_23F619E98();
  v9 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_unknownObjectRetain();
    if ((id)tcc_authorization_record_get_service())
    {
      tcc_service_get_name();
      v13 = sub_23F61C298();
      sub_23F3E2B58(v13, v14, a3);
      v16 = v15;
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
      {
        authorization_right = tcc_authorization_record_get_authorization_right();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        result = swift_beginAccess();
        *(_BYTE *)(a4 + 16) = authorization_right == 2;
      }
      else
      {
        swift_unknownObjectRelease();
        return swift_unknownObjectRelease();
      }
      return result;
    }
    result = swift_unknownObjectRelease();
  }
  if (a2)
  {
    v18 = a2;
    sub_23F619148();
    v19 = v18;
    v20 = sub_23F619E8C();
    v21 = sub_23F61C628();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      *(_DWORD *)v22 = 136315138;
      v28[1] = v22 + 4;
      v29[0] = v23;
      v30 = v19;
      type metadata accessor for CFError(0);
      v24 = v19;
      v25 = sub_23F61C16C();
      sub_23F37AE00(v25, v26, v29);
      v30 = v27;
      sub_23F61C790();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F35A000, v20, v21, "error when checking tcc: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v23, -1, -1);
      MEMORY[0x242670B70](v22, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return result;
}

uint64_t sub_23F5D650C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_23F5D6574()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F5D65A0(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_23F5D6268(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23F5D65A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23F5D65B8()
{
  return swift_release();
}

void sub_23F5D65C0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_23F5D65D4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F5D65F0(float a1)
{
  float *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 192) = v2;
  *v1 = a1;
  return sub_23F617BA0();
}

uint64_t sub_23F5D660C()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F5D661C()
{
  return swift_unknownObjectRelease();
}

void sub_23F5D6624()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F37AE00(*(_QWORD *)(v1 - 160), v0, (uint64_t *)(v1 - 72));
}

uint64_t sub_23F5D6634()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23F5D6644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v52)(uint64_t, uint64_t);
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[2];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;

  v4 = v3;
  v78 = a1;
  v79 = a3;
  v6 = sub_23F619E98();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F61BCE0();
  v70 = *(_QWORD *)(v10 - 8);
  v71 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  v69[1] = v12;
  sub_23F35D2E8(&qword_256E70238);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v69[0] = v14;
  v15 = sub_23F61B518();
  v72 = *(_QWORD *)(v15 - 8);
  v73 = v15;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  v74 = v17;
  v18 = sub_23F61B5D8();
  v19 = *(_QWORD *)(v18 - 8);
  v75 = v18;
  v76 = v19;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F362AAC();
  v23 = v21 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)v69 - v25;
  sub_23F35D2E8(&qword_256E70220);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F362AAC();
  v30 = v28 - v29;
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)v69 - v32;
  sub_23F35D2E8(&qword_256E6FAD8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F362AAC();
  v37 = v35 - v36;
  MEMORY[0x24BDAC7A8](v38);
  v77 = (_QWORD *)((char *)v69 - v39);
  if (a2)
  {
    sub_23F61B314();
    v40 = sub_23F61B308();
    if (sub_23F36195C((uint64_t)v33, 1, v40) != 1)
    {
      v42 = v4;
      sub_23F5D6C0C((uint64_t)v33, v30);
      v52 = *(uint64_t (***)(uint64_t, uint64_t))(v40 - 8);
      v53 = v52[11](v30, v40);
      if (v53 == *MEMORY[0x24BE56D38] || v53 == *MEMORY[0x24BE56D28])
      {
        sub_23F362D20(v52[12]);
        v54 = v76;
        (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v26, v30, v75);
        v42 = v77;
        sub_23F61B578();
        sub_23F383E88((uint64_t)v26, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
        goto LABEL_10;
      }
      if (v53 == *MEMORY[0x24BE56D30])
      {
        sub_23F362D20(v52[12]);
        v56 = v72;
        v55 = v74;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v74, v30, v73);
        sub_23F61B500();
        v57 = sub_23F61B2F0();
        sub_23F3C3DC8(v70);
        if (v57)
        {
          v58 = *(_QWORD *)(v57 + 16);
          if (v58)
          {
            v55 = v57 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
            v59 = *(_QWORD *)(v76 + 72);
            v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16);
            v78 = v57;
            sub_23F617BA0();
            v42 = &qword_256E6FAD8;
            v61 = v75;
            while (1)
            {
              v60(v23, v55, v61);
              sub_23F61B578();
              v62 = sub_23F5CFE54();
              v63 = sub_23F36195C(v37, 1, v62);
              sub_23F3C3D2C(v37, &qword_256E6FAD8);
              if (v63 != 1)
                break;
              sub_23F383E88(v23, *(uint64_t (**)(uint64_t, uint64_t))(v76 + 8));
              v55 += v59;
              if (!--v58)
              {
                sub_23F384120();
                sub_23F5D6C54();
                v65 = v69[0];
                goto LABEL_23;
              }
            }
            sub_23F384120();
            v65 = v69[0];
            (*(void (**)(_QWORD, uint64_t, uint64_t))(v76 + 32))(v69[0], v23, v61);
            sub_23F5D6C54();
LABEL_23:
            v56 = v72;
          }
          else
          {
            sub_23F5D6C54();
            v61 = v75;
            v65 = v69[0];
          }
          sub_23F36196C(v65, v64, 1, v61);
          sub_23F384120();
          if (sub_23F36195C(v65, 1, v61) != 1)
          {
            sub_23F61B578();
            sub_23F383F80(v74, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
            sub_23F383E88(v65, *(uint64_t (**)(uint64_t, uint64_t))(v76 + 8));
            goto LABEL_11;
          }
          sub_23F383F80(v74, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
          sub_23F3C3D2C(v65, &qword_256E70238);
        }
        else
        {
          sub_23F383F80(v55, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
          sub_23F5D6C54();
        }
        v66 = sub_23F5CFE54();
        sub_23F3838D8((uint64_t)v42, v67, v68, v66);
LABEL_11:
        sub_23F3C3D2C((uint64_t)v33, &qword_256E70220);
        return sub_23F5D6BC4((uint64_t)v42, v55);
      }
      sub_23F362D20(v52[1]);
    }
    v41 = sub_23F5CFE54();
    v42 = v77;
    sub_23F3838D8((uint64_t)v77, v43, v44, v41);
LABEL_10:
    v55 = v79;
    goto LABEL_11;
  }
  sub_23F619124();
  v45 = sub_23F619E8C();
  v46 = sub_23F61C61C();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v47 = 0;
    _os_log_impl(&dword_23F35A000, v45, v46, "No toolId provided. Unable to provide AppDefinition", v47, 2u);
    MEMORY[0x242670B70](v47, -1, -1);
  }

  sub_23F383F80((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  v48 = sub_23F5CFE54();
  return sub_23F3838D8(v79, v49, v50, v48);
}

uint64_t sub_23F5D6BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FAD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5D6C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5D6C60()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23F619E44();
  sub_23F3F3F64(v1, qword_256E7E3D0);
  sub_23F361498(v1, (uint64_t)qword_256E7E3D0);
  sub_23F619130();
  return sub_23F619E2C();
}

_QWORD *sub_23F5D6CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_signpost_type_t v20;
  _WORD *v21;
  os_signpost_id_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_signpost_type_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  char *v36;
  os_signpost_type_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  os_signpost_id_t v42;
  os_signpost_id_t v43;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  _UNKNOWN **v54;
  _QWORD *v55;

  v1 = sub_23F619E50();
  v49 = *(_QWORD *)(v1 - 8);
  v50 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v46 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v45 = (char *)&v45 - v4;
  v5 = sub_23F619E20();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v48 = (char *)&v45 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v45 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v45 - v15;
  if (qword_256E6F108 != -1)
    swift_once();
  v17 = sub_23F619E44();
  v18 = sub_23F361498(v17, (uint64_t)qword_256E7E3D0);
  sub_23F619E38();
  sub_23F619DFC();
  v51 = v18;
  v19 = sub_23F619E38();
  v20 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v21 = (_WORD *)sub_23F3EEE70();
    v47 = v0;
    *v21 = 0;
    v22 = sub_23F619E08();
    sub_23F5D7258(&dword_23F35A000, v19, v20, v22, "ToolCandidateRanker.init", "");
    sub_23F366530();
  }

  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v14, v16, v5);
  sub_23F619E74();
  sub_23F3668A0();
  sub_23F619E68();
  v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v23(v16, v5);
  v24 = type metadata accessor for JointResolver();
  v25 = sub_23F4934F0();
  if (v0)
  {
    v26 = sub_23F619E38();
    sub_23F619E5C();
    v27 = sub_23F61C688();
    if ((sub_23F61C718() & 1) != 0)
    {
      v47 = v0;
      swift_retain();
      v28 = v46;
      sub_23F619E80();
      sub_23F384AF8();
      v30 = v49;
      v29 = v50;
      if ((*(unsigned int (**)(char *, uint64_t))(v49 + 88))(v28, v50) == *MEMORY[0x24BEE7810])
      {
        v31 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
        v31 = "";
      }
      *(_WORD *)sub_23F3EEE70() = 0;
      v42 = sub_23F619E08();
      sub_23F5D7258(&dword_23F35A000, v26, v27, v42, "ToolCandidateRanker.init", v31);
      sub_23F366530();
    }

    v23(v9, v5);
    sub_23F384AF8();
    type metadata accessor for ToolCandidateRanker();
    v32 = v55;
    swift_deallocPartialClassInstance();
  }
  else
  {
    v46 = (char *)v5;
    v47 = 0;
    v53 = v24;
    v54 = &off_250FD8318;
    *(_QWORD *)&v52 = v25;
    v32 = v55;
    sub_23F362678(&v52, (uint64_t)(v55 + 2));
    type metadata accessor for JointResolverFeaturizer();
    swift_allocObject();
    v32[7] = sub_23F497A5C();
    v33 = type metadata accessor for DeviceContextClient();
    v34 = swift_allocObject();
    sub_23F6191FC();
    sub_23F3668A0();
    *(_QWORD *)(v34 + 16) = sub_23F6191F0();
    v32[11] = v33;
    v32[12] = &off_250FD5828;
    v32[8] = v34;
    v35 = sub_23F619E38();
    v36 = v48;
    sub_23F619E5C();
    v37 = sub_23F61C688();
    if ((sub_23F61C718() & 1) != 0)
    {
      swift_retain();
      v38 = v45;
      sub_23F619E80();
      sub_23F384AF8();
      v40 = v49;
      v39 = v50;
      if ((*(unsigned int (**)(char *, uint64_t))(v49 + 88))(v38, v50) == *MEMORY[0x24BEE7810])
      {
        v41 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
        v41 = "";
      }
      *(_WORD *)sub_23F3EEE70() = 0;
      v43 = sub_23F619E08();
      sub_23F5D7258(&dword_23F35A000, v35, v37, v43, "ToolCandidateRanker.init", v41);
      sub_23F366530();
    }

    v23(v36, (uint64_t)v46);
    sub_23F384AF8();
  }
  return v32;
}

uint64_t sub_23F5D71EC()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  swift_release();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 64);
  return v0;
}

uint64_t sub_23F5D7218()
{
  sub_23F5D71EC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ToolCandidateRanker()
{
  return objc_opt_self();
}

void sub_23F5D7258(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  uint8_t *v6;

  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, v6, 2u);
}

void sub_23F5D7264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  int v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  _QWORD v16[2];
  uint64_t v17;
  int v18;

  sub_23F61BB00();
  sub_23F56EAB4();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v16 - v6;
  v8 = sub_23F61B53C();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = *(unsigned __int8 *)(v1 + 80);
    v16[1] = v8;
    v11 = v8 + ((v10 + 32) & ~v10);
    v18 = *MEMORY[0x24BEBA168];
    v17 = *(_QWORD *)(v1 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    do
    {
      v12(v7, v11, v0);
      v12(v5, (uint64_t)v7, v0);
      v13 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v5, v0);
      if (v13 == v18)
      {
        v14 = v12;
        v15 = sub_23F61BAF4();
        sub_23F40EB24((uint64_t)v7);
        if ((v15 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          sub_23F40EB24((uint64_t)v5);
          goto LABEL_10;
        }
        v12 = v14;
      }
      else
      {
        sub_23F40EB24((uint64_t)v7);
      }
      sub_23F40EB24((uint64_t)v5);
      v11 += v17;
      --v9;
    }
    while (v9);
  }
  swift_bridgeObjectRelease();
LABEL_10:
  sub_23F362948();
}

void sub_23F5D73C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  int v45;
  void (*v46)(uint64_t *, uint64_t);
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  void (*v52)(uint64_t *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t (*v79)(uint64_t, _QWORD);
  uint64_t v80;
  uint64_t (*v81)(uint64_t, _QWORD);
  _QWORD v82[2];
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  void (*v98)(uint64_t *, uint64_t);
  uint64_t v99;
  void (*v100)(uint64_t *, uint64_t);
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t (*v108)(uint64_t, uint64_t, uint64_t);
  uint8_t *v109;
  uint64_t v110;

  v3 = sub_23F61B5D8();
  v89 = *(_QWORD *)(v3 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3834D0();
  v86 = v5;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v6);
  v85 = (char *)v82 - v7;
  sub_23F619E98();
  sub_23F56EAB4();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3834D0();
  v87 = v9;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v10);
  v88 = (char *)v82 - v11;
  v100 = (void (*)(uint64_t *, uint64_t))sub_23F61BA34();
  v94 = *((_QWORD *)v100 - 1);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v91 = v13;
  v99 = sub_23F35D2E8(&qword_256E7E4B8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  v106 = v15;
  sub_23F35D2E8(&qword_256E7E4C0);
  sub_23F362850();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v95 = (uint64_t)v82 - v20;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v82 - v22;
  v24 = sub_23F61BD58();
  v104 = *(_QWORD *)(v24 - 8);
  v105 = v24;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F36285C();
  v103 = v26;
  v27 = sub_23F61BB00();
  v109 = *(uint8_t **)(v27 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F3834D0();
  v98 = (void (*)(uint64_t *, uint64_t))v29;
  sub_23F383588();
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)v82 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v107 = (_QWORD *)((char *)v82 - v34);
  sub_23F5D7264();
  if ((v35 & 1) == 0)
    goto LABEL_32;
  v83 = v3;
  v36 = sub_23F61B53C();
  v37 = *(_QWORD *)(v36 + 16);
  if (!v37)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  v93 = v19;
  v82[0] = v2;
  v82[1] = v0;
  v38 = (v109[80] + 32) & ~(unint64_t)v109[80];
  v84 = v36;
  v39 = v36 + v38;
  v102 = *MEMORY[0x24BEBA170];
  v96 = *MEMORY[0x24BEBA158];
  v101 = *((_QWORD *)v109 + 9);
  v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v109 + 2);
  v40 = v1;
  v97 = v1;
  v42 = v106;
  v41 = v107;
  v43 = v95;
  v92 = v27;
  while (1)
  {
    v44 = v108;
    v108((uint64_t)v41, v39, v27);
    v44((uint64_t)v33, (uint64_t)v41, v27);
    v45 = (*((uint64_t (**)(char *, uint64_t))v109 + 11))(v33, v27);
    if (v45 == v102)
    {
      sub_23F5D7CAC();
      (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v103, v33, v105);
      sub_23F61BD4C();
      v46 = v100;
      sub_23F36196C((uint64_t)v23, 0, 1, (uint64_t)v100);
      sub_23F61BA28();
      v41 = (uint64_t *)(v42 + *(int *)(v99 + 48));
      sub_23F5D7C10((uint64_t)v23, v42);
      sub_23F5D7C10(v43, (uint64_t)v41);
      sub_23F5D7CD0(v42);
      if (v48)
      {
        sub_23F3CFCB0(v43, &qword_256E7E4C0);
        sub_23F3CFCB0((uint64_t)v23, &qword_256E7E4C0);
        sub_23F5D7CD0((uint64_t)v41);
        if (v48)
        {
          sub_23F3CFCB0(v106, &qword_256E7E4C0);
          v46 = v98;
          sub_23F362D94((uint64_t)v98, (uint64_t)v107, v108);
LABEL_21:
          v58 = sub_23F61BAF4();
          sub_23F5D7C98();
          if ((v58 & 1) == 0)
          {
            sub_23F5D7CEC();
            sub_23F619160();
            v69 = v89;
            v70 = v85;
            v71 = v83;
            (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v85, v97, v83);
            v72 = sub_23F619E8C();
            v73 = sub_23F61C640();
            if (sub_23F5708C8(v73))
            {
              v74 = (uint8_t *)sub_23F366668();
              v110 = sub_23F366668();
              *(_DWORD *)v74 = 136315138;
              v109 = v74 + 4;
              v75 = sub_23F61B5A8();
              sub_23F5D7D34(v75, v76);
              sub_23F5276E0(v77);
              sub_23F61C790();
              swift_bridgeObjectRelease();
              sub_23F384430();
              v78(v70, v71);
              _os_log_impl(&dword_23F35A000, v72, (os_log_type_t)v37, "Skipping tool due to unmet platform requirements: %s", v74, 0xCu);
              swift_arrayDestroy();
              sub_23F366530();
            }

            (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
            v80 = sub_23F5D7D20();
            sub_23F5D7D14(v80, v81);
            sub_23F5D7CC0();
            v46(v107, v27);
            goto LABEL_32;
          }
          v42 = v106;
          v41 = v107;
          goto LABEL_23;
        }
      }
      else
      {
        v47 = (uint64_t)v93;
        sub_23F5D7C10(v42, (uint64_t)v93);
        sub_23F5D7CD0((uint64_t)v41);
        if (!v48)
        {
          v53 = v94;
          v54 = v91;
          (*(void (**)(uint64_t, uint64_t *, void (*)(uint64_t *, uint64_t)))(v94 + 32))(v91, v41, v46);
          sub_23F5D7C58();
          v90 = sub_23F61C0A0();
          v41 = *(uint64_t **)(v53 + 8);
          ((void (*)(uint64_t, _QWORD))v41)(v54, v46);
          v43 = v95;
          sub_23F5D7CF8(v95);
          sub_23F5D7CF8((uint64_t)v23);
          ((void (*)(uint64_t, _QWORD))v41)(v47, v46);
          sub_23F5D7CF8(v42);
          v55 = sub_23F5D7D00();
          v27 = v92;
          sub_23F362D94(v55, v56, v57);
          if ((v90 & 1) != 0)
            goto LABEL_21;
LABEL_17:
          sub_23F5D7C98();
LABEL_23:
          sub_23F5D7CC0();
          v46(v41, v27);
          v40 = v97;
          goto LABEL_24;
        }
        v43 = v95;
        v41 = &qword_256E7E4C0;
        sub_23F3CFCB0(v95, &qword_256E7E4C0);
        sub_23F3CFCB0((uint64_t)v23, &qword_256E7E4C0);
        sub_23F3B1CC8(v47, *(uint64_t (**)(uint64_t, uint64_t))(v94 + 8));
        v27 = v92;
      }
      v42 = v106;
      sub_23F3CFCB0(v106, &qword_256E7E4B8);
      v49 = sub_23F5D7D00();
      sub_23F362D94(v49, v50, v51);
      goto LABEL_17;
    }
    if (v45 != v96)
    {
      v52 = (void (*)(uint64_t *, uint64_t))*((_QWORD *)v109 + 1);
      v52(v107, v27);
      v52((uint64_t *)v33, v27);
      v41 = v107;
      goto LABEL_19;
    }
    sub_23F5D7CAC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((sub_23F61BAF4() & 1) == 0)
      break;
    (*((void (**)(uint64_t *, uint64_t))v109 + 1))(v41, v27);
LABEL_19:
    v42 = v106;
LABEL_24:
    v39 += v101;
    if (!--v37)
      goto LABEL_25;
  }
  sub_23F5D7CEC();
  v59 = v87;
  sub_23F619160();
  v60 = v89;
  v61 = v86;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v86, v40, v83);
  v62 = sub_23F619E8C();
  v63 = sub_23F61C640();
  if (sub_23F5708C8(v63))
  {
    v64 = sub_23F366668();
    v110 = sub_23F366668();
    *(_DWORD *)v64 = 136315138;
    v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v64 + 4);
    v65 = sub_23F61B5A8();
    sub_23F5D7D34(v65, v66);
    sub_23F5276E0(v67);
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F384430();
    sub_23F3B1CC8(v61, v68);
    _os_log_impl(&dword_23F35A000, v62, (os_log_type_t)v37, "Skipping tool due to disabled feature flag: %s", (uint8_t *)v64, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }

  sub_23F3B1CC8(v61, *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8));
  sub_23F384430();
  sub_23F5D7D14(v59, v79);
  (*((void (**)(uint64_t *, uint64_t))v109 + 1))(v107, v27);
LABEL_32:
  sub_23F362948();
}

uint64_t sub_23F5D7C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E7E4C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F5D7C58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E7E4C8;
  if (!qword_256E7E4C8)
  {
    v1 = sub_23F61BA34();
    result = MEMORY[0x242670A44](MEMORY[0x24BEB9E10], v1);
    atomic_store(result, (unint64_t *)&qword_256E7E4C8);
  }
  return result;
}

uint64_t sub_23F5D7C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v1, v0);
}

uint64_t sub_23F5D7CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 96))(v1, v0);
}

uint64_t sub_23F5D7CC0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 152) + 8))(*(_QWORD *)(v0 - 160), *(_QWORD *)(v0 - 144));
}

uint64_t sub_23F5D7CD0(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, v1);
}

uint64_t sub_23F5D7CEC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5D7CF8(uint64_t a1)
{
  uint64_t *v1;

  return sub_23F3CFCB0(a1, v1);
}

uint64_t sub_23F5D7D00()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 200);
}

uint64_t sub_23F5D7D14@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 328));
}

uint64_t sub_23F5D7D20()
{
  uint64_t v0;

  return v0;
}

void sub_23F5D7D34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 96));
}

uint64_t sub_23F5D7D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  unsigned int v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unsigned int v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unsigned int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  __int128 v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;

  v189 = a5;
  v178 = a4;
  v190 = a3;
  v204 = a2;
  v205 = a1;
  v203 = a6;
  v180 = sub_23F619E98();
  v179 = *(_QWORD *)(v180 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  sub_23F3B13F0(v8);
  v177 = sub_23F617D08();
  v175 = *(_QWORD *)(v177 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  sub_23F3B13F0(v10);
  v185 = sub_23F61B92C();
  v184 = *(_QWORD *)(v185 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  sub_23F3B13F0(v12);
  v13 = sub_23F6191A8();
  v199 = *(_QWORD *)(v13 - 8);
  v200 = v13;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3834D0();
  *(_QWORD *)&v197 = v15;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3838E4();
  v198 = v17;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v18);
  v187 = (char *)&v158 - v19;
  sub_23F35D2E8(&qword_256E79328);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F3834D0();
  v186 = v21;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3B13F0((uint64_t)&v158 - v23);
  v24 = sub_23F61B9BC();
  v192 = *(_QWORD *)(v24 - 8);
  v193 = v24;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F36285C();
  v191 = v26;
  v196 = sub_23F35D2E8(&qword_256E79320);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F36285C();
  v195 = v28;
  v29 = sub_23F61B95C();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  sub_23F3834D0();
  v174 = v31;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F3838E4();
  v181 = v33;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F3838E4();
  v201 = v35;
  sub_23F383588();
  v37 = MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)&v158 - v38;
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3838E4();
  v194 = v40;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F3838E4();
  v202 = v42;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v158 - v44;
  sub_23F35D2E8(&qword_256E70268);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v46);
  v48 = (char *)&v158 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_23F61BBA8();
  v50 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  sub_23F383EC4();
  v51 = sub_23F61B530();
  v52 = v204;
  sub_23F617BA0();
  v53 = v51;
  v54 = v206;
  v55 = sub_23F5D8BAC(v53, v205, v52);
  v206 = v54;
  sub_23F36FD44(v55, (uint64_t)v48);
  swift_bridgeObjectRelease();
  if (sub_23F36195C((uint64_t)v48, 1, v49) == 1)
  {
    sub_23F3CFCB0((uint64_t)v48, &qword_256E70268);
    v56 = sub_23F5DB644();
    v57 = v203;
  }
  else
  {
    v171 = v50;
    v58 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v50 + 32);
    v173 = v49;
    v59 = v58(v6, v48, v49);
    v60 = v202;
    v172 = v6;
    MEMORY[0x24266F0AC](v59);
    sub_23F5D8DC4((uint64_t)v45);
    v61 = *(_QWORD *)(v30 + 8);
    sub_23F5DB620(v60);
    sub_23F4DC8D0((uint64_t)v39, (uint64_t)v45);
    v62 = *(uint64_t (**)(char *, uint64_t))(v30 + 88);
    v63 = v62(v39, v29);
    v64 = *MEMORY[0x24BEB9A50];
    v170 = v63;
    v65 = (uint64_t)v45;
    v169 = v64;
    if (v63 == v64)
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v39, v29);
      v66 = swift_projectBox();
      v67 = v194;
      sub_23F4DC8D0(v194, v66);
      swift_release();
      v68 = v202;
      sub_23F5D8DC4(v202);
      sub_23F5DB620(v67);
      sub_23F5DB620(v65);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v65, v68, v29);
    }
    else
    {
      sub_23F5DB620((uint64_t)v39);
    }
    v69 = v201;
    sub_23F4DC8D0((uint64_t)v201, v65);
    v70 = v62((char *)v69, v29);
    if (v70 == *MEMORY[0x24BEB9A58])
    {
      LODWORD(v194) = v70;
      v202 = v61;
      v168 = v30;
      (*(void (**)(uint64_t *, uint64_t))(v30 + 96))(v69, v29);
      v71 = swift_projectBox();
      v72 = *(int *)(v196 + 48);
      v73 = sub_23F61B9EC();
      v74 = *(_QWORD *)(v73 - 8);
      v75 = v195;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v195, v71, v73);
      *(_QWORD *)(v75 + v72) = *(_QWORD *)(v71 + v72);
      v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 88))(v75, v73);
      if (v76 == *MEMORY[0x24BEB9D18])
      {
        v77 = v76;
        v166 = v74;
        v78 = *(void (**)(uint64_t, uint64_t))(v74 + 96);
        v167 = v73;
        v78(v75, v73);
        v79 = swift_projectBox();
        v80 = v191;
        v81 = v192;
        v82 = v193;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v192 + 16))(v191, v79, v193);
        v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 88))(v80, v82);
        if (v83 == *MEMORY[0x24BEB9CA0])
        {
          v165 = v83;
          sub_23F5DB634();
          swift_release();
          swift_release();
          v84 = sub_23F5D8F14();
          v85 = v190;
          v86 = v206;
          v87 = sub_23F5D9314(v189);
          if (v86)
          {
            swift_bridgeObjectRelease();
            v88 = v65;
          }
          else
          {
            if (!v87)
            {
              swift_bridgeObjectRelease();
              sub_23F5DB628(v65);
              sub_23F5DB600();
              v111 = sub_23F5DB644();
              return sub_23F36196C(v203, 1, 1, v111);
            }
            v160 = v77;
            v206 = 0;
            v92 = *(_QWORD *)(v87 + 16);
            v162 = v65;
            v163 = v92;
            v191 = v84;
            if (v92)
            {
              v93 = (*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80);
              v94 = v87 + v93;
              v164 = *(_QWORD *)(v84 + 16);
              v195 = *(_QWORD *)(v199 + 72);
              v161 = v84 + v93;
              v201 = *(uint64_t **)(v199 + 16);
              sub_23F617BA0();
              v95 = 0;
              v96 = v200;
              v97 = v198;
              v98 = v194;
              v159 = v94;
              while (1)
              {
                v189 = v95;
                ((void (*)(uint64_t, unint64_t, uint64_t))v201)(v97, v94 + v195 * v95, v96);
                v99 = v164;
                if (v164)
                  break;
                v105 = v98;
                v104 = *(void (**)(uint64_t, uint64_t))(v199 + 8);
LABEL_29:
                v106 = v189 + 1;
                v104(v97, v96);
                v95 = v106;
                v107 = v106 == v163;
                v98 = v105;
                if (v107)
                {
                  sub_23F38432C();
                  v108 = 1;
                  v85 = v190;
                  v109 = v188;
                  v110 = v186;
                  goto LABEL_36;
                }
              }
              sub_23F617BA0();
              v100 = v161;
              while (1)
              {
                v101 = v197;
                v102 = v200;
                ((void (*)(_QWORD, unint64_t, uint64_t))v201)(v197, v100, v200);
                v103 = sub_23F61919C();
                v104 = *(void (**)(uint64_t, uint64_t))(v199 + 8);
                v104(v101, v102);
                if ((v103 & 1) != 0)
                  break;
                v100 += v195;
                --v99;
                v97 = v198;
                if (!v99)
                {
                  sub_23F5DB658();
                  v96 = v200;
                  v105 = v194;
                  v94 = v159;
                  goto LABEL_29;
                }
              }
              sub_23F38432C();
              sub_23F5DB658();
              v109 = v188;
              v96 = v200;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 32))(v188, v198, v200);
              v108 = 0;
              v85 = v190;
            }
            else
            {
              v108 = 1;
              v109 = v188;
              v96 = v200;
            }
            v110 = v186;
LABEL_36:
            sub_23F36196C(v109, v108, 1, v96);
            sub_23F4AB408(v109, v110, &qword_256E79328);
            if (sub_23F36195C(v110, 1, v96) != 1)
            {
              sub_23F38432C();
              sub_23F5DB658();
              v129 = v110;
              v130 = v199;
              (*(void (**)(char *, uint64_t, uint64_t))(v199 + 32))(v187, v129, v96);
              v131 = v196;
              v132 = swift_allocBox();
              v134 = v133;
              v204 = *(int *)(v131 + 48);
              v205 = v132;
              v135 = v193;
              v136 = swift_allocBox();
              (*(void (**)(uint64_t, _QWORD, uint64_t))(v192 + 104))(v137, v165, v135);
              v201 = v134;
              *v134 = v136;
              (*(void (**)(uint64_t *, _QWORD, uint64_t))(v166 + 104))(v134, v160, v167);
              sub_23F35D2E8(&qword_256E7E4D0);
              v198 = sub_23F61BADC();
              v138 = *(_QWORD *)(v198 - 8);
              v139 = (*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
              v140 = swift_allocObject();
              v197 = xmmword_23F61E7E0;
              *(_OWORD *)(v140 + 16) = xmmword_23F61E7E0;
              v141 = (uint64_t *)(v140 + v139);
              sub_23F35D2E8(&qword_256E70398);
              v142 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
              v143 = swift_allocObject();
              *(_OWORD *)(v143 + 16) = v197;
              (*(void (**)(unint64_t, char *, uint64_t))(v130 + 16))(v143 + v142, v187, v200);
              *v141 = v143;
              (*(void (**)(uint64_t *, _QWORD, uint64_t))(v138 + 104))(v141, *MEMORY[0x24BEB9F78], v198);
              *(uint64_t *)((char *)v201 + v204) = v140;
              v144 = (uint64_t)v181;
              *v181 = v205;
              sub_23F5DB660(v144);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v184 + 16))(v182, v190, v185);
              if (v170 == v169)
              {
                v145 = swift_allocBox();
                sub_23F4DC8D0(v146, v144);
                v147 = v174;
                *v174 = v145;
                sub_23F5DB660((uint64_t)v147);
              }
              else
              {
                sub_23F4DC8D0((uint64_t)v174, v144);
              }
              v154 = v188;
              v155 = v203;
              v156 = v171;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v175 + 16))(v176, v178, v177);
              sub_23F61ABE8();
              sub_23F5DB620(v144);
              (*(void (**)(char *, uint64_t))(v199 + 8))(v187, v200);
              sub_23F3CFCB0(v154, &qword_256E79328);
              sub_23F5DB620(v162);
              (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v172, v173);
              v157 = sub_23F5DB644();
              swift_storeEnumTagMultiPayload();
              v57 = v155;
              v91 = 0;
              v56 = v157;
              return sub_23F36196C(v57, v91, 1, v56);
            }
            sub_23F3CFCB0(v110, &qword_256E79328);
            v112 = v183;
            sub_23F619094();
            sub_23F617BA0();
            sub_23F3B1EA4();
            v113 = sub_23F619E8C();
            v114 = sub_23F61C628();
            v115 = v114;
            if (os_log_type_enabled(v113, v114))
            {
              v116 = swift_slowAlloc();
              LODWORD(v206) = v115;
              v117 = v116;
              v203 = swift_slowAlloc();
              v208 = v203;
              *(_DWORD *)v117 = 136315394;
              v201 = (uint64_t *)(v117 + 4);
              v118 = sub_23F3B1EA4();
              v119 = v200;
              v120 = MEMORY[0x24266F8F8](v118, v200);
              v122 = v121;
              swift_bridgeObjectRelease();
              sub_23F37AE00(v120, v122, &v208);
              v207 = v123;
              sub_23F61C790();
              sub_23F384A80();
              sub_23F38432C();
              *(_WORD *)(v117 + 12) = 2080;
              v124 = sub_23F617BA0();
              v125 = MEMORY[0x24266F8F8](v124, v119);
              v127 = v126;
              swift_bridgeObjectRelease();
              sub_23F37AE00(v125, v127, &v208);
              v207 = v128;
              sub_23F61C790();
              sub_23F384A80();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_23F35A000, v113, (os_log_type_t)v206, "Unable to find appropriate type. Acceptable types: %s, available types: %s", (uint8_t *)v117, 0x16u);
              swift_arrayDestroy();
              sub_23F366530();
            }

            sub_23F384A80();
            sub_23F384A80();
            (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v112, v180);
            v148 = v185;
            v149 = v184;
            v150 = v204;
            type metadata accessor for InterpreterError();
            sub_23F40DF84();
            swift_allocError();
            v152 = v151;
            v153 = (char *)v151 + *(int *)(sub_23F35D2E8(&qword_256E7E170) + 48);
            *v152 = v205;
            v152[1] = v150;
            (*(void (**)(char *, uint64_t, uint64_t))(v149 + 16))(v153, v85, v148);
            swift_storeEnumTagMultiPayload();
            sub_23F3B1EA4();
            swift_willThrow();
            sub_23F3CFCB0(v109, &qword_256E79328);
            v88 = v162;
          }
          sub_23F5DB628(v88);
          return sub_23F5DB600();
        }
        sub_23F5DB628(v65);
        sub_23F5DB600();
        sub_23F5DB634();
        swift_release();
      }
      else
      {
        sub_23F5DB628(v65);
        sub_23F5DB600();
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v73);
      }
      swift_release();
    }
    else
    {
      sub_23F5DB620(v65);
      sub_23F5DB600();
      sub_23F5DB620((uint64_t)v69);
    }
    v90 = v203;
    v56 = sub_23F5DB644();
    v57 = v90;
  }
  v91 = 1;
  return sub_23F36196C(v57, v91, 1, v56);
}

uint64_t sub_23F5D8BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v25 = a3;
  v29 = sub_23F61BBA8();
  v6 = *(_QWORD *)(v29 - 8);
  v7 = MEMORY[0x24BDAC7A8](v29);
  v28 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v23 - v10;
  v12 = MEMORY[0x24BEE4AF8];
  v30 = MEMORY[0x24BEE4AF8];
  v27 = *(_QWORD *)(a1 + 16);
  if (!v27)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v12;
  }
  v23[1] = v3;
  v24 = a1;
  v13 = 0;
  v14 = v25;
  v26 = a2;
  while (v13 < *(_QWORD *)(a1 + 16))
  {
    v15 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v16 = *(_QWORD *)(v6 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, a1 + v15 + v16 * v13, v29);
    if (sub_23F61BB78() == a2 && v17 == v14)
    {
      swift_bridgeObjectRelease();
LABEL_11:
      v20 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v20(v28, v11, v29);
      v21 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B758();
        v21 = v30;
      }
      v22 = *(_QWORD *)(v21 + 16);
      if (v22 >= *(_QWORD *)(v21 + 24) >> 1)
      {
        sub_23F37B758();
        v21 = v30;
      }
      *(_QWORD *)(v21 + 16) = v22 + 1;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v20)(v21 + v15 + v22 * v16, v28, v29);
      v30 = v21;
      a1 = v24;
      v14 = v25;
      goto LABEL_16;
    }
    v19 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      goto LABEL_11;
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v29);
LABEL_16:
    ++v13;
    a2 = v26;
    if (v27 == v13)
    {
      v12 = v30;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23F5D8DC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = sub_23F35D2E8(&qword_256E703C8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F61B95C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F383EC4();
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  sub_23F5DB64C(v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v8 + 88))(v1, v7) == *MEMORY[0x24BEB9AA0])
  {
    sub_23F507420(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 96));
    v10 = swift_projectBox();
    v11 = *(int *)(v3 + 48);
    v12 = (uint64_t)&v6[v11];
    v13 = v10 + v11;
    v9(v6, v10, v7);
    sub_23F4AB408(v13, v12, &qword_256E701F0);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v6, v7);
    sub_23F3CFCB0(v12, &qword_256E701F0);
    return swift_release();
  }
  else
  {
    sub_23F507420(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    return sub_23F5DB64C(a1);
  }
}

uint64_t sub_23F5D8F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(uint64_t *, char *, uint64_t);
  int v26;
  uint64_t v27;
  void (*v28)(uint64_t *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t result;
  _QWORD v48[2];
  uint64_t v49;
  int v50;
  void (*v51)(uint64_t *, char *, uint64_t);
  uint64_t v52;

  v1 = v0;
  v2 = sub_23F61BADC();
  v52 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v48 - v6;
  v8 = sub_23F35D2E8(&qword_256E79320);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F61B95C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v1, v11);
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v14, v11) != *MEMORY[0x24BEB9A58])
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return MEMORY[0x24BEE4AF8];
  }
  (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
  v15 = swift_projectBox();
  v16 = *(int *)(v8 + 48);
  v17 = sub_23F61B9EC();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v10, v15, v17);
  v19 = *(_QWORD *)(v15 + v16);
  *(_QWORD *)&v10[v16] = v19;
  v20 = *(void (**)(char *, uint64_t))(v18 + 8);
  sub_23F617BA0();
  v20(v10, v17);
  swift_release();
  v21 = *(_QWORD *)(v19 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v22 = v52;
  v23 = (char *)(v19 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80)));
  v49 = *(_QWORD *)(v52 + 72);
  v51 = *(void (**)(uint64_t *, char *, uint64_t))(v52 + 16);
  v50 = *MEMORY[0x24BEB9F78];
  v48[1] = v19;
  sub_23F617BA0();
  v24 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v25 = v51;
    v51((uint64_t *)v7, v23, v2);
    v25(v5, v7, v2);
    v26 = (*(uint64_t (**)(uint64_t *, uint64_t))(v22 + 88))(v5, v2);
    if (v26 == v50)
    {
      (*(void (**)(uint64_t *, uint64_t))(v22 + 96))(v5, v2);
      v27 = *v5;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v2);
    }
    else
    {
      v28 = *(void (**)(uint64_t *, uint64_t))(v22 + 8);
      v28(v5, v2);
      v27 = MEMORY[0x24BEE4AF8];
      v28((uint64_t *)v7, v2);
    }
    v29 = *(_QWORD *)(v27 + 16);
    v30 = *(_QWORD *)(v24 + 16);
    if (__OFADD__(v30, v29))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v30 + v29 > *(_QWORD *)(v24 + 24) >> 1)
    {
      sub_23F377328();
      v24 = v31;
    }
    if (*(_QWORD *)(v27 + 16))
    {
      v32 = *(_QWORD *)(v24 + 16);
      v33 = (*(_QWORD *)(v24 + 24) >> 1) - v32;
      v34 = sub_23F6191A8();
      if (v33 < v29)
        goto LABEL_30;
      v35 = *(_QWORD *)(v34 - 8);
      v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      v37 = *(_QWORD *)(v35 + 72);
      v38 = v24 + v36 + v37 * v32;
      v39 = v27 + v36;
      v40 = v37 * v29;
      v41 = v38 + v40;
      v42 = v39 + v40;
      if (v39 < v41 && v38 < v42)
        goto LABEL_32;
      swift_arrayInitWithCopy();
      if (v29)
      {
        v44 = *(_QWORD *)(v24 + 16);
        v45 = __OFADD__(v44, v29);
        v46 = v44 + v29;
        if (v45)
          goto LABEL_31;
        *(_QWORD *)(v24 + 16) = v46;
      }
    }
    else if (v29)
    {
      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
    v23 += v49;
    --v21;
    v22 = v52;
    if (!v21)
    {
      swift_bridgeObjectRelease_n();
      return v24;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F5D9314(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t result;
  uint64_t *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _QWORD *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char v75;
  void (*v76)(char *, uint64_t);
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  int v108;
  uint64_t v109;
  void (*v110)(uint64_t *, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v126;
  BOOL v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  BOOL v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  _QWORD *v170;
  char *v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  _QWORD v190[4];
  uint64_t v191;

  v2 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v2);
  v159 = (uint64_t)&v150 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_23F61B6E0();
  v156 = *(_QWORD *)(v158 - 8);
  MEMORY[0x24BDAC7A8](v158);
  v157 = (char *)&v150 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_23F61BADC();
  v191 = *(_QWORD *)(v154 - 8);
  v5 = MEMORY[0x24BDAC7A8](v154);
  v188 = (char *)&v150 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v189 = (char *)&v150 - v7;
  v180 = sub_23F35D2E8(&qword_256E79320);
  MEMORY[0x24BDAC7A8](v180);
  v179 = (char *)&v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61B95C();
  v176 = *(_QWORD *)(v9 - 8);
  v177 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v166 = (char *)&v150 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v178 = (char *)&v150 - v12;
  v13 = sub_23F61BA94();
  v174 = *(_QWORD *)(v13 - 8);
  v175 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v173 = (char *)&v150 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v172 = (char *)&v150 - v16;
  v185 = sub_23F61BAAC();
  v181 = *(_QWORD *)(v185 - 8);
  v17 = MEMORY[0x24BDAC7A8](v185);
  v182 = (char *)&v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v164 = (char *)&v150 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v171 = (char *)&v150 - v21;
  v162 = (_QWORD *)sub_23F61B7AC();
  v161 = *(v162 - 1);
  MEMORY[0x24BDAC7A8](v162);
  v160 = (char *)&v150 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_23F61B92C();
  v165 = *(_QWORD *)(v163 - 8);
  MEMORY[0x24BDAC7A8](v163);
  v167 = (char *)&v150 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = (_QWORD *)sub_23F61B998();
  v168 = *(v170 - 1);
  MEMORY[0x24BDAC7A8](v170);
  v25 = (char *)&v150 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23F61B9EC();
  v183 = *(_QWORD *)(v26 - 8);
  v184 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v150 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23F61BA64();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v150 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = a1;
  sub_23F61B2FC();
  sub_23F35EA9C(v190, v190[3]);
  sub_23F61B8CC();
  v169 = v25;
  v33 = v186;
  sub_23F61A030();
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v183 + 8))(v28, v184);
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v190);
  }
  v35 = (uint64_t *)v167;
  v36 = v187;
  v151 = v30;
  v152 = v32;
  v153 = v29;
  v37 = *(void (**)(char *, uint64_t))(v183 + 8);
  v37(v28, v184);
  v38 = v168;
  v39 = v169;
  v40 = v170;
  if ((*(unsigned int (**)(char *, _QWORD *))(v168 + 88))(v169, v170) != *MEMORY[0x24BEB9B50])
  {
    (*(void (**)(char *, _QWORD *))(v38 + 8))(v39, v40);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v190);
    return 0;
  }
  (*(void (**)(char *, _QWORD *))(v38 + 96))(v39, v40);
  v41 = v151;
  v42 = (uint64_t)v152;
  (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v152, v39, v153);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v190);
  v43 = v165;
  v44 = v36;
  v45 = v163;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v165 + 16))(v35, v44, v163);
  v46 = (*(uint64_t (**)(uint64_t *, uint64_t))(v43 + 88))(v35, v45);
  if (v46 == *MEMORY[0x24BEB99E0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v43 + 96))(v35, v45);
    v47 = swift_projectBox();
    v48 = v41;
    v49 = v161;
    v50 = (uint64_t)v160;
    v51 = v162;
    (*(void (**)(char *, uint64_t, _QWORD *))(v161 + 16))(v160, v47, v162);
    v52 = sub_23F5DA2B0(v50, v42);
    (*(void (**)(uint64_t, _QWORD *))(v49 + 8))(v50, v51);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v42, v153);
LABEL_6:
    swift_release();
    return v52;
  }
  v53 = v41;
  if (v46 == *MEMORY[0x24BEB9988])
  {
    (*(void (**)(uint64_t *, uint64_t))(v165 + 96))(v35, v45);
    v54 = *v35;
    v55 = swift_projectBox();
    v56 = v156;
    v57 = v157;
    v58 = v158;
    (*(void (**)(char *, uint64_t, uint64_t))(v156 + 16))(v157, v55, v158);
    v59 = sub_23F61B6D4();
    v60 = v159;
    sub_23F36FD38(v59, v159);
    swift_bridgeObjectRelease();
    if (sub_23F36195C(v60, 1, v45) != 1)
    {
      v191 = v54;
      v86 = sub_23F5D9314(v155);
      v87 = v152;
      v88 = v153;
      v52 = v86;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v87, v88);
      (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v60, v163);
      goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v152, v153);
    sub_23F3CFCB0(v60, &qword_256E701F0);
    swift_release();
    return 0;
  }
  v61 = v165;
  if (v46 != *MEMORY[0x24BEB99B0])
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v152, v153);
    (*(void (**)(uint64_t *, uint64_t))(v61 + 8))(v35, v45);
    return 0;
  }
  v162 = v37;
  (*(void (**)(uint64_t *, uint64_t))(v165 + 96))(v35, v45);
  swift_release();
  v62 = sub_23F61BA58();
  v63 = (char *)MEMORY[0x24BEE4AF8];
  v190[0] = MEMORY[0x24BEE4AF8];
  v64 = *(_QWORD **)(v62 + 16);
  v150 = 0;
  v170 = v64;
  if (v64)
  {
    v65 = 0;
    LODWORD(v168) = *MEMORY[0x24BEB9F40];
    v66 = v154;
    v67 = v181;
    v169 = (char *)v62;
    while (v65 < *(_QWORD *)(v62 + 16))
    {
      v68 = *(_QWORD *)(v67 + 72);
      v186 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
      v187 = v68;
      v69 = v171;
      v70 = v185;
      (*(void (**)(char *, unint64_t, uint64_t))(v67 + 16))(v171, v62 + v186 + v68 * v65, v185);
      v71 = v172;
      sub_23F61BAA0();
      v73 = v174;
      v72 = v175;
      v74 = v173;
      (*(void (**)(char *, _QWORD, uint64_t))(v174 + 104))(v173, v168, v175);
      v75 = sub_23F61BA88();
      v76 = *(void (**)(char *, uint64_t))(v73 + 8);
      v76(v74, v72);
      v76(v71, v72);
      if ((v75 & 1) != 0)
      {
        v77 = *(void (**)(char *, char *, uint64_t))(v181 + 32);
        v78 = v164;
        v77(v164, v69, v70);
        v79 = v190[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37B724();
          v79 = v190[0];
        }
        v80 = v182;
        v81 = *(_QWORD *)(v79 + 16);
        if (v81 >= *(_QWORD *)(v79 + 24) >> 1)
        {
          sub_23F37B724();
          v79 = v190[0];
        }
        *(_QWORD *)(v79 + 16) = v81 + 1;
        v77((char *)(v79 + v186 + v81 * v187), v78, v185);
        v190[0] = v79;
        v67 = v181;
      }
      else
      {
        v67 = v181;
        (*(void (**)(char *, uint64_t))(v181 + 8))(v69, v70);
        v80 = v182;
      }
      ++v65;
      v82 = v191;
      v83 = v189;
      v85 = v179;
      v84 = v180;
      v62 = (uint64_t)v169;
      if (v170 == (_QWORD *)v65)
      {
        v63 = (char *)v190[0];
        goto LABEL_28;
      }
    }
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    result = sub_23F61CA9C();
    __break(1u);
  }
  else
  {
    v82 = v191;
    v83 = v189;
    v66 = v154;
    v85 = v179;
    v84 = v180;
    v67 = v181;
    v80 = v182;
LABEL_28:
    swift_bridgeObjectRelease();
    v89 = (char *)*((_QWORD *)v63 + 2);
    v90 = v63;
    v91 = (uint64_t *)v188;
    v173 = v89;
    if (v89)
    {
      v172 = &v90[(*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80)];
      v171 = *(char **)(v67 + 72);
      v170 = *(_QWORD **)(v67 + 16);
      LODWORD(v169) = *MEMORY[0x24BEB9A58];
      LODWORD(v186) = *MEMORY[0x24BEB9F78];
      v167 = v90;
      swift_retain();
      v92 = 0;
      v175 = MEMORY[0x24BEE4AF8];
      while (1)
      {
        v174 = v92;
        ((void (*)(char *, char *, uint64_t))v170)(v80, &v172[(_QWORD)v171 * v92], v185);
        v93 = v178;
        sub_23F61BA7C();
        v95 = v176;
        v94 = v177;
        v96 = v93;
        v97 = v166;
        (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v166, v96, v177);
        v98 = (*(uint64_t (**)(char *, uint64_t))(v95 + 88))(v97, v94);
        if (v98 == (_DWORD)v169)
        {
          (*(void (**)(char *, uint64_t))(v95 + 96))(v97, v94);
          v99 = swift_projectBox();
          v100 = *(int *)(v84 + 48);
          v101 = v184;
          (*(void (**)(char *, uint64_t, uint64_t))(v183 + 16))(v85, v99, v184);
          v102 = *(_QWORD *)(v99 + v100);
          *(_QWORD *)&v85[v100] = v102;
          sub_23F617BA0();
          ((void (*)(char *, uint64_t))v162)(v85, v101);
          swift_release();
          v103 = v102;
          v104 = *(_QWORD *)(v102 + 16);
          if (v104)
          {
            v105 = v103 + ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80));
            v168 = v103;
            sub_23F617BA0();
            v187 = *(_QWORD *)(v82 + 72);
            v106 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 16);
            v107 = MEMORY[0x24BEE4AF8];
            while (1)
            {
              v106(v83, v105, v66);
              v106((char *)v91, (uint64_t)v83, v66);
              v108 = (*(uint64_t (**)(uint64_t *, uint64_t))(v82 + 88))(v91, v66);
              if (v108 == (_DWORD)v186)
              {
                (*(void (**)(uint64_t *, uint64_t))(v82 + 96))(v91, v66);
                v109 = *v91;
                (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v66);
              }
              else
              {
                v110 = *(void (**)(uint64_t *, uint64_t))(v82 + 8);
                v110(v91, v66);
                v109 = MEMORY[0x24BEE4AF8];
                v110((uint64_t *)v83, v66);
              }
              v111 = *(_QWORD *)(v109 + 16);
              v112 = *(_QWORD *)(v107 + 16);
              if (__OFADD__(v112, v111))
                break;
              if (!swift_isUniquelyReferenced_nonNull_native()
                || v112 + v111 > *(_QWORD *)(v107 + 24) >> 1)
              {
                sub_23F377328();
                v107 = v113;
              }
              if (*(_QWORD *)(v109 + 16))
              {
                v114 = *(_QWORD *)(v107 + 16);
                v115 = (*(_QWORD *)(v107 + 24) >> 1) - v114;
                v116 = sub_23F6191A8();
                if (v115 < v111)
                  goto LABEL_77;
                v117 = *(_QWORD *)(v116 - 8);
                v118 = (*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
                v119 = *(_QWORD *)(v117 + 72);
                v120 = v107 + v118 + v119 * v114;
                v121 = v109 + v118;
                v122 = v119 * v111;
                v123 = v120 + v122;
                v124 = v121 + v122;
                if (v121 < v123 && v120 < v124)
                  goto LABEL_84;
                swift_arrayInitWithCopy();
                if (v111)
                {
                  v126 = *(_QWORD *)(v107 + 16);
                  v127 = __OFADD__(v126, v111);
                  v128 = v126 + v111;
                  if (v127)
                    goto LABEL_78;
                  *(_QWORD *)(v107 + 16) = v128;
                }
              }
              else if (v111)
              {
                goto LABEL_76;
              }
              swift_bridgeObjectRelease();
              v91 = (uint64_t *)v188;
              v105 += v187;
              --v104;
              v82 = v191;
              v83 = v189;
              if (!v104)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_55;
              }
            }
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            __break(1u);
            goto LABEL_79;
          }
          swift_bridgeObjectRelease();
          v107 = MEMORY[0x24BEE4AF8];
LABEL_55:
          v129 = v176;
          v94 = v177;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v95 + 8))(v97, v94);
          v129 = v95;
          v107 = MEMORY[0x24BEE4AF8];
        }
        (*(void (**)(char *, uint64_t))(v129 + 8))(v178, v94);
        (*(void (**)(char *, uint64_t))(v181 + 8))(v182, v185);
        v130 = *(_QWORD *)(v107 + 16);
        v131 = *(_QWORD *)(v175 + 16);
        if (__OFADD__(v131, v130))
          goto LABEL_80;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v133 = v175;
        if (!isUniquelyReferenced_nonNull_native || v131 + v130 > *(_QWORD *)(v175 + 24) >> 1)
        {
          sub_23F377328();
          v133 = v134;
        }
        v85 = v179;
        v84 = v180;
        v135 = *(_QWORD *)(v107 + 16);
        v175 = v133;
        if (v135)
        {
          v136 = *(_QWORD *)(v133 + 16);
          v137 = (*(_QWORD *)(v133 + 24) >> 1) - v136;
          v138 = sub_23F6191A8();
          if (v137 < v130)
            goto LABEL_82;
          v139 = *(_QWORD *)(v138 - 8);
          v140 = (*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
          v141 = *(_QWORD *)(v139 + 72);
          v142 = v133 + v140 + v141 * v136;
          v143 = v107 + v140;
          v144 = v141 * v130;
          v145 = v142 + v144;
          v146 = v143 + v144;
          v147 = v143 >= v145 || v142 >= v146;
          v85 = v179;
          if (!v147)
            goto LABEL_84;
          swift_arrayInitWithCopy();
          v84 = v180;
          if (v130)
          {
            v148 = *(_QWORD *)(v175 + 16);
            v127 = __OFADD__(v148, v130);
            v149 = v148 + v130;
            if (v127)
              goto LABEL_83;
            *(_QWORD *)(v175 + 16) = v149;
          }
        }
        else if (v130)
        {
          goto LABEL_81;
        }
        swift_bridgeObjectRelease();
        v92 = v174 + 1;
        v80 = v182;
        if ((char *)(v174 + 1) == v173)
        {
          swift_release_n();
          goto LABEL_74;
        }
      }
    }
    swift_release();
    v175 = MEMORY[0x24BEE4AF8];
LABEL_74:
    (*(void (**)(char *, uint64_t))(v151 + 8))(v152, v153);
    return v175;
  }
  return result;
}

uint64_t sub_23F5DA2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  NSObject *v77;
  uint64_t *v78;
  char *v79;
  int v80;
  uint64_t v81;
  void (*v82)(uint64_t *, uint64_t);
  int64_t v83;
  Class v84;
  NSObject *v85;
  Class v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  Class v91;
  BOOL v92;
  objc_class *v93;
  Class isa;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v102;
  char *v103;
  char *v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  os_log_type_t v114;
  uint8_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t, uint64_t);
  char *v126;
  unint64_t v127;
  char *v128;
  char *v129;
  uint64_t result;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;

  v135 = a1;
  v3 = sub_23F35D2E8(&qword_256E79328);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6191A8();
  v164 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v142 = (char *)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v140 = (char *)&v131 - v9;
  v133 = sub_23F619E98();
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133);
  v139 = (char *)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v11);
  v134 = (char *)&v131 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F61BADC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v167 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v169 = (char *)&v131 - v17;
  v144 = sub_23F35D2E8(&qword_256E79320);
  MEMORY[0x24BDAC7A8](v144);
  v143 = (char *)&v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F61B95C();
  v156 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v147 = (char *)&v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v160 = (char *)&v131 - v22;
  v146 = sub_23F61B9EC();
  v145 = *(_QWORD *)(v146 - 8);
  v23 = MEMORY[0x24BDAC7A8](v146);
  v137 = (char *)&v131 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v136 = (char *)&v131 - v25;
  v26 = sub_23F61BA94();
  v154 = *(_QWORD *)(v26 - 8);
  v155 = v26;
  v27 = MEMORY[0x24BDAC7A8](v26);
  v153 = (char *)&v131 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v152 = (char *)&v131 - v29;
  v30 = sub_23F61BAAC();
  v157 = *(_QWORD *)(v30 - 8);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v159 = (char *)&v131 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v151 = (char *)&v131 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v166 = (char *)&v131 - v35;
  v138 = a2;
  v36 = sub_23F61BA58();
  v37 = v36;
  v38 = MEMORY[0x24BEE4AF8];
  v171 = MEMORY[0x24BEE4AF8];
  v39 = *(_QWORD *)(v36 + 16);
  v141 = v5;
  v165 = v6;
  v158 = v19;
  v163 = v30;
  v150 = v39;
  v168 = v14;
  if (v39)
  {
    v40 = 0;
    v148 = *MEMORY[0x24BEB9F40];
    v41 = v157;
    v42 = v166;
    v149 = v36;
    v43 = v152;
    do
    {
      if (v40 >= *(_QWORD *)(v37 + 16))
        goto LABEL_84;
      v44 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      v161 = *(_QWORD *)(v41 + 72);
      v162 = v44;
      (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v42, v37 + v44 + v161 * v40, v30);
      v45 = v41;
      sub_23F61BAA0();
      v47 = v153;
      v46 = v154;
      v48 = v155;
      (*(void (**)(char *, _QWORD, uint64_t))(v154 + 104))(v153, v148, v155);
      v49 = sub_23F61BA88();
      v50 = v30;
      v51 = *(void (**)(char *, uint64_t))(v46 + 8);
      v51(v47, v48);
      v51(v43, v48);
      if ((v49 & 1) != 0)
      {
        v52 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
        v52(v151, v166, v50);
        v53 = v171;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37B724();
          v53 = v171;
        }
        v37 = v149;
        v55 = v161;
        v54 = v162;
        v56 = *(_QWORD *)(v53 + 16);
        if (v56 >= *(_QWORD *)(v53 + 24) >> 1)
        {
          sub_23F37B724();
          v53 = v171;
        }
        *(_QWORD *)(v53 + 16) = v56 + 1;
        v57 = v53 + v54 + v56 * v55;
        v58 = v163;
        v52((char *)v57, v151, v163);
        v30 = v58;
        v171 = v53;
        v6 = v165;
        v42 = v166;
        v41 = v157;
        v19 = v158;
      }
      else
      {
        v42 = v166;
        (*(void (**)(char *, uint64_t))(v45 + 8))(v166, v50);
        v30 = v50;
        v6 = v165;
        v41 = v45;
        v19 = v158;
        v37 = v149;
      }
      ++v40;
    }
    while (v150 != v40);
    v38 = v171;
  }
  else
  {
    v41 = v157;
  }
  swift_bridgeObjectRelease();
  v59 = *(_QWORD *)(v38 + 16);
  if (!v59)
  {
    swift_release();
    v62 = (char *)MEMORY[0x24BEE4AF8];
    goto LABEL_60;
  }
  v161 = v38 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  v60 = *(_QWORD *)(v41 + 72);
  v154 = *(_QWORD *)(v41 + 16);
  v155 = v60;
  LODWORD(v153) = *MEMORY[0x24BEB9A58];
  LODWORD(v166) = *MEMORY[0x24BEB9F78];
  v149 = v38;
  swift_retain();
  v61 = 0;
  v62 = (char *)MEMORY[0x24BEE4AF8];
  v150 = v59;
  while (1)
  {
    v162 = v61;
    ((void (*)(char *, unint64_t, uint64_t))v154)(v159, v161 + v155 * v61, v30);
    v63 = v160;
    sub_23F61BA7C();
    v64 = v156;
    v65 = v147;
    (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v147, v63, v19);
    v66 = (*(uint64_t (**)(char *, uint64_t))(v64 + 88))(v65, v19);
    if (v66 == (_DWORD)v153)
      break;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v19);
    v77 = MEMORY[0x24BEE4AF8];
LABEL_42:
    (*(void (**)(char *, uint64_t))(v64 + 8))(v160, v19);
    (*(void (**)(char *, uint64_t))(v157 + 8))(v159, v163);
    isa = v77[2].isa;
    v95 = *((_QWORD *)v62 + 2);
    if (__OFADD__(v95, isa))
      goto LABEL_85;
    if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t)isa + v95 > *((_QWORD *)v62 + 3) >> 1)
    {
      sub_23F377328();
      v62 = v96;
    }
    if (v77[2].isa)
    {
      v97 = *((_QWORD *)v62 + 2);
      if ((*((_QWORD *)v62 + 3) >> 1) - v97 < (uint64_t)isa)
        goto LABEL_87;
      v98 = (*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80);
      v99 = *(_QWORD *)(v164 + 72);
      v100 = (unint64_t)&v62[v98 + v99 * v97];
      if ((unint64_t)v77 + v98 < v100 + v99 * (_QWORD)isa
        && v100 < (unint64_t)v77 + v98 + v99 * (_QWORD)isa)
      {
        goto LABEL_89;
      }
      swift_arrayInitWithCopy();
      if (isa)
      {
        v102 = *((_QWORD *)v62 + 2);
        v92 = __OFADD__(v102, isa);
        v103 = (char *)isa + v102;
        if (v92)
          goto LABEL_88;
        *((_QWORD *)v62 + 2) = v103;
      }
    }
    else if (isa)
    {
      goto LABEL_86;
    }
    swift_bridgeObjectRelease();
    v30 = v163;
    v61 = v162 + 1;
    if (v162 + 1 == v59)
    {
      swift_release_n();
LABEL_60:
      v104 = v136;
      sub_23F61BA4C();
      v105 = (_QWORD *)swift_allocObject();
      v105[2] = 0xD000000000000028;
      v105[3] = 0x800000023F63BD10;
      v105[4] = 0xD000000000000015;
      v105[5] = 0x800000023F63BD40;
      v106 = v137;
      *(_QWORD *)v137 = v105;
      v107 = v145;
      v108 = v146;
      (*(void (**)(char *, _QWORD, uint64_t))(v145 + 104))(v106, *MEMORY[0x24BEB9CF8], v146);
      v109 = sub_23F61B9D4();
      v110 = *(void (**)(char *, uint64_t))(v107 + 8);
      v110(v106, v108);
      v110(v104, v108);
      v13 = (uint64_t)v139;
      if ((v109 & 1) != 0)
      {
        v111 = sub_23F61B770();
        v112 = (uint64_t)v134;
        sub_23F3684B0(0xD000000000000021, 0x800000023F638AA0, v111);
        swift_bridgeObjectRelease();
        v113 = sub_23F61B92C();
        if (sub_23F36195C(v112, 1, v113) == 1)
        {
          sub_23F3CFCB0(v112, &qword_256E701F0);
        }
        else
        {
          v75 = sub_23F5DB1BC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 8))(v112, v113);
          if (v75)
          {
            swift_bridgeObjectRelease();
            sub_23F619094();
            swift_bridgeObjectRetain_n();
            v77 = sub_23F619E8C();
            v114 = sub_23F61C640();
            if (os_log_type_enabled(v77, v114))
            {
              v115 = (uint8_t *)swift_slowAlloc();
              v116 = swift_slowAlloc();
              v171 = v116;
              *(_DWORD *)v115 = 136315138;
              v117 = sub_23F617BA0();
              v118 = MEMORY[0x24266F8F8](v117, MEMORY[0x24BEE0D00]);
              v120 = v119;
              swift_bridgeObjectRelease();
              sub_23F37AE00(v118, v120, &v171);
              v170 = v121;
              sub_23F61C790();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_23F35A000, v77, v114, "Retrieved available export identifiers for spotlight entity: %s", v115, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x242670B70](v116, -1, -1);
              MEMORY[0x242670B70](v115, -1, -1);

              (*(void (**)(char *, uint64_t))(v132 + 8))(v139, v133);
            }
            else
            {
LABEL_68:

              swift_bridgeObjectRelease_n();
              (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v13, v133);
            }
            v122 = *(_QWORD *)(v75 + 16);
            if (v122)
            {
              sub_23F617BA0();
              v123 = v75 + 40;
              v62 = (char *)MEMORY[0x24BEE4AF8];
              v124 = (uint64_t)v141;
              do
              {
                sub_23F617BA0();
                sub_23F6191B4();
                if (sub_23F36195C(v124, 1, v6) == 1)
                {
                  sub_23F3CFCB0(v124, &qword_256E79328);
                }
                else
                {
                  v125 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 32);
                  v126 = v140;
                  v125(v140, v124, v6);
                  v125(v142, (uint64_t)v126, v6);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_23F377328();
                    v62 = v128;
                  }
                  v127 = *((_QWORD *)v62 + 2);
                  if (v127 >= *((_QWORD *)v62 + 3) >> 1)
                  {
                    sub_23F377328();
                    v62 = v129;
                  }
                  *((_QWORD *)v62 + 2) = v127 + 1;
                  v125(&v62[((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80))+ *(_QWORD *)(v164 + 72) * v127], (uint64_t)v142, v6);
                  v124 = (uint64_t)v141;
                }
                v123 += 16;
                --v122;
              }
              while (v122);
              swift_bridgeObjectRelease_n();
            }
            else
            {
              swift_bridgeObjectRelease();
              return MEMORY[0x24BEE4AF8];
            }
          }
        }
      }
      return (uint64_t)v62;
    }
  }
  v152 = v62;
  (*(void (**)(char *, uint64_t))(v64 + 96))(v65, v19);
  v67 = swift_projectBox();
  v68 = *(int *)(v144 + 48);
  v69 = v145;
  v70 = v143;
  v71 = v146;
  (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v143, v67, v146);
  v72 = *(char **)(v67 + v68);
  *(_QWORD *)&v70[v68] = v72;
  sub_23F617BA0();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
  swift_release();
  v73 = *((_QWORD *)v72 + 2);
  if (!v73)
  {
    swift_bridgeObjectRelease();
    v77 = MEMORY[0x24BEE4AF8];
LABEL_41:
    v19 = v158;
    v64 = v156;
    v62 = v152;
    v59 = v150;
    goto LABEL_42;
  }
  v74 = v168;
  v75 = (uint64_t)&v72[(*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80)];
  v151 = v72;
  sub_23F617BA0();
  v6 = *(_QWORD *)(v74 + 72);
  v76 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
  v77 = MEMORY[0x24BEE4AF8];
  v78 = (uint64_t *)v167;
  while (1)
  {
    v79 = v169;
    v76(v169, v75, v13);
    v76((char *)v78, (uint64_t)v79, v13);
    v80 = (*(uint64_t (**)(uint64_t *, uint64_t))(v74 + 88))(v78, v13);
    if (v80 == (_DWORD)v166)
    {
      (*(void (**)(uint64_t *, uint64_t))(v74 + 96))(v78, v13);
      v81 = *v78;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v169, v13);
    }
    else
    {
      v82 = *(void (**)(uint64_t *, uint64_t))(v74 + 8);
      v82(v78, v13);
      v81 = MEMORY[0x24BEE4AF8];
      v82((uint64_t *)v169, v13);
    }
    v83 = *(_QWORD *)(v81 + 16);
    v84 = v77[2].isa;
    if (__OFADD__(v84, v83))
    {
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (!swift_isUniquelyReferenced_nonNull_native()
      || (uint64_t)v84 + v83 > (int64_t)((unint64_t)v77[3].isa >> 1))
    {
      sub_23F377328();
      v77 = v85;
    }
    v78 = (uint64_t *)v167;
    v74 = v168;
    if (*(_QWORD *)(v81 + 16))
      break;
    if (v83)
      goto LABEL_67;
LABEL_37:
    swift_bridgeObjectRelease();
    v75 += v6;
    if (!--v73)
    {
      swift_bridgeObjectRelease_n();
      v6 = v165;
      goto LABEL_41;
    }
  }
  v86 = v77[2].isa;
  if ((int64_t)(((unint64_t)v77[3].isa >> 1) - (_QWORD)v86) >= v83)
  {
    v87 = (*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80);
    v88 = *(_QWORD *)(v164 + 72);
    v89 = (char *)v77 + v87 + v88 * (_QWORD)v86;
    if (v81 + v87 < (unint64_t)&v89[v88 * v83] && (unint64_t)v89 < v81 + v87 + v88 * v83)
      goto LABEL_89;
    swift_arrayInitWithCopy();
    if (v83)
    {
      v91 = v77[2].isa;
      v92 = __OFADD__(v91, v83);
      v93 = (Class)((char *)v91 + v83);
      if (v92)
        goto LABEL_83;
      v77[2].isa = v93;
    }
    goto LABEL_37;
  }
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F5DB1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t (*v25)(char *, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t (*v51)(char *, uint64_t);
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;

  v0 = sub_23F61B8A8();
  v54 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v53 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_23F61B92C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v42 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v42 - v10;
  v12 = sub_23F61B6E0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v16(v11, v57, v2);
  v47 = v3;
  v17 = *(uint64_t (**)(char *, uint64_t))(v3 + 88);
  if (v17(v11, v2) == *MEMORY[0x24BEB9988])
  {
    v51 = v17;
    v52 = v16;
    v50 = *(void (**)(char *, uint64_t))(v47 + 96);
    v50(v11, v2);
    v18 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v18, v12);
    swift_release();
    v19 = sub_23F61B6D4();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v43 = v15;
      v44 = v13;
      v45 = v12;
      v21 = v47;
      v22 = v19 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
      v23 = *(_QWORD *)(v47 + 72);
      v56 = *MEMORY[0x24BEB9A00];
      v48 = *MEMORY[0x24BEB9958];
      v42 = v19;
      sub_23F617BA0();
      v55 = MEMORY[0x24BEE4AF8];
      v57 = v0;
      v25 = v51;
      v24 = (void (*)(char *, unint64_t, uint64_t))v52;
      v49 = v23;
      do
      {
        v24(v9, v22, v2);
        v24(v6, (unint64_t)v9, v2);
        v26 = v25(v6, v2);
        if (v26 == v56)
        {
          v27 = v21;
          v50(v6, v2);
          v28 = swift_projectBox();
          v29 = v53;
          v30 = v54;
          (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v53, v28, v0);
          v31 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v29, v0);
          if (v31 == v48)
          {
            (*(void (**)(char *, uint64_t))(v30 + 96))(v29, v0);
            v32 = *(_QWORD *)v29;
            v46 = *((_QWORD *)v29 + 1);
            v47 = v32;
            swift_release();
            v21 = v27;
            (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v2);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            {
              v25 = v51;
              v24 = (void (*)(char *, unint64_t, uint64_t))v52;
              v33 = v55;
            }
            else
            {
              sub_23F376C88();
              v33 = v39;
              v25 = v51;
              v24 = (void (*)(char *, unint64_t, uint64_t))v52;
            }
            v34 = *(_QWORD *)(v33 + 16);
            if (v34 >= *(_QWORD *)(v33 + 24) >> 1)
            {
              sub_23F376C88();
              v33 = v40;
            }
            *(_QWORD *)(v33 + 16) = v34 + 1;
            v55 = v33;
            v35 = v33 + 16 * v34;
            v36 = v46;
            *(_QWORD *)(v35 + 32) = v47;
            *(_QWORD *)(v35 + 40) = v36;
            v23 = v49;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v0);
            swift_release();
            v21 = v27;
            v38 = *(void (**)(char *, uint64_t))(v27 + 8);
            v25 = v51;
            v24 = (void (*)(char *, unint64_t, uint64_t))v52;
            v23 = v49;
            v38(v9, v2);
          }
        }
        else
        {
          v37 = *(void (**)(char *, uint64_t))(v21 + 8);
          v37(v6, v2);
          v37(v9, v2);
        }
        v22 += v23;
        --v20;
        v0 = v57;
      }
      while (v20);
      swift_bridgeObjectRelease_n();
      v13 = v44;
      v12 = v45;
      v15 = v43;
    }
    else
    {
      swift_bridgeObjectRelease();
      v55 = MEMORY[0x24BEE4AF8];
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return v55;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v2);
    return 0;
  }
}

uint64_t sub_23F5DB5D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F5DB600()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 400) + 8))(*(_QWORD *)(v0 - 392), *(_QWORD *)(v0 - 384));
}

uint64_t sub_23F5DB620(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F5DB628(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 136))(a1, v1);
}

uint64_t sub_23F5DB634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F5DB644()
{
  return type metadata accessor for StepResolution();
}

uint64_t sub_23F5DB64C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t sub_23F5DB658()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5DB660(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t sub_23F5DB66C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v4 = sub_23F384048();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = sub_23F366654();
  v3[10] = sub_23F3666CC();
  v5 = sub_23F61AF3C();
  v3[11] = v5;
  v3[12] = *(_QWORD *)(v5 - 8);
  v3[13] = sub_23F366578();
  v6 = sub_23F61AFA8();
  v3[14] = v6;
  v3[15] = *(_QWORD *)(v6 - 8);
  v3[16] = sub_23F366578();
  v7 = sub_23F61B7C4();
  v3[17] = v7;
  v3[18] = *(_QWORD *)(v7 - 8);
  v3[19] = sub_23F366654();
  v3[20] = sub_23F3666CC();
  v8 = sub_23F619E98();
  v3[21] = v8;
  v3[22] = *(_QWORD *)(v8 - 8);
  v3[23] = sub_23F366654();
  v3[24] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5DB73C()
{
  _QWORD *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;

  v1 = v0[24];
  v2 = v0[20];
  v3 = v0[17];
  v4 = v0[18];
  v5 = v0[5];
  sub_23F619088();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v2, v5, v3);
  sub_23F619E8C();
  v7 = sub_23F3B1A04();
  if (sub_23F366874(v7))
  {
    v8 = v0[20];
    v9 = v0[19];
    v28 = v0[18];
    v29 = v6;
    v10 = v0[17];
    v11 = (uint8_t *)sub_23F366668();
    v30 = sub_23F366668();
    *(_DWORD *)v11 = 136315138;
    v29(v9, v8, v10);
    v12 = sub_23F61C16C();
    sub_23F37AE00(v12, v13, &v30);
    sub_23F5DCF6C(v14);
    sub_23F61C790();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v8, v10);
    sub_23F38485C(&dword_23F35A000, v1, (os_log_type_t)v5, "Attempting to resolve deferred value: %s", v11);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v15 = v0[22];
  (*(void (**)(_QWORD, _QWORD))(v0[18] + 8))(v0[20], v0[17]);

  v16 = *(void (**)(uint64_t))(v15 + 8);
  v17 = sub_23F384AB4();
  v16(v17);
  v0[25] = v16;
  v18 = v0[19];
  v19 = v0[17];
  v20 = v0[5];
  sub_23F616FDC();
  v0[26] = v21;
  v6(v18, v20, v19);
  sub_23F61AF30();
  swift_retain();
  v22 = (_QWORD *)swift_task_alloc();
  v0[27] = v22;
  sub_23F5DCF10(&qword_256E7E610, v23, MEMORY[0x24BE56468]);
  sub_23F5DCF10(&qword_256E7E618, v24, MEMORY[0x24BE56460]);
  sub_23F5DCF20(&qword_256E7E620, v25, MEMORY[0x24BE564F0]);
  sub_23F5DCF20(&qword_256E7E628, v26, MEMORY[0x24BE564E8]);
  *v22 = v0;
  v22[1] = sub_23F5DB9E0;
  sub_23F5DCF58(v0[16]);
  return sub_23F5DCE2C();
}

uint64_t sub_23F5DB9E0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_23F3B1998();
  v4 = v2[12];
  v3 = v2[13];
  v5 = v2[11];
  *v6 = *v1;
  v2[28] = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_release();
  sub_23F362D18();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F5DBA6C()
{
  _QWORD *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0[23];
  v2 = v0[10];
  v3 = v0[7];
  v4 = v0[8];
  v5 = v0[4];
  sub_23F61AF90();
  sub_23F619088();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  v6 = v1;
  sub_23F619E8C();
  v7 = sub_23F3B1A04();
  if (sub_23F482920(v7))
  {
    v8 = v0[9];
    v9 = v0[10];
    v10 = v0[7];
    v24 = v0[8];
    v11 = (uint8_t *)sub_23F366668();
    v26 = sub_23F366668();
    *(_DWORD *)v11 = 136315138;
    sub_23F5DCF18(v8, v9);
    v12 = sub_23F61C16C();
    sub_23F37AE00(v12, v13, &v26);
    v0[2] = v14;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v9, v10);
    sub_23F38485C(&dword_23F35A000, v6, (os_log_type_t)v4, "Resolved value: %s", v11);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v15 = (void (*)(uint64_t))v0[25];
  v16 = v0[15];
  v25 = v0[16];
  v17 = v0[14];
  v18 = v0[10];
  v20 = v0[7];
  v19 = v0[8];

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  v21 = sub_23F384AB4();
  v15(v21);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v25, v17);
  sub_23F5DCE70();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  v22 = (uint64_t (*)(void))sub_23F384760();
  return v22();
}

uint64_t sub_23F5DBC94()
{
  uint64_t v0;

  sub_23F5DCE70();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F5DBCF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_23F61B7C4();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v5 = sub_23F61B92C();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F5DBD94()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F56E590();
  sub_23F5DCEC0();
  sub_23F61AF24();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_23F5DBDF8;
  sub_23F5DCEF8();
  return sub_23F61AFFC();
}

uint64_t sub_23F5DBDF8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23F3B1998();
  v3 = *(_QWORD *)(v2 + 48);
  *v4 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F5DBE64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v1 = v0[9];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 16))(v0[10], v0[11], v0[8]);
  sub_23F61AF9C();
  sub_23F3E26DC(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666EC();
  v2 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F435B58(v2);
}

uint64_t sub_23F5DBEDC()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23F362CC8();
  sub_23F3666DC();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5DBF18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v3[8] = sub_23F35D2E8(&qword_256E701F0);
  v3[9] = sub_23F366654();
  v3[10] = sub_23F3666CC();
  v3[11] = sub_23F3666CC();
  v4 = sub_23F61AF18();
  v3[12] = v4;
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = sub_23F366578();
  v5 = sub_23F61AF84();
  v3[15] = v5;
  v3[16] = *(_QWORD *)(v5 - 8);
  v3[17] = sub_23F366578();
  v6 = sub_23F619E98();
  v3[18] = v6;
  v3[19] = *(_QWORD *)(v6 - 8);
  v3[20] = sub_23F366654();
  v3[21] = sub_23F3666CC();
  v3[22] = sub_23F3666CC();
  v7 = sub_23F384048();
  v3[23] = v7;
  v3[24] = *(_QWORD *)(v7 - 8);
  v3[25] = sub_23F366654();
  v3[26] = sub_23F3666CC();
  v3[27] = sub_23F3666CC();
  v3[28] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5DC008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  sub_23F5DCF18(v1, *(_QWORD *)(v0 + 48));
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v5 == *MEMORY[0x24BEB99E0] || v5 == *MEMORY[0x24BEB99B0])
  {
    v7 = *(_QWORD *)(v0 + 216);
    v8 = *(_QWORD *)(v0 + 184);
    v9 = *(NSObject **)(v0 + 176);
    v10 = *(_QWORD *)(v0 + 48);
    sub_23F3E26DC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 192) + 96));
    swift_release();
    sub_23F619088();
    v4(v7, v10, v8);
    v11 = v9;
    sub_23F619E8C();
    v12 = sub_23F3B1A04();
    v13 = sub_23F366874(v12);
    v14 = *(_QWORD *)(v0 + 216);
    if (v13)
    {
      v15 = *(_QWORD *)(v0 + 184);
      v65 = *(_QWORD *)(v0 + 192);
      v16 = (uint8_t *)sub_23F366668();
      sub_23F366668();
      v17 = sub_23F5DCE88(4.8149e-34);
      v4(v17, v14, v15);
      v18 = sub_23F5DCF40();
      sub_23F5DCEEC(v18, v19, v20, v21, v22, v23, v24, v25);
      *(_QWORD *)(v0 + 32) = v26;
      sub_23F5DCF34();
      sub_23F362D18();
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v14, v15);
      sub_23F38485C(&dword_23F35A000, v9, (os_log_type_t)v9, "Attempting to hydrate entity %s", v16);
      sub_23F3B17D4();
      sub_23F366530();
    }
    v46 = *(_QWORD *)(v0 + 152);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 184));

    v47 = *(void (**)(uint64_t))(v46 + 8);
    v48 = sub_23F384AB4();
    v47(v48);
    *(_QWORD *)(v0 + 232) = v47;
    v49 = *(_QWORD *)(v0 + 208);
    v50 = *(_QWORD *)(v0 + 184);
    v51 = *(_QWORD *)(v0 + 48);
    sub_23F616FDC();
    *(_QWORD *)(v0 + 240) = v52;
    v4(v49, v51, v50);
    sub_23F61AF0C();
    swift_retain();
    v53 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v53;
    sub_23F5DCF10(&qword_256E7E5E0, v54, MEMORY[0x24BE56440]);
    sub_23F5DCF10(&qword_256E7E5E8, v55, MEMORY[0x24BE56438]);
    sub_23F5DCF20(&qword_256E7E5F0, v56, MEMORY[0x24BE564C8]);
    sub_23F5DCF20(&qword_256E7E5F8, v57, MEMORY[0x24BE564C0]);
    *v53 = v0;
    v53[1] = sub_23F5DC4B4;
    sub_23F5DCF58(*(_QWORD *)(v0 + 136));
    return sub_23F5DCE2C();
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 200);
    v28 = *(NSObject **)(v0 + 160);
    v29 = *(_QWORD *)(v0 + 48);
    sub_23F619088();
    sub_23F5DCF18(v27, v29);
    v30 = v28;
    sub_23F619E8C();
    v31 = sub_23F3B1A04();
    if (sub_23F366874(v31))
    {
      v33 = *(_QWORD *)(v0 + 200);
      v34 = *(_QWORD *)(v0 + 184);
      v66 = *(_QWORD *)(v0 + 192);
      v35 = (uint8_t *)sub_23F366668();
      sub_23F366668();
      v36 = sub_23F5DCE88(4.8149e-34);
      v4(v36, v33, v34);
      v37 = sub_23F5DCF40();
      sub_23F5DCEEC(v37, v38, v39, v40, v41, v42, v43, v44);
      *(_QWORD *)(v0 + 16) = v45;
      sub_23F5DCF34();
      sub_23F362D18();
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v33, v34);
      sub_23F38485C(&dword_23F35A000, v30, (os_log_type_t)v29, "Skipping hydration of TypedValue %s", v35);
      sub_23F3B17D4();
      sub_23F366530();
    }
    v59 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 192) + 8);
    v59(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));

    v60 = sub_23F384AB4();
    v61(v60);
    v62 = *(_QWORD *)(v0 + 224);
    v63 = *(_QWORD *)(v0 + 184);
    v64 = *(_QWORD *)(v0 + 40);
    sub_23F5DCF18(v64, *(_QWORD *)(v0 + 48));
    sub_23F36196C(v64, 0, 1, v63);
    v59(v62, v63);
    sub_23F5DCE48();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23F5DC4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F56E590();
  a15 = v17;
  a16 = v18;
  a14 = v16;
  sub_23F3B1998();
  v20 = *(_QWORD *)(v19 + 104);
  sub_23F50746C(&a14);
  swift_release();
  swift_bridgeObjectRelease();
  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
  sub_23F36679C();
  return sub_23F383F08();
}

uint64_t sub_23F5DC518()
{
  uint64_t v0;
  os_log_type_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = *(NSObject **)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  sub_23F61AF6C();
  sub_23F619088();
  sub_23F3EE834(v3, v4);
  v5 = v2;
  sub_23F619E8C();
  v6 = sub_23F3B1A04();
  if (sub_23F482920(v6))
  {
    v26 = *(_QWORD *)(v0 + 144);
    v27 = *(_QWORD *)(v0 + 168);
    v30 = *(_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 136);
    v28 = *(_QWORD *)(v0 + 128);
    v29 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 80);
    v9 = (uint8_t *)sub_23F366668();
    v32 = sub_23F366668();
    *(_DWORD *)v9 = 136315138;
    sub_23F3EE834(v8, v7);
    sub_23F384AB4();
    v10 = sub_23F61C16C();
    sub_23F5DCEEC(v10, v11, v12, v13, v14, v15, v16, v17, v26, v27, v28, v29, v30, v31, v32);
    sub_23F5DCF6C(v18);
    sub_23F61C790();
    sub_23F362D18();
    sub_23F4262FC(v8);
    sub_23F38485C(&dword_23F35A000, v5, v1, "Hydrated entity: %s", v9);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v19 = *(void (**)(uint64_t))(v0 + 232);
  v20 = *(_QWORD *)(v0 + 136);
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 128);
  v23 = *(_QWORD *)(v0 + 80);

  sub_23F4262FC(v23);
  v24 = sub_23F384AB4();
  v19(v24);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  sub_23F5DCD90(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 40));
  sub_23F5DCE48();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F5DC718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_23F61B92C();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v5 = sub_23F61B914();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E701F0);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F5DC7D8()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F56E590();
  sub_23F5DCEC0();
  sub_23F61AF00();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_23F5DC83C;
  sub_23F5DCEF8();
  return sub_23F61AFF0();
}

uint64_t sub_23F5DC83C()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F56E590();
  v10 = v2;
  v11 = v3;
  v9 = v1;
  v9 = (_QWORD *)*v1;
  v4 = v9;
  v5 = *v1;
  sub_23F50746C(&v9);
  v6 = v4[6];
  if (v0)
  {

    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    sub_23F36679C();
    return sub_23F383F08();
  }
  else
  {
    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    v8 = (_QWORD *)swift_task_alloc();
    v4[14] = v8;
    *v8 = v5;
    v8[1] = sub_23F5DC8F4;
    return sub_23F61B908();
  }
}

uint64_t sub_23F5DC8F4()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = *v1;
  v2 = v5;
  sub_23F50746C(&v5);
  v3 = *(_QWORD *)(v2 + 72);
  if (v0)

  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F5DC970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F56E590();
  v1 = sub_23F5DCEA4();
  sub_23F36196C(v1, 0, 1, v2);
  sub_23F5DCF28();
  sub_23F5DCF80();
  sub_23F4262FC(v0);
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  v3 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F534684(v3);
}

uint64_t sub_23F5DC9C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F56E590();
  v1 = sub_23F5DCEA4();
  sub_23F36196C(v1, 1, 1, v2);
  sub_23F5DCF28();
  sub_23F5DCF80();
  sub_23F4262FC(v0);
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  v3 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F534684(v3);
}

uint64_t sub_23F5DCA18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime27ToolExecutionSessionWrapper_interactionId;
  v2 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23F5DCA70()
{
  return type metadata accessor for ToolExecutionSessionWrapper();
}

uint64_t type metadata accessor for ToolExecutionSessionWrapper()
{
  uint64_t result;

  result = qword_256E7E500;
  if (!qword_256E7E500)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F5DCAB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F617000();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StubToolExecutionSessionWrapper()
{
  return &type metadata for StubToolExecutionSessionWrapper;
}

uint64_t sub_23F5DCB38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23F3609AC;
  return sub_23F5DB66C(a1, a2);
}

uint64_t sub_23F5DCB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23F3E013C;
  return sub_23F5DBF18(a1, a2);
}

uint64_t sub_23F5DCC00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F61B7C4();
  v3 = swift_allocBox();
  sub_23F5DCF4C(v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  *a1 = v3;
  v5 = *MEMORY[0x24BEB99E8];
  v6 = sub_23F384048();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(a1, v5, v6);
}

uint64_t sub_23F5DCC74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_23F384048();
  sub_23F5DCF4C(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  return sub_23F36196C(a1, 0, 1, v2);
}

uint64_t sub_23F5DCCC4(uint64_t *a1)
{
  uint64_t v1;

  sub_23F5DCC00(a1);
  return sub_23F3B12EC(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23F5DCD00(uint64_t a1)
{
  uint64_t v1;

  sub_23F5DCC74(a1);
  return sub_23F5DCD38(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23F5DCD38(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F5DCD40()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F557074(v1);
  return sub_23F5DC718(v2, v3, v4);
}

uint64_t sub_23F5DCD90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E701F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5DCDD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F557074(v1);
  return sub_23F5DBCF8(v2, v3, v4);
}

uint64_t sub_23F5DCE2C()
{
  return sub_23F617258();
}

uint64_t sub_23F5DCE48()
{
  return swift_task_dealloc();
}

uint64_t sub_23F5DCE70()
{
  return swift_task_dealloc();
}

uint64_t sub_23F5DCE88(float a1)
{
  uint64_t v1;
  float *v2;

  *v2 = a1;
  return v1;
}

uint64_t sub_23F5DCEA4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

_QWORD *sub_23F5DCEC0()
{
  uint64_t v0;

  return sub_23F35EA9C((_QWORD *)(*(_QWORD *)(v0 + 32) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 32) + 40));
}

void sub_23F5DCEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23F37AE00(a1, a2, (uint64_t *)va);
}

uint64_t sub_23F5DCF10(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  return sub_23F3CFCEC(a1, v3, a3);
}

uint64_t sub_23F5DCF18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F5DCF20(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  return sub_23F3CFCEC(a1, v3, a3);
}

uint64_t sub_23F5DCF28()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3EE834(v1, v0);
}

uint64_t sub_23F5DCF34()
{
  return sub_23F61C790();
}

uint64_t sub_23F5DCF40()
{
  return sub_23F61C16C();
}

uint64_t sub_23F5DCF4C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_23F5DCF58@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_23F5DCF6C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return v1 + 24;
}

uint64_t sub_23F5DCF80()
{
  return sub_23F61AF78();
}

void sub_23F5DCF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v32 = MEMORY[0x24BEE4AF8];
    sub_23F37BF94();
    v4 = a2;
    v5 = v32;
    v6 = sub_23F3823C8(a1);
    if (v6 < 0 || (v9 = v6, v6 >= 1 << *(_BYTE *)(a1 + 32)))
    {
LABEL_23:
      __break(1u);
    }
    else
    {
      v10 = a1 + 64;
      v11 = v8 & 1;
      while (1)
      {
        v27 = v2;
        if ((*(_QWORD *)(v10 + 8 * (v9 >> 6)) & (1 << v9)) == 0)
          break;
        if (v7 != *(_DWORD *)(a1 + 36))
          goto LABEL_25;
        v31 = v11;
        v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
        v13 = *v12;
        v14 = v12[1];
        v15 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v9);
        v16 = v15[1];
        v28 = v7;
        v29 = *v15;
        v17 = *(_QWORD *)(v4 + 16);
        sub_23F617BA0();
        v30 = v16;
        if (v17)
        {
          sub_23F617BA0();
          sub_23F617BA0();
          v18 = sub_23F3754D4(v13, v14);
          if ((v19 & 1) != 0)
          {
            v20 = (uint64_t *)(*(_QWORD *)(v4 + 56) + 16 * v18);
            v13 = *v20;
            v21 = v20[1];
            sub_23F617BA0();
            swift_bridgeObjectRelease_n();
            v14 = v21;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          sub_23F617BA0();
        }
        v22 = *(_QWORD *)(v5 + 16);
        v23 = v5;
        if (v22 >= *(_QWORD *)(v5 + 24) >> 1)
        {
          sub_23F37BF94();
          v4 = a2;
          v23 = v5;
        }
        *(_QWORD *)(v23 + 16) = v22 + 1;
        v24 = (_QWORD *)(v23 + 32 * v22);
        v24[4] = v13;
        v24[5] = v14;
        v24[6] = v29;
        v24[7] = v30;
        if ((v31 & 1) != 0)
          goto LABEL_29;
        v5 = v23;
        v10 = a1 + 64;
        if ((uint64_t)v9 >= -(-1 << *(_BYTE *)(a1 + 32)))
          goto LABEL_26;
        if ((*(_QWORD *)(a1 + 64 + 8 * (v9 >> 6)) & (1 << v9)) == 0)
          goto LABEL_27;
        if (v28 != *(_DWORD *)(a1 + 36))
          goto LABEL_28;
        v25 = sub_23F61C868();
        v2 = v27 - 1;
        if (v27 == 1)
          goto LABEL_22;
        v9 = v25;
        if ((v25 & 0x8000000000000000) == 0)
        {
          v11 = 0;
          v7 = *(_DWORD *)(a1 + 36);
          if (v25 < 1 << *(_BYTE *)(a1 + 32))
            continue;
        }
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
LABEL_22:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23F5DD210(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = *(_QWORD *)(sub_23F384048() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v16 = *(_QWORD *)(v4 + 72);
    sub_23F617BA0();
    v6 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v7 = sub_23F417D48(v5);
      if (v1)
        break;
      v9 = v8;
      if (v8)
      {
        v10 = v7;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F543650();
          v6 = v13;
        }
        v11 = *(_QWORD *)(v6 + 16);
        if (v11 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_23F543650();
          v6 = v14;
        }
        *(_QWORD *)(v6 + 16) = v11 + 1;
        v12 = v6 + 16 * v11;
        *(_QWORD *)(v12 + 32) = v10;
        *(_QWORD *)(v12 + 40) = v9;
      }
      v5 += v16;
      if (!--v2)
      {
        sub_23F366748();
        swift_bridgeObjectRelease();
        return v6;
      }
    }
    sub_23F366748();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F366748();
    return MEMORY[0x24BEE4AF8];
  }
  return v6;
}

uint64_t sub_23F5DD360(uint64_t a1, NSObject *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t result;
  unint64_t v11;
  int64_t i;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t *v44;
  int64_t v45;
  _QWORD v46[2];
  _QWORD *v47;
  int64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  NSObject *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD v60[2];
  uint64_t v61;
  int64_t v62;
  unint64_t v63;
  uint64_t v64;

  v52 = a2;
  v54 = sub_23F35D2E8(&qword_256E7E148);
  v3 = MEMORY[0x24BDAC7A8](v54);
  v47 = (_QWORD *)((char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x24BDAC7A8](v3);
  v56 = (_QWORD *)((char *)v46 - v6);
  MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)v46 - v7;
  v64 = MEMORY[0x24BEE4B00];
  sub_23F38231C(a1, v60);
  v51 = v60[0];
  v49 = v60[1];
  v8 = v62;
  v9 = v63;
  v46[1] = v61;
  v48 = (unint64_t)(v61 + 64) >> 6;
  result = sub_23F617BA0();
  if (!v9)
    goto LABEL_3;
LABEL_2:
  v55 = (v9 - 1) & v9;
  v11 = __clz(__rbit64(v9)) | (v8 << 6);
  for (i = v8; ; v11 = __clz(__rbit64(v13)) + (i << 6))
  {
    v15 = *(_QWORD *)(v51 + 56);
    v16 = (uint64_t *)(*(_QWORD *)(v51 + 48) + 16 * v11);
    v18 = *v16;
    v17 = v16[1];
    v19 = sub_23F61B080();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = v15 + *(_QWORD *)(v20 + 72) * v11;
    v22 = v54;
    v23 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(&v50[*(int *)(v54 + 48)], v21, v19);
    *v23 = v18;
    v23[1] = v17;
    v24 = (uint64_t)v23;
    v25 = v56;
    sub_23F3CD9FC(v24, (uint64_t)v56, &qword_256E7E148);
    v26 = (uint64_t)v25 + *(int *)(v22 + 48);
    sub_23F617BA0();
    v27 = v57;
    sub_23F5DF8DC(v26, v52, &v58);
    v57 = v27;
    if (v27)
    {
      sub_23F39E4B8((uint64_t)v56, &qword_256E7E148);
      swift_release();
      sub_23F382E18();
      return swift_release();
    }
    v28 = v59;
    if (!v59)
    {
      sub_23F39E4B8((uint64_t)v56, &qword_256E7E148);
      result = swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    v53 = v58;
    v29 = v47;
    v30 = (char *)v47 + *(int *)(v54 + 48);
    v31 = *v56;
    v32 = v56[1];
    *v47 = *v56;
    v29[1] = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v30, v26, v19);
    v33 = v64;
    if (*(_QWORD *)(v64 + 24) <= *(_QWORD *)(v64 + 16))
    {
      sub_23F514C04();
      v33 = v64;
    }
    sub_23F61CD30();
    sub_23F61C22C();
    result = sub_23F61CD60();
    v34 = v33 + 64;
    v35 = -1 << *(_BYTE *)(v33 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v33 + 64 + 8 * (v36 >> 6))) == 0)
      break;
    v38 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v33 + 64 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
LABEL_28:
    *(_QWORD *)(v34 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
    v43 = (_QWORD *)(*(_QWORD *)(v33 + 48) + 16 * v38);
    *v43 = v31;
    v43[1] = v32;
    v44 = (unint64_t *)(*(_QWORD *)(v33 + 56) + 16 * v38);
    *v44 = v53;
    v44[1] = v28;
    ++*(_QWORD *)(v33 + 16);
    result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v30, v19);
LABEL_29:
    v8 = i;
    v9 = v55;
    if (v55)
      goto LABEL_2;
LABEL_3:
    i = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_40;
    if (i >= v48)
      goto LABEL_38;
    v13 = *(_QWORD *)(v49 + 8 * i);
    if (!v13)
    {
      v14 = v8 + 2;
      if (v8 + 2 >= v48)
        goto LABEL_38;
      v13 = *(_QWORD *)(v49 + 8 * v14);
      if (v13)
        goto LABEL_12;
      v14 = v8 + 3;
      if (v8 + 3 >= v48)
        goto LABEL_38;
      v13 = *(_QWORD *)(v49 + 8 * v14);
      if (v13)
        goto LABEL_12;
      v14 = v8 + 4;
      if (v8 + 4 >= v48)
        goto LABEL_38;
      v13 = *(_QWORD *)(v49 + 8 * v14);
      if (v13)
      {
LABEL_12:
        i = v14;
      }
      else
      {
        i = v8 + 5;
        if (v8 + 5 >= v48)
          goto LABEL_38;
        v13 = *(_QWORD *)(v49 + 8 * i);
        if (!v13)
        {
          v45 = v8 + 6;
          while (v45 < v48)
          {
            v13 = *(_QWORD *)(v49 + 8 * v45++);
            if (v13)
            {
              i = v45 - 1;
              goto LABEL_13;
            }
          }
LABEL_38:
          sub_23F382E18();
          swift_release();
          return v64;
        }
      }
    }
LABEL_13:
    v55 = (v13 - 1) & v13;
  }
  v39 = 0;
  v40 = (unint64_t)(63 - v35) >> 6;
  while (++v37 != v40 || (v39 & 1) == 0)
  {
    v41 = v37 == v40;
    if (v37 == v40)
      v37 = 0;
    v39 |= v41;
    v42 = *(_QWORD *)(v34 + 8 * v37);
    if (v42 != -1)
    {
      v38 = __clz(__rbit64(~v42)) + (v37 << 6);
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23F5DD858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD v36[2];
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v45 = a2;
  v46 = a3;
  v44 = sub_23F35D2E8(&qword_256E7E638);
  v4 = MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v42 = (_QWORD *)((char *)v36 - v7);
  MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)v36 - v8;
  v54 = MEMORY[0x24BEE4AF8];
  sub_23F37C194();
  v9 = v54;
  v10 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  v40 = v10;
  v36[1] = a1;
  if (v10)
  {
    v11 = sub_23F618614();
    v12 = 0;
    v13 = *(_QWORD *)(v11 - 8);
    v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v38 = *(_QWORD *)(v13 + 72);
    v39 = v11;
    v50 = v13;
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v15 = v43;
    v16 = v37;
    v17 = (uint64_t *)v41;
    do
    {
      v18 = v44;
      v19 = &v15[*(int *)(v44 + 48)];
      v49 = v14;
      v20 = v14;
      v21 = v39;
      v16(v19, v20, v39);
      v22 = (uint64_t)v42;
      v23 = (char *)v42 + *(int *)(v18 + 48);
      *v42 = v12;
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v23, v19, v21);
      sub_23F3CD9FC(v22, (uint64_t)v17, &qword_256E7E638);
      v52 = v45;
      v53 = v46;
      sub_23F617BA0();
      sub_23F61C280();
      v51 = *v17;
      v24 = v51;
      sub_23F61CC1C();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      sub_23F61C280();
      v47 = v53;
      v48 = v52;
      v25 = *(int *)(v18 + 48);
      v26 = &v15[v25];
      *(_QWORD *)v15 = v24;
      v16(&v15[v25], (uint64_t)v17 + v25, v21);
      v27 = sub_23F6185FC();
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v26, v21);
      v30 = swift_allocObject();
      *(_QWORD *)(v30 + 16) = v27;
      *(_QWORD *)(v30 + 24) = v29;
      sub_23F39E4B8((uint64_t)v17, &qword_256E7E638);
      v9 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37C194();
        v9 = v54;
      }
      v31 = *(_QWORD *)(v9 + 16);
      v32 = v49;
      if (v31 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_23F37C194();
        v9 = v54;
      }
      ++v12;
      *(_QWORD *)(v9 + 16) = v31 + 1;
      v33 = (_QWORD *)(v9 + 32 * v31);
      v34 = v47;
      v33[4] = v48;
      v33[5] = v34;
      v33[6] = sub_23F5E50D0;
      v33[7] = v30;
      v14 = v32 + v38;
    }
    while (v40 != v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_23F5DDB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  sub_23F37C194();
  v4 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  if (v4)
  {
    v5 = 0;
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F61C280();
      sub_23F61CC1C();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      sub_23F61C280();
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = v8;
      *(_QWORD *)(v9 + 24) = v7;
      v10 = *(_QWORD *)(v15 + 16);
      if (v10 >= *(_QWORD *)(v15 + 24) >> 1)
        sub_23F37C194();
      ++v5;
      v6 += 2;
      *(_QWORD *)(v15 + 16) = v10 + 1;
      v11 = (_QWORD *)(v15 + 32 * v10);
      v11[4] = a2;
      v11[5] = a3;
      v11[6] = sub_23F5E50D0;
      v11[7] = v9;
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_23F5DDD18(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F35D2E8(a2);
    v6 = sub_23F61CA90();
  }
  else
  {
    v6 = MEMORY[0x24BEE4B00];
  }
  v9 = v6;
  a3(a1, 1, &v9);
  v7 = v9;
  if (v3)
    sub_23F366748();
  return v7;
}

void sub_23F5DDDA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t (**v31)();
  uint64_t *v32;
  uint64_t (**v33)();
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];

  sub_23F362C98();
  v1 = v0;
  v2 = sub_23F618614();
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F4DC4C4(v4, v37);
  v5 = MEMORY[0x24266B5F0]();
  swift_bridgeObjectRelease();
  if (!v5)
  {
    v7 = sub_23F61BFEC();
    sub_23F5E53EC(v7);
LABEL_23:
    swift_bridgeObjectRelease();
LABEL_24:
    sub_23F362870();
    return;
  }
  v6 = sub_23F5DF82C();
  if (v0)
    goto LABEL_24;
  v8 = v6;
  v9 = (_QWORD *)sub_23F61BFEC();
  v10 = *(_QWORD *)(v8 + 16);
  if (!v10)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    sub_23F5DFC90((uint64_t)v9);
    goto LABEL_23;
  }
  v11 = v8 + 64;
  while (1)
  {
    v12 = *(_QWORD *)(v11 - 32);
    v13 = *(_QWORD *)(v11 - 24);
    v14 = *(_QWORD *)v11;
    v15 = *(_QWORD *)(*(_QWORD *)v11 + 16);
    if (v15 >= 2)
    {
      swift_bridgeObjectRetain_n();
      v16 = sub_23F383738();
      v17 = sub_23F5DD858(v16, v12, v13);
      sub_23F362984();
      sub_23F38432C();
      v18 = sub_23F5E0154(v17);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v42[0] = v9;
      sub_23F5E2524(v18, (uint64_t)sub_23F5E3A8C, 0, isUniquelyReferenced_nonNull_native, v42);
      v1 = 0;
      v9 = (_QWORD *)v42[0];
      sub_23F384450();
      goto LABEL_21;
    }
    v41 = v1;
    if (v15)
    {
      sub_23F383EB8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v38, v14 + v20, v40);
      sub_23F384324();
      v21 = sub_23F6185FC();
      v23 = v22;
      sub_23F383CA8(v38, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
    }
    else
    {
      sub_23F384324();
      v21 = 0;
      v23 = 0;
    }
    v42[0] = v21;
    v42[1] = v23;
    v24 = sub_23F3ECBD8();
    sub_23F3CD9FC((uint64_t)v42, v24 + 16, &qword_256E70FD8);
    swift_isUniquelyReferenced_nonNull_native();
    v42[0] = v9;
    v25 = sub_23F3754D4(v12, v13);
    if (__OFADD__(v9[2], (v26 & 1) == 0))
      break;
    v27 = v25;
    v28 = v26;
    sub_23F35D2E8(&qword_256E7E630);
    if ((sub_23F61CA18() & 1) != 0)
    {
      v29 = sub_23F3754D4(v12, v13);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_27;
      v27 = v29;
    }
    v9 = (_QWORD *)v42[0];
    if ((v28 & 1) != 0)
    {
      v31 = (uint64_t (**)())(*(_QWORD *)(v42[0] + 56) + 16 * v27);
      swift_release();
      *v31 = sub_23F5E3B24;
      v31[1] = (uint64_t (*)())v24;
    }
    else
    {
      *(_QWORD *)(v42[0] + 8 * (v27 >> 6) + 64) |= 1 << v27;
      v32 = (uint64_t *)(v9[6] + 16 * v27);
      *v32 = v12;
      v32[1] = v13;
      v33 = (uint64_t (**)())(v9[7] + 16 * v27);
      *v33 = sub_23F5E3B24;
      v33[1] = (uint64_t (*)())v24;
      v34 = v9[2];
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
        goto LABEL_26;
      v9[2] = v36;
      sub_23F384324();
    }
    sub_23F38432C();
    sub_23F384450();
    v1 = v41;
LABEL_21:
    v11 += 40;
    if (!--v10)
      goto LABEL_22;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  sub_23F384450();
  __break(1u);
LABEL_27:
  sub_23F61CC94();
  __break(1u);
}

uint64_t sub_23F5DE110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD, _QWORD, _QWORD);
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v41;
  void (*v42)(_QWORD, _QWORD, _QWORD);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  sub_23F362ABC();
  v47 = v1;
  v48 = v2;
  v4 = v3;
  v5 = sub_23F61BBA8();
  v6 = *(char **)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3834D0();
  v45 = v7;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)&v41 - v9;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F5E536C();
  v11 = MEMORY[0x24BEE4AF8];
  v46 = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(v4 + 16);
  sub_23F383738();
  if (v12)
  {
    sub_23F383EB8();
    v13 = *((_QWORD *)v6 + 9);
    v43 = v14;
    v15 = v4 + v14;
    v16 = (void (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v6 + 2);
    v41 = v4;
    v42 = v16;
    do
    {
      v16(v0, v15, v5);
      v17 = sub_23F61BB60();
      if (!v18)
        goto LABEL_12;
      v19 = v17;
      v20 = v18;
      swift_bridgeObjectRelease();
      v21 = HIBYTE(v20) & 0xF;
      if ((v20 & 0x2000000000000000) == 0)
        v21 = v19 & 0xFFFFFFFFFFFFLL;
      if (v21)
      {
        v22 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v6 + 4);
        v22(v44, v0, v5);
        if ((sub_23F5E53D8() & 1) == 0)
        {
          sub_23F524750();
          sub_23F37B758();
          v20 = v46;
        }
        v23 = *(_QWORD *)(v20 + 16);
        if (v23 >= *(_QWORD *)(v20 + 24) >> 1)
        {
          sub_23F37B758();
          v20 = v46;
        }
        *(_QWORD *)(v20 + 16) = v23 + 1;
        v22((char *)(v20 + v43 + v23 * v13), (uint64_t)v44, v5);
        v46 = v20;
        v16 = v42;
      }
      else
      {
LABEL_12:
        (*((void (**)(uint64_t, uint64_t))v6 + 1))(v0, v5);
      }
      v15 += v13;
      --v12;
    }
    while (v12);
    v24 = v46;
    v11 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v24 = v11;
  }
  sub_23F362984();
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v46 = v11;
    sub_23F37BF94();
    sub_23F383EB8();
    v41 = v24;
    v27 = v24 + v26;
    v28 = *((_QWORD *)v6 + 9);
    v42 = (void (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v6 + 2);
    v43 = v28;
    v44 = v6;
    do
    {
      v29 = v45;
      v42(v45, v27, v5);
      sub_23F61BB84();
      v30 = sub_23F61C214();
      v32 = v31;
      sub_23F362984();
      v33 = v29;
      v34 = sub_23F61BB60();
      if (v35)
        v36 = v34;
      else
        v36 = 0;
      if (v35)
        v37 = v35;
      else
        v37 = 0xE000000000000000;
      (*((void (**)(uint64_t, uint64_t))v6 + 1))(v29, v5);
      if ((sub_23F5E53D8() & 1) == 0)
      {
        sub_23F524750();
        sub_23F37BF94();
        v33 = v46;
      }
      v38 = *(_QWORD *)(v33 + 16);
      if (v38 >= *(_QWORD *)(v33 + 24) >> 1)
      {
        sub_23F37BF94();
        v33 = v46;
      }
      *(_QWORD *)(v33 + 16) = v38 + 1;
      v39 = (_QWORD *)(v33 + 32 * v38);
      v39[4] = v30;
      v39[5] = v32;
      v39[6] = v36;
      v39[7] = v37;
      v6 = v44;
      v27 += v43;
      --v25;
    }
    while (v25);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v33;
}

void sub_23F5DE3F8()
{
  uint64_t v0;
  NSObject *v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F362C98();
  v2 = v1;
  v4 = v3;
  v5 = sub_23F5E53E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61B098();
  swift_retain();
  v10 = sub_23F5DD360(v9, v2);
  v11 = v0;
  sub_23F362984();
  if (!v0)
  {
    v12 = *(_QWORD *)(v4 + 16);
    v13 = MEMORY[0x24BEE4AF8];
    if (v12)
    {
      v29 = v10;
      v30 = 0;
      v36 = MEMORY[0x24BEE4AF8];
      sub_23F37BF94();
      sub_23F383EB8();
      v15 = v4 + v14;
      v32 = *(_QWORD *)(v6 + 72);
      v33 = v6;
      v31 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      v34 = v5;
      do
      {
        v31(v8, v15, v5);
        v35 = sub_23F61BB78();
        v17 = v16;
        v18 = sub_23F61BB84();
        v20 = v19;
        sub_23F383CA8((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
        v13 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37BF94();
          v13 = v36;
        }
        v21 = *(_QWORD *)(v13 + 16);
        if (v21 >= *(_QWORD *)(v13 + 24) >> 1)
        {
          sub_23F37BF94();
          v13 = v36;
        }
        *(_QWORD *)(v13 + 16) = v21 + 1;
        v22 = (_QWORD *)(v13 + 32 * v21);
        v5 = v34;
        v22[4] = v35;
        v22[5] = v17;
        v22[6] = v18;
        v22[7] = v20;
        v15 += v32;
        --v12;
      }
      while (v12);
      v10 = v29;
      v11 = v30;
    }
    v23 = v11;
    v24 = sub_23F5DDD18(v13, &qword_256E78F78, (void (*)(uint64_t, uint64_t, uint64_t *))sub_23F59E79C);
    sub_23F617BA0();
    sub_23F5DCF8C(v10, v24);
    v26 = v25;
    swift_bridgeObjectRelease();
    sub_23F362984();
    v27 = sub_23F5DDD18(v26, &qword_256E78F78, (void (*)(uint64_t, uint64_t, uint64_t *))sub_23F5E1D5C);
    if (!v23)
    {
      v28 = sub_23F5E274C(v27);
      swift_bridgeObjectRelease();
      sub_23F5DFC90(v28);
      sub_23F366748();
    }
  }
  sub_23F362870();
}

uint64_t sub_23F5DE644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F35D2E8(&qword_256E70230);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F38F964();
  v9 = v8 - v7;
  sub_23F38F124(a1, v8 - v7, &qword_256E70230);
  v10 = sub_23F61B0BC();
  if (sub_23F36195C(v9, 1, v10) == 1)
  {
    sub_23F39E4B8(v9, &qword_256E70230);
    return sub_23F61BFEC();
  }
  else
  {
    sub_23F5DE3F8();
    if (!v3)
      a3 = v11;
    sub_23F5E529C();
  }
  return a3;
}

void sub_23F5DE74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint8_t *v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint8_t *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t inited;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[2];
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint8_t *v102;
  uint64_t v103;
  uint64_t v104;

  sub_23F362C98();
  a19 = v24;
  a20 = v25;
  v101 = v26;
  v102 = v21;
  v98 = v27;
  v28 = sub_23F3B1728();
  v92 = *(_QWORD *)(v28 - 8);
  v93 = v28;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  v95 = (char *)v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23F6182F0();
  v99 = *(_QWORD *)(v31 - 8);
  v100 = v31;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F3834D0();
  v94 = v33;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v34);
  v97 = (char *)v87 - v35;
  v96 = sub_23F5E53E4();
  v103 = *(_QWORD *)(v96 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F3845CC();
  sub_23F35D2E8(&qword_256E70268);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F362AAC();
  v40 = v38 - v39;
  MEMORY[0x24BDAC7A8](v41);
  v43 = (char *)v87 - v42;
  sub_23F384048();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F389880();
  MEMORY[0x24BDAC7A8](v45);
  v47 = (char *)v87 - v46;
  sub_23F6182E4();
  v48 = v102;
  v49 = sub_23F417D48((uint64_t)v47);
  if (v48)
  {
    sub_23F5E5324();
  }
  else
  {
    v87[1] = v22;
    v89 = v40;
    v90 = v49;
    v88 = v43;
    v101 = v50;
    v102 = v20;
    sub_23F5E5324();
    v91 = 0;
    if (v101)
    {
      v51 = *(_QWORD *)(v98 + 16);
      if (v51)
      {
        sub_23F383EB8();
        v54 = v52 + v53;
        v56 = *(_QWORD *)(v55 + 72);
        v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16);
        sub_23F617BA0();
        v58 = v96;
        while (1)
        {
          v57(v23, v54, v58);
          v59 = sub_23F61BB78();
          v61 = v60;
          if (v59 == sub_23F618224() && v61 == v62)
            break;
          v64 = sub_23F4508DC();
          sub_23F362C60();
          sub_23F362984();
          if ((v64 & 1) != 0)
            goto LABEL_19;
          v65 = v103;
          (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v23, v58);
          v54 += v56;
          if (!--v51)
          {
            swift_bridgeObjectRelease();
            v66 = 1;
            v67 = v99;
            v68 = v97;
            v69 = (uint64_t)v88;
            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease();
        sub_23F362C60();
LABEL_19:
        v67 = v99;
        v78 = v89;
        sub_23F362C60();
        v65 = v103;
        v69 = (uint64_t)v88;
        (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v88, v23, v58);
        v66 = 0;
        v68 = v97;
      }
      else
      {
        v66 = 1;
        v67 = v99;
        v58 = v96;
        v68 = v97;
        v69 = (uint64_t)v88;
        v65 = v103;
LABEL_16:
        v78 = v89;
      }
      sub_23F36196C(v69, v66, 1, v58);
      sub_23F35D2E8(&qword_256E6FC58);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
      sub_23F38F124(v69, v78, &qword_256E70268);
      if (sub_23F36195C(v78, 1, v58) == 1)
      {
        sub_23F39E4B8(v78, &qword_256E70268);
        v80 = 0;
      }
      else
      {
        sub_23F61BB84();
        v80 = v81;
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v78, v58);
      }
      v82 = v100;
      (*(void (**)(char *, uint8_t *, uint64_t))(v67 + 16))(v68, v102, v100);
      if (!v80)
        sub_23F618224();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v82);
      v83 = sub_23F61C214();
      v85 = v84;
      sub_23F362984();
      *(_QWORD *)(inited + 32) = v83;
      *(_QWORD *)(inited + 40) = v85;
      v86 = v101;
      *(_QWORD *)(inited + 48) = v90;
      *(_QWORD *)(inited + 56) = v86;
      sub_23F61BFEC();
      sub_23F39E4B8(v69, &qword_256E70268);
    }
    else
    {
      sub_23F619124();
      v70 = v99;
      v71 = v94;
      (*(void (**)(uint64_t, uint8_t *, uint64_t))(v99 + 16))(v94, v102, v100);
      v72 = sub_23F619E8C();
      v73 = sub_23F61C628();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = (uint8_t *)sub_23F488EC0();
        v103 = swift_slowAlloc();
        a10 = v103;
        *(_DWORD *)v74 = 136315138;
        v102 = v74 + 4;
        sub_23F6182E4();
        v75 = sub_23F61C16C();
        sub_23F37AE00(v75, v76, &a10);
        v104 = v77;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v71, v100);
        sub_23F38485C(&dword_23F35A000, v72, v73, "Unhandled parameter value: '%s'", v74);
        swift_arrayDestroy();
        sub_23F366530();
      }
      sub_23F383E88(v71, *(uint64_t (**)(uint64_t, uint64_t))(v70 + 8));

      sub_23F411514(v92);
      sub_23F61BFEC();
    }
  }
  sub_23F362870();
}

uint64_t sub_23F5DED10()
{
  return sub_23F5DF558();
}

uint64_t sub_23F5DED24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  sub_23F362C98();
  v67 = v4;
  v68 = v5;
  v62 = v6;
  v63 = sub_23F618350();
  v60 = *(_QWORD *)(v63 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F4DC4C4(v8, v52);
  v9 = sub_23F5E53E4();
  v64 = *(_QWORD *)(v9 - 8);
  v65 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F362838();
  sub_23F35D2E8(&qword_256E70268);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3834D0();
  v58 = v12;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v52 - v14;
  v16 = sub_23F3B1728();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F3B1F34();
  v61 = v1;
  v18 = MEMORY[0x24266B854]();
  swift_retain();
  v19 = sub_23F5DD210(v18);
  v20 = sub_23F362984();
  if (!v2)
  {
    v53 = v3;
    v54 = v16;
    v56 = v15;
    v21 = v61;
    v22 = *(_QWORD *)(MEMORY[0x24266B854](v20) + 16);
    swift_bridgeObjectRelease();
    v23 = v22 - *(_QWORD *)(v19 + 16);
    v24 = v63;
    v55 = 0;
    v57 = v19;
    if (v23 >= 1)
    {
      sub_23F619124();
      v25 = sub_23F619E8C();
      v26 = sub_23F61C628();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)sub_23F488EC0();
        *(_DWORD *)v27 = 134217984;
        v66 = v23;
        sub_23F5E52C4();
        sub_23F38485C(&dword_23F35A000, v25, v26, "%ld unhandled disambiguation values", v27);
        sub_23F366530();
      }

      sub_23F411514(v53);
    }
    v28 = *(_QWORD *)(v62 + 16);
    if (v28)
    {
      sub_23F383EB8();
      v31 = v29 + v30;
      v33 = *(_QWORD *)(v32 + 72);
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
      sub_23F617BA0();
      v35 = v65;
      while (1)
      {
        v34(v0, v31, v35);
        v36 = sub_23F61BB78();
        v38 = v37;
        if (v36 == sub_23F61832C() && v38 == v39)
          break;
        v41 = sub_23F4508DC();
        sub_23F384120();
        sub_23F362984();
        if ((v41 & 1) != 0)
          goto LABEL_18;
        v35 = v65;
        (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v0, v65);
        v31 += v33;
        if (!--v28)
        {
          swift_bridgeObjectRelease();
          v42 = 1;
          v24 = v63;
          v44 = v59;
          v43 = v60;
          v45 = (uint64_t)v56;
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
      sub_23F384120();
LABEL_18:
      v44 = v59;
      v43 = v60;
      sub_23F384120();
      v46 = v64;
      v35 = v65;
      v45 = (uint64_t)v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v56, v0, v65);
      v42 = 0;
      v24 = v63;
    }
    else
    {
      v42 = 1;
      v44 = v59;
      v43 = v60;
      v45 = (uint64_t)v56;
      v35 = v65;
LABEL_16:
      v46 = v64;
    }
    v47 = v58;
    sub_23F36196C(v45, v42, 1, v35);
    sub_23F38F124(v45, v47, &qword_256E70268);
    if (sub_23F36195C(v47, 1, v35) == 1)
    {
      sub_23F39E4B8(v47, &qword_256E70268);
      v48 = 0;
    }
    else
    {
      sub_23F61BB84();
      v49 = v47;
      v48 = v50;
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v49, v65);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v44, v21, v24);
    if (!v48)
      sub_23F61832C();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v24);
    sub_23F3840BC();
    v18 = sub_23F61C214();
    swift_bridgeObjectRelease();
    sub_23F39E4B8(v45, &qword_256E70268);
  }
  return v18;
}

void sub_23F5DF124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  sub_23F362C98();
  sub_23F3B1728();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3B17A4();
  v4 = MEMORY[0x24266B788]();
  swift_retain();
  v5 = sub_23F5DD210(v4);
  v6 = sub_23F38432C();
  if (!v0)
  {
    v7 = *(_QWORD *)(MEMORY[0x24266B788](v6) + 16);
    swift_bridgeObjectRelease();
    if (v7 - *(_QWORD *)(v5 + 16) >= 1)
    {
      sub_23F619124();
      v8 = sub_23F619E8C();
      v9 = sub_23F61C628();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)sub_23F488EC0();
        *(_DWORD *)v10 = 134217984;
        sub_23F5E52C4();
        sub_23F38485C(&dword_23F35A000, v8, v9, "%ld unhandled disambiguation values", v10);
        sub_23F366530();
      }

      sub_23F383E88(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    }
  }
  sub_23F362870();
}

void sub_23F5DF24C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F362C98();
  v32 = v4;
  v33 = v0;
  v31 = v5;
  v6 = sub_23F61B6E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3E2718();
  v8 = sub_23F384048();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F389880();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - v11;
  sub_23F617DA4();
  if ((*(unsigned int (**)(char *, uint64_t))(v1 + 88))(v12, v8) == *MEMORY[0x24BEB9988])
  {
    sub_23F383CA8((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
    v13 = swift_projectBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v3, v13, v6);
    v14 = sub_23F61B6D4();
    swift_retain();
    v15 = v33;
    v16 = sub_23F5DD210(v14);
    if (v15)
    {
      sub_23F384120();
    }
    else
    {
      v20 = v16;
      sub_23F384120();
      v21 = v32;
      sub_23F389CDC();
      v22 = sub_23F5DDB80(v20, v31, v21);
      sub_23F362984();
      v23 = sub_23F5E0154(v22);
      sub_23F5E53EC(v23);
      sub_23F362C60();
    }
    sub_23F5E5284(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    swift_release();
  }
  else
  {
    sub_23F617DA4();
    v17 = v33;
    v18 = sub_23F417D48(v2);
    if (v17)
    {
      sub_23F5E5334();
      sub_23F5E53F4();
    }
    else
    {
      v24 = v18;
      v25 = v19;
      sub_23F5E5334();
      if (v25)
      {
        sub_23F35D2E8(&qword_256E6FC68);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
        v27 = v32;
        *(_QWORD *)(inited + 32) = v31;
        *(_QWORD *)(inited + 40) = v27;
        v28 = sub_23F3ECBD8();
        *(_QWORD *)(v28 + 16) = v24;
        *(_QWORD *)(v28 + 24) = v25;
        *(_QWORD *)(inited + 48) = sub_23F5E3B0C;
        *(_QWORD *)(inited + 56) = v28;
        sub_23F617BA0();
      }
      v29 = sub_23F61BFEC();
      sub_23F5E53EC(v29);
      sub_23F362C60();
      sub_23F5E53F4();
    }
  }
  sub_23F362870();
}

uint64_t sub_23F5DF4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t result;

  v2 = sub_23F617D14();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3B17A4();
  sub_23F617D44();
  v4 = sub_23F416588(v0);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  result = 0;
  if (v4 != 24)
    return sub_23F41674C(v4);
  return result;
}

uint64_t sub_23F5DF544()
{
  return sub_23F5DF558();
}

uint64_t sub_23F5DF558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_23F362ABC();
  v49 = v1;
  v50 = v2;
  v47 = v3;
  v48 = v0;
  v5 = v4;
  v7 = v6(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v41 - v9;
  v11 = sub_23F61BBA8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F38F964();
  v15 = v14 - v13;
  sub_23F35D2E8(&qword_256E70268);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F362AAC();
  v19 = v17 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v41 - v21;
  v23 = *(_QWORD *)(v5 + 16);
  if (v23)
  {
    v42 = v19;
    v43 = (char *)&v41 - v21;
    v44 = v10;
    v45 = v8;
    v46 = v7;
    sub_23F383EB8();
    v25 = v5 + v24;
    v26 = *(_QWORD *)(v12 + 72);
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    v41 = v5;
    sub_23F383738();
    while (1)
    {
      v27(v15, v25, v11);
      v28 = sub_23F61BB78();
      v30 = v29;
      if (v28 == v47() && v30 == v31)
        break;
      v33 = sub_23F3C8510();
      sub_23F38458C();
      sub_23F362984();
      if ((v33 & 1) != 0)
        goto LABEL_12;
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
      v25 += v26;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        v34 = 1;
        v8 = v45;
        v7 = v46;
        v22 = v43;
        v10 = v44;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    sub_23F38458C();
LABEL_12:
    sub_23F38458C();
    v22 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v43, v15, v11);
    v34 = 0;
    v8 = v45;
    v7 = v46;
    v10 = v44;
LABEL_13:
    v19 = v42;
  }
  else
  {
    v34 = 1;
  }
  sub_23F36196C((uint64_t)v22, v34, 1, v11);
  sub_23F38F124((uint64_t)v22, v19, &qword_256E70268);
  if (sub_23F36195C(v19, 1, v11) == 1)
  {
    sub_23F39E4B8(v19, &qword_256E70268);
    v35 = 0;
  }
  else
  {
    v36 = v19;
    sub_23F61BB84();
    v35 = v37;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v36, v11);
  }
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v48, v7);
  if (!v35)
    ((void (*)(uint64_t))v47)(v38);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_23F3840BC();
  v39 = sub_23F61C214();
  sub_23F362D18();
  sub_23F39E4B8((uint64_t)v22, &qword_256E70268);
  return v39;
}

uint64_t sub_23F5DF82C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v0 = MEMORY[0x24266B5F0]();
  if (!v0)
    return MEMORY[0x24BEE4AF8];
  v1 = v0;
  sub_23F6185C0();
  sub_23F617BA0();
  v2 = (void *)sub_23F6185A8();
  v3 = sub_23F5BBAA8(v2, v1);
  sub_23F362C60();

  return v3;
}

uint64_t sub_23F5DF8DC@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t *v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_t v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  v41 = a3;
  v40 = a2;
  v4 = sub_23F61B080();
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F619E98();
  v38 = *(_QWORD *)(v7 - 8);
  v39 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v45 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61B92C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F61A7E0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v36 - v16;
  sub_23F61B074();
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 88))(v17, v13) == *MEMORY[0x24BE55998])
  {
    (*(void (**)(char *, uint64_t))(v14 + 96))(v17, v13);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v17, v9);
    v18 = v42;
    v19 = (unint64_t)sub_23F417D48((uint64_t)v12);
    if (v18)
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v31 = v20;
    if (v20)
    {
      v32 = v19;
      if ((v20 & 0x2000000000000000) != 0)
        v33 = HIBYTE(v20) & 0xF;
      else
        v33 = v19 & 0xFFFFFFFFFFFFLL;
      result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      if (v33)
      {
        v34 = v41;
        *v41 = v32;
        v34[1] = v31;
        return result;
      }
      result = swift_bridgeObjectRelease();
    }
    else
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    v35 = v41;
    *v41 = 0;
    v35[1] = 0;
  }
  else
  {
    sub_23F619124();
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v6, a1, v44);
    v22 = sub_23F619E8C();
    v23 = sub_23F61C628();
    if (os_log_type_enabled(v22, v23))
    {
      v40 = v22;
      v24 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v47 = v37;
      *(_DWORD *)v24 = 136315138;
      v36[1] = v24 + 4;
      sub_23F61B074();
      v25 = sub_23F61C16C();
      sub_23F37AE00(v25, v26, &v47);
      v46 = v27;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v44);
      v28 = v40;
      _os_log_impl(&dword_23F35A000, v40, v23, "Unhandled tool parameter value: %s", v24, 0xCu);
      v29 = v37;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v29, -1, -1);
      MEMORY[0x242670B70](v24, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v44);

    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v45, v39);
    v30 = v41;
    *v41 = 0;
    v30[1] = 0;
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  return result;
}

void sub_23F5DFC90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  int v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v22 = MEMORY[0x24BEE4AF8];
    sub_23F37C194();
    v2 = v22;
    v4 = sub_23F3823C8(a1);
    if (v4 < 0 || (v7 = v4, v4 >= 1 << *(_BYTE *)(a1 + 32)))
    {
LABEL_18:
      __break(1u);
    }
    else
    {
      v8 = a1 + 64;
      v9 = v6 & 1;
      while (1)
      {
        v18 = v1;
        if ((*(_QWORD *)(v8 + 8 * (v7 >> 6)) & (1 << v7)) == 0)
          break;
        if (v5 != *(_DWORD *)(a1 + 36))
          goto LABEL_20;
        v21 = v9;
        v10 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v7);
        v11 = v10[1];
        v19 = v5;
        v20 = *v10;
        sub_23F617BA0();
        swift_retain();
        v12 = sub_23F61C214();
        v14 = v13;
        swift_bridgeObjectRelease();
        v15 = *(_QWORD *)(v22 + 16);
        if (v15 >= *(_QWORD *)(v22 + 24) >> 1)
          sub_23F37C194();
        *(_QWORD *)(v22 + 16) = v15 + 1;
        v16 = (_QWORD *)(v22 + 32 * v15);
        v16[4] = v12;
        v16[5] = v14;
        v16[6] = v20;
        v16[7] = v11;
        if ((v21 & 1) != 0)
          goto LABEL_24;
        v8 = a1 + 64;
        if ((uint64_t)v7 >= -(-1 << *(_BYTE *)(a1 + 32)))
          goto LABEL_21;
        if ((*(_QWORD *)(a1 + 64 + 8 * (v7 >> 6)) & (1 << v7)) == 0)
          goto LABEL_22;
        if (v19 != *(_DWORD *)(a1 + 36))
          goto LABEL_23;
        v17 = sub_23F61C868();
        --v1;
        if (v18 == 1)
          goto LABEL_17;
        v7 = v17;
        if ((v17 & 0x8000000000000000) == 0)
        {
          v9 = 0;
          v5 = *(_DWORD *)(a1 + 36);
          if (v17 < 1 << *(_BYTE *)(a1 + 32))
            continue;
        }
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
LABEL_17:
    sub_23F5DDD18(v2, &qword_256E78F80, (void (*)(uint64_t, uint64_t, uint64_t *))sub_23F5E205C);
  }
}

uint64_t sub_23F5DFEA4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x416D7269666E6F63 && a2 == 0xED00006E6F697463)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F5DFF4C()
{
  return 0x416D7269666E6F63;
}

void sub_23F5DFF70()
{
  uint64_t v0;

  sub_23F4DCA38();
  sub_23F5E5260();
  sub_23F35D2E8(&qword_256E7E6F8);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F5E50EC();
  sub_23F5E3F7C();
  sub_23F507700();
  sub_23F5E3FB8();
  sub_23F5E5188();
  sub_23F5E519C();
  sub_23F4DD22C();
  sub_23F3F4040();
}

uint64_t sub_23F5E0000()
{
  return 0x736D61726170;
}

uint64_t sub_23F5E0018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F5DFEA4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F5E0040()
{
  sub_23F5E3F7C();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E0068()
{
  sub_23F5E3F7C();
  return sub_23F61CDCC();
}

void sub_23F5E0090()
{
  sub_23F5DFF70();
}

void sub_23F5E00AC(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F5E034C(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F5E00D4()
{
  sub_23F5E4A4C();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E00FC()
{
  sub_23F5E4A4C();
  return sub_23F61CDCC();
}

void sub_23F5E0124()
{
  sub_23F5E1258();
}

uint64_t sub_23F5E0154(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F35D2E8(&qword_256E78F80);
    v1 = sub_23F61CA90();
  }
  else
  {
    v1 = MEMORY[0x24BEE4B00];
  }
  v4 = v1;
  v2 = sub_23F617BA0();
  sub_23F5E2244(v2, 1, &v4);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_23F5E0200(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x566D7269666E6F63 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F5E029C()
{
  return 0x566D7269666E6F63;
}

void sub_23F5E02BC()
{
  uint64_t v0;

  sub_23F4DCA38();
  sub_23F5E5260();
  sub_23F35D2E8(&qword_256E7E6E0);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F5E50EC();
  sub_23F5E3F04();
  sub_23F507700();
  sub_23F5E3F40();
  sub_23F5E5188();
  sub_23F5E519C();
  sub_23F4DD22C();
  sub_23F3F4040();
}

void sub_23F5E034C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736D61726170 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F3C8510();
    sub_23F362D18();
  }
  sub_23F362928();
}

void sub_23F5E03BC()
{
  uint64_t v0;

  sub_23F4DCA38();
  sub_23F35D2E8(&qword_256E7E840);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F5E50EC();
  sub_23F5E4A10();
  sub_23F507700();
  sub_23F35D2E8(&qword_256E74F78);
  sub_23F59E6CC();
  sub_23F5E51B0();
  sub_23F5E52B0();
  sub_23F4DD22C();
  sub_23F3F4040();
}

uint64_t sub_23F5E046C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F5E0200(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F5E0494()
{
  sub_23F5E3F04();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E04BC()
{
  sub_23F5E3F04();
  return sub_23F61CDCC();
}

void sub_23F5E04E4()
{
  sub_23F5E02BC();
}

uint64_t sub_23F5E04FC(_QWORD *a1, _QWORD *a2)
{
  return sub_23F5E01FC(*a1, *a2);
}

uint64_t sub_23F5E0508()
{
  sub_23F5E4A10();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E0530()
{
  sub_23F5E4A10();
  return sub_23F61CDCC();
}

void sub_23F5E0558()
{
  sub_23F5E03BC();
}

void sub_23F5E0570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  _QWORD *v6;
  _QWORD *v7;

  v5 = a1 == a4 && a2 == a5;
  if (v5 || (sub_23F3C8510() & 1) != 0)
  {
    v6 = (_QWORD *)sub_23F3840BC();
    sub_23F3C4A3C(v6, v7);
  }
  sub_23F362928();
}

void sub_23F5E05C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F362C98();
  v3 = v2;
  v4 = sub_23F35D2E8(&qword_256E7E6B8);
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3845CC();
  sub_23F35EA9C(v3, v3[3]);
  sub_23F5E3E50();
  sub_23F5E5290();
  sub_23F5E3E8C();
  sub_23F61CBE0();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v4);
  sub_23F362870();
}

void sub_23F5E0690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  _QWORD *v6;
  _QWORD *v7;

  v5 = a1 == a4 && a2 == a5;
  if (v5 || (sub_23F3C8510() & 1) != 0)
  {
    v6 = (_QWORD *)sub_23F3840BC();
    sub_23F3C4A3C(v6, v7);
  }
  else
  {
    sub_23F362928();
  }
}

uint64_t sub_23F5E06DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6D614E6D61726170 && a2 == 0xE900000000000065;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61566D61726170 && a2 == 0xEB00000000736575)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F5E07EC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C61566D61726170;
  else
    return 0x6D614E6D61726170;
}

void sub_23F5E0830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F362C98();
  v4 = v3;
  sub_23F35D2E8(&qword_256E7E830);
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B17A4();
  sub_23F35EA9C(v4, v4[3]);
  sub_23F5E49D4();
  sub_23F5E5290();
  sub_23F61CBB0();
  if (!v0)
  {
    sub_23F35D2E8(&qword_256E70580);
    sub_23F5E4978();
    sub_23F61CBE0();
  }
  sub_23F383E88(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F362870();
}

uint64_t sub_23F5E0940()
{
  sub_23F5E3E50();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E0968()
{
  sub_23F5E3E50();
  return sub_23F61CDCC();
}

void sub_23F5E0990()
{
  sub_23F5E05C0();
}

uint64_t sub_23F5E09AC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_23F5E0A5C(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23F5E0570);
}

uint64_t sub_23F5E09B8()
{
  char *v0;

  return sub_23F5E07EC(*v0);
}

uint64_t sub_23F5E09C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F5E06DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F5E09E4()
{
  sub_23F5E49D4();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E0A0C()
{
  sub_23F5E49D4();
  return sub_23F61CDCC();
}

void sub_23F5E0A34()
{
  sub_23F5E0830();
}

uint64_t sub_23F5E0A50(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_23F5E0A5C(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23F5E0690);
}

uint64_t sub_23F5E0A5C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

void sub_23F5E0A80(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000023F63BDE0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F3C8510();
    sub_23F362D18();
  }
  sub_23F362928();
}

unint64_t sub_23F5E0AF8()
{
  return 0xD000000000000012;
}

void sub_23F5E0B14()
{
  uint64_t v0;

  sub_23F4DCA38();
  sub_23F5E5260();
  sub_23F35D2E8(&qword_256E7E6A0);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F5E50EC();
  sub_23F5E3DD8();
  sub_23F507700();
  sub_23F5E3E14();
  sub_23F5E5188();
  sub_23F5E519C();
  sub_23F4DD22C();
  sub_23F3F4040();
}

uint64_t sub_23F5E0BA4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6C61566D61726170 && a2 == 0xEB00000000736575)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F5E0C40()
{
  return 0x6C61566D61726170;
}

void sub_23F5E0C60()
{
  uint64_t v0;

  sub_23F4DCA38();
  sub_23F35D2E8(&qword_256E7E820);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F5E50EC();
  sub_23F5E493C();
  sub_23F507700();
  sub_23F35D2E8(&qword_256E70580);
  sub_23F5E4978();
  sub_23F5E51B0();
  sub_23F5E52B0();
  sub_23F4DD22C();
  sub_23F3F4040();
}

void sub_23F5E0D0C(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F5E0A80(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F5E0D34()
{
  sub_23F5E3DD8();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E0D5C()
{
  sub_23F5E3DD8();
  return sub_23F61CDCC();
}

void sub_23F5E0D84()
{
  sub_23F5E0B14();
}

uint64_t sub_23F5E0D9C(_QWORD *a1, _QWORD *a2)
{
  return sub_23F5E0A7C(*a1, *a2);
}

uint64_t sub_23F5E0DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F5E0BA4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F5E0DD4()
{
  sub_23F5E493C();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E0DFC()
{
  sub_23F5E493C();
  return sub_23F61CDCC();
}

void sub_23F5E0E24()
{
  sub_23F5E0C60();
}

uint64_t sub_23F5E0E3C()
{
  return 0x5674736575716572;
}

void sub_23F5E0E60(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F5E10A8(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F5E0E88()
{
  sub_23F5E3EC8();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E0EB0()
{
  sub_23F5E3EC8();
  return sub_23F61CDCC();
}

void sub_23F5E0ED8()
{
  sub_23F5E1548();
}

uint64_t sub_23F5E0F08(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7250676F6C616964 && a2 == 0xEE0064656469766FLL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F5E0FB0()
{
  return 0x7250676F6C616964;
}

uint64_t sub_23F5E0FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F5E0F08(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F5E1000()
{
  sub_23F5E3FF4();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E1028()
{
  sub_23F5E3FF4();
  return sub_23F61CDCC();
}

void sub_23F5E1050()
{
  sub_23F5E1548();
}

uint64_t sub_23F5E1080(uint64_t *a1, uint64_t *a2)
{
  return sub_23F5E1484(*a1, a1[1], *a2, a2[1]) & 1;
}

void sub_23F5E10A8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x5674736575716572 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F3C8510();
    sub_23F362D18();
  }
  sub_23F362928();
}

uint64_t sub_23F5E1138()
{
  sub_23F5E3CAC();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E1160()
{
  sub_23F5E3CAC();
  return sub_23F61CDCC();
}

void sub_23F5E1188()
{
  sub_23F5E1548();
}

uint64_t sub_23F5E11B8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023F63BE00)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_23F5E123C()
{
  return 0xD000000000000010;
}

void sub_23F5E1258()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  void (*v3)(void);
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;

  sub_23F362C98();
  v3 = v2;
  v5 = v4;
  sub_23F35D2E8(v6);
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3845CC();
  sub_23F35EA9C(v5, v5[3]);
  v3();
  sub_23F5E5290();
  sub_23F35D2E8(&qword_256E7B8B8);
  sub_23F57B628();
  sub_23F61CBE0();
  sub_23F383E88(v1, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F362870();
}

uint64_t sub_23F5E1328(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6562697263736564 && a2 == 0xEE0074757074754FLL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F5E13D0()
{
  return 0x6562697263736564;
}

void sub_23F5E13F4()
{
  uint64_t v0;

  sub_23F4DCA38();
  sub_23F5E5260();
  sub_23F35D2E8(&qword_256E7E688);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F5E50EC();
  sub_23F5E3D60();
  sub_23F507700();
  sub_23F5E3D9C();
  sub_23F5E5188();
  sub_23F5E519C();
  sub_23F4DD22C();
  sub_23F3F4040();
}

uint64_t sub_23F5E1484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_23F3C8510();
}

uint64_t sub_23F5E149C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x707954726F727265 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F5E152C()
{
  return 0x707954726F727265;
}

void sub_23F5E1548()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;

  sub_23F362C98();
  v2 = v1;
  v4 = v3;
  sub_23F35D2E8(v5);
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3E2718();
  sub_23F35EA9C(v4, v4[3]);
  v2();
  sub_23F61CD90();
  sub_23F61CBB0();
  sub_23F5E5284(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F362870();
}

uint64_t sub_23F5E1604(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6562697263736564 && a2 == 0xED0000726F727245)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F5E16AC()
{
  return 0x6562697263736564;
}

void sub_23F5E16D0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F362C98();
  v2 = v1;
  v3 = sub_23F35D2E8(&qword_256E7E670);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3B1F34();
  sub_23F35EA9C(v2, v2[3]);
  sub_23F5E3CE8();
  sub_23F61CD90();
  sub_23F5E3D24();
  sub_23F61CBE0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v3);
  sub_23F362870();
}

uint64_t sub_23F5E17AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F5E11B8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F5E17D4()
{
  sub_23F5E4900();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E17FC()
{
  sub_23F5E4900();
  return sub_23F61CDCC();
}

void sub_23F5E1824()
{
  sub_23F5E1258();
}

uint64_t sub_23F5E1858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F5E1328(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F5E1880()
{
  sub_23F5E3D60();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E18A8()
{
  sub_23F5E3D60();
  return sub_23F61CDCC();
}

void sub_23F5E18D0()
{
  sub_23F5E13F4();
}

uint64_t sub_23F5E18EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F5E149C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F5E1914()
{
  sub_23F5E48C4();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E193C()
{
  sub_23F5E48C4();
  return sub_23F61CDCC();
}

void sub_23F5E1964()
{
  sub_23F5E1548();
}

uint64_t sub_23F5E1998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F5E1604(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F5E19C0()
{
  sub_23F5E3CE8();
  return sub_23F61CDC0();
}

uint64_t sub_23F5E19E8()
{
  sub_23F5E3CE8();
  return sub_23F61CDCC();
}

void sub_23F5E1A10()
{
  sub_23F5E16D0();
}

uint64_t sub_23F5E1A28(uint64_t *a1, uint64_t *a2)
{
  return sub_23F5E1484(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_23F5E1A3C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23F5E1A5C()
{
  sub_23F35D2E8(&qword_256E70FD8);
  return sub_23F61C73C();
}

uint64_t sub_23F5E1AB8()
{
  return sub_23F61C28C();
}

uint64_t sub_23F5E1ACC(uint64_t a1)
{
  uint64_t (**v1)(void);

  return sub_23F5E1A3C(a1, *v1);
}

uint64_t sub_23F5E1AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F5E1BC8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE55070], (uint64_t (*)(_QWORD))MEMORY[0x24BE56EB0]);
}

uint64_t sub_23F5E1AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  sub_23F38F530(a3, a1, type metadata accessor for ActionResolver.Parameter);
  sub_23F61B404();
  v3 = sub_23F3840BC();
  return v4(v3);
}

uint64_t sub_23F5E1B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  sub_23F5E5354();
  v4 = sub_23F6184B8();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v6(v3, v1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v2, v0, v4);
}

uint64_t sub_23F5E1BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F5E1BC8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0]);
}

uint64_t sub_23F5E1BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;

  v11 = a5(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a3, v11);
  v12 = a6(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a2, a4, v12);
}

void sub_23F5E1C40()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F5E5304();
  sub_23F38F530(v1, v0, type metadata accessor for ToolPromptMap);
  sub_23F3668F4();
  sub_23F3840BC();
  sub_23F362928();
}

void sub_23F5E1C70()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F5E5304();
  sub_23F382B64(v1, v0);
  sub_23F3668F4();
  sub_23F3840BC();
  sub_23F362928();
}

uint64_t sub_23F5E1C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F5E5354();
  v3 = sub_23F6184F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v2, v0, v3);
  sub_23F383738();
  return v1;
}

uint64_t sub_23F5E1CE4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *a1 = a4;
  a1[1] = a5;
  sub_23F617BA0();
  swift_retain();
  return a2;
}

void sub_23F5E1D2C()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F5E5304();
  sub_23F38F530(v1, v0, type metadata accessor for ParameterPromptMap);
  sub_23F3668F4();
  sub_23F3840BC();
  sub_23F362928();
}

void sub_23F5E1D5C(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  char v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  id v29;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = (uint64_t *)(sub_23F617BA0() + 56);
    while (1)
    {
      v6 = *(v5 - 3);
      v7 = *(v5 - 2);
      v9 = *(v5 - 1);
      v8 = *v5;
      v10 = (_QWORD *)*a3;
      sub_23F617BA0();
      sub_23F617BA0();
      v12 = sub_23F3754D4(v6, v7);
      v13 = v10[2];
      v14 = (v11 & 1) == 0;
      if (__OFADD__(v13, v14))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        sub_23F61CC94();
        __break(1u);
        goto LABEL_19;
      }
      v15 = v11;
      if (v10[3] >= v13 + v14)
      {
        if ((a2 & 1) == 0)
        {
          sub_23F35D2E8(&qword_256E6FCB0);
          sub_23F61CA24();
        }
      }
      else
      {
        sub_23F514C04();
        v16 = sub_23F3754D4(v6, v7);
        if ((v15 & 1) != (v17 & 1))
          goto LABEL_18;
        v12 = v16;
      }
      v18 = (_QWORD *)*a3;
      if ((v15 & 1) != 0)
        break;
      v18[(v12 >> 6) + 8] |= 1 << v12;
      v19 = (uint64_t *)(v18[6] + 16 * v12);
      *v19 = v6;
      v19[1] = v7;
      v20 = (_QWORD *)(v18[7] + 16 * v12);
      *v20 = v9;
      v20[1] = v8;
      v21 = v18[2];
      v22 = __OFADD__(v21, 1);
      v23 = v21 + 1;
      if (v22)
        goto LABEL_17;
      v5 += 4;
      v18[2] = v23;
      a2 = 1;
      if (!--v3)
      {
        swift_bridgeObjectRelease_n();
        return;
      }
    }
    v24 = (uint64_t *)(v18[7] + 16 * v12);
    v26 = *v24;
    v25 = v24[1];
    sub_23F5E3B3C();
    v27 = (void *)swift_allocError();
    *v28 = v26;
    v28[1] = v25;
    sub_23F617BA0();
    swift_willThrow();
    v29 = v27;
    sub_23F35D2E8(&qword_256E70370);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
LABEL_19:
    sub_23F61C8E0();
    sub_23F61C280();
    sub_23F61CA00();
    sub_23F61C280();
    sub_23F61CA60();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23F5E205C(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  char v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return swift_bridgeObjectRelease();
  sub_23F617BA0();
  for (i = (uint64_t *)(a1 + 56); ; i += 4)
  {
    v8 = *(i - 3);
    v7 = *(i - 2);
    v9 = *i;
    v29 = *(i - 1);
    v10 = (_QWORD *)*a3;
    sub_23F617BA0();
    swift_retain();
    v12 = sub_23F3754D4(v8, v7);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    if (__OFADD__(v13, v14))
      break;
    v15 = v11;
    if (v10[3] >= v13 + v14)
    {
      if ((a2 & 1) == 0)
      {
        sub_23F35D2E8(&qword_256E7E630);
        sub_23F61CA24();
      }
    }
    else
    {
      sub_23F514FEC();
      v16 = sub_23F3754D4(v8, v7);
      if ((v15 & 1) != (v17 & 1))
        goto LABEL_18;
      v12 = v16;
    }
    v18 = (_QWORD *)*a3;
    if ((v15 & 1) != 0)
    {
      v19 = (uint64_t *)(v18[7] + 16 * v12);
      v21 = *v19;
      v20 = v19[1];
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      v22 = (_QWORD *)(v18[7] + 16 * v12);
      swift_release();
      *v22 = v21;
      v22[1] = v20;
    }
    else
    {
      v18[(v12 >> 6) + 8] |= 1 << v12;
      v23 = (uint64_t *)(v18[6] + 16 * v12);
      *v23 = v8;
      v23[1] = v7;
      v24 = (_QWORD *)(v18[7] + 16 * v12);
      *v24 = v29;
      v24[1] = v9;
      v25 = v18[2];
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        goto LABEL_17;
      v18[2] = v27;
    }
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

void sub_23F5E2244(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  char v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void *v24;
  id v25;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (i = (uint64_t *)(sub_23F617BA0() + 56); ; i += 4)
  {
    v7 = *(i - 3);
    v6 = *(i - 2);
    v9 = *(i - 1);
    v8 = *i;
    v10 = (_QWORD *)*a3;
    sub_23F617BA0();
    swift_retain();
    v12 = sub_23F3754D4(v7, v6);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_23F61CC94();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v11;
    if (v10[3] < v13 + v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_23F35D2E8(&qword_256E7E630);
      sub_23F61CA24();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v19 = (uint64_t *)(v18[6] + 16 * v12);
    *v19 = v7;
    v19[1] = v6;
    v20 = (_QWORD *)(v18[7] + 16 * v12);
    *v20 = v9;
    v20[1] = v8;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_18;
    v18[2] = v23;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_23F514FEC();
  v16 = sub_23F3754D4(v7, v6);
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v12 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v24 = (void *)swift_allocError();
  swift_willThrow();
  v25 = v24;
  sub_23F35D2E8(&qword_256E70370);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_23F61C8E0();
  sub_23F61C280();
  sub_23F61CA00();
  sub_23F61C280();
  sub_23F61CA60();
  __break(1u);
}

uint64_t sub_23F5E2524(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  char v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  __int128 v37;

  sub_23F5E296C(a1, a2, a3, &v37);
  sub_23F617BA0();
  swift_retain();
  v7 = sub_23F5E360C();
  if (v8)
  {
    v11 = v7;
    v12 = v8;
    v13 = v9;
    v14 = v10;
    while (1)
    {
      v15 = (_QWORD *)*a5;
      v17 = sub_23F3754D4(v11, v12);
      v18 = v15[2];
      v19 = (v16 & 1) == 0;
      if (__OFADD__(v18, v19))
        break;
      v20 = v16;
      if (v15[3] >= v18 + v19)
      {
        if ((a4 & 1) == 0)
        {
          sub_23F35D2E8(&qword_256E7E630);
          sub_23F61CA24();
        }
      }
      else
      {
        sub_23F514FEC();
        v21 = sub_23F3754D4(v11, v12);
        if ((v20 & 1) != (v22 & 1))
          goto LABEL_17;
        v17 = v21;
      }
      v23 = (_QWORD *)*a5;
      if ((v20 & 1) != 0)
      {
        v24 = (uint64_t *)(v23[7] + 16 * v17);
        v26 = *v24;
        v25 = v24[1];
        swift_retain();
        swift_bridgeObjectRelease();
        swift_release();
        v27 = (_QWORD *)(v23[7] + 16 * v17);
        swift_release();
        *v27 = v26;
        v27[1] = v25;
      }
      else
      {
        v23[(v17 >> 6) + 8] |= 1 << v17;
        v28 = (uint64_t *)(v23[6] + 16 * v17);
        *v28 = v11;
        v28[1] = v12;
        v29 = (_QWORD *)(v23[7] + 16 * v17);
        *v29 = v13;
        v29[1] = v14;
        v30 = v23[2];
        v31 = __OFADD__(v30, 1);
        v32 = v30 + 1;
        if (v31)
          goto LABEL_16;
        v23[2] = v32;
      }
      v11 = sub_23F5E360C();
      v12 = v33;
      v13 = v34;
      v14 = v35;
      a4 = 1;
      if (!v33)
        goto LABEL_14;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    result = sub_23F61CC94();
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    sub_23F382E18();
    return swift_release();
  }
  return result;
}

uint64_t sub_23F5E274C(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t (**v24)();
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;

  sub_23F35D2E8(&qword_256E78F80);
  result = sub_23F61CA78();
  v3 = (_QWORD *)result;
  v4 = 0;
  v30 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v28 = v6;
  v29 = (unint64_t)(v8 + 63) >> 6;
  v11 = result + 64;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v12 | (v4 << 6); ; i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v30 + 48) + 16 * i);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v30 + 56) + 16 * i);
    v21 = *v20;
    v22 = v20[1];
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v21;
    *(_QWORD *)(result + 24) = v22;
    *(_QWORD *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v23 = (_QWORD *)(v3[6] + 16 * i);
    *v23 = v19;
    v23[1] = v18;
    v24 = (uint64_t (**)())(v3[7] + 16 * i);
    *v24 = sub_23F5E50D0;
    v24[1] = (uint64_t (*)())result;
    v25 = v3[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v27;
    sub_23F617BA0();
    result = sub_23F617BA0();
    if (v10)
      goto LABEL_4;
LABEL_5:
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v14 >= v29)
      return (uint64_t)v3;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    ++v4;
    if (!v15)
    {
      v4 = v14 + 1;
      if (v14 + 1 >= v29)
        return (uint64_t)v3;
      v15 = *(_QWORD *)(v28 + 8 * v4);
      if (!v15)
      {
        v4 = v14 + 2;
        if (v14 + 2 >= v29)
          return (uint64_t)v3;
        v15 = *(_QWORD *)(v28 + 8 * v4);
        if (!v15)
          break;
      }
    }
LABEL_18:
    v10 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
    return (uint64_t)v3;
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v29)
      return (uint64_t)v3;
    v15 = *(_QWORD *)(v28 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23F5E296C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = -1 << *(_BYTE *)(a1 + 32);
  *a4 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64)
    v8 = ~(-1 << -(char)v4);
  else
    v8 = -1;
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

void sub_23F5E29A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F362ABC();
  v4 = v3;
  sub_23F35D2E8(&qword_256E6FAF8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B1590();
  sub_23F35D2E8(&qword_256E6FB68);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3C05DC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F5E5164();
  if (v8)
  {
    sub_23F5E51E8();
LABEL_3:
    v9 = sub_23F61A1D4();
    sub_23F5E5224(v9);
    v10 = sub_23F5E5394();
    v11 = sub_23F5E5144(v10);
    v12 = 0;
LABEL_4:
    v4 = v1;
    goto LABEL_5;
  }
  if (__OFADD__(v0, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  sub_23F5E52F4();
  if (v19 == v20)
  {
    v12 = 1;
    goto LABEL_5;
  }
  if (*(_QWORD *)(v18 + 8 * v17))
  {
    v1 = v4;
LABEL_13:
    sub_23F5E51CC();
    goto LABEL_3;
  }
  sub_23F389B98();
  if (v19 == v20)
  {
    sub_23F5E51BC();
    goto LABEL_5;
  }
  if (*(_QWORD *)(v22 + 8 * v21))
  {
LABEL_17:
    v1 = v4;
    goto LABEL_13;
  }
  sub_23F389B8C();
  if (v19 != v20)
  {
    if (*(_QWORD *)(v24 + 8 * v23))
    {
      v1 = v4;
      goto LABEL_13;
    }
    sub_23F389B74();
    if (v19 == v20)
    {
      sub_23F5E52D4();
      goto LABEL_5;
    }
    if (*(_QWORD *)(v26 + 8 * v25))
      goto LABEL_17;
    sub_23F389B68();
    if (v19 != v20)
    {
      v1 = v4;
      if (*(_QWORD *)(v28 + 8 * v27))
        goto LABEL_13;
      sub_23F5E537C();
      while (v30 < v29)
      {
        if (*(_QWORD *)(v31 + 8 * v30++))
          goto LABEL_13;
      }
LABEL_34:
      sub_23F5E51BC();
      goto LABEL_4;
    }
  }
  sub_23F5E52E4();
LABEL_5:
  v13 = sub_23F5E510C(v11, v12);
  sub_23F5E5218(v13, v14, &qword_256E6FB68);
  sub_23F5E5240();
  if (!v15)
  {
    sub_23F5E5204();
    sub_23F5E5278();
    sub_23F5E5270(v1);
    v2 = 0;
  }
  v16 = sub_23F35D2E8(&qword_256E70390);
  sub_23F36196C(v4, v2, 1, v16);
  sub_23F362948();
}

void sub_23F5E2B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F362ABC();
  v6 = v5;
  sub_23F35D2E8(&qword_256E6FAF0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B1590();
  sub_23F35D2E8(&qword_256E7E658);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3C05DC();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F5E5164();
  if (v10)
  {
    sub_23F5E51E8();
LABEL_3:
    v11 = *(_QWORD *)(v4 + 48);
    v12 = type metadata accessor for ActionResolver.Parameter(0);
    sub_23F38F530(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v3, v2, type metadata accessor for ActionResolver.Parameter);
    v13 = sub_23F5E5394();
    v14 = sub_23F5E5144(v13);
    v15 = 0;
LABEL_4:
    v6 = v1;
    goto LABEL_5;
  }
  if (__OFADD__(v0, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  sub_23F5E52F4();
  if (v22 == v23)
  {
    v15 = 1;
    goto LABEL_5;
  }
  if (*(_QWORD *)(v21 + 8 * v20))
  {
    v1 = v6;
LABEL_13:
    sub_23F5E51CC();
    goto LABEL_3;
  }
  sub_23F389B98();
  if (v22 == v23)
  {
    sub_23F5E51BC();
    goto LABEL_5;
  }
  if (*(_QWORD *)(v25 + 8 * v24))
  {
LABEL_17:
    v1 = v6;
    goto LABEL_13;
  }
  sub_23F389B8C();
  if (v22 != v23)
  {
    if (*(_QWORD *)(v27 + 8 * v26))
    {
      v1 = v6;
      goto LABEL_13;
    }
    sub_23F389B74();
    if (v22 == v23)
    {
      sub_23F5E52D4();
      goto LABEL_5;
    }
    if (*(_QWORD *)(v29 + 8 * v28))
      goto LABEL_17;
    sub_23F389B68();
    if (v22 != v23)
    {
      v1 = v6;
      if (*(_QWORD *)(v31 + 8 * v30))
        goto LABEL_13;
      sub_23F5E537C();
      while (v33 < v32)
      {
        if (*(_QWORD *)(v34 + 8 * v33++))
          goto LABEL_13;
      }
LABEL_34:
      sub_23F5E51BC();
      goto LABEL_4;
    }
  }
  sub_23F5E52E4();
LABEL_5:
  v16 = sub_23F5E510C(v14, v15);
  sub_23F5E5218(v16, v17, &qword_256E7E658);
  sub_23F5E5240();
  if (!v18)
  {
    sub_23F5E5204();
    sub_23F5E5278();
    sub_23F5E5270(v1);
    v3 = 0;
  }
  v19 = sub_23F35D2E8(&qword_256E70360);
  sub_23F36196C(v6, v3, 1, v19);
  sub_23F362948();
}

void sub_23F5E2D50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_23F362ABC();
  v5 = v4;
  v6 = sub_23F35D2E8(&qword_256E753A8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B1F34();
  sub_23F35D2E8(&qword_256E753A0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3C05DC();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F5E536C();
  v11 = *v0;
  v10 = v0[1];
  v13 = v0[2];
  v12 = v0[3];
  v43 = v3;
  if (!v0[4])
  {
    v28 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      return;
    }
    if (v28 >= (uint64_t)((unint64_t)(v13 + 64) >> 6))
    {
      sub_23F5E53C0();
      goto LABEL_4;
    }
    if (*(_QWORD *)(v10 + 8 * v28))
      goto LABEL_10;
    sub_23F389B98();
    if (v32 == v33)
    {
LABEL_29:
      sub_23F5E53C0();
      v12 = v40;
      goto LABEL_4;
    }
    if (!*(_QWORD *)(v10 + 8 * v31))
    {
      sub_23F389B8C();
      if (v32 == v33)
        goto LABEL_30;
      if (*(_QWORD *)(v10 + 8 * v34))
        goto LABEL_10;
      sub_23F389B74();
      if (v32 == v33)
      {
        sub_23F5E53C0();
        v12 = v42;
        goto LABEL_4;
      }
      if (*(_QWORD *)(v10 + 8 * v35))
        goto LABEL_10;
      sub_23F389B68();
      if (v32 == v33)
      {
LABEL_30:
        sub_23F5E53C0();
        v12 = v41;
        goto LABEL_4;
      }
      if (!*(_QWORD *)(v10 + 8 * v36))
      {
        sub_23F5E537C();
        while (v38 < v37)
        {
          if (*(_QWORD *)(v10 + 8 * v38++))
            goto LABEL_10;
        }
        goto LABEL_29;
      }
    }
LABEL_10:
    sub_23F5E5400();
    v46 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v30 << 6);
    v12 = v30;
    goto LABEL_3;
  }
  sub_23F5E5400();
  v46 = (v14 - 1) & v14;
  v15 = __clz(__rbit64(v14)) | (v12 << 6);
LABEL_3:
  v16 = *(_QWORD *)(v11 + 48);
  v17 = sub_23F6184B8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 72) * v15;
  v20 = v16 + v19;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v21(v2, v20, v17);
  v22 = *(_QWORD *)(v11 + 56) + v19;
  v6 = v13;
  v21(v2 + *(int *)(v13 + 48), v22, v17);
  v23 = 0;
  v5 = v10;
  v10 = v1;
  v13 = v44;
  v1 = v45;
LABEL_4:
  v24 = 1;
  v25 = sub_23F36196C(v2, v23, 1, v6);
  *v0 = v11;
  v0[1] = v10;
  v0[2] = v13;
  v0[3] = v12;
  v0[4] = v46;
  sub_23F5E5218(v25, v26, &qword_256E753A0);
  if (sub_23F36195C(v1, 1, v6) != 1)
  {
    sub_23F5E53A0(v1);
    sub_23F5E53CC();
    sub_23F5E5270(v43);
    v24 = 0;
  }
  v27 = sub_23F35D2E8(&qword_256E704E0);
  sub_23F36196C(v5, v24, 1, v27);
  sub_23F362948();
}

void sub_23F5E2FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F362ABC();
  v4 = v3;
  sub_23F35D2E8(&qword_256E79140);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B1590();
  sub_23F35D2E8(&qword_256E7E720);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3C05DC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F5E5164();
  if (v8)
  {
    sub_23F5E51E8();
LABEL_3:
    v9 = sub_23F617000();
    sub_23F5E5224(v9);
    v10 = sub_23F61B5D8();
    v11 = sub_23F5E5144(v10);
    v12 = 0;
LABEL_4:
    v4 = v1;
    goto LABEL_5;
  }
  if (__OFADD__(v0, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  sub_23F5E52F4();
  if (v19 == v20)
  {
    v12 = 1;
    goto LABEL_5;
  }
  if (*(_QWORD *)(v18 + 8 * v17))
  {
    v1 = v4;
LABEL_13:
    sub_23F5E51CC();
    goto LABEL_3;
  }
  sub_23F389B98();
  if (v19 == v20)
  {
    sub_23F5E51BC();
    goto LABEL_5;
  }
  if (*(_QWORD *)(v22 + 8 * v21))
  {
LABEL_17:
    v1 = v4;
    goto LABEL_13;
  }
  sub_23F389B8C();
  if (v19 != v20)
  {
    if (*(_QWORD *)(v24 + 8 * v23))
    {
      v1 = v4;
      goto LABEL_13;
    }
    sub_23F389B74();
    if (v19 == v20)
    {
      sub_23F5E52D4();
      goto LABEL_5;
    }
    if (*(_QWORD *)(v26 + 8 * v25))
      goto LABEL_17;
    sub_23F389B68();
    if (v19 != v20)
    {
      v1 = v4;
      if (*(_QWORD *)(v28 + 8 * v27))
        goto LABEL_13;
      sub_23F5E537C();
      while (v30 < v29)
      {
        if (*(_QWORD *)(v31 + 8 * v30++))
          goto LABEL_13;
      }
LABEL_34:
      sub_23F5E51BC();
      goto LABEL_4;
    }
  }
  sub_23F5E52E4();
LABEL_5:
  v13 = sub_23F5E510C(v11, v12);
  sub_23F5E5218(v13, v14, &qword_256E7E720);
  sub_23F5E5240();
  if (!v15)
  {
    sub_23F5E5204();
    sub_23F5E5278();
    sub_23F5E5270(v1);
    v2 = 0;
  }
  v16 = sub_23F35D2E8(&qword_256E79158);
  sub_23F36196C(v4, v2, 1, v16);
  sub_23F362948();
}

void sub_23F5E319C()
{
  sub_23F5E37C8();
}

void sub_23F5E31C0(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  void (*v25)(_OWORD *);
  _OWORD v26[3];
  _OWORD v27[3];
  __int128 v28;
  _OWORD v29[2];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  if (v1[4])
  {
    sub_23F5E5344();
    v10 = v9 & v8;
    v13 = v12 | (v11 << 6);
LABEL_3:
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v13);
    v16 = *v14;
    v15 = v14[1];
    sub_23F382B64(*(_QWORD *)(v3 + 56) + 32 * v13, (uint64_t)v29);
    *(_QWORD *)&v28 = v16;
    *((_QWORD *)&v28 + 1) = v15;
    sub_23F389CDC();
    goto LABEL_22;
  }
  v17 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return;
  }
  v18 = (unint64_t)(v6 + 64) >> 6;
  if (v17 < v18)
  {
    if (*(_QWORD *)(v4 + 8 * v17))
    {
LABEL_7:
      sub_23F5E5314();
      v10 = v19 & v20;
      v13 = v22 + (v21 << 6);
      v7 = v21;
      goto LABEL_3;
    }
    v7 = v5 + 1;
    if (v5 + 2 < v18)
    {
      if (*(_QWORD *)(v4 + 8 * (v5 + 2)))
        goto LABEL_7;
      v7 = v5 + 2;
      if (v5 + 3 < v18)
      {
        if (*(_QWORD *)(v4 + 8 * (v5 + 3)))
          goto LABEL_7;
        v7 = v5 + 3;
        if (v5 + 4 < v18)
        {
          if (*(_QWORD *)(v4 + 8 * (v5 + 4)))
            goto LABEL_7;
          v7 = v5 + 4;
          if (v5 + 5 < v18)
          {
            if (*(_QWORD *)(v4 + 8 * (v5 + 5)))
              goto LABEL_7;
            v7 = v18 - 1;
            v23 = v5 + 6;
            while (v23 < v18)
            {
              if (*(_QWORD *)(v4 + 8 * v23++))
                goto LABEL_7;
            }
          }
        }
      }
    }
  }
  v10 = 0;
  memset(v29, 0, sizeof(v29));
  v28 = 0u;
LABEL_22:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v10;
  v25 = (void (*)(_OWORD *))v1[5];
  sub_23F3CD9FC((uint64_t)&v28, (uint64_t)v27, &qword_256E7E648);
  if (*((_QWORD *)&v27[0] + 1))
  {
    v26[0] = v27[0];
    v26[1] = v27[1];
    v26[2] = v27[2];
    v25(v26);
    sub_23F39E4B8((uint64_t)v26, &qword_256E73D48);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
}

void sub_23F5E3390()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  int64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;

  sub_23F362ABC();
  v5 = v4;
  v6 = sub_23F35D2E8(&qword_256E74E90);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F362838();
  sub_23F35D2E8(&qword_256E7E650);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3C05DC();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F5E536C();
  v11 = *v1;
  v12 = v1[1];
  v14 = v1[2];
  v13 = v1[3];
  v15 = v13;
  v42 = v0;
  if (v1[4])
  {
    v45 = v2;
    v46 = v1[3];
    v43 = v1[2];
    v44 = v1[1];
    v16 = v5;
    sub_23F5E5344();
    v19 = v18 & v17;
    v22 = v21 | (v20 << 6);
LABEL_3:
    v23 = *(_QWORD *)(v11 + 56);
    v24 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v22);
    v25 = v11;
    v26 = *v24;
    v27 = v24[1];
    v28 = sub_23F6184F4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(&v3[*(int *)(v6 + 48)], v23 + *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72) * v22, v28);
    *(_QWORD *)v3 = v26;
    *((_QWORD *)v3 + 1) = v27;
    sub_23F383CC4((uint64_t)v3, 0);
    v11 = v25;
    v29 = sub_23F617BA0();
    v5 = v16;
    v12 = v44;
    v2 = v45;
    v14 = v43;
    goto LABEL_25;
  }
  v31 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
LABEL_23:
    v15 = v10;
    goto LABEL_24;
  }
  v32 = (unint64_t)(v14 + 64) >> 6;
  if (v31 < v32)
  {
    if (*(_QWORD *)(v12 + 8 * v31))
    {
LABEL_7:
      v43 = v1[2];
      v44 = v1[1];
      v45 = v2;
      v46 = v31;
      v16 = v5;
      sub_23F5E5314();
      v19 = v33 & v34;
      v22 = v36 + (v35 << 6);
      goto LABEL_3;
    }
    v37 = v13 + 2;
    v15 = v13 + 1;
    if (v13 + 2 < v32)
    {
      if (*(_QWORD *)(v12 + 8 * v37))
      {
LABEL_10:
        v31 = v37;
        goto LABEL_7;
      }
      v15 = v13 + 2;
      if (v13 + 3 < v32)
      {
        if (*(_QWORD *)(v12 + 8 * (v13 + 3)))
        {
          v31 = v13 + 3;
          goto LABEL_7;
        }
        v37 = v13 + 4;
        v15 = v13 + 3;
        if (v13 + 4 < v32)
        {
          if (*(_QWORD *)(v12 + 8 * v37))
            goto LABEL_10;
          v31 = v13 + 5;
          v15 = v13 + 4;
          if (v13 + 5 < v32)
          {
            if (*(_QWORD *)(v12 + 8 * v31))
              goto LABEL_7;
            v10 = v32 - 1;
            v38 = v13 + 6;
            while (v38 < v32)
            {
              if (*(_QWORD *)(v12 + 8 * v38++))
              {
                v31 = v38 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  v46 = v15;
  v29 = sub_23F383CC4((uint64_t)v3, 1);
  v19 = 0;
LABEL_25:
  *v1 = v11;
  v1[1] = v12;
  v1[2] = v14;
  v1[3] = v46;
  v1[4] = v19;
  sub_23F5E5218(v29, v30, &qword_256E7E650);
  v40 = 1;
  if (sub_23F36195C(v2, 1, v6) != 1)
  {
    sub_23F5E53A0(v2);
    sub_23F5E53CC();
    sub_23F5E5270(v42);
    v40 = 0;
  }
  v41 = sub_23F35D2E8(&qword_256E74E98);
  sub_23F36196C(v5, v40, 1, v41);
  sub_23F362948();
}

uint64_t sub_23F5E360C()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  _QWORD v22[4];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v6);
    v11 = *v10;
    v12 = v10[1];
    v0[3] = v4;
    v0[4] = v5;
    v13 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v22[0] = v8;
    v22[1] = v9;
    v22[2] = v11;
    v22[3] = v12;
    sub_23F617BA0();
    swift_retain();
    v13(&v21, v22);
    swift_release();
    swift_bridgeObjectRelease();
    return v21;
  }
  v15 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v16 = (unint64_t)(v0[2] + 64) >> 6;
    if (v15 < v16)
    {
      v17 = v0[1];
      v18 = *(_QWORD *)(v17 + 8 * v15);
      if (v18)
      {
LABEL_7:
        v5 = (v18 - 1) & v18;
        v6 = __clz(__rbit64(v18)) + (v15 << 6);
        v4 = v15;
        goto LABEL_3;
      }
      v19 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v16)
      {
        v18 = *(_QWORD *)(v17 + 8 * v19);
        if (v18)
        {
LABEL_10:
          v15 = v19;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v16)
        {
          v18 = *(_QWORD *)(v17 + 8 * (v3 + 3));
          if (v18)
          {
            v15 = v3 + 3;
            goto LABEL_7;
          }
          v19 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v16)
          {
            v18 = *(_QWORD *)(v17 + 8 * v19);
            if (v18)
              goto LABEL_10;
            v15 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v16)
            {
              v18 = *(_QWORD *)(v17 + 8 * v15);
              if (v18)
                goto LABEL_7;
              v4 = v16 - 1;
              v20 = v3 + 6;
              while (v20 < v16)
              {
                v18 = *(_QWORD *)(v17 + 8 * v20++);
                if (v18)
                {
                  v15 = v20 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

void sub_23F5E37A4()
{
  sub_23F5E37C8();
}

void sub_23F5E37C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t (*v58)(_QWORD);
  uint64_t *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v61 = sub_23F35D2E8(v5);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F38F964();
  v12 = v11 - v10;
  sub_23F35D2E8(v4);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F362AAC();
  v16 = (uint64_t (*)(_QWORD))(v14 - v15);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (uint64_t *)((char *)&v54 - v18);
  v20 = *v0;
  v21 = v0[1];
  v23 = v0[2];
  v22 = v0[3];
  v24 = v22;
  v25 = v0[4];
  v55 = v12;
  v56 = v6;
  v62 = v21;
  v63 = v23;
  if (!v25)
  {
    v40 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      return;
    }
    v41 = (unint64_t)(v23 + 64) >> 6;
    if (v40 < v41)
    {
      if (*(_QWORD *)(v21 + 8 * v40))
      {
LABEL_7:
        sub_23F5E53AC();
        sub_23F5E5314();
        v29 = v42 & v43;
        v32 = v45 + (v44 << 6);
        v24 = v44;
        goto LABEL_3;
      }
      v24 = v22 + 1;
      if (v22 + 2 < v41)
      {
        if (*(_QWORD *)(v21 + 8 * (v22 + 2)))
          goto LABEL_7;
        v24 = v22 + 2;
        if (v22 + 3 < v41)
        {
          if (*(_QWORD *)(v21 + 8 * (v22 + 3)))
            goto LABEL_7;
          v24 = v22 + 3;
          if (v22 + 4 < v41)
          {
            if (*(_QWORD *)(v21 + 8 * (v22 + 4)))
              goto LABEL_7;
            v24 = v22 + 4;
            if (v22 + 5 < v41)
            {
              if (*(_QWORD *)(v21 + 8 * (v22 + 5)))
                goto LABEL_7;
              v24 = v41 - 1;
              v46 = v22 + 6;
              while (v46 < v41)
              {
                if (*(_QWORD *)(v21 + 8 * v46++))
                  goto LABEL_7;
              }
            }
          }
        }
      }
    }
    v39 = v61;
    v37 = v20;
    sub_23F36196C((uint64_t)v19, 1, 1, v61);
    v29 = 0;
    goto LABEL_22;
  }
  sub_23F5E53AC();
  sub_23F5E5344();
  v29 = v28 & v27;
  v32 = v31 | (v30 << 6);
LABEL_3:
  v33 = *(_QWORD *)(v26 + 56);
  v34 = (uint64_t *)(*(_QWORD *)(v26 + 48) + 16 * v32);
  v36 = *v34;
  v35 = v34[1];
  v37 = v26;
  v38 = v33 + *(_QWORD *)(*(_QWORD *)(v16(0) - 8) + 72) * v32;
  v39 = v61;
  sub_23F38F530(v38, (uint64_t)v19 + *(int *)(v61 + 48), v16);
  *v19 = v36;
  v19[1] = v35;
  sub_23F36196C((uint64_t)v19, 0, 1, v39);
  sub_23F389CDC();
  v8 = v57;
  v16 = v58;
  v4 = v59;
  v2 = v60;
LABEL_22:
  v48 = v62;
  *v0 = v37;
  v0[1] = v48;
  v0[2] = v63;
  v0[3] = v24;
  v0[4] = v29;
  v49 = (void (*)(uint64_t))v0[5];
  sub_23F3CD9FC((uint64_t)v19, (uint64_t)v16, v4);
  v50 = 1;
  if (sub_23F36195C((uint64_t)v16, 1, v39) != 1)
  {
    v52 = v55;
    v51 = v56;
    sub_23F3CD9FC((uint64_t)v16, v55, v56);
    v49(v52);
    sub_23F39E4B8(v52, v51);
    v50 = 0;
  }
  v53 = sub_23F35D2E8(v2);
  sub_23F36196C(v8, v50, 1, v53);
  sub_23F362948();
}

uint64_t sub_23F5E3A70()
{
  return sub_23F5E1A5C();
}

__n128 sub_23F5E3A8C@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3;
  __n128 result;
  unint64_t v5;
  __n128 v6;

  v3 = sub_23F5E1CE4(&v6, *a1, a1[1], a1[2], a1[3]);
  result = v6;
  a2->n128_u64[0] = v3;
  a2->n128_u64[1] = v5;
  a2[1] = result;
  return result;
}

uint64_t sub_23F5E3ACC()
{
  return sub_23F5E1AB8();
}

uint64_t sub_23F5E3AE8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F5E3B0C()
{
  return sub_23F5E3ACC();
}

uint64_t sub_23F5E3B24()
{
  return sub_23F5E3A70();
}

unint64_t sub_23F5E3B3C()
{
  unint64_t result;

  result = qword_256E7E640;
  if (!qword_256E7E640)
  {
    result = MEMORY[0x242670A44](&unk_23F631154, &unk_250FDF920);
    atomic_store(result, (unint64_t *)&qword_256E7E640);
  }
  return result;
}

void _s12DuplicateKeyVMa()
{
  sub_23F362C18();
}

void _s19FormattedParametersVMa()
{
  sub_23F362C18();
}

void _s19FormattedParametersVMa_0()
{
  sub_23F362C18();
}

void _s19FormattedParametersVMa_1()
{
  sub_23F362C18();
}

void _s19FormattedParametersVMa_2()
{
  sub_23F362C18();
}

void _s19FormattedParametersVMa_3()
{
  sub_23F362C18();
}

void _s19FormattedParametersVMa_4()
{
  sub_23F362C18();
}

void type metadata accessor for SuccessFormattedParameters()
{
  sub_23F362C18();
}

void type metadata accessor for ErrorFormattedParameters()
{
  sub_23F362C18();
}

void _s19FormattedParametersVMa_5()
{
  sub_23F362C18();
}

_QWORD *sub_23F5E3C04(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_23F5E3C30()
{
  return swift_release();
}

_QWORD *sub_23F5E3C38(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_23F5E3C70(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

void type metadata accessor for ParameterEncodable()
{
  sub_23F362C18();
}

unint64_t sub_23F5E3CAC()
{
  unint64_t result;

  result = qword_256E7E668;
  if (!qword_256E7E668)
  {
    result = MEMORY[0x242670A44](&unk_23F631DE8, &_s19FormattedParametersV10CodingKeysON_5);
    atomic_store(result, (unint64_t *)&qword_256E7E668);
  }
  return result;
}

unint64_t sub_23F5E3CE8()
{
  unint64_t result;

  result = qword_256E7E678;
  if (!qword_256E7E678)
  {
    result = MEMORY[0x242670A44](&unk_23F631D98, &type metadata for ErrorFormattedParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E678);
  }
  return result;
}

unint64_t sub_23F5E3D24()
{
  unint64_t result;

  result = qword_256E7E680;
  if (!qword_256E7E680)
  {
    result = MEMORY[0x242670A44](&unk_23F631D70, &unk_250FE0370);
    atomic_store(result, (unint64_t *)&qword_256E7E680);
  }
  return result;
}

unint64_t sub_23F5E3D60()
{
  unint64_t result;

  result = qword_256E7E690;
  if (!qword_256E7E690)
  {
    result = MEMORY[0x242670A44](&unk_23F631D20, &type metadata for SuccessFormattedParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E690);
  }
  return result;
}

unint64_t sub_23F5E3D9C()
{
  unint64_t result;

  result = qword_256E7E698;
  if (!qword_256E7E698)
  {
    result = MEMORY[0x242670A44](&unk_23F631CF8, &unk_250FE02F0);
    atomic_store(result, (unint64_t *)&qword_256E7E698);
  }
  return result;
}

unint64_t sub_23F5E3DD8()
{
  unint64_t result;

  result = qword_256E7E6A8;
  if (!qword_256E7E6A8)
  {
    result = MEMORY[0x242670A44](&unk_23F631CA8, &_s19FormattedParametersV10CodingKeysON_4);
    atomic_store(result, (unint64_t *)&qword_256E7E6A8);
  }
  return result;
}

unint64_t sub_23F5E3E14()
{
  unint64_t result;

  result = qword_256E7E6B0;
  if (!qword_256E7E6B0)
  {
    result = MEMORY[0x242670A44](&unk_23F631C80, &unk_250FE02C8);
    atomic_store(result, (unint64_t *)&qword_256E7E6B0);
  }
  return result;
}

unint64_t sub_23F5E3E50()
{
  unint64_t result;

  result = qword_256E7E6C0;
  if (!qword_256E7E6C0)
  {
    result = MEMORY[0x242670A44](&unk_23F631C30, &_s19FormattedParametersV10CodingKeysON_3);
    atomic_store(result, (unint64_t *)&qword_256E7E6C0);
  }
  return result;
}

unint64_t sub_23F5E3E8C()
{
  unint64_t result;

  result = qword_256E7E6C8;
  if (!qword_256E7E6C8)
  {
    result = MEMORY[0x242670A44](&unk_23F631C08, &unk_250FE02A0);
    atomic_store(result, (unint64_t *)&qword_256E7E6C8);
  }
  return result;
}

unint64_t sub_23F5E3EC8()
{
  unint64_t result;

  result = qword_256E7E6D8;
  if (!qword_256E7E6D8)
  {
    result = MEMORY[0x242670A44](&unk_23F631BB8, &_s19FormattedParametersV10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_256E7E6D8);
  }
  return result;
}

unint64_t sub_23F5E3F04()
{
  unint64_t result;

  result = qword_256E7E6E8;
  if (!qword_256E7E6E8)
  {
    result = MEMORY[0x242670A44](&unk_23F631B68, &_s19FormattedParametersV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_256E7E6E8);
  }
  return result;
}

unint64_t sub_23F5E3F40()
{
  unint64_t result;

  result = qword_256E7E6F0;
  if (!qword_256E7E6F0)
  {
    result = MEMORY[0x242670A44](&unk_23F631B40, &unk_250FE0220);
    atomic_store(result, (unint64_t *)&qword_256E7E6F0);
  }
  return result;
}

unint64_t sub_23F5E3F7C()
{
  unint64_t result;

  result = qword_256E7E700;
  if (!qword_256E7E700)
  {
    result = MEMORY[0x242670A44](&unk_23F631AF0, &_s19FormattedParametersV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_256E7E700);
  }
  return result;
}

unint64_t sub_23F5E3FB8()
{
  unint64_t result;

  result = qword_256E7E708;
  if (!qword_256E7E708)
  {
    result = MEMORY[0x242670A44](&unk_23F631AC8, &unk_250FE01F8);
    atomic_store(result, (unint64_t *)&qword_256E7E708);
  }
  return result;
}

unint64_t sub_23F5E3FF4()
{
  unint64_t result;

  result = qword_256E7E718;
  if (!qword_256E7E718)
  {
    result = MEMORY[0x242670A44](&unk_23F631A78, &_s19FormattedParametersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E718);
  }
  return result;
}

ValueMetadata *_s19FormattedParametersV10CodingKeysOMa()
{
  return &_s19FormattedParametersV10CodingKeysON;
}

ValueMetadata *_s19FormattedParametersV10CodingKeysOMa_0()
{
  return &_s19FormattedParametersV10CodingKeysON_0;
}

ValueMetadata *_s19FormattedParametersV10CodingKeysOMa_1()
{
  return &_s19FormattedParametersV10CodingKeysON_1;
}

ValueMetadata *_s19FormattedParametersV10CodingKeysOMa_2()
{
  return &_s19FormattedParametersV10CodingKeysON_2;
}

ValueMetadata *_s19FormattedParametersV10CodingKeysOMa_3()
{
  return &_s19FormattedParametersV10CodingKeysON_3;
}

ValueMetadata *_s19FormattedParametersV10CodingKeysOMa_4()
{
  return &_s19FormattedParametersV10CodingKeysON_4;
}

ValueMetadata *type metadata accessor for SuccessFormattedParameters.CodingKeys()
{
  return &type metadata for SuccessFormattedParameters.CodingKeys;
}

ValueMetadata *type metadata accessor for ErrorFormattedParameters.CodingKeys()
{
  return &type metadata for ErrorFormattedParameters.CodingKeys;
}

ValueMetadata *_s19FormattedParametersV10CodingKeysOMa_5()
{
  return &_s19FormattedParametersV10CodingKeysON_5;
}

void _s13ConfirmActionVMa()
{
  sub_23F362C18();
}

void _s12ConfirmValueVMa()
{
  sub_23F362C18();
}

uint64_t sub_23F5E40DC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F529CB8(a1, a2);
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(v4 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v2 + 16);
  sub_23F617BA0();
  sub_23F362D18();
  return v3;
}

uint64_t sub_23F5E4130(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_23F5E5388(result, a2);
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      return sub_23F5E5388(result, a2);
  }
  return result;
}

void _s18DisambiguateValuesVMa()
{
  sub_23F362C18();
}

void _s18DisambiguateValuesVMa_0()
{
  sub_23F362C18();
}

void type metadata accessor for SuccessFormattedParameters.DescribeOutput()
{
  sub_23F362C18();
}

void sub_23F5E418C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  sub_23F362984();
  sub_23F362928();
}

uint64_t sub_23F5E41C4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_23F5E5388(result, a2);
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      return sub_23F5E5388(result, a2);
  }
  return result;
}

void type metadata accessor for ErrorFormattedParameters.DescribeError()
{
  sub_23F362C18();
}

unint64_t sub_23F5E4208()
{
  unint64_t result;

  result = qword_256E7E728;
  if (!qword_256E7E728)
  {
    result = MEMORY[0x242670A44](&unk_23F631490, &_s19FormattedParametersV10CodingKeysON_5);
    atomic_store(result, (unint64_t *)&qword_256E7E728);
  }
  return result;
}

unint64_t sub_23F5E4248()
{
  unint64_t result;

  result = qword_256E7E730;
  if (!qword_256E7E730)
  {
    result = MEMORY[0x242670A44](&unk_23F631548, &type metadata for ErrorFormattedParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E730);
  }
  return result;
}

unint64_t sub_23F5E4288()
{
  unint64_t result;

  result = qword_256E7E738;
  if (!qword_256E7E738)
  {
    result = MEMORY[0x242670A44](&unk_23F631600, &type metadata for SuccessFormattedParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E738);
  }
  return result;
}

unint64_t sub_23F5E42C8()
{
  unint64_t result;

  result = qword_256E7E740;
  if (!qword_256E7E740)
  {
    result = MEMORY[0x242670A44](&unk_23F6316B8, &_s19FormattedParametersV10CodingKeysON_4);
    atomic_store(result, (unint64_t *)&qword_256E7E740);
  }
  return result;
}

unint64_t sub_23F5E4308()
{
  unint64_t result;

  result = qword_256E7E748;
  if (!qword_256E7E748)
  {
    result = MEMORY[0x242670A44](&unk_23F631770, &_s19FormattedParametersV10CodingKeysON_3);
    atomic_store(result, (unint64_t *)&qword_256E7E748);
  }
  return result;
}

unint64_t sub_23F5E4348()
{
  unint64_t result;

  result = qword_256E7E750;
  if (!qword_256E7E750)
  {
    result = MEMORY[0x242670A44](&unk_23F631828, &_s19FormattedParametersV10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_256E7E750);
  }
  return result;
}

unint64_t sub_23F5E4388()
{
  unint64_t result;

  result = qword_256E7E758;
  if (!qword_256E7E758)
  {
    result = MEMORY[0x242670A44](&unk_23F6318E0, &_s19FormattedParametersV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_256E7E758);
  }
  return result;
}

unint64_t sub_23F5E43C8()
{
  unint64_t result;

  result = qword_256E7E760;
  if (!qword_256E7E760)
  {
    result = MEMORY[0x242670A44](&unk_23F631998, &_s19FormattedParametersV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_256E7E760);
  }
  return result;
}

unint64_t sub_23F5E4408()
{
  unint64_t result;

  result = qword_256E7E768;
  if (!qword_256E7E768)
  {
    result = MEMORY[0x242670A44](&unk_23F631A50, &_s19FormattedParametersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E768);
  }
  return result;
}

unint64_t sub_23F5E4448()
{
  unint64_t result;

  result = qword_256E7E770;
  if (!qword_256E7E770)
  {
    result = MEMORY[0x242670A44](&unk_23F6319C0, &_s19FormattedParametersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E770);
  }
  return result;
}

unint64_t sub_23F5E4488()
{
  unint64_t result;

  result = qword_256E7E778;
  if (!qword_256E7E778)
  {
    result = MEMORY[0x242670A44](&unk_23F6319E8, &_s19FormattedParametersV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E778);
  }
  return result;
}

unint64_t sub_23F5E44C8()
{
  unint64_t result;

  result = qword_256E7E780;
  if (!qword_256E7E780)
  {
    result = MEMORY[0x242670A44](&unk_23F631908, &_s19FormattedParametersV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_256E7E780);
  }
  return result;
}

unint64_t sub_23F5E4508()
{
  unint64_t result;

  result = qword_256E7E788;
  if (!qword_256E7E788)
  {
    result = MEMORY[0x242670A44](&unk_23F631930, &_s19FormattedParametersV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_256E7E788);
  }
  return result;
}

unint64_t sub_23F5E4548()
{
  unint64_t result;

  result = qword_256E7E790;
  if (!qword_256E7E790)
  {
    result = MEMORY[0x242670A44](&unk_23F631850, &_s19FormattedParametersV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_256E7E790);
  }
  return result;
}

unint64_t sub_23F5E4588()
{
  unint64_t result;

  result = qword_256E7E798;
  if (!qword_256E7E798)
  {
    result = MEMORY[0x242670A44](&unk_23F631878, &_s19FormattedParametersV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_256E7E798);
  }
  return result;
}

unint64_t sub_23F5E45C8()
{
  unint64_t result;

  result = qword_256E7E7A0;
  if (!qword_256E7E7A0)
  {
    result = MEMORY[0x242670A44](&unk_23F631798, &_s19FormattedParametersV10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_256E7E7A0);
  }
  return result;
}

unint64_t sub_23F5E4608()
{
  unint64_t result;

  result = qword_256E7E7A8;
  if (!qword_256E7E7A8)
  {
    result = MEMORY[0x242670A44](&unk_23F6317C0, &_s19FormattedParametersV10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_256E7E7A8);
  }
  return result;
}

unint64_t sub_23F5E4648()
{
  unint64_t result;

  result = qword_256E7E7B0;
  if (!qword_256E7E7B0)
  {
    result = MEMORY[0x242670A44](&unk_23F6316E0, &_s19FormattedParametersV10CodingKeysON_3);
    atomic_store(result, (unint64_t *)&qword_256E7E7B0);
  }
  return result;
}

unint64_t sub_23F5E4688()
{
  unint64_t result;

  result = qword_256E7E7B8;
  if (!qword_256E7E7B8)
  {
    result = MEMORY[0x242670A44](&unk_23F631708, &_s19FormattedParametersV10CodingKeysON_3);
    atomic_store(result, (unint64_t *)&qword_256E7E7B8);
  }
  return result;
}

unint64_t sub_23F5E46C8()
{
  unint64_t result;

  result = qword_256E7E7C0;
  if (!qword_256E7E7C0)
  {
    result = MEMORY[0x242670A44](&unk_23F631628, &_s19FormattedParametersV10CodingKeysON_4);
    atomic_store(result, (unint64_t *)&qword_256E7E7C0);
  }
  return result;
}

unint64_t sub_23F5E4708()
{
  unint64_t result;

  result = qword_256E7E7C8;
  if (!qword_256E7E7C8)
  {
    result = MEMORY[0x242670A44](&unk_23F631650, &_s19FormattedParametersV10CodingKeysON_4);
    atomic_store(result, (unint64_t *)&qword_256E7E7C8);
  }
  return result;
}

unint64_t sub_23F5E4748()
{
  unint64_t result;

  result = qword_256E7E7D0;
  if (!qword_256E7E7D0)
  {
    result = MEMORY[0x242670A44](&unk_23F631570, &type metadata for SuccessFormattedParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E7D0);
  }
  return result;
}

unint64_t sub_23F5E4788()
{
  unint64_t result;

  result = qword_256E7E7D8;
  if (!qword_256E7E7D8)
  {
    result = MEMORY[0x242670A44](&unk_23F631598, &type metadata for SuccessFormattedParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E7D8);
  }
  return result;
}

unint64_t sub_23F5E47C8()
{
  unint64_t result;

  result = qword_256E7E7E0;
  if (!qword_256E7E7E0)
  {
    result = MEMORY[0x242670A44](&unk_23F6314B8, &type metadata for ErrorFormattedParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E7E0);
  }
  return result;
}

unint64_t sub_23F5E4808()
{
  unint64_t result;

  result = qword_256E7E7E8;
  if (!qword_256E7E7E8)
  {
    result = MEMORY[0x242670A44](&unk_23F6314E0, &type metadata for ErrorFormattedParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E7E8);
  }
  return result;
}

unint64_t sub_23F5E4848()
{
  unint64_t result;

  result = qword_256E7E7F0;
  if (!qword_256E7E7F0)
  {
    result = MEMORY[0x242670A44](&unk_23F631400, &_s19FormattedParametersV10CodingKeysON_5);
    atomic_store(result, (unint64_t *)&qword_256E7E7F0);
  }
  return result;
}

unint64_t sub_23F5E4888()
{
  unint64_t result;

  result = qword_256E7E7F8;
  if (!qword_256E7E7F8)
  {
    result = MEMORY[0x242670A44](&unk_23F631428, &_s19FormattedParametersV10CodingKeysON_5);
    atomic_store(result, (unint64_t *)&qword_256E7E7F8);
  }
  return result;
}

unint64_t sub_23F5E48C4()
{
  unint64_t result;

  result = qword_256E7E808;
  if (!qword_256E7E808)
  {
    result = MEMORY[0x242670A44](&unk_23F632418, &type metadata for ErrorFormattedParameters.DescribeError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E808);
  }
  return result;
}

unint64_t sub_23F5E4900()
{
  unint64_t result;

  result = qword_256E7E818;
  if (!qword_256E7E818)
  {
    result = MEMORY[0x242670A44](&unk_23F6323C8, &type metadata for SuccessFormattedParameters.DescribeOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E818);
  }
  return result;
}

unint64_t sub_23F5E493C()
{
  unint64_t result;

  result = qword_256E7E828;
  if (!qword_256E7E828)
  {
    result = MEMORY[0x242670A44](&unk_23F632378, &_s18DisambiguateValuesV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_256E7E828);
  }
  return result;
}

unint64_t sub_23F5E4978()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256E78160;
  if (!qword_256E78160)
  {
    v1 = sub_23F35EB74(&qword_256E70580);
    v2 = MEMORY[0x24BEE0D08];
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256E78160);
  }
  return result;
}

unint64_t sub_23F5E49D4()
{
  unint64_t result;

  result = qword_256E7E838;
  if (!qword_256E7E838)
  {
    result = MEMORY[0x242670A44](&unk_23F632328, &_s18DisambiguateValuesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E838);
  }
  return result;
}

unint64_t sub_23F5E4A10()
{
  unint64_t result;

  result = qword_256E7E848;
  if (!qword_256E7E848)
  {
    result = MEMORY[0x242670A44](&unk_23F6322D8, &_s12ConfirmValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E848);
  }
  return result;
}

unint64_t sub_23F5E4A4C()
{
  unint64_t result;

  result = qword_256E7E858;
  if (!qword_256E7E858)
  {
    result = MEMORY[0x242670A44](&unk_23F632288, &_s13ConfirmActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E858);
  }
  return result;
}

ValueMetadata *_s13ConfirmActionV10CodingKeysOMa()
{
  return &_s13ConfirmActionV10CodingKeysON;
}

ValueMetadata *_s12ConfirmValueV10CodingKeysOMa()
{
  return &_s12ConfirmValueV10CodingKeysON;
}

uint64_t _s18DisambiguateValuesV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F5E4AF4 + 4 * byte_23F630F65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F5E4B28 + 4 * byte_23F630F60[v4]))();
}

uint64_t sub_23F5E4B28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5E4B30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5E4B38);
  return result;
}

uint64_t sub_23F5E4B44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5E4B4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F5E4B50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5E4B58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18DisambiguateValuesV10CodingKeysOMa()
{
  return &_s18DisambiguateValuesV10CodingKeysON;
}

ValueMetadata *_s18DisambiguateValuesV10CodingKeysOMa_0()
{
  return &_s18DisambiguateValuesV10CodingKeysON_0;
}

ValueMetadata *type metadata accessor for SuccessFormattedParameters.DescribeOutput.CodingKeys()
{
  return &type metadata for SuccessFormattedParameters.DescribeOutput.CodingKeys;
}

uint64_t _s19FormattedParametersV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F5E4BD4 + 4 * byte_23F630F6A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F5E4BF4 + 4 * byte_23F630F6F[v4]))();
}

_BYTE *sub_23F5E4BD4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F5E4BF4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F5E4BFC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F5E4C04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F5E4C0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F5E4C14(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ErrorFormattedParameters.DescribeError.CodingKeys()
{
  return &type metadata for ErrorFormattedParameters.DescribeError.CodingKeys;
}

unint64_t sub_23F5E4C34()
{
  unint64_t result;

  result = qword_256E7E860;
  if (!qword_256E7E860)
  {
    result = MEMORY[0x242670A44](&unk_23F631EC8, &type metadata for ErrorFormattedParameters.DescribeError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E860);
  }
  return result;
}

unint64_t sub_23F5E4C74()
{
  unint64_t result;

  result = qword_256E7E868;
  if (!qword_256E7E868)
  {
    result = MEMORY[0x242670A44](&unk_23F631F80, &type metadata for SuccessFormattedParameters.DescribeOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E868);
  }
  return result;
}

unint64_t sub_23F5E4CB4()
{
  unint64_t result;

  result = qword_256E7E870;
  if (!qword_256E7E870)
  {
    result = MEMORY[0x242670A44](&unk_23F632038, &_s18DisambiguateValuesV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_256E7E870);
  }
  return result;
}

unint64_t sub_23F5E4CF4()
{
  unint64_t result;

  result = qword_256E7E878;
  if (!qword_256E7E878)
  {
    result = MEMORY[0x242670A44](&unk_23F6320F0, &_s18DisambiguateValuesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E878);
  }
  return result;
}

unint64_t sub_23F5E4D34()
{
  unint64_t result;

  result = qword_256E7E880;
  if (!qword_256E7E880)
  {
    result = MEMORY[0x242670A44](&unk_23F6321A8, &_s12ConfirmValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E880);
  }
  return result;
}

unint64_t sub_23F5E4D74()
{
  unint64_t result;

  result = qword_256E7E888;
  if (!qword_256E7E888)
  {
    result = MEMORY[0x242670A44](&unk_23F632260, &_s13ConfirmActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E888);
  }
  return result;
}

unint64_t sub_23F5E4DB4()
{
  unint64_t result;

  result = qword_256E7E890;
  if (!qword_256E7E890)
  {
    result = MEMORY[0x242670A44](&unk_23F6321D0, &_s13ConfirmActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E890);
  }
  return result;
}

unint64_t sub_23F5E4DF4()
{
  unint64_t result;

  result = qword_256E7E898;
  if (!qword_256E7E898)
  {
    result = MEMORY[0x242670A44](&unk_23F6321F8, &_s13ConfirmActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E898);
  }
  return result;
}

unint64_t sub_23F5E4E34()
{
  unint64_t result;

  result = qword_256E7E8A0;
  if (!qword_256E7E8A0)
  {
    result = MEMORY[0x242670A44](&unk_23F632118, &_s12ConfirmValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E8A0);
  }
  return result;
}

unint64_t sub_23F5E4E74()
{
  unint64_t result;

  result = qword_256E7E8A8;
  if (!qword_256E7E8A8)
  {
    result = MEMORY[0x242670A44](&unk_23F632140, &_s12ConfirmValueV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E8A8);
  }
  return result;
}

unint64_t sub_23F5E4EB4()
{
  unint64_t result;

  result = qword_256E7E8B0;
  if (!qword_256E7E8B0)
  {
    result = MEMORY[0x242670A44](&unk_23F632060, &_s18DisambiguateValuesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E8B0);
  }
  return result;
}

unint64_t sub_23F5E4EF4()
{
  unint64_t result;

  result = qword_256E7E8B8;
  if (!qword_256E7E8B8)
  {
    result = MEMORY[0x242670A44](&unk_23F632088, &_s18DisambiguateValuesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E7E8B8);
  }
  return result;
}

unint64_t sub_23F5E4F34()
{
  unint64_t result;

  result = qword_256E7E8C0;
  if (!qword_256E7E8C0)
  {
    result = MEMORY[0x242670A44](&unk_23F631FA8, &_s18DisambiguateValuesV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_256E7E8C0);
  }
  return result;
}

unint64_t sub_23F5E4F74()
{
  unint64_t result;

  result = qword_256E7E8C8;
  if (!qword_256E7E8C8)
  {
    result = MEMORY[0x242670A44](&unk_23F631FD0, &_s18DisambiguateValuesV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_256E7E8C8);
  }
  return result;
}

unint64_t sub_23F5E4FB4()
{
  unint64_t result;

  result = qword_256E7E8D0;
  if (!qword_256E7E8D0)
  {
    result = MEMORY[0x242670A44](&unk_23F631EF0, &type metadata for SuccessFormattedParameters.DescribeOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E8D0);
  }
  return result;
}

unint64_t sub_23F5E4FF4()
{
  unint64_t result;

  result = qword_256E7E8D8;
  if (!qword_256E7E8D8)
  {
    result = MEMORY[0x242670A44](&unk_23F631F18, &type metadata for SuccessFormattedParameters.DescribeOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E8D8);
  }
  return result;
}

unint64_t sub_23F5E5034()
{
  unint64_t result;

  result = qword_256E7E8E0;
  if (!qword_256E7E8E0)
  {
    result = MEMORY[0x242670A44](&unk_23F631E38, &type metadata for ErrorFormattedParameters.DescribeError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E8E0);
  }
  return result;
}

unint64_t sub_23F5E5074()
{
  unint64_t result;

  result = qword_256E7E8E8;
  if (!qword_256E7E8E8)
  {
    result = MEMORY[0x242670A44](&unk_23F631E60, &type metadata for ErrorFormattedParameters.DescribeError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7E8E8);
  }
  return result;
}

uint64_t sub_23F5E50D0()
{
  return sub_23F5E3B0C();
}

_QWORD *sub_23F5E50EC()
{
  _QWORD *v0;

  return sub_23F35EA9C(v0, v0[3]);
}

uint64_t sub_23F5E510C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  result = sub_23F36196C(v5, a2, 1, v4);
  v10 = *(_QWORD *)(v8 - 88);
  *v3 = v6;
  v3[1] = v10;
  v3[2] = *(_QWORD *)(v8 - 96);
  v3[3] = v2;
  v3[4] = v7;
  return result;
}

uint64_t sub_23F5E5144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2 + *(int *)(v1 + 48), v4 + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72) * v3, a1);
}

void sub_23F5E5164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v2 - 104) = v1;
  *(_QWORD *)(v2 - 96) = v4;
  *(_QWORD *)(v2 - 88) = v3;
}

uint64_t sub_23F5E5188()
{
  return sub_23F61CBE0();
}

uint64_t sub_23F5E519C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F5E51B0()
{
  return sub_23F61CBE0();
}

void sub_23F5E5204()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F3CD9FC(v1, *(_QWORD *)(v2 - 104), v0);
}

void sub_23F5E5218(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F3CD9FC(v4, v3, a3);
}

uint64_t sub_23F5E5224(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v3 + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72) * v2, a1);
}

uint64_t sub_23F5E5240()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36195C(v1, 1, v0);
}

void sub_23F5E5270(uint64_t a1)
{
  uint64_t *v1;

  sub_23F39E4B8(a1, v1);
}

uint64_t sub_23F5E5278()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  return v0(v1);
}

uint64_t sub_23F5E5284@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F5E5290()
{
  return sub_23F61CD90();
}

uint64_t sub_23F5E529C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t sub_23F5E52B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F5E52C4()
{
  return sub_23F61C790();
}

uint64_t sub_23F5E5324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_23F5E5334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F5E5354()
{
  return 0;
}

uint64_t sub_23F5E5388(uint64_t result, int a2)
{
  *(_QWORD *)(result + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23F5E5394()
{
  return sub_23F61B404();
}

void sub_23F5E53A0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_23F3CD9FC(a1, v2, v1);
}

void sub_23F5E53AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 128) = v2;
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 136) = v0;
}

void sub_23F5E53C0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 88) = 0;
}

uint64_t sub_23F5E53CC()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  return v0(v1);
}

uint64_t sub_23F5E53D8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F5E53E4()
{
  return sub_23F61BBA8();
}

void sub_23F5E53EC(uint64_t a1)
{
  sub_23F5DFC90(a1);
}

uint64_t sub_23F5E53F4()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

void sub_23F5E5400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = v0;
  *(_QWORD *)(v2 - 96) = v1;
}

uint64_t destroy for PromptRenderer(uint64_t a1)
{
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
}

_OWORD *initializeWithCopy for PromptRenderer(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  v7 = a2[9];
  a1[9] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  v8 = *(_OWORD *)((char *)a2 + 184);
  *(_OWORD *)((char *)a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 10), (uint64_t)(a2 + 10));
  return a1;
}

uint64_t *assignWithCopy for PromptRenderer(uint64_t *a1, uint64_t *a2)
{
  sub_23F361AD0(a1, a2);
  sub_23F361AD0(a1 + 5, a2 + 5);
  sub_23F361AD0(a1 + 10, a2 + 10);
  sub_23F361AD0(a1 + 15, a2 + 15);
  sub_23F361AD0(a1 + 20, a2 + 20);
  return a1;
}

uint64_t assignWithTake for PromptRenderer(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  return a1;
}

void type metadata accessor for PromptRenderer()
{
  sub_23F362C18();
}

uint64_t sub_23F5E5618(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F5E5664 + 4 * byte_23F632475[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F5E5698 + 4 * byte_23F632470[v4]))();
}

uint64_t sub_23F5E5698(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5E56A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5E56A8);
  return result;
}

uint64_t sub_23F5E56B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5E56BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F5E56C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5E56C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PromptRepresentationInternal.Failure()
{
  sub_23F362C18();
}

uint64_t *sub_23F5E56E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23F61B4F4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = sub_23F35D2E8(&qword_256E708E0);
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 48));
      sub_23F617BA0();
    }
    else
    {
      v9 = sub_23F618BB4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F5E57CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_23F61B4F4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
    sub_23F35D2E8(&qword_256E708E0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v4 = sub_23F618BB4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
}

uint64_t sub_23F5E5848(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23F61B4F4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    v5 = sub_23F35D2E8(&qword_256E708E0);
    *(_QWORD *)(a1 + *(int *)(v5 + 48)) = *(_QWORD *)(a2 + *(int *)(v5 + 48));
    sub_23F617BA0();
  }
  else
  {
    v6 = sub_23F618BB4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23F5E5900(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F3C2C74(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_23F61B4F4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
      v5 = sub_23F35D2E8(&qword_256E708E0);
      *(_QWORD *)(a1 + *(int *)(v5 + 48)) = *(_QWORD *)(a2 + *(int *)(v5 + 48));
      sub_23F617BA0();
    }
    else
    {
      v6 = sub_23F618BB4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for RenderableTool()
{
  uint64_t result;

  result = qword_256E7E960;
  if (!qword_256E7E960)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F5E5A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23F61B4F4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    v5 = sub_23F35D2E8(&qword_256E708E0);
    *(_QWORD *)(a1 + *(int *)(v5 + 48)) = *(_QWORD *)(a2 + *(int *)(v5 + 48));
  }
  else
  {
    v6 = sub_23F618BB4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23F5E5AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F3C2C74(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_23F61B4F4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
      v5 = sub_23F35D2E8(&qword_256E708E0);
      *(_QWORD *)(a1 + *(int *)(v5 + 48)) = *(_QWORD *)(a2 + *(int *)(v5 + 48));
    }
    else
    {
      v6 = sub_23F618BB4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F5E5B78()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  _QWORD v3[6];

  result = sub_23F618BB4();
  if (v1 <= 0x3F)
  {
    v3[4] = *(_QWORD *)(result - 8) + 64;
    result = sub_23F61B4F4();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v3[5] = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23F5E5C10@<X0>(void (*a1)(__int128 *__return_ptr, _QWORD *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  __int128 v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v6 = v2[1];
  v7 = v2[2];
  v8 = v2[3];
  v10 = v2[4];
  v9 = v2[5];
  v12 = v2[6];
  v11 = v2[7];
  v20 = *v2;
  if (v9)
  {
    v16[0] = v10;
    v16[1] = v9;
    v16[2] = v12;
    v16[3] = v11;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F39BA5C(v10, v9);
    a1(&v17, v16);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_23F5E6D3C();
    }
    result = sub_23F5E6D3C();
    v14 = v17;
    v12 = v18;
    v11 = v19;
  }
  else
  {
    sub_23F384A00();
    sub_23F617BA0();
    result = sub_23F617BA0();
    v14 = (unint64_t)v10;
  }
  *(_QWORD *)a2 = v20;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v8;
  *(_OWORD *)(a2 + 32) = v14;
  *(_QWORD *)(a2 + 48) = v12;
  *(_QWORD *)(a2 + 56) = v11;
  return result;
}

uint64_t sub_23F5E5D40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD v5[5];
  _QWORD v6[4];

  sub_23F35EA9C((_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 64));
  sub_23F5E6D50();
  sub_23F35EA9C(v6, v6[3]);
  sub_23F5E6D50();
  v3 = sub_23F35EA9C(v5, v5[3]);
  sub_23F361418((uint64_t)v3, a1);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v5);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v6);
}

uint64_t sub_23F5E5DC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23F618BB4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3842E4();
  type metadata accessor for RenderableTool();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3D9CCC();
  sub_23F5E6DA0(v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23F35D2E8(&qword_256E708E0);
    swift_bridgeObjectRelease();
    v7 = sub_23F61B5D8();
    sub_23F36196C(a1, 1, 1, v7);
    v8 = sub_23F5E6D8C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v1, v8);
  }
  else
  {
    sub_23F5E6D60(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    sub_23F618B9C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  }
}

uint64_t sub_23F5E5ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F5E6D30(a1, qword_256E80498, a3, 0x800000023F63BE40);
}

uint64_t sub_23F5E5EF0(uint64_t a1)
{
  return sub_23F5E5F5C(a1, qword_256E804B0, 0x7041686372616553, 0xEF797469746E4570);
}

uint64_t sub_23F5E5F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F5E6D30(a1, qword_256E804C8, a3, 0x800000023F63BE20);
}

uint64_t sub_23F5E5F38(uint64_t a1)
{
  return sub_23F5E5F5C(a1, qword_256E804E0, 0xD000000000000015, 0x800000023F63BD40);
}

uint64_t sub_23F5E5F5C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v7 = sub_23F61B9EC();
  sub_23F3F3F64(v7, a2);
  v8 = (_QWORD *)sub_23F361498(v7, (uint64_t)a2);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0xD000000000000028;
  v9[3] = 0x800000023F63BD10;
  v9[4] = a3;
  v9[5] = a4;
  *v8 = v9;
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v8, *MEMORY[0x24BEB9CF8], v7);
}

void sub_23F5E6000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F35D2E8(&qword_256E6FD58);
  v0 = sub_23F61B9EC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_23F61D990;
  if (qword_256E6F110 != -1)
    swift_once();
  v1 = sub_23F361498(v0, (uint64_t)qword_256E80498);
  sub_23F5E6D94(v1, v1);
  if (qword_256E6F118 != -1)
    swift_once();
  v2 = sub_23F361498(v0, (uint64_t)qword_256E804B0);
  sub_23F5E6D70(v2);
  if (qword_256E6F120 != -1)
    swift_once();
  v3 = sub_23F361498(v0, (uint64_t)qword_256E804C8);
  sub_23F5E6D70(v3);
  if (qword_256E6F128 != -1)
    swift_once();
  v4 = sub_23F361498(v0, (uint64_t)qword_256E804E0);
  sub_23F5E6D94(v4, v4);
  sub_23F369084();
  qword_256E804F8 = v5;
}

void sub_23F5E6198()
{
  uint64_t v0;

  sub_23F368E14((uint64_t)&unk_250FD0CB0);
  qword_256E80500 = v0;
}

BOOL sub_23F5E61BC(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  _BOOL8 result;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[4];
  uint64_t v43[4];

  v8 = a1[2];
  v10 = a1[3];
  v9 = a1[4];
  v12 = a1[5];
  v11 = a1[6];
  v13 = a1[7];
  v14 = *a2;
  v15 = a2[1];
  v16 = a2[2];
  v17 = a2[3];
  v19 = a2[4];
  v18 = a2[5];
  v20 = *a1 == *a2 && a1[1] == v15;
  v38 = a2[6];
  v40 = a2[7];
  if (v20 || (v21 = sub_23F61CC64(), result = 0, (v21 & 1) != 0))
  {
    sub_23F35D328(v8, v16, v14, v15, a5, a6, a7, a8, v38, v40, v42[0]);
    if ((v23 & 1) != 0)
    {
      if (v10)
      {
        if (!v17)
          return 0;
        sub_23F617BA0();
        sub_23F384A00();
        sub_23F48FFE8();
        v25 = v24;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
          return 0;
      }
      else if (v17)
      {
        return 0;
      }
      if (v12)
      {
        v43[0] = v9;
        v43[1] = v12;
        v43[2] = v11;
        v43[3] = v13;
        if (v18)
        {
          v42[2] = v39;
          v42[3] = v41;
          swift_retain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          static RootedBNFGrammar.== infix(_:_:)(v43, v42, v26, v27, v28, v29, v30, v31, v39, v41, v19, v18);
          v33 = v32;
          swift_bridgeObjectRelease();
          sub_23F362C60();
          swift_release();
          sub_23F5E6D80(v9, v12);
          return (v33 & 1) != 0;
        }
        sub_23F617BA0();
        swift_retain();
        sub_23F384A00();
      }
      else if (!v18)
      {
        return 1;
      }
      v34 = sub_23F5E6DA8();
      sub_23F39BA5C(v34, v35);
      sub_23F5E6D80(v9, v12);
      v36 = sub_23F5E6DA8();
      sub_23F39BB1C(v36, v37);
    }
    return 0;
  }
  return result;
}

void sub_23F5E6388()
{
  sub_23F362CB0();
  sub_23F61CD3C();
  sub_23F61CD60();
  sub_23F362AD4();
}

void sub_23F5E63C0()
{
  sub_23F5E6388();
}

uint64_t sub_23F5E63C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_23F5E6D8C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3842E4();
  v6 = sub_23F618BB4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F38F964();
  v10 = v9 - v8;
  type metadata accessor for RenderableTool();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3D9CCC();
  sub_23F5E6DA0(v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = *(_QWORD *)(v1 + *(int *)(sub_23F35D2E8(&qword_256E708E0) + 48));
    sub_23F5E6D60(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    sub_23F61CD3C();
    sub_23F3CFCEC(&qword_256E7E9A8, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8ED8], MEMORY[0x24BEB8EE8]);
    sub_23F61C04C();
    sub_23F3C841C(a1, v12);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v10, v1, v6);
    sub_23F61CD3C();
    sub_23F3CFCEC(&qword_256E70F20, (uint64_t (*)(uint64_t))MEMORY[0x24BE57570], MEMORY[0x24BE57588]);
    sub_23F61C04C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t sub_23F5E6578(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(uint64_t, uint64_t);
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a1;
  v37 = a2;
  v35 = sub_23F5E6D8C();
  v2 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  sub_23F38F964();
  v5 = v4 - v3;
  v6 = sub_23F618BB4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F38F964();
  v10 = v9 - v8;
  type metadata accessor for RenderableTool();
  sub_23F3834C0();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v34 - v15;
  sub_23F35D2E8(&qword_256E7E9B0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F38F964();
  v20 = v19 - v18;
  v22 = v19 - v18 + *(int *)(v21 + 48);
  sub_23F5C3A2C(v36, v19 - v18);
  sub_23F5E6DA0(v37);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_23F5C3A2C(v20, (uint64_t)v16);
    if (sub_23F55D948() != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v10, v22, v6);
      v27 = sub_23F618BA8();
      v25 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v25(v10, v6);
      v28 = sub_23F5E6DA8();
      goto LABEL_10;
    }
    v30 = sub_23F5E6DA8();
    goto LABEL_8;
  }
  v23 = v35;
  sub_23F5C3A2C(v20, (uint64_t)v14);
  sub_23F35D2E8(&qword_256E708E0);
  if (sub_23F55D948() != 1)
  {
    sub_23F362C60();
    v32 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v30 = (uint64_t)v14;
    v31 = v23;
LABEL_8:
    v32(v30, v31);
    sub_23F5E68E4(v20);
LABEL_12:
    v27 = 0;
    return v27 & 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v22, v23);
  v24 = sub_23F61B4E8();
  v25 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v25((uint64_t)v14, v23);
  if ((v24 & 1) == 0)
  {
    v25(v5, v23);
    swift_bridgeObjectRelease();
    sub_23F362C60();
    sub_23F3C2C74(v20);
    goto LABEL_12;
  }
  sub_23F3C56F8();
  v27 = v26;
  swift_bridgeObjectRelease();
  sub_23F362C60();
  v28 = v5;
  v29 = v23;
LABEL_10:
  v25(v28, v29);
  sub_23F3C2C74(v20);
  return v27 & 1;
}

void sub_23F5E6808()
{
  _BYTE v0[72];

  sub_23F362CB0();
  sub_23F5E63C8((uint64_t)v0);
  sub_23F61CD60();
  sub_23F362AD4();
}

uint64_t sub_23F5E683C()
{
  _BYTE v1[72];

  sub_23F61CD30();
  sub_23F5E63C8((uint64_t)v1);
  return sub_23F61CD60();
}

uint64_t sub_23F5E6878()
{
  return sub_23F3CFCEC(&qword_256E7E998, (uint64_t (*)(uint64_t))type metadata accessor for RenderableTool, (uint64_t)&unk_23F6328A0);
}

unint64_t sub_23F5E68A8()
{
  unint64_t result;

  result = qword_256E7E9A0;
  if (!qword_256E7E9A0)
  {
    result = MEMORY[0x242670A44](&unk_23F632908, &unk_250FE08C0);
    atomic_store(result, (unint64_t *)&qword_256E7E9A0);
  }
  return result;
}

uint64_t sub_23F5E68E4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E7E9B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for PromptRepresentationInternal()
{
  sub_23F362C18();
}

uint64_t sub_23F5E6930(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_23F5E698C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  if (v6)
  {
    a1[4] = a2[4];
    a1[5] = v6;
    v7 = a2[6];
    v8 = a2[7];
    a1[6] = v7;
    a1[7] = v8;
    sub_23F617BA0();
    swift_retain();
    sub_23F617BA0();
  }
  else
  {
    v9 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v9;
  }
  return a1;
}

_QWORD *sub_23F5E6A2C(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v4 = a1 + 4;
  v5 = a2 + 4;
  v6 = a2[5];
  if (a1[5])
  {
    if (v6)
    {
      a1[4] = a2[4];
      a1[5] = a2[5];
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_retain();
      swift_release();
      a1[7] = a2[7];
      sub_23F617BA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F5E6B7C((uint64_t)(a1 + 4));
      v7 = *((_OWORD *)a2 + 3);
      *v4 = *v5;
      *((_OWORD *)a1 + 3) = v7;
    }
  }
  else if (v6)
  {
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    sub_23F617BA0();
    swift_retain();
    sub_23F617BA0();
  }
  else
  {
    v8 = *((_OWORD *)a2 + 3);
    *v4 = *v5;
    *((_OWORD *)a1 + 3) = v8;
  }
  return a1;
}

uint64_t sub_23F5E6B7C(uint64_t a1)
{
  destroy for RootedBNFGrammar();
  return a1;
}

uint64_t sub_23F5E6BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 40))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 40);
  if (!v5)
  {
    sub_23F5E6B7C(a1 + 32);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    return a1;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F5E6C68(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23F5E6CA8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for PromptRepresentationInternal.Success()
{
  sub_23F362C18();
}

uint64_t sub_23F5E6D04()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F5E6D30(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23F5E5F5C(a1, a2, 0xD000000000000012, a4);
}

uint64_t sub_23F5E6D3C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F39BB1C(v1, v0);
}

uint64_t sub_23F5E6D50()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23F5E6D60@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v3, v1, v2);
}

uint64_t sub_23F5E6D70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v2, a1, v1);
}

uint64_t sub_23F5E6D80(uint64_t a1, uint64_t a2)
{
  return sub_23F39BB1C(a1, a2);
}

uint64_t sub_23F5E6D8C()
{
  return sub_23F61B4F4();
}

uint64_t sub_23F5E6D94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v3, a2, v2);
}

uint64_t sub_23F5E6DA0(uint64_t a1)
{
  uint64_t v1;

  return sub_23F5C3A2C(a1, v1);
}

uint64_t sub_23F5E6DA8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5E6DB4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  if (*(_QWORD *)(a1 + 16) && (sub_23F37574C(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(a1 + 56);
    v8 = type metadata accessor for DynamicEnumeration(0);
    sub_23F5E8CDC(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, a2, type metadata accessor for DynamicEnumeration);
    return sub_23F38370C(a2, 0, 1, v8);
  }
  else
  {
    v10 = type metadata accessor for DynamicEnumeration(0);
    return sub_23F38370C(a2, 1, 1, v10);
  }
}

uint64_t sub_23F5E6E40()
{
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F383738();
  sub_23F61C22C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5E6EA4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v11;
  char v12;
  uint64_t v15;

  type metadata accessor for PromptToolData(0);
  sub_23F362850();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - v8;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_23F5E8CDC((uint64_t)a1, (uint64_t)&v15 - v8, type metadata accessor for PromptToolData);
    sub_23F5E8CDC((uint64_t)a2, (uint64_t)v7, type metadata accessor for PromptToolData);
  }
  else
  {
    v11 = sub_23F61CC64();
    sub_23F5E8CDC((uint64_t)a1, (uint64_t)v9, type metadata accessor for PromptToolData);
    sub_23F5E8CDC((uint64_t)a2, (uint64_t)v7, type metadata accessor for PromptToolData);
    v12 = 0;
    if ((v11 & 1) == 0)
      goto LABEL_14;
  }
  if (*((_QWORD *)v9 + 2) == *((_QWORD *)v7 + 2) && *((_QWORD *)v9 + 3) == *((_QWORD *)v7 + 3))
    v12 = 1;
  else
    v12 = sub_23F61CC64();
LABEL_14:
  sub_23F50CD1C((uint64_t)v9, type metadata accessor for PromptToolData);
  sub_23F50CD1C((uint64_t)v7, type metadata accessor for PromptToolData);
  return v12 & 1;
}

void sub_23F5E6FEC()
{
  sub_23F61CD30();
  sub_23F5E8D40();
  sub_23F4932A4();
  swift_bridgeObjectRelease();
  sub_23F383738();
  sub_23F5E8D20();
  swift_bridgeObjectRelease();
  sub_23F61CD60();
  sub_23F4931F4();
}

void sub_23F5E7048()
{
  sub_23F61CD30();
  sub_23F5E8D40();
  sub_23F4932A4();
  swift_bridgeObjectRelease();
  sub_23F383738();
  sub_23F5E8D20();
  swift_bridgeObjectRelease();
  sub_23F61CD60();
  sub_23F4931F4();
}

uint64_t sub_23F5E709C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD, _QWORD);
  uint64_t v33;
  unint64_t v34;
  void (*v35)(uint64_t, unint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(_QWORD, _QWORD);
  uint64_t v55;
  uint64_t v56;

  v3 = v2;
  v49 = a2;
  sub_23F35D2E8(qword_256E7E9B8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  v8 = v7 - v6;
  v56 = type metadata accessor for DynamicEnumeration.Case(0);
  v51 = *(_QWORD *)(v56 - 8);
  sub_23F362850();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v55 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v50 = (uint64_t)&v44 - v12;
  v13 = sub_23F61AF60();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F38F964();
  v17 = v16 - v15;
  v53 = sub_23F618FEC();
  v46 = *(_QWORD *)(v53 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F38F964();
  v21 = v20 - v19;
  sub_23F35D2E8(&qword_256E74EC8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F38F964();
  v25 = v24 - v23;
  v26 = sub_23F61B95C();
  v47 = *(_QWORD *)(v26 - 8);
  v48 = v26;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F38F964();
  v30 = v29 - v28;
  v31 = *a1;
  sub_23F3702C8(v31, v25);
  if (sub_23F36195C(v25, 1, v13) == 1)
  {
    __break(1u);
LABEL_17:
    sub_23F5E8D30();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
  sub_23F61AF48();
  v32 = *(void (**)(_QWORD, _QWORD))(v14 + 8);
  v52 = v13;
  v54 = v32;
  v32(v25, v13);
  v45 = v30;
  sub_23F618FE0();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v21, v53);
  v33 = *(_QWORD *)(v31 + 16);
  if (v33)
  {
    v34 = v31 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v53 = *(_QWORD *)(v14 + 72);
    v35 = *(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16);
    v46 = v31;
    sub_23F617BA0();
    v36 = MEMORY[0x24BEE4AF8];
    v37 = v52;
    while (1)
    {
      v35(v17, v34, v37);
      sub_23F5E7438(v17, v8);
      if (v3)
        goto LABEL_17;
      v3 = 0;
      sub_23F5E8D30();
      if (sub_23F36195C(v8, 1, v56) == 1)
      {
        sub_23F5E7968(v8);
      }
      else
      {
        v38 = v50;
        sub_23F3EC95C(v8, v50);
        sub_23F3EC95C(v38, v55);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F5E8D4C();
          v36 = v40;
        }
        v39 = *(_QWORD *)(v36 + 16);
        if (v39 >= *(_QWORD *)(v36 + 24) >> 1)
        {
          sub_23F5E8D4C();
          v36 = v41;
        }
        *(_QWORD *)(v36 + 16) = v39 + 1;
        sub_23F3EC95C(v55, v36+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(_QWORD *)(v51 + 72) * v39);
        v37 = v52;
      }
      v34 += v53;
      if (!--v33)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
  }
  v36 = MEMORY[0x24BEE4AF8];
LABEL_15:
  v42 = v49;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v49, v45, v48);
  result = type metadata accessor for DynamicEnumeration(0);
  *(_QWORD *)(v42 + *(int *)(result + 20)) = v36;
  return result;
}

uint64_t type metadata accessor for DynamicEnumeration.Case(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7EAB8);
}

uint64_t sub_23F5E7438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  os_log_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  os_log_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v68 = a2;
  v3 = sub_23F617D08();
  v60 = *(_QWORD *)(v3 - 8);
  v61 = (void (*)(char *, uint64_t))v3;
  MEMORY[0x24BDAC7A8](v3);
  v59 = (os_log_t)((char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_23F61AF60();
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v69 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F619E98();
  v65 = *(_QWORD *)(v7 - 8);
  v66 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v64 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_23F61B92C();
  v9 = *(_QWORD *)(v70 - 8);
  v10 = MEMORY[0x24BDAC7A8](v70);
  v57 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v55 - v12;
  v14 = sub_23F618FEC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v55 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v55 - v18;
  v20 = sub_23F61B7AC();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v58 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v55 - v24;
  v67 = a1;
  sub_23F61AF48();
  sub_23F618FD4();
  v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v27 = v19;
  v28 = v70;
  v56 = v14;
  v26(v27, v14);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v13, v28) == *MEMORY[0x24BEB99E0])
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v13, v28);
    v29 = swift_projectBox();
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
    v30(v25, v29, v20);
    swift_release();
    v31 = v58;
    v30(v58, (uint64_t)v25, v20);
    v32 = v59;
    sub_23F61AF54();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    v33 = v68;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v68, v31, v20);
    v34 = type metadata accessor for DynamicEnumeration.Case(0);
    (*(void (**)(uint64_t, os_log_t, void (*)(char *, uint64_t)))(v60 + 32))(v33 + *(int *)(v34 + 20), v32, v61);
    v35 = v33;
    v36 = 0;
    v37 = v34;
  }
  else
  {
    v61 = v26;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v28);
    v38 = v64;
    sub_23F619088();
    v40 = v62;
    v39 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v69, v67, v63);
    v41 = sub_23F619E8C();
    v42 = sub_23F61C628();
    v43 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      v44 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      v72 = v67;
      *(_DWORD *)v44 = 136315394;
      LODWORD(v60) = v43;
      sub_23F37AE00(0x6F72662874696E69, 0xEB00000000293A6DLL, &v72);
      v71 = v45;
      sub_23F61C790();
      *(_WORD *)(v44 + 12) = 2080;
      v58 = (char *)(v44 + 14);
      v59 = v41;
      v46 = v55;
      v47 = v69;
      sub_23F61AF48();
      sub_23F618FD4();
      v61(v46, v56);
      v48 = sub_23F61C16C();
      sub_23F37AE00(v48, v49, &v72);
      v71 = v50;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v47, v39);
      v51 = v59;
      _os_log_impl(&dword_23F35A000, v59, (os_log_type_t)v60, "%s Found a non-entity TypedValue in a DynamicEnumerationEntityStatement: %s", (uint8_t *)v44, 0x16u);
      v52 = v67;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v52, -1, -1);
      MEMORY[0x242670B70](v44, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v69, v39);

    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v38, v66);
    v53 = v68;
    v37 = type metadata accessor for DynamicEnumeration.Case(0);
    v35 = v53;
    v36 = 1;
  }
  return sub_23F36196C(v35, v36, 1, v37);
}

uint64_t sub_23F5E7968(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(qword_256E7E9B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DynamicEnumeration(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7EB48);
}

uint64_t type metadata accessor for PromptToolData(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7EA18);
}

uint64_t *sub_23F5E79D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    a1[4] = a2[4];
    type metadata accessor for RenderableTool();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_23F61B4F4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = sub_23F35D2E8(&qword_256E708E0);
      *(_QWORD *)&v10[*(int *)(v13 + 48)] = *(_QWORD *)&v11[*(int *)(v13 + 48)];
      sub_23F617BA0();
    }
    else
    {
      v15 = sub_23F618BB4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v10, v11, v15);
    }
    swift_storeEnumTagMultiPayload();
    v16 = type metadata accessor for ToolPromptMap(0);
    *(_QWORD *)&v10[*(int *)(v16 + 20)] = *(_QWORD *)&v11[*(int *)(v16 + 20)];
    *(_QWORD *)&v10[*(int *)(v16 + 24)] = *(_QWORD *)&v11[*(int *)(v16 + 24)];
    v17 = *(int *)(a3 + 32);
    v18 = (uint64_t *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = *(uint64_t *)((char *)a2 + v17 + 8);
    sub_23F617BA0();
    sub_23F617BA0();
    if (v20)
    {
      *v18 = *v19;
      v18[1] = v20;
      v21 = v19[2];
      v22 = v19[3];
      v18[2] = v21;
      v18[3] = v22;
      sub_23F617BA0();
      swift_retain();
      sub_23F617BA0();
    }
    else
    {
      v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
    }
  }
  return v4;
}

uint64_t sub_23F5E7B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for RenderableTool();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_23F61B4F4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    sub_23F35D2E8(&qword_256E708E0);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = sub_23F618BB4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  type metadata accessor for ToolPromptMap(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 32) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_23F5E7CA0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  type metadata accessor for RenderableTool();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_23F61B4F4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = sub_23F35D2E8(&qword_256E708E0);
    *(_QWORD *)&v9[*(int *)(v12 + 48)] = *(_QWORD *)&v10[*(int *)(v12 + 48)];
    sub_23F617BA0();
  }
  else
  {
    v13 = sub_23F618BB4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
  }
  swift_storeEnumTagMultiPayload();
  v14 = type metadata accessor for ToolPromptMap(0);
  *(_QWORD *)&v9[*(int *)(v14 + 20)] = *(_QWORD *)&v10[*(int *)(v14 + 20)];
  *(_QWORD *)&v9[*(int *)(v14 + 24)] = *(_QWORD *)&v10[*(int *)(v14 + 24)];
  v15 = *(int *)(a3 + 32);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = *(_QWORD *)((char *)a2 + v15 + 8);
  sub_23F617BA0();
  sub_23F617BA0();
  if (v18)
  {
    *v16 = *v17;
    v16[1] = v18;
    v19 = v17[2];
    v20 = v17[3];
    v16[2] = v19;
    v16[3] = v20;
    sub_23F617BA0();
    swift_retain();
    sub_23F617BA0();
  }
  else
  {
    v21 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v21;
  }
  return a1;
}

_QWORD *sub_23F5E7E34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  if (a1 != a2)
  {
    sub_23F50CD1C((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
    type metadata accessor for RenderableTool();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_23F61B4F4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      v10 = sub_23F35D2E8(&qword_256E708E0);
      *(_QWORD *)&v7[*(int *)(v10 + 48)] = *(_QWORD *)&v8[*(int *)(v10 + 48)];
      sub_23F617BA0();
    }
    else
    {
      v11 = sub_23F618BB4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, v8, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  v12 = type metadata accessor for ToolPromptMap(0);
  *(_QWORD *)&v7[*(int *)(v12 + 20)] = *(_QWORD *)&v8[*(int *)(v12 + 20)];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[*(int *)(v12 + 24)] = *(_QWORD *)&v8[*(int *)(v12 + 24)];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v13 = *(int *)(a3 + 32);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = *(_QWORD *)((char *)a1 + v13 + 8);
  v17 = v15[1];
  if (v16)
  {
    if (v17)
    {
      *v14 = *v15;
      v14[1] = v15[1];
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      v14[2] = v15[2];
      swift_retain();
      swift_release();
      v14[3] = v15[3];
      sub_23F617BA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F5E6B7C((uint64_t)v14);
      v18 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v18;
    }
  }
  else if (v17)
  {
    *v14 = *v15;
    v14[1] = v15[1];
    v14[2] = v15[2];
    v14[3] = v15[3];
    sub_23F617BA0();
    swift_retain();
    sub_23F617BA0();
  }
  else
  {
    v19 = *((_OWORD *)v15 + 1);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v19;
  }
  return a1;
}

uint64_t sub_23F5E8098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  type metadata accessor for RenderableTool();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23F61B4F4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    v11 = sub_23F35D2E8(&qword_256E708E0);
    *(_QWORD *)(v8 + *(int *)(v11 + 48)) = *(_QWORD *)(v9 + *(int *)(v11 + 48));
  }
  else
  {
    v12 = sub_23F618BB4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
  }
  swift_storeEnumTagMultiPayload();
  v13 = type metadata accessor for ToolPromptMap(0);
  *(_QWORD *)(v8 + *(int *)(v13 + 20)) = *(_QWORD *)(v9 + *(int *)(v13 + 20));
  *(_QWORD *)(v8 + *(int *)(v13 + 24)) = *(_QWORD *)(v9 + *(int *)(v13 + 24));
  v14 = *(int *)(a3 + 32);
  v15 = (_OWORD *)(a1 + v14);
  v16 = (_OWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  return a1;
}

_QWORD *sub_23F5E81B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  if (a1 != a2)
  {
    sub_23F50CD1C((uint64_t)a1 + v8, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
    type metadata accessor for RenderableTool();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_23F61B4F4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      v12 = sub_23F35D2E8(&qword_256E708E0);
      *(_QWORD *)&v9[*(int *)(v12 + 48)] = *(_QWORD *)&v10[*(int *)(v12 + 48)];
    }
    else
    {
      v13 = sub_23F618BB4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v9, v10, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  v14 = type metadata accessor for ToolPromptMap(0);
  *(_QWORD *)&v9[*(int *)(v14 + 20)] = *(_QWORD *)&v10[*(int *)(v14 + 20)];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v9[*(int *)(v14 + 24)] = *(_QWORD *)&v10[*(int *)(v14 + 24)];
  swift_bridgeObjectRelease();
  v15 = *(int *)(a3 + 32);
  v16 = (uint64_t)a1 + v15;
  v17 = (char *)a2 + v15;
  if (!*(_QWORD *)((char *)a1 + v15 + 8))
    goto LABEL_10;
  v18 = *((_QWORD *)v17 + 1);
  if (!v18)
  {
    sub_23F5E6B7C(v16);
LABEL_10:
    v19 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v19;
    return a1;
  }
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
  swift_release();
  *(_QWORD *)(v16 + 24) = *((_QWORD *)v17 + 3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F5E8360()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F5E836C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F3F9B80(*(_QWORD *)(a1 + 8));
    sub_23F362B80();
  }
  else
  {
    v6 = type metadata accessor for ToolPromptMap(0);
    sub_23F3B1A44(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t sub_23F5E83C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F5E83D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_23F362B80();
  }
  else
  {
    v7 = type metadata accessor for ToolPromptMap(0);
    sub_23F38370C(a1 + *(int *)(a4 + 28), a2, a2, v7);
  }
}

uint64_t sub_23F5E842C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ToolPromptMap(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23F5E84B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B7AC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F617D08();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_23F5E8560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23F61B7AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23F617D08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_23F5E85BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B7AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F617D08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F5E8638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B7AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F617D08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F5E86B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B7AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F617D08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F5E8730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B7AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F617D08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F5E87AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5E87B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F61B7AC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = sub_23F617D08();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return sub_23F3B1A44(v8, a2, v7);
}

uint64_t sub_23F5E8818()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5E8824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F55D964();
  v4 = sub_23F61B7AC();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == v3)
  {
    v5 = v4;
    v6 = v1;
  }
  else
  {
    v5 = sub_23F617D08();
    v6 = v1 + *(int *)(v2 + 20);
  }
  return sub_23F38370C(v6, v0, v0, v5);
}

uint64_t sub_23F5E887C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F61B7AC();
  if (v1 <= 0x3F)
  {
    result = sub_23F617D08();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23F5E8900(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B95C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    sub_23F617BA0();
  }
  return a1;
}

uint64_t sub_23F5E898C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61B95C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5E89D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B95C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F5E8A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B95C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F5E8A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B95C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23F5E8AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B95C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F5E8B5C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F5E8B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B95C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_23F3B1A44(a1, a2, v6);
  }
  else
  {
    sub_23F3F9B80(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
    sub_23F362B80();
  }
}

uint64_t sub_23F5E8BC4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F5E8BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  sub_23F55D964();
  v4 = sub_23F61B95C();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == v3)
  {
    sub_23F38370C(v1, v0, v0, v4);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
    sub_23F362B80();
  }
}

uint64_t sub_23F5E8C24()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B95C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23F5E8C9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E7EB80;
  if (!qword_256E7EB80)
  {
    v1 = type metadata accessor for PromptToolData(255);
    result = MEMORY[0x242670A44](&unk_23F632A64, v1);
    atomic_store(result, (unint64_t *)&qword_256E7EB80);
  }
  return result;
}

uint64_t sub_23F5E8CDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23F5E8D20()
{
  return sub_23F61C22C();
}

uint64_t sub_23F5E8D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 96))(v1, v0);
}

uint64_t sub_23F5E8D40()
{
  return sub_23F617BA0();
}

void sub_23F5E8D4C()
{
  sub_23F3781B4();
}

void sub_23F5E8D58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = sub_23F61B5D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = v8;
    v17 = v2;
    v21 = MEMORY[0x24BEE4AF8];
    sub_23F37BD94();
    v11 = v21;
    v12 = (unint64_t *)(a1 + 32);
    v19 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v20 = a2;
    v18 = a2 + v19;
    while (1)
    {
      v14 = *v12++;
      v13 = v14;
      if ((v14 & 0x8000000000000000) != 0)
        break;
      if (v13 >= *(_QWORD *)(a2 + 16))
        goto LABEL_11;
      v15 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v10, v18 + v15 * v13, v5);
      v21 = v11;
      v16 = *(_QWORD *)(v11 + 16);
      if (v16 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_23F37BD94();
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v19 + v16 * v15, v10, v5);
      --v9;
      a2 = v20;
      if (!v9)
        goto LABEL_8;
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23F5E8EF0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

_QWORD *sub_23F5E8EF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_signpost_type_t v13;
  uint8_t *v14;
  uint8_t *v15;
  os_signpost_id_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD *v23;

  v2 = v1;
  v3 = v0;
  v4 = sub_23F619E20();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  if (qword_256E6F080 != -1)
    swift_once();
  v11 = sub_23F619E44();
  sub_23F361498(v11, (uint64_t)qword_256E80338);
  sub_23F619E38();
  sub_23F619DFC();
  v12 = sub_23F619E38();
  v13 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v23 = v0;
    v15 = v14;
    *(_WORD *)v14 = 0;
    v16 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v12, v13, v16, "ToolResolver.init", "", v15, 2u);
    v17 = v15;
    v2 = v1;
    v3 = v23;
    MEMORY[0x242670B70](v17, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  sub_23F619E74();
  sub_23F3668A0();
  sub_23F619E68();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  type metadata accessor for JointResolver();
  v18 = sub_23F4934F0();
  if (v2)
  {
    sub_23F5E9174();
    swift_release();
    type metadata accessor for ToolResolver();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v3[2] = v18;
    type metadata accessor for JointResolverFeaturizer();
    swift_allocObject();
    v3[3] = sub_23F497A5C();
    v19 = type metadata accessor for DeviceContextClient();
    v20 = swift_allocObject();
    sub_23F6191FC();
    sub_23F3668A0();
    *(_QWORD *)(v20 + 16) = sub_23F6191F0();
    v3[7] = v19;
    v3[8] = &off_250FD5828;
    v3[4] = v20;
    sub_23F5E9174();
    swift_release();
  }
  return v3;
}

uint64_t sub_23F5E9174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  NSObject *v12;
  char v13;
  char v14;
  const char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_signpost_id_t v22;
  void (*v23)(_BYTE *, uint64_t);
  _BYTE v24[12];
  int v25;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_23F619E50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_23F619E20();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v24[-v9];
  if (qword_256E6F080 != -1)
    swift_once();
  v11 = sub_23F619E44();
  sub_23F361498(v11, (uint64_t)qword_256E80338);
  v12 = sub_23F619E38();
  sub_23F619E5C();
  v25 = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v1 + 88))(v3, v0) == *MEMORY[0x24BEE7810])
    {
      v13 = 0;
      v14 = 0;
      v15 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
      v15 = "%s";
      v14 = 2;
      v13 = 1;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v8, v10, v4);
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v27 = v18;
    *(_BYTE *)v17 = v14;
    *(_BYTE *)(v17 + 1) = v13;
    *(_WORD *)(v17 + 2) = 2080;
    v19 = sub_23F61C8F8();
    sub_23F37AE00(v19, v20, &v27);
    v26 = v21;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v22 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v12, (os_signpost_type_t)v25, v22, "ToolResolver.init", v15, (uint8_t *)v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v18, -1, -1);
    MEMORY[0x242670B70](v17, -1, -1);

    v23 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v23(v10, v4);
    return ((uint64_t (*)(_BYTE *, uint64_t))v23)(v8, v4);
  }
  else
  {

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
  }
}

uint64_t sub_23F5E9454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[24] = a4;
  v5[25] = v4;
  v5[22] = a2;
  v5[23] = a3;
  v5[21] = a1;
  v5[26] = _s10ModelInputVMa();
  v5[27] = sub_23F366578();
  v6 = sub_23F619E98();
  v5[28] = v6;
  v5[29] = *(_QWORD *)(v6 - 8);
  v5[30] = sub_23F366654();
  v5[31] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E6FAA0);
  v5[32] = sub_23F366654();
  v5[33] = sub_23F3666CC();
  v5[34] = type metadata accessor for JointResolution.DeviceContext();
  v5[35] = sub_23F366654();
  v5[36] = sub_23F3666CC();
  v7 = sub_23F616FC4();
  v5[37] = v7;
  v5[38] = *(_QWORD *)(v7 - 8);
  v5[39] = sub_23F366578();
  v8 = sub_23F61BB3C();
  v5[40] = v8;
  v5[41] = *(_QWORD *)(v8 - 8);
  v5[42] = sub_23F366578();
  v9 = sub_23F61B5D8();
  v5[43] = v9;
  v5[44] = *(_QWORD *)(v9 - 8);
  v5[45] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5E9558()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  void (*v36)(uint64_t, uint64_t, _QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;

  v1 = v0[22];
  v2 = *(_QWORD *)(v1 + 16);
  v0[46] = v2;
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v4 = v0[44];
    v38 = v0[41];
    v44 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23F37B688();
    v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v39 = v4;
    v40 = v0;
    v36 = *(void (**)(uint64_t, uint64_t, _QWORD))(v4 + 16);
    v37 = *(_QWORD *)(v4 + 72);
    v6 = v44;
    do
    {
      v43 = v2;
      v7 = v0[45];
      v8 = v0[42];
      v9 = v3;
      v10 = v6;
      v11 = v0[40];
      v36(v7, v5, v0[43]);
      v42 = sub_23F61B5A8();
      v13 = v12;
      sub_23F61B548();
      v41 = sub_23F61BB18();
      v15 = v14;
      v16 = v11;
      v6 = v10;
      v3 = v9;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v8, v16);
      sub_23F3664B0();
      sub_23F617BA0();
      sub_23F617BA0();
      v17 = sub_23F61BFEC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23F383E88(v7, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B688();
        v6 = v44;
      }
      v18 = v6[2];
      v19 = v18 + 1;
      if (v18 >= v6[3] >> 1)
      {
        sub_23F37B688();
        v6 = v44;
      }
      v6[2] = v19;
      v20 = &v6[5 * v18];
      v20[4] = v42;
      v20[5] = v13;
      v0 = v40;
      v20[6] = v41;
      v20[7] = v15;
      v20[8] = v17;
      v5 += v37;
      v2 = v43 - 1;
    }
    while (v43 != 1);
  }
  else
  {
    v19 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v19)
    {
      v21 = MEMORY[0x24BEE4AF8];
      sub_23F362984();
      goto LABEL_16;
    }
    v40 = v0;
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_23F37B5E8();
  v21 = v3;
  v22 = v6 + 8;
  do
  {
    v23 = *(v22 - 4);
    v24 = *(v22 - 3);
    v25 = *(v22 - 2);
    v26 = *(v22 - 1);
    v27 = *v22;
    sub_23F35D2E8(&qword_256E6FDF8);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_23F61E7E0;
    *(_QWORD *)(v28 + 32) = v23;
    *(_QWORD *)(v28 + 40) = v24;
    *(_QWORD *)(v28 + 48) = v25;
    *(_QWORD *)(v28 + 56) = v26;
    *(_QWORD *)(v28 + 64) = v27;
    v30 = *(_QWORD *)(v3 + 16);
    v29 = *(_QWORD *)(v3 + 24);
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    if (v30 >= v29 >> 1)
      sub_23F37B5E8();
    *(_QWORD *)(v3 + 16) = v30 + 1;
    *(_QWORD *)(v3 + 8 * v30 + 32) = v28;
    v22 += 5;
    --v19;
  }
  while (v19);
  swift_bridgeObjectRelease();
  v0 = v40;
LABEL_16:
  v0[47] = v21;
  sub_23F616EF8();
  v31 = sub_23F617BA0();
  v0[48] = sub_23F48E3A0(v31, (uint64_t)&unk_250FD0FE0, MEMORY[0x24BEE4AF8]);
  v0[49] = v32;
  v0[50] = v33;
  sub_23F35EA9C((_QWORD *)(v0[25] + 32), *(_QWORD *)(v0[25] + 56));
  v34 = (_QWORD *)swift_task_alloc();
  v0[51] = v34;
  *v34 = v0;
  v34[1] = sub_23F5E9948;
  return sub_23F416960((uint64_t)(v0 + 2));
}

uint64_t sub_23F5E9948()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_23F362984();
    sub_23F362D18();
    swift_bridgeObjectRelease();
  }
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F5E99CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v1 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 256);
  v12 = *(_OWORD *)(v0 + 32);
  v13 = *(_OWORD *)(v0 + 16);
  v11 = *(_OWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_BYTE *)(v0 + 72);
  sub_23F616FA0();
  v7 = v1 + *(int *)(v2 + 20);
  *(_OWORD *)v7 = v13;
  *(_OWORD *)(v7 + 16) = v12;
  *(_OWORD *)(v7 + 32) = v11;
  *(_QWORD *)(v7 + 48) = v5;
  *(_BYTE *)(v7 + 56) = v6;
  sub_23F5EAA4C(v3);
  sub_23F5EAA4C(v4);
  v8 = sub_23F499504(v3, v4);
  *(_QWORD *)(v0 + 424) = v8;
  sub_23F5EA358(v4);
  sub_23F5EA358(v3);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 432) = v9;
  *v9 = v0;
  v9[1] = sub_23F5E9AD4;
  return sub_23F497DDC(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 312), v8);
}

uint64_t sub_23F5E9AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[55] = a1;
  v4[56] = a2;
  v4[57] = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F5E9B48()
{
  uint64_t v0;

  sub_23F5EAA3C();
  sub_23F5EA9A0();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  return sub_23F38346C(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F5E9BAC()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F619100();
  sub_23F617BA0();
  sub_23F617BA0();
  v1 = sub_23F619E8C();
  v2 = sub_23F61C61C();
  if (os_log_type_enabled(v1, v2))
  {
    v4 = v0[55];
    v3 = v0[56];
    v5 = sub_23F366668();
    *(_DWORD *)v5 = 134218240;
    v0[19] = *(_QWORD *)(v3 + 16);
    sub_23F61C790();
    *(_WORD *)(v5 + 12) = 2048;
    v0[20] = *(_QWORD *)(v4 + 16);
    sub_23F61C790();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F35A000, v1, v2, "ToolResolver fetched %ld tupleInteractions and %ld candidateInteractions from InteractionStore", (uint8_t *)v5, 0x16u);
    sub_23F366530();
  }
  swift_bridgeObjectRelease();
  sub_23F362D18();

  sub_23F5EAA78();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0[29] + 8))(v6, v0[28], v7, v8);
  sub_23F362D18();
  sub_23F5EAA6C();
  sub_23F50502C(2047);
}

uint64_t sub_23F5E9D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;

  v3 = sub_23F5EAA0C();
  sub_23F5EA9F0(v3, v4, v5, v6, v7, v8, v9, v10, v11);
  *(_OWORD *)(v0 + v12) = v24;
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + *(int *)(v1 + 28)) = MEMORY[0x24BEE4AF8];
  v14 = (_QWORD *)(v0 + *(int *)(v1 + 32));
  *v14 = v13;
  v14[1] = v2;
  sub_23F5EAA20();
  v15 = (_QWORD *)swift_task_alloc();
  v16 = sub_23F5EA9C4(v15);
  return sub_23F493CB8(v16, v17, v18, v19, v20, v21, v22);
}

uint64_t sub_23F5E9D78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5E9DD0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v1 = *(_QWORD *)(v0 + 472);
  sub_23F4850B4();
  if (!v1)
  {
    v7 = v2;
    sub_23F366450(v0 + 80);
    __asm { BR              X10 }
  }
  v4 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 216);
  sub_23F366450(v0 + 80);
  v6 = sub_23F50CD1C(v5, (uint64_t (*)(_QWORD))_s10ModelInputVMa);
  sub_23F5EAA94(v6, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
  sub_23F383E88(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  swift_task_dealloc();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666C4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23F5EA070()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  v1 = (void *)v0[57];
  sub_23F619100();
  v2 = v1;
  v3 = v1;
  v4 = sub_23F619E8C();
  v5 = sub_23F61C628();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[57];
    v7 = (uint8_t *)sub_23F366668();
    v8 = (_QWORD *)sub_23F366668();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[18] = v10;
    sub_23F61C790();
    *v8 = v10;
    sub_23F3665E8();
    sub_23F3665E8();
    _os_log_impl(&dword_23F35A000, v4, v5, "[RECOVERABLE_ERROR]: %@", v7, 0xCu);
    sub_23F35D2E8(&qword_256E6FAB0);
    swift_arrayDestroy();
    sub_23F366530();
  }
  sub_23F3665E8();
  sub_23F3665E8();
  sub_23F3665E8();

  sub_23F5EAA78();
  (*(void (**)(_QWORD, _QWORD))(v0[29] + 8))(v0[30], v0[28]);
  sub_23F362D18();
  sub_23F5EAA6C();
  sub_23F50502C(2047);
}

uint64_t sub_23F5EA1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v3 = sub_23F5EAA0C();
  sub_23F5EA9F0(v3, v4, v5, v6, v7, v8, v9, v10, v11);
  v13 = (_QWORD *)(v0 + v12);
  v14 = MEMORY[0x24BEE4AF8];
  *v13 = MEMORY[0x24BEE4AF8];
  v13[1] = v14;
  *(_QWORD *)(v0 + *(int *)(v1 + 28)) = v14;
  v15 = (_QWORD *)(v0 + *(int *)(v1 + 32));
  *v15 = v14;
  v15[1] = v2;
  sub_23F5EAA20();
  v16 = (_QWORD *)swift_task_alloc();
  v17 = sub_23F5EA9C4(v16);
  return sub_23F493CB8(v17, v18, v19, v20, v21, v22, v23);
}

uint64_t sub_23F5EA258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 304);
  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 288);
  sub_23F50CD1C(*(_QWORD *)(v0 + 216), (uint64_t (*)(_QWORD))_s10ModelInputVMa);
  sub_23F50CD1C(v3, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
  sub_23F383E88(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F5EA9A0();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  return sub_23F38346C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5EA2EC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 32);
  return v0;
}

uint64_t sub_23F5EA318()
{
  sub_23F5EA2EC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ToolResolver()
{
  return objc_opt_self();
}

uint64_t sub_23F5EA358(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E6FAA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F5EA398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JointResolution.DeviceContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5EA3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JointResolution.DeviceContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ToolResolver.Decision()
{
  uint64_t result;

  result = qword_256E7ECC0;
  if (!qword_256E7ECC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_23F5EA458(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      sub_23F617BA0();
    }
    else
    {
      v6 = sub_23F61B5D8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F5EA54C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
    return swift_bridgeObjectRelease();
  if (result <= 1)
  {
    v3 = sub_23F61B5D8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *sub_23F5EA5B4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    sub_23F617BA0();
  }
  else
  {
    v4 = sub_23F61B5D8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23F5EA67C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23F50CD1C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ToolResolver.Decision);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      sub_23F617BA0();
    }
    else
    {
      v4 = sub_23F61B5D8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23F5EA75C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23F61B5D8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23F5EA81C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F50CD1C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ToolResolver.Decision);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_23F61B5D8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23F5EA8F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B5D8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23F5EA968()
{
  uint64_t v0;
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v1[44] + 16))(v1[21], v1[22]+ ((*(unsigned __int8 *)(v1[44] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1[44] + 80))+ *(_QWORD *)(v1[44] + 72) * v0, v1[43]);
}

uint64_t sub_23F5EA9A0()
{
  return swift_task_dealloc();
}

uint64_t sub_23F5EA9C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 464) = a1;
  *a1 = v2;
  a1[1] = v1;
  return v3;
}

__n128 sub_23F5EA9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  __n128 result;

  v12 = (__n128 *)(v10 + *(int *)(v11 + 20));
  result = a9;
  *v12 = a9;
  v12[1].n128_u64[0] = v9;
  return result;
}

uint64_t sub_23F5EAA0C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F5EA3DC(v0, v1);
}

void sub_23F5EAA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(v2 + 36));
  *v3 = 0;
  v3[1] = v0;
  *(_BYTE *)(v1 + *(int *)(v2 + 40)) = 2;
}

uint64_t sub_23F5EAA3C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[38] + 8))(v0[39], v0[37]);
}

uint64_t sub_23F5EAA4C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(a1, 1, 1, v1);
}

uint64_t sub_23F5EAA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F5EAA6C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F5EA398(v0, v1);
}

uint64_t sub_23F5EAA8C()
{
  return type metadata accessor for ToolResolver.Decision();
}

uint64_t sub_23F5EAA94(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  return sub_23F50CD1C(v2, a2);
}

uint64_t sub_23F5EAA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_23F618C20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v15 = v2;
    v17 = MEMORY[0x24BEE4AF8];
    sub_23F37C3B8();
    v9 = v17;
    v10 = *(_QWORD *)(type metadata accessor for LooselyComparableRetrievedTool() - 8);
    v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v16 = *(_QWORD *)(v10 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    do
    {
      v12(v7, v11, v4);
      v17 = v9;
      v13 = *(_QWORD *)(v9 + 16);
      if (v13 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_23F37C3B8();
        v9 = v17;
      }
      *(_QWORD *)(v9 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v13, v7, v4);
      v11 += v16;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t ToolRetrievalService.__allocating_init(clientApplicationIdentifier:toolbox:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_23F61B32C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  type metadata accessor for ToolRetrievalService();
  v11 = swift_allocObject();
  sub_23F5EB410(a1, a2, (uint64_t)sub_23F5EB3B0, v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a3, v6);
  return v11;
}

uint64_t static ToolRetrievalService.isEnabled()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v7;

  v0 = sub_23F618B90();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BE57400], v0);
  v3 = sub_23F618B84();
  v4 = sub_23F3840BC();
  v5(v4);
  return v3 & 1;
}

uint64_t sub_23F5EADB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_23F55D9C0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F383EC4();
  sub_23F618BCC();
  sub_23F5EE97C(&qword_256E70F20, v5, v6, MEMORY[0x24BE57588]);
  sub_23F61C04C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  v7 = sub_23F5EE894();
  sub_23F3C7C74(a1, v7);
  return sub_23F362D18();
}

uint64_t sub_23F5EAE74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char v17;
  void (*v18)(char *, uint64_t);
  char v19;
  char v20;
  uint64_t v22;

  v4 = type metadata accessor for LooselyComparableRetrievedTool();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v22 - v8;
  v10 = sub_23F55D9C0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v22 - v15;
  sub_23F618BCC();
  sub_23F618BCC();
  v17 = sub_23F618BA8();
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v14, v10);
  v18(v16, v10);
  sub_23F5EE390(a1, (uint64_t)v9);
  sub_23F5EE390(a2, (uint64_t)v7);
  if ((v17 & 1) != 0)
  {
    sub_23F618BE4();
    sub_23F5EE894();
    sub_23F3C5184();
    v20 = v19;
    swift_bridgeObjectRelease();
    sub_23F3837B0();
  }
  else
  {
    v20 = 0;
  }
  sub_23F50CD1C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LooselyComparableRetrievedTool);
  sub_23F50CD1C((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for LooselyComparableRetrievedTool);
  return v20 & 1;
}

void sub_23F5EB014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_23F55D9C0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F5EE844();
  sub_23F61CD30();
  sub_23F618BCC();
  sub_23F5EE970(&qword_256E70F20, v3, v4, MEMORY[0x24BE57588]);
  sub_23F5EE89C();
  sub_23F383E64(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v5 = sub_23F5EE894();
  sub_23F5EE8D8(v5);
  sub_23F362D18();
  sub_23F61CD60();
  sub_23F383488();
}

void sub_23F5EB0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_23F55D9C0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F5EE844();
  sub_23F61CD30();
  sub_23F618BCC();
  sub_23F5EE970(&qword_256E70F20, v3, v4, MEMORY[0x24BE57588]);
  sub_23F5EE89C();
  sub_23F383E64(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v5 = sub_23F5EE894();
  sub_23F5EE8D8(v5);
  sub_23F362D18();
  sub_23F61CD60();
  sub_23F383488();
}

uint64_t sub_23F5EB160()
{
  sub_23F5EE164();
  return sub_23F61CCAC();
}

uint64_t sub_23F5EB188()
{
  sub_23F5EE164();
  return sub_23F61CCA0();
}

uint64_t sub_23F5EB1B0()
{
  uint64_t v0;

  v0 = qword_256E7ECF8;
  sub_23F617BA0();
  return v0;
}

uint64_t sub_23F5EB1E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];
  ValueMetadata *v14;
  unint64_t v15;
  uint64_t v16[5];

  v3 = sub_23F35D2E8(&qword_256E72B70);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_23F35D2E8(&qword_256E70760);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  PlannerToolboxDelegate.init()(v16);
  sub_23F61A6E4();
  v16[3] = (uint64_t)&type metadata for PlannerToolboxDelegate;
  v16[4] = sub_23F403ECC();
  v14 = &type metadata for FullPlannerToolboxDelegate;
  v15 = sub_23F403F08();
  v9 = sub_23F616E68();
  sub_23F36196C((uint64_t)v8, 1, 1, v9);
  v10 = sub_23F61B32C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v5, a1, v10);
  sub_23F36196C((uint64_t)v5, 0, 1, v10);
  v11 = sub_23F61A6D8();
  if (!v1)
    sub_23F61A6CC();
  return v11;
}

uint64_t sub_23F5EB358()
{
  uint64_t v0;

  v0 = sub_23F61B32C();
  sub_23F384274(*(_QWORD *)(v0 - 8));
  sub_23F3840BC();
  return swift_deallocObject();
}

uint64_t sub_23F5EB3B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F61B32C() - 8) + 80);
  return sub_23F5EB1E4(v0 + ((v1 + 16) & ~v1));
}

uint64_t type metadata accessor for ToolRetrievalService()
{
  return objc_opt_self();
}

uint64_t sub_23F5EB410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v10 = sub_23F35D2E8(&qword_256E717A8);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383EC4();
  swift_defaultActor_initialize();
  sub_23F61C490();
  sub_23F5EE86C();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a3;
  v11[5] = a4;
  v11[6] = a1;
  v11[7] = a2;
  swift_retain();
  sub_23F43DE9C(v5, (uint64_t)&unk_256E7EE50, (uint64_t)v11);
  *(_QWORD *)(v4 + 112) = v12;
  sub_23F5EE86C();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a3;
  v13[5] = a4;
  sub_23F43DF94();
  *(_QWORD *)(v4 + 120) = v14;
  return v4;
}

uint64_t sub_23F5EB51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23F5EB53C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(void);

  sub_23F61B68C();
  v1 = sub_23F61B680();
  v2 = sub_23F5EF394(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1, *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  sub_23F366748();
  **(_QWORD **)(v0 + 16) = v2;
  v4 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F5EE800(v4);
}

uint64_t sub_23F5EB5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23F5EB5CC()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  **(_QWORD **)(v0 + 16) = (*(uint64_t (**)(void))(v0 + 24))();
  v1 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F5EE800(v1);
}

uint64_t sub_23F5EB618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_23F5EB638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 32);
  sub_23F35D2E8(&qword_256E7EE10);
  sub_23F5C1FB8(&qword_256E7EE18, v4, (uint64_t (*)(uint64_t))type metadata accessor for ToolRetrievalService, (uint64_t)&protocol conformance descriptor for ToolRetrievalService);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v5;
  v6 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v3;
  *(_OWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 48) = v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v7;
  *v7 = v0;
  v7[1] = sub_23F5EB724;
  return sub_23F61CAC0();
}

uint64_t sub_23F5EB724()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  return sub_23F36664C();
}

uint64_t sub_23F5EB784()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23F5EB794()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F5EB7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7[29] = a6;
  v7[30] = a7;
  v7[27] = a4;
  v7[28] = a5;
  v7[25] = a2;
  v7[26] = a3;
  v7[24] = a1;
  v8 = sub_23F61B5D8();
  v7[31] = v8;
  v7[32] = *(_QWORD *)(v8 - 8);
  v7[33] = swift_task_alloc();
  v9 = sub_23F618C20();
  v7[34] = v9;
  v7[35] = *(_QWORD *)(v9 - 8);
  v7[36] = swift_task_alloc();
  v7[37] = swift_task_alloc();
  v10 = sub_23F618D40();
  v7[38] = v10;
  v7[39] = *(_QWORD *)(v10 - 8);
  v7[40] = swift_task_alloc();
  v7[41] = swift_task_alloc();
  v11 = sub_23F618BB4();
  v7[42] = v11;
  v7[43] = *(_QWORD *)(v11 - 8);
  v7[44] = swift_task_alloc();
  v7[45] = swift_task_alloc();
  v7[46] = swift_task_alloc();
  v7[47] = *(_QWORD *)(type metadata accessor for LooselyComparableRetrievedTool() - 8);
  v7[48] = swift_task_alloc();
  v7[49] = swift_task_alloc();
  v7[50] = swift_task_alloc();
  v7[51] = swift_task_alloc();
  v7[52] = swift_task_alloc();
  v7[53] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E717A8);
  v7[54] = swift_task_alloc();
  v7[55] = swift_task_alloc();
  v12 = sub_23F35D2E8(&qword_256E7EE30);
  v7[56] = v12;
  v7[57] = *(_QWORD *)(v12 - 8);
  v7[58] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F5EB9B0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 472) = v1;
  sub_23F35D2E8(qword_256E74198);
  *(_QWORD *)(v0 + 480) = sub_23F35D2E8(&qword_256E70370);
  *v1 = v0;
  v1[1] = sub_23F5EBA3C;
  sub_23F5EE930();
  return sub_23F61C49C();
}

uint64_t sub_23F5EBA3C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 488) = v1;
  swift_task_dealloc();
  return sub_23F36664C();
}

uint64_t sub_23F5EBA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;

  sub_23F3D9A84();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v21 = (__int128 *)(v0 + 16);
    v3 = v1 + 32;
    v20 = sub_23F61C490();
    do
    {
      v5 = *(_QWORD *)(v0 + 432);
      v4 = *(_QWORD *)(v0 + 440);
      v7 = *(_QWORD *)(v0 + 232);
      v6 = *(_QWORD *)(v0 + 240);
      v8 = *(_QWORD *)(v0 + 224);
      v22 = v2;
      v23 = *(_QWORD *)(v0 + 216);
      sub_23F36196C(v4, 1, 1, v20);
      sub_23F361418(v3, (uint64_t)v21);
      v9 = (_QWORD *)swift_allocObject();
      v9[2] = 0;
      v9[3] = 0;
      sub_23F362678(v21, (uint64_t)(v9 + 4));
      v9[9] = v23;
      v9[10] = v8;
      v9[11] = v7;
      v9[12] = v6;
      sub_23F5EE304(v4, v5);
      LODWORD(v5) = sub_23F36195C(v5, 1, v20);
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F617BA0();
      v10 = *(_QWORD *)(v0 + 432);
      if ((_DWORD)v5 == 1)
      {
        sub_23F3DFFB0(*(_QWORD *)(v0 + 432));
      }
      else
      {
        sub_23F61C484();
        sub_23F383E64(v10, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8));
      }
      if (v9[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v11 = sub_23F61C43C();
        v13 = v12;
        swift_unknownObjectRelease();
      }
      else
      {
        v11 = 0;
        v13 = 0;
      }
      v14 = **(_QWORD **)(v0 + 200);
      v15 = v13 | v11;
      if (v13 | v11)
      {
        v15 = v0 + 56;
        *(_QWORD *)(v0 + 56) = 0;
        *(_QWORD *)(v0 + 64) = 0;
        *(_QWORD *)(v0 + 72) = v11;
        *(_QWORD *)(v0 + 80) = v13;
      }
      v16 = *(_QWORD *)(v0 + 440);
      *(_QWORD *)(v0 + 112) = 1;
      *(_QWORD *)(v0 + 120) = v15;
      *(_QWORD *)(v0 + 128) = v14;
      swift_task_create();
      swift_release();
      sub_23F3DFFB0(v16);
      v3 += 40;
      --v2;
    }
    while (v22 != 1);
  }
  swift_bridgeObjectRelease();
  sub_23F61C4CC();
  *(_QWORD *)(v0 + 496) = sub_23F5C1FB8(&qword_256E7EE18, v17, (uint64_t (*)(uint64_t))type metadata accessor for ToolRetrievalService, (uint64_t)&protocol conformance descriptor for ToolRetrievalService);
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 504) = v18;
  *v18 = v0;
  v18[1] = sub_23F5EBD20;
  sub_23F5EE91C();
  return sub_23F61C4D8();
}

uint64_t sub_23F5EBD20()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F41C4A0(v2);
  if (v1)
  {
    v0[71] = MEMORY[0x24BEE4AF8];
    v0[70] = 0;
  }
  else
  {
    v0[66] = 0;
    v0[65] = MEMORY[0x24BEE4AF8];
    v0[64] = 0;
  }
  return sub_23F36664C();
}

void sub_23F5EBD94()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  void (*v108)(unint64_t, uint64_t, uint64_t);
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v118;
  _QWORD *v119;
  _QWORD **v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;

  v2 = v0[18];
  v1 = v0 + 17;
  if (!v2)
  {
    v89 = MEMORY[0x24BEE4AF8];
    v90 = v0[66];
    v91 = v0[65];
    sub_23F384274(v0[57]);
    swift_retain();
    swift_retain();
    v92 = sub_23F5EAA9C(v90, v91);
    swift_release();
    swift_release();
    v142 = v89;
    v140 = *(_QWORD *)(v92 + 16);
    if (!v140)
    {
LABEL_81:
      v112 = (_QWORD *)v141[24];
      swift_bridgeObjectRelease();
      sub_23F3BA224();
      v114 = v113;
      v116 = v115;
      swift_release();
      swift_release();
      *v112 = v114;
      v112[1] = v116;
      sub_23F3666D4();
      sub_23F3666A0();
      sub_23F3666DC();
      sub_23F362CC8();
      sub_23F366708();
      sub_23F383898();
      sub_23F383978();
      swift_task_dealloc();
      sub_23F383888();
      sub_23F383880();
      sub_23F383878();
      sub_23F383870();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_23F384760();
      sub_23F366810();
      __asm { BR              X0 }
    }
    v93 = 0;
    v94 = v0[43];
    v136 = v0[35];
    v132 = v0[32];
    v138 = *MEMORY[0x24BE57550];
    v128 = *MEMORY[0x24BE57558];
    v126 = *MEMORY[0x24BE57548];
    v124 = *MEMORY[0x24BE57540];
    v122 = *MEMORY[0x24BE57568];
    v134 = v94;
    v130 = v92;
    while (1)
    {
      if (v93 >= *(_QWORD *)(v92 + 16))
        goto LABEL_87;
      v95 = v141;
      v96 = v141[37];
      sub_23F5EE908();
      v99 = v98 & ~v97;
      v101 = *(_QWORD *)(v100 + 72);
      (*(void (**)(uint64_t, unint64_t))(v100 + 16))(v96, v92 + v99 + v101 * v93);
      sub_23F618BCC();
      v102 = sub_23F5EE860(*(uint64_t (**)(uint64_t, uint64_t))(v94 + 88));
      if (v102 != v138)
      {
        if (v102 == v128)
          goto LABEL_74;
        if (v102 != v126)
        {
          if (v102 != v124 && v102 != v122)
            goto LABEL_85;
LABEL_74:
          v95 = v141;
          sub_23F384274(v141[43]);
LABEL_75:
          v108 = *(void (**)(unint64_t, uint64_t, uint64_t))(v136 + 32);
          v108(v95[36], v95[37], v95[34]);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F37C3B8();
            v89 = v142;
          }
          v109 = *(_QWORD *)(v89 + 16);
          if (v109 >= *(_QWORD *)(v89 + 24) >> 1)
          {
            sub_23F37C3B8();
            v89 = v142;
          }
          v110 = v141[36];
          v111 = v141[34];
          *(_QWORD *)(v89 + 16) = v109 + 1;
          v108(v89 + v99 + v109 * v101, v110, v111);
          v142 = v89;
          v94 = v134;
          goto LABEL_80;
        }
        v95 = v141;
      }
      v103 = v95[33];
      v104 = v95[31];
      sub_23F4057A8(*(uint64_t (**)(uint64_t))(v94 + 96));
      sub_23F5EE8E8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v132 + 32));
      sub_23F5D73C4();
      v106 = v105;
      v92 = v130;
      (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v103, v104);
      if ((v106 & 1) != 0)
        goto LABEL_75;
      sub_23F384274(v136);
LABEL_80:
      if (v140 == ++v93)
        goto LABEL_81;
    }
  }
  v3 = *(_QWORD *)(v2 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  v119 = v0 + 17;
  if (!v3)
    goto LABEL_9;
  v5 = v0[18];
  v6 = v0[35];
  v0[21] = MEMORY[0x24BEE4AF8];
  swift_retain();
  swift_retain();
  sub_23F37C690();
  v7 = 0;
  v8 = v0[21];
  v9 = v5 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10 = *(_QWORD *)(v5 + 16);
  do
  {
    if (v10 == v7)
    {
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
      return;
    }
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v141[35] + 16))(v141[48], v9 + *(_QWORD *)(v141[35] + 72) * v7, v141[34]);
    v11 = v8;
    v141[21] = v8;
    v12 = *(_QWORD *)(v8 + 16);
    if (v12 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_23F37C690();
      v11 = v0[21];
    }
    ++v7;
    *(_QWORD *)(v11 + 16) = v12 + 1;
    sub_23F5EE908();
    v8 = v15;
    sub_23F5EE34C(v17, v15 + (v14 & ~v13) + *(_QWORD *)(v16 + 72) * v12);
  }
  while (v3 != v7);
  swift_release();
  swift_release();
  v0 = v141;
  v1 = v119;
  v4 = v8;
LABEL_9:
  v0[22] = v0[65];
  v127 = *(_QWORD *)(v4 + 16);
  if (!v127)
  {
    swift_bridgeObjectRelease();
    v23 = v0[66];
    goto LABEL_83;
  }
  v120 = (_QWORD **)(v1 + 5);
  sub_23F5EE908();
  v20 = v19 & ~v18;
  v125 = v21 + v20;
  v135 = *(_QWORD *)(v22 + 72);
  v23 = v0[66];
  sub_23F617BA0();
  v24 = v0;
  v25 = 0;
  v121 = v20;
  while (1)
  {
    sub_23F5EE390(v125 + v25 * v135, v24[53]);
    v26 = (_QWORD *)v24[22];
    v27 = (char *)v26 + v20;
    if (v23)
    {
      v0 = v24;
      swift_retain();
      sub_23F3BDE4C();
      v29 = v28;
      v31 = v30;
      sub_23F383EDC();
      if ((v29 & 1) == 0)
        goto LABEL_56;
      goto LABEL_32;
    }
    v0 = v24;
    if (v26[2])
      break;
    v31 = 0;
LABEL_32:
    sub_23F5EE390(v0[53], v0[52]);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F5EE95C();
      v26 = (_QWORD *)*v26;
    }
    v69 = v26[2];
    if (v69 >= v26[3] >> 1)
    {
      sub_23F5EE95C();
      v26 = (_QWORD *)*v26;
    }
    v70 = v0[52];
    v26[2] = v69 + 1;
    sub_23F5EE34C(v70, (uint64_t)v26 + v20 + v69 * v135);
    v71 = v26[2];
    if (v23)
    {
      swift_beginAccess();
      if (MEMORY[0x24266BC8C](*(_QWORD *)(v23 + 16) & 0x3FLL) >= (uint64_t)v71)
      {
        if ((swift_isUniquelyReferenced_native() & 1) == 0)
        {
          v76 = sub_23F618788();
          sub_23F383EDC();
          if (!v76)
            goto LABEL_89;
          v23 = v76;
        }
        v77 = -1 << *(_QWORD *)(v23 + 16);
        v78 = v77 + 1;
        v79 = v26[2] + ~(*(uint64_t *)(v23 + 24) >> 6);
        v80 = v77 ^ ~(((v79 >> 63) & ~v77) + v79);
        v81 = (*(_QWORD *)(v23 + 16) & 0x3FLL) * v31;
        v82 = v81 >> 6;
        *(_QWORD *)(v23 + 32 + 8 * (v81 >> 6)) = (v80 << v81) | ((v78 << v81) - 1) & *(_QWORD *)(v23
                                                                                               + 32
                                                                                               + 8 * (v81 >> 6));
        v83 = 64 - (v81 & 0x3F);
        v84 = *(_QWORD *)(v23 + 16);
        if (v83 < (v84 & 0x3Fu))
        {
          v85 = (v84 & 0x3F) << (v84 & 0x3F);
          v86 = __OFADD__(v85, 64);
          v87 = v85 + 64;
          if (v86)
            goto LABEL_88;
          if (v82 + 1 == (v87 - 1) / 64)
            v88 = 0;
          else
            v88 = v82 + 1;
          *(_QWORD *)(v23 + 32 + 8 * v88) = *(_QWORD *)(v23 + 32 + 8 * v88) & (-1 << (v84
                                                                                      - v83)) | (v80 >> v83);
        }
        goto LABEL_56;
      }
      v72 = *(_QWORD *)(v23 + 24) & 0x3FLL;
      if (v71 > 0xF || v72)
      {
LABEL_43:
        v73 = MEMORY[0x24266BCA4](v71);
        if (v72 <= v73)
          v74 = v73;
        else
          v74 = v72;
        v75 = sub_23F3BD1B0((uint64_t)v26, v74, 0, v72);
        sub_23F383EDC();
        v23 = v75;
        goto LABEL_56;
      }
      sub_23F383EDC();
LABEL_41:
      v23 = 0;
    }
    else
    {
      v72 = 0;
      if (v71 > 0xF)
        goto LABEL_43;
    }
LABEL_56:
    ++v25;
    v24 = v0;
    sub_23F50CD1C(v0[53], (uint64_t (*)(_QWORD))type metadata accessor for LooselyComparableRetrievedTool);
    if (v25 == v127)
    {
      sub_23F384A80();
LABEL_83:
      v0[67] = v23;
      sub_23F366748();
      swift_release();
      v0[68] = v0[22];
      v118 = (_QWORD *)swift_task_alloc();
      v0[69] = v118;
      *v118 = v0;
      v118[1] = sub_23F5EC848;
      sub_23F5EE91C();
      sub_23F366810();
      sub_23F61C4D8();
      return;
    }
  }
  v123 = v25;
  v32 = 0;
  v131 = v27;
  v133 = v26[2];
  while (1)
  {
    v33 = v0[53];
    v35 = v0[50];
    v34 = v0[51];
    v36 = v141[49];
    v37 = v141[46];
    v38 = v141[45];
    v39 = (uint64_t)&v27[v32 * v135];
    v40 = v141[43];
    v41 = v141[42];
    sub_23F5EE390(v39, v34);
    sub_23F618BCC();
    sub_23F618BCC();
    v42 = sub_23F618BA8();
    v43 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v43(v38, v41);
    v43(v37, v41);
    v44 = v133;
    sub_23F5EE390(v34, v35);
    v45 = v36;
    v0 = v141;
    sub_23F5EE390(v33, v45);
    if ((v42 & 1) != 0)
      break;
LABEL_28:
    v64 = v0[50];
    v65 = v0[51];
    sub_23F5EE80C(v0[49]);
    sub_23F5EE80C(v64);
    sub_23F5EE80C(v65);
    ++v32;
    v27 = v131;
    if (v32 == v44)
    {
      v31 = 0;
      v23 = 0;
      v26 = *v120;
      v20 = v121;
      v25 = v123;
      goto LABEL_32;
    }
  }
  v129 = v32;
  v46 = sub_23F618BE4();
  v47 = sub_23F5EE894();
  v48 = v47;
  v49 = *(_QWORD *)(v46 + 16);
  if (v49 != *(_QWORD *)(v47 + 16))
  {
    sub_23F38458C();
LABEL_27:
    swift_bridgeObjectRelease();
    v32 = v129;
    goto LABEL_28;
  }
  v20 = v121;
  v25 = v123;
  v139 = v47;
  if (!v49 || v46 == v47)
  {
    sub_23F38458C();
LABEL_30:
    v66 = v0[50];
    v67 = v0[51];
    v68 = v0[49];
    swift_bridgeObjectRelease();
    sub_23F5EE80C(v68);
    sub_23F5EE80C(v66);
    sub_23F5EE80C(v67);
    goto LABEL_41;
  }
  v50 = 0;
  v51 = v141;
  sub_23F5EE908();
  v54 = v53 & ~v52;
  v137 = *(_QWORD *)(v55 + 72);
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16);
  while (1)
  {
    v56(v51[41], v46 + v54, v51[38]);
    if (v50 >= *(_QWORD *)(v48 + 16))
      break;
    v57 = v51[40];
    v58 = v51[41];
    v59 = v48 + v54;
    v60 = v51[38];
    v61 = v51[39];
    v56(v57, v59, v60);
    sub_23F5C1FB8(&qword_256E71178, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE577F0], MEMORY[0x24BE57808]);
    v62 = sub_23F61C0A0();
    v63 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
    v63(v57, v60);
    v63(v58, v60);
    if ((v62 & 1) == 0)
    {
      sub_23F38458C();
      v0 = v141;
      v44 = v133;
      goto LABEL_27;
    }
    ++v50;
    v48 = v139;
    v54 += v137;
    v51 = v141;
    if (v49 == v50)
    {
      v0 = v141;
      sub_23F38458C();
      v20 = v121;
      v25 = v123;
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_85:
  sub_23F366810();
  sub_23F61CC58();
}

uint64_t sub_23F5EC848()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F406D20();
  sub_23F41C4A0(v2);
  if (v1)
  {
    v3 = v0[67];
    v0[71] = v0[68];
    v0[70] = v3;
  }
  else
  {
    v4 = v0[68];
    v0[66] = v0[67];
    v0[65] = v4;
    v0[64] = 0;
  }
  return sub_23F36664C();
}

uint64_t sub_23F5EC8BC()
{
  uint64_t v0;

  sub_23F3D9A84();
  sub_23F5EE79C();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F383898();
  sub_23F383978();
  swift_task_dealloc();
  return sub_23F3D995C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5EC940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F3D9A84();
  v2 = *(_QWORD *)(v0 + 456);
  v1 = *(_QWORD *)(v0 + 464);
  swift_release();
  sub_23F366748();
  sub_23F383E64(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F5EE79C();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F383898();
  sub_23F383978();
  swift_task_dealloc();
  return sub_23F3D995C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5EC9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[2] = a1;
  v8[3] = a4;
  return swift_task_switch();
}

uint64_t sub_23F5ECA08()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (_QWORD *)v0[3];
  v2 = v1[3];
  sub_23F35EA9C(v1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_23F5ECA80;
  return sub_23F5EFAE4(v0[4], v0[5], v0[6], v0[7], v2);
}

uint64_t sub_23F5ECA80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v8;

  v6 = *v3;
  v8 = *v3;
  sub_23F41C4A0(&v8);
  if (v2)
    return sub_23F435B58((uint64_t (*)(void))v3[1]);
  *(_QWORD *)(v6 + 72) = a2;
  *(_QWORD *)(v6 + 80) = a1;
  return sub_23F36664C();
}

uint64_t sub_23F5ECAF0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);

  v1 = v0[9];
  v2 = (_QWORD *)v0[2];
  *v2 = v0[10];
  v2[1] = v1;
  v3 = (uint64_t (*)(void))sub_23F384760();
  return v3();
}

uint64_t sub_23F5ECB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v4 = sub_23F61BCE0();
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = sub_23F366578();
  v5 = sub_23F55D9C0();
  v3[13] = v5;
  v3[14] = *(_QWORD *)(v5 - 8);
  v3[15] = sub_23F366578();
  v6 = sub_23F61B5D8();
  v3[16] = v6;
  v3[17] = *(_QWORD *)(v6 - 8);
  v3[18] = sub_23F366578();
  v3[19] = type metadata accessor for ToolRetrievalStageTwo(0);
  v3[20] = sub_23F366578();
  v7 = sub_23F61B4C4();
  v3[21] = v7;
  v3[22] = *(_QWORD *)(v7 - 8);
  v3[23] = sub_23F366578();
  v8 = sub_23F619E98();
  v3[24] = v8;
  v3[25] = *(_QWORD *)(v8 - 8);
  v3[26] = sub_23F3E0220();
  v3[27] = sub_23F3E0220();
  return sub_23F36664C();
}

uint64_t sub_23F5ECBF8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  void (*v55)(uint64_t, uint64_t);
  _QWORD *v56;
  uint64_t v57[10];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  sub_23F3D9A84();
  v59 = v30;
  v60 = v31;
  v58 = v29;
  v32 = sub_23F61B47C();
  *(_QWORD *)(v29 + 224) = v32;
  if (!v32)
    goto LABEL_6;
  if (!*(_QWORD *)(v32 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_6:
    sub_23F5EDF14();
    swift_allocError();
    *v53 = 5;
    swift_willThrow();
    sub_23F5EE7E4();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    return sub_23F3D995C(*(uint64_t (**)(void))(v29 + 8));
  }
  v34 = *(_QWORD *)(v29 + 176);
  v33 = *(_QWORD *)(v29 + 184);
  v35 = *(_QWORD *)(v29 + 168);
  v36 = *(_QWORD *)(v29 + 64);
  sub_23F5EE968();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v33, v36, v35);
  sub_23F3E0254();
  v37 = sub_23F619E8C();
  v38 = sub_23F61C610();
  v39 = os_log_type_enabled(v37, v38);
  v40 = *(_QWORD *)(v29 + 216);
  v41 = *(_QWORD *)(v29 + 192);
  v42 = *(_QWORD *)(v29 + 200);
  v44 = *(_QWORD *)(v29 + 176);
  v43 = *(_QWORD *)(v29 + 184);
  if (v39)
  {
    v45 = sub_23F366668();
    v57[0] = sub_23F366668();
    *(_DWORD *)v45 = 136315394;
    v46 = sub_23F61B4A0();
    sub_23F37AE00(v46, v47, v57);
    *(_QWORD *)(v29 + 40) = v48;
    sub_23F61C790();
    sub_23F3837B0();
    sub_23F383E64(v43, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
    *(_WORD *)(v45 + 12) = 2080;
    sub_23F617BA0();
    v49 = sub_23F61C544();
    v51 = v50;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v49, v51, v57);
    *(_QWORD *)(v29 + 48) = v52;
    sub_23F61C790();
    sub_23F3837B0();
    sub_23F384A80();
    _os_log_impl(&dword_23F35A000, v37, v38, "ToolRetrievalService: retrieveTools query: %s, apps: %s", (uint8_t *)v45, 0x16u);
    swift_arrayDestroy();
    sub_23F366530();
  }
  sub_23F383E64(*(_QWORD *)(v29 + 184), *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
  sub_23F384A80();

  v55 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v55(v40, v41);
  *(_QWORD *)(v29 + 232) = v55;
  v56 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v29 + 240) = v56;
  *(_QWORD *)(v29 + 248) = sub_23F61A6E4();
  sub_23F35D2E8(&qword_256E70370);
  *v56 = v29;
  v56[1] = sub_23F5ECEE4;
  sub_23F5EE930();
  return sub_23F61C49C();
}

uint64_t sub_23F5ECEE4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 256) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  return sub_23F36664C();
}

uint64_t sub_23F5ECF48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = v0[31];
  v2 = v0[28];
  v4 = v0[19];
  v3 = v0[20];
  v5 = v0[2];
  v0[33] = v5;
  v6 = (_QWORD *)(v3 + *(int *)(v4 + 20));
  v6[3] = v1;
  v6[4] = &off_250FE0C18;
  *v6 = v5;
  v7 = *MEMORY[0x24BE575D8];
  v8 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v3, v7, v8);
  *(_QWORD *)(v3 + *(int *)(v4 + 24)) = 20;
  swift_retain();
  v9 = sub_23F61B4A0();
  v11 = v10;
  v0[34] = v10;
  v12 = (_QWORD *)swift_task_alloc();
  v0[35] = v12;
  *v12 = v0;
  v12[1] = sub_23F5ED02C;
  return sub_23F5F0024(v9, v11, v2);
}

uint64_t sub_23F5ED02C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)*v2;
  v4 = v7;
  sub_23F3B2010(&v7);
  v4[36] = v5;
  v4[37] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23F3837B0();
  if (!v1)
    v4[38] = a1;
  return swift_task_switch();
}

void sub_23F5ED0B8()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(void);
  uint8_t *v36;
  os_log_type_t v37;
  NSObject *v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_23F6190B8();
  sub_23F5EE8C0();
  sub_23F5EE8C0();
  v1 = sub_23F619E8C();
  v2 = sub_23F61C610();
  v3 = os_log_type_enabled(v1, v2);
  v4 = v0[36];
  if (!v3)
  {
    v26 = (void (*)(uint64_t, uint64_t))v0[29];
    v27 = v0[26];
    v28 = v0[24];
    sub_23F3D9B70();
    sub_23F3D9B70();

    v26(v27, v28);
    v42 = v0[20];
    v30 = v0[7];
    sub_23F61B4A0();
    sub_23F61B4A0();
    sub_23F61B9EC();
    v31 = (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D20];
    sub_23F61B998();
    sub_23F5C1FB8(&qword_256E6FDB0, 255, v31, MEMORY[0x24BEB9D38]);
    swift_retain();
    sub_23F61BFEC();
    sub_23F619010();
    swift_release();
    swift_release();
    swift_release();
    sub_23F50CD1C(v42, type metadata accessor for ToolRetrievalStageTwo);
    v32 = sub_23F619064();
    sub_23F40B3E8(v30, v33, v34, v32);
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F362CC8();
    sub_23F383870();
    swift_task_dealloc();
    swift_task_dealloc();
    v35 = (void (*)(void))sub_23F384760();
    v35();
    return;
  }
  v5 = (uint8_t *)sub_23F366668();
  sub_23F366668();
  *(_DWORD *)v5 = 136315138;
  v6 = *(_QWORD *)(v4 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  v38 = v1;
  v37 = v2;
  if (!v6)
    goto LABEL_21;
  v36 = v5;
  v8 = v0[17];
  v9 = v0[14];
  v41 = v0[11];
  sub_23F5EE82C();
  v10 = 0;
  sub_23F52E924();
  v46 = *(_QWORD *)(v4 + 16);
  v44 = *MEMORY[0x24BE57550];
  v43 = *MEMORY[0x24BE57558];
  v40 = *MEMORY[0x24BE57548];
  v39 = *MEMORY[0x24BE57540];
  v45 = v6;
  while (v46 != v10)
  {
    sub_23F5EE8F8();
    v11 = sub_23F5EE860(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88));
    if (v11 == v44)
      goto LABEL_13;
    if (v11 == v43)
    {
      v12 = v0[15];
      v13 = v0[12];
      v14 = v0[10];
      sub_23F4057A8(*(uint64_t (**)(uint64_t))(v9 + 96));
      v7 = v41;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v13, v12, v14);
      v15 = sub_23F61BCD4();
      v17 = v16;
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v13, v14);
    }
    else
    {
      if (v11 == v40 || v11 == v39)
      {
LABEL_13:
        v19 = v0[18];
        v20 = v0[16];
        (*(void (**)(_QWORD, _QWORD))(v9 + 96))(v0[15], v0[13]);
        v21 = sub_23F3840BC();
        v22(v21);
        v15 = sub_23F61B5A8();
        v17 = v23;
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v19, v20);
        goto LABEL_14;
      }
      (*(void (**)(_QWORD, _QWORD))(v9 + 8))(v0[15], v0[13]);
      v17 = 0x800000023F638B50;
      v15 = 0xD000000000000013;
    }
LABEL_14:
    if ((sub_23F5EE944() & 1) == 0)
    {
      sub_23F5EE814();
      v7 = v47;
    }
    v24 = *(_QWORD *)(v7 + 16);
    if (v24 >= *(_QWORD *)(v7 + 24) >> 1)
    {
      sub_23F37B47C();
      v7 = v47;
    }
    ++v10;
    *(_QWORD *)(v7 + 16) = v24 + 1;
    v25 = v7 + 16 * v24;
    *(_QWORD *)(v25 + 32) = v15;
    *(_QWORD *)(v25 + 40) = v17;
    if (v45 == v10)
    {
      v5 = v36;
LABEL_21:
      v0[3] = v7;
      sub_23F35D2E8(&qword_256E70580);
      sub_23F3EC7C8();
      sub_23F5EE880();
      sub_23F5EE8C8();
      sub_23F5EE8B0();
      v0[4] = v29;
      sub_23F5EE950();
      swift_bridgeObjectRelease();
      sub_23F3D9B70();
      sub_23F3D9B70();
      sub_23F38485C(&dword_23F35A000, v38, v37, "ToolRetrievalService: Combined set of tools:\n%s", v5);
      sub_23F3B17D4();
      sub_23F366530();
    }
  }
  __break(1u);
}

uint64_t sub_23F5ED5CC()
{
  uint64_t v0;

  sub_23F432AC4();
  sub_23F5EE7E4();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  return sub_23F4328EC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5ED610()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F432AC4();
  v1 = *(_QWORD *)(v0 + 160);
  swift_release();
  sub_23F50CD1C(v1, type metadata accessor for ToolRetrievalStageTwo);
  sub_23F5EE7E4();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  return sub_23F4328EC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5ED670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  v7 = sub_23F61BCE0();
  v6[11] = v7;
  v6[12] = *(_QWORD *)(v7 - 8);
  v6[13] = sub_23F366578();
  v8 = sub_23F55D9C0();
  v6[14] = v8;
  v6[15] = *(_QWORD *)(v8 - 8);
  v6[16] = sub_23F366578();
  v9 = sub_23F61B5D8();
  v6[17] = v9;
  v6[18] = *(_QWORD *)(v9 - 8);
  v6[19] = sub_23F366578();
  v10 = sub_23F619E98();
  v6[20] = v10;
  v6[21] = *(_QWORD *)(v10 - 8);
  v6[22] = sub_23F3E0220();
  v6[23] = sub_23F3E0220();
  v6[24] = sub_23F3E0220();
  return sub_23F36664C();
}

uint64_t sub_23F5ED734()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  _QWORD *v11;
  uint64_t v13;

  sub_23F5EE968();
  sub_23F3E0254();
  v1 = sub_23F619E8C();
  v2 = sub_23F61C610();
  if (os_log_type_enabled(v1, v2))
  {
    v4 = v0[6];
    v3 = v0[7];
    v5 = (uint8_t *)sub_23F366668();
    v13 = sub_23F366668();
    *(_DWORD *)v5 = 136315138;
    sub_23F617BA0();
    sub_23F37AE00(v4, v3, &v13);
    v0[4] = v6;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    sub_23F38485C(&dword_23F35A000, v1, v2, "Tool Retrieval Query: %s", v5);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v7 = v0[24];
  v8 = v0[20];
  v9 = v0[21];

  sub_23F384A80();
  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v0[25] = v10;
  v11 = (_QWORD *)swift_task_alloc();
  v0[26] = v11;
  *v11 = v0;
  v11[1] = sub_23F5ED8E0;
  return sub_23F5EB618(v0[6], v0[7], v0[8], v0[9]);
}

uint64_t sub_23F5ED8E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v7 = *v2;
  v4 = v7;
  sub_23F3B2010(&v7);
  *(_QWORD *)(v4 + 216) = v5;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    return sub_23F435B58((uint64_t (*)(void))v2[1]);
  }
  else
  {
    *(_QWORD *)(v4 + 224) = a1;
    return sub_23F36664C();
  }
}

void sub_23F5ED98C()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  unint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(void);
  os_log_type_t v44;
  uint8_t *v45;
  NSObject *v46;
  int v47;
  int v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_23F6190B8();
  sub_23F5EE8C0();
  sub_23F5EE8C0();
  v1 = sub_23F619E8C();
  v2 = sub_23F61C610();
  v3 = os_log_type_enabled(v1, v2);
  v4 = v0[27];
  if (v3)
  {
    v5 = (uint8_t *)sub_23F366668();
    sub_23F366668();
    *(_DWORD *)v5 = 136315138;
    v6 = *(_QWORD *)(v4 + 16);
    v7 = MEMORY[0x24BEE4AF8];
    v45 = v5;
    v46 = v1;
    v44 = v2;
    if (!v6)
    {
LABEL_21:
      v0[2] = v7;
      sub_23F35D2E8(&qword_256E70580);
      sub_23F3EC7C8();
      sub_23F5EE880();
      sub_23F5EE8C8();
      sub_23F5EE8B0();
      v0[3] = v29;
      sub_23F5EE950();
      swift_bridgeObjectRelease();
      sub_23F3D9B70();
      sub_23F3D9B70();
      sub_23F38485C(&dword_23F35A000, v46, v44, "Combined set of tools:\n%s", v45);
      sub_23F3B17D4();
      sub_23F366530();
    }
    v8 = v0[18];
    v9 = v0[15];
    v49 = v0[12];
    sub_23F5EE82C();
    v10 = 0;
    sub_23F52E924();
    v53 = *(_QWORD *)(v4 + 16);
    v51 = *MEMORY[0x24BE57550];
    v50 = *MEMORY[0x24BE57558];
    v48 = *MEMORY[0x24BE57548];
    v47 = *MEMORY[0x24BE57540];
    v52 = v6;
    while (1)
    {
      if (v53 == v10)
      {
        __break(1u);
        return;
      }
      sub_23F5EE8F8();
      v11 = sub_23F5EE860(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88));
      if (v11 == v51)
        break;
      if (v11 == v50)
      {
        v12 = v0[13];
        v13 = v0[11];
        sub_23F4057A8(*(uint64_t (**)(uint64_t))(v9 + 96));
        v7 = v49;
        sub_23F5EE8E8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 32));
        v14 = sub_23F61BCD4();
        v16 = v15;
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v12, v13);
      }
      else
      {
        if (v11 == v48 || v11 == v47)
          break;
        (*(void (**)(_QWORD, _QWORD))(v9 + 8))(v0[16], v0[14]);
        v16 = 0x800000023F638B50;
        v14 = 0xD000000000000013;
      }
LABEL_14:
      if ((sub_23F5EE944() & 1) == 0)
      {
        sub_23F5EE814();
        v7 = v54;
      }
      v25 = *(_QWORD *)(v7 + 16);
      if (v25 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_23F37B47C();
        v7 = v54;
      }
      ++v10;
      *(_QWORD *)(v7 + 16) = v25 + 1;
      v26 = v7 + 16 * v25;
      *(_QWORD *)(v26 + 32) = v14;
      *(_QWORD *)(v26 + 40) = v16;
      if (v52 == v10)
        goto LABEL_21;
    }
    v18 = v0[19];
    v20 = v0[16];
    v19 = v0[17];
    (*(void (**)(uint64_t, _QWORD))(v9 + 96))(v20, v0[14]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v18, v20, v19);
    v14 = sub_23F61B5A8();
    v16 = v21;
    v22 = sub_23F3840BC();
    v24(v22, v23);
    goto LABEL_14;
  }
  v27 = (void (*)(uint64_t))v0[25];
  sub_23F3D9B70();
  sub_23F3D9B70();

  v28 = sub_23F3840BC();
  v27(v28);
  sub_23F5EE968();
  v30 = sub_23F619E8C();
  v31 = sub_23F61C61C();
  if (os_log_type_enabled(v30, v31))
  {
    v33 = (uint8_t *)sub_23F366668();
    *(_WORD *)v33 = 0;
    _os_log_impl(&dword_23F35A000, v30, v31, "Returning a QueryDecorationToolRetrievalResponse", v33, 2u);
    sub_23F366530();
  }
  v34 = (void (*)(uint64_t, uint64_t))v0[25];
  v35 = v0[22];
  v36 = v0[20];
  v37 = v0[5];

  v34(v35, v36);
  sub_23F61B9EC();
  sub_23F61B998();
  sub_23F5EE97C(&qword_256E6FDB0, v38, v39, MEMORY[0x24BEB9D38]);
  sub_23F3E0254();
  swift_retain();
  sub_23F61BFEC();
  sub_23F3840BC();
  sub_23F619010();
  swift_release();
  swift_release();
  v40 = sub_23F619064();
  sub_23F40B3E8(v37, v41, v42, v40);
  sub_23F366698();
  sub_23F383888();
  sub_23F366708();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  v43 = (void (*)(void))sub_23F384760();
  v43();
}

uint64_t ToolRetrievalService.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ToolRetrievalService.__deallocating_deinit()
{
  ToolRetrievalService.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t ToolRetrievalService.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5EDEFC()
{
  return ToolRetrievalService.unownedExecutor.getter();
}

unint64_t sub_23F5EDF14()
{
  unint64_t result;

  result = qword_256E7ED10;
  if (!qword_256E7ED10)
  {
    result = MEMORY[0x242670A44](&unk_23F632C70, &type metadata for ToolRetrievalServiceError);
    atomic_store(result, &qword_256E7ED10);
  }
  return result;
}

uint64_t method lookup function for ToolRetrievalService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ToolRetrievalService.retrieveTools(query:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v0 + 120) + *(_QWORD *)(*(_QWORD *)v0 + 120));
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_23F54DBCC(v1);
  v3 = sub_23F507D4C(v2);
  return v5(v3);
}

uint64_t dispatch thunk of ToolRetrievalService.retrieveTools(query:apps:appEntities:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v5 + 128)
                                                                            + *(_QWORD *)(*(_QWORD *)v5 + 128));
  v12 = swift_task_alloc();
  v13 = (_QWORD *)sub_23F54DBCC(v12);
  *v13 = v6;
  v13[1] = sub_23F5EE798;
  return v15(a1, a2, a3, a4, a5);
}

uint64_t storeEnumTagSinglePayload for ToolRetrievalServiceError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23F5EE0A0 + 4 * byte_23F632B35[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23F5EE0D4 + 4 * asc_23F632B30[v4]))();
}

uint64_t sub_23F5EE0D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5EE0DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5EE0E4);
  return result;
}

uint64_t sub_23F5EE0F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5EE0F8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23F5EE0FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5EE104(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ToolRetrievalServiceError()
{
  return &type metadata for ToolRetrievalServiceError;
}

unint64_t sub_23F5EE128()
{
  unint64_t result;

  result = qword_256E7EE00;
  if (!qword_256E7EE00)
  {
    result = MEMORY[0x242670A44](&unk_23F632C48, &type metadata for ToolRetrievalServiceError);
    atomic_store(result, (unint64_t *)&qword_256E7EE00);
  }
  return result;
}

unint64_t sub_23F5EE164()
{
  unint64_t result;

  result = qword_256E7EE08;
  if (!qword_256E7EE08)
  {
    result = MEMORY[0x242670A44](&unk_23F632BC8, &type metadata for ToolRetrievalServiceError);
    atomic_store(result, (unint64_t *)&qword_256E7EE08);
  }
  return result;
}

uint64_t sub_23F5EE1A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F432AC4();
  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v6 = swift_task_alloc();
  v7 = (_QWORD *)sub_23F54DBCC(v6);
  v8 = sub_23F507D4C(v7);
  return sub_23F5EB7C8(v8, v9, v1, v2, v3, v4, v5);
}

uint64_t type metadata accessor for LooselyComparableRetrievedTool()
{
  uint64_t result;

  result = qword_256E7EEC0;
  if (!qword_256E7EEC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F5EE250()
{
  uint64_t v0;

  sub_23F5EE914();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F5EE290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)sub_23F54DBCC(v3);
  v5 = sub_23F54DCA8(v4);
  return sub_23F5EC9E8(v5, v6, v7, v8, v9, v10, v2, v1);
}

uint64_t sub_23F5EE304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E717A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5EE34C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LooselyComparableRetrievedTool();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5EE390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LooselyComparableRetrievedTool();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5EE3D4()
{
  sub_23F5EE914();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F5EE404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F432AC4();
  v1 = *(_QWORD *)(v0 + 56);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_23F54DBCC(v2);
  v4 = sub_23F54DCA8(v3);
  return sub_23F5EB51C(v4, v5, v6, v7, v8, v9, v1);
}

uint64_t sub_23F5EE468()
{
  sub_23F5EE914();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F5EE490(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = swift_task_alloc();
  v9 = (_QWORD *)sub_23F54DBCC(v8);
  *v9 = v2;
  v9[1] = sub_23F5EE798;
  return sub_23F5EB5B0(a1, v4, v5, v7, v6);
}

uint64_t sub_23F5EE504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C20();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_23F5EE540(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F618C20();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23F5EE574(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F5EE5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F5EE5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F5EE640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F5EE684()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5EE690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F52E924();
  return sub_23F36195C(a1, a2, v4);
}

uint64_t sub_23F5EE6C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5EE6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F52E924();
  return sub_23F36196C(a1, a2, a2, v4);
}

uint64_t sub_23F5EE700()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F618C20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F5EE768()
{
  return sub_23F5C1FB8(&qword_256E7EEF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for LooselyComparableRetrievedTool, (uint64_t)&unk_23F632CD0);
}

uint64_t sub_23F5EE79C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F5EE7E4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F5EE800(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F5EE80C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  return sub_23F50CD1C(a1, v1);
}

void sub_23F5EE814()
{
  sub_23F37B47C();
}

void sub_23F5EE82C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 80) = v0;
  sub_23F37B47C();
}

uint64_t sub_23F5EE860@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F5EE86C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36196C(v0, 1, 1, v1);
}

uint64_t sub_23F5EE880()
{
  return sub_23F61C088();
}

uint64_t sub_23F5EE894()
{
  return sub_23F618BE4();
}

uint64_t sub_23F5EE89C()
{
  return sub_23F61C04C();
}

void sub_23F5EE8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v0, v1, (uint64_t *)(v2 - 88));
}

uint64_t sub_23F5EE8C0()
{
  return swift_retain_n();
}

uint64_t sub_23F5EE8C8()
{
  return swift_bridgeObjectRelease();
}

void sub_23F5EE8D8(uint64_t a1)
{
  uint64_t v1;

  sub_23F3C7C74(v1 - 120, a1);
}

uint64_t sub_23F5EE8E8@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t sub_23F5EE8F8()
{
  return sub_23F618BCC();
}

uint64_t sub_23F5EE914()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F5EE930()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5EE944()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F5EE950()
{
  return sub_23F61C790();
}

void sub_23F5EE95C()
{
  sub_23F37C690();
}

uint64_t sub_23F5EE968()
{
  return sub_23F6190B8();
}

uint64_t sub_23F5EE970(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v4)(uint64_t);

  return sub_23F5C1FB8(a1, 255, v4, a4);
}

uint64_t sub_23F5EE97C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v4)(uint64_t);

  return sub_23F5C1FB8(a1, 255, v4, a4);
}

uint64_t *sub_23F5EE988(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F618C08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_23F5EEA34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + *(int *)(a2 + 20));
}

uint64_t sub_23F5EEA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v6 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23F5EEAF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  sub_23F361AD0((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23F5EEB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v6 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_23F5EEBD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23F5EEC60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5EEC70()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ToolRetrievalStageTwo(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7EF68);
}

uint64_t sub_23F5EEC94()
{
  return sub_23F5F38A4();
}

uint64_t sub_23F5EECA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  unint64_t v29;
  int v30;
  int v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_23F61BCE0();
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F618BB4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F61B5D8();
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v36 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 + 16);
  v13 = MEMORY[0x24BEE4AF8];
  if (v12)
  {
    v28 = v2;
    v43 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v13 = v43;
    v14 = *(_QWORD *)(sub_23F618C20() - 8);
    v15 = a2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v40 = *(_QWORD *)(v14 + 72);
    v39 = *MEMORY[0x24BE57550];
    v35 = *MEMORY[0x24BE57558];
    v31 = *MEMORY[0x24BE57548];
    v30 = *MEMORY[0x24BE57540];
    v29 = (unint64_t)"der:toolCandidateRanker:)";
    v41 = v7;
    v42 = v6;
    while (1)
    {
      sub_23F618BCC();
      v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
      if (v16 == v39)
        break;
      if (v16 == v35)
      {
        (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
        v17 = v32;
        v18 = v33;
        v19 = v34;
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v32, v9, v34);
        v20 = sub_23F61BCD4();
LABEL_12:
        v26 = v20;
        v25 = v21;
        (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v19);
        goto LABEL_13;
      }
      if (v16 == v31 || v16 == v30)
        break;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v25 = v29 | 0x8000000000000000;
      v26 = 0xD000000000000013;
LABEL_13:
      v43 = v13;
      v23 = *(_QWORD *)(v13 + 16);
      if (v23 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_23F37B47C();
        v13 = v43;
      }
      *(_QWORD *)(v13 + 16) = v23 + 1;
      v24 = v13 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v26;
      *(_QWORD *)(v24 + 40) = v25;
      v7 = v41;
      v15 += v40;
      --v12;
      v6 = v42;
      if (!v12)
        return v13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    v17 = v36;
    v18 = v37;
    v19 = v38;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v36, v9, v38);
    v20 = sub_23F61B5A8();
    goto LABEL_12;
  }
  return v13;
}

uint64_t sub_23F5EEF90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = sub_23F61B5D8();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v31 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v30 = (char *)v27 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
    return v8;
  v27[1] = v1;
  v34 = MEMORY[0x24BEE4AF8];
  sub_23F37B47C();
  result = sub_23F3C0378(a1);
  v10 = result;
  v12 = v11;
  v14 = v13 & 1;
  v28 = a1;
  v29 = a1 + 56;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(v29 + (((unint64_t)v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_15;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v12)
      goto LABEL_16;
    v15 = *(_QWORD *)(a1 + 48);
    v17 = v32;
    v16 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v30, v15 + *(_QWORD *)(v32 + 72) * v10, v33);
    v19 = v31;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v31, v18, v16);
    v20 = sub_23F61B5A8();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v8 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F37B47C();
      v8 = v34;
    }
    v23 = *(_QWORD *)(v8 + 16);
    if (v23 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_23F37B47C();
      v8 = v34;
    }
    *(_QWORD *)(v8 + 16) = v23 + 1;
    v24 = v8 + 16 * v23;
    *(_QWORD *)(v24 + 32) = v20;
    *(_QWORD *)(v24 + 40) = v22;
    a1 = v28;
    result = sub_23F3C0290(v10, v12, v14 & 1, v28);
    v10 = result;
    v12 = v25;
    v14 = v26 & 1;
    if (!--v7)
    {
      sub_23F382E0C(result, v25, v26 & 1);
      return v8;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

unint64_t sub_23F5EF1D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (**v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  v1 = sub_23F61BCE0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F38F964();
  v5 = v4 - v3;
  v6 = sub_23F55D9C0();
  v7 = *(uint64_t (***)(uint64_t, uint64_t))(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F38F964();
  v10 = v9 - v8;
  v11 = sub_23F384B44();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3B1F34();
  sub_23F618BCC();
  v13 = v7[11](v10, v6);
  if (v13 == *MEMORY[0x24BE57550])
    goto LABEL_9;
  if (v13 != *MEMORY[0x24BE57558])
  {
    if (v13 != *MEMORY[0x24BE57548] && v13 != *MEMORY[0x24BE57540])
    {
      sub_23F3C0640(v7[1]);
      return 0xD000000000000013;
    }
LABEL_9:
    sub_23F3C0640(v7[12]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v0, v10, v11);
    v14 = sub_23F61B5A8();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v11);
    return v14;
  }
  sub_23F3C0640(v7[12]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v10, v1);
  v14 = sub_23F61BCD4();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
  return v14;
}

uint64_t sub_23F5EF394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  os_log_type_t v26;
  _WORD *v27;
  uint64_t v28;
  _WORD *v29;
  uint64_t v30;
  uint64_t v31;
  _WORD *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  os_log_type_t v46;
  _WORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  os_log_type_t v61;
  _WORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  os_log_type_t v78;
  _WORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t *v104;
  void (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t);
  __int128 v109[2];
  __int128 v110;
  uint64_t v111;
  _UNKNOWN **v112;
  uint64_t v113;

  v101 = a4;
  v102 = a5;
  v98 = a3;
  v106 = a2;
  v107 = a1;
  v99 = type metadata accessor for ToolRetrievalStageFour(0);
  MEMORY[0x24BDAC7A8](v99);
  sub_23F38F964();
  v100 = v7 - v6;
  v8 = sub_23F619E98();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t *)((char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v10);
  v103 = (char *)&v96 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v104 = (uint64_t *)((char *)&v96 - v16);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v96 - v17;
  v19 = sub_23F618B90();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  sub_23F38F964();
  v23 = v22 - v21;
  v113 = MEMORY[0x24BEE4AF8];
  v24 = *MEMORY[0x24BE57450];
  v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 104);
  v105(v22 - v21, v24, v19);
  LOBYTE(v25) = sub_23F5F4480();
  v108 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v108(v23, v19);
  if ((v25 & 1) != 0)
  {
    sub_23F6190B8();
    sub_23F619E8C();
    v26 = sub_23F3B1A04();
    if (sub_23F49BA04(v26))
    {
      v27 = (_WORD *)sub_23F3EEE70();
      v97 = v23;
      v28 = v8;
      v29 = v27;
      *v27 = 0;
      sub_23F5CF74C(&dword_23F35A000, v30, v31, "Tool Retrieval stage one is enabled");
      v32 = v29;
      v8 = v28;
      v23 = v97;
      MEMORY[0x242670B70](v32, -1, -1);
    }

    sub_23F383CA8((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    sub_23F5F443C();
    if (v5)
      return swift_bridgeObjectRelease();
    v97 = v8;
    v33 = sub_23F61A6E4();
    v34 = sub_23F5F4470(v33, (uint64_t)&off_250FE0C18);
    v35 = (int *)type metadata accessor for ToolRetrievalStageOne(v34);
    v36 = sub_23F5F4430((uint64_t)v35, (uint64_t)&off_250FE0DB8);
    v37 = sub_23F5F4408();
    sub_23F5F432C(v37);
    sub_23F362678(v109, (uint64_t)v36 + v35[5]);
    *(uint64_t *)((char *)v36 + v35[6]) = 100;
    v38 = (uint64_t *)((char *)v36 + v35[7]);
    v39 = v102;
    *v38 = v101;
    v38[1] = v39;
    v40 = v113;
    sub_23F617BA0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F5F43D8();
      v40 = v88;
      v113 = v88;
    }
    v102 = v9;
    v25 = *(_QWORD *)(v40 + 16);
    if (v25 >= *(_QWORD *)(v40 + 24) >> 1)
    {
      sub_23F5F43D8();
      v113 = v89;
    }
    sub_23F5F43C8();
    sub_23F5F4460();
    MEMORY[0x24BDAC7A8](v41);
    sub_23F5F42B0(v42, v43, v96);
    sub_23F5F42FC();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v110);
    v9 = v102;
  }
  v105(v23, *MEMORY[0x24BE57458], v19);
  sub_23F5F4480();
  v44 = sub_23F5F43A4();
  if ((v25 & 1) != 0)
  {
    v45 = v104;
    sub_23F6190B8();
    sub_23F619E8C();
    v46 = sub_23F3B1A04();
    if (sub_23F49BA04(v46))
    {
      v47 = (_WORD *)sub_23F3EEE70();
      sub_23F5F43F4(v47);
      sub_23F5CF74C(&dword_23F35A000, v48, v49, "Tool Retrieval stage two is enabled");
      sub_23F5F4344();
    }

    sub_23F383CA8((uint64_t)v104, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    sub_23F5F443C();
    if (v5)
      return swift_bridgeObjectRelease();
    v50 = sub_23F5F441C();
    v51 = sub_23F5F4470(v50, (uint64_t)&off_250FE0C18);
    v52 = type metadata accessor for ToolRetrievalStageTwo(v51);
    v53 = sub_23F5F4430(v52, (uint64_t)&off_250FE0C38);
    v54 = sub_23F5F4408();
    sub_23F5F432C(v54);
    sub_23F362678(v109, (uint64_t)v53 + *(int *)(v52 + 20));
    *(uint64_t *)((char *)v53 + *(int *)(v52 + 24)) = 20;
    v55 = v113;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F5F43D8();
      v55 = v92;
      v113 = v92;
    }
    v104 = v12;
    v25 = *(_QWORD *)(v55 + 16);
    if (v25 >= *(_QWORD *)(v55 + 24) >> 1)
    {
      sub_23F5F43D8();
      v113 = v93;
    }
    sub_23F5F43C8();
    v12 = &v96;
    sub_23F5F4460();
    MEMORY[0x24BDAC7A8](v56);
    sub_23F5F42B0(v57, v58, v96);
    sub_23F5F42FC();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v110);
    sub_23F5F449C();
  }
  sub_23F5F4488(v44, *MEMORY[0x24BE57470]);
  sub_23F5F4480();
  v59 = sub_23F5F43A4();
  if ((v25 & 1) != 0)
  {
    v60 = v103;
    sub_23F6190B8();
    sub_23F619E8C();
    v61 = sub_23F3B1A04();
    if (sub_23F49BA04(v61))
    {
      v62 = (_WORD *)sub_23F3EEE70();
      sub_23F5F43F4(v62);
      sub_23F5CF74C(&dword_23F35A000, v63, v64, "Tool Retrieval stage three is enabled");
      sub_23F5F4344();
    }

    sub_23F383CA8((uint64_t)v103, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    sub_23F5F443C();
    if (v5)
      return swift_bridgeObjectRelease();
    v66 = sub_23F5F441C();
    v67 = sub_23F5F4470(v66, (uint64_t)&off_250FE0C18);
    v68 = type metadata accessor for ToolRetrievalStageThree(v67);
    v69 = sub_23F5F4430(v68, (uint64_t)&off_250FE0DC8);
    v70 = (uint64_t *)((char *)v69 + *(int *)(v68 + 24));
    v71 = sub_23F61B68C();
    v72 = MEMORY[0x24BE57000];
    v70[3] = v71;
    v70[4] = v72;
    *v70 = v98;
    v73 = sub_23F5F4408();
    sub_23F5F432C(v73);
    sub_23F362678(v109, (uint64_t)v69 + *(int *)(v68 + 20));
    v74 = v113;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F5F44BC();
      v74 = v94;
      v113 = v94;
    }
    v104 = v12;
    v25 = *(_QWORD *)(v74 + 16);
    if (v25 >= *(_QWORD *)(v74 + 24) >> 1)
    {
      sub_23F5F44BC();
      v113 = v95;
    }
    sub_23F5F43C8();
    v12 = &v96;
    sub_23F5F4460();
    MEMORY[0x24BDAC7A8](v75);
    sub_23F5F42B0(v76, v77, v96);
    sub_23F5F42FC();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v110);
    sub_23F5F449C();
  }
  sub_23F5F4488(v59, *MEMORY[0x24BE57460]);
  sub_23F5F4480();
  sub_23F5F43A4();
  if ((v25 & 1) != 0)
  {
    sub_23F6190B8();
    sub_23F619E8C();
    v78 = sub_23F3B1A04();
    if (sub_23F49BA04(v78))
    {
      v79 = (_WORD *)sub_23F3EEE70();
      sub_23F5F43F4(v79);
      sub_23F5CF74C(&dword_23F35A000, v80, v81, "Tool Retrieval stage four is enabled");
      sub_23F5F4344();
    }

    sub_23F383CA8((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    v82 = *MEMORY[0x24BE575E0];
    v83 = sub_23F5F4408();
    v84 = v100;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 104))(v100, v82, v83);
    v85 = v113;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F5F44B0();
      v85 = v90;
      v113 = v90;
    }
    v86 = *(_QWORD *)(v85 + 16);
    if (v86 >= *(_QWORD *)(v85 + 24) >> 1)
    {
      sub_23F5F44B0();
      v85 = v91;
      v113 = v91;
    }
    v111 = v99;
    v112 = &off_250FE0DD8;
    v87 = sub_23F36145C((uint64_t *)&v110);
    sub_23F5F2C70(v84, (uint64_t)v87);
    *(_QWORD *)(v85 + 16) = v86 + 1;
    sub_23F362678(&v110, v85 + 40 * v86 + 32);
    sub_23F5F2CB4(v84);
  }
  return v113;
}

uint64_t sub_23F5EFAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v6[48] = a5;
  v6[49] = v5;
  v6[46] = a3;
  v6[47] = a4;
  v6[44] = a1;
  v6[45] = a2;
  v8 = sub_23F3B1728();
  v6[50] = v8;
  v6[51] = *(_QWORD *)(v8 - 8);
  v6[52] = sub_23F366578();
  v6[53] = *(_QWORD *)(a5 - 8);
  v6[54] = sub_23F366578();
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F5EFB44()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  os_log_type_t v14;
  _WORD *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t (*v19)(uint64_t);

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 424) + 16))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 384));
  sub_23F35D2E8(&qword_256E7EFB0);
  if (sub_23F5F4314())
  {
    sub_23F5F4410();
    sub_23F35EA9C((_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 240));
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 440) = v1;
    *v1 = v0;
    v1[1] = sub_23F5EFD78;
    v2 = sub_23F4414C8(*(_QWORD *)(v0 + 352));
    return sub_23F5F0BD0(v2, v3);
  }
  else
  {
    sub_23F35D2E8(&qword_256E7EFB8);
    if (sub_23F5F4314())
    {
      sub_23F5F4410();
      sub_23F35EA9C((_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 200));
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 456) = v5;
      *v5 = v0;
      v5[1] = sub_23F5EFE48;
      v6 = sub_23F4414C8(*(_QWORD *)(v0 + 352));
      return sub_23F5F0024(v6, v7, v8);
    }
    else
    {
      sub_23F35D2E8(&qword_256E7EFC0);
      if (sub_23F5F4314())
      {
        sub_23F5F4410();
        v9 = (_QWORD *)sub_23F384AB4();
        sub_23F35EA9C(v9, v10);
        v11 = (_QWORD *)sub_23F3629C0();
        *(_QWORD *)(v0 + 472) = v11;
        *v11 = v0;
        v11[1] = sub_23F5EFF18;
        v12 = sub_23F4414C8(*(_QWORD *)(v0 + 352));
        return v19(v12);
      }
      else
      {
        v13 = *(void **)(v0 + 416);
        sub_23F5EE968();
        sub_23F619E8C();
        v14 = sub_23F3F0EEC();
        if (sub_23F3F0E3C(v14))
        {
          v15 = (_WORD *)sub_23F366668();
          sub_23F3F0EF4(v15);
          sub_23F3F0DF0(&dword_23F35A000, v16, v17, "Unsupported tool retrieval stage type.");
          sub_23F366530();
        }

        sub_23F43A30C();
        sub_23F5EFFE8();
        sub_23F362D64();
        *v18 = 0;
        swift_willThrow();
        sub_23F5F42D4();
        sub_23F3666DC();
        sub_23F3666C4();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
    }
  }
}

uint64_t sub_23F5EFD78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23F3B1998();
  v3[32] = v1;
  v3[33] = v2;
  v3[34] = v4;
  v3[35] = v0;
  *v5 = *v1;
  v3[56] = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5EFDD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 216);
  sub_23F5F435C();
  sub_23F3666C4();
  sub_23F3666EC();
  v1 = sub_23F5F4390();
  return sub_23F5F42EC(v1, v2, v3);
}

uint64_t sub_23F5EFE0C()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 216);
  sub_23F5F42D4();
  sub_23F3666DC();
  sub_23F3666C4();
  return sub_23F3B182C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5EFE48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23F3B1998();
  v3[36] = v1;
  v3[37] = v2;
  v3[38] = v4;
  v3[39] = v0;
  *v5 = *v1;
  v3[58] = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5EFEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 176);
  sub_23F5F435C();
  sub_23F3666C4();
  sub_23F3666EC();
  v1 = sub_23F5F4390();
  return sub_23F5F42EC(v1, v2, v3);
}

uint64_t sub_23F5EFEDC()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 176);
  sub_23F5F42D4();
  sub_23F3666DC();
  sub_23F3666C4();
  return sub_23F3B182C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5EFF18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23F3B1998();
  v3[40] = v1;
  v3[41] = v2;
  v3[42] = v4;
  v3[43] = v0;
  *v5 = *v1;
  v3[60] = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5EFF70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
  sub_23F5F435C();
  sub_23F3666C4();
  sub_23F3666EC();
  v1 = sub_23F5F4390();
  return sub_23F5F42EC(v1, v2, v3);
}

uint64_t sub_23F5EFFAC()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
  sub_23F5F42D4();
  sub_23F3666DC();
  sub_23F3666C4();
  return sub_23F3B182C(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t sub_23F5EFFE8()
{
  unint64_t result;

  result = qword_256E7EFC8;
  if (!qword_256E7EFC8)
  {
    result = MEMORY[0x242670A44](&unk_23F633004, &type metadata for ToolRetrievalStageError);
    atomic_store(result, &qword_256E7EFC8);
  }
  return result;
}

uint64_t sub_23F5F0024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v5 = sub_23F3B1728();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = sub_23F366654();
  v4[11] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

#error "23F5F00C8: call analysis failed (funcsize=74)"

uint64_t sub_23F5F01A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_23F557178();
  *v4 = *v3;
  *(_QWORD *)(v2 + 120) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v2 + 128) = v0;
  }
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F5F0208()
{
  _QWORD *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v19;

  v1 = v0[11];
  v2 = v0[12];
  v3 = v0[7];
  *(_QWORD *)(sub_23F384908() + 16) = v3;
  sub_23F368290();
  v5 = v4;
  sub_23F3837B0();
  sub_23F366708();
  sub_23F3EEFC8(*(_QWORD *)(v3 + *(int *)(v2 + 24)), v5);
  sub_23F3B9FCC();
  swift_retain();
  swift_retain();
  sub_23F5EE968();
  sub_23F5EE8C0();
  sub_23F5EE8C0();
  sub_23F619E8C();
  v6 = sub_23F507D60();
  if (os_log_type_enabled(v1, v6))
  {
    v7 = (uint8_t *)sub_23F366668();
    v19 = sub_23F366668();
    *(_DWORD *)v7 = 136315138;
    v8 = sub_23F384AB4();
    v10 = sub_23F5F04DC(v8, v9);
    sub_23F37AE00(v10, v11, &v19);
    v0[3] = v12;
    sub_23F61C790();
    sub_23F384120();
    sub_23F3D9B70();
    sub_23F3D9B70();
    sub_23F38485C(&dword_23F35A000, v1, v6, "Stage two tools:\n%s", v7);
    sub_23F57D7BC();
    sub_23F366530();
  }
  v13 = v0[11];
  v14 = v0[8];
  v15 = v0[9];
  swift_release_n();
  swift_release_n();

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  swift_task_dealloc();
  sub_23F362CC8();
  v16 = sub_23F384AB4();
  return v17(v16);
}

uint64_t sub_23F5F0418()
{
  uint64_t v0;

  swift_release();
  sub_23F362CC8();
  sub_23F3666DC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F5F0458()
{
  sub_23F5F4258();
  return sub_23F61CCAC();
}

uint64_t sub_23F5F0480()
{
  sub_23F5F4258();
  return sub_23F61CCA0();
}

uint64_t sub_23F5F04A8()
{
  uint64_t v0;

  v0 = qword_256E7EF00;
  sub_23F617BA0();
  return v0;
}

uint64_t sub_23F5F04DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_retain();
  swift_retain();
  sub_23F5EECA4(a1, a2);
  sub_23F3668FC();
  swift_release();
  sub_23F35D2E8(&qword_256E70580);
  sub_23F3EC7C8();
  v4 = sub_23F61C088();
  sub_23F362D08();
  return v4;
}

uint64_t sub_23F5F0580(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v2 = sub_23F618D40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61BD40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BEE4AF8];
  v38 = *(_QWORD *)(a1 + 16);
  if (!v38)
    return MEMORY[0x24BEE4AF8];
  v36 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v10 = *(_QWORD *)(v7 + 72);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v35 = v10;
  v32 = a1;
  sub_23F617BA0();
  v11 = 0;
  v40 = v9;
  v33 = v6;
  v37 = v7;
  while (1)
  {
    v34(v39, v36 + v35 * v11, v6);
    v12 = sub_23F61BD34();
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      v41 = v9;
      sub_23F37C6C4();
      v14 = v41;
      v15 = v12 + 40;
      do
      {
        sub_23F617BA0();
        sub_23F618D34();
        v41 = v14;
        v16 = *(_QWORD *)(v14 + 16);
        if (v16 >= *(_QWORD *)(v14 + 24) >> 1)
        {
          sub_23F37C6C4();
          v14 = v41;
        }
        v15 += 16;
        *(_QWORD *)(v14 + 16) = v16 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v14+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v16, v5, v2);
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease();
      v6 = v33;
    }
    else
    {
      swift_bridgeObjectRelease();
      v14 = v9;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v6);
    v17 = *(_QWORD *)(v14 + 16);
    v18 = *(_QWORD *)(v40 + 16);
    if (__OFADD__(v18, v17))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = v40;
    if (!isUniquelyReferenced_nonNull_native || v18 + v17 > *(_QWORD *)(v40 + 24) >> 1)
    {
      sub_23F3781DC();
      v20 = v21;
    }
    v9 = MEMORY[0x24BEE4AF8];
    v22 = *(_QWORD *)(v14 + 16);
    v40 = v20;
    if (v22)
    {
      v23 = *(_QWORD *)(v20 + 16);
      if ((*(_QWORD *)(v20 + 24) >> 1) - v23 < v17)
        goto LABEL_30;
      v24 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v25 = *(_QWORD *)(v3 + 72);
      v26 = v20 + v24 + v25 * v23;
      if (v14 + v24 < v26 + v25 * v17 && v26 < v14 + v24 + v25 * v17)
        goto LABEL_32;
      swift_arrayInitWithCopy();
      if (v17)
      {
        v28 = *(_QWORD *)(v40 + 16);
        v29 = __OFADD__(v28, v17);
        v30 = v28 + v17;
        if (v29)
          goto LABEL_31;
        *(_QWORD *)(v40 + 16) = v30;
      }
    }
    else if (v17)
    {
      goto LABEL_29;
    }
    ++v11;
    swift_bridgeObjectRelease();
    if (v11 == v38)
    {
      swift_bridgeObjectRelease();
      return v40;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F5F08E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_23F618C08();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F618BB4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61AFCC();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE57558], v8);
  sub_23F61AFD8();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  sub_23F618BC0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  v12 = sub_23F61AFE4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
}

uint64_t sub_23F5F0A30@<X0>(uint64_t a1@<X1>, void (*a2)(void)@<X2>, unsigned int *a3@<X3>, void (*a4)(uint64_t)@<X4>, uint64_t (*a5)(_QWORD)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  unsigned int *v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);

  v31 = a6;
  v32 = a5;
  v26 = a3;
  v27 = a4;
  v30 = a1;
  v8 = sub_23F5F4408();
  v28 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3B1F34();
  v9 = sub_23F384B44();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F55D9C0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F38F964();
  v17 = v16 - v15;
  a2();
  v18 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v17, *v26, v13);
  v27(v18);
  a2();
  v19 = sub_23F61B56C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_23F5F0580(v19);
  sub_23F362984();
  v21 = v28;
  v20 = v29;
  v22 = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v6, v30, v29);
  sub_23F618BC0();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
  v23 = v32(0);
  return sub_23F3C3DC8(*(_QWORD *)(v23 - 8));
}

uint64_t sub_23F5F0BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  v4 = sub_23F3B1728();
  v3[16] = v4;
  v3[17] = *(_QWORD *)(v4 - 8);
  v3[18] = sub_23F366654();
  v3[19] = sub_23F3666CC();
  v3[20] = sub_23F3666CC();
  v5 = sub_23F618B90();
  v3[21] = v5;
  v3[22] = *(_QWORD *)(v5 - 8);
  v3[23] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5F0C44()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t (*v11)(uint64_t);

  v2 = v0[22];
  v1 = v0[23];
  v3 = v0[21];
  v4 = v0[15];
  v5 = type metadata accessor for ToolRetrievalStageOne(0);
  v0[24] = v5;
  sub_23F382FC4(v4 + *(int *)(v5 + 20), (uint64_t)(v0 + 2));
  sub_23F5F44C8();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BE57430], v3);
  v6 = sub_23F618B84();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = 0;
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(v0[15] + *(int *)(v5 + 28) + 8);
    sub_23F617BA0();
  }
  v0[25] = v7;
  v8 = (_QWORD *)sub_23F3629C0();
  v0[26] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_23F5F0D50;
  v9 = sub_23F4414C8(v0[13]);
  return v11(v9);
}

uint64_t sub_23F5F0D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_23F557178();
  *v4 = *v3;
  *(_QWORD *)(v2 + 216) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_QWORD *)(v2 + 224) = v0;
    swift_bridgeObjectRelease();
  }
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F5F0DB0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(NSObject **)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 120);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  *(_QWORD *)(sub_23F384908() + 16) = v3;
  sub_23F36FB40();
  swift_bridgeObjectRelease();
  sub_23F3666EC();
  sub_23F3BA224();
  sub_23F3EF098(*(_QWORD *)(v3 + *(int *)(v1 + 24)), v4);
  v6 = v5;
  v8 = v7;
  swift_retain();
  swift_retain();
  v9 = sub_23F384AB4();
  sub_23F5F17A8(v9, v10, v6, v8);
  v12 = v11;
  v14 = v13;
  sub_23F5EE968();
  sub_23F5EE8C0();
  sub_23F5EE8C0();
  sub_23F619E8C();
  v15 = sub_23F507D60();
  if (os_log_type_enabled(v2, v15))
  {
    v16 = (uint8_t *)sub_23F366668();
    v23 = sub_23F366668();
    *(_DWORD *)v16 = 136315138;
    v17 = sub_23F5F04DC(v12, v14);
    sub_23F37AE00(v17, v18, &v23);
    *(_QWORD *)(v0 + 96) = v19;
    sub_23F61C790();
    sub_23F362D08();
    sub_23F3D9B70();
    sub_23F3D9B70();
    sub_23F38485C(&dword_23F35A000, v2, v15, "Stage one tools:\n%s", v16);
    sub_23F3B17D4();
    sub_23F366530();
  }
  swift_release();
  swift_release();
  sub_23F3D9B70();
  sub_23F3D9B70();

  v20 = sub_23F384AB4();
  v21(v20);
  swift_task_dealloc();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  return sub_23F5F4374(v12, v14, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5F1024()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  void *v15;
  os_log_type_t v16;
  _WORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v24;

  v1 = *(void **)(v0 + 216);
  swift_bridgeObjectRelease();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F6190B8();
  v2 = v1;
  v3 = v1;
  v4 = sub_23F619E8C();
  v5 = sub_23F61C628();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (_DWORD *)sub_23F366668();
    v24 = sub_23F366668();
    *v6 = 136315138;
    swift_getErrorValue();
    v7 = sub_23F61CCB8();
    sub_23F37AE00(v7, v8, &v24);
    *(_QWORD *)(v0 + 88) = v9;
    sub_23F5F4494();
    sub_23F362984();
    sub_23F41C618();
    sub_23F41C618();
    sub_23F5F43B8(&dword_23F35A000, v4, v10, "Error in querying the toolbox: %s");
    sub_23F57D7BC();
    sub_23F366530();
  }
  v11 = *(_QWORD *)(v0 + 152);
  v12 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 136);
  sub_23F5ABBA0();
  sub_23F5ABBA0();
  sub_23F5ABBA0();

  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
  v15 = *(void **)(v0 + 144);
  sub_23F5EE968();
  sub_23F619E8C();
  v16 = sub_23F3F0EEC();
  if (sub_23F3F0E3C(v16))
  {
    v17 = (_WORD *)sub_23F366668();
    sub_23F3F0EF4(v17);
    sub_23F3F0DF0(&dword_23F35A000, v18, v19, "There was an issue in stage one. Returning an empty list of tools from this stage.");
    sub_23F366530();
  }
  v20 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 128);

  v14(v20, v21);
  sub_23F5EFFE8();
  sub_23F362D64();
  *v22 = 1;
  swift_willThrow();
  sub_23F3666DC();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F5F1274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];

  v56 = a2;
  v57 = a3;
  v4 = sub_23F35D2E8(&qword_256E7EFE0);
  MEMORY[0x24BDAC7A8](v4);
  v51 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_23F61AEF4();
  v47 = *(_QWORD *)(v52 - 8);
  v6 = MEMORY[0x24BDAC7A8](v52);
  v45 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v46 = (char *)&v45 - v8;
  v9 = sub_23F618C08();
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F35D2E8(&qword_256E7EFE8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_23F61AFE4();
  v50 = *(_QWORD *)(v53 - 8);
  v15 = MEMORY[0x24BDAC7A8](v53);
  v49 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v48 = (char *)&v45 - v17;
  v18 = sub_23F35D2E8(&qword_256E7EFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F619EF8();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v45 - v26;
  sub_23F382FC4(a1, (uint64_t)v58);
  sub_23F35D2E8(qword_256E7EFF8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23F36196C((uint64_t)v20, 0, 1, v21);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v20, v21);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v27, v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v11, v56, v55);
    v28 = v57;
    sub_23F5F0A30((uint64_t)v11, (void (*)(void))MEMORY[0x24BE54AF0], MEMORY[0x24BE57550], MEMORY[0x24BE54AF8], (uint64_t (*)(_QWORD))MEMORY[0x24BE54B00], v57);
    v29 = *(void (**)(char *, uint64_t))(v22 + 8);
    v30 = v27;
LABEL_7:
    v29(v30, v21);
    goto LABEL_8;
  }
  v31 = v54;
  v32 = v56;
  sub_23F36196C((uint64_t)v20, 1, 1, v21);
  sub_23F3D9844((uint64_t)v20, &qword_256E7EFF0);
  sub_23F382FC4(a1, (uint64_t)v58);
  v33 = v53;
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_23F36196C((uint64_t)v14, 1, 1, v33);
    sub_23F3D9844((uint64_t)v14, &qword_256E7EFE8);
    sub_23F382FC4(a1, (uint64_t)v58);
    v37 = (uint64_t)v51;
    v21 = v52;
    v38 = swift_dynamicCast();
    v39 = v55;
    if ((v38 & 1) == 0)
    {
      v42 = 1;
      sub_23F36196C(v37, 1, 1, v21);
      sub_23F3D9844(v37, &qword_256E7EFE0);
      v28 = v57;
      goto LABEL_9;
    }
    sub_23F36196C(v37, 0, 1, v21);
    v41 = v46;
    v40 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v46, v37, v21);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v45, v41, v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v11, v32, v39);
    v28 = v57;
    sub_23F5F0A30((uint64_t)v11, MEMORY[0x24BE563F0], MEMORY[0x24BE57540], MEMORY[0x24BE563F8], (uint64_t (*)(_QWORD))MEMORY[0x24BE56400], v57);
    v29 = *(void (**)(char *, uint64_t))(v40 + 8);
    v30 = v41;
    goto LABEL_7;
  }
  sub_23F36196C((uint64_t)v14, 0, 1, v33);
  v34 = v50;
  v35 = v48;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v48, v14, v33);
  v36 = (uint64_t)v49;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v49, v35, v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v11, v32, v55);
  v28 = v57;
  sub_23F5F08E8(v36, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
LABEL_8:
  v42 = 0;
LABEL_9:
  v43 = sub_23F618C20();
  return sub_23F36196C(v28, v42, 1, v43);
}

void sub_23F5F17A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v7 = *(_QWORD *)(a2 + 16);
  if (v7 < a3 || (uint64_t)v7 < a4)
    goto LABEL_11;
  if (a4 < 0)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F618C20() - 8) + 80);
  v10 = a2 + ((v9 + 32) & ~v9);
  v11 = swift_retain_n();
  sub_23F3BF608(v11, v10, a3, (2 * a4) | 1);
  v13 = v12;
  v14 = sub_23F3BE648();
  sub_23F3BD100(v13, 0, 1, v14);
  v15 = *(_QWORD *)(v13 + 16);
  swift_release();
  if (v15 <= 0xF)
    swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_23F5F189C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v6 = sub_23F618C08();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F619EF8();
  v11 = MEMORY[0x24BE54B00];
  MEMORY[0x24BDAC7A8](v10);
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  return sub_23F5F0A30((uint64_t)v9, (void (*)(void))MEMORY[0x24BE54AF0], MEMORY[0x24BE57550], MEMORY[0x24BE54AF8], (uint64_t (*)(_QWORD))v11, a3);
}

uint64_t sub_23F5F19B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_23F55D9C0();
  v4[16] = v5;
  v4[17] = *(_QWORD *)(v5 - 8);
  v4[18] = sub_23F366578();
  v6 = sub_23F5F4408();
  v4[19] = v6;
  v4[20] = *(_QWORD *)(v6 - 8);
  v4[21] = sub_23F366654();
  v4[22] = sub_23F3666CC();
  v7 = sub_23F384B44();
  v4[23] = v7;
  v4[24] = *(_QWORD *)(v7 - 8);
  v4[25] = sub_23F366578();
  v8 = sub_23F619EF8();
  v4[26] = v8;
  v4[27] = *(_QWORD *)(v8 - 8);
  v4[28] = sub_23F366578();
  v9 = sub_23F618C20();
  v4[29] = v9;
  v4[30] = *(_QWORD *)(v9 - 8);
  v4[31] = sub_23F366654();
  v4[32] = sub_23F3666CC();
  v10 = sub_23F3B1728();
  v4[33] = v10;
  v4[34] = *(_QWORD *)(v10 - 8);
  v4[35] = sub_23F366654();
  v4[36] = sub_23F3666CC();
  v4[37] = sub_23F3666CC();
  v4[38] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

void sub_23F5F1AA4()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  os_log_type_t v22;
  _WORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void (*v46)(uint64_t);
  uint64_t v47[2];

  v1 = v0[38];
  sub_23F5EE968();
  sub_23F3E0254();
  sub_23F3E0254();
  sub_23F619E8C();
  v2 = sub_23F507D60();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = sub_23F366668();
    v47[0] = sub_23F366668();
    *(_DWORD *)v3 = 136315394;
    sub_23F617BA0();
    v4 = sub_23F384AB4();
    sub_23F37AE00(v4, v5, v6);
    v0[10] = v7;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 12) = 2080;
    sub_23F61B92C();
    sub_23F3612C0(&qword_256E6FE60, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A30]);
    sub_23F617BA0();
    v8 = sub_23F61C544();
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v8, v10, v47);
    v0[11] = v11;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F384A80();
    _os_log_impl(&dword_23F35A000, v1, v2, "Tool Retrieval Query for stage 3: %s, types: %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v12 = v0[34];
  sub_23F384A80();
  sub_23F384A80();

  v13 = *(void (**)(uint64_t))(v12 + 8);
  v14 = sub_23F384AB4();
  v13(v14);
  v0[39] = v13;
  if (*(_QWORD *)(v0[14] + 16))
  {
    v46 = v13;
    v15 = v0[15];
    v16 = type metadata accessor for ToolRetrievalStageThree(0);
    sub_23F35EA9C((_QWORD *)(v15 + *(int *)(v16 + 24)), *(_QWORD *)(v15 + *(int *)(v16 + 24) + 24));
    sub_23F35D2E8(&qword_256E78AB0);
    v17 = sub_23F61B4DC();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_23F61E7E0;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v18 + 104))(v20 + v19, *MEMORY[0x24BEB8E38], v17);
    sub_23F36679C();
    sub_23F61A000();
    v27 = v0[15];
    sub_23F3837B0();
    sub_23F36938C();
    v29 = v28;
    *(_QWORD *)(sub_23F384908() + 16) = v27;
    sub_23F51CDA0();
    v31 = v30;
    v32 = v0[37];
    sub_23F3666EC();
    v33 = sub_23F5F2D04(v31, v29);
    sub_23F384120();
    sub_23F6190B8();
    sub_23F5EE8C0();
    v34 = v32;
    sub_23F619E8C();
    v35 = sub_23F507D60();
    if (sub_23F482920(v35))
    {
      v37 = (_DWORD *)sub_23F366668();
      v47[0] = sub_23F366668();
      *v37 = 136315138;
      sub_23F3612C0(&qword_256E70528, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8FE0], MEMORY[0x24BEB8FF8]);
      swift_retain();
      v38 = sub_23F61C544();
      v40 = v39;
      swift_release();
      sub_23F37AE00(v38, v40, v47);
      v0[9] = v41;
      sub_23F5F4494();
      sub_23F384120();
      sub_23F3D9B70();
      sub_23F5F43B8(&dword_23F35A000, v34, v42, "Stage 3 entity setters with type overlap for provided types: %s");
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F3D9B70();

    v43 = sub_23F384AB4();
    v46(v43);
    sub_23F382FC4(v0[15] + *(int *)(v16 + 20), (uint64_t)(v0 + 2));
    sub_23F5F44C8();
    v0[40] = sub_23F5EEF90(v33);
    swift_release();
    v44 = (_QWORD *)swift_task_alloc();
    v0[41] = v44;
    *v44 = v0;
    v44[1] = sub_23F5F20EC;
    sub_23F4414C8(v0[12]);
    sub_23F3D9BE4();
    __asm { BR              X3 }
  }
  v21 = (void *)v0[35];
  sub_23F5EE968();
  sub_23F619E8C();
  v22 = sub_23F507D60();
  if (sub_23F3F0E3C(v22))
  {
    v23 = (_WORD *)sub_23F366668();
    sub_23F3F0EF4(v23);
    sub_23F3F0DF0(&dword_23F35A000, v24, v25, "Types list for stage 3 retrieval is empty. Emitting no tools.");
    sub_23F366530();
  }

  sub_23F55156C();
  sub_23F5F4448();
  sub_23F3BA224();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F3D9BE4();
  __asm { BR              X2 }
}

uint64_t sub_23F5F20EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 336) = a1;
  *(_QWORD *)(v3 + 344) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F5F2154()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(unint64_t, uint64_t, uint64_t);
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v33;
  unsigned int v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v1 = *(NSObject **)(v0 + 288);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F6190B8();
  sub_23F3E0254();
  sub_23F619E8C();
  v2 = sub_23F507D60();
  v41 = v0;
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 208);
    v4 = (uint8_t *)sub_23F366668();
    v50 = sub_23F366668();
    *(_DWORD *)v4 = 136315138;
    v5 = sub_23F617BA0();
    v6 = MEMORY[0x24266F8F8](v5, v3);
    v8 = v7;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v6, v8, &v50);
    *(_QWORD *)(v0 + 64) = v9;
    sub_23F61C790();
    sub_23F362D08();
    sub_23F384A80();
    sub_23F38485C(&dword_23F35A000, v1, v2, "Stage 3 semantic results: %s", v4);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F384A80();

  sub_23F55156C();
  v10 = *(_QWORD *)(v0 + 336);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v0 + 216);
    v38 = *(_QWORD *)(v0 + 160);
    v39 = *(_QWORD *)(v0 + 192);
    v37 = *(_QWORD *)(v0 + 136);
    v50 = MEMORY[0x24BEE4AF8];
    sub_23F37C3B8();
    v14 = v10 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v36 = *(_QWORD *)(v13 + 72);
    v40 = v13;
    v35 = *(void (**)(uint64_t))(v13 + 16);
    v34 = *MEMORY[0x24BE575E8];
    v33 = *MEMORY[0x24BE57548];
    v15 = v50;
    do
    {
      v43 = v15;
      v48 = v11;
      v42 = *(_QWORD *)(v0 + 248);
      v16 = *(_QWORD *)(v0 + 224);
      v45 = *(_QWORD *)(v0 + 232);
      v46 = *(_QWORD *)(v0 + 256);
      v17 = *(_QWORD *)(v0 + 200);
      v44 = *(_QWORD *)(v0 + 208);
      v19 = *(_QWORD *)(v0 + 176);
      v18 = *(_QWORD *)(v0 + 184);
      v20 = *(_QWORD *)(v0 + 168);
      v21 = *(_QWORD *)(v0 + 144);
      v22 = *(_QWORD *)(v0 + 152);
      v23 = *(_QWORD *)(v0 + 128);
      v47 = v14;
      v35(v16);
      sub_23F619EEC();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v38 + 104))(v19, v34, v22);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v21, v17, v18);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v37 + 104))(v21, v33, v23);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v20, v19, v22);
      sub_23F618BC0();
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v19, v22);
      v24 = v18;
      v15 = v43;
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v17, v24);
      v25 = *(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32);
      v25(v46, v42, v45);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v16, v44);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37C3B8();
        v15 = v50;
      }
      v26 = *(_QWORD *)(v15 + 16);
      v0 = v41;
      if (v26 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_23F37C3B8();
        v15 = v50;
      }
      v27 = *(_QWORD *)(v41 + 256);
      v28 = *(_QWORD *)(v41 + 232);
      *(_QWORD *)(v15 + 16) = v26 + 1;
      v25(v15+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v26, v27, v28);
      v50 = v15;
      v14 = v47 + v36;
      v11 = v48 - 1;
    }
    while (v48 != 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F362D08();
  }
  sub_23F3BA224();
  v30 = v29;
  v49 = v31;
  sub_23F362CC8();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F366698();
  sub_23F3666D4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v30, v49);
}

uint64_t sub_23F5F25E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23F5F2694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v10[2];

  v10[1] = a1;
  v5 = sub_23F61B9EC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ToolRetrievalStageThree(0);
  sub_23F35EA9C((_QWORD *)(a3 + *(int *)(v9 + 24)), *(_QWORD *)(a3 + *(int *)(v9 + 24) + 24));
  sub_23F61B8CC();
  sub_23F61A00C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v3)
    sub_23F3605DC();
}

uint64_t sub_23F5F27A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F5F42AC;
  return sub_23F5F19B4(a1, a2, a3);
}

uint64_t sub_23F5F2808(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = a2;
  v3 = sub_23F3B1728();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = sub_23F366654();
  v2[8] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5F2854()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_23F61925C();
  swift_allocObject();
  sub_23F619250();
  sub_23F619244();
  sub_23F3668FC();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(NSObject **)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 32);
  sub_23F617BA0();
  v4 = sub_23F617BA0();
  sub_23F601DE0(v4, v1, v3);
  sub_23F362984();
  sub_23F369368();
  sub_23F362984();
  sub_23F6190B8();
  sub_23F3E0254();
  v5 = v2;
  sub_23F619E8C();
  v6 = sub_23F507D60();
  v7 = sub_23F482920(v6);
  v9 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v10 = *(_QWORD *)(v0 + 40);
  if (v7)
  {
    v11 = (_DWORD *)sub_23F366668();
    v21 = sub_23F366668();
    *v11 = 136315138;
    sub_23F618C20();
    sub_23F3612C0(&qword_256E70090, (uint64_t (*)(uint64_t))MEMORY[0x24BE57608], MEMORY[0x24BE57620]);
    sub_23F617BA0();
    v12 = sub_23F61C544();
    v14 = v13;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v12, v14, &v21);
    *(_QWORD *)(v0 + 16) = v15;
    sub_23F5F4494();
    swift_bridgeObjectRelease();
    sub_23F384A80();
    sub_23F5F43B8(&dword_23F35A000, v5, v16, "Tools retreived in stage 4: %s");
    sub_23F57D7BC();
    sub_23F366530();
  }
  sub_23F384A80();

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  v17 = sub_23F5F2B14();
  v19 = v18;
  sub_23F362CC8();
  sub_23F3666C4();
  return sub_23F5F4374(v17, v19, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5F2B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  sub_23F471530();
  v1 = v0;
  v2 = sub_23F3BE648();
  sub_23F3BD100(v1, 0, 1, v2);
  v4 = v3;
  v5 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRelease();
  if (v5 <= 0xF)
  {
    swift_release();
    return 0;
  }
  return v4;
}

uint64_t sub_23F5F2B84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23F5F2BD8;
  return sub_23F5F2808(a1, a2);
}

uint64_t sub_23F5F2BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23F3629E8();
  if (!v2)
  {
    v6 = a1;
    v7 = a2;
  }
  return sub_23F56E560(v6, v7, *(uint64_t (**)(void))(v3 + 8));
}

uint64_t type metadata accessor for ToolRetrievalStageOne(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7F180);
}

uint64_t sub_23F5F2C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23F5F1274(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23F5F2C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23F5F189C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t type metadata accessor for ToolRetrievalStageFour(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7F0F0);
}

uint64_t sub_23F5F2C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ToolRetrievalStageFour(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5F2CB4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ToolRetrievalStageFour(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ToolRetrievalStageThree(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7F058);
}

uint64_t sub_23F5F2D04(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD v12[2];

  v3 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v6 = (_QWORD *)((char *)v12 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_23F51394C(0, v5, v6);
    sub_23F5F2E90((uint64_t)v6, v5, a2, v3);
    v8 = v7;
    swift_release();
  }
  else
  {
    v9 = (_QWORD *)swift_slowAlloc();
    sub_23F51394C(0, v5, v9);
    sub_23F5F2E90((uint64_t)v9, v5, a2, v3);
    v8 = v10;
    swift_release();
    MEMORY[0x242670B70](v9, -1, -1);
  }
  return v8;
}

void sub_23F5F2E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(unint64_t, unint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  BOOL v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, unint64_t, uint64_t);
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v63 = a2;
  v66 = a1;
  v6 = sub_23F61B5D8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (void (*)(char *, uint64_t))((char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v63 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v63 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = *(_QWORD *)(a3 + 16);
  v19 = *(_QWORD *)(a4 + 16);
  v72 = a4;
  v73 = a3;
  v74 = v7;
  if (v19 < v18)
  {
    v67 = (unint64_t)&v63 - v17;
    v68 = 0;
    v20 = 0;
    v21 = *(_QWORD *)(a4 + 56);
    v64 = a4 + 56;
    v22 = 1 << *(_BYTE *)(a4 + 32);
    if (v22 < 64)
      v23 = ~(-1 << v22);
    else
      v23 = -1;
    v24 = v23 & v21;
    v65 = (unint64_t)(v22 + 63) >> 6;
    v71 = a3 + 56;
    do
    {
      v25 = v67;
      if (v24)
      {
LABEL_7:
        v69 = (v24 - 1) & v24;
        v70 = v20;
        v26 = __clz(__rbit64(v24)) | (v20 << 6);
        goto LABEL_22;
      }
      while (1)
      {
        v27 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
          __break(1u);
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        if (v27 >= v65)
          goto LABEL_63;
        v28 = *(_QWORD *)(v64 + 8 * v27);
        v29 = v20 + 1;
        if (!v28)
        {
          v29 = v20 + 2;
          if (v20 + 2 >= v65)
            goto LABEL_63;
          v28 = *(_QWORD *)(v64 + 8 * v29);
          if (!v28)
          {
            v29 = v20 + 3;
            if (v20 + 3 >= v65)
              goto LABEL_63;
            v28 = *(_QWORD *)(v64 + 8 * v29);
            if (!v28)
            {
              v30 = v20 + 4;
              if (v20 + 4 >= v65)
              {
LABEL_63:
                swift_retain();
                sub_23F480C30();
                return;
              }
              v28 = *(_QWORD *)(v64 + 8 * v30);
              if (!v28)
              {
                while (1)
                {
                  v29 = v30 + 1;
                  if (__OFADD__(v30, 1))
                    break;
                  if (v29 >= v65)
                    goto LABEL_63;
                  v28 = *(_QWORD *)(v64 + 8 * v29);
                  ++v30;
                  if (v28)
                    goto LABEL_21;
                }
LABEL_66:
                __break(1u);
                goto LABEL_67;
              }
              v29 = v20 + 4;
            }
          }
        }
LABEL_21:
        v69 = (v28 - 1) & v28;
        v70 = v29;
        v26 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_22:
        v31 = *(_QWORD *)(v7 + 72);
        v32 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
        v32(v25, *(_QWORD *)(a4 + 48) + v31 * v26, v6);
        (*(void (**)(char *, unint64_t, uint64_t))(v7 + 32))(v16, v25, v6);
        sub_23F3612C0(&qword_256E70528, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8FE0], MEMORY[0x24BEB8FF8]);
        v33 = v7;
        v34 = v16;
        v35 = sub_23F61C040();
        v36 = v73;
        v37 = -1 << *(_BYTE *)(v73 + 32);
        v38 = v35 & ~v37;
        if (((*(_QWORD *)(v71 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) != 0)
          break;
        v10 = *(void (**)(char *, uint64_t))(v33 + 8);
LABEL_28:
        v16 = v34;
        v10(v34, v6);
        a4 = v72;
        v7 = v74;
        v25 = v67;
        v24 = v69;
        v20 = v70;
        if (v69)
          goto LABEL_7;
      }
      v39 = ~v37;
      while (1)
      {
        v32((unint64_t)v13, *(_QWORD *)(v36 + 48) + v38 * v31, v6);
        sub_23F3612C0((unint64_t *)&qword_256E71170, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8FE0], MEMORY[0x24BEB9000]);
        v40 = sub_23F61C0A0();
        v10 = *(void (**)(char *, uint64_t))(v74 + 8);
        v10(v13, v6);
        if ((v40 & 1) != 0)
          break;
        v38 = (v38 + 1) & v39;
        v36 = v73;
        if (((*(_QWORD *)(v71 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
          goto LABEL_28;
      }
      v16 = v34;
      v10(v34, v6);
      *(_QWORD *)(v66 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
      v24 = v69;
      v41 = __OFADD__(v68++, 1);
      a4 = v72;
      a3 = v73;
      v7 = v74;
      v20 = v70;
    }
    while (!v41);
    __break(1u);
  }
  v68 = 0;
  v42 = 0;
  v43 = *(_QWORD *)(a3 + 56);
  v64 = a3 + 56;
  v44 = 1 << *(_BYTE *)(a3 + 32);
  if (v44 < 64)
    v45 = ~(-1 << v44);
  else
    v45 = -1;
  v46 = v45 & v43;
  v65 = (unint64_t)(v44 + 63) >> 6;
  v71 = a4 + 56;
  while (v46)
  {
    v69 = (v46 - 1) & v46;
    v70 = v42;
    v47 = __clz(__rbit64(v46)) | (v42 << 6);
LABEL_53:
    v52 = *(_QWORD *)(a3 + 48);
    v53 = *(_QWORD *)(v7 + 72);
    v67 = v47;
    v54 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    v54((char *)v10, v52 + v53 * v47, v6);
    sub_23F3612C0(&qword_256E70528, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8FE0], MEMORY[0x24BEB8FF8]);
    v55 = v7;
    v56 = v10;
    v57 = sub_23F61C040();
    v58 = -1 << *(_BYTE *)(a4 + 32);
    v59 = v57 & ~v58;
    if (((*(_QWORD *)(v71 + ((v59 >> 3) & 0xFFFFFFFFFFFFF8)) >> v59) & 1) != 0)
    {
      v60 = ~v58;
      while (1)
      {
        v54(v13, *(_QWORD *)(v72 + 48) + v59 * v53, v6);
        sub_23F3612C0((unint64_t *)&qword_256E71170, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8FE0], MEMORY[0x24BEB9000]);
        v61 = sub_23F61C0A0();
        v62 = *(void (**)(char *, uint64_t))(v74 + 8);
        v62(v13, v6);
        if ((v61 & 1) != 0)
          break;
        v59 = (v59 + 1) & v60;
        if (((*(_QWORD *)(v71 + ((v59 >> 3) & 0xFFFFFFFFFFFFF8)) >> v59) & 1) == 0)
          goto LABEL_59;
      }
      v10 = v56;
      v62((char *)v56, v6);
      *(_QWORD *)(v66 + ((v67 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v67;
      v46 = v69;
      v41 = __OFADD__(v68++, 1);
      a4 = v72;
      a3 = v73;
      v7 = v74;
      v42 = v70;
      if (v41)
      {
        __break(1u);
        goto LABEL_63;
      }
    }
    else
    {
      v62 = *(void (**)(char *, uint64_t))(v55 + 8);
LABEL_59:
      v10 = v56;
      v62((char *)v56, v6);
      a4 = v72;
      a3 = v73;
      v7 = v74;
      v46 = v69;
      v42 = v70;
    }
  }
  v48 = v42 + 1;
  if (__OFADD__(v42, 1))
    goto LABEL_65;
  if (v48 >= v65)
    goto LABEL_63;
  v49 = *(_QWORD *)(v64 + 8 * v48);
  v50 = v42 + 1;
  if (v49)
    goto LABEL_52;
  v50 = v42 + 2;
  if (v42 + 2 >= v65)
    goto LABEL_63;
  v49 = *(_QWORD *)(v64 + 8 * v50);
  if (v49)
    goto LABEL_52;
  v50 = v42 + 3;
  if (v42 + 3 >= v65)
    goto LABEL_63;
  v49 = *(_QWORD *)(v64 + 8 * v50);
  if (v49)
  {
LABEL_52:
    v69 = (v49 - 1) & v49;
    v70 = v50;
    v47 = __clz(__rbit64(v49)) + (v50 << 6);
    goto LABEL_53;
  }
  v51 = v42 + 4;
  if (v42 + 4 >= v65)
    goto LABEL_63;
  v49 = *(_QWORD *)(v64 + 8 * v51);
  if (v49)
  {
    v50 = v42 + 4;
    goto LABEL_52;
  }
  while (1)
  {
    v50 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v50 >= v65)
      goto LABEL_63;
    v49 = *(_QWORD *)(v64 + 8 * v50);
    ++v51;
    if (v49)
      goto LABEL_52;
  }
LABEL_67:
  __break(1u);
}

uint64_t *sub_23F5F3538(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F618C08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    v10 = *(int *)(a3 + 24);
    v11 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
  }
  return a1;
}

uint64_t sub_23F5F35FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + *(int *)(a2 + 20));
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + *(int *)(a2 + 24));
}

uint64_t sub_23F5F364C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  v9 = *(int *)(a3 + 24);
  v10 = *(_OWORD *)(a2 + v9 + 24);
  *(_OWORD *)(a1 + v9 + 24) = v10;
  (**(void (***)(void))(v10 - 8))();
  return a1;
}

uint64_t sub_23F5F36E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  sub_23F361AD0((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  sub_23F361AD0((uint64_t *)(a1 + *(int *)(a3 + 24)), (uint64_t *)(a2 + *(int *)(a3 + 24)));
  return a1;
}

uint64_t sub_23F5F3754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  return a1;
}

uint64_t sub_23F5F37D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v11);
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  return a1;
}

uint64_t sub_23F5F3878()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5F3888()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5F3898()
{
  return sub_23F5F38A4();
}

uint64_t sub_23F5F38A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F618C08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F5F391C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C08();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_23F5F3958(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F618C08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23F5F398C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F5F39D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F5F3A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F5F3A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F5F3A9C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5F3AA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F5F43E4();
  return sub_23F36195C(v1, v0, v2);
}

uint64_t sub_23F5F3AD0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5F3ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F5F43E4();
  v0 = sub_23F44D4D4();
  return sub_23F36196C(v0, v1, v2, v3);
}

uint64_t sub_23F5F3AFC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F618C08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23F5F3B64(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F618C08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    v10 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v11 = (uint64_t *)((char *)a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    sub_23F617BA0();
  }
  return a1;
}

uint64_t sub_23F5F3C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + *(int *)(a2 + 20));
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5F3C78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  v6 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  v9 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F5F3D0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  sub_23F361AD0((uint64_t *)(a1 + a3[5]), (uint64_t *)(a2 + a3[5]));
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F5F3DA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  v12 = v10[1];
  *(_QWORD *)(v9 + 32) = *((_QWORD *)v10 + 4);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_23F5F3E24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23F618C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F5F3EC4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5F3ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F5F4408();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F5F3F4C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5F3F5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_23F5F43E4();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = sub_23F44D4D4();
    return sub_23F36196C(v9, v10, v11, v12);
  }
  else
  {
    *(_QWORD *)(v5 + *(int *)(a4 + 20) + 24) = (v4 - 1);
  }
  return result;
}

uint64_t sub_23F5F3FBC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F618C08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ToolRetrievalStageError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F5F4090 + 4 * byte_23F632D45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F5F40C4 + 4 * byte_23F632D40[v4]))();
}

uint64_t sub_23F5F40C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5F40CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5F40D4);
  return result;
}

uint64_t sub_23F5F40E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5F40E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F5F40EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5F40F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ToolRetrievalStageError()
{
  return &type metadata for ToolRetrievalStageError;
}

uint64_t destroy for ToolRetrievalStageOutput()
{
  swift_release();
  return swift_release();
}

void _s30IntelligenceFlowPlannerRuntime24ToolRetrievalStageOutputVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_retain();
  swift_retain();
  sub_23F362928();
}

_QWORD *assignWithCopy for ToolRetrievalStageOutput(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ToolRetrievalStageOutput(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ToolRetrievalStageOutput()
{
  return &type metadata for ToolRetrievalStageOutput;
}

unint64_t sub_23F5F421C()
{
  unint64_t result;

  result = qword_256E7F1C0;
  if (!qword_256E7F1C0)
  {
    result = MEMORY[0x242670A44](&unk_23F632F7C, &type metadata for ToolRetrievalStageError);
    atomic_store(result, (unint64_t *)&qword_256E7F1C0);
  }
  return result;
}

unint64_t sub_23F5F4258()
{
  unint64_t result;

  result = qword_256E7F1D8;
  if (!qword_256E7F1D8)
  {
    result = MEMORY[0x242670A44](&unk_23F632EFC, &type metadata for ToolRetrievalStageError);
    atomic_store(result, &qword_256E7F1D8);
  }
  return result;
}

void sub_23F5F4294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F5F2694(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23F5F42B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
}

uint64_t sub_23F5F42D4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[53] + 8))(v0[54], v0[48]);
}

uint64_t sub_23F5F42EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23F5F42FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return sub_23F3B5A54(v0, v3, (uint64_t *)(v4 - 72), v1, v2);
}

uint64_t sub_23F5F4314()
{
  return swift_dynamicCast();
}

uint64_t sub_23F5F432C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v1, v2, a1);
}

void sub_23F5F4344()
{
  JUMPOUT(0x242670B70);
}

uint64_t sub_23F5F435C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[53] + 8))(v0[54], v0[48]);
}

uint64_t sub_23F5F4374(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23F5F4390()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5F43A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 176))(v1, v0);
}

void sub_23F5F43B8(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  os_log_type_t v5;

  _os_log_impl(a1, a2, v5, a4, v4, 0xCu);
}

uint64_t sub_23F5F43C8()
{
  uint64_t v0;

  return sub_23F38EB10(v0 - 128, *(_QWORD *)(v0 - 104));
}

void sub_23F5F43D8()
{
  sub_23F3781C8();
}

uint64_t sub_23F5F43E4()
{
  return sub_23F618C08();
}

_WORD *sub_23F5F43F4(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23F5F4408()
{
  return sub_23F618C08();
}

uint64_t sub_23F5F4410()
{
  uint64_t v0;
  __int128 *v1;

  return sub_23F362678(v1, v0);
}

uint64_t sub_23F5F441C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 224) = v0;
  return sub_23F61A6E4();
}

uint64_t *sub_23F5F4430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = a1;
  *(_QWORD *)(v2 - 96) = a2;
  return sub_23F36145C((uint64_t *)(v2 - 128));
}

uint64_t sub_23F5F443C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 184))();
}

uint64_t sub_23F5F4470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 144) = a1;
  *(_QWORD *)(v3 - 136) = a2;
  *(_QWORD *)(v3 - 168) = v2;
  return 0;
}

uint64_t sub_23F5F4480()
{
  return sub_23F618B84();
}

uint64_t sub_23F5F4488(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(v4, a2, v3);
}

uint64_t sub_23F5F4494()
{
  return sub_23F61C790();
}

void sub_23F5F44B0()
{
  sub_23F3781C8();
}

void sub_23F5F44BC()
{
  sub_23F3781C8();
}

_QWORD *sub_23F5F44C8()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_23F35EA9C(v0, *(_QWORD *)(v1 + 40));
}

void sub_23F5F44D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  BOOL v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, unint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;

  sub_23F362ABC();
  v1 = sub_23F61B2E4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F3B1590();
  v3 = sub_23F61B14C();
  v4 = v3;
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v31 = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v29 = *(void (**)(uint64_t, unint64_t, uint64_t))(v2 + 16);
    v30 = *(_QWORD *)(v2 + 72);
    sub_23F617BA0();
    v6 = 0;
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v28 = v5;
    while (1)
    {
      v29(v0, v31 + v30 * v6, v1);
      sub_23F617BA0();
      v8 = sub_23F61B224();
      v10 = v9;
      v11 = v7[2];
      if (!v11)
        goto LABEL_11;
      v12 = v8;
      v13 = v7[4] == v8 && v7[5] == v9;
      if (!v13 && (sub_23F451CA8() & 1) == 0)
      {
        if (v11 == 1)
          goto LABEL_11;
        v19 = v7[6] == v12 && v7[7] == v10;
        if (!v19 && (sub_23F451CA8() & 1) == 0)
          break;
      }
      sub_23F3837B0();
      sub_23F362984();
LABEL_18:
      ++v6;
      sub_23F383E88(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      if (v6 == v5)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_37;
      }
    }
    if (v11 != 2)
    {
      v26 = v4;
      v27 = v2;
      v20 = v7 + 9;
      v21 = 2;
      while (1)
      {
        v22 = v21 + 1;
        if (__OFADD__(v21, 1))
          break;
        v23 = *(v20 - 1) == v12 && *v20 == v10;
        if (v23 || (sub_23F451CA8() & 1) != 0)
        {
          sub_23F3837B0();
          sub_23F362984();
          v4 = v26;
          v2 = v27;
          goto LABEL_17;
        }
        v20 += 2;
        ++v21;
        if (v22 == v11)
        {
          sub_23F3837B0();
          v4 = v26;
          v2 = v27;
          goto LABEL_12;
        }
      }
      __break(1u);
      return;
    }
LABEL_11:
    sub_23F3837B0();
LABEL_12:
    sub_23F362984();
    v14 = sub_23F61B224();
    v16 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F543650();
      v7 = v24;
    }
    v17 = v7[2];
    if (v17 >= v7[3] >> 1)
    {
      sub_23F543650();
      v7 = v25;
    }
    v7[2] = v17 + 1;
    v18 = &v7[2 * v17];
    v18[4] = v14;
    v18[5] = v16;
LABEL_17:
    v5 = v28;
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_37:
  sub_23F3F1340((uint64_t)v7);
  sub_23F3837B0();
  sub_23F362948();
}

void sub_23F5F4714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  sub_23F362ABC();
  v2 = sub_23F617000();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3B1590();
  v4 = sub_23F619E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F362930();
  sub_23F5F44D4();
  if (!v6)
  {
    sub_23F61907C();
    v7 = sub_23F619E8C();
    v8 = sub_23F61C628();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_23F35A000, v7, v8, "No newestClientRequestId, returning a UUID.", v9, 2u);
      MEMORY[0x242670B70](v9, -1, -1);
    }

    sub_23F362A28(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_23F616FF4();
    sub_23F616FDC();
    sub_23F383E88(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  sub_23F362948();
}

void static Session.Transcript.userQuery(event:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  sub_23F362ABC();
  v0 = sub_23F61A300();
  v57 = *(_QWORD *)(v0 - 8);
  v58 = v0;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F36285C();
  v56 = v2;
  sub_23F39C56C();
  v3 = sub_23F61A2E8();
  v60 = *(_QWORD *)(v3 - 8);
  v61 = v3;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F36285C();
  v59 = v5;
  sub_23F39C56C();
  v64 = sub_23F61A36C();
  v62 = *(_QWORD *)(v64 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  v63 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v67 = sub_23F61B0E0();
  v65 = *(_QWORD *)(v67 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v66 = v9;
  sub_23F35D2E8(&qword_256E71E28);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  v55 = (uint64_t)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F383780();
  v71 = v13;
  sub_23F39C56C();
  v14 = sub_23F619FF4();
  v69 = *(_QWORD *)(v14 - 8);
  v70 = v14;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F36285C();
  v68 = v16;
  sub_23F39C56C();
  v17 = sub_23F61B2C0();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v54 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v54 - v25;
  v27 = sub_23F61B470();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  sub_23F38F964();
  v31 = v30 - v29;
  sub_23F61B2CC();
  if (sub_23F55D9E4((uint64_t)v26) != *MEMORY[0x24BE56C88])
  {
    sub_23F3B224C((uint64_t)v26);
    sub_23F61B2CC();
    if (sub_23F55D9E4((uint64_t)v24) == *MEMORY[0x24BE56AD0])
    {
      sub_23F362A28((uint64_t)v24, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 96));
      v35 = v69;
      v36 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v69 + 32))(v68, v24, v70);
      v37 = MEMORY[0x24266D4F8](v36);
      v38 = v71;
      sub_23F36FE58(v37, v71);
      sub_23F362984();
      sub_23F61AC6C();
      v39 = sub_23F5F61EC();
      if (sub_23F36195C(v39, v40, v41) != 1)
      {
        sub_23F61A2DC();
        sub_23F5F6108(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
        v33 = sub_23F5F61CC();
        v34 = v21;
        goto LABEL_3;
      }
      sub_23F5F6108(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
      v42 = v38;
LABEL_7:
      sub_23F5F60D0(v42, &qword_256E71E28);
      goto LABEL_13;
    }
    sub_23F3B224C((uint64_t)v24);
    sub_23F61B2CC();
    if (sub_23F55D9E4((uint64_t)v21) != *MEMORY[0x24BE56C70])
    {
      sub_23F3B224C((uint64_t)v21);
      goto LABEL_13;
    }
    sub_23F362A28((uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 96));
    v44 = v65;
    v43 = v66;
    v45 = v67;
    (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v66, v21, v67);
    v46 = (uint64_t)v63;
    sub_23F61A8B8();
    v47 = v62;
    v48 = v64;
    v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 88))(v46, v64);
    if (v49 == *MEMORY[0x24BE553A8])
    {
LABEL_10:
      sub_23F5F6108(*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
      sub_23F383E88(v46, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
      goto LABEL_13;
    }
    if (v49 == *MEMORY[0x24BE553B0])
    {
      sub_23F383E88(v46, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 96));
      v51 = v59;
      v50 = v60;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v59, v46, v61);
      sub_23F61A2DC();
      sub_23F383E88(v51, *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
      goto LABEL_13;
    }
    if (v49 == *MEMORY[0x24BE553B8])
    {
      sub_23F383E88(v46, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 96));
      v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v56, v46, v58);
      v53 = MEMORY[0x24266D804](v52);
      v27 = v55;
      sub_23F36FE58(v53, v55);
      swift_bridgeObjectRelease();
      v48 = sub_23F61AC6C();
      if (sub_23F36195C(v27, 1, v48) == 1)
      {
        sub_23F5F615C();
        sub_23F5F6108(*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
        v42 = v27;
        goto LABEL_7;
      }
    }
    else
    {
      if (v49 == *MEMORY[0x24BE55318])
        goto LABEL_10;
      sub_23F61CC58();
      __break(1u);
    }
    sub_23F61A2DC();
    sub_23F5F615C();
    sub_23F5F6108(*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v27, v48);
    goto LABEL_13;
  }
  sub_23F362A28((uint64_t)v26, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 96));
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v31, v26, v27);
  sub_23F61A2DC();
  v32 = *(void (**)(uint64_t, char *))(v28 + 8);
  v33 = v31;
  v34 = (char *)v27;
LABEL_3:
  v32(v33, v34);
LABEL_13:
  sub_23F362948();
}

void sub_23F5F4D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[2];
  uint64_t v26;
  uint64_t v27;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v4 = sub_23F61B2E4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v25 - v9;
  v11 = sub_23F61B14C();
  v12 = v11;
  v13 = *(_QWORD *)(v11 + 16);
  v27 = v1;
  if (!v13)
  {
    sub_23F3668F4();
LABEL_23:
    swift_bridgeObjectRelease();
    sub_23F362C60();
    sub_23F362948();
    return;
  }
  v25[0] = (uint64_t)v10;
  v25[1] = v11 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v26 = v3;
  sub_23F3668F4();
  while (1)
  {
    if (v13 > *(_QWORD *)(v12 + 16))
    {
      __break(1u);
      goto LABEL_28;
    }
    v14 = v13 - 1;
    sub_23F5F61E0((uint64_t)v8);
    sub_23F617BA0();
    if (sub_23F61B224() == v26 && v15 == v27)
      break;
    v17 = sub_23F5F617C();
    sub_23F362984();
    if ((v17 & 1) != 0)
      goto LABEL_11;
    sub_23F5F6108(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_23F362C60();
LABEL_12:
    --v13;
    if (!v14)
      goto LABEL_23;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  static Session.Transcript.userQuery(event:)();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_23F362C60();
  sub_23F362984();
  if (!v19)
    goto LABEL_12;
  if (!v13)
    goto LABEL_23;
  if (v13 > *(_QWORD *)(v12 + 16))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_23F5F61E0(v25[0]);
  if (sub_23F61B224() == v26 && v20 == v27)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = sub_23F5F617C();
    sub_23F362984();
    if ((v22 & 1) == 0)
    {
      sub_23F5F6188();
      goto LABEL_29;
    }
  }
  static Session.Transcript.userQuery(event:)();
  v24 = v23;
  sub_23F5F6188();
  if (v24)
    goto LABEL_23;
LABEL_29:
  __break(1u);
}

void sub_23F5F4F90(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t (**)(uint64_t, uint64_t), uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  unsigned int (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t (**v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t);
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t (**v138)(uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unsigned int (*v154)(char *, uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(uint64_t (**)(uint64_t, uint64_t), uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;

  v163 = a2;
  v164 = a3;
  v162 = a4;
  sub_23F35D2E8(&qword_256E70F38);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v143 = v6;
  sub_23F39C56C();
  v145 = sub_23F61AAD4();
  v150 = *(_QWORD *)(v145 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v149 = v8;
  sub_23F39C56C();
  v9 = sub_23F61A3A8();
  v156 = *(_QWORD *)(v9 - 8);
  v157 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  v155 = v11;
  sub_23F39C56C();
  v172 = sub_23F61B5D8();
  v165 = *(_QWORD *)(v172 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3834D0();
  v134 = v13;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3838E4();
  v146 = v15;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F383780();
  v139 = v17;
  sub_23F39C56C();
  v18 = sub_23F618BB4();
  v168 = *(_QWORD *)(v18 - 8);
  v169 = v18;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3834D0();
  v137 = v20;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F3838E4();
  v161 = v22;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3838E4();
  v148 = v24;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F35D2E8(&qword_256E70238);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F3834D0();
  v136 = v27;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F3838E4();
  v160 = v29;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F3838E4();
  v141 = v31;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v130 - v33;
  sub_23F35D2E8(&qword_256E700A0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3834D0();
  v142 = v36;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F383780();
  v147 = v38;
  sub_23F39C56C();
  v39 = sub_23F618C20();
  v170 = *(_QWORD *)(v39 - 8);
  v171 = v39;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F3834D0();
  v152 = v41;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F3838E4();
  v135 = v43;
  sub_23F383588();
  v45 = MEMORY[0x24BDAC7A8](v44);
  v47 = (uint64_t (**)(uint64_t, uint64_t))((char *)&v130 - v46);
  MEMORY[0x24BDAC7A8](v45);
  sub_23F383780();
  v140 = v48;
  v49 = sub_23F50784C();
  v50 = *(char **)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  sub_23F3834D0();
  v158 = v51;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F3838E4();
  v153 = v53;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v54);
  v56 = (char *)&v130 - v55;
  v151 = sub_23F61ABB8();
  v57 = *(_QWORD *)(v151 - 8);
  MEMORY[0x24BDAC7A8](v151);
  sub_23F38F964();
  v60 = v59 - v58;
  v159 = a1;
  sub_23F61B2CC();
  v154 = (unsigned int (*)(char *, uint64_t))*((_QWORD *)v50 + 11);
  if (v154(v56, v49) != *MEMORY[0x24BE56B38])
  {
    sub_23F5247F8(*((uint64_t (**)(uint64_t, uint64_t))v50 + 1));
    v73 = v158;
    v65 = v49;
    v47 = (uint64_t (**)(uint64_t, uint64_t))v50;
    goto LABEL_26;
  }
  v138 = (uint64_t (**)(uint64_t, uint64_t))v50;
  sub_23F5247F8(*((uint64_t (**)(uint64_t, uint64_t))v50 + 12));
  v133 = v57;
  v61 = v56;
  v62 = v151;
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v60, v61, v151);
  v63 = sub_23F61ABA0();
  v64 = *(_QWORD *)(v63 + 16);
  v65 = v49;
  v49 = v62;
  v66 = v60;
  v144 = v63;
  if (!v64)
  {
    v80 = 1;
    v72 = v171;
    v73 = v158;
    v47 = v138;
    v81 = v147;
    goto LABEL_20;
  }
  v131 = v60;
  v132 = v65;
  sub_23F383E04();
  v69 = v67 + v68;
  v71 = *(void (**)(uint64_t (**)(uint64_t, uint64_t), uint64_t, uint64_t))(v70 + 16);
  v166 = *(_QWORD *)(v70 + 72);
  v167 = v71;
  sub_23F617BA0();
  v72 = v171;
  while (1)
  {
    v73 = v49;
    v167(v47, v69, v72);
    sub_23F618BCC();
    sub_23F5F61AC();
    sub_23F5F6114(v168);
    v74 = v172;
    sub_23F383740((uint64_t)v34, 1, v172);
    if (v77)
    {
      sub_23F5F60D0((uint64_t)v34, &qword_256E70238);
      v49 = v73;
      goto LABEL_12;
    }
    v65 = sub_23F61B5A8();
    v76 = v75;
    (*(void (**)(char *, uint64_t))(v165 + 8))(v34, v74);
    v77 = v65 == v163 && v76 == v164;
    if (v77)
    {
      swift_bridgeObjectRelease();
      v72 = v171;
      v49 = v73;
      goto LABEL_18;
    }
    v65 = sub_23F3C8510();
    sub_23F362984();
    v49 = v73;
    if ((v65 & 1) != 0)
      break;
LABEL_12:
    v72 = v171;
    v78 = sub_23F5F61CC();
    v79(v78, v72);
    v69 += v166;
    if (!--v64)
    {
      sub_23F5F6194();
      sub_23F5F613C();
      v81 = v147;
      goto LABEL_19;
    }
  }
  v72 = v171;
LABEL_18:
  swift_bridgeObjectRelease();
  v81 = v147;
  (*(void (**)(uint64_t, uint64_t (**)(uint64_t, uint64_t), uint64_t))(v170 + 32))(v147, v47, v72);
  sub_23F5F613C();
LABEL_19:
  v66 = v131;
LABEL_20:
  sub_23F36196C(v81, v80, 1, v72);
  sub_23F5F6194();
  sub_23F383740(v81, 1, v72);
  if (v77)
  {
    sub_23F5247F8(*(uint64_t (**)(uint64_t, uint64_t))(v133 + 8));
    sub_23F5F60D0(v81, &qword_256E700A0);
  }
  else
  {
    v82 = v170;
    v83 = v140;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v170 + 32))(v140, v81, v72);
    sub_23F618BCC();
    v84 = v141;
    sub_23F5F61AC();
    sub_23F5F6114(v168);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v83, v171);
    sub_23F40B3C8(v66, *(uint64_t (**)(uint64_t, _QWORD))(v133 + 8));
    v49 = v172;
    sub_23F383740(v84, 1, v172);
    if (!v85)
    {
      v118 = v139;
      sub_23F384614(v139, v84);
      v119 = v162;
      v120 = v118;
      goto LABEL_64;
    }
    sub_23F5F60D0(v84, &qword_256E70238);
    v47 = v138;
  }
LABEL_26:
  v86 = v153;
  v87 = (unsigned int (*)(uint64_t, uint64_t))v154;
  sub_23F61B2CC();
  if (v87(v86, v65) == *MEMORY[0x24BE56B30])
  {
    sub_23F383F80(v86, v47[12]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v156 + 32))(v155, v86, v157);
    v88 = v146;
    sub_23F61A390();
    v89 = sub_23F61B5A8();
    v90 = v47;
    v92 = v91;
    (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v88, v172);
    if (v89 == v163 && v92 == v164)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v94 = sub_23F3C8510();
      sub_23F362D18();
      if ((v94 & 1) == 0)
      {
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v155, v157);
        v47 = v90;
        goto LABEL_34;
      }
    }
    v101 = v155;
    sub_23F61A390();
    (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v101, v157);
    v100 = 0;
LABEL_41:
    v49 = v172;
    goto LABEL_65;
  }
  sub_23F383F80(v86, v47[1]);
LABEL_34:
  sub_23F61B2CC();
  if (v87(v73, v65) != *MEMORY[0x24BE56C10])
  {
    sub_23F383F80(v73, v47[1]);
    v100 = 1;
    goto LABEL_41;
  }
  sub_23F383F80(v73, v47[12]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 32))(v149, v73, v145);
  v95 = v143;
  sub_23F61AAA4();
  sub_23F619064();
  v96 = sub_23F5F61EC();
  sub_23F383740(v96, v97, v98);
  if (v77)
  {
    sub_23F5F60D0(v95, &qword_256E70F38);
    v99 = v142;
    sub_23F36196C(v142, 1, 1, v171);
    v49 = v172;
LABEL_59:
    sub_23F5F6120();
    v122 = &qword_256E700A0;
    v123 = v99;
LABEL_60:
    sub_23F5F60D0(v123, v122);
    v100 = 1;
    goto LABEL_65;
  }
  v102 = v95;
  v103 = sub_23F619040();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v102, v49);
  v104 = *(_QWORD *)(v103 + 16);
  if (!v104)
  {
    sub_23F5F616C();
    v99 = v142;
    goto LABEL_57;
  }
  sub_23F383E04();
  v49 = v103 + v105;
  v107 = *(_QWORD *)(v106 + 72);
  v108 = *(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16);
  sub_23F3668F4();
  v109 = v171;
  v110 = v152;
  while (2)
  {
    v108(v110, v49, v109);
    sub_23F618BCC();
    v111 = v160;
    sub_23F5F61AC();
    sub_23F5F6114(v168);
    sub_23F383740(v111, 1, v172);
    if (v77)
    {
      sub_23F5F60D0(v111, &qword_256E70238);
LABEL_52:
      v109 = v171;
      (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v110, v171);
      v49 += v107;
      if (!--v104)
      {
        sub_23F362D18();
        sub_23F5F616C();
        v99 = v142;
        goto LABEL_57;
      }
      continue;
    }
    break;
  }
  v112 = sub_23F61B5A8();
  v114 = v113;
  sub_23F5F61C0(*(uint64_t (**)(uint64_t, uint64_t))(v165 + 8));
  if (v112 != v163 || v114 != v164)
  {
    v116 = sub_23F3C8510();
    sub_23F362984();
    v110 = v152;
    if ((v116 & 1) != 0)
      goto LABEL_56;
    goto LABEL_52;
  }
  sub_23F362D18();
  v110 = v152;
LABEL_56:
  swift_bridgeObjectRelease();
  v99 = v142;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v170 + 32))(v142, v110, v171);
  sub_23F5F616C();
LABEL_57:
  v121 = v171;
  sub_23F36196C(v99, v117, 1, v171);
  sub_23F362D18();
  sub_23F383740(v99, 1, v121);
  if (v77)
    goto LABEL_59;
  v124 = v170;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v170 + 32))(v135, v99, v121);
  sub_23F618BCC();
  v125 = v136;
  sub_23F618B9C();
  v126 = sub_23F5F61CC();
  v127(v126);
  sub_23F5F61C0(*(uint64_t (**)(uint64_t, uint64_t))(v124 + 8));
  sub_23F5F6120();
  sub_23F383740(v125, 1, v49);
  if (v128)
  {
    v122 = &qword_256E70238;
    v123 = v125;
    goto LABEL_60;
  }
  v129 = v134;
  sub_23F384614(v134, v125);
  v119 = v162;
  v120 = v129;
LABEL_64:
  sub_23F384614(v119, v120);
  v100 = 0;
LABEL_65:
  sub_23F36196C(v162, v100, 1, v49);
  sub_23F362870();
}

void sub_23F5F5AC8(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  char *v66;
  int v67;
  char *v68;
  void (*v69)(uint64_t, char *, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v85 = a3;
  v93 = a1;
  v5 = sub_23F618D28();
  v99 = *(_QWORD *)(v5 - 8);
  v100 = v5;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v98 = v7;
  sub_23F35D2E8(&qword_256E7F1F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v97 = v9;
  sub_23F35D2E8(&qword_256E7F1F8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  v96 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v12 = sub_23F618E60();
  v89 = *(_QWORD *)(v12 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  v88 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F383780();
  v87 = v16;
  sub_23F35D2E8(&qword_256E719D0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F36285C();
  v95 = v18;
  sub_23F39C56C();
  v91 = sub_23F618E54();
  v102 = *(_QWORD *)(v91 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3834D0();
  v94 = v20;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F3838E4();
  v84 = v22;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F383780();
  v90 = v24;
  sub_23F39C56C();
  v104 = sub_23F61AE1C();
  v101 = *(_QWORD *)(v104 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F36285C();
  v103 = v26;
  v27 = sub_23F50784C();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  sub_23F362930();
  v29 = sub_23F61AAD4();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  sub_23F38F964();
  v33 = v32 - v31;
  sub_23F61B2CC();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v28 + 88))(v3, v27) != *MEMORY[0x24BE56C10])
  {
    sub_23F3C0784(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
    v39 = v85;
    goto LABEL_9;
  }
  sub_23F3C0784(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 96));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v33, v3, v29);
  v35 = sub_23F61B224() == v93 && v34 == a2;
  if (v35)
  {
    v37 = swift_bridgeObjectRelease();
    v38 = v91;
  }
  else
  {
    v36 = sub_23F3C8510();
    v37 = sub_23F362984();
    v38 = v91;
    if ((v36 & 1) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v33, v29);
      v39 = v85;
LABEL_9:
      sub_23F383CC4(v39, 1);
      goto LABEL_35;
    }
  }
  v82 = v30;
  v83 = v29;
  v81 = v33;
  v40 = *(_QWORD *)(MEMORY[0x24266DF9C](v37) + 16);
  if (v40)
  {
    sub_23F383E04();
    v80 = v41;
    v43 = v41 + v42;
    v45 = *(_QWORD *)(v44 + 72);
    v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
    v93 = v45;
    v86 = *MEMORY[0x24BE57B00];
    v46 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v92(v103, v43, v104);
      sub_23F61ADF8();
      v47 = v97;
      sub_23F618CC8();
      sub_23F5F6114(v99);
      v48 = sub_23F618E78();
      v49 = sub_23F5F61B4();
      sub_23F383740(v49, v50, v48);
      if (v35)
      {
        sub_23F5F60D0(v47, &qword_256E7F1F0);
        v57 = (uint64_t)v96;
        v51 = sub_23F5F61B4();
        sub_23F36196C(v51, v52, 1, v12);
      }
      else
      {
        v53 = v46;
        v54 = v12;
        v55 = v96;
        sub_23F618E6C();
        v56 = v47;
        v57 = (uint64_t)v55;
        v12 = v54;
        v46 = v53;
        v38 = v91;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v56, v48);
        v58 = sub_23F5F61B4();
        sub_23F383740(v58, v59, v12);
        if (!v60)
        {
          v63 = v89;
          v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32);
          v65 = v87;
          v64(v87, v57, v12);
          v66 = v88;
          v64((uint64_t)v88, v65, v12);
          v67 = (*(uint64_t (**)(char *, uint64_t))(v63 + 88))(v66, v12);
          if (v67 == v86)
          {
            v68 = v88;
            (*(void (**)(char *, uint64_t))(v89 + 96))(v88, v12);
            v69 = *(void (**)(uint64_t, char *, uint64_t))(v102 + 32);
            v70 = v84;
            v69((uint64_t)v84, v68, v38);
            v62 = v95;
            v69(v95, v70, v38);
            v61 = 0;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v12);
            v61 = 1;
            v62 = v95;
          }
          v46 = v53;
          goto LABEL_23;
        }
      }
      sub_23F5F60D0(v57, &qword_256E7F1F8);
      v61 = 1;
      v62 = v95;
LABEL_23:
      sub_23F383CC4(v62, v61);
      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v103, v104);
      v71 = sub_23F5F61B4();
      sub_23F383740(v71, v72, v38);
      if (v35)
      {
        sub_23F5F60D0(v62, &qword_256E719D0);
      }
      else
      {
        v73 = v90;
        sub_23F5F61D8(v90, v62);
        sub_23F5F61D8(v94, v73);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F5F61A0();
          v46 = v78;
        }
        v75 = *(_QWORD *)(v46 + 16);
        if (v75 >= *(_QWORD *)(v46 + 24) >> 1)
        {
          sub_23F5F61A0();
          v46 = v79;
        }
        *(_QWORD *)(v46 + 16) = v75 + 1;
        sub_23F383E04();
        sub_23F5F61D8(v46 + v76 + *(_QWORD *)(v77 + 72) * v75, v94);
      }
      v43 += v93;
      if (!--v40)
      {
        swift_bridgeObjectRelease();
        goto LABEL_34;
      }
    }
  }
  swift_bridgeObjectRelease();
  v46 = MEMORY[0x24BEE4AF8];
LABEL_34:
  sub_23F3702D4(v46, v85);
  swift_bridgeObjectRelease();
  sub_23F40B3C8(v81, *(uint64_t (**)(uint64_t, _QWORD))(v82 + 8));
LABEL_35:
  sub_23F362870();
}

uint64_t sub_23F5F60D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_23F35D2E8(a2);
  v3 = sub_23F5F61CC();
  v4(v3);
  return a1;
}

uint64_t sub_23F5F6108@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F5F6114@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23F5F6120()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 272) + 8))(*(_QWORD *)(v1 - 280), v0);
}

uint64_t sub_23F5F615C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F5F617C()
{
  return sub_23F61CC64();
}

uint64_t sub_23F5F6188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_23F5F6194()
{
  return swift_bridgeObjectRelease();
}

void sub_23F5F61A0()
{
  sub_23F37808C();
}

uint64_t sub_23F5F61AC()
{
  return sub_23F618B9C();
}

uint64_t sub_23F5F61B4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5F61C0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F5F61CC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5F61D8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F5F61E0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t sub_23F5F61EC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5F6200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  sub_23F4AB408(a1, (uint64_t)&v12, &qword_256E70A58);
  if (v13)
  {
    sub_23F362678(&v12, (uint64_t)v9);
    v3 = v10;
    v4 = v11;
    sub_23F35EA9C(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v9);
    v5 = sub_23F617000();
    v6 = a2;
    v7 = 0;
  }
  else
  {
    v5 = sub_23F617000();
    v6 = a2;
    v7 = 1;
  }
  return sub_23F36196C(v6, v7, 1, v5);
}

uint64_t sub_23F5F62C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3842E4();
  sub_23F5F6550();
  sub_23F617BA0();
  v6 = sub_23F5F6BB4(a2, a3, 0);
  sub_23F35D2E8(&qword_256E700E8);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(v7 + 32) = sub_23F617018();
  *(_QWORD *)(v7 + 40) = v8;
  v9 = (void *)sub_23F61C3D0();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v6, sel_localizedNameWithPreferredLocalizations_, v9);

  v11 = sub_23F61C10C();
  return v11;
}

unint64_t sub_23F5F6550()
{
  unint64_t result;

  result = qword_256E7F200;
  if (!qword_256E7F200)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E7F200);
  }
  return result;
}

void sub_23F5F658C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(uint64_t, uint64_t);
  _QWORD v29[2];
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[2];
  uint64_t v41;

  v35 = a1;
  v6 = sub_23F617D08();
  v36 = *(_QWORD *)(v6 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v32 = v8;
  v34 = sub_23F35D2E8(&qword_256E70A50);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3845CC();
  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F362850();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v33 = (uint64_t)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v29 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v29 - v16;
  v18 = *(_QWORD *)(a2 + 16);
  v29[1] = a2;
  v30 = a3;
  if (!v18)
  {
    sub_23F617BA0();
LABEL_16:
    v41 = 0;
    memset(v40, 0, sizeof(v40));
    goto LABEL_18;
  }
  v19 = a2 + 32;
  sub_23F617BA0();
  v31 = v17;
  while (1)
  {
    sub_23F361418(v19, (uint64_t)&v37);
    v20 = v38;
    v21 = v39;
    sub_23F35EA9C(&v37, v38);
    (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v15, v35, v6);
    sub_23F36196C((uint64_t)v15, 0, 1, v6);
    v22 = v3 + *(int *)(v34 + 48);
    sub_23F5F6CF0((uint64_t)v17, v3);
    sub_23F5F6CF0((uint64_t)v15, v22);
    sub_23F4413B4(v3);
    if (v24)
      break;
    v23 = v33;
    sub_23F5F6CF0(v3, v33);
    sub_23F4413B4(v22);
    if (v24)
    {
      sub_23F5F6CD8((uint64_t)v15);
      sub_23F5F6CD8((uint64_t)v17);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v23, v6);
LABEL_11:
      sub_23F3CFCB0(v3, &qword_256E70A50);
      goto LABEL_13;
    }
    v25 = v36;
    v26 = v32;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v32, v22, v6);
    sub_23F5F6C98();
    v27 = sub_23F61C0A0();
    v28 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v17 = v31;
    v28(v26, v6);
    sub_23F5F6CD8((uint64_t)v15);
    sub_23F5F6CD8((uint64_t)v17);
    v28(v33, v6);
    sub_23F5F6CD8(v3);
    if ((v27 & 1) != 0)
      goto LABEL_17;
LABEL_13:
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v37);
    v19 += 40;
    if (!--v18)
      goto LABEL_16;
  }
  sub_23F5F6CD8((uint64_t)v15);
  sub_23F5F6CD8((uint64_t)v17);
  sub_23F4413B4(v22);
  if (!v24)
    goto LABEL_11;
  sub_23F3CFCB0(v3, &qword_256E6FFA0);
LABEL_17:
  sub_23F362678(&v37, (uint64_t)v40);
LABEL_18:
  swift_bridgeObjectRelease();
  sub_23F5F6200((uint64_t)v40, v30);
  sub_23F3CFCB0((uint64_t)v40, &qword_256E70A58);
  sub_23F362948();
}

void sub_23F5F68A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (**v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, unint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (**v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v48 = a1;
  v34 = a2;
  v4 = sub_23F617D08();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F61A684();
  v49 = *(_QWORD *)(v8 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3845CC();
  v10 = sub_23F61B2C0();
  v11 = *(uint64_t (***)(uint64_t, uint64_t))(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3842E4();
  v40 = sub_23F61B1E8();
  v45 = *(_QWORD *)(v40 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v44 = v13;
  v14 = sub_23F61B2E4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  v39 = v16;
  v17 = sub_23F61B14C();
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v42 = v17 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v41 = *MEMORY[0x24BE56AC8];
    v19 = v39;
    v35 = v14;
    v36 = v2;
    v32 = v11;
    v33 = v10;
    v38 = v15;
    v43 = v17;
    do
    {
      if (v18 > *(_QWORD *)(v17 + 16))
      {
        __break(1u);
        return;
      }
      --v18;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16))(v19, v42 + *(_QWORD *)(v15 + 72) * v18, v14);
      sub_23F61B2CC();
      v20 = v11[11](v2, v10);
      if (v20 == v41)
      {
        sub_23F5F6CF8(v11[12]);
        v21 = v40;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v44, v2, v40);
        v22 = sub_23F61B1B8();
        v23 = *(_QWORD *)(v22 + 16);
        if (v23)
        {
          v24 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
          v37 = v22;
          v25 = v22 + v24;
          v26 = *(_QWORD *)(v49 + 72);
          v27 = *(void (**)(uint64_t, unint64_t, uint64_t))(v49 + 16);
          while (1)
          {
            v27(v3, v25, v8);
            sub_23F61A660();
            v28 = sub_23F617CFC();
            (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v47);
            v29 = sub_23F617CFC();
            (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v3, v8);
            if (v28 == v29)
              break;
            v25 += v26;
            if (!--v23)
            {
              swift_bridgeObjectRelease();
              v14 = v35;
              v11 = v32;
              v10 = v33;
              v21 = v40;
              goto LABEL_12;
            }
          }
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v40);
          swift_bridgeObjectRelease();
          v31 = v34;
          v14 = v35;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v34, v39, v35);
          v30 = 0;
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
LABEL_12:
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v21);
        v15 = v38;
        v19 = v39;
        sub_23F5F6CE0();
        v2 = v36;
      }
      else
      {
        sub_23F5F6CE0();
        sub_23F5F6CF8(v11[1]);
      }
      v17 = v43;
    }
    while (v18);
  }
  swift_bridgeObjectRelease();
  v30 = 1;
  v31 = v34;
LABEL_16:
  sub_23F36196C(v31, v30, 1, v14);
  sub_23F362948();
}

id sub_23F5F6BB4(uint64_t a1, uint64_t a2, char a3)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleRecordWithBundleIdentifier_allowPlaceholder_error_, v4, a3 & 1, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_23F616D9C();

    swift_willThrow();
  }
  return v5;
}

unint64_t sub_23F5F6C98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E701E8;
  if (!qword_256E701E8)
  {
    v1 = sub_23F617D08();
    result = MEMORY[0x242670A44](MEMORY[0x24BE52160], v1);
    atomic_store(result, (unint64_t *)&qword_256E701E8);
  }
  return result;
}

uint64_t sub_23F5F6CD8(uint64_t a1)
{
  uint64_t *v1;

  return sub_23F3CFCB0(a1, v1);
}

uint64_t sub_23F5F6CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F5F6CF0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_23F4AB408(a1, a2, v2);
}

uint64_t sub_23F5F6CF8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void sub_23F5F6D04(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_23F5F6DA8(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56878]);
}

uint64_t sub_23F5F6D10(uint64_t a1, uint64_t a2)
{
  return sub_23F5F6E30(a1, a2, (void (*)(_QWORD))MEMORY[0x24BE56878]);
}

void sub_23F5F6D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F5F6E7C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56878]);
}

void sub_23F5F6D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F5F6EC8(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56878]);
}

void sub_23F5F6D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F5F6F20(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56878]);
}

void sub_23F5F6D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F5F6F68(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56878]);
}

uint64_t sub_23F5F6D4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5F6D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F5F6FC4(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56878]);
}

uint64_t sub_23F5F6D64()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5F6D70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23F517BD4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE56878]);
}

uint64_t type metadata accessor for TranscriptValueFetcher(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7F260);
}

uint64_t sub_23F5F6D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F5F7074(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE56878]);
}

void sub_23F5F6D9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_23F5F6DA8(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56EB0]);
}

void sub_23F5F6DA8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;

  if ((*(_DWORD *)(*(_QWORD *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    v7 = a4(0);
    sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
    *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
    sub_23F617BA0();
  }
  sub_23F362B80();
}

uint64_t sub_23F5F6E24(uint64_t a1, uint64_t a2)
{
  return sub_23F5F6E30(a1, a2, (void (*)(_QWORD))MEMORY[0x24BE56EB0]);
}

uint64_t sub_23F5F6E30(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  void (*v4)(uint64_t);

  a3(0);
  v3 = sub_23F5076F4();
  v4(v3);
  return swift_bridgeObjectRelease();
}

void sub_23F5F6E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F5F6E7C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56EB0]);
}

void sub_23F5F6E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = sub_23F5FBB2C(a1, a2, a3, a4);
  sub_23F417108(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
  *(_QWORD *)(v6 + *(int *)(v4 + 20)) = *(_QWORD *)(v5 + *(int *)(v4 + 20));
  sub_23F617BA0();
  sub_23F362B80();
}

void sub_23F5F6EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F5F6EC8(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56EB0]);
}

void sub_23F5F6EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = sub_23F5FBB2C(a1, a2, a3, a4);
  sub_23F417108(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24));
  *(_QWORD *)(v6 + *(int *)(v4 + 20)) = *(_QWORD *)(v5 + *(int *)(v4 + 20));
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  sub_23F362B80();
}

void sub_23F5F6F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F5F6F20(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56EB0]);
}

void sub_23F5F6F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = sub_23F5FBB2C(a1, a2, a3, a4);
  sub_23F417108(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
  *(_QWORD *)(v6 + *(int *)(v4 + 20)) = *(_QWORD *)(v5 + *(int *)(v4 + 20));
  sub_23F362B80();
}

void sub_23F5F6F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F5F6F68(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56EB0]);
}

void sub_23F5F6F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = sub_23F5FBB2C(a1, a2, a3, a4);
  sub_23F417108(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40));
  *(_QWORD *)(v6 + *(int *)(v4 + 20)) = *(_QWORD *)(v5 + *(int *)(v4 + 20));
  swift_bridgeObjectRelease();
  sub_23F362B80();
}

uint64_t sub_23F5F6FAC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5F6FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F5F6FC4(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE56EB0]);
}

uint64_t sub_23F5F6FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  unint64_t v9;

  v7 = a4(0);
  if (*(_DWORD *)(*(_QWORD *)(v7 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v7);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23F5F703C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5F7048(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23F517BD4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE56EB0]);
}

uint64_t type metadata accessor for CandidateWithDependencies(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7F2F0);
}

uint64_t sub_23F5F7068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F5F7074(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE56EB0]);
}

uint64_t sub_23F5F7074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F5F70E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = sub_23F61B92C();
  v3 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v13 = v1;
    v15 = MEMORY[0x24BEE4AF8];
    sub_23F37B78C();
    v7 = v15;
    v8 = *(_QWORD *)(type metadata accessor for CandidateWithDependencies(0) - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_23F61B3E0();
      v15 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      if (v11 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_23F37B78C();
        v7 = v15;
      }
      *(_QWORD *)(v7 + 16) = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v11, v5, v14);
      v9 += v10;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_23F5F7240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_23F37C72C();
    v2 = v10;
    v4 = *(_QWORD *)(sub_23F61A294() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_23F61A270();
      v8 = *(_QWORD *)(v10 + 16);
      if (v8 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_23F37C72C();
      *(_QWORD *)(v10 + 16) = v8 + 1;
      *(_QWORD *)(v10 + 8 * v8 + 32) = v7;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23F5F7330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = type metadata accessor for CandidateWithDependencies(0);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v17 = v2;
    v21 = MEMORY[0x24BEE4AF8];
    sub_23F37C6F8();
    v9 = v21;
    v10 = sub_23F61B404();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v18 = *(_QWORD *)(v11 + 72);
    v19 = v10;
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      v13(v7, v12, v19);
      *(_QWORD *)&v7[*(int *)(v20 + 20)] = a2;
      v21 = v9;
      v15 = *(_QWORD *)(v9 + 16);
      v14 = *(_QWORD *)(v9 + 24);
      sub_23F617BA0();
      if (v15 >= v14 >> 1)
      {
        sub_23F37C6F8();
        v9 = v21;
      }
      *(_QWORD *)(v9 + 16) = v15 + 1;
      sub_23F5FB868((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v15);
      v12 += v18;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v9;
}

uint64_t sub_23F5F74C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v52 = sub_23F61A0B4();
  v4 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v51 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23F35D2E8(qword_256E7F328);
  v6 = MEMORY[0x24BDAC7A8](v50);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v49 = (char *)&v44 - v9;
  v10 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  sub_23F617BA0();
  v48 = v10;
  v44 = a1;
  if (v10)
  {
    v11 = 0;
    v12 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v45 = *(_QWORD *)(v4 + 72);
    v46 = v4;
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v13 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v47(v51, v12, v52);
      v14 = *(_QWORD *)(a2 + 16);
      if (v11 == v14)
      {
        (*(void (**)(char *, uint64_t))(v46 + 8))(v51, v52);
        goto LABEL_24;
      }
      if (v11 >= v14)
        break;
      v15 = a2;
      v16 = *(_QWORD *)(a2 + 8 * v11 + 32);
      v18 = (uint64_t)v49;
      v17 = v50;
      v19 = *(int *)(v50 + 48);
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v49, v51, v52);
      *(_QWORD *)(v18 + v19) = v16;
      sub_23F5FB8F4(v18, (uint64_t)v8, qword_256E7F328);
      v20 = *(_QWORD *)&v8[*(int *)(v17 + 48)];
      v21 = sub_23F617BA0();
      v22 = MEMORY[0x24266D5B8](v21);
      sub_23F617BA0();
      v23 = v53;
      v24 = sub_23F5F7330(v22, v20);
      v53 = v23;
      swift_bridgeObjectRelease();
      sub_23F39E4B8((uint64_t)v8, qword_256E7F328);
      v25 = *(_QWORD *)(v24 + 16);
      v26 = *(_QWORD *)(v13 + 16);
      if (__OFADD__(v26, v25))
        goto LABEL_26;
      if (!swift_isUniquelyReferenced_nonNull_native() || v26 + v25 > *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_23F3781F0();
        v13 = v27;
      }
      if (*(_QWORD *)(v24 + 16))
      {
        v28 = *(_QWORD *)(v13 + 16);
        v29 = (*(_QWORD *)(v13 + 24) >> 1) - v28;
        v30 = type metadata accessor for CandidateWithDependencies(0);
        if (v29 < v25)
          goto LABEL_28;
        v31 = *(_QWORD *)(v30 - 8);
        v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
        v33 = *(_QWORD *)(v31 + 72);
        v34 = v13 + v32 + v33 * v28;
        v35 = v24 + v32;
        v36 = v33 * v25;
        v37 = v34 + v36;
        v38 = v35 + v36;
        if (v35 < v37 && v34 < v38)
          goto LABEL_30;
        swift_arrayInitWithCopy();
        if (v25)
        {
          v40 = *(_QWORD *)(v13 + 16);
          v41 = __OFADD__(v40, v25);
          v42 = v40 + v25;
          if (v41)
            goto LABEL_29;
          *(_QWORD *)(v13 + 16) = v42;
        }
      }
      else if (v25)
      {
        goto LABEL_27;
      }
      ++v11;
      swift_bridgeObjectRelease();
      v12 += v45;
      a2 = v15;
      if (v48 == v11)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    result = sub_23F61CA9C();
    __break(1u);
  }
  else
  {
    v13 = MEMORY[0x24BEE4AF8];
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_23F5F782C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unsigned int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  sub_23F35D2E8(&qword_256E701F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F38F964();
  v9 = v8 - v7;
  v10 = sub_23F61B9EC();
  v63 = *(_QWORD *)(v10 - 8);
  v64 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F4DC1DC();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v62 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (uint64_t *)((char *)&v62 - v16);
  v18 = sub_23F61A570();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  sub_23F38F964();
  v22 = (char *)(v21 - v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v21 - v20, a1, v18);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v22, v18);
  if (v23 == *MEMORY[0x24BE55690])
  {
    sub_23F5FBB40();
    v24 = *v22;
    sub_23F5FBC30();
    v25 = sub_23F5FBBF4();
    v27 = sub_23F5FBC58(v25, v26);
    *v28 = v24;
    sub_23F5FBBB8(v27, *MEMORY[0x24BEB9928]);
    *a2 = v18;
    v29 = sub_23F384048();
    sub_23F5FBCD4((uint64_t)a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104));
    v30 = (uint64_t)a2;
LABEL_10:
    v47 = 0;
    v48 = v29;
    return sub_23F36196C(v30, v47, 1, v48);
  }
  v31 = a2;
  if (v23 == *MEMORY[0x24BE55688])
  {
    sub_23F5FBB40();
    v32 = *(_QWORD *)v22;
    sub_23F5FBC30();
    v33 = sub_23F5FBBF4();
    v35 = sub_23F5FBC58(v33, v34);
    *v36 = v32;
    v37 = (unsigned int *)MEMORY[0x24BEB9918];
LABEL_9:
    sub_23F5FBBB8(v35, *v37);
    *a2 = v18;
    v29 = sub_23F384048();
    sub_23F5FBCD4((uint64_t)a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104));
    v30 = (uint64_t)a2;
    goto LABEL_10;
  }
  if (v23 == *MEMORY[0x24BE556A8])
  {
    sub_23F5FBB40();
    v38 = *(_QWORD *)v22;
    sub_23F5FBC30();
    v39 = sub_23F5FBBF4();
    v35 = sub_23F5FBC58(v39, v40);
    *v41 = v38;
    v37 = (unsigned int *)MEMORY[0x24BEB9948];
    goto LABEL_9;
  }
  if (v23 == *MEMORY[0x24BE556B0])
  {
    sub_23F5FBB40();
    v42 = *(_QWORD *)v22;
    v43 = *((_QWORD *)v22 + 1);
    sub_23F5FBC30();
    v44 = sub_23F5FBBF4();
    v35 = sub_23F5FBC58(v44, v45);
    *v46 = v42;
    v46[1] = v43;
    v37 = (unsigned int *)MEMORY[0x24BEB9958];
    goto LABEL_9;
  }
  if (v23 == *MEMORY[0x24BE556A0])
  {
    v50 = sub_23F5FBB40();
    MEMORY[0x24BDAC7A8](v50);
    *(&v62 - 2) = v3;
    sub_23F36EE78();
    v52 = v51;
    swift_bridgeObjectRelease();
    sub_23F36FD38(v52, v9);
    v53 = sub_23F384048();
    sub_23F5D7CD0(v9);
    if (v54)
    {
      sub_23F39E4B8(v9, &qword_256E701F0);
      sub_23F61B9BC();
      v55 = sub_23F5FBBF4();
      sub_23F5FBBB8(v56, *MEMORY[0x24BEB9CA8]);
      *v17 = v55;
      v58 = v63;
      v57 = v64;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v63 + 104))(v17, *MEMORY[0x24BEB9D18], v64);
    }
    else
    {
      sub_23F61B8CC();
      sub_23F3B1CC8(v9, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8));
      v58 = v63;
      v57 = v64;
      (*(void (**)(uint64_t *, char *, uint64_t))(v63 + 32))(v17, v15, v64);
    }
    sub_23F61B6E0();
    v59 = swift_allocBox();
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v58 + 16))(v2, v17, v57);
    sub_23F617BA0();
    sub_23F61B6BC();
    (*(void (**)(uint64_t *, uint64_t))(v58 + 8))(v17, v57);
    *v31 = v59;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v31, *MEMORY[0x24BEB9988], v53);
    swift_bridgeObjectRelease();
    v30 = (uint64_t)v31;
    v47 = 0;
    v48 = v53;
    return sub_23F36196C(v30, v47, 1, v48);
  }
  if (v23 == *MEMORY[0x24BE556B8])
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    v48 = sub_23F384048();
    v30 = (uint64_t)a2;
    v47 = 1;
    return sub_23F36196C(v30, v47, 1, v48);
  }
  if (v23 == *MEMORY[0x24BE55698])
  {
    sub_23F5FBC30();
    v60 = sub_23F5FBBF4();
    v35 = sub_23F5FBC58(v60, v61);
    v37 = (unsigned int *)MEMORY[0x24BEB9940];
    goto LABEL_9;
  }
  result = sub_23F61CC58();
  __break(1u);
  return result;
}

void sub_23F5F7CC8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v4 = v3;
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v53 = v8;
  sub_23F39C56C();
  v9 = sub_23F61B9EC();
  v56 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3834D0();
  v55 = v11;
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3838E4();
  v52 = v13;
  MEMORY[0x24BDAC7A8](v14);
  sub_23F383780();
  v54 = v15;
  v16 = sub_23F39C56C();
  v17 = type metadata accessor for CandidateWithDependencies(v16);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  sub_23F38F964();
  v21 = v20 - v19;
  sub_23F35D2E8(&qword_256E6FB08);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F38F964();
  v25 = v24 - v23;
  v26 = sub_23F61B404();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  sub_23F4DC1DC();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v52 - v29;
  v31 = type metadata accessor for TranscriptValueFetcher(0);
  sub_23F368690(a1, *(_QWORD *)(v4 + *(int *)(v31 + 20)));
  sub_23F5D7CD0(v25);
  if (!v32)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v30, v25, v26);
    sub_23F61B3E0();
    v34 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8);
    v35 = (uint64_t)v30;
LABEL_6:
    sub_23F3B1CC8(v35, v34);
    v36 = sub_23F384048();
    v37 = (uint64_t)a2;
    v38 = 0;
    goto LABEL_8;
  }
  sub_23F39E4B8(v25, &qword_256E6FB08);
  v33 = sub_23F5F8094();
  if (!v33)
  {
    v36 = sub_23F61B92C();
    v37 = (uint64_t)a2;
    v38 = 1;
    goto LABEL_8;
  }
  if (*(_QWORD *)(v33 + 16) == 1)
  {
    sub_23F5FB7E8(v33 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), v21);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v2, v21, v26);
    sub_23F5FB82C(v21);
    sub_23F61B3E0();
    v34 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8);
    v35 = v2;
    goto LABEL_6;
  }
  v39 = sub_23F5F70E8(v33);
  swift_bridgeObjectRelease();
  v40 = v53;
  sub_23F36FD38(v39, v53);
  v41 = sub_23F384048();
  sub_23F5D7CD0(v40);
  v43 = v56;
  v42 = v57;
  v44 = v54;
  if (v32)
  {
    sub_23F39E4B8(v40, &qword_256E701F0);
    v45 = sub_23F61B9BC();
    v46 = swift_allocBox();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v47, *MEMORY[0x24BEB9CA8], v45);
    *v44 = v46;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v43 + 104))(v44, *MEMORY[0x24BEB9D18], v42);
  }
  else
  {
    v48 = v52;
    sub_23F61B8CC();
    v49 = sub_23F5076F4();
    sub_23F3B1CC8(v49, v50);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v43 + 32))(v44, v48, v42);
  }
  sub_23F61B6E0();
  v51 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v43 + 16))(v55, v44, v42);
  sub_23F617BA0();
  sub_23F61B6BC();
  (*(void (**)(uint64_t *, uint64_t))(v43 + 8))(v44, v42);
  *a2 = v51;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(a2, *MEMORY[0x24BEB9988], v41);
  swift_bridgeObjectRelease();
  v37 = (uint64_t)a2;
  v38 = 0;
  v36 = v41;
LABEL_8:
  sub_23F36196C(v37, v38, 1, v36);
  sub_23F362948();
}

uint64_t sub_23F5F8094()
{
  uint64_t v1;

  sub_23F61B14C();
  sub_23F35D2E8(&qword_256E70F10);
  sub_23F35D2E8(&qword_256E74C88);
  sub_23F5FB92C();
  sub_23F61AC48();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_23F5F8124(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = a1;
  v37 = a2;
  v2 = sub_23F617000();
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v42 = v4;
  sub_23F39C56C();
  v41 = sub_23F61B2E4();
  v5 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  sub_23F38F964();
  v8 = (char *)(v7 - v6);
  sub_23F35D2E8(qword_256E78B18);
  sub_23F362850();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v36 - v13);
  sub_23F617BA0();
  sub_23F4F3328();
  v16 = v15;
  v17 = 0;
  v18 = *(_QWORD *)(v15 + 16);
  v19 = &qword_256E701C0;
  v40 = v15;
  while (1)
  {
    if (v17 == v18)
    {
      v20 = sub_23F49BA24();
      sub_23F36196C((uint64_t)v12, 1, 1, v20);
      v17 = v18;
      goto LABEL_6;
    }
    if (v17 >= *(_QWORD *)(v16 + 16))
      break;
    v21 = sub_23F49BA24();
    sub_23F5FB8AC(v16+ ((*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v17++, (uint64_t)v12);
    sub_23F36196C((uint64_t)v12, 0, 1, v21);
LABEL_6:
    sub_23F5FB8F4((uint64_t)v12, (uint64_t)v14, qword_256E78B18);
    v22 = sub_23F49BA24();
    if (sub_23F36195C((uint64_t)v14, 1, v22) == 1)
    {
      swift_bridgeObjectRelease();
      v30 = sub_23F35D2E8(&qword_256E70250);
      v31 = (uint64_t)v37;
      v32 = 1;
LABEL_11:
      sub_23F36196C(v31, v32, 1, v30);
      sub_23F362948();
      return;
    }
    v23 = v19;
    v24 = (char *)v14 + *(int *)(v22 + 48);
    v25 = v41;
    v26 = v14;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    v38 = *v14;
    v39 = v27;
    v27(v8, (uint64_t)v24, v41);
    v28 = v42;
    sub_23F61B260();
    v29 = sub_23F616FE8();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v28, v44);
    if ((v29 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v33 = sub_23F35D2E8(&qword_256E70250);
      v34 = v37;
      v35 = (char *)v37 + *(int *)(v33 + 48);
      *v37 = v38;
      v39(v35, (uint64_t)v8, v25);
      v31 = (uint64_t)v34;
      v32 = 0;
      v30 = v33;
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v25);
    v16 = v40;
    v14 = v26;
    v19 = v23;
  }
  __break(1u);
}

void sub_23F5F83DC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t (*v169)(uint64_t, uint64_t, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  char v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t (*v189)(uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void (*v197)(char *, uint64_t, uint64_t);
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t (*v206)(uint64_t, uint64_t, _QWORD);
  unint64_t v207;
  void (*v208)(uint64_t, unint64_t, uint64_t);
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t (*v214)(uint64_t, uint64_t, uint64_t);
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t (*v219)(uint64_t, uint64_t, _QWORD);
  uint64_t v220;
  uint64_t v221;
  char v222;
  uint64_t v223;
  void (*v224)(uint64_t);
  uint64_t v225;
  uint64_t *v226;
  uint64_t *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t *v230;
  uint64_t v231;
  uint64_t v232;
  void (*v233)(uint64_t);
  uint64_t v234;
  void (*v235)(uint64_t);
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t (*v241)(uint64_t, uint64_t, uint64_t);
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void (*v249)(uint64_t, uint64_t, uint64_t);
  uint64_t v250;
  char v251;
  uint64_t v252;
  void (*v253)(uint64_t, uint64_t);
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t *v259;
  uint64_t v260;
  uint64_t (*v261)(uint64_t, uint64_t, uint64_t);
  uint64_t v262;
  uint64_t (*v263)(uint64_t, _QWORD);
  void (*v264)(uint64_t, char *);
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  void (*v271)(uint64_t);
  uint64_t (*v272)(uint64_t, _QWORD);
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t *v277;
  uint64_t v278;
  uint64_t *v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t (*v283)(uint64_t, uint64_t);
  uint64_t v284;
  uint64_t v285;
  uint64_t (*v286)(uint64_t, uint64_t, uint64_t);
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  unsigned int (*v291)(uint64_t, uint64_t);
  void (*v292)(uint64_t, uint64_t);
  uint64_t v293;
  uint64_t v294;
  uint64_t (*v295)(uint64_t, uint64_t, _QWORD);
  uint64_t v296;
  char v297;
  uint64_t v298;
  _QWORD *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t (*v303)(uint64_t, uint64_t, _QWORD);
  uint64_t v304;
  uint64_t (*v305)(uint64_t, _QWORD);
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  void (*v309)(uint64_t);
  uint64_t v310;
  uint64_t v311;
  void (*v312)(uint64_t, uint64_t, uint64_t);
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t (*v318)(uint64_t, uint64_t, _QWORD);
  char v319;
  uint64_t v320;
  uint64_t (*v321)(uint64_t, _QWORD);
  uint64_t (*v322)(uint64_t, _QWORD, _QWORD);
  uint64_t *v323;
  uint64_t *v324;
  uint64_t v325;
  uint64_t (*v326)(uint64_t, _QWORD, _QWORD);
  char v327;
  uint64_t v328;
  uint64_t (*v329)(uint64_t, _QWORD);
  char v330;
  uint64_t (*v331)(uint64_t, _QWORD);
  uint64_t v332;
  uint64_t v333;
  uint64_t (*v334)(uint64_t, _QWORD, _QWORD);
  __n128 *v335;
  uint64_t (*v336)(uint64_t, _QWORD);
  uint64_t v337;
  uint64_t (*v338)(uint64_t, _QWORD, _QWORD);
  uint64_t *v339;
  uint64_t *v340;
  uint64_t v341;
  uint64_t (*v342)(uint64_t, _QWORD, _QWORD);
  char v343;
  uint64_t v344;
  uint64_t (*v345)(uint64_t, _QWORD);
  uint64_t v346;
  uint64_t (*v347)(uint64_t, _QWORD, _QWORD);
  __n128 *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t (*v351)(uint64_t, uint64_t, _QWORD);
  char v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t (*v355)(uint64_t, _QWORD, _QWORD);
  __n128 *v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t (*v359)(uint64_t, uint64_t, _QWORD);
  uint64_t v360;
  uint64_t (*v361)(uint64_t, _QWORD);
  uint64_t v362;
  uint64_t (*v366)(uint64_t, _QWORD, _QWORD);
  char v367;
  uint64_t (*v368)(uint64_t, _QWORD);
  uint64_t v369;
  uint64_t v370;
  uint64_t (*v371)(uint64_t, _QWORD, _QWORD);
  char v372;
  void *v373;
  os_log_type_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t (*v381)(uint64_t, _QWORD, _QWORD);
  __n128 *v382;
  void (*v383)(uint64_t, uint64_t);
  uint64_t v384;
  uint64_t (*v385)(uint64_t, _QWORD, _QWORD);
  char v386;
  uint64_t (*v387)(uint64_t, _QWORD);
  uint64_t v388;
  uint64_t v389;
  uint64_t (*v390)(uint64_t, _QWORD, _QWORD);
  char v391;
  void *v392;
  os_log_type_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t (*v399)(uint64_t, _QWORD);
  uint64_t (*v400)(uint64_t, _QWORD);
  uint64_t v401;
  uint64_t v402;
  uint64_t (*v403)(uint64_t, _QWORD, _QWORD);
  __n128 *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t (*v407)(uint64_t, uint64_t, _QWORD);
  uint64_t v408;
  uint64_t v409;
  uint64_t (*v410)(uint64_t, _QWORD);
  uint64_t v411[22];
  uint64_t v412;
  uint64_t v413;
  char v414[8];
  uint64_t v415;
  uint64_t v416;
  char v417[8];
  char v418[8];
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422[2];
  uint64_t v423;
  uint64_t v424;
  _QWORD v425[2];
  char v426[8];
  uint64_t v427;
  uint64_t v428;
  char v429[8];
  char v430[8];
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  char v436[8];
  _QWORD *v437;
  _QWORD v438[4];
  uint64_t v439;
  _QWORD v440[2];
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  char v446[8];
  uint64_t v447;
  uint64_t v448;
  _QWORD v449[3];
  uint64_t v450;
  char v451[8];
  uint64_t v452;
  uint64_t v453;
  char v454[8];
  uint64_t v455;
  char *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  char v464[8];
  uint64_t v465;
  char *v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t *v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  char *v480;
  uint64_t *v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  char v487[8];
  char v488[8];
  char v489[8];
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;

  v486 = a2;
  v447 = a1;
  v481 = a3;
  v4 = sub_23F618134();
  sub_23F383E7C(v4, (uint64_t)v436);
  sub_23F5FB9BC(v5);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  sub_23F3B13F0(v7);
  v8 = sub_23F61ACA8();
  sub_23F383E7C(v8, (uint64_t)&v432);
  sub_23F5FB9BC(v9);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  sub_23F3B13F0(v11);
  v12 = sub_23F618FEC();
  sub_23F383E7C(v12, (uint64_t)v446);
  sub_23F5FB9BC(v13);
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  sub_23F384990(v15);
  sub_23F35D2E8(&qword_256E74EC8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  sub_23F3B13F0(v17);
  v18 = sub_23F61AF60();
  sub_23F383E7C(v18, (uint64_t)&v443);
  sub_23F5FB9BC(v19);
  MEMORY[0x24BDAC7A8](v20);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F383780();
  sub_23F3B13F0(v22);
  v23 = sub_23F619E98();
  sub_23F383E7C(v23, (uint64_t)v449);
  sub_23F5FB9BC(v24);
  MEMORY[0x24BDAC7A8](v25);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F383780();
  sub_23F3B13F0(v27);
  v28 = sub_23F618D28();
  sub_23F383E7C(v28, (uint64_t)&v448);
  sub_23F5FB9BC(v29);
  MEMORY[0x24BDAC7A8](v30);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F383780();
  sub_23F3B13F0(v34);
  v35 = sub_23F617000();
  sub_23F383E7C(v35, (uint64_t)&v458);
  sub_23F5FB9BC(v36);
  MEMORY[0x24BDAC7A8](v37);
  sub_23F36285C();
  sub_23F384990(v38);
  sub_23F35D2E8(&qword_256E70248);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F36285C();
  sub_23F3B13F0(v40);
  v41 = sub_23F61B44C();
  sub_23F383E7C(v41, (uint64_t)v454);
  sub_23F5FB9BC(v42);
  MEMORY[0x24BDAC7A8](v43);
  sub_23F36285C();
  sub_23F384990(v44);
  sub_23F35D2E8(&qword_256E6FB08);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F36285C();
  sub_23F3B13F0(v46);
  v47 = sub_23F61B404();
  sub_23F383E7C(v47, (uint64_t)&v471);
  sub_23F5FB9BC(v48);
  MEMORY[0x24BDAC7A8](v49);
  sub_23F36285C();
  sub_23F384990(v50);
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F383780();
  sub_23F3B13F0(v57);
  v58 = sub_23F619FAC();
  sub_23F383E7C(v58, (uint64_t)&v486);
  sub_23F5FB9BC(v59);
  MEMORY[0x24BDAC7A8](v60);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F383780();
  sub_23F3B13F0(v62);
  v63 = sub_23F61A570();
  sub_23F383E7C(v63, (uint64_t)&v483);
  sub_23F5FB9BC(v64);
  MEMORY[0x24BDAC7A8](v65);
  sub_23F36285C();
  sub_23F3B13F0(v66);
  v67 = sub_23F61A300();
  sub_23F383E7C(v67, (uint64_t)&v472);
  sub_23F5FB9BC(v68);
  MEMORY[0x24BDAC7A8](v69);
  sub_23F36285C();
  sub_23F3B13F0(v70);
  v71 = sub_23F61A2E8();
  sub_23F383E7C(v71, (uint64_t)&v481);
  sub_23F5FB9BC(v72);
  MEMORY[0x24BDAC7A8](v73);
  sub_23F36285C();
  sub_23F3B13F0(v74);
  v476 = sub_23F61B92C();
  sub_23F5FB9BC(*(_QWORD *)(v476 - 8));
  MEMORY[0x24BDAC7A8](v75);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v77);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v79);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v81);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v82);
  sub_23F383780();
  v475 = v83;
  sub_23F39C56C();
  v84 = sub_23F61A924();
  sub_23F383E7C(v84, (uint64_t)&v421);
  sub_23F5FB9BC(v85);
  MEMORY[0x24BDAC7A8](v86);
  sub_23F36285C();
  sub_23F3B13F0(v87);
  v88 = sub_23F61A504();
  sub_23F383E7C(v88, (uint64_t)&v420);
  sub_23F5FB9BC(v89);
  MEMORY[0x24BDAC7A8](v90);
  sub_23F36285C();
  sub_23F3B13F0(v91);
  v92 = sub_23F61AAD4();
  sub_23F383E7C(v92, (uint64_t)&v450);
  sub_23F5FB9BC(v93);
  MEMORY[0x24BDAC7A8](v94);
  sub_23F36285C();
  sub_23F384990(v95);
  sub_23F35D2E8(&qword_256E74ED0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v96);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v97);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v98);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v99);
  sub_23F383780();
  sub_23F3B13F0(v100);
  v101 = sub_23F61AE1C();
  sub_23F383E7C(v101, (uint64_t)v451);
  sub_23F5FB9BC(v102);
  MEMORY[0x24BDAC7A8](v103);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v104);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v105);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v106);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v107);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v108);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v109);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v110);
  sub_23F383780();
  sub_23F3B13F0(v111);
  v112 = sub_23F61A5F4();
  sub_23F383E7C(v112, (uint64_t)v429);
  sub_23F5FB9BC(v113);
  MEMORY[0x24BDAC7A8](v114);
  sub_23F36285C();
  sub_23F3B13F0(v115);
  v116 = sub_23F61A6B4();
  sub_23F383E7C(v116, (uint64_t)&v461);
  sub_23F5FB9BC(v117);
  MEMORY[0x24BDAC7A8](v118);
  sub_23F36285C();
  sub_23F3B13F0(v119);
  v120 = sub_23F61A138();
  sub_23F383E7C(v120, (uint64_t)v464);
  sub_23F5FB9BC(v121);
  MEMORY[0x24BDAC7A8](v122);
  sub_23F36285C();
  sub_23F384990(v123);
  sub_23F35D2E8(&qword_256E702D8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v124);
  sub_23F36285C();
  sub_23F3B13F0(v125);
  v126 = sub_23F61A684();
  sub_23F383E7C(v126, (uint64_t)&v491);
  v477 = v127;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v128);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v129);
  sub_23F383780();
  sub_23F3B13F0(v130);
  v131 = sub_23F61B1E8();
  sub_23F383E7C(v131, (uint64_t)&v490);
  sub_23F5FB9BC(v132);
  MEMORY[0x24BDAC7A8](v133);
  sub_23F36285C();
  sub_23F3B13F0(v134);
  v135 = sub_23F61A36C();
  sub_23F383E7C(v135, (uint64_t)v489);
  sub_23F5FB9BC(v136);
  MEMORY[0x24BDAC7A8](v137);
  sub_23F36285C();
  sub_23F3B13F0(v138);
  v139 = sub_23F61B0E0();
  sub_23F383E7C(v139, (uint64_t)&v492);
  sub_23F5FB9BC(v140);
  MEMORY[0x24BDAC7A8](v141);
  sub_23F36285C();
  sub_23F3B13F0(v142);
  v474 = sub_23F61AC6C();
  v482 = *(_QWORD *)(v474 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v143);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v144);
  v146 = (char *)v411 - v145;
  sub_23F35D2E8(&qword_256E71E28);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v147);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v148);
  sub_23F383780();
  sub_23F3B13F0(v149);
  v150 = sub_23F619FF4();
  v472 = *(_QWORD *)(v150 - 8);
  v473 = v150;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v151);
  sub_23F36285C();
  sub_23F3B13F0(v152);
  v153 = sub_23F617D08();
  v484 = *(_QWORD *)(v153 - 8);
  v485 = v153;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v154);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v155);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v156);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v157);
  sub_23F383780();
  v483 = v158;
  sub_23F39C56C();
  v159 = sub_23F61B470();
  v160 = *(_QWORD *)(v159 - 8);
  MEMORY[0x24BDAC7A8](v159);
  sub_23F3B1C68();
  v161 = sub_23F61B2C0();
  v162 = *(_QWORD *)(v161 - 8);
  MEMORY[0x24BDAC7A8](v161);
  sub_23F3834D0();
  sub_23F39E564();
  v164 = MEMORY[0x24BDAC7A8](v163);
  v166 = (char *)v411 - v165;
  MEMORY[0x24BDAC7A8](v164);
  v168 = (char *)v411 - v167;
  sub_23F61B2CC();
  v169 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v162 + 16);
  v480 = v168;
  v170 = (uint64_t)v168;
  v171 = (uint64_t)v166;
  sub_23F4244A8((uint64_t)v166, v170, v169);
  v172 = *(_QWORD *)(v162 + 88);
  v173 = ((uint64_t (*)(char *, uint64_t))v172)(v166, v161);
  if (v173 == *MEMORY[0x24BE56AE0])
    goto LABEL_2;
  v478 = v162;
  v479 = v161;
  if (v173 == *MEMORY[0x24BE56C88])
  {
    sub_23F5FBA14();
    (*(void (**)(_QWORD, char *, uint64_t))(v160 + 32))(v3, v166, v159);
    sub_23F5FBD6C();
    sub_23F61B458();
    v175 = sub_23F5FBB50();
    v176 = v484;
    (*(void (**)(uint64_t, uint64_t))(v484 + 8))(v162, v485);
    if ((v175 & 1) != 0)
    {
      sub_23F5FBC30();
      v177 = sub_23F5FBD64();
      v179 = v178;
      v180 = sub_23F61A2DC();
      *v179 = v180;
      v179[1] = v181;
      sub_23F5FBB88(v180, *MEMORY[0x24BEB9958]);
      v183 = v475;
      v182 = v476;
      *v475 = v177;
      v184 = v470;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v470 + 104))(v183, *MEMORY[0x24BEB9A00], v182);
      sub_23F35D2E8(&qword_256E701F8);
      v174 = sub_23F5FB984();
      *(_OWORD *)(v174 + 16) = xmmword_23F61E7E0;
      v482 = (uint64_t)v3 + v174;
      v185 = sub_23F5FBCF4();
      sub_23F383C64(v185, v186, v187);
      sub_23F5FBB9C(v162, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v176 + 16));
      sub_23F5FAA6C(v176, v162, v482);
      sub_23F383CA8((uint64_t)v475, *(uint64_t (**)(uint64_t, uint64_t))(v184 + 8));
    }
    else
    {
      v174 = 0;
    }
    (*(void (**)(void (*)(uint64_t, uint64_t, uint64_t), uint64_t))(v160 + 8))(v3, v159);
    goto LABEL_72;
  }
  if (v173 == *MEMORY[0x24BE56AD0])
  {
    sub_23F5FBA14();
    v188 = sub_23F5FBAEC();
    v190 = v189(v188);
    v191 = MEMORY[0x24266D4F8](v190);
    v192 = *(_QWORD *)(v191 + 16);
    v174 = v474;
    if (v192)
    {
      sub_23F5FBCE0();
      v194 = v191 + v193;
      v196 = *(_QWORD *)(v195 + 72);
      v197 = *(void (**)(char *, uint64_t, uint64_t))(v195 + 16);
      while (1)
      {
        v197(v146, v194, v174);
        sub_23F61AC60();
        v198 = sub_23F5FBB50();
        sub_23F5FBB68();
        if ((v198 & 1) != 0)
          break;
        (*(void (**)(char *, uint64_t))(v482 + 8))(v146, v174);
        v194 += v196;
        if (!--v192)
          goto LABEL_12;
      }
      v213 = sub_23F5FBC4C();
      sub_23F38426C(v213, (uint64_t)v146, v214);
      v199 = 0;
    }
    else
    {
LABEL_12:
      v199 = 1;
      v198 = v469;
    }
    v215 = sub_23F5FBCB8(v198, v199);
    MEMORY[0x24BDAC7A8](v215);
    sub_23F5FBC64();
    sub_23F446E4C((void (*)(uint64_t *__return_ptr, char *))sub_23F5FB7A4, v216, (uint64_t)v487);
    sub_23F5FBD58();
    sub_23F39E4B8(v198, &qword_256E71E28);
    (*(void (**)(uint64_t, uint64_t))(v472 + 8))(v471, v473);
    goto LABEL_72;
  }
  v174 = v474;
  if (v173 == *MEMORY[0x24BE56C70])
  {
    sub_23F5FBA14();
    v200 = v468;
    v201 = v467;
    v146 = v466;
    sub_23F383C64(v467, v171, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v468 + 32));
    v171 = v461;
    sub_23F61A8B8();
    v202 = v460;
    v172 = v462;
    v203 = (*(uint64_t (**)(uint64_t, uint64_t))(v460 + 88))(v171, v462);
    if (v203 == *MEMORY[0x24BE553A8])
    {
LABEL_17:
      sub_23F383CA8(v201, *(uint64_t (**)(uint64_t, uint64_t))(v200 + 8));
      sub_23F507420(*(uint64_t (**)(uint64_t, uint64_t))(v202 + 8));
LABEL_18:
      v174 = 0;
LABEL_72:
      v162 = v478;
      goto LABEL_73;
    }
    if (v203 == *MEMORY[0x24BE553B0])
    {
      sub_23F507420(*(uint64_t (**)(uint64_t, uint64_t))(v202 + 96));
      sub_23F507594();
      v217 = sub_23F5FBAEC();
      sub_23F3841C4(v217, v218, v219);
      v220 = v483;
      sub_23F61A2D0();
      v221 = v486;
      v222 = sub_23F617CD8();
      v223 = sub_23F5D15E8();
      v224(v223);
      if ((v222 & 1) != 0)
      {
        sub_23F5FBC30();
        v225 = sub_23F5FBD64();
        v227 = v226;
        v228 = sub_23F61A2DC();
        *v227 = v228;
        v227[1] = v229;
        sub_23F5FBB88(v228, *MEMORY[0x24BEB9958]);
        v230 = v475;
        *v475 = v225;
        v231 = v476;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v470 + 104))(v230, *MEMORY[0x24BEB9A00], v476);
        sub_23F35D2E8(&qword_256E701F8);
        v174 = sub_23F5FB984();
        *(_OWORD *)(v174 + 16) = xmmword_23F61E7E0;
        v232 = sub_23F5FBCF4();
        v233(v232);
        v234 = sub_23F5D15E8();
        v235(v234);
        v236 = v174 + v172;
        v172 = v449[2];
        sub_23F5FAA6C(v221, v220, v236);
        v201 = v467;
        v237 = v230;
        v146 = v466;
        v238 = v231;
        v200 = v468;
        (*(void (**)(uint64_t *, uint64_t))(v470 + 8))(v237, v238);
      }
      else
      {
        v174 = 0;
      }
      sub_23F384430();
      sub_23F3841CC(v172, v263);
      v264 = *(void (**)(uint64_t, char *))(v200 + 8);
      v265 = v201;
LABEL_70:
      v280 = v146;
      goto LABEL_71;
    }
    if (v203 == *MEMORY[0x24BE553B8])
    {
      sub_23F507420(*(uint64_t (**)(uint64_t, uint64_t))(v202 + 96));
      sub_23F507594();
      v239 = sub_23F5FBAEC();
      v242 = sub_23F4244A8(v239, v240, v241);
      v243 = MEMORY[0x24266D804](v242);
      v244 = *(_QWORD *)(v243 + 16);
      if (v244)
      {
        sub_23F5FBCE0();
        v246 = v243 + v245;
        v248 = *(_QWORD *)(v247 + 72);
        v249 = *(void (**)(uint64_t, uint64_t, uint64_t))(v247 + 16);
        v250 = v440[1];
        while (1)
        {
          v249(v250, v246, v174);
          sub_23F61AC60();
          v251 = sub_23F5FBB50();
          sub_23F5FBB68();
          if ((v251 & 1) != 0)
            break;
          v252 = sub_23F5076F4();
          v253(v252, v174);
          v246 += v248;
          if (!--v244)
          {
            v254 = 1;
            v146 = v466;
            v255 = v443;
            goto LABEL_69;
          }
        }
        v255 = v443;
        sub_23F38426C(v443, v250, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v482 + 32));
        v254 = 0;
        v146 = v466;
      }
      else
      {
        v254 = 1;
        v255 = v443;
      }
LABEL_69:
      v281 = sub_23F5FBCB8(v255, v254);
      MEMORY[0x24BDAC7A8](v281);
      sub_23F5FBC64();
      sub_23F446E4C((void (*)(uint64_t *__return_ptr, char *))sub_23F5FB970, v282, (uint64_t)v488);
      sub_23F5FBD58();
      sub_23F39E4B8(v255, &qword_256E71E28);
      sub_23F384430();
      sub_23F3D98EC(v448, v283);
      v264 = *(void (**)(uint64_t, char *))(v468 + 8);
      v265 = v467;
      goto LABEL_70;
    }
    if (v203 == *MEMORY[0x24BE55318])
      goto LABEL_17;
    goto LABEL_55;
  }
  if (v173 == *MEMORY[0x24BE56AC8])
  {
    sub_23F5FBA14();
    sub_23F507594();
    v204 = sub_23F5FBAEC();
    sub_23F3841C4(v204, v205, v206);
    sub_23F61B1B8();
    sub_23F5FBC38();
    if (v146)
    {
      v207 = v174 + ((*(unsigned __int8 *)(v477 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v477 + 80));
      v208 = *(void (**)(uint64_t, unint64_t, uint64_t))(v477 + 16);
      v209 = v465;
      v210 = v449[1];
      while (1)
      {
        v208(v210, v207, v209);
        v172 = v210;
        sub_23F61A660();
        sub_23F5FBB50();
        sub_23F5FBA74();
        if ((v210 & 1) != 0)
          break;
        sub_23F5FBBC8(v477);
        sub_23F5FBBFC();
        if (v327)
        {
          v211 = 1;
          v212 = v450;
          goto LABEL_44;
        }
      }
      v212 = v450;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v477 + 32))(v450, v210, v209);
      v211 = 0;
LABEL_44:
      v256 = v453;
    }
    else
    {
      v211 = 1;
      v256 = v453;
      v212 = v450;
    }
    sub_23F5FBA88(v212, v211, 1, (uint64_t)&v491);
    sub_23F5FBAA4();
    v257 = v212;
    v200 = v457;
    v146 = v456;
    v171 = v455;
    v258 = v452;
    v160 = v458;
    if (v327)
    {
      v259 = &qword_256E702D8;
      v260 = v257;
LABEL_48:
      sub_23F39E4B8(v260, v259);
LABEL_61:
      v174 = 0;
LABEL_66:
      sub_23F384430();
      v265 = v463;
      v279 = &v490;
LABEL_67:
      v280 = (char *)*(v279 - 32);
LABEL_71:
      v264(v265, v280);
      goto LABEL_72;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v477 + 32))(v458, v257, v172);
    sub_23F61A63C();
    v172 = v459;
    v174 = *(_QWORD *)(v171 + 88);
    if (((unsigned int (*)(uint64_t, uint64_t))v174)(v459, v200) == *MEMORY[0x24BE54D08])
    {
      sub_23F362A28(v172, *(uint64_t (**)(uint64_t, uint64_t))(v171 + 96));
      sub_23F507594();
      sub_23F4244A8(v256, v172, v261);
      sub_23F5F782C(v256);
      v262 = v476;
      if (sub_23F36195C(v258, 1, v476) != 1)
      {
        sub_23F5FBB78();
        v270 = v444;
        v271(v444);
        sub_23F35D2E8(&qword_256E701F8);
        type metadata accessor for CandidateWithDependencies(0);
        v174 = swift_allocObject();
        *(_OWORD *)(v174 + 16) = xmmword_23F61E7E0;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v258 + 16))(v475, v270, v262);
        sub_23F5FBA60();
        sub_23F5FBAC4();
        (*(void (**)(uint64_t, uint64_t))(v258 + 8))(v444, v262);
        sub_23F3D98EC(v256, *(uint64_t (**)(uint64_t, uint64_t))(v449[0] + 8));
        v272 = *(uint64_t (**)(uint64_t, _QWORD))(v477 + 8);
        v273 = v160;
        goto LABEL_65;
      }
      sub_23F3D98EC(v256, *(uint64_t (**)(uint64_t, uint64_t))(v449[0] + 8));
      sub_23F39E4B8(v258, &qword_256E701F0);
LABEL_57:
      sub_23F61A63C();
      if (((unsigned int (*)(char *, uint64_t))v174)(v146, v200) != *MEMORY[0x24BE54CA0])
      {
        sub_23F3841CC(v160, *(uint64_t (**)(uint64_t, _QWORD))(v477 + 8));
        sub_23F362A28((uint64_t)v146, *(uint64_t (**)(uint64_t, uint64_t))(v171 + 8));
        goto LABEL_61;
      }
      sub_23F362A28((uint64_t)v146, *(uint64_t (**)(uint64_t, uint64_t))(v171 + 96));
      v266 = v484;
      v267 = v441;
      sub_23F383C64(v441, (uint64_t)v146, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v484 + 32));
      v268 = type metadata accessor for TranscriptValueFetcher(0);
      v269 = v442;
      sub_23F368690(v267, *(_QWORD *)(v447 + *(int *)(v268 + 20)));
      if (sub_23F36195C(v269, 1, v445) == 1)
      {
        sub_23F383CA8(v267, *(uint64_t (**)(uint64_t, uint64_t))(v266 + 8));
        sub_23F3841CC(v160, *(uint64_t (**)(uint64_t, _QWORD))(v477 + 8));
        v259 = &qword_256E6FB08;
        v260 = v269;
        goto LABEL_48;
      }
      v274 = v440[0];
      v275 = v439;
      sub_23F38426C(v439, v269, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v440[0] + 32));
      sub_23F35D2E8(&qword_256E701F8);
      v174 = sub_23F5FB984();
      *(_OWORD *)(v174 + 16) = xmmword_23F61E7E0;
      v276 = v174 + v269;
      v277 = v475;
      sub_23F61B3E0();
      v278 = v483;
      sub_23F383C64(v483, v267, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v266 + 16));
      sub_23F5FAA6C((uint64_t)v277, v278, v276);
      sub_23F3841CC(v275, *(uint64_t (**)(uint64_t, _QWORD))(v274 + 8));
      sub_23F383CA8(v267, *(uint64_t (**)(uint64_t, uint64_t))(v266 + 8));
      v272 = *(uint64_t (**)(uint64_t, _QWORD))(v477 + 8);
      v273 = v458;
LABEL_65:
      sub_23F3841CC(v273, v272);
      goto LABEL_66;
    }
LABEL_56:
    sub_23F362A28(v172, *(uint64_t (**)(uint64_t, uint64_t))(v171 + 8));
    goto LABEL_57;
  }
  if (v173 != *MEMORY[0x24BE56AF8] && v173 != *MEMORY[0x24BE56B18] && v173 != *MEMORY[0x24BE56BA0])
  {
    v200 = *MEMORY[0x24BE56B28];
    if (v173 != (_DWORD)v200)
    {
      if (v173 == *MEMORY[0x24BE56AF0])
      {
        sub_23F5FBA14();
        v284 = v438[2];
        v285 = sub_23F3D9D98();
        v146 = (char *)v438[3];
        sub_23F383C64(v285, v171, v286);
        sub_23F5FBD6C();
        sub_23F61A108();
        sub_23F39E4F0((unint64_t *)&qword_256E701E8, MEMORY[0x24BE52160]);
        v287 = v485;
        v174 = sub_23F61C0A0();
        (*(void (**)(uint64_t, uint64_t))(v484 + 8))(v200, v287);
        if ((v174 & 1) != 0)
        {
          v288 = sub_23F61A12C();
          MEMORY[0x24BDAC7A8](v288);
          v411[-2] = v161;
          sub_23F3683D0();
          sub_23F5FBD58();
          sub_23F362984();
        }
        else
        {
          v174 = 0;
        }
        v264 = *(void (**)(uint64_t, char *))(v284 + 8);
        v265 = v161;
        goto LABEL_70;
      }
      if (v173 != *MEMORY[0x24BE56B10])
      {
        if (v173 == *MEMORY[0x24BE56B58])
        {
          v162 = v478;
          sub_23F3D98EC(v171, *(uint64_t (**)(uint64_t, uint64_t))(v478 + 96));
LABEL_80:
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        if (v173 != *MEMORY[0x24BE56B78] && v173 != *MEMORY[0x24BE56B00])
        {
          if (v173 == *MEMORY[0x24BE56AD8])
          {
            v162 = v478;
            sub_23F3D98EC(v171, *(uint64_t (**)(uint64_t, uint64_t))(v478 + 96));
            v289 = *(_QWORD *)(v171 + 16);
            v290 = *(_QWORD *)(v171 + 24);
            sub_23F3F3D0C(*(_QWORD *)v171, *(_QWORD *)(v171 + 8));
            sub_23F3F3D0C(v289, v290);
            goto LABEL_80;
          }
          if (v173 != *MEMORY[0x24BE56C18] && v173 != *MEMORY[0x24BE56BC0] && v173 != *MEMORY[0x24BE56B20])
          {
            if (v173 == *MEMORY[0x24BE56B48])
            {
              v291 = (unsigned int (*)(uint64_t, uint64_t))v172;
              v292 = *(void (**)(uint64_t, uint64_t))(v478 + 96);
              v292(v171, v479);
              sub_23F507594();
              v293 = sub_23F5FBAEC();
              sub_23F3841C4(v293, v294, v295);
              v296 = v483;
              sub_23F61A6A8();
              v297 = sub_23F5FBB50();
              (*(void (**)(uint64_t, uint64_t))(v484 + 8))(v296, v485);
              if ((v297 & 1) != 0)
              {
                sub_23F61B14C();
                v298 = v434;
                sub_23F61A69C();
                v299 = v437;
                sub_23F5F8124(v298, v437);
                sub_23F3841CC(v298, *(uint64_t (**)(uint64_t, _QWORD))(v435 + 8));
                swift_bridgeObjectRelease();
                v300 = sub_23F35D2E8(&qword_256E70250);
                if (sub_23F36195C((uint64_t)v299, 1, v300) == 1)
                {
                  sub_23F5FBBA4(&qword_256E70248, (uint64_t)&v459);
                }
                else
                {
                  v307 = v433;
                  sub_23F61B2CC();
                  sub_23F61B2E4();
                  v308 = sub_23F5076F4();
                  v309(v308);
                  if (v291(v307, v479) == (_DWORD)v200)
                  {
                    v310 = v433;
                    v292(v433, v479);
                    v311 = sub_23F3D9D98();
                    v312(v311, v310, v432);
                    v174 = sub_23F61B440();
                    v313 = sub_23F5F7240(v174);
                    v314 = swift_bridgeObjectRelease();
                    v315 = MEMORY[0x24266DBA0](v314);
                    sub_23F5F74C4(v315, v313);
                    sub_23F5FBD58();
                    swift_bridgeObjectRelease();
                    sub_23F362984();
                    sub_23F5942CC();
LABEL_113:
                    sub_23F384430();
                    v265 = v438[0];
                    v279 = &v461;
                    goto LABEL_67;
                  }
                  sub_23F5FBD78(*(uint64_t (**)(_QWORD))(v478 + 8));
                }
              }
              v174 = 0;
              goto LABEL_113;
            }
            if (v173 != *MEMORY[0x24BE56C30]
              && v173 != *MEMORY[0x24BE56C58]
              && v173 != *MEMORY[0x24BE56C60]
              && v173 != *MEMORY[0x24BE56C50]
              && v173 != *MEMORY[0x24BE56C08]
              && v173 != *MEMORY[0x24BE56C38]
              && v173 != *MEMORY[0x24BE56B90]
              && v173 != *MEMORY[0x24BE56BA8])
            {
              if (v173 == *MEMORY[0x24BE56B60])
              {
                sub_23F5FBA14();
                sub_23F507594();
                v301 = sub_23F5FBAEC();
                v304 = sub_23F3841C4(v301, v302, v303);
                MEMORY[0x24266DAD4](v304);
                sub_23F5FBC38();
                if (v146)
                {
                  sub_23F5FB9F0();
                  while (1)
                  {
                    sub_23F5FBAD4((uint64_t)v414);
                    sub_23F5FBC44();
                    sub_23F5FBB50();
                    sub_23F5FBA74();
                    if ((v172 & 1) != 0)
                      break;
                    sub_23F384430();
                    sub_23F3841CC(v411[0], v305);
                    sub_23F5FBBFC();
                    if (v327)
                      goto LABEL_108;
                  }
                  sub_23F507594();
                  sub_23F5FBA50(v411[3], v322);
                  v306 = 0;
                }
                else
                {
LABEL_108:
                  v306 = 1;
                }
                sub_23F5FBA24(v306, (uint64_t)&v416);
                sub_23F5FBAA4();
                if (v327)
                {
                  v323 = &qword_256E74ED0;
                  v324 = &v416;
                }
                else
                {
                  sub_23F507594();
                  v325 = sub_23F5FBC4C();
                  sub_23F5FBA50(v325, v326);
                  sub_23F5FBBAC();
                  sub_23F5FBB58();
                  sub_23F3841CC(v174, *(uint64_t (**)(uint64_t, _QWORD))(v427 + 8));
                  sub_23F5FBAFC();
                  if (!v327)
                  {
                    sub_23F5FBB78();
                    v333 = sub_23F3D9D98();
                    sub_23F5FBB1C(v333, v334);
                    sub_23F35D2E8(&qword_256E701F8);
                    v335 = (__n128 *)sub_23F5FB984();
                    sub_23F5FB9CC(v335, (__n128)xmmword_23F61E7E0);
                    sub_23F5FBA60();
                    sub_23F5FBAC4();
                    sub_23F5942CC();
                    sub_23F5FBD30();
LABEL_144:
                    sub_23F3841CC(*(_QWORD *)(v337 - 256), v336);
                    goto LABEL_145;
                  }
                  sub_23F5FBD30();
                  sub_23F3841CC(*(_QWORD *)(v328 - 256), v329);
                  v323 = &qword_256E701F0;
                  v324 = &v427;
                }
                sub_23F5FBBA4(v323, (uint64_t)v324);
                v330 = v412;
                MEMORY[0x24266DAEC]();
                sub_23F5FBC38();
                if (v146)
                {
                  sub_23F5FB9F0();
                  while (1)
                  {
                    sub_23F5FBAD4((uint64_t)v417);
                    sub_23F5FBC44();
                    sub_23F5FBB50();
                    sub_23F5FBA74();
                    if ((v330 & 1) != 0)
                      break;
                    sub_23F384430();
                    sub_23F3841CC(v411[6], v331);
                    sub_23F5FBBFC();
                    if (v327)
                      goto LABEL_135;
                  }
                  sub_23F507594();
                  sub_23F5FBA50(v411[16], v338);
                  v332 = 0;
                }
                else
                {
LABEL_135:
                  v332 = 1;
                }
                sub_23F5FBA24(v332, (uint64_t)&v423);
                sub_23F5FBAA4();
                if (v327)
                {
                  v339 = &qword_256E74ED0;
                  v340 = &v423;
                }
                else
                {
                  sub_23F507594();
                  v341 = sub_23F5FBC4C();
                  sub_23F5FBA50(v341, v342);
                  sub_23F5FBBAC();
                  sub_23F5FBB58();
                  sub_23F3841CC(v174, *(uint64_t (**)(uint64_t, _QWORD))(v427 + 8));
                  sub_23F5FBAFC();
                  if (!v343)
                  {
                    sub_23F5FBB78();
                    v346 = sub_23F3D9D98();
                    sub_23F5FBB1C(v346, v347);
                    sub_23F35D2E8(&qword_256E701F8);
                    v348 = (__n128 *)sub_23F5FB984();
                    sub_23F5FB9CC(v348, (__n128)xmmword_23F61E7E0);
                    sub_23F5FBA60();
                    sub_23F5FBAC4();
                    sub_23F5942CC();
                    sub_23F5FBD44();
                    goto LABEL_144;
                  }
                  sub_23F5FBD44();
                  sub_23F3841CC(*(_QWORD *)(v344 - 256), v345);
                  v339 = &qword_256E701F0;
                  v340 = (uint64_t *)&v437;
                }
                sub_23F5FBBA4(v339, (uint64_t)v340);
                v174 = 0;
LABEL_145:
                sub_23F384430();
                v265 = v412;
                v279 = (uint64_t *)v429;
                goto LABEL_67;
              }
              if (v173 != *MEMORY[0x24BE56B38] && v173 != *MEMORY[0x24BE56B88] && v173 != *MEMORY[0x24BE56C40])
              {
                if (v173 == *MEMORY[0x24BE56B98])
                {
                  sub_23F5FBA14();
                  sub_23F507594();
                  v316 = sub_23F5FBAEC();
                  sub_23F3841C4(v316, v317, v318);
                  sub_23F5FBD6C();
                  sub_23F61A498();
                  v319 = sub_23F5FBB50();
                  sub_23F5FBB68();
                  if ((v319 & 1) != 0)
                  {
                    v320 = v413;
                    sub_23F61A4F8();
                    v174 = v415;
                    sub_23F61AC78();
                    sub_23F384430();
                    sub_23F3841CC(v320, v321);
                    sub_23F5FAFBC(v174, (uint64_t *)v411[18]);
                    sub_23F3841CC(v174, *(uint64_t (**)(uint64_t, _QWORD))(v416 + 8));
                    sub_23F5FBAFC();
                    if (!v327)
                    {
                      sub_23F5FBB78();
                      v354 = sub_23F3D9D98();
                      sub_23F5FBB1C(v354, v355);
                      sub_23F35D2E8(&qword_256E701F8);
                      v356 = (__n128 *)sub_23F5FB984();
                      sub_23F5FB9CC(v356, (__n128)xmmword_23F61E7E0);
                      sub_23F5FBA60();
                      sub_23F5FBAC4();
                      sub_23F5942CC();
LABEL_158:
                      sub_23F384430();
                      v265 = v411[8];
                      v279 = &v420;
                      goto LABEL_67;
                    }
                    sub_23F5FBBA4(&qword_256E701F0, (uint64_t)v425);
                  }
                  v174 = 0;
                  goto LABEL_158;
                }
                if (v173 != *MEMORY[0x24BE56C28]
                  && v173 != *MEMORY[0x24BE56C48]
                  && v173 != *MEMORY[0x24BE56BB8]
                  && v173 != *MEMORY[0x24BE56BB0]
                  && v173 != *MEMORY[0x24BE56C68]
                  && v173 != *MEMORY[0x24BE56B30]
                  && v173 != *MEMORY[0x24BE56B50]
                  && v173 != *MEMORY[0x24BE56C00]
                  && v173 != *MEMORY[0x24BE56C20])
                {
                  if (v173 == *MEMORY[0x24BE56BC8])
                  {
                    sub_23F5FBA14();
                    sub_23F507594();
                    v349 = sub_23F5FBAEC();
                    sub_23F3841C4(v349, v350, v351);
                    sub_23F5FBD6C();
                    sub_23F61A90C();
                    v352 = sub_23F5FBB50();
                    sub_23F5FBB68();
                    if ((v352 & 1) != 0)
                    {
                      sub_23F35D2E8(&qword_256E701F8);
                      v353 = sub_23F5FB984();
                      *(_OWORD *)(v353 + 16) = xmmword_23F61E7E0;
                      v174 = v353;
                      sub_23F61A918();
                      sub_23F5FBB9C(v483, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v484 + 16));
                      sub_23F5FBC9C();
                    }
                    else
                    {
                      v174 = 0;
                    }
                    sub_23F384430();
                    v265 = v411[9];
                    v279 = &v421;
                    goto LABEL_67;
                  }
                  if (v173 == *MEMORY[0x24BE56C10])
                  {
                    sub_23F5FBA14();
                    sub_23F507594();
                    v357 = sub_23F5FBAEC();
                    v360 = sub_23F3841C4(v357, v358, v359);
                    MEMORY[0x24266DF9C](v360);
                    sub_23F5FBC38();
                    if (v146)
                    {
                      sub_23F5FB9F0();
                      while (1)
                      {
                        sub_23F5FBAD4((uint64_t)&v415);
                        sub_23F5FBC44();
                        sub_23F5FBB50();
                        sub_23F5FBA74();
                        if ((v172 & 1) != 0)
                          break;
                        sub_23F384430();
                        sub_23F3841CC(v411[2], v361);
                        sub_23F5FBBFC();
                        if (v327)
                          goto LABEL_165;
                      }
                      sub_23F507594();
                      sub_23F5FBA50(v411[7], v366);
                      v362 = 0;
                    }
                    else
                    {
LABEL_165:
                      v362 = 1;
                    }
                    sub_23F5FBA24(v362, (uint64_t)v418);
                    sub_23F5FBAA4();
                    if (v327)
                    {
                      sub_23F5FBBA4(&qword_256E74ED0, (uint64_t)v418);
                      v367 = v428;
                      MEMORY[0x24266DFA8]();
                      sub_23F5FBC38();
                      if (v146)
                      {
                        sub_23F5FB9F0();
                        while (1)
                        {
                          sub_23F5FBAD4((uint64_t)v422);
                          sub_23F5FBC44();
                          sub_23F5FBB50();
                          sub_23F5FBA74();
                          if ((v367 & 1) != 0)
                            break;
                          sub_23F384430();
                          sub_23F3841CC(v411[14], v368);
                          sub_23F5FBBFC();
                          if (v327)
                            goto LABEL_189;
                        }
                        sub_23F507594();
                        sub_23F5FBA50(v411[20], v385);
                        v369 = 0;
                      }
                      else
                      {
LABEL_189:
                        v369 = 1;
                      }
                      sub_23F5FBA24(v369, (uint64_t)v426);
                      sub_23F5FBAA4();
                      if (v327)
                      {
                        sub_23F5FBBA4(&qword_256E74ED0, (uint64_t)v426);
                        sub_23F61AAB0();
                        sub_23F5FBC38();
                        if (v146)
                        {
                          sub_23F5FB9F0();
                          while (1)
                          {
                            v386 = v420;
                            v3(v420, v200, v424);
                            sub_23F61AF54();
                            sub_23F5FBB50();
                            sub_23F5FBA74();
                            if ((v386 & 1) != 0)
                              break;
                            sub_23F384430();
                            sub_23F3841CC(v420, v387);
                            sub_23F5FBBFC();
                            if (v327)
                              goto LABEL_202;
                          }
                          sub_23F507594();
                          sub_23F3841C4(v421, v420, v407);
                          v388 = 0;
                        }
                        else
                        {
LABEL_202:
                          v388 = 1;
                        }
                        sub_23F5FBA88(v421, v388, 1, (uint64_t)&v443);
                        sub_23F5FBAA4();
                        if (!v327)
                        {
                          (*(void (**)(uint64_t, uint64_t, uint64_t))(v423 + 32))(v422[1], v421, v424);
                          sub_23F35D2E8(&qword_256E701F8);
                          v408 = sub_23F5FB984();
                          *(_OWORD *)(v408 + 16) = xmmword_23F61E7E0;
                          v174 = v408;
                          v409 = v425[0];
                          sub_23F61AF48();
                          sub_23F618FD4();
                          sub_23F3841CC(v409, *(uint64_t (**)(uint64_t, _QWORD))(v425[1] + 8));
                          sub_23F5FBB9C(v483, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v484 + 16));
                          sub_23F5FBC9C();
                          v405 = sub_23F5D15E8();
                          goto LABEL_213;
                        }
                        sub_23F5FBBA4(&qword_256E74EC8, (uint64_t)v440);
LABEL_216:
                        v174 = 0;
                        goto LABEL_217;
                      }
                      sub_23F507594();
                      v389 = sub_23F5FBC4C();
                      sub_23F5FBA50(v389, v390);
                      sub_23F5FBBAC();
                      sub_23F5FBB58();
                      sub_23F3841CC(v174, *(uint64_t (**)(uint64_t, _QWORD))(v427 + 8));
                      sub_23F5FBAFC();
                      if (!v391)
                      {
                        sub_23F5FBB78();
                        v402 = sub_23F3D9D98();
                        sub_23F5FBB1C(v402, v403);
                        sub_23F35D2E8(&qword_256E701F8);
                        v404 = (__n128 *)sub_23F5FB984();
                        sub_23F5FB9CC(v404, (__n128)xmmword_23F61E7E0);
                        sub_23F5FBA60();
                        sub_23F5FBAC4();
                        sub_23F5942CC();
                        sub_23F5FBD1C();
                        goto LABEL_208;
                      }
                      sub_23F5FBBA4(&qword_256E701F0, (uint64_t)v438);
                      sub_23F5FBCAC();
                      sub_23F5FBD80(*(uint64_t (**)(_QWORD, _QWORD))(v484 + 16));
                      v392 = (void *)sub_23F619E8C();
                      v393 = sub_23F61C628();
                      if (sub_23F4F27F4(v393))
                      {
                        sub_23F5AB8D4();
                        v490 = sub_23F5FBC8C();
                        *(_DWORD *)v200 = 136315138;
                        sub_23F39E4F0((unint64_t *)&qword_256E6FB60, MEMORY[0x24BE52170]);
                        v394 = sub_23F5FBC08();
                        sub_23F3ECBE4(v394, v395);
                        sub_23F5FBBD8(v396);
                        sub_23F362984();
                        sub_23F5FBBC8(v484);
                        sub_23F5FBC1C(&dword_23F35A000, v397, v398, "contextual value for %s has no typedValue! This is a bug in ContextRetrieval.");
                        sub_23F5FBC7C();
                        sub_23F366530();
                      }

                      sub_23F5FBD78(*(uint64_t (**)(_QWORD))(v484 + 8));
                      sub_23F384430();
                      sub_23F3841CC(v422[0], v410);
                      sub_23F5FBD1C();
                    }
                    else
                    {
                      sub_23F507594();
                      v370 = sub_23F5FBC4C();
                      sub_23F5FBA50(v370, v371);
                      sub_23F5FBBAC();
                      sub_23F5FBB58();
                      sub_23F3841CC(v174, *(uint64_t (**)(uint64_t, _QWORD))(v427 + 8));
                      sub_23F5FBAFC();
                      if (!v372)
                      {
                        sub_23F5FBB78();
                        v380 = sub_23F3D9D98();
                        sub_23F5FBB1C(v380, v381);
                        sub_23F35D2E8(&qword_256E701F8);
                        v382 = (__n128 *)sub_23F5FB984();
                        sub_23F5FB9CC(v382, (__n128)xmmword_23F61E7E0);
                        sub_23F5FBA60();
                        sub_23F5FBAC4();
                        sub_23F5942CC();
                        sub_23F5FBD08();
LABEL_208:
                        v405 = *(_QWORD *)(v384 - 256);
                        v406 = v431;
LABEL_213:
                        v383(v405, v406);
LABEL_217:
                        sub_23F384430();
                        v265 = v428;
                        v279 = &v450;
                        goto LABEL_67;
                      }
                      sub_23F5FBBA4(&qword_256E701F0, (uint64_t)v430);
                      sub_23F5FBCAC();
                      sub_23F5FBD80(*(uint64_t (**)(_QWORD, _QWORD))(v484 + 16));
                      v373 = (void *)sub_23F619E8C();
                      v374 = sub_23F61C628();
                      if (sub_23F4F27F4(v374))
                      {
                        sub_23F5AB8D4();
                        v490 = sub_23F5FBC8C();
                        *(_DWORD *)v200 = 136315138;
                        sub_23F39E4F0((unint64_t *)&qword_256E6FB60, MEMORY[0x24BE52170]);
                        v375 = sub_23F5FBC08();
                        sub_23F3ECBE4(v375, v376);
                        sub_23F5FBBD8(v377);
                        sub_23F362984();
                        sub_23F5FBBC8(v484);
                        sub_23F5FBC1C(&dword_23F35A000, v378, v379, "contextual value for %s has no typedValue! This is a bug in ContextRetrieval.");
                        sub_23F5FBC7C();
                        sub_23F366530();
                      }

                      sub_23F5FBD78(*(uint64_t (**)(_QWORD))(v484 + 8));
                      sub_23F384430();
                      sub_23F3841CC(v419, v399);
                      sub_23F5FBD08();
                    }
                    sub_23F3841CC(*(_QWORD *)(v401 - 256), v400);
                    goto LABEL_216;
                  }
                  if (v173 != *MEMORY[0x24BE56B68] && v173 != *MEMORY[0x24BE56AB8])
                  {
                    if (v173 == *MEMORY[0x24BE56B70]
                      || v173 == *MEMORY[0x24BE56C78]
                      || v173 == *MEMORY[0x24BE56B80]
                      || v173 == *MEMORY[0x24BE56C80])
                    {
                      goto LABEL_18;
                    }
LABEL_55:
                    sub_23F61CC58();
                    __break(1u);
                    goto LABEL_56;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  v162 = v478;
LABEL_2:
  sub_23F3D98EC(v171, *(uint64_t (**)(uint64_t, uint64_t))(v162 + 8));
LABEL_3:
  v174 = 0;
LABEL_73:
  sub_23F3D98EC((uint64_t)v480, *(uint64_t (**)(uint64_t, uint64_t))(v162 + 8));
  *v481 = v174;
  sub_23F362870();
}

uint64_t sub_23F5FAA6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a2;
  v25 = a3;
  v26 = a1;
  v3 = sub_23F617D08();
  v23 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23F61B3A4();
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61B3EC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F61B92C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE56E60], v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE56E00], v22);
  v17 = v23;
  v16 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v5, v24, v3);
  v18 = v25;
  sub_23F61B3D4();
  sub_23F39E4F0(&qword_256E6FFB0, MEMORY[0x24BE52158]);
  v19 = sub_23F61BFEC();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v3);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v26, v13);
  result = type metadata accessor for CandidateWithDependencies(0);
  *(_QWORD *)(v18 + *(int *)(result + 20)) = v19;
  return result;
}

void sub_23F5FAC78(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;

  v23 = a1;
  v24 = a2;
  v3 = sub_23F617D08();
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B1C68();
  v5 = sub_23F61B92C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v21 - v10);
  sub_23F5FBC30();
  v12 = sub_23F5FBD64();
  v14 = v13;
  v15 = sub_23F61A2DC();
  *v14 = v15;
  v14[1] = v16;
  sub_23F5FBB88(v15, *MEMORY[0x24BEB9958]);
  *v11 = v12;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v11, *MEMORY[0x24BEB9A00], v5);
  sub_23F35D2E8(&qword_256E701F8);
  v17 = sub_23F5FB984();
  *(_OWORD *)(v17 + 16) = xmmword_23F61E7E0;
  sub_23F4244A8((uint64_t)v9, (uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v2, v23, v22);
  v18 = sub_23F5D15E8();
  sub_23F5FAA6C(v18, v19, v20);
  sub_23F3D98EC((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  *v24 = v17;
  sub_23F362870();
}

uint64_t sub_23F5FADD8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a1;
  v21 = a2;
  v2 = sub_23F617D08();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23F61B3EC();
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B92C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F61B404();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - v12;
  sub_23F61A3FC();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v5, *MEMORY[0x24BE56E60], v19);
  sub_23F61A108();
  sub_23F61B3C8();
  v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  v15 = MEMORY[0x24266D900](v14);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v16 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v21, v11, v7);
  result = type metadata accessor for CandidateWithDependencies(0);
  *(_QWORD *)(v16 + *(int *)(result + 20)) = v15;
  return result;
}

uint64_t sub_23F5FAFBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t *v80;

  v80 = a2;
  v68 = sub_23F618284();
  v71 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v70 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F35D2E8(&qword_256E701F0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v66 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v72 = (uint64_t)&v65 - v7;
  v8 = sub_23F61B9EC();
  v76 = *(_QWORD *)(v8 - 8);
  v77 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v65 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v67 = (uint64_t *)((char *)&v65 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v75 = (char *)&v65 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v69 = (char *)&v65 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v73 = (uint64_t *)((char *)&v65 - v17);
  v74 = sub_23F618350();
  v79 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v78 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F6182F0();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F617DD4();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23F618134();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v30, a1, v27);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v30, v27);
  if (v31 == *MEMORY[0x24BE53328])
  {
    (*(void (**)(char *, uint64_t))(v28 + 96))(v30, v27);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v30, v23);
    v32 = (uint64_t)v80;
    sub_23F617DA4();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    v33 = sub_23F61B92C();
    v34 = v32;
LABEL_3:
    v35 = 0;
    return sub_23F36196C(v34, v35, 1, v33);
  }
  v36 = v80;
  if (v31 == *MEMORY[0x24BE532D8] || v31 == *MEMORY[0x24BE532E0] || v31 == *MEMORY[0x24BE532E8])
    goto LABEL_12;
  if (v31 == *MEMORY[0x24BE53300])
  {
    (*(void (**)(char *, uint64_t))(v28 + 96))(v30, v27);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v30, v19);
    sub_23F6182E4();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    v33 = sub_23F61B92C();
    v34 = (uint64_t)v36;
    goto LABEL_3;
  }
  if (v31 != *MEMORY[0x24BE53308])
  {
    if (v31 != *MEMORY[0x24BE532F0] && v31 != *MEMORY[0x24BE53310] && v31 != *MEMORY[0x24BE532D0])
    {
      if (v31 == *MEMORY[0x24BE532F8])
      {
        (*(void (**)(char *, uint64_t))(v28 + 96))(v30, v27);
        v19 = v68;
        v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v71 + 32))(v70, v30, v68);
        v54 = MEMORY[0x24266B788](v53);
        v26 = v66;
        sub_23F36FD38(v54, (uint64_t)v66);
        v28 = sub_23F61B92C();
        if (sub_23F36195C((uint64_t)v26, 1, v28) == 1)
        {
          sub_23F39E4B8((uint64_t)v26, &qword_256E701F0);
          v55 = sub_23F61B9BC();
          v56 = swift_allocBox();
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v57, *MEMORY[0x24BEB9CA8], v55);
          v58 = v67;
          *v67 = v56;
          v60 = v76;
          v59 = v77;
          (*(void (**)(uint64_t *, _QWORD, uint64_t))(v76 + 104))(v58, *MEMORY[0x24BEB9D18], v77);
LABEL_34:
          sub_23F61B6E0();
          v64 = swift_allocBox();
          (*(void (**)(char *, uint64_t *, uint64_t))(v60 + 16))(v75, v58, v59);
          sub_23F617BA0();
          sub_23F61B6BC();
          (*(void (**)(uint64_t *, uint64_t))(v60 + 8))(v58, v59);
          *v36 = v64;
          (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v36, *MEMORY[0x24BEB9988], v28);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v19);
          v34 = (uint64_t)v36;
          v35 = 0;
          v33 = v28;
          return sub_23F36196C(v34, v35, 1, v33);
        }
LABEL_33:
        v63 = v65;
        sub_23F61B8CC();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v26, v28);
        v60 = v76;
        v59 = v77;
        v58 = v67;
        (*(void (**)(uint64_t *, char *, uint64_t))(v76 + 32))(v67, v63, v77);
        goto LABEL_34;
      }
      if (v31 != *MEMORY[0x24BE53320])
      {
        sub_23F61CC58();
        __break(1u);
        goto LABEL_33;
      }
    }
LABEL_12:
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    v33 = sub_23F61B92C();
    v34 = (uint64_t)v36;
    v35 = 1;
    return sub_23F36196C(v34, v35, 1, v33);
  }
  (*(void (**)(char *, uint64_t))(v28 + 96))(v30, v27);
  v40 = v74;
  v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v79 + 32))(v78, v30, v74);
  v42 = MEMORY[0x24266B854](v41);
  v43 = v72;
  sub_23F36FD38(v42, v72);
  v44 = sub_23F61B92C();
  if (sub_23F36195C(v43, 1, v44) == 1)
  {
    sub_23F39E4B8(v43, &qword_256E701F0);
    v45 = sub_23F61B9BC();
    v46 = swift_allocBox();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v47, *MEMORY[0x24BEB9CA8], v45);
    v48 = v73;
    *v73 = v46;
    v50 = v76;
    v49 = v77;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v76 + 104))(v48, *MEMORY[0x24BEB9D18], v77);
  }
  else
  {
    v61 = v69;
    sub_23F61B8CC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
    v50 = v76;
    v49 = v77;
    v48 = v73;
    (*(void (**)(uint64_t *, char *, uint64_t))(v76 + 32))(v73, v61, v77);
  }
  sub_23F61B6E0();
  v62 = swift_allocBox();
  (*(void (**)(char *, uint64_t *, uint64_t))(v50 + 16))(v75, v48, v49);
  sub_23F617BA0();
  sub_23F61B6BC();
  (*(void (**)(uint64_t *, uint64_t))(v50 + 8))(v48, v49);
  *v36 = v62;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v36, *MEMORY[0x24BEB9988], v44);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v40);
  v34 = (uint64_t)v36;
  v35 = 0;
  v33 = v44;
  return sub_23F36196C(v34, v35, 1, v33);
}

uint64_t sub_23F5FB788@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F5FADD8(*(_QWORD *)(v1 + 16), a1);
}

void sub_23F5FB7A4(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_23F5FAC78(*(_QWORD *)(v1 + 16), a1);
}

void sub_23F5FB7C0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23F5F7CC8(a1, a2);
}

uint64_t sub_23F5FB7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CandidateWithDependencies(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5FB82C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CandidateWithDependencies(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F5FB868(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CandidateWithDependencies(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5FB8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E701C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23F5FB8F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F35D2E8(a3);
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23F362928();
}

unint64_t sub_23F5FB92C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E74C70;
  if (!qword_256E74C70)
  {
    v1 = sub_23F35EB74(&qword_256E70F10);
    result = MEMORY[0x242670A44](MEMORY[0x24BE57080], v1);
    atomic_store(result, (unint64_t *)&qword_256E74C70);
  }
  return result;
}

void sub_23F5FB970(uint64_t *a1@<X8>)
{
  sub_23F5FB7A4(a1);
}

uint64_t sub_23F5FB984()
{
  type metadata accessor for CandidateWithDependencies(0);
  return swift_allocObject();
}

void sub_23F5FB9BC(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_23F5FB9CC(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  a1[1] = a2;
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v3 + 16))(*(_QWORD *)(v5 - 232), v4, v2);
}

uint64_t sub_23F5FBA14()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 208) + 96))(v0, *(_QWORD *)(v1 - 200));
}

uint64_t sub_23F5FBA24@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_23F36196C(*(_QWORD *)(a2 - 256), a1, 1, *(_QWORD *)(v2 - 696));
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5FBA50@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, *(_QWORD *)(v2 - 256), *(_QWORD *)(v3 - 696));
}

uint64_t sub_23F5FBA60()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 - 152) + 16))(*(_QWORD *)(v0 - 160), *(_QWORD *)(v0 - 136), *(_QWORD *)(v0 - 144));
}

uint64_t sub_23F5FBA74()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 152) + 8))(v0, *(_QWORD *)(v1 - 144));
}

uint64_t sub_23F5FBA88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_23F36196C(a1, a2, a3, *(_QWORD *)(a4 - 256));
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5FBAA4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36195C(v1, 1, v0);
}

uint64_t sub_23F5FBAC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23F5FAA6C(v1, v2, v0);
}

uint64_t sub_23F5FBAD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t, _QWORD);
  uint64_t v3;

  return v2(*(_QWORD *)(a1 - 256), v1, *(_QWORD *)(v3 - 696));
}

uint64_t sub_23F5FBAEC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23F5FBAFC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36195C(v0, 1, *(_QWORD *)(v1 - 224));
}

uint64_t sub_23F5FBB1C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, *(_QWORD *)(v2 - 256), *(_QWORD *)(v3 - 224));
}

uint64_t sub_23F5FBB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return a4(0);
}

uint64_t sub_23F5FBB40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v2, v0);
}

uint64_t sub_23F5FBB50()
{
  return sub_23F617CD8();
}

uint64_t sub_23F5FBB58()
{
  return sub_23F618CE0();
}

uint64_t sub_23F5FBB68()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 152) + 8))(v0, *(_QWORD *)(v1 - 144));
}

uint64_t sub_23F5FBB88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_23F5FBB9C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 136), *(_QWORD *)(v2 - 144));
}

void sub_23F5FBBA4(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  sub_23F39E4B8(*(_QWORD *)(a2 - 256), a1);
}

uint64_t sub_23F5FBBAC()
{
  return sub_23F61ADF8();
}

uint64_t sub_23F5FBBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(a1, a2, v2);
}

uint64_t sub_23F5FBBC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_23F5FBBD8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F5FBBF4()
{
  return swift_allocBox();
}

uint64_t sub_23F5FBC08()
{
  return sub_23F61CC1C();
}

void sub_23F5FBC1C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_23F5FBC30()
{
  return sub_23F61B8A8();
}

uint64_t sub_23F5FBC44()
{
  return sub_23F61AE10();
}

uint64_t sub_23F5FBC4C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23F5FBC58(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23F5FBC7C()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F5FBC8C()
{
  return swift_slowAlloc();
}

uint64_t sub_23F5FBC9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23F5FAA6C(v2, v0, v1);
}

uint64_t sub_23F5FBCAC()
{
  return sub_23F619094();
}

uint64_t sub_23F5FBCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F36196C(a1, a2, 1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5FBCD4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_23F5FBCF4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 280);
}

void sub_23F5FBD58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = v0;
}

uint64_t sub_23F5FBD64()
{
  return swift_allocBox();
}

uint64_t sub_23F5FBD78@<X0>(uint64_t (*a1)(_QWORD)@<X8>)
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 - 256));
}

uint64_t sub_23F5FBD80@<X0>(uint64_t (*a1)(_QWORD, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(*(_QWORD *)(v1 - 256), *(_QWORD *)(v2 - 136));
}

uint64_t Bool.init(level:)(void *a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a1, sel_levelOneOfCase);
  if ((_DWORD)v2 == 10)
  {
    v3 = sub_23F445504((uint64_t)v2, sel_BOOLeanValue);

  }
  else
  {

    return 2;
  }
  return (uint64_t)v3;
}

uint64_t sub_23F5FBDE0@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = Bool.init(level:)(a1);
  *a2 = result;
  return result;
}

id Int.init(level:)(void *a1)
{
  id v2;
  id v3;
  id v4;

  v2 = objc_msgSend(a1, sel_levelOneOfCase);
  if ((_DWORD)v2 == 13)
  {
    v3 = objc_msgSend(a1, sel_longValue);

  }
  else
  {
    v4 = sub_23F445504((uint64_t)v2, sel_levelOneOfCase);
    if ((_DWORD)v4 == 12)
    {
      LODWORD(v3) = sub_23F445504((uint64_t)v4, sel_intValue);

      return (id)(int)v3;
    }
    else
    {

      return 0;
    }
  }
  return v3;
}

id sub_23F5FBE94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id result;
  char v4;

  result = Int.init(level:)(a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t dispatch thunk of ConvertableFromTrialLevel.init(level:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_23F5FBEC8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23F5FBF40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    sub_23F617BA0();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_23F5FC000(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_23F5FC044(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  sub_23F617BA0();
  v10(v8, v9, v5);
  return a1;
}

_QWORD *sub_23F5FC0B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_23F5FC12C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_23F5FC17C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_23F5FC1E4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_22;
  v10 = ((v8 + 16) & ~v8) + *(_QWORD *)(v5 + 64);
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_22:
      if ((v6 & 0x80000000) != 0)
        return sub_23F36195C((a1 + v8 + 16) & ~v8, v6, v4);
      v16 = *(_QWORD *)(a1 + 8);
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_22;
LABEL_15:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return v7 + v15 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23F5FC2B8 + 4 * byte_23F633090[(v10 - 1)]))();
}

void sub_23F5FC324(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  char v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << v8)) >> v8) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v12 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t type metadata accessor for TrialFactor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F40C13C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TrialFactor);
}

void sub_23F5FC520(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 72);
  v6 = *(_QWORD *)(v5 + 16);
  sub_23F617BA0();
  if (v6)
  {
    v7 = sub_23F3754D4(a1, a2);
    if ((v8 & 1) != 0)
      v9 = *(id *)(*(_QWORD *)(v5 + 56) + 8 * v7);
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_23F383F28();
}

uint64_t sub_23F5FC5A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;

  v1 = v0[7];
  v2 = v0[8];
  sub_23F35EA9C(v0 + 4, v1);
  v3 = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v2 + 8))(v0[2], v0[3], v1, v2);
  sub_23F3C2EA0(0, &qword_256E78D28);
  v4 = (_QWORD *)sub_23F61BFEC();
  if (!(v3 >> 62))
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_23F617BA0();
    if (v5)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v4;
  }
LABEL_27:
  swift_bridgeObjectRetain_n();
  v5 = sub_23F61CA6C();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_23;
LABEL_3:
  v6 = v3 & 0xC000000000000001;
  v7 = 4;
  v30 = v5;
  v31 = v3;
  v29 = v3 & 0xC000000000000001;
  while (1)
  {
    if (v6)
      v8 = (id)MEMORY[0x24266FE14](v7 - 4, v3);
    else
      v8 = *(id *)(v3 + 8 * v7);
    v9 = v8;
    v10 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v11 = sub_23F5FD410((uint64_t)v8, sel_factor);
    if (!v11)
      break;
    v12 = sub_23F5FD394(v11);
    if (v13)
    {
      v14 = v12;
      v15 = v13;
      v16 = sub_23F5FD410(v12, sel_level);
      if (v16)
      {
        v32 = v16;
        swift_isUniquelyReferenced_nonNull_native();
        v17 = sub_23F3754D4(v14, v15);
        if (__OFADD__(v4[2], (v18 & 1) == 0))
          goto LABEL_25;
        v3 = v17;
        v19 = v18;
        sub_23F35D2E8(&qword_256E7F478);
        if ((sub_23F61CA18() & 1) != 0)
        {
          v20 = sub_23F3754D4(v14, v15);
          if ((v19 & 1) != (v21 & 1))
            goto LABEL_30;
          v3 = v20;
        }
        if ((v19 & 1) != 0)
        {
          v22 = v4[7];
          v23 = *(void **)(v22 + 8 * v3);
          *(_QWORD *)(v22 + 8 * v3) = v32;

        }
        else
        {
          v4[(v3 >> 6) + 8] |= 1 << v3;
          v24 = (uint64_t *)(v4[6] + 16 * v3);
          *v24 = v14;
          v24[1] = v15;
          *(_QWORD *)(v4[7] + 8 * v3) = v32;
          v25 = v4[2];
          v26 = __OFADD__(v25, 1);
          v27 = v25 + 1;
          if (v26)
            goto LABEL_26;
          v4[2] = v27;
          sub_23F617BA0();
        }

        sub_23F384120();
        swift_bridgeObjectRelease();
        v5 = v30;
        v3 = v31;
        v6 = v29;
      }
      else
      {

        sub_23F384120();
      }
    }
    else
    {

    }
    ++v7;
    if (v10 == v5)
      goto LABEL_23;
  }
  __break(1u);
LABEL_30:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

void sub_23F5FC87C(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v2 = v1;
  v4 = v1[7];
  v5 = v1[8];
  v25 = v1 + 4;
  sub_23F35EA9C(v1 + 4, v4);
  v6 = v1[2];
  v7 = v1[3];
  v8 = (void *)(*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v5 + 24))(v2[2], v2[3], v4, v5);
  v9 = v8;
  if (v8)
  {
    v24 = (int)objc_msgSend(v8, sel_deploymentId);
    sub_23F362CDC();
    v10 = objc_msgSend(v9, sel_experimentId);
    v11 = sub_23F61C10C();
    v22 = v12;
    v23 = v11;

    v13 = objc_msgSend(v9, sel_treatmentId);
    v14 = sub_23F61C10C();
    v16 = v15;

    v17 = v9;
  }
  else
  {
    sub_23F362CDC();
    v17 = 0;
    v14 = 0;
    v16 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
  }
  v18 = v9 == 0;
  v19 = v2[7];
  v20 = v2[8];
  sub_23F35EA9C(v25, v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 32))(v6, v7, v19, v20);

  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 24) = v22;
  *(_QWORD *)(a1 + 32) = v14;
  *(_QWORD *)(a1 + 40) = v16;
  *(_QWORD *)(a1 + 48) = v24;
  *(_BYTE *)(a1 + 56) = v18;
  *(_DWORD *)(a1 + 60) = v21;
}

uint64_t sub_23F5FC9F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31[2];
  uint64_t v32;
  unint64_t v33;

  v2 = sub_23F619E98();
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v29 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = 0;
  v33 = 0xE000000000000000;
  sub_23F61C8E0();
  sub_23F61C280();
  sub_23F617BA0();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  v31[0] = *(_QWORD *)(a1 + 16);
  sub_23F61CC1C();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = sub_23F362CDC();
  v10 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * i);
    v31[0] = 34;
    v31[1] = 0xE100000000000000;
    sub_23F617BA0();
    v17 = v16;
    sub_23F5FD400();
    swift_bridgeObjectRelease();
    v18 = sub_23F61C280();
    v19 = sub_23F5FD410(v18, sel_description);
    sub_23F61C10C();

    sub_23F5FD400();
    swift_bridgeObjectRelease();
    sub_23F61C280();
    sub_23F61C280();

    result = sub_23F384120();
    if (v7)
      goto LABEL_4;
LABEL_5:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    if (v13 >= v8)
      goto LABEL_21;
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_21;
      v14 = *(_QWORD *)(v4 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          goto LABEL_21;
        v14 = *(_QWORD *)(v4 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 < v8)
  {
    v14 = *(_QWORD *)(v4 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v10 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_25;
        if (v10 >= v8)
          goto LABEL_21;
        v14 = *(_QWORD *)(v4 + 8 * v10);
        ++v15;
        if (v14)
          goto LABEL_18;
      }
    }
    v10 = v15;
    goto LABEL_18;
  }
LABEL_21:
  swift_release();
  v20 = v29;
  sub_23F619154();
  v22 = v32;
  v21 = v33;
  sub_23F362CDC();
  v23 = sub_23F619E8C();
  v24 = sub_23F61C61C();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v31[0] = swift_slowAlloc();
    *(_DWORD *)v25 = 136315138;
    sub_23F362CDC();
    sub_23F37AE00(v22, v21, v31);
    v30 = v26;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23F35A000, v23, v24, "%s", v25, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }

  swift_bridgeObjectRelease_n();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v20, v28);
}

void sub_23F5FCDE8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  sub_23F3C2EA0(0, &qword_256E78D28);
  *(_QWORD *)(v2 + 72) = sub_23F61BFEC();
  v4 = 0x800000023F63BFC0;
  if ((a1 & 1) == 0)
    v4 = 0x800000023F634490;
  *(_OWORD *)(v2 + 80) = xmmword_23F620FD0;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_QWORD *)(v2 + 16) = 0xD000000000000021;
  *(_QWORD *)(v2 + 24) = v4;
  v5 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 336);
  v6 = sub_23F3C2EA0(0, &qword_256E78D20);
  *(_QWORD *)(v2 + 56) = v6;
  *(_QWORD *)(v2 + 64) = &off_250FE0EF0;
  *(_QWORD *)(v2 + 32) = v5;
  sub_23F35EA9C((_QWORD *)(v2 + 32), v6);
  sub_23F5FD058();
  v7 = sub_23F5FC5A4();
  swift_beginAccess();
  *(_QWORD *)(v2 + 72) = v7;
  swift_bridgeObjectRelease();
  v8 = sub_23F617BA0();
  sub_23F5FC9F0(v8);
  swift_bridgeObjectRelease();
  sub_23F383F28();
}

uint64_t sub_23F5FCF44()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 32);
  swift_bridgeObjectRelease();
  sub_23F497930(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  return v0;
}

uint64_t sub_23F5FCF84()
{
  sub_23F5FCF44();
  return swift_deallocClassInstance();
}

uint64_t sub_23F5FCFA4()
{
  return sub_23F5FCFC4();
}

uint64_t sub_23F5FCFC4()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;

  v1 = (void *)sub_23F61C0E8();
  v2 = objc_msgSend(v0, sel_factorLevelsWithNamespaceName_, v1);

  sub_23F3C2EA0(0, &qword_256E7F470);
  v3 = sub_23F61C3DC();

  return v3;
}

id sub_23F5FD038()
{
  return sub_23F5FD058();
}

id sub_23F5FD058()
{
  void *v0;

  return objc_msgSend(v0, sel_refresh);
}

id sub_23F5FD068()
{
  return sub_23F5FD088();
}

id sub_23F5FD088()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_23F61C0E8();
  v2 = objc_msgSend(v0, sel_experimentIdentifiersWithNamespaceName_, v1);

  return v2;
}

id sub_23F5FD0D0()
{
  return sub_23F5FD354();
}

uint64_t type metadata accessor for TrialManager()
{
  return objc_opt_self();
}

uint64_t initializeWithCopy for TrialEnrollment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for TrialEnrollment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  return a1;
}

uint64_t assignWithTake for TrialEnrollment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrialEnrollment(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrialEnrollment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialEnrollment()
{
  return &type metadata for TrialEnrollment;
}

id sub_23F5FD354()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_23F61C0E8();
  v2 = objc_msgSend(v0, sel_compatibilityVersionWithNamespaceName_, v1);

  return v2;
}

uint64_t sub_23F5FD394(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_name);

  if (!v2)
    return 0;
  v3 = sub_23F61C10C();

  return v3;
}

uint64_t sub_23F5FD400()
{
  return sub_23F61C280();
}

id sub_23F5FD410(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

_QWORD *sub_23F5FD418(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v18;
  _QWORD *v19;

  v6 = v5;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v11 = &v19;
    sub_23F61C964();
    v12 = *(_QWORD *)(sub_23F618B78() - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v14 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_23F5FEF60(a2, a3, a4, a5, &v18);
      if (v6)
        break;
      v6 = 0;
      sub_23F61C94C();
      sub_23F61C970();
      sub_23F61C97C();
      v11 = &v19;
      sub_23F61C958();
      v13 += v14;
      if (!--v8)
      {
        v11 = v19;
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_7:
    swift_bridgeObjectRelease();
  }
  return v11;
}

void sub_23F5FD568(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *, uint64_t, uint64_t);
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  char v56;
  id v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  char v74;
  char v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  char v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  char v85;
  void *v86;
  id v87;
  id v88;
  id v89;
  char v90;
  void *v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  uint64_t v98;
  unsigned __int8 v99;
  int v100;
  void *v101;
  id v102;
  id v103;
  id v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  id v118;
  id v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  id v134;
  id v135;
  id v136;
  uint64_t v137;
  void *v138;
  id v139;
  id v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  id v150;
  id v151;
  id v152;
  unint64_t v153;
  uint64_t v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;

  v175 = a2;
  v3 = sub_23F617000();
  v171 = *(_QWORD *)(v3 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F36285C();
  v170 = v5;
  sub_23F35D2E8(&qword_256E70F08);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3834D0();
  v172 = v7;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v154 - v9;
  sub_23F35D2E8(&qword_256E7F480);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  v161 = v12;
  v162 = sub_23F618E24();
  v157 = *(_QWORD *)(v162 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v156 = v14;
  sub_23F35D2E8(&qword_256E7F488);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v17);
  v159 = (char *)&v154 - v18;
  sub_23F35D2E8(&qword_256E719D0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v154 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23F618E54();
  v166 = *(_QWORD *)(v22 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F36285C();
  v180 = v24;
  v25 = sub_23F619E98();
  v173 = *(_QWORD *)(v25 - 8);
  v174 = v25;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v154 - v28;
  v30 = sub_23F61B9EC();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  sub_23F3834D0();
  v165 = v32;
  MEMORY[0x24BDAC7A8](v33);
  v35 = (uint64_t *)((char *)&v154 - v34);
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = 0xD000000000000028;
  *(_QWORD *)(v36 + 24) = 0x800000023F63BD10;
  strcpy((char *)(v36 + 32), "SearchContext");
  *(_WORD *)(v36 + 46) = -4864;
  *v35 = v36;
  v37 = *MEMORY[0x24BEB9CF8];
  v167 = v35;
  v168 = v31;
  v38 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v31 + 104);
  v169 = v30;
  v38(v35, v37, v30);
  v184 = MEMORY[0x24BEE4AF8];
  v178 = a1;
  v181 = sub_23F61B14C();
  v39 = sub_23F35D2E8(&qword_256E70F10);
  v176 = sub_23F3E29D8();
  v177 = v39;
  v40 = (void *)sub_23F61ACCC();
  swift_bridgeObjectRelease();
  v179 = v10;
  if (v40)
  {
    v41 = objc_msgSend(v40, sel_location);
    if (v41)
    {
      v42 = v41;
      v164 = v22;
      v163 = v3;
      objc_msgSend(v41, sel_coordinate);
      v43 = MEMORY[0x24BEE13C8];
      v183 = MEMORY[0x24BEE13C8];
      v181 = v44;
      v45 = (void *)sub_23F600054();
      v46 = objc_msgSend(v45, sel_doubleValueType);
      v47 = (id)0x24BE5F000;
      v48 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
      sub_23F600038();
      v49 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
      v155 = sub_23F6000A0(0x656475746974616CLL, 0xE800000000000000);
      objc_msgSend(v42, sel_coordinate);
      v183 = v43;
      v181 = v50;
      v51 = objc_msgSend(v45, sel_doubleValueType);
      v52 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
      sub_23F600038();
      v53 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
      v54 = sub_23F6000A0(0x64757469676E6F6CLL, 0xE900000000000065);
      if (MEMORY[0x24BEE4AF8] >> 62)
      {
        sub_23F617BA0();
        v55 = sub_23F61CA6C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v55 = *(_QWORD *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v22 = v164;
      if (__OFADD__(v55, 2))
      {
        __break(1u);
      }
      else
      {
        sub_23F5FFF18(v55 + 2, 1);
        sub_23F61C3F4();
        v47 = v155;
        MEMORY[0x24266F8D4]();
        sub_23F6000D8();
        if (!v56)
        {
LABEL_7:
          sub_23F61C424();
          sub_23F61C3F4();
          v57 = v54;
          MEMORY[0x24266F8D4]();
          sub_23F6000D8();
          if (v56)
            sub_23F4A0E38();
          sub_23F61C424();
          sub_23F61C3F4();

          v58 = (uint64_t)v179;
          v3 = v163;
          goto LABEL_14;
        }
      }
      sub_23F4A0E38();
      goto LABEL_7;
    }

    v10 = v179;
  }
  v58 = (uint64_t)v10;
  sub_23F619094();
  v59 = sub_23F619E8C();
  v60 = sub_23F61C628();
  if (sub_23F40B304(v60))
  {
    v61 = (uint8_t *)sub_23F3EEE70();
    *(_WORD *)v61 = 0;
    _os_log_impl(&dword_23F35A000, v59, (os_log_type_t)v29, "Not setting location in SearchContext due to missing placemark context", v61, 2u);
    sub_23F366530();
  }

  (*(void (**)(char *, uint64_t))(v173 + 8))(v29, v174);
LABEL_14:
  v62 = sub_23F61B14C();
  v181 = v62;
  sub_23F61ACF0();
  sub_23F362D18();
  if (sub_23F36195C((uint64_t)v21, 1, v22) != 1)
  {
    v163 = v3;
    (*(void (**)(void))(v166 + 32))();
    v68 = sub_23F618D94();
    v69 = MEMORY[0x24BEE1328];
    if (v68 != 2)
    {
      v70 = (void *)sub_23F600024(v68);
      v71 = sub_23F60005C(v70);
      v72 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
      sub_23F5FFFFC();
      v73 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
      sub_23F60004C(0x7246736579457369, 0xEA00000000006565);
      sub_23F600018();
    }
    sub_23F618DAC();
    sub_23F6000C0();
    if (!v75)
    {
      v76 = (void *)sub_23F600024(v74);
      v77 = sub_23F60005C(v76);
      v78 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
      sub_23F5FFFFC();
      v79 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
      sub_23F60004C(0x5569746C754D7369, 0xEB00000000726573);
      sub_23F600018();
    }
    sub_23F618E00();
    sub_23F6000C0();
    if (!v75)
    {
      v81 = (void *)sub_23F600024(v80);
      v82 = sub_23F60005C(v81);
      v83 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
      sub_23F5FFFFC();
      v84 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
      sub_23F60004C(0xD000000000000015, 0x800000023F63C0C0);
      sub_23F600018();
    }
    sub_23F618DE8();
    sub_23F6000C0();
    if (!v75)
    {
      v86 = (void *)sub_23F600024(v85);
      v87 = sub_23F60005C(v86);
      v88 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
      sub_23F5FFFFC();
      v89 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
      sub_23F60004C(0xD000000000000015, 0x800000023F63C0A0);
      sub_23F600018();
    }
    sub_23F618DF4();
    sub_23F6000C0();
    if (!v75)
    {
      v91 = (void *)sub_23F600024(v90);
      v92 = sub_23F60005C(v91);
      v93 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
      sub_23F5FFFFC();
      v94 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
      sub_23F60004C(0xD000000000000015, 0x800000023F63C080);
      sub_23F600018();
    }
    v164 = v22;
    sub_23F600080();
    v95 = sub_23F618E48();
    v96 = sub_23F600064(v62);
    if (v75)
    {
      sub_23F600098(v96, &qword_256E7F488);
    }
    else
    {
      v97 = sub_23F618E0C();
      v98 = v62;
      v99 = v97;
      v100 = v97;
      sub_23F383D74(v98, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 8));
      if (v100 != 2)
      {
        v183 = v69;
        LOBYTE(v181) = v99 & 1;
        v101 = (void *)sub_23F600054();
        v102 = sub_23F60005C(v101);
        v103 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
        sub_23F5FFFFC();
        v104 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
        v105 = sub_23F6000AC();
        sub_23F60004C(v105, 0x800000023F63C060);
        sub_23F600018();
      }
    }
    v106 = v160;
    sub_23F618DD0();
    sub_23F600064(v106);
    if (v75)
    {
      sub_23F3CFCB0(v106, &qword_256E7F488);
      v107 = v161;
      v109 = sub_23F36196C(v161, 1, 1, v162);
    }
    else
    {
      v107 = v161;
      sub_23F618E30();
      sub_23F383D74(v106, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 8));
      v108 = v162;
      v109 = sub_23F36195C(v107, 1, v162);
      if ((_DWORD)v109 != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v157 + 32))(v156, v107, v108);
        v110 = sub_23F618E18();
        v183 = MEMORY[0x24BEE1768];
        v181 = v110;
        v111 = objc_msgSend((id)sub_23F600054(), sel_intValueType);
        v112 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
        sub_23F5FFFFC();
        v113 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
        sub_23F60004C(0xD00000000000001FLL, 0x800000023F63C040);
        sub_23F600018();
      }
    }
    sub_23F600098(v109, &qword_256E7F480);
    v114 = sub_23F618DC4();
    v116 = MEMORY[0x24BEE0D00];
    if (v115)
    {
      v183 = MEMORY[0x24BEE0D00];
      v181 = v114;
      v182 = v115;
      v117 = (void *)sub_23F600054();
      v118 = sub_23F600090(v117);
      v119 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
      sub_23F5FFFFC();
      v120 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
      sub_23F60004C(0x65736E6F70736572, 0xEC00000065646F4DLL);
      sub_23F600018();
    }
    v121 = sub_23F618DA0();
    if (v122)
    {
      v183 = v116;
      v181 = v121;
      v182 = v122;
      v123 = (void *)sub_23F600054();
      v124 = sub_23F600090(v123);
      v125 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
      sub_23F5FFFFC();
      v126 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
      sub_23F60004C(0x69724F7475706E69, 0xEF656D614E6E6967);
      sub_23F600018();
    }
    sub_23F600080();
    v127 = sub_23F600064(v107);
    if (v75)
    {
      v132 = sub_23F600098(v127, &qword_256E7F488);
    }
    else
    {
      v128 = v107;
      v129 = sub_23F618E3C();
      v131 = v130;
      v132 = sub_23F383D74(v128, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 8));
      if (v131)
      {
        v183 = v116;
        v181 = v129;
        v182 = v131;
        v133 = (void *)objc_opt_self();
        v134 = sub_23F600090(v133);
        v135 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
        sub_23F5FFFFC();
        v136 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
        sub_23F60004C(0x7355646572616873, 0xEC00000064497265);
        sub_23F600018();
      }
    }
    v137 = MEMORY[0x24266C2C8](v132);
    v183 = sub_23F35D2E8(&qword_256E70580);
    v181 = v137;
    v138 = (void *)objc_opt_self();
    v139 = sub_23F600090(v138);
    sub_23F6000CC(objc_allocWithZone(MEMORY[0x24BE5FBE8]));

    v140 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
    sub_23F600038();
    v141 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
    sub_23F60004C(0x4D6E496567726162, 0xEC0000007365646FLL);
    sub_23F600018();
  }
  sub_23F3CFCB0((uint64_t)v21, &qword_256E719D0);
  v63 = v158;
  sub_23F619094();
  v64 = sub_23F619E8C();
  v65 = sub_23F61C628();
  if (sub_23F40B304(v65))
  {
    v66 = (uint8_t *)sub_23F3EEE70();
    *(_WORD *)v66 = 0;
    _os_log_impl(&dword_23F35A000, v64, (os_log_type_t)v63, "Not setting Siri request info in SearchContext due to missing Siri request context", v66, 2u);
    sub_23F366530();
  }

  (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v63, v174);
  v67 = v172;
  v181 = sub_23F61B14C();
  sub_23F61AD08();
  sub_23F362D18();
  sub_23F4A4720(v58, v67);
  v142 = sub_23F61AAD4();
  if (sub_23F36195C(v67, 1, v142) == 1)
  {
    sub_23F3CFCB0(v67, &qword_256E70F08);
  }
  else
  {
    v143 = MEMORY[0x24266DFD8]();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 8))(v67, v142);
    v181 = MEMORY[0x24BEE4AF8];
    v144 = *(_QWORD *)(v143 + 16);
    if (v144)
    {
      v145 = *(_QWORD *)(sub_23F618D88() - 8);
      v146 = v143 + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
      v147 = *(_QWORD *)(v145 + 72);
      sub_23F617BA0();
      do
      {
        v148 = sub_23F5FE770();
        sub_23F38746C((unint64_t)v148);
        v146 += v147;
        --v144;
      }
      while (v144);
      swift_bridgeObjectRelease_n();
      v149 = v181;
LABEL_57:
      v183 = sub_23F35D2E8(&qword_256E705C8);
      v181 = v149;
      sub_23F3C2EA0(0, &qword_256E7F490);
      v150 = sub_23F5FFC84(0x614D797469746E45, 0xEB00000000686374, (SEL *)&selRef_initWithIdentifier_);
      sub_23F6000CC(objc_allocWithZone(MEMORY[0x24BE5FBE8]));

      v151 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
      sub_23F600038();
      v152 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
      v153 = sub_23F6000AC();
      sub_23F60004C(v153, 0x800000023F63C020);
      sub_23F600018();
    }
    sub_23F362D18();
  }
  v149 = MEMORY[0x24BEE4AF8];
  goto LABEL_57;
}

uint64_t sub_23F5FE744()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_23F5FE770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  char *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint8_t *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v56 = sub_23F619E98();
  v0 = *(_QWORD *)(v56 - 8);
  v1 = MEMORY[0x24BDAC7A8](v56);
  v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v51 - v4;
  v6 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61B92C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v51 - v14;
  sub_23F618D64();
  if (sub_23F36195C((uint64_t)v8, 1, v9) == 1)
  {
    v16 = v0;
    sub_23F3CFCB0((uint64_t)v8, &qword_256E701F0);
    sub_23F619094();
    v17 = sub_23F619E8C();
    v18 = sub_23F61C640();
    v19 = os_log_type_enabled(v17, v18);
    v20 = v3;
    v21 = v56;
    if (v19)
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_23F35A000, v17, v18, "Skipping SpanMatchedEntity since there's no attached TypedValue", v22, 2u);
      MEMORY[0x242670B70](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v21);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v54 = v13;
  v55 = v0;
  v23 = v10;
  v24 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v25 = v9;
  v24(v15, v8, v9);
  v26 = sub_23F5FEBA4();
  if (!v27)
  {
    sub_23F619094();
    v36 = v54;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v54, v15, v9);
    v37 = sub_23F619E8C();
    v38 = sub_23F61C640();
    v39 = os_log_type_enabled(v37, v38);
    v40 = v56;
    v41 = v15;
    v42 = v36;
    if (v39)
    {
      v52 = v41;
      v43 = swift_slowAlloc();
      v53 = v5;
      v44 = (uint8_t *)v43;
      v45 = swift_slowAlloc();
      v58 = v45;
      *(_DWORD *)v44 = 136315138;
      v51 = v44 + 4;
      v46 = sub_23F61B8F0();
      sub_23F37AE00(v46, v47, &v58);
      v57 = v48;
      sub_23F61C790();
      v41 = v52;
      swift_bridgeObjectRelease();
      v49 = *(void (**)(char *, uint64_t))(v23 + 8);
      v49(v42, v25);
      _os_log_impl(&dword_23F35A000, v37, v38, "Skipping SpanMatchedEntity since the typedValue is not an entity: %s", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v45, -1, -1);
      MEMORY[0x242670B70](v44, -1, -1);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v53, v40);
    }
    else
    {
      v49 = *(void (**)(char *, uint64_t))(v23 + 8);
      v49(v42, v9);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v5, v40);
    }
    v49(v41, v25);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v30 = v26;
  v31 = v27;
  v32 = v28;
  v33 = v29;
  v34 = sub_23F618D70();
  sub_23F617BA0();
  sub_23F617BA0();
  v35 = sub_23F5FD418(v34, v30, v31, v32, v33);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_23F5FEBA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unsigned int (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v1 = v0;
  v2 = sub_23F61B740();
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v34 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F61B9EC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - v8;
  v10 = sub_23F61B92C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v32 - v15;
  v39 = sub_23F61B7AC();
  v17 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v38 = v1;
  v37(v16, v1, v10);
  v20 = *(unsigned int (**)(char *, uint64_t))(v11 + 88);
  if (v20(v16, v10) == *MEMORY[0x24BEB99E0])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v16, v10);
    v21 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v21, v39);
    v22 = swift_release();
    MEMORY[0x24266ECB0](v22);
    if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v9, v4) == *MEMORY[0x24BEB9CF8])
    {
      (*(void (**)(char *, uint64_t))(v5 + 96))(v9, v4);
      sub_23F617BA0();
      swift_release();
      v23 = sub_23F61B6EC();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v39);
      return v23;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v39);
    v39 = v5;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
  else
  {
    v39 = v5;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  v37(v14, v38, v10);
  if (v20(v14, v10) == *MEMORY[0x24BEB99B0])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v14, v10);
    v24 = swift_projectBox();
    v25 = v34;
    v26 = v35;
    v27 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v34, v24, v36);
    v28 = swift_release();
    v29 = v33;
    MEMORY[0x24266EC44](v28);
    v30 = v39;
    if ((*(unsigned int (**)(char *, uint64_t))(v39 + 88))(v29, v4) == *MEMORY[0x24BEB9CF8])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v29, v4);
      sub_23F617BA0();
      swift_release();
      v23 = sub_23F61B6EC();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
      return v23;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  return 0;
}

void sub_23F5FEF60(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  int v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  char *v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  id v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  id v91;
  uint64_t v92;

  v84 = a4;
  v81 = a1;
  v82 = a3;
  v89 = a5;
  v6 = sub_23F617000();
  v87 = *(_QWORD *)(v6 - 8);
  v88 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v86 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F618CBC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F618D58();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F618B24();
  v16 = sub_23F618D4C();
  v92 = MEMORY[0x24BEE0D00];
  v90 = v16;
  v91 = v17;
  sub_23F3C2EA0(0, &qword_256E7F498);
  v18 = sub_23F5FFC84(0xD000000000000011, 0x800000023F63C0E0, (SEL *)&selRef_initWithEnumerationIdentifier_);
  v19 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v83 = sub_23F5FFCF4(&v90, v18);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_23F618B3C();
  v85 = sub_23F5FF748();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_23F35D2E8(&qword_256E70E48);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_23F6331A0;
  v21 = MEMORY[0x24BEE0D00];
  v92 = MEMORY[0x24BEE0D00];
  v90 = v81;
  v91 = a2;
  v22 = (void *)objc_opt_self();
  sub_23F617BA0();
  v23 = objc_msgSend(v22, sel_stringValueType);
  v24 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v25 = sub_23F5FFCF4(&v90, v23);
  v26 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
  *(_QWORD *)(v20 + 32) = sub_23F5FFD68(0x6449797469746E65, 0xE800000000000000, v25);
  v92 = v21;
  v90 = v82;
  v91 = v84;
  sub_23F617BA0();
  v27 = objc_msgSend(v22, sel_stringValueType);
  v28 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v29 = sub_23F5FFCF4(&v90, v27);
  v30 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
  *(_QWORD *)(v20 + 40) = sub_23F5FFD68(0x7954797469746E65, 0xEA00000000006570, v29);
  v31 = sub_23F618AF4();
  v92 = v21;
  v90 = v31;
  v91 = v32;
  v33 = objc_msgSend(v22, sel_stringValueType);
  v34 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v35 = sub_23F5FFCF4(&v90, v33);
  v36 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
  *(_QWORD *)(v20 + 48) = sub_23F5FFD68(0x614E797469746E65, 0xEA0000000000656DLL, v35);
  v37 = sub_23F618B30();
  v92 = v21;
  v90 = v37;
  v91 = v38;
  v39 = objc_msgSend(v22, sel_stringValueType);
  v40 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v41 = sub_23F5FFCF4(&v90, v39);
  v42 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
  *(_QWORD *)(v20 + 56) = sub_23F5FFD68(0xD000000000000014, 0x800000023F63C100, v41);
  v43 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
  v44 = v83;
  v84 = v83;
  *(_QWORD *)(v20 + 64) = sub_23F5FFD68(0x547265686374616DLL, 0xEB00000000657079, v44);
  sub_23F618B0C();
  v92 = MEMORY[0x24BEE14E8];
  LODWORD(v90) = v45;
  v46 = objc_msgSend(v22, sel_doubleValueType);
  v47 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v48 = sub_23F5FFCF4(&v90, v46);
  v49 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
  *(_QWORD *)(v20 + 72) = sub_23F5FFD68(0x6F6353686374616DLL, 0xEA00000000006572, v48);
  v50 = sub_23F618B48();
  v92 = v21;
  v90 = v50;
  v91 = v51;
  v52 = objc_msgSend(v22, sel_stringValueType);
  v53 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v54 = sub_23F5FFCF4(&v90, v52);
  v55 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
  *(_QWORD *)(v20 + 80) = sub_23F5FFD68(0xD000000000000011, 0x800000023F63C120, v54);
  v56 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
  v57 = v85;
  v58 = v85;
  *(_QWORD *)(v20 + 88) = sub_23F5FFD68(0x6F7250686374616DLL, 0xEF73656974726570, v57);
  v59 = sub_23F618B18();
  v60 = MEMORY[0x24BEE1768];
  v92 = MEMORY[0x24BEE1768];
  v90 = v59;
  v61 = objc_msgSend(v22, sel_intValueType);
  v62 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v63 = sub_23F5FFCF4(&v90, v61);
  v64 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
  *(_QWORD *)(v20 + 96) = sub_23F5FFD68(0x646E497472617473, 0xEA00000000007865, v63);
  v65 = sub_23F618B6C();
  v92 = v60;
  v90 = v65;
  v66 = objc_msgSend(v22, sel_intValueType);
  v67 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v68 = sub_23F5FFCF4(&v90, v66);
  v69 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
  *(_QWORD *)(v20 + 104) = sub_23F5FFD68(0x7865646E49646E65, 0xE800000000000000, v68);
  v90 = v20;
  sub_23F61C3F4();
  v70 = v90;
  v71 = v86;
  sub_23F616FF4();
  sub_23F616FDC();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v71, v88);
  v72 = objc_allocWithZone(MEMORY[0x24BE5FC68]);
  v73 = sub_23F5FFDC8();
  v74 = objc_allocWithZone(MEMORY[0x24BE5FC60]);
  v75 = sub_23F5FFE4C(1, v73, v70, 0, 0);
  v92 = sub_23F3C2EA0(0, &qword_256E7F4A0);
  v90 = (uint64_t)v75;
  sub_23F3C2EA0(0, &qword_256E7F490);
  v76 = v75;
  v77 = sub_23F5FFC84(0x614D797469746E45, 0xEB00000000686374, (SEL *)&selRef_initWithIdentifier_);
  v78 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v79 = sub_23F5FFCF4(&v90, v77);

  *v89 = v79;
}

id sub_23F5FF748()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  char v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  int v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;

  v0 = sub_23F617000();
  v39 = *(_QWORD *)(v0 - 8);
  v40 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F35D2E8(&qword_256E7F4A8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F618AB8();
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BEE4AF8];
  v9 = sub_23F618C98();
  v10 = MEMORY[0x24BEE1768];
  if ((v11 & 1) == 0)
  {
    v42 = MEMORY[0x24BEE1768];
    v41[0] = v9;
    v12 = objc_msgSend((id)objc_opt_self(), sel_intValueType);
    v13 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
    v14 = sub_23F5FFCF4(v41, v12);
    v15 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
    sub_23F5FFD68(0x6E656B6F5478616DLL, 0xED0000746E756F43, v14);
    MEMORY[0x24266F8D4]();
    if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23F61C400();
    sub_23F61C424();
    sub_23F61C3F4();
  }
  v16 = sub_23F618CB0();
  if ((v17 & 1) == 0)
  {
    v42 = v10;
    v41[0] = v16;
    v18 = objc_msgSend((id)objc_opt_self(), sel_intValueType);
    v19 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
    v20 = sub_23F5FFCF4(v41, v18);
    v21 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
    sub_23F5FFD68(0xD000000000000011, 0x800000023F63C160, v20);
    MEMORY[0x24266F8D4]();
    if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23F61C400();
    sub_23F61C424();
    sub_23F61C3F4();
  }
  sub_23F618CA4();
  if (sub_23F36195C((uint64_t)v5, 1, v6) == 1)
  {
    sub_23F3CFCB0((uint64_t)v5, &qword_256E7F4A8);
  }
  else
  {
    v22 = v38;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v8, v5, v6);
    v23 = sub_23F618AAC();
    v42 = MEMORY[0x24BEE44F0];
    LODWORD(v41[0]) = v23;
    v24 = objc_msgSend((id)objc_opt_self(), sel_intValueType);
    v25 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
    v26 = sub_23F5FFCF4(v41, v24);
    v27 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
    sub_23F5FFD68(0xD000000000000011, 0x800000023F63C140, v26);
    MEMORY[0x24266F8D4]();
    if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23F61C400();
    sub_23F61C424();
    sub_23F61C3F4();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  }
  sub_23F616FF4();
  sub_23F616FDC();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v2, v40);
  v28 = objc_allocWithZone(MEMORY[0x24BE5FC68]);
  v29 = sub_23F5FFDC8();
  v30 = v43;
  v31 = objc_allocWithZone(MEMORY[0x24BE5FC60]);
  v32 = sub_23F5FFE4C(1, v29, v30, 0, 0);
  v42 = sub_23F3C2EA0(0, &qword_256E7F4A0);
  v41[0] = v32;
  sub_23F3C2EA0(0, &qword_256E7F490);
  v33 = v32;
  v34 = sub_23F5FFC84(0x6F7250686374614DLL, 0xEF73656974726570, (SEL *)&selRef_initWithIdentifier_);
  v35 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v36 = sub_23F5FFCF4(v41, v34);

  return v36;
}

id sub_23F5FFC84(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, *a3, v5);

  return v6;
}

id sub_23F5FFCF4(_QWORD *a1, void *a2)
{
  void *v2;
  id v5;

  sub_23F35EA9C(a1, a1[3]);
  v5 = objc_msgSend(v2, sel_initWithValue_valueType_, sub_23F61CC4C(), a2);
  swift_unknownObjectRelease();

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
  return v5;
}

id sub_23F5FFD68(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;
  id v6;

  v5 = (void *)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithIdentifier_value_, v5, a3);

  return v6;
}

id sub_23F5FFDC8()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_initWithTypeIdentifier_instanceIdentifier_, v1, v2);

  return v3;
}

id sub_23F5FFE4C(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v9;
  void *v10;
  id v11;

  sub_23F3C2EA0(0, &qword_256E7F4B0);
  v9 = (void *)sub_23F61C3D0();
  swift_bridgeObjectRelease();
  if (a5)
  {
    v10 = (void *)sub_23F61C0E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(v5, sel_initWithTransient_identifier_properties_managedAccountIdentifier_, a1 & 1, a2, v9, v10);

  return v11;
}

uint64_t sub_23F5FFF18(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    sub_23F617BA0();
    v8 = sub_23F61CA6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x24266FE20](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t sub_23F5FFFD4()
{
  return sub_23F61C400();
}

id sub_23F5FFFFC()
{
  void *v0;
  uint64_t v1;

  return sub_23F5FFCF4((_QWORD *)(v1 - 128), v0);
}

uint64_t sub_23F60000C()
{
  return sub_23F61C424();
}

void sub_23F600018()
{
  JUMPOUT(0x24266F8D4);
}

uint64_t sub_23F600024(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = v1;
  *(_BYTE *)(v2 - 128) = a1 & 1;
  return objc_opt_self();
}

id sub_23F600038()
{
  void *v0;
  uint64_t v1;

  return sub_23F5FFCF4((_QWORD *)(v1 - 128), v0);
}

id sub_23F60004C(uint64_t a1, uint64_t a2)
{
  void *v2;

  return sub_23F5FFD68(a1, a2, v2);
}

uint64_t sub_23F600054()
{
  return objc_opt_self();
}

id sub_23F60005C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 3538));
}

uint64_t sub_23F600064(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, v1);
}

uint64_t sub_23F600080()
{
  return sub_23F618DD0();
}

id sub_23F600090(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 2376));
}

uint64_t sub_23F600098(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_23F3CFCB0(v2, a2);
}

id sub_23F6000A0(uint64_t a1, uint64_t a2)
{
  void *v2;

  return sub_23F5FFD68(a1, a2, v2);
}

unint64_t sub_23F6000AC()
{
  return 0xD000000000000010;
}

id sub_23F6000CC(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(a1, (SEL)(v2 + 3178), v1);
}

uint64_t *initializeBufferWithCopyOfBuffer for TypedValueFormatter(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F6170CC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    sub_23F617BA0();
  }
  return a1;
}

uint64_t destroy for TypedValueFormatter(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TypedValueFormatter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for TypedValueFormatter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TypedValueFormatter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for TypedValueFormatter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TypedValueFormatter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F600380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = sub_23F6170CC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TypedValueFormatter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F600414(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23F6170CC();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for TypedValueFormatter(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7F520);
}

uint64_t sub_23F6004A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F6170CC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint8_t *sub_23F600510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD, _QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, void (*)(_QWORD, _QWORD));
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint8_t *v57;
  void (*v58)(uint8_t *, uint64_t, uint64_t);
  uint64_t v59;
  uint8_t **v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t *, uint64_t);
  NSObject *v71;
  uint64_t v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t);
  uint64_t v81;
  uint64_t (*v82)(uint64_t, uint64_t);
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t);
  id v92;
  void *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t);
  void *v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(_QWORD, _QWORD);
  void (*v110)(uint8_t *, uint64_t);
  uint64_t v111[2];
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(_QWORD, _QWORD);
  uint64_t v134;
  uint64_t v135;
  uint8_t **v136;
  uint8_t *v137;
  uint8_t *v138;
  uint64_t v139;
  uint64_t v140[3];
  char v141[8];
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;

  v3 = sub_23F619E98();
  v129 = *(_QWORD *)(v3 - 8);
  v130 = v3;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F36285C();
  v133 = v5;
  v6 = sub_23F61B80C();
  sub_23F383E7C(v6, (uint64_t)&v142);
  v115 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v114 = v9;
  v10 = sub_23F35D2E8(qword_256E70D80);
  sub_23F383E7C(v10, (uint64_t)&v143);
  v117 = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  sub_23F3B13F0(v13);
  v14 = sub_23F61B878();
  sub_23F383E7C(v14, (uint64_t)v141);
  v112 = v15;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  sub_23F3B13F0(v17);
  v18 = sub_23F616FC4();
  v126 = *(_QWORD *)(v18 - 8);
  v127 = v18;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F36285C();
  v125 = v20;
  sub_23F35D2E8(&qword_256E75C08);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F36285C();
  v123 = v22;
  v122 = sub_23F616D24();
  v120 = *(_QWORD *)(v122 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F36285C();
  sub_23F3B13F0(v24);
  v25 = sub_23F616D48();
  sub_23F383E7C(v25, (uint64_t)&v144);
  v124 = v26;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F36285C();
  sub_23F3B13F0(v28);
  v135 = sub_23F61B8A8();
  v137 = *(uint8_t **)(v135 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F601D94(v30, v111[0]);
  MEMORY[0x24BDAC7A8](v31);
  v138 = (uint8_t *)v111 - v32;
  v33 = sub_23F61B6E0();
  v131 = *(_QWORD *)(v33 - 8);
  v132 = v33;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F38F964();
  v37 = v36 - v35;
  v38 = sub_23F61B92C();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = (uint8_t *)v111 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v40);
  v128 = (char *)v111 - v44;
  MEMORY[0x24BDAC7A8](v43);
  sub_23F4DD0C0();
  MEMORY[0x24BDAC7A8](v45);
  v47 = (uint64_t *)((char *)v111 - v46);
  sub_23F35D2E8(&qword_256E70CE8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F38F964();
  v51 = v50 - v49;
  sub_23F61B8FC();
  v52 = sub_23F61BC5C();
  if (sub_23F36195C(v51, 1, v52) == 1)
  {
    sub_23F3625D8(v51, &qword_256E70CE8);
    v53 = *(void (**)(uint64_t, uint64_t, void (*)(_QWORD, _QWORD)))(v39 + 16);
    sub_23F601DD4((uint64_t)v47);
    v54 = (*(uint64_t (**)(uint64_t *, uint64_t))(v39 + 88))(v47, v38);
    if (v54 == *MEMORY[0x24BEB9A00])
    {
      v132 = a1;
      v133 = (void (*)(_QWORD, _QWORD))v38;
      sub_23F38456C((uint64_t)v47, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 96));
      v55 = *v47;
      v56 = swift_projectBox();
      v57 = v137;
      v42 = v138;
      v58 = (void (*)(uint8_t *, uint64_t, uint64_t))*((_QWORD *)v137 + 2);
      v59 = v135;
      v58(v138, v56, v135);
      v60 = v136;
      v58((uint8_t *)v136, (uint64_t)v42, v59);
      v61 = (*((uint64_t (**)(uint8_t **, uint64_t))v57 + 11))(v60, v59);
      if (v61 == *MEMORY[0x24BEB9958])
      {
        sub_23F38456C((uint64_t)v42, *((uint64_t (**)(uint64_t, uint64_t))v57 + 1));
        sub_23F601D78();
        v42 = *v60;
LABEL_17:
        swift_release();
        return v42;
      }
      v131 = v55;
      if (v61 == *MEMORY[0x24BEB9930])
      {
        sub_23F601D78();
        v67 = v125;
        v66 = v126;
        v68 = v127;
        (*(void (**)(uint64_t, uint8_t **, uint64_t))(v126 + 32))(v125, v60, v127);
        v69 = type metadata accessor for TypedValueFormatter(0);
        sub_23F6013E0(v134, *(_QWORD *)(v134 + *(int *)(v69 + 20)), *(_QWORD *)(v134 + *(int *)(v69 + 20) + 8));
        sub_23F601D88();
        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v68);
      }
      else
      {
        if (v61 != *MEMORY[0x24BEB9908])
        {
          if (v61 == *MEMORY[0x24BEB98E8])
          {
            sub_23F601D78();
            v88 = v117;
            v89 = sub_23F601DB4();
            v90 = v118;
            v91(v89);
            v92 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1668]), sel_init);
            objc_msgSend(v92, sel_setUnitOptions_, 1);
            objc_msgSend(v92, sel_setUnitStyle_, 3);
            v93 = (void *)sub_23F616B50();
            v94 = objc_msgSend(v92, sel_stringFromUnit_, v93);

            sub_23F61C10C();
            sub_23F616B68();

            v140[0] = sub_23F601964();
            v140[1] = v95;
            sub_23F61C280();
            sub_23F617BA0();
            sub_23F61C280();
            swift_bridgeObjectRelease_n();
            v42 = (uint8_t *)v140[0];
            (*(void (**)(void (*)(uint64_t, uint64_t, void (*)(_QWORD, _QWORD)), uint64_t))(v88 + 8))(v53, v90);
            v82 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)v137 + 1);
          }
          else
          {
            if (v61 == *MEMORY[0x24BEB98F8])
            {
              sub_23F601D78();
              v96 = v115;
              v97 = sub_23F601DB4();
              v98 = v116;
              v99(v97);
              sub_23F6015DC(v134);
              sub_23F601D88();
              (*(void (**)(void (*)(uint64_t, uint64_t, void (*)(_QWORD, _QWORD)), uint64_t))(v96 + 8))(v53, v98);
              v82 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)v57 + 1);
              v83 = v42;
              goto LABEL_16;
            }
            if (v61 != *MEMORY[0x24BEB9950])
            {
              if (v61 == *MEMORY[0x24BEB9940])
              {
                sub_23F38456C((uint64_t)v42, *((uint64_t (**)(uint64_t, uint64_t))v57 + 1));
                swift_release();
                return 0;
              }
              v106 = v132;
              v107 = v132;
              sub_23F61B8E4();
              sub_23F601D88();
              v108 = v106;
              v109 = v133;
              v53(v1, v108, v133);
              if (!v107)
              {
                v53((uint64_t)v128, v1, v109);
                sub_23F61C16C();
                sub_23F601D88();
              }
              (*(void (**)(uint64_t, _QWORD))(v39 + 8))(v1, v109);
              v110 = (void (*)(uint8_t *, uint64_t))*((_QWORD *)v57 + 1);
              v110(v42, v59);
              v110((uint8_t *)v136, v59);
              goto LABEL_17;
            }
            sub_23F601D78();
            v100 = v112;
            v101 = sub_23F601DB4();
            v102 = v113;
            v103(v101);
            v104 = (void *)sub_23F61B86C();
            v105 = objc_msgSend(v104, sel_displayName);

            sub_23F61C10C();
            sub_23F601D88();

            (*(void (**)(void (*)(uint64_t, uint64_t, void (*)(_QWORD, _QWORD)), uint64_t))(v100 + 8))(v53, v102);
            v82 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)v57 + 1);
          }
          v83 = v138;
LABEL_16:
          sub_23F38456C((uint64_t)v83, v82);
          goto LABEL_17;
        }
        sub_23F601D78();
        v78 = sub_23F601DB4();
        v79 = v121;
        v80(v78);
        v81 = v119;
        sub_23F616D18();
        sub_23F601024(v123);
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v81, v122);
        sub_23F61C160();
        sub_23F601D88();
        (*(void (**)(void (*)(uint64_t, uint64_t, void (*)(_QWORD, _QWORD)), uint64_t))(v124 + 8))(v53, v79);
      }
      v82 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)v57 + 1);
      v83 = v42;
      goto LABEL_16;
    }
    if (v54 == *MEMORY[0x24BEB9988])
    {
      sub_23F38456C((uint64_t)v47, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 96));
      v62 = swift_projectBox();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 16))(v37, v62, v132);
      v63 = sub_23F61B6D4();
      MEMORY[0x24BDAC7A8](v63);
      v111[-2] = v134;
      v64 = v139;
      sub_23F36EEAC((void (*)(uint64_t))sub_23F601A4C, (uint64_t)&v111[-4], v63);
      if (!v64)
      {
        v87 = v65;
        swift_bridgeObjectRelease();
        v140[0] = v87;
        sub_23F35D2E8(&qword_256E70580);
        sub_23F3EC7C8();
        sub_23F61C088();
        sub_23F601D88();
        swift_bridgeObjectRelease();
        sub_23F4F2424();
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      sub_23F4F2424();
      swift_release();
    }
    else
    {
      v70 = (void (*)(uint64_t *, uint64_t))v133;
      sub_23F619124();
      v132 = a1;
      sub_23F601DD4((uint64_t)v42);
      v71 = sub_23F619E8C();
      v72 = v38;
      v73 = sub_23F61C628();
      if (os_log_type_enabled(v71, v73))
      {
        v74 = (uint8_t *)swift_slowAlloc();
        v139 = swift_slowAlloc();
        v140[0] = v139;
        *(_DWORD *)v74 = 136315138;
        v137 = v74 + 4;
        v138 = v74;
        v53((uint64_t)v128, (uint64_t)v42, (void (*)(_QWORD, _QWORD))v72);
        v75 = sub_23F61C16C();
        sub_23F37AE00(v75, v76, v140);
        v140[2] = v77;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        sub_23F601DC4();
        _os_log_impl(&dword_23F35A000, v71, v73, "Unsupported type %s", v138, 0xCu);
        swift_arrayDestroy();
        sub_23F366530();
      }
      sub_23F601DC4();

      (*(void (**)(_QWORD, uint64_t))(v129 + 8))(v70, v130);
      v84 = v132;
      type metadata accessor for TypedValueFormatterError(0);
      sub_23F3612C0(&qword_256E7F558, type metadata accessor for TypedValueFormatterError, (uint64_t)&unk_23F633240);
      swift_allocError();
      v53(v85, v84, (void (*)(_QWORD, _QWORD))v38);
      swift_willThrow();
      v70(v47, v38);
    }
  }
  else
  {
    sub_23F61BC2C();
    sub_23F601D88();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
  }
  return v42;
}

uint64_t type metadata accessor for TypedValueFormatterError(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E7F608);
}

void sub_23F601024(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[2];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v44 = sub_23F35D2E8(&qword_256E7F560);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F601D94(v5, v39[0]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v39 - v7;
  v9 = sub_23F616D3C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0];
  v48 = *(_QWORD *)(v9 - 8);
  sub_23F362850();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F4DD0C0();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v45 = (uint64_t)v39 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v39 - v18;
  v43 = sub_23F35D2E8(&qword_256E7F568);
  sub_23F362850();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = (char *)v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v40 = (uint64_t)v39 - v23;
  sub_23F35D2E8(&qword_256E7F570);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F38F964();
  v27 = v26 - v25;
  v28 = sub_23F616D24();
  sub_23F3612C0(&qword_256E7F578, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2B0]);
  v49 = v2;
  v46 = v29;
  v47 = v28;
  sub_23F61C58C();
  sub_23F3612C0(&qword_256E7F580, v10, MEMORY[0x24BDCC508]);
  if ((sub_23F61C0A0() & 1) != 0)
  {
    v39[1] = a1;
    sub_23F38F9CC((uint64_t)v19, v27);
    v30 = v45;
    sub_23F61C5A4();
    v39[0] = (uint64_t)v19;
    sub_23F38F9CC(v1, (uint64_t)v19);
    sub_23F38F9CC((uint64_t)v14, v30);
    sub_23F3625D8(v27, &qword_256E7F570);
    sub_23F3612C0(&qword_256E7F588, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
    v31 = sub_23F61C094();
    sub_23F482294((uint64_t)v14);
    sub_23F482294(v1);
    if ((v31 & 1) != 0)
    {
      v32 = (uint64_t)v41;
      v33 = v42;
      v34 = v44;
      v35 = (uint64_t)&v8[*(int *)(v44 + 48)];
      sub_23F41C544((uint64_t)v8, v39[0]);
      sub_23F41C544(v35, v45);
      v36 = v33 + *(int *)(v34 + 48);
      sub_23F38F9CC(v33, (uint64_t)v8);
      sub_23F38F9CC(v36, v35);
      sub_23F41C544(v32, v33);
      sub_23F482294(v36);
      v37 = v33 + *(int *)(v34 + 48);
      sub_23F41C544(v33, (uint64_t)v8);
      sub_23F41C544(v37, v35);
      sub_23F41C544(v32 + *(int *)(v43 + 36), v37);
      sub_23F482294(v33);
      v38 = v40;
      sub_23F601A64(v32, v40);
      sub_23F61C5B0();
      sub_23F3625D8(v38, &qword_256E7F568);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_23F6013B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23F600510();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_23F6013E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_23F35D2E8(&qword_256E7DCB8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - v8;
  sub_23F618578();
  swift_allocObject();
  sub_23F61856C();
  sub_23F616F7C();
  v10 = sub_23F618548();
  if (a3)
  {
    sub_23F617BA0();
    sub_23F6185F0();
    v11 = sub_23F618614();
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
    v10 = sub_23F618560();
  }
  MEMORY[0x24266BA64](v10);
  sub_23F6185C0();
  sub_23F617018();
  sub_23F6185A8();
  sub_23F618530();
  sub_23F61853C();
  v12 = sub_23F618614();
  if (sub_23F36195C((uint64_t)v7, 1, v12) == 1)
  {
    swift_release();
    swift_release();
    sub_23F3625D8((uint64_t)v7, &qword_256E7DCB8);
    return 0;
  }
  else
  {
    v13 = sub_23F6185FC();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v7, v12);
  }
  return v13;
}

uint64_t sub_23F6015DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  __int16 v7;
  unsigned int v8;
  __int16 v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[3];
  int v23;
  __int16 v24;
  __int16 v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;
  __int16 v29;
  __int16 v30;
  __int16 v31;

  v22[2] = a1;
  v1 = sub_23F35D2E8(&qword_256E7DCB8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F618590();
  swift_allocObject();
  v22[0] = sub_23F618584();
  v4 = sub_23F61B800();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = HIDWORD(v4);
  v11 = HIWORD(v4);
  v12 = v6 >> 16;
  v13 = HIDWORD(v6);
  v14 = HIWORD(v6);
  v15 = HIWORD(v8);
  v16 = objc_allocWithZone(MEMORY[0x24BDD1518]);
  v23 = v5;
  v24 = v10;
  v25 = v11;
  v26 = v7;
  v27 = v12;
  v28 = v13;
  v29 = v14;
  v30 = v9;
  v31 = v15;
  v17 = objc_msgSend(v16, sel_initWithDecimal_, &v23);
  objc_msgSend(v17, sel_doubleValue);

  sub_23F618524();
  swift_release();
  sub_23F61B7E8();
  sub_23F618518();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23F61850C();
  swift_release();
  sub_23F6185C0();
  swift_retain();
  sub_23F617018();
  v18 = sub_23F6185A8();
  MEMORY[0x24266BA10](v18);
  swift_release();
  sub_23F61859C();
  v19 = sub_23F618614();
  if (sub_23F36195C((uint64_t)v3, 1, v19) == 1)
  {
    swift_release();
    sub_23F3625D8((uint64_t)v3, &qword_256E7DCB8);
    return 0;
  }
  else
  {
    v20 = sub_23F6185FC();
    swift_release();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v3, v19);
  }
  return v20;
}

void sub_23F60183C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for TypedValueFormatterError(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F38F964();
  sub_23F601D34(v0, v3 - v2);
  v4 = sub_23F61B92C();
  sub_23F362B6C(v4);
  sub_23F362928();
}

uint64_t sub_23F601898()
{
  sub_23F3612C0(&qword_256E7F618, type metadata accessor for TypedValueFormatterError, (uint64_t)&unk_23F633200);
  return sub_23F61CCAC();
}

uint64_t sub_23F6018D8()
{
  sub_23F3612C0(&qword_256E7F618, type metadata accessor for TypedValueFormatterError, (uint64_t)&unk_23F633200);
  return sub_23F61CCA0();
}

uint64_t sub_23F601918()
{
  uint64_t v0;

  v0 = qword_256E7F4B8;
  sub_23F617BA0();
  return v0;
}

uint64_t sub_23F60194C()
{
  sub_23F60183C();
  return 0;
}

uint64_t sub_23F601964()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  objc_msgSend(v0, sel_setMinimumFractionDigits_, 0);
  objc_msgSend(v0, sel_setMaximumFractionDigits_, 2);
  objc_msgSend(v0, sel_setNumberStyle_, 1);
  v1 = (void *)sub_23F61C4E4();
  v2 = objc_msgSend(v0, sel_stringFromNumber_, v1);

  if (v2)
  {
    v3 = sub_23F61C10C();

  }
  else
  {

    return 6369134;
  }
  return v3;
}

uint64_t sub_23F601A4C@<X0>(uint64_t *a1@<X8>)
{
  return sub_23F6013B4(a1);
}

uint64_t sub_23F601A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E7F568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_23F601AAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_23F61B92C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t sub_23F601B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F601B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F601BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F601BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F601C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(qword_256E7F590);
  return sub_23F36195C(a1, a2, v4);
}

uint64_t sub_23F601C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F35D2E8(qword_256E7F590);
  return sub_23F36196C(a1, a2, a3, v6);
}

uint64_t sub_23F601CAC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = sub_23F61B92C();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

void sub_23F601D08()
{
  sub_23F3612C0(&qword_256E7F558, type metadata accessor for TypedValueFormatterError, (uint64_t)&unk_23F633240);
}

uint64_t sub_23F601D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TypedValueFormatterError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F601D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v0, v2);
}

void sub_23F601D94(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F601DB4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23F601DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F601DD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v1, v3);
}

uint64_t sub_23F601DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = sub_23F35D2E8(&qword_256E700A0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F618C20();
  v29 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v28 = (uint64_t)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v26 = (uint64_t)&v23 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v15 = *(_QWORD *)(sub_23F619280() - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v27 = *(_QWORD *)(v15 + 72);
    v23 = a1;
    sub_23F617BA0();
    v17 = MEMORY[0x24BEE4AF8];
    v24 = a2;
    v25 = a3;
    while (1)
    {
      sub_23F6021FC(a2, a3, (uint64_t)v9);
      if (v3)
        break;
      if (sub_23F36195C((uint64_t)v9, 1, v10) == 1)
      {
        sub_23F3CFCB0((uint64_t)v9, &qword_256E700A0);
      }
      else
      {
        v18 = v26;
        sub_23F580688(v26, (uint64_t)v9);
        sub_23F580688(v28, v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F602958();
          v17 = v20;
        }
        v19 = *(_QWORD *)(v17 + 16);
        if (v19 >= *(_QWORD *)(v17 + 24) >> 1)
        {
          sub_23F602958();
          v17 = v21;
        }
        *(_QWORD *)(v17 + 16) = v19 + 1;
        sub_23F580688(v17+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v19, v28);
        a2 = v24;
        a3 = v25;
      }
      v16 += v27;
      if (!--v14)
      {
        sub_23F3837B0();
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    sub_23F3837B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F3837B0();
    return MEMORY[0x24BEE4AF8];
  }
  return v17;
}

uint64_t UIControlToolRetriever.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F61925C();
  swift_allocObject();
  sub_23F619250();
  v3 = sub_23F619244();
  result = swift_release();
  *a1 = v3;
  return result;
}

void UIControlToolRetriever.search(query:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23F617BA0();
  v4 = sub_23F617BA0();
  sub_23F601DE0(v4, a1, a2);
  swift_bridgeObjectRelease();
  sub_23F369368();
}

uint64_t sub_23F6021FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v80 = a1;
  v81 = a2;
  v5 = sub_23F618C08();
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v78 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F618BB4();
  v71 = *(_QWORD *)(v7 - 8);
  v72 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v74 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_23F618C68();
  v73 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v79 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F61922C();
  v82 = *(_QWORD *)(v10 - 8);
  v83 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F35D2E8(&qword_256E7F620);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v64 - v17;
  v89 = sub_23F619E98();
  v84 = *(_QWORD *)(v89 - 8);
  v19 = MEMORY[0x24BDAC7A8](v89);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v64 - v22;
  v24 = sub_23F619268();
  if (v25)
  {
    v70 = v24;
    sub_23F619274();
    v26 = sub_23F619238();
    if (sub_23F36195C((uint64_t)v18, 1, v26) == 1)
    {
      swift_bridgeObjectRelease();
LABEL_23:
      v43 = sub_23F618C20();
      v44 = a3;
LABEL_44:
      v55 = 1;
LABEL_45:
      sub_23F36196C(v44, v55, 1, v43);
      return sub_23F3CFCB0((uint64_t)v18, &qword_256E7F620);
    }
    sub_23F602910((uint64_t)v18, (uint64_t)v16);
    v32 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v32 + 88))(v16, v26) != *MEMORY[0x24BE54190])
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v26);
      goto LABEL_23;
    }
    v68 = a3;
    v69 = v3;
    (*(void (**)(char *, uint64_t))(v32 + 96))(v16, v26);
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v12, v16, v83);
    v67 = sub_23F619220();
    v34 = v33;
    if (v33)
      v35 = v33;
    else
      v35 = 0xE000000000000000;
    v36 = sub_23F619214();
    if (v37)
      v38 = v36;
    else
      v38 = 0;
    if (v37)
      v39 = v37;
    else
      v39 = 0xE000000000000000;
    v40 = HIBYTE(v39) & 0xF;
    v41 = v38 & 0xFFFFFFFFFFFFLL;
    if ((v39 & 0x2000000000000000) != 0)
      v42 = HIBYTE(v39) & 0xF;
    else
      v42 = v38 & 0xFFFFFFFFFFFFLL;
    if (v42)
    {
      v65 = v38;
      v66 = v39;
      v67 = v39 & 0x2000000000000000;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v45 = v67;
      if (!v34)
        v45 = 0;
      v67 = v35 & 0x2000000000000000;
      v40 = HIBYTE(v35) & 0xF;
      v65 = v45;
      v41 = v45 & 0xFFFFFFFFFFFFLL;
      v66 = v35;
    }
    v46 = sub_23F619208();
    if (v47)
      v48 = v47;
    else
      v48 = 0xE000000000000000;
    if (v67)
      v49 = v40;
    else
      v49 = v41;
    if (!v49)
    {
      (*(void (**)(char *, uint64_t))(v82 + 8))(v12, v83);
      swift_bridgeObjectRelease();
      v53 = v68;
LABEL_43:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v43 = sub_23F618C20();
      v44 = v53;
      goto LABEL_44;
    }
    v50 = v46;
    v51 = v47;
    swift_bridgeObjectRelease();
    v52 = v50 & 0xFFFFFFFFFFFFLL;
    if (!v51)
      v52 = 0;
    if ((v48 & 0x2000000000000000) != 0)
      v52 = HIBYTE(v48) & 0xF;
    v53 = v68;
    v54 = v69;
    if (!v52 || (v87 = v80, v88 = v81, v85 = v65, v86 = v66, sub_23F38813C(), sub_23F61C7D8()))
    {
      (*(void (**)(char *, uint64_t))(v82 + 8))(v12, v83);
      goto LABEL_43;
    }
    sub_23F619208();
    v56 = v79;
    sub_23F618C38();
    if (!v54)
    {
      v62 = v73;
      v61 = v74;
      v63 = v75;
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v74, v56, v75);
      (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v61, *MEMORY[0x24BE57568], v72);
      (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v78, *MEMORY[0x24BE575E0], v77);
      sub_23F618BC0();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v56, v63);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v12, v83);
      v43 = sub_23F618C20();
      v44 = v53;
      v55 = 0;
      goto LABEL_45;
    }
    sub_23F6190B8();
    v57 = sub_23F619E8C();
    v58 = sub_23F61C628();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v59 = 0;
      _os_log_impl(&dword_23F35A000, v57, v58, "cannot create UIControlTool object", v59, 2u);
      MEMORY[0x242670B70](v59, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v84 + 8))(v21, v89);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v12, v83);
    v60 = sub_23F618C20();
    sub_23F36196C(v53, 1, 1, v60);
    return sub_23F3CFCB0((uint64_t)v18, &qword_256E7F620);
  }
  else
  {
    sub_23F6190B8();
    v27 = sub_23F619E8C();
    v28 = sub_23F61C628();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_23F35A000, v27, v28, "Cannot retrieve app bundle id from UI element ", v29, 2u);
      MEMORY[0x242670B70](v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v84 + 8))(v23, v89);
    v30 = sub_23F618C20();
    return sub_23F36196C(a3, 1, 1, v30);
  }
}

uint64_t dispatch thunk of UIControlToolRetrieving.search(query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for UIControlToolRetriever()
{
  return &type metadata for UIControlToolRetriever;
}

uint64_t sub_23F602910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E7F620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23F602958()
{
  sub_23F377E30();
}

uint64_t sub_23F602964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = sub_23F619E98();
  v4 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  sub_23F38F964();
  v7 = v6 - v5;
  v8 = sub_23F61805C();
  v32 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  MEMORY[0x24BDAC7A8](v8);
  sub_23F38F964();
  v11 = v10 - v9;
  v12 = sub_23F35D2E8(&qword_256E7F648);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F38F964();
  v15 = v14 - v13;
  v16 = sub_23F618068();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v31 - v21;
  sub_23F602C50(a1, a2, v15);
  if (sub_23F36195C(v15, 1, v16) == 1)
  {
    sub_23F602F14(v15);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v22, v15, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
    if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v20, v16) == *MEMORY[0x24BE53050])
    {
      (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
      v24 = v32;
      v23 = v33;
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v11, v20, v33);
      v25 = sub_23F618044();
      sub_23F618014();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v23);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
      return v25;
    }
    v26 = *(void (**)(char *, uint64_t))(v17 + 8);
    v26(v22, v16);
    v26(v20, v16);
  }
  sub_23F619124();
  v27 = sub_23F619E8C();
  v28 = sub_23F61C628();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    _os_log_impl(&dword_23F35A000, v27, v28, "The tool has requested a Confirmation but provided no label for the buttons. Using fallback labels.)", v29, 2u);
    MEMORY[0x242670B70](v29, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v34);
  v25 = qword_256E7F628;
  sub_23F617BA0();
  sub_23F617BA0();
  return v25;
}

uint64_t sub_23F602C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  int v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;

  v6 = sub_23F618068();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v36 - v11;
  v13 = sub_23F618134();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F38F964();
  v17 = v16 - v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v16 - v15, a1, v13);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 88))(v17, v13);
  if (v18 == *MEMORY[0x24BE53328])
    goto LABEL_31;
  if (v18 == *MEMORY[0x24BE532D8])
    goto LABEL_8;
  if (v18 == *MEMORY[0x24BE532E0] || v18 == *MEMORY[0x24BE532E8])
  {
LABEL_31:
    sub_23F4F2424();
    goto LABEL_32;
  }
  if (v18 != *MEMORY[0x24BE53300])
  {
    if (v18 != *MEMORY[0x24BE53308]
      && v18 != *MEMORY[0x24BE532F0]
      && v18 != *MEMORY[0x24BE53310]
      && v18 != *MEMORY[0x24BE532D0]
      && v18 != *MEMORY[0x24BE532F8]
      && v18 != *MEMORY[0x24BE53320])
    {
      sub_23F40B4B8(a3, 1);
      return sub_23F4F2424();
    }
    goto LABEL_31;
  }
LABEL_8:
  sub_23F4F2424();
  v20 = *(_QWORD *)(a2 + 16);
  if (v20)
  {
    v37 = a3;
    v21 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v22 = *MEMORY[0x24BE53050];
    v38 = *(_QWORD *)(v7 + 72);
    v23 = a2;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v36[1] = v23;
    sub_23F617BA0();
    while (1)
    {
      v24(v12, v21, v6);
      v24(v10, (uint64_t)v12, v6);
      v25 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
      v26 = *(void (**)(char *, uint64_t))(v7 + 8);
      v26(v10, v6);
      if (v25 == v22)
        break;
      v26(v12, v6);
      v21 += v38;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        a3 = v37;
        goto LABEL_32;
      }
    }
    swift_bridgeObjectRelease();
    v27 = v37;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v37, v12, v6);
    v28 = v27;
    v29 = 0;
    return sub_23F40B4B8(v28, v29);
  }
LABEL_32:
  v28 = a3;
  v29 = 1;
  return sub_23F40B4B8(v28, v29);
}

uint64_t sub_23F602F14(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E7F648);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for UserPromptResolver(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B140();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for UserPromptResolver(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61B140();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for UserPromptResolver(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for UserPromptResolver(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for UserPromptResolver(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for UserPromptResolver(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserPromptResolver()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F6030E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F606DFC();
  return sub_23F36195C(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for UserPromptResolver()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F603114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F606DFC();
  return sub_23F36196C(v1, v0, v0, v2);
}

uint64_t type metadata accessor for UserPromptResolver(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7F6A8);
}

uint64_t sub_23F603154()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B140();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F6031BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = a3(0);
  v9 = v8;
  v10 = 1;
  if ((a1 & 0x8000000000000000) == 0 && v7 > a1)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a4, a2+ ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, v8);
    v10 = 0;
  }
  return sub_23F36196C(a4, v10, 1, v9);
}

void sub_23F60324C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;

  sub_23F362C98();
  v73 = (_QWORD *)v1;
  v60 = v7;
  v8 = sub_23F618134();
  v54 = *(_QWORD *)(v8 - 8);
  v55 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v59 = v10;
  v11 = sub_23F384040();
  v56 = *(_QWORD *)(v11 - 8);
  v57 = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F606D3C(v13, v51);
  sub_23F35D2E8(&qword_256E70240);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  v68 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v53 = sub_23F6183EC();
  v52 = *(_QWORD *)(v53 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  v61 = (uint64_t)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v18 = sub_23F61B2C0();
  v66 = *(_QWORD *)(v18 - 8);
  v67 = v18;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F36285C();
  v69 = v20;
  sub_23F39C56C();
  v21 = sub_23F617000();
  v71 = *(_QWORD *)(v21 - 8);
  v72 = v21;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F383A54();
  v70 = sub_23F61B164();
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3B17BC();
  sub_23F35D2E8(&qword_256E70248);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F362838();
  v64 = sub_23F35D2E8(&qword_256E70250);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F3B1630();
  v26 = sub_23F6180B0();
  v62 = *(_QWORD *)(v26 - 8);
  v63 = v26;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  v65 = (uint64_t)&v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  sub_23F61A330();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  v30 = sub_23F3B1C68();
  type metadata accessor for UserPromptResolver.Resolution(v30);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F3B17A4();
  sub_23F61A33C();
  sub_23F604278(v4, v2);
  sub_23F61B128();
  sub_23F61B14C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v70);
  sub_23F61A354();
  v32 = sub_23F5D15E8();
  sub_23F5F8124(v32, v33);
  sub_23F507C20(v71);
  swift_bridgeObjectRelease();
  v34 = (uint64_t)v73;
  sub_23F3747E4(0xD000000000000091, 0x800000023F63C180, 30, 0xD000000000000016, 0x800000023F63C220);
  sub_23F39E4B8(v0, &qword_256E70248);
  if (v34)
  {
    v50 = (uint64_t)v2;
  }
  else
  {
    v35 = v66;
    v73 = v2;
    v36 = (uint64_t)v68;
    v37 = v3 + *(int *)(v64 + 48);
    sub_23F61B2CC();
    v38 = sub_23F61B2E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
    sub_23F604528(v65);
    sub_23F383E88(v69, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
    v39 = sub_23F6180A4();
    sub_23F36FFA4(v39, v36);
    swift_bridgeObjectRelease();
    sub_23F374808(0xD000000000000091, 0x800000023F63C180, 36, 0xD000000000000016, 0x800000023F63C220);
    sub_23F39E4B8(v36, &qword_256E70240);
    v40 = v58;
    sub_23F6183BC();
    v41 = sub_23F6183D4();
    v43 = v42;
    v44 = v59;
    sub_23F6183E0();
    v45 = v41;
    v46 = (uint64_t)v73;
    sub_23F6036F4(v40, v45, v43, (uint64_t)v73, v44, v47, v48, v49, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61,
      v62);
    swift_bridgeObjectRelease();
    sub_23F40B4F8(v54);
    sub_23F606C0C(v56);
    sub_23F606C98();
    sub_23F606D88();
    v50 = v46;
  }
  sub_23F6044EC(v50);
  sub_23F362870();
}

uint64_t type metadata accessor for UserPromptResolver.Resolution(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7F758);
}

void sub_23F6036F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  _QWORD v86[38];
  uint64_t v87;
  char *v88;

  sub_23F362C98();
  a19 = v21;
  a20 = v22;
  v88 = (char *)v23;
  v86[37] = v24;
  v26 = v25;
  v86[21] = v27;
  v86[22] = v28;
  v87 = v29;
  v30 = sub_23F619E98();
  v86[24] = *(_QWORD *)(v30 - 8);
  v86[25] = v30;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F36285C();
  v86[23] = v32;
  v33 = sub_23F384048();
  v86[26] = *(_QWORD *)(v33 - 8);
  v86[27] = v33;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F36285C();
  v86[18] = v35;
  sub_23F39C56C();
  v36 = sub_23F618230();
  sub_23F383E7C(v36, (uint64_t)&a18);
  v86[17] = v37;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F36285C();
  v86[16] = v39;
  sub_23F39C56C();
  v40 = sub_23F618284();
  sub_23F383E7C(v40, (uint64_t)&v87);
  v86[5] = v41;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F36285C();
  v86[4] = v43;
  v44 = sub_23F39C56C();
  type metadata accessor for UserPromptResolver.Resolution(v44);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F3834D0();
  v86[33] = v46;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F383780();
  v86[32] = v48;
  sub_23F39C56C();
  v49 = sub_23F618350();
  sub_23F383E7C(v49, (uint64_t)&a11);
  v86[11] = v50;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F3834D0();
  v86[10] = v52;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F383780();
  v86[1] = v54;
  sub_23F39C56C();
  v55 = sub_23F61820C();
  v86[34] = *(_QWORD *)(v55 - 8);
  v86[35] = v55;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F3834D0();
  v86[20] = v57;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v58);
  v86[15] = (char *)v86 - v59;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F383780();
  v86[9] = v61;
  v62 = sub_23F384040();
  v86[29] = *(_QWORD *)(v62 - 8);
  v86[30] = v62;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F36285C();
  v86[31] = v64;
  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v65);
  v86[28] = (char *)v86 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v67 = sub_23F6182F0();
  sub_23F383E7C(v67, (uint64_t)&a13);
  v86[13] = v68;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F3834D0();
  v86[2] = v70;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v71);
  v72 = sub_23F618134();
  sub_23F3B19A8();
  v74 = MEMORY[0x24BDAC7A8](v73);
  MEMORY[0x24BDAC7A8](v74);
  sub_23F383780();
  v86[3] = v75;
  v76 = sub_23F606D00();
  sub_23F383E7C(v76, (uint64_t)&v88);
  v86[7] = v77;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F3834D0();
  v86[0] = v79;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F35D2E8(qword_256E7F6E0);
  sub_23F362850();
  v82 = MEMORY[0x24BDAC7A8](v81);
  v84 = (char *)v86 + *(int *)(v82 + 48) - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)v86 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v72);
  sub_23F6049E8((uint64_t)v88, (uint64_t)v84);
  v88 = v84;
  v85 = (char *)sub_23F603AAC + 4 * byte_23F6332D0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23F603AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;

  v2 = *(_QWORD *)(v1 - 96);
  v3 = *(_QWORD *)(v1 - 152);
  sub_23F6049E8(v2, v3);
  v4 = *(_QWORD *)(v1 - 72);
  if (sub_23F606B80(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88)) == *MEMORY[0x24BE532E8])
  {
    sub_23F606B80(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 96));
    v5 = *(_QWORD *)(v1 - 280);
    v6 = *(_QWORD *)(v1 - 288);
    v7 = v0;
    v8 = *(_QWORD *)(v1 - 264);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v6, v7, v8);
    v9 = *(_QWORD *)(v1 - 208);
    v10 = *(_QWORD *)(v1 - 272);
    v11 = v3;
    v12 = *(_QWORD *)(v1 - 200);
    sub_23F384918(v10, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
    sub_23F606CB0();
    sub_23F6060A0();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v8);
    sub_23F6044EC(v2);
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 208) + 8))(v3, *(_QWORD *)(v1 - 200));
    sub_23F619094();
    v13 = sub_23F619E8C();
    v14 = sub_23F61C628();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_23F35A000, v13, v14, "prompt cannot be resolved", v15, 2u);
      MEMORY[0x242670B70](v15, -1, -1);
    }

    sub_23F40B4F8(*(_QWORD *)(v1 - 224));
    type metadata accessor for InterpreterError();
    sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23F39E4B8(v0, qword_256E7F6E0);
  }
  sub_23F362870();
}

uint64_t sub_23F604278@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  uint64_t result;
  uint64_t (*v15)(_QWORD *, uint64_t);
  uint64_t v16;

  v6 = sub_23F61A318();
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B1630();
  v8 = sub_23F61A330();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x24BE55348])
    goto LABEL_2;
  if (v12 == *MEMORY[0x24BE55368])
  {
    sub_23F606B70();
    sub_23F606BCC();
    v13 = sub_23F61B92C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a2, v11, v13);
    sub_23F606DD0();
    return swift_storeEnumTagMultiPayload();
  }
  if (v12 == *MEMORY[0x24BE55350])
  {
LABEL_2:
    sub_23F606B70();
    sub_23F606BCC();
    type metadata accessor for UserPromptResolver.Resolution(0);
    return swift_storeEnumTagMultiPayload();
  }
  if (v12 == *MEMORY[0x24BE55360] || v12 == *MEMORY[0x24BE55370])
  {
    sub_23F606B70();
    sub_23F606BCC();
    *a2 = *v11;
    sub_23F606DD0();
    return swift_storeEnumTagMultiPayload();
  }
  if (v12 == *MEMORY[0x24BE55358])
  {
    sub_23F606BCC();
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 32))(v2, v11, v6);
    sub_23F61A30C();
    sub_23F606B70();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v6);
    type metadata accessor for UserPromptResolver.Resolution(0);
    return swift_storeEnumTagMultiPayload();
  }
  if (v12 == *MEMORY[0x24BE55338])
  {
    v15 = *(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8);
    v15(a1, v8);
    sub_23F606DD0();
    swift_storeEnumTagMultiPayload();
    return v15(v11, v8);
  }
  else
  {
    if (v12 == *MEMORY[0x24BE55340])
    {
      sub_23F606B70();
      type metadata accessor for UserPromptResolver.Resolution(0);
      return swift_storeEnumTagMultiPayload();
    }
    result = sub_23F61CC58();
    __break(1u);
  }
  return result;
}

uint64_t sub_23F6044EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UserPromptResolver.Resolution(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F604528@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;

  v44 = a1;
  v2 = sub_23F619E98();
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v36 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F35D2E8(&qword_256E72CB8);
  MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F618134();
  MEMORY[0x24BDAC7A8](v6);
  v42 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F617D68();
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E6FFA0);
  MEMORY[0x24BDAC7A8](v11);
  v39 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F617E40();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F61B2C0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v1, v18);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v21, v18);
  if (v22 == *MEMORY[0x24BE56C30])
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v21, v18);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v21, v14);
    sub_23F617DF8();
    sub_23F617E1C();
    v34 = v15;
    v35 = v14;
    if (v23)
    {
      sub_23F617BA0();
      v24 = v39;
      sub_23F617CA8();
      v25 = sub_23F617D08();
      sub_23F36196C(v24, 0, 1, v25);
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = sub_23F617D08();
      sub_23F36196C(v39, 1, 1, v32);
    }
    sub_23F617E28();
    sub_23F617E34();
    sub_23F617D5C();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v41);
    sub_23F617E10();
    sub_23F617E04();
    sub_23F618080();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v35);
  }
  else if (v22 == *MEMORY[0x24BE56C40])
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v21, v18);
    v26 = sub_23F6180B0();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v44, v21, v26);
  }
  else
  {
    v28 = v36;
    sub_23F619094();
    v29 = sub_23F619E8C();
    v30 = sub_23F61C634();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_23F35A000, v29, v30, "payload cannot be coerced to SystemResponse", v31, 2u);
      MEMORY[0x242670B70](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v38);
    type metadata accessor for InterpreterError();
    sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
}

uint64_t sub_23F6049E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UserPromptResolver.Resolution(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23F604A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v8[4];

  sub_23F362C98();
  v3 = v2;
  sub_23F61B164();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E6FB00);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F383EC4();
  sub_23F61B128();
  sub_23F61B14C();
  sub_23F3D98EC((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v8[2] = v3;
  sub_23F35D2E8(&qword_256E70F10);
  sub_23F5DB644();
  sub_23F606774(&qword_256E74C70);
  sub_23F61AC48();
  swift_bridgeObjectRelease();
  sub_23F56E86C();
  sub_23F374674();
  sub_23F39E4B8(v0, &qword_256E6FB00);
  sub_23F362870();
}

#error "23F604CE4: call analysis failed (funcsize=106)"

void sub_23F604D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_23F362C98();
  sub_23F384040();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F517024(v4, v24);
  v6 = MEMORY[0x24BDAC7A8](v5);
  sub_23F606E18(v6, v7, v8, v9, v10, v11, v12, v13, v25);
  sub_23F35D2E8(&qword_256E6FB18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F606C60();
  sub_23F3B19A8();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F606C7C();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F606C44();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23F606B54();
  v22 = sub_23F3838D8(v0, v20, v21, v19);
  sub_23F606D98(v22, *MEMORY[0x24BE522C8]);
  sub_23F606E0C();
  sub_23F606E48();
  sub_23F383C64(v1, *MEMORY[0x24BE53320], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  v23 = sub_23F3846CC();
  sub_23F606C18(v23);
  sub_23F61B134();
  sub_23F606DEC();
  sub_23F366748();
  sub_23F606CBC();
  sub_23F606BDC();
  sub_23F5DB644();
  sub_23F606D58();
  sub_23F362870();
}

void sub_23F604E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t *, _QWORD);
  uint64_t v107[3];
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  sub_23F362C98();
  a19 = v24;
  a20 = v25;
  v27 = v26;
  v130 = v28;
  v126 = v29;
  sub_23F35D2E8(&qword_256E6FB18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F36285C();
  v129 = v31;
  sub_23F39C56C();
  v32 = sub_23F618134();
  v123 = *(_QWORD *)(v32 - 8);
  v124 = v32;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F36285C();
  v127 = v34;
  sub_23F39C56C();
  sub_23F61ACA8();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  v128 = (char *)v107 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F606D3C(v38, v107[0]);
  sub_23F35D2E8(&qword_256E6FAE0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F36285C();
  v120 = v40;
  sub_23F39C56C();
  v41 = sub_23F61A7E0();
  sub_23F383E7C(v41, (uint64_t)&a14);
  v115 = v42;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F36285C();
  v118 = v44;
  sub_23F35D2E8(&qword_256E703E0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F36285C();
  v119 = v46;
  sub_23F35D2E8(&qword_256E70230);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F36285C();
  v121 = v48;
  sub_23F39C56C();
  v49 = sub_23F61B0BC();
  sub_23F383E7C(v49, (uint64_t)&a17);
  v117 = v50;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F36285C();
  v122 = v52;
  v131 = sub_23F384040();
  v133 = *(_QWORD *)(v131 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F482314();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F383780();
  v136 = v55;
  sub_23F39C56C();
  v135 = sub_23F61B164();
  v56 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v132 = (char *)v107 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E702E0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F36285C();
  v134 = v59;
  v60 = sub_23F606D00();
  sub_23F3B19A8();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F606D20();
  sub_23F6061D8();
  if (!v22)
  {
    v109 = v23;
    v114 = v20;
    v112 = v60;
    v110 = v27;
    v62 = v132;
    v113 = v21;
    sub_23F61B128();
    v63 = sub_23F61B14C();
    v64 = *(void (**)(char *, uint64_t))(v56 + 8);
    v64(v62, v135);
    v137 = v63;
    v65 = v136;
    sub_23F61A978();
    v66 = sub_23F35D2E8(&qword_256E70F10);
    sub_23F606774(&qword_256E70F18);
    v68 = v67;
    v69 = v134;
    sub_23F61AD20();
    v70 = *(void (**)(uint64_t, uint64_t))(v133 + 8);
    v71 = v131;
    v70(v65, v131);
    swift_bridgeObjectRelease();
    v72 = sub_23F61B2E4();
    v73 = sub_23F36195C(v69, 1, v72);
    v74 = v135;
    v108 = v64;
    v107[2] = v66;
    v107[1] = v68;
    v107[0] = (uint64_t)v70;
    if (v73 == 1)
    {
      sub_23F39E4B8(v134, &qword_256E702E0);
      v75 = 0;
      v76 = 0;
    }
    else
    {
      v77 = v134;
      v75 = sub_23F61B26C();
      v76 = v78;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(v77, v72);
    }
    v79 = v129;
    v80 = v127;
    v81 = sub_23F61A1E0();
    if (v76)
    {
      if (v75 == v81 && v76 == v82)
      {
        sub_23F362984();
        sub_23F3B5F04();
LABEL_15:
        v91 = v132;
        sub_23F61B128();
        v92 = sub_23F61B14C();
        v108(v91, v74);
        v137 = v92;
        v93 = v136;
        sub_23F61A978();
        v94 = v121;
        sub_23F61ACE4();
        ((void (*)(uint64_t, uint64_t))v107[0])(v93, v71);
        swift_bridgeObjectRelease();
        sub_23F56E86C();
        v95 = v122;
        sub_23F37479C(v96, v97, 212, 0xD00000000000001CLL, 0x800000023F63C2A0);
        sub_23F39E4B8(v94, &qword_256E70230);
        v98 = sub_23F618224();
        v135 = v99;
        v136 = v98;
        v100 = v118;
        sub_23F6182E4();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v115 + 104))(v100, *MEMORY[0x24BE55998], v116);
        v101 = *MEMORY[0x24BE53148];
        v102 = sub_23F6180BC();
        v103 = v120;
        sub_23F383C64(v120, v101, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 104));
        sub_23F36196C(v103, 0, 1, v102);
        v104 = v119;
        sub_23F61B068();
        v105 = sub_23F61B080();
        sub_23F36196C(v104, 0, 1, v105);
        v106 = (void (*)(uint64_t *, _QWORD))sub_23F61B08C();
        sub_23F37271C();
        v106(&v137, 0);
        sub_23F606CD4();
        sub_23F3841C4(v126, v95, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v117 + 32));
        goto LABEL_16;
      }
      v84 = sub_23F61CC64();
      sub_23F362984();
      sub_23F3B5F04();
      if ((v84 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      sub_23F3B5F04();
    }
    v85 = sub_23F617000();
    sub_23F3838D8(v125, v86, v87, v85);
    sub_23F618224();
    sub_23F618218();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v123 + 104))(v80, *MEMORY[0x24BE532E8], v124);
    v88 = sub_23F3846CC();
    sub_23F3838D8(v79, v89, v90, v88);
    sub_23F5D15E8();
    sub_23F61AC90();
    sub_23F61B134();
    sub_23F61B17C();
    sub_23F366748();
    sub_23F384918(v109, v110, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 16));
    sub_23F61A4BC();
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v111, v112);
LABEL_16:
    sub_23F5DB644();
    swift_storeEnumTagMultiPayload();
  }
  sub_23F362870();
}

void sub_23F605620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_23F362C98();
  v23 = v3;
  v19 = v4;
  v22 = sub_23F384040();
  v21 = *(_QWORD *)(v22 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F517024(v6, v19);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F35D2E8(&qword_256E6FB18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3B1630();
  v9 = sub_23F618134();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3B17BC();
  sub_23F61ACA8();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3B1F34();
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F606B54();
  sub_23F3838D8(v0, v14, v15, v13);
  sub_23F617BA0();
  sub_23F61832C();
  sub_23F618218();
  sub_23F383C64(v2, *MEMORY[0x24BE532E8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 104));
  v16 = sub_23F3846CC();
  sub_23F3838D8(v1, v17, v18, v16);
  sub_23F61AC90();
  sub_23F61B134();
  sub_23F61B17C();
  sub_23F366748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, v23, v22);
  sub_23F61A4BC();
  sub_23F5DB644();
  swift_storeEnumTagMultiPayload();
  sub_23F362870();
}

void sub_23F6057E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_23F362C98();
  sub_23F384040();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F517024(v4, v24);
  v6 = MEMORY[0x24BDAC7A8](v5);
  sub_23F606E18(v6, v7, v8, v9, v10, v11, v12, v13, v25);
  sub_23F35D2E8(&qword_256E6FB18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F606C60();
  sub_23F3B19A8();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F606C7C();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F606C44();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23F606B54();
  v22 = sub_23F3838D8(v0, v20, v21, v19);
  sub_23F606D98(v22, *MEMORY[0x24BE522C8]);
  sub_23F606E0C();
  sub_23F606E48();
  sub_23F383C64(v1, *MEMORY[0x24BE53320], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  v23 = sub_23F3846CC();
  sub_23F606C18(v23);
  sub_23F61B134();
  sub_23F606DEC();
  sub_23F366748();
  sub_23F606CBC();
  sub_23F606BDC();
  sub_23F5DB644();
  sub_23F606D58();
  sub_23F362870();
}

void sub_23F605944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23F362C98();
  v38 = v0;
  v39 = v3;
  v5 = v4;
  v42 = v6;
  v7 = sub_23F384040();
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3834D0();
  v37 = v9;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v10);
  v36 = (char *)&v33 - v11;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F383780();
  v14 = v13;
  sub_23F35D2E8(&qword_256E70238);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3B1630();
  v16 = sub_23F61B5D8();
  v17 = MEMORY[0x24BEB8FE0];
  v18 = v16;
  v19 = *(_QWORD *)(v16 - 8);
  sub_23F362850();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v33 - v25;
  v27 = MEMORY[0x24266B710](v24);
  sub_23F6031BC(v5, v27, (uint64_t (*)(_QWORD))v17, v2);
  sub_23F362984();
  sub_23F56E86C();
  sub_23F3747C0(v28, v29, 140, 0xD00000000000001ELL, 0x800000023F63C2C0);
  sub_23F39E4B8(v2, &qword_256E70238);
  if (!v1)
  {
    sub_23F61B134();
    sub_23F61B17C();
    sub_23F366748();
    v34 = v18;
    v35 = v19;
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v26, v18);
    v31 = v40;
    v30 = v41;
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
    v32(v36, v14, v41);
    v32(v37, v39, v30);
    sub_23F61A39C();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v14, v30);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v34);
    sub_23F5DB644();
    swift_storeEnumTagMultiPayload();
  }
  sub_23F362870();
}

void sub_23F605B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  sub_23F362C98();
  v48 = v5;
  v45 = v6;
  v46 = v7;
  v41 = v8;
  v40 = sub_23F606E40();
  v43 = *(_QWORD *)(v40 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  v42 = (uint64_t *)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F39C56C();
  v11 = sub_23F61A1D4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3B17A4();
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v44 = v14;
  v15 = sub_23F384048();
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  v47 = v17;
  v18 = sub_23F606D00();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  sub_23F606D20();
  sub_23F6061D8();
  if (!v1)
  {
    v38 = v0;
    v39 = v4;
    v48 = v19;
    v33 = v3;
    v34 = v15;
    v49 = v18;
    v35 = v2;
    v36 = v11;
    v37 = v12;
    v21 = v42;
    v20 = v43;
    v22 = MEMORY[0x24266B854]();
    v23 = v44;
    v24 = v46;
    sub_23F6031BC(v46, v22, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18], v44);
    sub_23F362984();
    sub_23F56E86C();
    sub_23F374500(v25, v26, 235, 0xD000000000000023, 0x800000023F63C2E0);
    sub_23F39E4B8(v23, &qword_256E701F0);
    sub_23F61832C();
    MEMORY[0x24266B848]();
    v27 = v35;
    sub_23F61A1BC();
    *v21 = v24;
    sub_23F383C64((uint64_t)v21, *MEMORY[0x24BE56E08], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 104));
    v28 = v39;
    sub_23F370344(v27, v47, (uint64_t)v21, v38, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, (uint64_t)v42, v43,
      v44);
    sub_23F383CA8((uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v27, v36);
    sub_23F606C0C(v33);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v41, v28, v49);
    sub_23F5DB644();
    sub_23F606BFC();
  }
  sub_23F362870();
}

void sub_23F605E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_23F362C98();
  v31 = v4;
  v6 = v5;
  v34 = v7;
  v8 = sub_23F384040();
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v33 = v10;
  sub_23F39C56C();
  v32 = sub_23F61A408();
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F384048();
  v16 = MEMORY[0x24BEB9A18];
  v35 = *(_QWORD *)(v15 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F482314();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v28 - v20;
  v22 = MEMORY[0x24266B788](v19);
  sub_23F6031BC(v6, v22, (uint64_t (*)(_QWORD))v16, (uint64_t)v14);
  sub_23F362984();
  sub_23F56E86C();
  sub_23F374500(v23, v24, 271, 0xD00000000000001FLL, 0x800000023F63C310);
  sub_23F39E4B8((uint64_t)v14, &qword_256E701F0);
  if (!v0)
  {
    sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
    sub_23F61BFEC();
    (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v2, v21, v15);
    sub_23F61A3E4();
    sub_23F384918(v33, v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16));
    sub_23F35D2E8(&qword_256E70298);
    v25 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_23F61E7E0;
    v27 = v32;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v26 + v25, v1, v32);
    sub_23F61A114();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v27);
    sub_23F3B1CC8((uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
    sub_23F5DB644();
    swift_storeEnumTagMultiPayload();
  }
  sub_23F362870();
}

#error "23F606190: call analysis failed (funcsize=78)"

void sub_23F6061D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v7[2];

  v0 = sub_23F61B164();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F35D2E8(&qword_256E70228);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61B128();
  sub_23F465D5C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_23F374650(0xD000000000000091, 0x800000023F63C180, 303, 0xD00000000000001FLL, 0x800000023F63C240);
  sub_23F39E4B8((uint64_t)v6, &qword_256E70228);
}

uint64_t sub_23F606318@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v49 = (char *)a2;
  v50 = a1;
  v43 = sub_23F61ABF4();
  v45 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v42 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F61B44C();
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_23F617D08();
  v5 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F61AA14();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F61B2C0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61B2CC();
  v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == *MEMORY[0x24BE56B28])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    v17 = v46;
    v18 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
    v19 = v44;
    v20 = v15;
    v21 = v47;
    v18(v44, v20, v47);
    sub_23F61B41C();
    v22 = sub_23F617CD8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v48);
    if ((v22 & 1) != 0)
    {
      v23 = (uint64_t)v49;
      v18(v49, v19, v21);
      v24 = type metadata accessor for StepResolution();
LABEL_7:
      swift_storeEnumTagMultiPayload();
      v30 = v23;
      v31 = 0;
      v32 = v24;
      return sub_23F36196C(v30, v31, 1, v32);
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v21);
    goto LABEL_13;
  }
  v25 = v45;
  v47 = v5;
  if (v16 == *MEMORY[0x24BE56C58])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    v26 = v9;
    v27 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v28 = v11;
    v27(v11, v15, v8);
    sub_23F61A978();
    v29 = sub_23F617CD8();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v48);
    if ((v29 & 1) != 0)
    {
      v23 = (uint64_t)v49;
      v27(v49, v28, v8);
      v24 = type metadata accessor for StepResolution();
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v8);
LABEL_13:
    v32 = type metadata accessor for StepResolution();
    v30 = (uint64_t)v49;
    v31 = 1;
    return sub_23F36196C(v30, v31, 1, v32);
  }
  if (v16 != *MEMORY[0x24BE56C20])
  {
    v39 = type metadata accessor for StepResolution();
    sub_23F36196C((uint64_t)v49, 1, 1, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
  v33 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v34 = v42;
  v35 = v43;
  v33(v42, v15, v43);
  sub_23F61ABD0();
  v36 = sub_23F617CD8();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v48);
  v37 = (uint64_t)v49;
  if ((v36 & 1) != 0)
  {
    v33(v49, v34, v35);
    v38 = type metadata accessor for StepResolution();
    swift_storeEnumTagMultiPayload();
    v30 = v37;
    v31 = 0;
    v32 = v38;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v34, v35);
    v32 = type metadata accessor for StepResolution();
    v30 = v37;
    v31 = 1;
  }
  return sub_23F36196C(v30, v31, 1, v32);
}

uint64_t sub_23F60675C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F606318(*(_QWORD *)(v1 + 16), a1);
}

void sub_23F606774(_QWORD *a1)
{
  if (!*a1)
  {
    sub_23F35EB74(&qword_256E70F10);
    sub_23F3B2124();
  }
  sub_23F362928();
}

uint64_t *sub_23F6067AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = sub_23F61B92C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F60685C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v3 = sub_23F61B92C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *sub_23F6068A4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23F61B92C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23F60692C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F6044EC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_23F61B92C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_23F6069C4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23F61B92C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23F606A4C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F6044EC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_23F61B92C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23F606AE4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B92C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23F606B54()
{
  return sub_23F617000();
}

uint64_t sub_23F606B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F606B80@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F606B8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 176);
  sub_23F36196C(*(_QWORD *)(v0 - 192), 1, 1, v1);
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 - 184) + 16))(*(_QWORD *)(v0 - 168), *(_QWORD *)(v0 - 112), v1);
}

uint64_t sub_23F606BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v0, v1);
}

uint64_t sub_23F606BDC()
{
  return sub_23F61A4BC();
}

uint64_t sub_23F606BFC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F606C0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23F606C18(uint64_t a1)
{
  uint64_t v1;

  sub_23F36196C(v1, 1, 1, a1);
  return sub_23F61AC90();
}

uint64_t sub_23F606C44()
{
  return sub_23F61ACA8();
}

uint64_t sub_23F606C60()
{
  return sub_23F617D14();
}

uint64_t sub_23F606C7C()
{
  return sub_23F618134();
}

uint64_t sub_23F606C98()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 264) + 8))(v0, *(_QWORD *)(v1 - 256));
}

uint64_t sub_23F606CBC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 - 120) + 16))(*(_QWORD *)(v0 - 136), *(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 112));
}

uint64_t sub_23F606CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 312) + 8))(v1, v0);
}

void sub_23F606CEC()
{
  sub_23F604D3C();
}

uint64_t sub_23F606D00()
{
  return sub_23F61AA14();
}

uint64_t sub_23F606D0C()
{
  return sub_23F61A798();
}

void sub_23F606D3C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F606D58()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F606D68()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F606D78()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F606D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F606D98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104))(v3, a2, v4);
}

uint64_t sub_23F606DA8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23F606DB8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 120);
}

uint64_t sub_23F606DD0()
{
  uint64_t v0;

  type metadata accessor for UserPromptResolver.Resolution(0);
  return v0;
}

uint64_t sub_23F606DEC()
{
  return sub_23F61B17C();
}

uint64_t sub_23F606DFC()
{
  return sub_23F61B140();
}

uint64_t sub_23F606E0C()
{
  return sub_23F617BA0();
}

void sub_23F606E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 144) = (char *)&a9 - v9;
}

uint64_t sub_23F606E2C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F606E38()
{
  uint64_t v0;

  return sub_23F6044EC(*(_QWORD *)(v0 - 96));
}

uint64_t sub_23F606E40()
{
  return sub_23F61B3A4();
}

uint64_t sub_23F606E48()
{
  return sub_23F617D38();
}

uint64_t sub_23F606E54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_23F617BA0();
  v2 = 0;
  v3 = MEMORY[0x24BEE4AF8];
  do
  {
    swift_getKeyPath();
    sub_23F617BA0();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();
    swift_release();
    if (v10)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F376C88();
        v3 = v6;
      }
      v4 = *(_QWORD *)(v3 + 16);
      if (v4 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_23F376C88();
        v3 = v7;
      }
      *(_QWORD *)(v3 + 16) = v4 + 1;
      v5 = v3 + 16 * v4;
      *(_QWORD *)(v5 + 32) = v9;
      *(_QWORD *)(v5 + 40) = v10;
    }
    ++v2;
  }
  while (v1 != v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_23F606F9C(void (*a1)(uint64_t *__return_ptr, _QWORD *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v4 = v3;
  v19 = MEMORY[0x24BEE4AF8];
  sub_23F37BA5C();
  v6 = v19;
  v7 = *(_QWORD *)(a3 + 16);
  sub_23F617BA0();
  if (v7)
  {
    v8 = 0;
    v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v10 = *(v9 - 1);
      v11 = *v9;
      v18[0] = v8;
      v18[1] = v10;
      v18[2] = v11;
      sub_23F617BA0();
      a1(&v17, v18, &v16);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease();
      v12 = v17;
      v19 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      if (v13 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_23F37BA5C();
        v6 = v19;
      }
      ++v8;
      v9 += 2;
      *(_QWORD *)(v6 + 16) = v13 + 1;
      *(_QWORD *)(v6 + 8 * v13 + 32) = v12;
      if (v7 == v8)
        goto LABEL_7;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_23F6070EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = sub_23F35D2E8(&qword_256E7DFE8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)&v26 - v6;
  v7 = sub_23F6174EC();
  v28 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v27 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1;
  v9 = sub_23F617468();
  sub_23F5C71B0(&qword_256E7DFF0, MEMORY[0x24BE68FE0]);
  v10 = sub_23F61C370();
  v31 = MEMORY[0x24BEE4AF8];
  sub_23F37B47C();
  v30 = a1;
  swift_retain();
  v29 = v9;
  sub_23F61C364();
  if (v10 < 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
  if (v10)
  {
    sub_23F5C71B0(&qword_256E7DFF8, MEMORY[0x24BE68FE8]);
    do
    {
      sub_23F61C784();
      if (sub_23F36195C((uint64_t)v5, 1, v7) == 1)
        goto LABEL_20;
      v11 = sub_23F6174E0();
      v13 = v12;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v7);
      v14 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B47C();
        v14 = v31;
      }
      v15 = *(_QWORD *)(v14 + 16);
      if (v15 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_23F37B47C();
        v14 = v31;
      }
      *(_QWORD *)(v14 + 16) = v15 + 1;
      v16 = v14 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v11;
      *(_QWORD *)(v16 + 40) = v13;
    }
    while (--v10);
  }
  sub_23F5C71B0(&qword_256E7DFF8, MEMORY[0x24BE68FE8]);
  v17 = (uint64_t)v26;
  sub_23F61C784();
  if (sub_23F36195C(v17, 1, v7) != 1)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 32);
    do
    {
      v19 = v27;
      v18(v27, v17, v7);
      v20 = sub_23F6174E0();
      v22 = v21;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v7);
      v23 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B47C();
        v23 = v31;
      }
      v24 = *(_QWORD *)(v23 + 16);
      if (v24 >= *(_QWORD *)(v23 + 24) >> 1)
      {
        sub_23F37B47C();
        v23 = v31;
      }
      *(_QWORD *)(v23 + 16) = v24 + 1;
      v25 = v23 + 16 * v24;
      *(_QWORD *)(v25 + 32) = v20;
      *(_QWORD *)(v25 + 40) = v22;
      sub_23F61C784();
    }
    while (sub_23F36195C(v17, 1, v7) != 1);
  }
  swift_release();
  sub_23F5D5400(v17);
}

uint64_t QuotableStringGrammarConverter.init(tokenizer:allowEmptyString:)@<X0>(__int128 *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = sub_23F362678(a1, a3);
  *(_BYTE *)(a3 + 40) = a2;
  return result;
}

uint64_t Tokenizer.tokenize(string:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23F6174F8();
  if (!v0)
  {
    sub_23F6070EC(v2);
    v1 = v3;
    swift_release();
  }
  return v1;
}

uint64_t sub_23F6074F8()
{
  return Tokenizer.tokenize(string:)();
}

uint64_t QuotableStringGrammarConverter.tokenizer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F361418(v1, a1);
}

uint64_t QuotableStringGrammarConverter.allowEmptyString.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t QuotableStringGrammarConverter.makeGrammar(from:identifier:renderingState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;

  v66 = a4;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  v67 = a2;
  v68 = a3;
  if (v6)
  {
    v8 = (uint64_t *)(sub_23F617BA0() + 40);
    do
    {
      v10 = *(v8 - 1);
      v9 = *v8;
      v11 = HIBYTE(*v8) & 0xF;
      if ((*v8 & 0x2000000000000000) == 0)
        v11 = v10 & 0xFFFFFFFFFFFFLL;
      if (v11)
      {
        sub_23F617BA0();
        v69 = v7;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37B47C();
          v7 = v69;
        }
        v12 = *(_QWORD *)(v7 + 16);
        if (v12 >= *(_QWORD *)(v7 + 24) >> 1)
        {
          sub_23F37B47C();
          v7 = v69;
        }
        *(_QWORD *)(v7 + 16) = v12 + 1;
        v13 = v7 + 16 * v12;
        *(_QWORD *)(v13 + 32) = v10;
        *(_QWORD *)(v13 + 40) = v9;
      }
      v8 += 2;
      --v6;
    }
    while (v6);
    a1 = swift_bridgeObjectRelease();
    v15 = v67;
    v14 = v68;
    v4 = v71;
    v5 = v65;
  }
  else
  {
    v14 = a3;
    v15 = a2;
  }
  MEMORY[0x24BDAC7A8](a1);
  v57 = v4;
  v58 = v15;
  v59 = v14;
  v16 = sub_23F606F9C((void (*)(uint64_t *__return_ptr, _QWORD *, uint64_t *))sub_23F60832C, (uint64_t)&v56, v7);
  if (v5)
    return swift_release();
  v18 = v16;
  swift_release();
  v19 = sub_23F606E54(v18);
  v65 = 0;
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v71 = v4;
    v69 = MEMORY[0x24BEE4AF8];
    sub_23F37B92C();
    v21 = v69;
    v64 = v19;
    v22 = (uint64_t *)(v19 + 40);
    do
    {
      v24 = *(v22 - 1);
      v23 = *v22;
      v25 = sub_23F36682C();
      *(_QWORD *)(v25 + 16) = v24;
      *(_QWORD *)(v25 + 24) = v23;
      v69 = v21;
      v27 = *(_QWORD *)(v21 + 16);
      v26 = *(_QWORD *)(v21 + 24);
      sub_23F617BA0();
      if (v27 >= v26 >> 1)
      {
        sub_23F37B92C();
        v21 = v69;
      }
      v22 += 2;
      *(_QWORD *)(v21 + 16) = v27 + 1;
      *(_QWORD *)(v21 + 8 * v27 + 32) = v25 | 0x4000000000000000;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    v15 = v67;
    v14 = v68;
    v4 = v71;
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
  }
  if ((*(_BYTE *)(v4 + 40) & 1) != 0)
  {
    v28 = sub_23F36682C();
    *(_QWORD *)(v28 + 16) = 0;
    *(_QWORD *)(v28 + 24) = 0xE000000000000000;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_56;
    while (1)
    {
      v29 = *(_QWORD *)(v21 + 16);
      if (v29 >= *(_QWORD *)(v21 + 24) >> 1)
      {
        sub_23F6086B4();
        v21 = v55;
      }
      v64 = v18;
      *(_QWORD *)(v21 + 16) = v29 + 1;
      *(_QWORD *)(v21 + 8 * v29 + 32) = v28;
LABEL_30:
      v69 = v15;
      v70 = v14;
      sub_23F617BA0();
      sub_23F61C280();
      v31 = v69;
      v30 = v70;
      v32 = sub_23F36682C();
      *(_QWORD *)(v32 + 16) = v21;
      v71 = v32 | 0x8000000000000000;
      v33 = sub_23F36682C();
      sub_23F35D2E8(&qword_256E70070);
      v34 = sub_23F36682C();
      *(_OWORD *)(v34 + 16) = xmmword_23F61EBC0;
      v35 = sub_23F36682C();
      *(_QWORD *)(v35 + 16) = 34;
      *(_QWORD *)(v35 + 24) = 0xE100000000000000;
      *(_QWORD *)(v34 + 32) = v35;
      v36 = sub_23F36682C();
      *(_QWORD *)(v36 + 16) = v31;
      *(_QWORD *)(v36 + 24) = v30;
      *(_QWORD *)(v34 + 40) = v36 | 0x4000000000000000;
      v37 = v33;
      v38 = sub_23F36682C();
      *(_QWORD *)(v38 + 16) = 34;
      *(_QWORD *)(v38 + 24) = 0xE100000000000000;
      v39 = v30;
      *(_QWORD *)(v34 + 48) = v38;
      *(_QWORD *)(v33 + 16) = v34;
      sub_23F35D2E8(&qword_256E70310);
      v40 = sub_23F36682C();
      *(_OWORD *)(v40 + 16) = xmmword_23F61E7E0;
      *(_QWORD *)(v40 + 32) = v31;
      *(_QWORD *)(v40 + 40) = v30;
      v63 = v40;
      *(_QWORD *)(v40 + 48) = v71;
      v41 = v64;
      v71 = *(_QWORD *)(v64 + 16);
      if (!v71)
        break;
      v18 = v33 & 0x3FFFFFFFFFFFFFFFLL;
      v60 = v32 & 0x3FFFFFFFFFFFFFFFLL;
      v61 = v33;
      swift_retain();
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F3E0254();
      v62 = v39;
      sub_23F3E0254();
      swift_retain();
      v14 = 0;
      v42 = MEMORY[0x24BEE4AF8];
      while (1)
      {
        v28 = *(_QWORD *)(v41 + 8 * v14 + 32);
        v15 = *(_QWORD *)(v28 + 16);
        v43 = *(_QWORD *)(v42 + 16);
        if (__OFADD__(v43, v15))
          break;
        sub_23F617BA0();
        if (!swift_isUniquelyReferenced_nonNull_native() || v43 + v15 > *(_QWORD *)(v42 + 24) >> 1)
        {
          sub_23F376C6C();
          v42 = v44;
        }
        if (*(_QWORD *)(v28 + 16))
        {
          v45 = *(_QWORD *)(v42 + 16);
          if ((*(_QWORD *)(v42 + 24) >> 1) - v45 < v15)
            goto LABEL_54;
          v46 = v42 + 24 * v45 + 32;
          if (v28 + 32 < v46 + 24 * v15 && v46 < v28 + 32 + 24 * v15)
          {
            LODWORD(v59) = 0;
            v58 = 1092;
            LOBYTE(v57) = 2;
            result = sub_23F61CA9C();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v15)
          {
            v48 = *(_QWORD *)(v42 + 16);
            v49 = __OFADD__(v48, v15);
            v50 = v48 + v15;
            if (v49)
              goto LABEL_55;
            *(_QWORD *)(v42 + 16) = v50;
          }
        }
        else if (v15)
        {
          goto LABEL_53;
        }
        swift_bridgeObjectRelease();
        if (v71 == ++v14)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v51 = v68;
          v37 = v61;
          goto LABEL_50;
        }
      }
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      sub_23F6086B4();
      v21 = v54;
    }
    swift_retain();
    v51 = v68;
    sub_23F3E0254();
    sub_23F3E0254();
    swift_retain();
LABEL_50:
    swift_bridgeObjectRelease();
    v69 = v63;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F385E18();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    result = swift_bridgeObjectRelease();
    v52 = v69;
    v53 = v66;
    *v66 = v67;
    v53[1] = v51;
    v53[2] = v37 | 0xC000000000000000;
    v53[3] = v52;
  }
  else
  {
    if (*(_QWORD *)(v21 + 16))
    {
      v64 = v18;
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F608394();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_23F607BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  sub_23F61C280();
  sub_23F61CC1C();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  v10 = sub_23F607CC8(v8, v9, a2, a3);
  result = swift_bridgeObjectRelease();
  if (v5)
    *a4 = v5;
  else
    *a5 = v10;
  return result;
}

uint64_t sub_23F607CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;

  v10 = v4[3];
  v11 = v4[4];
  sub_23F35EA9C(v4, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, a2, v10, v11);
  if (!v5)
  {
    v41 = a3;
    v42 = a4;
    v13 = *(_QWORD *)(v12 + 16);
    v14 = MEMORY[0x24BEE4AF8];
    if (v13)
    {
      v15 = (uint64_t *)(v12 + 40);
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        v18 = HIBYTE(*v15) & 0xF;
        if ((*v15 & 0x2000000000000000) == 0)
          v18 = v16 & 0xFFFFFFFFFFFFLL;
        if (v18)
        {
          sub_23F617BA0();
          *(_QWORD *)&v43 = v14;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F37B47C();
            v14 = v43;
          }
          v19 = *(_QWORD *)(v14 + 16);
          if (v19 >= *(_QWORD *)(v14 + 24) >> 1)
          {
            sub_23F37B47C();
            v14 = v43;
          }
          *(_QWORD *)(v14 + 16) = v19 + 1;
          v20 = v14 + 16 * v19;
          *(_QWORD *)(v20 + 32) = v16;
          *(_QWORD *)(v20 + 40) = v17;
        }
        v15 += 2;
        --v13;
      }
      while (v13);
    }
    swift_bridgeObjectRelease();
    v21 = sub_23F4F35FC(v14);
    v22 = MEMORY[0x24BEE4AF8];
    v45 = MEMORY[0x24BEE4AF8];
    v23 = *(_QWORD *)(v21 + 16);
    if (v23)
    {
      sub_23F617BA0();
      v24 = (_QWORD *)(v21 + 48);
      do
      {
        v25 = *v24;
        v43 = *((_OWORD *)v24 - 1);
        v44 = v25;
        sub_23F617BA0();
        sub_23F608078(&v45, (uint64_t)&v43, v41, v42);
        swift_bridgeObjectRelease();
        v24 += 3;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease_n();
      v10 = v45;
    }
    else
    {
      swift_bridgeObjectRelease();
      v10 = MEMORY[0x24BEE4AF8];
    }
    v26 = *(_QWORD *)(v10 + 16);
    if (v26 > 1)
    {
      *(_QWORD *)&v43 = v22;
      sub_23F617BA0();
      sub_23F37B92C();
      v27 = v43;
      v28 = (uint64_t *)(v10 + 40);
      do
      {
        v29 = *(v28 - 1);
        v30 = *v28;
        v31 = swift_allocObject();
        *(_QWORD *)(v31 + 16) = v29;
        *(_QWORD *)(v31 + 24) = v30;
        *(_QWORD *)&v43 = v27;
        v32 = *(_QWORD *)(v27 + 16);
        v33 = *(_QWORD *)(v27 + 24);
        sub_23F617BA0();
        if (v32 >= v33 >> 1)
        {
          sub_23F37B92C();
          v27 = v43;
        }
        v28 += 3;
        *(_QWORD *)(v27 + 16) = v32 + 1;
        *(_QWORD *)(v27 + 8 * v32 + 32) = v31 | 0x4000000000000000;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = v27;
      v35 = v34 | 0x8000000000000000;
      sub_23F617BA0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F376C6C();
        v10 = v39;
      }
      v36 = *(_QWORD *)(v10 + 16);
      if (v36 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_23F376C6C();
        v10 = v40;
      }
      *(_QWORD *)(v10 + 16) = v36 + 1;
      v37 = (_QWORD *)(v10 + 24 * v36);
      v37[4] = v41;
      v37[5] = v42;
      v37[6] = v35;
    }
  }
  return v10;
}

double sub_23F608038@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v5;
  uint64_t v6;

  sub_23F3F1614(*a1, &v5);
  v3 = v6;
  result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_QWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_23F608078(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = v8;
  v10 = *(_QWORD *)(*a1 + 16);
  if (v10)
  {
    v11 = *a1 + 24 * v10;
    v24 = *(_QWORD *)(v11 + 16);
    v25 = *(_QWORD *)(v11 + 8);
    v12 = swift_allocObject();
    sub_23F35D2E8(&qword_256E70070);
    v26 = a3;
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_23F61E980;
    *(_QWORD *)(v13 + 32) = v9;
    v14 = swift_allocObject();
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_23F61E980;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v7;
    *(_QWORD *)(v16 + 24) = v8;
    *(_QWORD *)(v15 + 32) = v16;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v25;
    *(_QWORD *)(v17 + 24) = v24;
    *(_QWORD *)(v15 + 40) = v17 | 0x4000000000000000;
    *(_QWORD *)(v14 + 16) = v15;
    *(_QWORD *)(v13 + 40) = v14 | 0xC000000000000000;
    *(_QWORD *)(v12 + 16) = v13;
    a3 = v26;
    v9 = v12 | 0x8000000000000000;
    sub_23F617BA0();
    sub_23F617BA0();
  }
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F61C280();
  sub_23F61CC1C();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  v18 = a3;
  v19 = a4;
  swift_retain();
  sub_23F37698C();
  v20 = *(_QWORD *)(*a1 + 16);
  sub_23F376AE8();
  v21 = *a1;
  *(_QWORD *)(v21 + 16) = v20 + 1;
  v22 = (_QWORD *)(v21 + 24 * v20);
  v22[4] = v18;
  v22[5] = v19;
  v22[6] = v9;
  result = swift_release();
  *a1 = v21;
  return result;
}

uint64_t sub_23F6082A8()
{
  sub_23F60862C();
  return sub_23F61CCAC();
}

uint64_t sub_23F6082D0()
{
  sub_23F60862C();
  return sub_23F61CCA0();
}

unint64_t sub_23F6082F8()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_23F608314@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return QuotableStringGrammarConverter.makeGrammar(from:identifier:renderingState:)(*a1, a2, a3, a4);
}

uint64_t sub_23F60832C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_23F607BD8(a1, *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), a2, a3);
}

uint64_t sub_23F60834C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F608370()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_23F608394()
{
  unint64_t result;

  result = qword_256E7F790;
  if (!qword_256E7F790)
  {
    result = MEMORY[0x242670A44](&unk_23F633438, &type metadata for QuotableStringGrammarConverter.GeneratorError);
    atomic_store(result, (unint64_t *)&qword_256E7F790);
  }
  return result;
}

uint64_t dispatch thunk of StringTokenizing.tokenize(string:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t initializeWithCopy for QuotableStringGrammarConverter(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for QuotableStringGrammarConverter(uint64_t a1, uint64_t a2)
{
  sub_23F361AD0((uint64_t *)a1, (uint64_t *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for QuotableStringGrammarConverter(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for QuotableStringGrammarConverter(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuotableStringGrammarConverter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuotableStringGrammarConverter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QuotableStringGrammarConverter()
{
  return &type metadata for QuotableStringGrammarConverter;
}

uint64_t storeEnumTagSinglePayload for QuotableStringGrammarConverter.GeneratorError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F60858C + 4 * asc_23F633300[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F6085AC + 4 * byte_23F633305[v4]))();
}

_BYTE *sub_23F60858C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F6085AC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F6085B4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F6085BC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F6085C4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F6085CC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for QuotableStringGrammarConverter.GeneratorError()
{
  return &type metadata for QuotableStringGrammarConverter.GeneratorError;
}

unint64_t sub_23F6085F0()
{
  unint64_t result;

  result = qword_256E7F7B0;
  if (!qword_256E7F7B0)
  {
    result = MEMORY[0x242670A44](&unk_23F633410, &type metadata for QuotableStringGrammarConverter.GeneratorError);
    atomic_store(result, (unint64_t *)&qword_256E7F7B0);
  }
  return result;
}

unint64_t sub_23F60862C()
{
  unint64_t result;

  result = qword_256E7F7B8;
  if (!qword_256E7F7B8)
  {
    result = MEMORY[0x242670A44](&unk_23F633390, &type metadata for QuotableStringGrammarConverter.GeneratorError);
    atomic_store(result, (unint64_t *)&qword_256E7F7B8);
  }
  return result;
}

unint64_t sub_23F60866C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E7F7C0;
  if (!qword_256E7F7C0)
  {
    v1 = sub_23F35EB74(&qword_256E70FE8);
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_256E7F7C0);
  }
  return result;
}

void sub_23F6086B4()
{
  sub_23F377ABC();
}

uint64_t sub_23F6086C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v22 = a3;
  v21 = sub_23F6184B8();
  v7 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v24 = MEMORY[0x24BEE4AF8];
    sub_23F617BA0();
    sub_23F37C298();
    v11 = v24;
    v20 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v12 = a1 + v20;
    v19 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_23F617BA0();
      sub_23F608D9C(v12, a2, v22);
      if (v4)
        break;
      v23 = 0;
      v13 = v7;
      v24 = v11;
      v14 = *(_QWORD *)(v11 + 16);
      if (v14 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_23F37C298();
        v11 = v24;
      }
      *(_QWORD *)(v11 + 16) = v14 + 1;
      v15 = v19;
      v16 = v11 + v20 + v14 * v19;
      v7 = v13;
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v16, v9, v21);
      v12 += v15;
      --v10;
      v4 = v23;
      if (!v10)
      {
        swift_bridgeObjectRelease_n();
        return v11;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v11;
}

uint64_t sub_23F608874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = a2;
  v15 = sub_23F6184B8();
  v4 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_23F37C298();
    v8 = v17;
    v14 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v9 = a1 + v14;
    v10 = *(_QWORD *)(v4 + 72);
    while (1)
    {
      sub_23F609C84(v9, v16);
      if (v2)
        break;
      v17 = v8;
      v11 = *(_QWORD *)(v8 + 16);
      if (v11 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_23F37C298();
        v8 = v17;
      }
      *(_QWORD *)(v8 + 16) = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v14 + v11 * v10, v6, v15);
      v9 += v10;
      if (!--v7)
        return v8;
    }
    swift_release();
  }
  return v8;
}

uint64_t sub_23F6089C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v7 = v6;
  v31 = sub_23F6184B8();
  MEMORY[0x24BDAC7A8](v31);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 16);
  v18 = MEMORY[0x24BEE4AF8];
  if (v17)
  {
    v32 = a2;
    v33 = MEMORY[0x24BEE4AF8];
    v19 = v14;
    swift_retain();
    swift_retain();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F37C298();
    v20 = v32;
    v18 = v33;
    v27 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v28 = a4;
    v21 = a1 + v27;
    v29 = a5;
    v30 = v19;
    v26 = *(_QWORD *)(v19 + 72);
    while (1)
    {
      swift_retain();
      swift_retain();
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F60A92C(v21, v20, a3, a4, a5, a6);
      if (v7)
        break;
      v32 = 0;
      v33 = v18;
      v22 = a3;
      v23 = *(_QWORD *)(v18 + 16);
      if (v23 >= *(_QWORD *)(v18 + 24) >> 1)
      {
        sub_23F37C298();
        v18 = v33;
      }
      *(_QWORD *)(v18 + 16) = v23 + 1;
      v24 = v26;
      (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v18 + v27 + v23 * v26, v16, v31);
      v21 += v24;
      --v17;
      a3 = v22;
      a4 = v28;
      a5 = v29;
      v7 = v32;
      if (!v17)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  return v18;
}

uint64_t sub_23F608C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a2;
  v19 = a3;
  v17 = sub_23F6184B8();
  v5 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v20 = MEMORY[0x24BEE4AF8];
    sub_23F37C298();
    v9 = v20;
    v16 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v10 = a1 + v16;
    v15 = *(_QWORD *)(v5 + 72);
    while (1)
    {
      sub_23F60BE3C(v18, v19);
      if (v3)
        break;
      v20 = v9;
      v11 = *(_QWORD *)(v9 + 16);
      if (v11 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_23F37C298();
        v9 = v20;
      }
      *(_QWORD *)(v9 + 16) = v11 + 1;
      v12 = v15;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v16 + v11 * v15, v7, v17);
      v10 += v12;
      if (!--v8)
        return v9;
    }
    swift_release();
  }
  return v9;
}

void sub_23F608D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(NSObject *, uint64_t, uint64_t);
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  uint64_t *v81;
  NSObject *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(NSObject *, uint64_t, uint64_t);
  uint64_t v87;
  os_log_type_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char *v98;
  void (*v99)(uint64_t, char *, uint64_t);
  char v100;
  _QWORD *v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  void (*v107)(uint64_t, char *, uint64_t);
  uint64_t v108;
  char *v109;
  char v110;
  char *v111;
  uint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (*v132)(uint64_t, uint64_t, uint64_t);
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t (*v151)(uint64_t, uint64_t, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t (*v158)(uint64_t, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t (*v165)(uint64_t, _QWORD);
  int v166;
  uint64_t v167[3];
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  NSObject *v179;
  void (*v180)(NSObject *, uint64_t, uint64_t);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t *v185;
  NSObject *v186;
  NSObject *v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;

  sub_23F362C98();
  a19 = v25;
  a20 = v26;
  v191 = v22;
  v189 = v27;
  v29 = v28;
  v31 = v30;
  v183 = v32;
  v33 = sub_23F3B1728();
  v177 = *(_QWORD *)(v33 - 8);
  v178 = v33;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F36285C();
  v182 = v35;
  sub_23F35D2E8(&qword_256E6FD18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v36);
  v38 = sub_23F60ECD8(v37, v167[0]);
  sub_23F383E7C(v38, (uint64_t)&a13);
  v167[1] = v39;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v40);
  v171 = sub_23F60ED7C((uint64_t)v167 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v169 = *(_QWORD *)(v171 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F36285C();
  v44 = sub_23F60ED34(v43);
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v187 = ((char *)v167 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v47);
  v179 = ((char *)v167 - v48);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F3838E4();
  v181 = v50;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v51);
  v176 = (char *)v167 - v52;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v53);
  v172 = (uint64_t)v167 - v54;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v55);
  v173 = (uint64_t)v167 - v56;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F362D78();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F60EE30();
  MEMORY[0x24BDAC7A8](v59);
  v175 = (uint64_t)v167 - v60;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F4DD0D4();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F4DD0C0();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F3838E4();
  v188 = v64;
  sub_23F383588();
  v66 = MEMORY[0x24BDAC7A8](v65);
  sub_23F60EF9C(v66, v67, v68, v69, v70, v71, v72, v73, v167[0]);
  v74 = *(void (**)(NSObject *, uint64_t, uint64_t))(v45 + 16);
  sub_23F60EF6C();
  v186 = v31;
  sub_23F38F9CC((uint64_t)v20, (uint64_t)v31);
  v75 = (*(uint64_t (**)(char **, uint64_t))(v45 + 88))(v20, v44);
  v76 = *MEMORY[0x24BE54960];
  v192 = v29;
  v180 = v74;
  if ((_DWORD)v75 == v76)
  {
    sub_23F383D74((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 96));
    sub_23F3E0254();
    sub_23F3668FC();
    v77 = v190;
    v78 = v191;
    v79 = v45;
LABEL_5:
    v80 = v186;
LABEL_6:
    v81 = v188;
    goto LABEL_7;
  }
  v184 = v45;
  v174 = v44;
  if ((_DWORD)v75 == *MEMORY[0x24BE54918])
  {
    v79 = v184;
    sub_23F60EC9C();
    sub_23F3E0254();
    sub_23F3668FC();
    v77 = v190;
    v78 = v191;
    goto LABEL_5;
  }
  v81 = v188;
  if ((_DWORD)v75 == *MEMORY[0x24BE549A0])
  {
    sub_23F60EC9C();
    __asm { BR              X10 }
  }
  v96 = (_DWORD)v75 == *MEMORY[0x24BE54980];
  HIDWORD(v167[0]) = v75;
  if (v96)
  {
    v79 = v184;
    sub_23F60EC9C();
    v97 = sub_23F35D2E8(&qword_256E7F8A0);
    v98 = (char *)sub_23F3B1858();
    v99 = (void (*)(uint64_t, char *, uint64_t))v74;
    v100 = *v98;
    v99(v21, &v98[*(int *)(v97 + 48)], v44);
    v101 = (_QWORD *)sub_23F60EF18();
    *v102 = v100;
    v103 = v192;
    sub_23F60ECB0();
    v104 = v191;
    sub_23F608D9C(v21, v103, v189);
    v78 = v104;
    if (v104)
    {
      sub_23F383D74(v21, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
      swift_deallocBox();
LABEL_21:
      sub_23F3E01D0();
      sub_23F3668FC();
      goto LABEL_24;
    }
    sub_23F383D74(v21, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
    v81 = v188;
    goto LABEL_32;
  }
  if ((_DWORD)v75 == *MEMORY[0x24BE54970])
  {
    v105 = v174;
    sub_23F383CA8((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v184 + 96));
    v106 = *v20;
    v107 = (void (*)(uint64_t, char *, uint64_t))v74;
    v108 = sub_23F35D2E8(&qword_256E791A8);
    v176 = v106;
    v109 = (char *)sub_23F3B1858();
    v110 = *v109;
    v111 = &v109[*(int *)(v108 + 64)];
    v112 = v175;
    v107(v175, &v109[*(int *)(v108 + 48)], v105);
    v107(v24, v111, v105);
    v173 = sub_23F60F04C();
    v114 = v113;
    v115 = (uint64_t)&v113[*(int *)(v108 + 48)];
    *v113 = v110;
    v116 = v192;
    sub_23F60ECB0();
    v117 = v189;
    v118 = v191;
    sub_23F608D9C(v112, v116, v189);
    if (v118)
    {
      v119 = *(void (**)(uint64_t, uint64_t))(v184 + 8);
      v120 = v174;
      v119(v24, v174);
      v119(v175, v120);
LABEL_50:
      swift_deallocBox();
      sub_23F3E01D0();
      sub_23F60EF64();
      goto LABEL_24;
    }
    v143 = &v114[*(int *)(v108 + 64)];
    sub_23F383EB0();
    sub_23F60EF28(v24, v116, v117);
    v78 = (uint64_t)v143;
    if (v143)
    {
      sub_23F60F034(v24);
      sub_23F60F034(v175);
      sub_23F60F034(v115);
      goto LABEL_50;
    }
    v152 = v24;
    v79 = v184;
    v44 = v174;
    sub_23F3B21DC(v152);
    sub_23F3B21DC(v175);
    *v81 = v173;
    goto LABEL_59;
  }
  v78 = v191;
  if ((_DWORD)v75 != *MEMORY[0x24BE54938])
  {
    v79 = v184;
    if ((_DWORD)v75 == *MEMORY[0x24BE54968])
    {
      sub_23F60EC9C();
      v133 = *v20;
      v134 = sub_23F35D2E8(&qword_256E7F898);
      v176 = v133;
      v135 = sub_23F3B1858();
      v136 = v135 + *(int *)(v134 + 48);
      v137 = v173;
      sub_23F38F9CC(v173, v135);
      v138 = v172;
      sub_23F38F9CC(v172, v136);
      v175 = sub_23F60EF18();
      v140 = v139;
      v141 = v192;
      sub_23F60ECB0();
      v142 = v189;
      sub_23F60EF28(v137, v141, v189);
      if (v22)
      {
        sub_23F3B21DC(v138);
        sub_23F3B21DC(v137);
        goto LABEL_50;
      }
      v153 = v175;
      v154 = v140 + *(int *)(v134 + 48);
      sub_23F383738();
      sub_23F60EF28(v138, v141, v142);
      v78 = v154;
      v155 = v138;
      if (v154)
      {
        sub_23F60EDD0(v138);
        sub_23F60EDD0(v173);
        sub_23F60EDD0(v140);
        goto LABEL_50;
      }
      v79 = v184;
      v44 = v174;
      sub_23F3B21DC(v155);
      sub_23F3B21DC(v173);
      v81 = v188;
      *v188 = v153;
LABEL_59:
      v156 = sub_23F60EEB4();
      sub_23F38431C(v156, v157, v158);
      goto LABEL_34;
    }
    if ((_DWORD)v75 != *MEMORY[0x24BE54948])
    {
      v44 = v174;
      v77 = v190;
      if ((_DWORD)v75 == *MEMORY[0x24BE54940])
      {
        sub_23F383D74((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v184 + 96));
        sub_23F3E0254();
        sub_23F3668FC();
        v80 = v186;
        goto LABEL_7;
      }
      v80 = v186;
      if ((_DWORD)v75 == *MEMORY[0x24BE54950]
        || (_DWORD)v75 == *MEMORY[0x24BE54998]
        || (_DWORD)v75 == *MEMORY[0x24BE54990]
        || (_DWORD)v75 == *MEMORY[0x24BE549A8]
        || (_DWORD)v75 == *MEMORY[0x24BE54910])
      {
        sub_23F383D74((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v184 + 96));
        sub_23F3E0254();
        sub_23F3668FC();
        goto LABEL_7;
      }
      if ((_DWORD)v75 == *MEMORY[0x24BE54920]
        || (v159 = v75, (_DWORD)v75 == *MEMORY[0x24BE54958])
        || (_DWORD)v75 == *MEMORY[0x24BE54988]
        || (_DWORD)v75 == *MEMORY[0x24BE54978])
      {
        v79 = v184;
        sub_23F60EC9C();
        sub_23F3E0254();
        sub_23F3668FC();
        v77 = v190;
        v78 = v191;
      }
      else
      {
        if ((_DWORD)v75 == *MEMORY[0x24BE54930])
        {
          (*(void (**)(char **, uint64_t))(v184 + 96))(v20, v174);
          v160 = sub_23F3B1858();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v169 + 16))(v168, v160, v171);
          v161 = sub_23F60EF18();
          v162 = v192;
          sub_23F3E0254();
          sub_23F6184A0();
          v163 = sub_23F618488();
          sub_23F383EB0();
          v164 = v191;
          sub_23F60CF54(v163, v162, v189);
          v78 = v164;
          if (v164)
          {
            sub_23F362984();
            sub_23F384430();
            sub_23F3841CC(v170, v165);
            sub_23F3841CC(v168, *(uint64_t (**)(uint64_t, _QWORD))(v169 + 8));
            swift_deallocBox();
            goto LABEL_21;
          }
          sub_23F362984();
          sub_23F60EF20();
          sub_23F3841CC(v168, *(uint64_t (**)(uint64_t, _QWORD))(v169 + 8));
          v81 = v188;
          *v188 = v161;
          v79 = v184;
          v132 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v184 + 104);
          v130 = (uint64_t)v81;
          v131 = v159;
          v44 = v174;
LABEL_33:
          sub_23F38431C(v130, v131, v132);
LABEL_34:
          swift_release();
          goto LABEL_35;
        }
        if ((_DWORD)v75 != *MEMORY[0x24BE549B0])
        {
          v166 = *MEMORY[0x24BE54928];
          sub_23F3E0254();
          v96 = (_DWORD)v159 == v166;
          v77 = v190;
          v78 = v191;
          v44 = v174;
          v79 = v184;
          v80 = v186;
          v81 = v188;
          if (!v96)
          {
            sub_23F60CB20((uint64_t)v186, (uint64_t)v188);
            sub_23F383D74((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
            goto LABEL_8;
          }
LABEL_7:
          sub_23F38F9CC((uint64_t)v81, (uint64_t)v80);
LABEL_8:
          v82 = v187;
          goto LABEL_9;
        }
        sub_23F3E0254();
        v77 = v190;
        v78 = v191;
        v44 = v174;
        v79 = v184;
      }
      v80 = v186;
      goto LABEL_6;
    }
    sub_23F60EC9C();
    v144 = *v20;
    v146 = *((_QWORD *)v144 + 2);
    v145 = *((_QWORD *)v144 + 3);
    v101 = (_QWORD *)sub_23F36682C();
    v101[2] = v146;
    v101[3] = v145;
    sub_23F60ECB0();
    sub_23F383738();
    sub_23F60E0EC();
    if (v78)
    {
      sub_23F362984();
      sub_23F60ED14();
      goto LABEL_21;
    }
    v101[4] = v147;
LABEL_32:
    *v81 = (uint64_t)v101;
    v130 = sub_23F60EEB4();
    goto LABEL_33;
  }
  v79 = v184;
  v121 = v174;
  sub_23F383CA8((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v184 + 96));
  v122 = *v20;
  v123 = sub_23F35D2E8(&qword_256E70A48);
  v176 = v122;
  v124 = sub_23F60EEAC();
  v125 = (uint64_t *)(v124 + *(int *)(v123 + 48));
  v126 = v125[1];
  v173 = *v125;
  sub_23F54DE60(v23, v124);
  v175 = sub_23F60F04C();
  v128 = v127;
  v129 = v192;
  sub_23F60ECB0();
  sub_23F383738();
  sub_23F60EF28(v23, v129, v189);
  v78 = v22;
  if (v22)
  {
    sub_23F383CA8(v23, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
    sub_23F362984();
    goto LABEL_50;
  }
  v148 = (_QWORD *)(v128 + *(int *)(v123 + 48));
  sub_23F383CA8(v23, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
  *v148 = v173;
  v148[1] = v126;
  v81 = v188;
  *v188 = v175;
  v149 = sub_23F60EEB4();
  sub_23F383C64(v149, v150, v151);
  sub_23F60EF64();
  v44 = v121;
LABEL_35:
  v80 = v186;
  v82 = v187;
  v77 = v190;
LABEL_9:
  sub_23F38F9CC(v77, (uint64_t)v81);
  v83 = v185;
  sub_23F51A1E8(v77, v192, v185);
  if (v78)
  {
    sub_23F383D74(v77, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
    sub_23F3E01D0();
  }
  else
  {
    if (sub_23F36195C((uint64_t)v83, 1, v44) == 1)
    {
      sub_23F3CFCB0((uint64_t)v83, &qword_256E6FD18);
    }
    else
    {
      v184 = v79;
      v84 = v181;
      sub_23F38F9CC(v181, (uint64_t)v83);
      v85 = v182;
      sub_23F619088();
      v87 = (uint64_t)v179;
      v86 = v180;
      v180(v179, (uint64_t)v80, v44);
      v86(v82, v84, v44);
      sub_23F619E8C();
      v88 = sub_23F3B1BD4();
      if (sub_23F3D9BD4(v88))
      {
        sub_23F366668();
        LODWORD(v188) = (_DWORD)v80;
        v189 = sub_23F60ED24();
        LODWORD(v80->isa) = 136315394;
        sub_23F3EC80C();
        v186 = v82;
        sub_23F60EEFC();
        v89 = sub_23F61CC1C();
        sub_23F3ECBE4(v89, v90);
        v193 = v91;
        v191 = 0;
        sub_23F61C790();
        sub_23F362984();
        (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v87, v44);
        sub_23F60EFB0();
        v185 = (uint64_t *)((char *)&v80[1].isa + 6);
        v92 = (uint64_t)v187;
        sub_23F60EEFC();
        v93 = sub_23F61CC1C();
        sub_23F3ECBE4(v93, v94);
        sub_23F60EF88(v95);
        sub_23F61C790();
        sub_23F362984();
        sub_23F60EDD0(v92);
        sub_23F60ED70(&dword_23F35A000, v186, (os_log_type_t)v188, "[PromptMapperResolver] Modified program AST node: %s -> %s");
        swift_arrayDestroy();
        sub_23F366530();
      }

      sub_23F3B1F64((uint64_t)v82);
      sub_23F3B1F64(v87);
      (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v85, v178);
      sub_23F3B1F64(v190);
      v77 = v84;
    }
    sub_23F38F9CC(v183, v77);
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
  sub_23F362870();
}

void sub_23F609C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  NSObject *v50;
  int v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _DWORD *v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  uint64_t v60;
  char *v61;
  char v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  NSObject *v69;
  uint64_t v70;
  char *v71;
  char v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t *v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  char *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  void (*v121)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t (*v138)(uint64_t, _QWORD);
  uint64_t v139;
  BOOL v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  NSObject *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t (*v160)(uint64_t, uint64_t);
  _QWORD *v161;
  _DWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;

  sub_23F362C98();
  v165 = v5;
  v166 = v1;
  v7 = v6;
  v156 = v8;
  v9 = sub_23F3B1728();
  v152 = *(_QWORD *)(v9 - 8);
  v153 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  v162 = v11;
  sub_23F35D2E8(&qword_256E6FD18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  v144 = sub_23F60ECD8(v13, v141);
  v143 = *(_QWORD *)(v144 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  v147 = v15;
  v148 = sub_23F6184AC();
  v146 = *(_QWORD *)(v148 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  v18 = sub_23F60ED34(v17);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v155 = (char *)&v141 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v21);
  v158 = (char *)&v141 - v22;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3838E4();
  v163 = v24;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F4DD0C0();
  MEMORY[0x24BDAC7A8](v26);
  v149 = (uint64_t)&v141 - v27;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v28);
  v150 = (uint64_t)&v141 - v29;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F60EFF0();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F60ED44();
  v33 = MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v141 - v34;
  MEMORY[0x24BDAC7A8](v33);
  sub_23F4DD0D4();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F60EE30();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3838E4();
  v161 = v38;
  sub_23F383588();
  v40 = MEMORY[0x24BDAC7A8](v39);
  sub_23F60EF9C(v40, v41, v42, v43, v44, v45, v46, v47, v141);
  v48 = *(NSObject **)(v19 + 16);
  v160 = v7;
  v49 = v7;
  v50 = v48;
  ((void (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))v48)(v4, v49, v18);
  v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 88))(v4, v18);
  v52 = v51 == *MEMORY[0x24BE54960] || v51 == *MEMORY[0x24BE54918];
  if (v52)
    goto LABEL_6;
  v157 = v19;
  v151 = v18;
  v52 = v51 == *MEMORY[0x24BE549A0];
  v142 = v51;
  if (v52)
  {
    v154 = v50;
    sub_23F3D98EC(v4, *(uint64_t (**)(uint64_t, uint64_t))(v157 + 96));
    __asm { BR              X10 }
  }
  if (v51 == *MEMORY[0x24BE54980])
  {
    v19 = v157;
    v18 = v151;
    sub_23F3D98EC(v4, *(uint64_t (**)(uint64_t, uint64_t))(v157 + 96));
    v59 = v50;
    v60 = sub_23F35D2E8(&qword_256E7F8A0);
    v61 = (char *)sub_23F3B1858();
    v62 = *v61;
    sub_23F60EEE4(v0, (uint64_t)&v61[*(int *)(v60 + 48)]);
    v55 = (_QWORD *)sub_23F60EDC8();
    *v63 = v62;
    v64 = v166;
    sub_23F609C84(v0, v165);
    v53 = v64;
    if (v64)
    {
      sub_23F3D98EC(v0, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
      sub_23F60F044();
      goto LABEL_38;
    }
    v154 = v59;
    sub_23F3D98EC(v0, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    sub_23F60EED4();
    sub_23F60ECB8(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v19 + 104));
    goto LABEL_23;
  }
  if (v51 == *MEMORY[0x24BE54970])
  {
    v65 = sub_23F60F010();
    v66 = v151;
    sub_23F383CA8(v65, v67);
    v68 = *(_QWORD *)v4;
    v69 = v50;
    v70 = sub_23F35D2E8(&qword_256E791A8);
    v150 = v68;
    v71 = (char *)sub_23F60EEAC();
    v72 = *v71;
    v73 = (uint64_t)&v71[*(int *)(v70 + 64)];
    sub_23F54DE60((uint64_t)v35, (uint64_t)&v71[*(int *)(v70 + 48)]);
    sub_23F54DE60(v2, v73);
    v149 = sub_23F60EDC8();
    *v74 = v72;
    v75 = v165;
    v76 = v166;
    sub_23F609C84(v35, v165);
    if (v76)
    {
      v77 = *(void (**)(uint64_t, uint64_t))(v157 + 8);
      v77(v2, v66);
      v78 = sub_23F4414B0();
      v77(v78, v112);
LABEL_37:
      swift_deallocBox();
      goto LABEL_38;
    }
    v154 = v69;
    sub_23F609C84(v2, v75);
    v53 = 0;
    v19 = v157;
    v121 = *(void (**)(uint64_t, uint64_t))(v157 + 8);
    v18 = v151;
    v121(v2, v151);
    v121((uint64_t)v35, v18);
LABEL_45:
    v55 = v161;
    *v161 = v149;
    sub_23F60ECB8(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v19 + 104));
    goto LABEL_23;
  }
  if (v51 == *MEMORY[0x24BE54938])
  {
    v79 = sub_23F60F010();
    v18 = v151;
    sub_23F3D98EC(v79, v80);
    v81 = sub_23F35D2E8(&qword_256E70A48);
    v82 = sub_23F3B1858();
    v83 = (uint64_t *)(v82 + *(int *)(v81 + 48));
    v85 = *v83;
    v84 = v83[1];
    sub_23F3B1BCC(v3, v82);
    v55 = (_QWORD *)sub_23F60EF18();
    v87 = v86;
    sub_23F383738();
    v88 = v166;
    sub_23F609C84(v3, v165);
    v166 = v88;
    if (v88)
    {
      sub_23F3D98EC(v3, *(uint64_t (**)(uint64_t, uint64_t))(v157 + 8));
      sub_23F362984();
      sub_23F60F044();
      sub_23F3668FC();
      goto LABEL_39;
    }
    v154 = v50;
    v119 = (_QWORD *)(v87 + *(int *)(v81 + 48));
    v120 = v85;
    v115 = v157;
    sub_23F3D98EC(v3, *(uint64_t (**)(uint64_t, uint64_t))(v157 + 8));
    *v119 = v120;
    v119[1] = v84;
    sub_23F60EED4();
    sub_23F60ECB8(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v115 + 104));
    sub_23F3668FC();
    v53 = v166;
    goto LABEL_44;
  }
  v18 = v151;
  v19 = v157;
  if (v51 != *MEMORY[0x24BE54968])
  {
    if (v51 == *MEMORY[0x24BE54948])
    {
      v154 = v50;
      sub_23F3D98EC(v4, *(uint64_t (**)(uint64_t, uint64_t))(v157 + 96));
      v114 = *(_QWORD *)(*(_QWORD *)v4 + 16);
      v113 = *(_QWORD *)(*(_QWORD *)v4 + 24);
      v115 = v19;
      v116 = (_QWORD *)sub_23F36682C();
      v116[2] = v114;
      v116[3] = v113;
      sub_23F383738();
      v117 = v166;
      sub_23F60E394();
      v53 = v117;
      v55 = v161;
      if (v117)
      {
        sub_23F362984();
        sub_23F60ED14();
        goto LABEL_38;
      }
      v116[4] = v118;
      *v55 = v116;
      sub_23F60ECB8(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v19 + 104));
      sub_23F3668FC();
LABEL_44:
      v56 = v162;
      v57 = v163;
      v58 = v164;
      v19 = v115;
      goto LABEL_24;
    }
    if (v51 != *MEMORY[0x24BE54940]
      && v51 != *MEMORY[0x24BE54950]
      && v51 != *MEMORY[0x24BE54998]
      && v51 != *MEMORY[0x24BE54990]
      && v51 != *MEMORY[0x24BE549A8]
      && v51 != *MEMORY[0x24BE54910]
      && v51 != *MEMORY[0x24BE54920]
      && v51 != *MEMORY[0x24BE54958]
      && v51 != *MEMORY[0x24BE54988]
      && v51 != *MEMORY[0x24BE54978])
    {
      if (v51 == *MEMORY[0x24BE54930])
      {
        v154 = v50;
        v19 = v157;
        v18 = v151;
        sub_23F3D98EC(v4, *(uint64_t (**)(uint64_t, uint64_t))(v157 + 96));
        v150 = *(_QWORD *)v4;
        v131 = swift_projectBox();
        v132 = v146;
        v133 = v145;
        sub_23F384918(v145, v131, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v146 + 16));
        v149 = sub_23F60EDC8();
        v141 = v134;
        v135 = v147;
        sub_23F6184A0();
        v136 = sub_23F618488();
        v137 = v166;
        sub_23F60D390(v136, (uint64_t)v165);
        v53 = v137;
        if (v137)
        {
          sub_23F384120();
          sub_23F384430();
          sub_23F3841CC(v135, v138);
          sub_23F362A28(v133, *(uint64_t (**)(uint64_t, uint64_t))(v132 + 8));
          goto LABEL_37;
        }
        sub_23F384120();
        sub_23F60EF20();
        sub_23F362A28(v133, *(uint64_t (**)(uint64_t, uint64_t))(v132 + 8));
        goto LABEL_45;
      }
      v140 = v51 == *MEMORY[0x24BE549B0] || v51 == *MEMORY[0x24BE54928];
      v53 = v166;
      v18 = v151;
      v19 = v157;
      v54 = (uint64_t)v158;
      if (!v140)
      {
        v154 = v50;
        v55 = v161;
        sub_23F60CB20((uint64_t)v160, (uint64_t)v161);
        sub_23F3D98EC(v4, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
        goto LABEL_8;
      }
LABEL_7:
      v55 = v161;
      v154 = v50;
      ((void (*)(_QWORD *, uint64_t (*)(uint64_t, uint64_t), uint64_t))v50)(v161, v160, v18);
LABEL_8:
      v56 = v162;
      v57 = v163;
      v58 = v164;
      goto LABEL_25;
    }
LABEL_6:
    sub_23F3D98EC(v4, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 96));
    swift_release();
    v53 = v166;
    v54 = (uint64_t)v158;
    goto LABEL_7;
  }
  sub_23F3D98EC(v4, *(uint64_t (**)(uint64_t, uint64_t))(v157 + 96));
  v102 = *(_QWORD *)v4;
  v103 = sub_23F35D2E8(&qword_256E7F898);
  v148 = v102;
  v104 = sub_23F3B1858();
  v105 = v104 + *(int *)(v103 + 48);
  v106 = v150;
  sub_23F3B1BCC(v150, v104);
  v107 = v149;
  sub_23F3B1BCC(v149, v105);
  v108 = sub_23F60EE8C();
  v109 = v50;
  v111 = v165;
  v110 = v166;
  sub_23F609C84(v106, v165);
  if (v110)
  {
    sub_23F5CFA8C(v107);
    sub_23F5CFA8C(v106);
    swift_deallocBox();
LABEL_38:
    swift_release();
    goto LABEL_39;
  }
  v55 = (_QWORD *)v108;
  v154 = v109;
  sub_23F609C84(v107, v111);
  v53 = 0;
  v139 = v157;
  sub_23F5CFA8C(v107);
  sub_23F5CFA8C(v150);
  v19 = v139;
  sub_23F60EED4();
  sub_23F60ECB8(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v139 + 104));
LABEL_23:
  swift_release();
  v56 = v162;
  v57 = v163;
  v58 = v164;
LABEL_24:
  v54 = (uint64_t)v158;
LABEL_25:
  sub_23F60EEE4(v58, (uint64_t)v55);
  v89 = v159;
  sub_23F5210F4(v165, v159);
  if (v53)
  {
    sub_23F3D98EC(v58, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  }
  else
  {
    if (sub_23F36195C(v89, 1, v18) == 1)
    {
      sub_23F3CFCB0(v89, &qword_256E6FD18);
    }
    else
    {
      v157 = v19;
      sub_23F60EEE4(v57, v89);
      sub_23F619088();
      v90 = v154;
      ((void (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))v154)(v54, v160, v18);
      v91 = v155;
      ((void (*)(char *, uint64_t, uint64_t))v90)(v155, v57, v18);
      sub_23F619E8C();
      v92 = sub_23F3B1BD4();
      if (sub_23F40B304(v92))
      {
        sub_23F366668();
        v165 = (uint64_t *)sub_23F60ED24();
        *v56 = 136315394;
        sub_23F3EC80C();
        LODWORD(v161) = (_DWORD)v56;
        v93 = sub_23F60EF08();
        sub_23F3ECBE4(v93, v94);
        v166 = 0;
        v167 = v95;
        sub_23F61C790();
        sub_23F362984();
        v160 = *(uint64_t (**)(uint64_t, uint64_t))(v157 + 8);
        sub_23F3D98EC(v54, v160);
        sub_23F60EFB0();
        v96 = sub_23F60EF08();
        sub_23F3ECBE4(v96, v97);
        v167 = v98;
        sub_23F61C790();
        sub_23F362984();
        v99 = sub_23F60EEA0();
        ((void (*)(uint64_t))v160)(v99);
        sub_23F60ED70(&dword_23F35A000, v90, (os_log_type_t)v161, "[PromptMapperResolver] Modified program AST node: %s -> %s");
        sub_23F3B5EE8();
        sub_23F366530();
      }

      v100 = *(void (**)(char *, uint64_t))(v157 + 8);
      v100(v91, v18);
      v101 = sub_23F60EEA0();
      ((void (*)(uint64_t))v100)(v101);
      sub_23F411514(v152);
      v100((char *)v164, v18);
      v58 = v57;
    }
    sub_23F60EEE4(v156, v58);
  }
LABEL_39:
  sub_23F362870();
}

uint64_t sub_23F60A92C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, NSObject *a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  _BYTE *v7;
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t, NSObject *);
  uint64_t v55;
  int v56;
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  void (*v63)(uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t, NSObject *);
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t *v67;
  _BYTE *v68;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, char *, NSObject *);
  uint64_t v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  void (*v88)(uint64_t, NSObject *);
  char *v89;
  uint64_t v90;
  char *v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t);
  char *v102;
  uint64_t v103;
  char *v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE *v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  NSObject *v113;
  _BYTE *v114;
  void (*v115)(uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  NSObject *v118;
  uint64_t (*v119)(uint64_t, uint64_t);
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  uint64_t v131;
  uint64_t v132;
  NSObject *v133;
  void (*v134)(uint64_t, uint64_t);
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _BYTE *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  NSObject *v156;
  uint64_t v157;
  _BYTE *v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t (*v166)(uint64_t, uint64_t, uint64_t);
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  NSObject *v171;
  uint64_t v172;
  void (*v173)(uint64_t);
  uint64_t v174;
  uint64_t v175;
  NSObject *v176;
  uint64_t v177;
  void (*v178)(uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t (*v181)(uint64_t, _QWORD);
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  NSObject *v188;
  uint64_t v189;
  _BYTE *v190;
  uint64_t (*v191)(uint64_t, _QWORD);
  int v192;
  uint64_t v193;
  uint64_t v194[3];
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t (*v198)(uint64_t, uint64_t, uint64_t);
  uint64_t v199;
  uint64_t (*v200)(uint64_t, uint64_t, uint64_t);
  NSObject *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t (*v208)(uint64_t, uint64_t, uint64_t);
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t (*v216)(uint64_t, uint64_t, uint64_t);
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  void (*v220)(uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t, NSObject *);
  NSObject *v221;
  uint64_t v222;
  _BYTE *v223;
  uint64_t v224;
  void (*v225)(uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t, NSObject *);
  uint64_t v226;

  v213 = a6;
  v15 = sub_23F3B1728();
  v206 = *(_QWORD *)(v15 - 8);
  v207 = v15;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  v212 = v17;
  sub_23F35D2E8(&qword_256E6FD18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  v20 = sub_23F60ECD8(v19, v194[0]);
  sub_23F383E7C(v20, (uint64_t)&v225);
  v194[1] = v21;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F36285C();
  v24 = sub_23F60ED7C(v23);
  sub_23F383E7C(v24, (uint64_t)&v226);
  v196 = v25;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F36285C();
  v28 = sub_23F60ED34(v27);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  sub_23F3834D0();
  v209 = v30;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v31);
  v208 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v194 - v32);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v33);
  v211 = (char *)v194 - v34;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v35);
  v205 = (char *)v194 - v36;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3838E4();
  v200 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v38;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F3838E4();
  v198 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v40;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F3838E4();
  v199 = v42;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v43);
  v204 = (uint64_t)v194 - v44;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F3838E4();
  v202 = v46;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F3838E4();
  v203 = v48;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F60ED44();
  MEMORY[0x24BDAC7A8](v50);
  v216 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v194 - v51);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v52);
  v219 = (uint64_t)v194 - v53;
  v54 = *(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t, NSObject *))(v29 + 16);
  swift_retain_n();
  swift_retain_n();
  sub_23F60EF6C();
  sub_23F60EF6C();
  v218 = a1;
  v220 = v54;
  v54((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8, a1, v28);
  v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 88))(v8, v28);
  v56 = *MEMORY[0x24BE54960];
  v221 = a5;
  v222 = a2;
  if ((_DWORD)v55 == v56)
  {
    sub_23F362A28(v8, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 96));
    sub_23F5EE8C0();
    sub_23F5EE8C0();
    sub_23F3E0254();
    sub_23F3E0254();
    sub_23F3668FC();
    v57 = v28;
LABEL_5:
    v62 = v219;
LABEL_6:
    v63 = v220;
LABEL_7:
    v64 = v216;
    v63(v216, v218, v57);
    v65 = v64;
    goto LABEL_8;
  }
  v58 = v55;
  v215 = v29;
  v201 = v28;
  v210 = a4;
  v214 = a3;
  if ((_DWORD)v55 == *MEMORY[0x24BE54918])
  {
LABEL_4:
    v29 = v215;
    v59 = sub_23F60ED98();
    v57 = *(NSObject **)(v60 - 256);
    sub_23F383D74(v59, v61);
    sub_23F5EE8C0();
    a3 = v214;
    sub_23F5EE8C0();
    a4 = v210;
    sub_23F3E0254();
    sub_23F3E0254();
    sub_23F3668FC();
    goto LABEL_5;
  }
  v63 = v220;
  if ((_DWORD)v55 == *MEMORY[0x24BE549A0])
  {
    HIDWORD(v194[0]) = v55;
    v71 = sub_23F60ED98();
    v72(v71);
    __asm { BR              X10 }
  }
  if ((_DWORD)v55 == *MEMORY[0x24BE54980])
  {
    v85 = sub_23F60EDFC();
    v87 = *(NSObject **)(v86 - 256);
    v88(v85, v87);
    v89 = *(char **)v8;
    v90 = sub_23F35D2E8(&qword_256E7F8A0);
    v205 = v89;
    v91 = (char *)sub_23F60EEAC();
    v92 = *v91;
    v93 = v203;
    v63((uint64_t (*)(uint64_t, uint64_t, uint64_t))v203, (uint64_t)&v91[*(int *)(v90 + 48)], v87);
    v94 = sub_23F60EDC8();
    *v95 = v92;
    v96 = v222;
    sub_23F60ECF8();
    a3 = v214;
    sub_23F60ECF8();
    a4 = v210;
    sub_23F60ECB0();
    sub_23F60ECB0();
    sub_23F60EE18(v93, v96);
    if (v7)
    {
      sub_23F60EE78();
      swift_deallocBox();
      sub_23F38458C();
      sub_23F384A80();
      sub_23F3D9B70();
      sub_23F3D9B70();
LABEL_20:
      swift_release();
      goto LABEL_10;
    }
    sub_23F60EE78();
    v129 = v215;
    v65 = v216;
    *(_QWORD *)v216 = v94;
    (*(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t, NSObject *))(v129 + 104))(v65, v58, v87);
LABEL_31:
    swift_release();
    v57 = v87;
    v62 = v219;
    v29 = v129;
LABEL_32:
    v223 = 0;
    goto LABEL_8;
  }
  v97 = (_DWORD)v55 == *MEMORY[0x24BE54970];
  HIDWORD(v194[0]) = v55;
  if (v97)
  {
    v98 = sub_23F60EDFC();
    v100 = *(_QWORD *)(v99 - 256);
    sub_23F3B1DF8(v98, v101);
    v102 = *(char **)v8;
    v103 = sub_23F35D2E8(&qword_256E791A8);
    v205 = v102;
    v104 = (char *)sub_23F3B1858();
    v105 = *v104;
    v106 = (uint64_t)&v104[*(int *)(v103 + 64)];
    v107 = v202;
    sub_23F60EFE8(v202, (uint64_t)&v104[*(int *)(v103 + 48)]);
    sub_23F60EFE8(v204, v106);
    v203 = sub_23F60EE8C();
    v109 = &v108[*(int *)(v103 + 48)];
    *v108 = v105;
    v110 = v222;
    sub_23F60ECF8();
    v111 = v214;
    sub_23F60ECF8();
    v112 = v210;
    sub_23F60ECB0();
    v113 = v221;
    sub_23F60ECB0();
    v114 = v223;
    sub_23F60A92C(v107, v110, v111, v112, v113, a7);
    if (v114)
    {
      v115 = *(void (**)(uint64_t, uint64_t))(v215 + 8);
      v115(v204, v100);
      v115(v107, v100);
      swift_deallocBox();
      sub_23F384364();
      sub_23F384A80();
      sub_23F3D9B70();
      sub_23F3D9B70();
      sub_23F60ED58();
      goto LABEL_10;
    }
    v223 = v109;
    v145 = v203;
    swift_retain();
    a3 = v214;
    swift_retain();
    v146 = v210;
    sub_23F3668F4();
    sub_23F617BA0();
    v147 = v204;
    sub_23F60A92C(v204, v110, a3, v146, v113, a7);
    v148 = v147;
    v29 = v215;
    v57 = v201;
    sub_23F60EDD0(v148);
    sub_23F60EDD0(v202);
    v65 = v216;
    *(_QWORD *)v216 = v145;
    v164 = sub_23F60EDD8();
    sub_23F38431C(v164, v165, v166);
    sub_23F60ED58();
    a4 = v210;
    goto LABEL_48;
  }
  v29 = v215;
  if ((_DWORD)v55 == *MEMORY[0x24BE54938])
  {
    v116 = sub_23F60ED98();
    v118 = *(NSObject **)(v117 - 256);
    sub_23F362A28(v116, v119);
    v120 = *(char **)v8;
    v121 = sub_23F35D2E8(&qword_256E70A48);
    v205 = v120;
    v122 = sub_23F3B1858();
    v123 = (uint64_t *)(v122 + *(int *)(v121 + 48));
    v124 = v123[1];
    v203 = *v123;
    v125 = v199;
    v63((uint64_t (*)(uint64_t, uint64_t, uint64_t))v199, v122, v118);
    v204 = sub_23F60EE8C();
    v127 = v126;
    v128 = v222;
    sub_23F60ECF8();
    a3 = v214;
    sub_23F60ECF8();
    a4 = v210;
    sub_23F60ECB0();
    sub_23F60ECB0();
    sub_23F3668F4();
    sub_23F60EE18(v125, v128);
    v223 = v7;
    if (v7)
    {
      sub_23F362A28(v125, *(uint64_t (**)(uint64_t, uint64_t))(v215 + 8));
      swift_bridgeObjectRelease();
      sub_23F60EE6C();
      sub_23F38458C();
      sub_23F384A80();
      sub_23F3D9B70();
      sub_23F3D9B70();
      sub_23F60ED58();
      goto LABEL_10;
    }
    v160 = (uint64_t *)(v127 + *(int *)(v121 + 48));
    v161 = v215;
    sub_23F362A28(v125, *(uint64_t (**)(uint64_t, uint64_t))(v215 + 8));
    *v160 = v203;
    v160[1] = v124;
    v65 = v216;
    *(_QWORD *)v216 = v204;
    v162 = sub_23F60EDD8();
    v163(v162);
    sub_23F60ED58();
    v57 = v118;
    v62 = v219;
    v29 = v161;
    goto LABEL_8;
  }
  v130 = v221;
  a4 = v210;
  if ((_DWORD)v55 == *MEMORY[0x24BE54968])
  {
    v131 = sub_23F60ED98();
    v133 = *(NSObject **)(v132 - 256);
    v134(v131, (uint64_t)v133);
    v135 = *(char **)v8;
    v136 = sub_23F35D2E8(&qword_256E7F898);
    v205 = v135;
    v137 = sub_23F60EEAC();
    v138 = v137 + *(int *)(v136 + 48);
    v139 = (uint64_t)v198;
    v63(v198, v137, v133);
    v63(v200, v138, v133);
    v204 = sub_23F60EE8C();
    v141 = v140;
    v142 = v222;
    sub_23F60ECF8();
    v143 = v214;
    sub_23F60ECF8();
    sub_23F60ECB0();
    sub_23F60ECB0();
    v203 = v141;
    v144 = v223;
    sub_23F60A92C(v139, v142, v143, a4, v130, a7);
    if (v144)
    {
      sub_23F60EEF4((uint64_t)v200);
      sub_23F60EEF4(v139);
      sub_23F60EE6C();
      sub_23F38458C();
      sub_23F384A80();
      sub_23F3D9B70();
      sub_23F3D9B70();
      sub_23F60ED58();
      goto LABEL_10;
    }
    v167 = v204;
    swift_retain();
    v168 = v214;
    swift_retain();
    sub_23F3B1EA4();
    sub_23F617BA0();
    v169 = (uint64_t)v200;
    sub_23F60A92C(v200, v142, v168, a4, v130, a7);
    v174 = v215;
    v175 = v169;
    v176 = v201;
    sub_23F60EEF4(v175);
    sub_23F60EEF4((uint64_t)v198);
    v65 = v216;
    *(_QWORD *)v216 = v167;
    v177 = sub_23F60EDD8();
    v178(v177);
    sub_23F60ED58();
    a3 = v168;
    v29 = v174;
    v57 = v176;
LABEL_48:
    v62 = v219;
    goto LABEL_32;
  }
  v57 = v201;
  if ((_DWORD)v55 == *MEMORY[0x24BE54948])
  {
    sub_23F383D74(v8, *(uint64_t (**)(uint64_t, uint64_t))(v215 + 96));
    v149 = v57;
    v151 = *(_QWORD *)(*(_QWORD *)v8 + 16);
    v150 = *(_QWORD *)(*(_QWORD *)v8 + 24);
    v152 = *(_QWORD *)(*(_QWORD *)v8 + 32);
    v87 = v149;
    v153 = (_QWORD *)sub_23F36682C();
    v153[2] = v151;
    v153[3] = v150;
    v154 = v222;
    sub_23F60ECF8();
    v155 = v214;
    sub_23F60ECF8();
    sub_23F60ECB0();
    v156 = v221;
    sub_23F60ECB0();
    sub_23F383738();
    v157 = v152;
    a3 = v155;
    v158 = v223;
    v159 = sub_23F60E5FC(v157, v154, v155, a4, (uint64_t)v156, a7);
    if (v158)
    {
      sub_23F362984();
      sub_23F60ED14();
      sub_23F38458C();
      sub_23F384A80();
      sub_23F3D9B70();
      sub_23F3D9B70();
      goto LABEL_20;
    }
    v153[4] = v159;
    v65 = v216;
    *(_QWORD *)v216 = v153;
    v129 = v215;
    v172 = sub_23F60EDD8();
    v173(v172);
    goto LABEL_31;
  }
  v62 = v219;
  if ((_DWORD)v55 == *MEMORY[0x24BE54940])
  {
    sub_23F383D74(v8, *(uint64_t (**)(uint64_t, uint64_t))(v215 + 96));
    sub_23F5EE8C0();
    a3 = v214;
LABEL_43:
    sub_23F5EE8C0();
    sub_23F3E0254();
    sub_23F3E0254();
    sub_23F3668FC();
    goto LABEL_7;
  }
  v170 = v219;
  v171 = v201;
  a3 = v214;
  if ((_DWORD)v55 == *MEMORY[0x24BE54950])
  {
    sub_23F3B1DF8(v8, *(uint64_t (**)(uint64_t, uint64_t))(v215 + 96));
    v57 = v171;
LABEL_53:
    sub_23F5EE8C0();
    sub_23F5EE8C0();
    sub_23F3E0254();
    sub_23F3E0254();
    sub_23F3668FC();
    v62 = v170;
    goto LABEL_7;
  }
  if ((_DWORD)v55 == *MEMORY[0x24BE54998])
  {
    v57 = v201;
    (*(void (**)(uint64_t, NSObject *))(v215 + 96))(v8, v201);
    goto LABEL_53;
  }
  v57 = v201;
  if ((_DWORD)v55 == *MEMORY[0x24BE54990])
  {
    (*(void (**)(uint64_t, NSObject *))(v215 + 96))(v8, v201);
    goto LABEL_53;
  }
  v62 = v219;
  if ((_DWORD)v55 == *MEMORY[0x24BE549A8] || (_DWORD)v55 == *MEMORY[0x24BE54910])
  {
    sub_23F383D74(v8, *(uint64_t (**)(uint64_t, uint64_t))(v215 + 96));
    sub_23F5EE8C0();
    goto LABEL_43;
  }
  if ((_DWORD)v55 == *MEMORY[0x24BE54920])
    goto LABEL_4;
  v179 = v55;
  if ((_DWORD)v55 == *MEMORY[0x24BE54958] || (_DWORD)v55 == *MEMORY[0x24BE54988] || (_DWORD)v55 == *MEMORY[0x24BE54978])
    goto LABEL_4;
  if ((_DWORD)v55 == *MEMORY[0x24BE54930])
  {
    v180 = sub_23F60EDFC();
    sub_23F3841CC(v180, v181);
    v182 = sub_23F3B1858();
    sub_23F384918(v195, v182, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v196 + 16));
    v183 = sub_23F60EDC8();
    v205 = v184;
    v185 = v222;
    sub_23F5EE8C0();
    v186 = v214;
    sub_23F5EE8C0();
    v187 = v210;
    sub_23F3E0254();
    v188 = v221;
    sub_23F3E0254();
    sub_23F6184A0();
    v189 = sub_23F618488();
    swift_retain();
    swift_retain();
    sub_23F3B1EA4();
    sub_23F617BA0();
    v190 = v223;
    sub_23F60D78C(v189, v185, v186, v187, (uint64_t)v188, a7);
    if (v190)
    {
      sub_23F384120();
      sub_23F384430();
      sub_23F3841CC(v197, v191);
      sub_23F3841CC(v195, *(uint64_t (**)(uint64_t, _QWORD))(v196 + 8));
      swift_deallocBox();
      sub_23F38458C();
      sub_23F384A80();
      sub_23F3D9B70();
      sub_23F3D9B70();
      sub_23F3668FC();
      goto LABEL_10;
    }
    sub_23F384120();
    sub_23F60EF20();
    sub_23F3841CC(v195, *(uint64_t (**)(uint64_t, _QWORD))(v196 + 8));
    v29 = v215;
    v65 = v216;
    *(_QWORD *)v216 = v183;
    v57 = v201;
    sub_23F38431C((uint64_t)v65, v179, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 104));
    sub_23F3668FC();
    v223 = 0;
    a3 = v214;
    a4 = v210;
    v62 = v219;
  }
  else
  {
    if ((_DWORD)v55 == *MEMORY[0x24BE549B0])
    {
      sub_23F5EE8C0();
      a3 = v214;
      sub_23F5EE8C0();
      a4 = v210;
      sub_23F3E0254();
      sub_23F3E0254();
      v57 = v201;
      v62 = v219;
      v29 = v215;
      goto LABEL_6;
    }
    v192 = *MEMORY[0x24BE54928];
    sub_23F5EE8C0();
    v193 = v214;
    sub_23F5EE8C0();
    a4 = v210;
    sub_23F3E0254();
    sub_23F3E0254();
    v97 = (_DWORD)v179 == v192;
    a3 = v193;
    v57 = v201;
    v62 = v219;
    v63 = v220;
    v29 = v215;
    if (v97)
      goto LABEL_7;
    v65 = v216;
    sub_23F60CB20(v218, (uint64_t)v216);
    sub_23F383D74(v8, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
  }
LABEL_8:
  v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
  v66(v62, (uint64_t)v65, (uint64_t)v57);
  v67 = v217;
  v68 = v223;
  sub_23F522C44(v62, v221, v217);
  v223 = v68;
  if (v68)
  {
    sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    sub_23F384364();
    sub_23F384A80();
    sub_23F3D9B70();
    sub_23F3D9B70();
LABEL_10:
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release_n();
    return swift_bridgeObjectRelease_n();
  }
  v215 = v29;
  v216 = v66;
  if (sub_23F36195C((uint64_t)v67, 1, (uint64_t)v57) == 1)
  {
    sub_23F3CFCB0((uint64_t)v67, &qword_256E6FD18);
    v70 = v62;
  }
  else
  {
    v214 = a3;
    v73 = v211;
    v216((uint64_t)v211, (uint64_t)v67, (uint64_t)v57);
    v74 = v212;
    sub_23F619088();
    v75 = (uint64_t)v208;
    v76 = (void (*)(uint64_t, char *, NSObject *))v220;
    v220(v208, v218, v57);
    v77 = v209;
    v76(v209, v73, v57);
    sub_23F619E8C();
    v78 = sub_23F3B1BD4();
    if (sub_23F3D9BD4(v78))
    {
      sub_23F366668();
      LODWORD(v218) = (_DWORD)v66;
      v220 = (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t, NSObject *))sub_23F60ED24();
      v225 = v220;
      sub_23F60EFDC(4.8151e-34);
      v210 = a4;
      sub_23F60EEA0();
      v79 = sub_23F61CC1C();
      sub_23F5D7D34(v79, v80);
      v224 = v81;
      sub_23F507380();
      sub_23F362984();
      sub_23F60F03C(v75);
      sub_23F60EFB0();
      sub_23F60EEA0();
      v82 = sub_23F61CC1C();
      sub_23F5D7D34(v82, v83);
      v224 = v84;
      sub_23F507380();
      sub_23F362984();
      sub_23F60F03C(v77);
      sub_23F60ED70(&dword_23F35A000, v57, (os_log_type_t)v218, "[PromptMapperResolver] Modified program AST node: %s -> %s");
      sub_23F3B5EE8();
      sub_23F366530();
    }

    sub_23F3B1F64(v77);
    sub_23F3B1F64(v75);
    (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v74, v207);
    sub_23F3B1F64(v219);
    v70 = (uint64_t)v73;
  }
  sub_23F38431C(v213, v70, v216);
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

void sub_23F60BE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  BOOL v73;
  uint64_t *v74;
  uint64_t v75;
  int v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char v91;
  char *v92;
  uint64_t (*v93)(uint64_t, uint64_t);
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  uint64_t (*v110)(uint64_t, uint64_t);
  uint64_t v111;
  os_log_type_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(_QWORD);
  void (*v133)(uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  BOOL v150;
  uint64_t v151;
  void (*v152)(uint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t (*v160)(uint64_t, _QWORD);
  uint64_t v161;
  uint64_t v162;
  BOOL v163;
  uint64_t v164[2];
  unsigned int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  NSObject *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t (*v186)(uint64_t, uint64_t);
  uint64_t v187;
  void (*v188)(_QWORD);
  uint64_t v189;
  uint64_t v190;

  sub_23F362C98();
  a19 = v26;
  a20 = v27;
  v188 = v28;
  v189 = v21;
  v29 = v20;
  v187 = v30;
  v178 = v31;
  v32 = sub_23F3B1728();
  v174 = *(_QWORD *)(v32 - 8);
  v175 = v32;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F36285C();
  v184 = v34;
  sub_23F35D2E8(&qword_256E6FD18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F36285C();
  v181 = v36;
  v37 = sub_23F617D08();
  sub_23F383E7C(v37, (uint64_t)&a15);
  v166 = v38;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F36285C();
  v170 = sub_23F60ED7C(v40);
  v168 = *(_QWORD *)(v170 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v41);
  v43 = sub_23F60ED34((uint64_t)v164 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  sub_23F3834D0();
  v176 = v45;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F3838E4();
  v183 = v47;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F3838E4();
  v177 = v49;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F4DD0C0();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F3838E4();
  v171 = v52;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v53);
  v172 = (uint64_t)v164 - v54;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F362D78();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F60ED44();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F60EFF0();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F4DD0D4();
  MEMORY[0x24BDAC7A8](v59);
  sub_23F60EE30();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F3838E4();
  v180 = v61;
  sub_23F383588();
  v63 = MEMORY[0x24BDAC7A8](v62);
  sub_23F60EDE8(v63, v64, v65, v66, v67, v68, v69, v70, v164[0]);
  v71 = *(uint64_t (**)(uint64_t, uint64_t))(v44 + 16);
  v182 = v20;
  v186 = v71;
  ((void (*)(uint64_t, uint64_t, uint64_t))v71)(v25, v20, v43);
  v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 88))(v25, v43);
  v73 = (_DWORD)v72 == *MEMORY[0x24BE54960] || (_DWORD)v72 == *MEMORY[0x24BE54918];
  if (v73)
    goto LABEL_6;
  v173 = v43;
  v179 = v44;
  if ((_DWORD)v72 == *MEMORY[0x24BE549A0])
  {
    sub_23F383CA8(v25, *(uint64_t (**)(uint64_t, uint64_t))(v179 + 96));
    sub_23F60EF58();
    __asm { BR              X10 }
  }
  if ((_DWORD)v72 == *MEMORY[0x24BE54980])
  {
    v78 = v72;
    v79 = v179;
    v43 = v173;
    sub_23F383CA8(v25, *(uint64_t (**)(uint64_t, uint64_t))(v179 + 96));
    v80 = sub_23F35D2E8(&qword_256E7F8A0);
    v81 = (char *)sub_23F3B1858();
    v82 = *v81;
    sub_23F60ED8C(v20, (uint64_t)&v81[*(int *)(v80 + 48)]);
    v83 = sub_23F60EE8C();
    *v84 = v82;
    sub_23F60EEEC((uint64_t)v188, v187);
    v75 = v21;
    if (v21)
    {
      sub_23F383CA8(v20, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
      swift_deallocBox();
LABEL_37:
      swift_release();
      goto LABEL_38;
    }
    sub_23F383CA8(v20, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
    v74 = v180;
    *v180 = v83;
    sub_23F383C64((uint64_t)v74, v78, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 104));
    sub_23F3668FC();
    v76 = v184;
    v24 = v185;
    v44 = v79;
    goto LABEL_23;
  }
  v73 = (_DWORD)v72 == *MEMORY[0x24BE54970];
  v165 = v72;
  if (!v73)
  {
    if ((_DWORD)v72 == *MEMORY[0x24BE54938])
    {
      v97 = v179;
      v43 = v173;
      sub_23F383CA8(v25, *(uint64_t (**)(uint64_t, uint64_t))(v179 + 96));
      v98 = sub_23F35D2E8(&qword_256E70A48);
      v99 = swift_projectBox();
      v100 = (uint64_t *)(v99 + *(int *)(v98 + 48));
      v101 = v100[1];
      v172 = *v100;
      sub_23F60ED8C(v22, v99);
      v102 = swift_allocBox();
      v104 = v103;
      sub_23F383EB0();
      sub_23F60EEEC((uint64_t)v188, v187);
      v189 = v21;
      if (v21)
      {
        sub_23F383CA8(v22, *(uint64_t (**)(uint64_t, uint64_t))(v97 + 8));
        sub_23F384120();
        sub_23F60F044();
        swift_release();
        goto LABEL_38;
      }
      v141 = (_QWORD *)(v104 + *(int *)(v98 + 48));
      sub_23F383CA8(v22, *(uint64_t (**)(uint64_t, uint64_t))(v97 + 8));
      *v141 = v172;
      v141[1] = v101;
      v74 = v180;
      *v180 = v102;
      sub_23F60ED00(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v97 + 104));
      swift_release();
      v75 = v189;
      v76 = v184;
      v24 = v185;
      v44 = v97;
      goto LABEL_23;
    }
    v44 = v179;
    if ((_DWORD)v72 == *MEMORY[0x24BE54968])
    {
      v122 = v173;
      (*(void (**)(uint64_t, uint64_t))(v179 + 96))(v25, v173);
      v123 = *(_QWORD *)v25;
      v124 = sub_23F35D2E8(&qword_256E7F898);
      v170 = v123;
      v125 = sub_23F3B1858();
      v126 = v125 + *(int *)(v124 + 48);
      v127 = v172;
      v128 = v186;
      ((void (*)(uint64_t, uint64_t, uint64_t))v186)(v172, v125, v122);
      v129 = v171;
      ((void (*)(uint64_t, uint64_t, uint64_t))v128)(v171, v126, v122);
      v169 = sub_23F60F04C();
      v168 = v130;
      v131 = v187;
      v132 = v188;
      sub_23F60EEEC((uint64_t)v188, v187);
      if (v21)
      {
        v133 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
        v133(v129, v122);
        v133(v127, v122);
        sub_23F60EE6C();
        goto LABEL_37;
      }
      v161 = v169;
      sub_23F60BE3C(v132, v131);
      v75 = 0;
      v44 = v179;
      v162 = v129;
      v43 = v173;
      sub_23F5CFB7C(v162);
      sub_23F5CFB7C(v172);
      v74 = v180;
      *v180 = v161;
      sub_23F60ED00(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v44 + 104));
      goto LABEL_43;
    }
    if ((_DWORD)v72 == *MEMORY[0x24BE54948])
    {
      v43 = v173;
      sub_23F383CA8(v25, *(uint64_t (**)(uint64_t, uint64_t))(v179 + 96));
      v137 = *(_QWORD *)(*(_QWORD *)v25 + 16);
      v136 = *(_QWORD *)(*(_QWORD *)v25 + 24);
      v138 = (_QWORD *)sub_23F36682C();
      v138[2] = v137;
      v138[3] = v136;
      sub_23F383738();
      v139 = v189;
      sub_23F60E9C4();
      v75 = v139;
      sub_23F60EF58();
      if (v139)
      {
        sub_23F362984();
        sub_23F60ED14();
        goto LABEL_37;
      }
      v138[4] = v140;
      v44 = v179;
      v74 = v180;
      *v180 = (uint64_t)v138;
      sub_23F60ED00(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v44 + 104));
      goto LABEL_77;
    }
    v150 = (_DWORD)v72 == *MEMORY[0x24BE54940]
        || (_DWORD)v72 == *MEMORY[0x24BE54950]
        || (_DWORD)v72 == *MEMORY[0x24BE54998]
        || (_DWORD)v72 == *MEMORY[0x24BE54990]
        || (_DWORD)v72 == *MEMORY[0x24BE549A8]
        || (_DWORD)v72 == *MEMORY[0x24BE54910]
        || (_DWORD)v72 == *MEMORY[0x24BE54920]
        || (_DWORD)v72 == *MEMORY[0x24BE54958]
        || (_DWORD)v72 == *MEMORY[0x24BE54988]
        || (_DWORD)v72 == *MEMORY[0x24BE54978];
    v43 = v173;
    if (!v150)
    {
      if ((_DWORD)v72 == *MEMORY[0x24BE54930])
      {
        v151 = sub_23F60F010();
        v152(v151, v173);
        v172 = *(_QWORD *)v25;
        v153 = swift_projectBox();
        v154 = v168;
        v155 = v167;
        sub_23F384918(v167, v153, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v168 + 16));
        v171 = sub_23F60EDC8();
        v164[1] = v156;
        v157 = v169;
        sub_23F6184A0();
        v158 = sub_23F618488();
        v159 = v189;
        sub_23F60DCF8(v158, (uint64_t)v188, v187);
        v75 = v159;
        sub_23F60EF58();
        if (!v159)
        {
          sub_23F362984();
          sub_23F60EF20();
          sub_23F362A28(v155, *(uint64_t (**)(uint64_t, uint64_t))(v154 + 8));
          v44 = v179;
          v74 = v180;
          *v180 = v171;
          v43 = v173;
          sub_23F383C64((uint64_t)v74, v165, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 104));
LABEL_77:
          swift_release();
          goto LABEL_9;
        }
        sub_23F362984();
        sub_23F384430();
        sub_23F3841CC(v157, v160);
        sub_23F362A28(v155, *(uint64_t (**)(uint64_t, uint64_t))(v154 + 8));
LABEL_36:
        swift_deallocBox();
        goto LABEL_37;
      }
      v163 = (_DWORD)v72 == *MEMORY[0x24BE549B0] || (_DWORD)v72 == *MEMORY[0x24BE54928];
      v24 = v185;
      v44 = v179;
      v43 = v173;
      v29 = v183;
      if (!v163)
      {
        v74 = v180;
        sub_23F60CB20(v182, (uint64_t)v180);
        sub_23F383CA8(v25, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
        goto LABEL_8;
      }
LABEL_7:
      v74 = v180;
      sub_23F60ED8C((uint64_t)v180, v182);
LABEL_8:
      v75 = v189;
LABEL_9:
      v76 = v184;
      goto LABEL_24;
    }
LABEL_6:
    sub_23F383CA8(v25, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 96));
    swift_release();
    sub_23F60EF58();
    goto LABEL_7;
  }
  v85 = sub_23F60F010();
  v86 = v173;
  sub_23F362A28(v85, v87);
  v88 = *(_QWORD *)v25;
  v89 = sub_23F35D2E8(&qword_256E791A8);
  v172 = v88;
  v90 = (char *)sub_23F3B1858();
  v91 = *v90;
  v92 = &v90[*(int *)(v89 + 64)];
  v93 = v186;
  ((void (*)(uint64_t, char *, uint64_t))v186)(v24, &v90[*(int *)(v89 + 48)], v86);
  ((void (*)(uint64_t, char *, uint64_t))v93)(v23, v92, v86);
  v171 = swift_allocBox();
  *v94 = v91;
  v95 = sub_23F60EEFC();
  sub_23F60EEEC(v95, v96);
  if (v21)
  {
    (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v23, v86);
    sub_23F3ECBA8(v24);
    goto LABEL_36;
  }
  v134 = sub_23F60EEFC();
  sub_23F60BE3C(v134, v135);
  v75 = 0;
  v44 = v179;
  v43 = v173;
  sub_23F5CFB7C(v23);
  sub_23F5CFB7C(v24);
  v74 = v180;
  *v180 = v171;
  sub_23F60ED00(*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v44 + 104));
LABEL_43:
  swift_release();
  v76 = v184;
  v24 = v185;
LABEL_23:
  v29 = v183;
LABEL_24:
  v105 = v181;
  sub_23F3DDBA4(v24, (uint64_t)v74);
  v188(v24);
  if (v75)
  {
    sub_23F383CA8(v24, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
  }
  else
  {
    if (sub_23F36195C(v105, 1, v43) == 1)
    {
      sub_23F3CFCB0(v105, &qword_256E6FD18);
      v106 = v24;
      v107 = v178;
    }
    else
    {
      v179 = v44;
      v108 = v105;
      v109 = v177;
      sub_23F3DDBA4((uint64_t)v177, v108);
      sub_23F619088();
      v110 = v186;
      ((void (*)(uint64_t, uint64_t, uint64_t))v186)(v29, v182, v43);
      v111 = sub_23F60EEFC();
      ((void (*)(uint64_t))v110)(v111);
      sub_23F619E8C();
      v112 = sub_23F3B1BD4();
      if (sub_23F40B304(v112))
      {
        sub_23F366668();
        v188 = (void (*)(_QWORD))sub_23F60ED24();
        sub_23F60EFDC(4.8151e-34);
        LODWORD(v187) = v76;
        v113 = sub_23F60F028();
        sub_23F3ECBE4(v113, v114);
        v189 = 0;
        v190 = v115;
        sub_23F507380();
        sub_23F362984();
        v186 = *(uint64_t (**)(uint64_t, uint64_t))(v179 + 8);
        sub_23F383CA8(v29, v186);
        sub_23F60EFB0();
        v116 = sub_23F60F028();
        sub_23F3ECBE4(v116, v117);
        sub_23F60EF88(v118);
        sub_23F61C790();
        sub_23F362984();
        v119 = sub_23F4414B0();
        ((void (*)(uint64_t))v186)(v119);
        sub_23F60ED70(&dword_23F35A000, v109, (os_log_type_t)v187, "[PromptMapperResolver] Modified program AST node: %s -> %s");
        sub_23F3B5EE8();
        sub_23F366530();
      }

      v120 = *(void (**)(uint64_t))(v179 + 8);
      v121 = sub_23F4414B0();
      v120(v121);
      ((void (*)(uint64_t, uint64_t))v120)(v29, v43);
      sub_23F411514(v174);
      ((void (*)(uint64_t, uint64_t))v120)(v24, v43);
      v106 = (uint64_t)v177;
      v107 = v178;
    }
    sub_23F3DDBA4(v107, v106);
  }
LABEL_38:
  sub_23F362870();
}

uint64_t sub_23F60CB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;

  v4 = sub_23F6184B8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F619E98();
  v27 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F619088();
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v28(v7, a1, v4);
  v11 = sub_23F619E8C();
  v12 = sub_23F61C628();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v26 = a1;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v25 = a2;
    v16 = v15;
    v30 = v15;
    v24 = v8;
    *(_DWORD *)v14 = 136315138;
    v23 = v14 + 4;
    sub_23F3EC80C();
    v17 = sub_23F61CC1C();
    sub_23F37AE00(v17, v18, &v30);
    v29 = v19;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_23F35A000, v11, v12, "❗️ [PromptMapperResolver] Unknown Expr type: %s - skipping transformations. Please file a radar on Full Planner", v14, 0xCu);
    swift_arrayDestroy();
    v20 = v16;
    a2 = v25;
    MEMORY[0x242670B70](v20, -1, -1);
    v21 = v14;
    a1 = v26;
    MEMORY[0x242670B70](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v28)(a2, a1, v4);
}

void sub_23F60CD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F362C98();
  v4 = v3;
  sub_23F35D2E8(&qword_256E6FDB8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3834D0();
  v16 = v6;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F60ED44();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - v9;
  swift_beginAccess();
  v11 = *(_QWORD *)(v0 + 24);
  sub_23F383E5C();
  sub_23F617BA0();
  v12 = sub_23F4414B0();
  sub_23F3687B8(v12, v13, v11);
  sub_23F3837B0();
  swift_bridgeObjectRelease();
  v14 = sub_23F61AD38();
  if (sub_23F36195C((uint64_t)v10, 1, v14) == 1)
  {
    sub_23F3CFCB0((uint64_t)v10, &qword_256E6FDB8);
    sub_23F4414B0();
    sub_23F61A6C0();
    if (!v1)
    {
      sub_23F60EC0C(v2, v16);
      swift_beginAccess();
      sub_23F383E5C();
      sub_23F372C48();
      swift_endAccess();
      sub_23F60EC54(v2, v4);
    }
  }
  else
  {
    sub_23F384918(v4, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32));
    sub_23F36196C(v4, 0, 1, v14);
  }
  sub_23F362870();
}

uint64_t sub_23F60CF14()
{
  sub_23F4A2698();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CachingQueryableToolbox()
{
  return objc_opt_self();
}

uint64_t sub_23F60CF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  int64_t v27;
  unint64_t v28;
  char *v29;
  BOOL v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v57 = a3;
  v5 = sub_23F6184B8();
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v53 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v51 = (char *)&v45 - v8;
  v9 = sub_23F61847C();
  v45 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v58 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F618470();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v50 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v45 - v15;
  sub_23F35D2E8(&qword_256E78F98);
  v17 = sub_23F61CA78();
  v18 = v17;
  v56 = a1;
  v19 = v16;
  v22 = *(_QWORD *)(a1 + 64);
  v21 = a1 + 64;
  v20 = v22;
  v23 = 1 << *(_BYTE *)(v21 - 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v20;
  v47 = v21;
  v48 = (unint64_t)(v23 + 63) >> 6;
  v49 = v17 + 64;
  v62 = a2;
  result = sub_23F617BA0();
  v27 = 0;
  v52 = v18;
  if (!v25)
    goto LABEL_5;
LABEL_4:
  v59 = (v25 - 1) & v25;
  v60 = v27;
  v28 = __clz(__rbit64(v25)) | (v27 << 6);
  v29 = v58;
  while (1)
  {
    v34 = *(_QWORD *)(v56 + 56);
    v35 = (uint64_t *)(*(_QWORD *)(v56 + 48) + 16 * v28);
    v36 = v35[1];
    v61 = *v35;
    v37 = *(_QWORD *)(v12 + 72) * v28;
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v19, v34 + v37, v11);
    v38 = v62;
    swift_bridgeObjectRetain_n();
    sub_23F617BA0();
    sub_23F618464();
    v39 = v53;
    sub_23F61844C();
    v40 = v63;
    sub_23F608D9C(v39, v38, v57);
    v63 = v40;
    if (v40)
    {
      (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v55);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v46);
      swift_bridgeObjectRelease();
      v18 = v52;
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
      swift_bridgeObjectRelease_n();
      return v18;
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v55);
    v41 = v50;
    sub_23F618458();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
    *(_QWORD *)(v49 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v18 = v52;
    v42 = (_QWORD *)(*(_QWORD *)(v52 + 48) + 16 * v28);
    *v42 = v61;
    v42[1] = v36;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(*(_QWORD *)(v18 + 56) + v37, v41, v11);
    v43 = *(_QWORD *)(v18 + 16);
    v30 = __OFADD__(v43, 1);
    v44 = v43 + 1;
    if (v30)
      break;
    *(_QWORD *)(v18 + 16) = v44;
    v25 = v59;
    v27 = v60;
    if (v59)
      goto LABEL_4;
LABEL_5:
    v30 = __OFADD__(v27, 1);
    v31 = v27 + 1;
    v29 = v58;
    if (v30)
      goto LABEL_28;
    if (v31 >= v48)
      goto LABEL_25;
    v32 = *(_QWORD *)(v47 + 8 * v31);
    if (!v32)
    {
      v33 = v31 + 1;
      if (v31 + 1 >= v48)
        goto LABEL_25;
      v32 = *(_QWORD *)(v47 + 8 * v33);
      if (v32)
        goto LABEL_14;
      v33 = v31 + 2;
      if (v31 + 2 >= v48)
        goto LABEL_25;
      v32 = *(_QWORD *)(v47 + 8 * v33);
      if (v32)
      {
LABEL_14:
        v31 = v33;
        goto LABEL_15;
      }
      v33 = v31 + 3;
      if (v31 + 3 < v48)
      {
        v32 = *(_QWORD *)(v47 + 8 * v33);
        if (!v32)
        {
          while (1)
          {
            v31 = v33 + 1;
            if (__OFADD__(v33, 1))
              goto LABEL_29;
            if (v31 >= v48)
              goto LABEL_25;
            v32 = *(_QWORD *)(v47 + 8 * v31);
            ++v33;
            if (v32)
              goto LABEL_15;
          }
        }
        goto LABEL_14;
      }
LABEL_25:
      swift_bridgeObjectRelease_n();
      return v18;
    }
LABEL_15:
    v59 = (v32 - 1) & v32;
    v60 = v31;
    v28 = __clz(__rbit64(v32)) + (v31 << 6);
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23F60D390(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t i;
  BOOL v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v54 = a2;
  v3 = sub_23F6184B8();
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v42 - v6;
  v7 = sub_23F61847C();
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F618470();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v48 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v42 - v14;
  sub_23F35D2E8(&qword_256E78F98);
  result = sub_23F61CA78();
  v17 = 0;
  v53 = a1;
  v20 = *(_QWORD *)(a1 + 64);
  v19 = a1 + 64;
  v18 = v20;
  v21 = 1 << *(_BYTE *)(v19 - 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v18;
  v45 = v19;
  v46 = (unint64_t)(v21 + 63) >> 6;
  v55 = result;
  v47 = result + 64;
  if (!v23)
    goto LABEL_5;
LABEL_4:
  v57 = (v23 - 1) & v23;
  for (i = __clz(__rbit64(v23)) | (v17 << 6); ; i = __clz(__rbit64(v26)) + (v17 << 6))
  {
    v28 = *(_QWORD *)(v53 + 56);
    v29 = (uint64_t *)(*(_QWORD *)(v53 + 48) + 16 * i);
    v30 = v29[1];
    v58 = *v29;
    v31 = *(_QWORD *)(v11 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v15, v28 + v31, v10);
    v59 = v30;
    sub_23F617BA0();
    sub_23F618464();
    v32 = v50;
    sub_23F61844C();
    v33 = v60;
    sub_23F609C84(v32, v54);
    v60 = v33;
    if (v33)
    {
      (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v52);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v44);
      swift_bridgeObjectRelease();
      v41 = v55;
      swift_release();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
      return v41;
    }
    v56 = v17;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v52);
    v34 = v48;
    v35 = v9;
    sub_23F618458();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    *(_QWORD *)(v47 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v36 = v55;
    v37 = (_QWORD *)(*(_QWORD *)(v55 + 48) + 16 * i);
    v38 = v59;
    *v37 = v58;
    v37[1] = v38;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 32))(*(_QWORD *)(v36 + 56) + v31, v34, v10);
    v39 = *(_QWORD *)(v36 + 16);
    v25 = __OFADD__(v39, 1);
    v40 = v39 + 1;
    if (v25)
      break;
    *(_QWORD *)(v36 + 16) = v40;
    v9 = v35;
    v17 = v56;
    v23 = v57;
    if (v57)
      goto LABEL_4;
LABEL_5:
    v25 = __OFADD__(v17++, 1);
    if (v25)
      goto LABEL_28;
    if (v17 >= v46)
      return v55;
    v26 = *(_QWORD *)(v45 + 8 * v17);
    if (!v26)
    {
      v27 = v17 + 1;
      if (v17 + 1 >= v46)
        return v55;
      v26 = *(_QWORD *)(v45 + 8 * v27);
      if (v26)
        goto LABEL_14;
      v27 = v17 + 2;
      if (v17 + 2 >= v46)
        return v55;
      v26 = *(_QWORD *)(v45 + 8 * v27);
      if (v26)
      {
LABEL_14:
        v17 = v27;
        goto LABEL_15;
      }
      v27 = v17 + 3;
      if (v17 + 3 < v46)
      {
        v26 = *(_QWORD *)(v45 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v17 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_29;
            if (v17 >= v46)
              return v55;
            v26 = *(_QWORD *)(v45 + 8 * v17);
            ++v27;
            if (v26)
              goto LABEL_15;
          }
        }
        goto LABEL_14;
      }
      return v55;
    }
LABEL_15:
    v57 = (v26 - 1) & v26;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23F60D78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t result;
  int64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  BOOL v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v12 = sub_23F6184B8();
  v68 = *(_QWORD *)(v12 - 8);
  v69 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v67 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v66 = (char *)&v59 - v15;
  v60 = sub_23F61847C();
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v72 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_23F618470();
  v17 = *(_QWORD *)(v78 - 8);
  v18 = MEMORY[0x24BDAC7A8](v78);
  v64 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v65 = (char *)&v59 - v20;
  sub_23F35D2E8(&qword_256E78F98);
  v21 = sub_23F61CA78();
  v22 = v17;
  v23 = v21;
  v70 = a1;
  v26 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v24 = v26;
  v27 = 1 << *(_BYTE *)(v25 - 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & v24;
  v61 = v25;
  v62 = (unint64_t)(v27 + 63) >> 6;
  v63 = v21 + 64;
  swift_retain();
  v79 = a3;
  swift_retain();
  v30 = a4;
  sub_23F617BA0();
  v80 = a5;
  result = sub_23F617BA0();
  v32 = 0;
  v71 = v23;
  if (!v29)
    goto LABEL_5;
LABEL_4:
  v73 = (v29 - 1) & v29;
  v74 = v32;
  v33 = __clz(__rbit64(v29)) | (v32 << 6);
  v34 = v65;
  v35 = v72;
  while (1)
  {
    v40 = (uint64_t *)(*(_QWORD *)(v70 + 48) + 16 * v33);
    v41 = *v40;
    v42 = v40[1];
    v43 = *(_QWORD *)(v22 + 72) * v33;
    v75 = v41;
    v76 = v43;
    v44 = v34;
    (*(void (**)(void))(v22 + 16))();
    swift_retain_n();
    v45 = v79;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v46 = v80;
    swift_bridgeObjectRetain_n();
    v77 = v42;
    sub_23F617BA0();
    v47 = v22;
    v48 = v30;
    v49 = v46;
    sub_23F618464();
    v50 = v67;
    sub_23F61844C();
    v51 = v49;
    v30 = v48;
    v52 = v81;
    sub_23F60A92C(v50, a2, v45, v48, v51, a6);
    v81 = v52;
    if (v52)
    {
      (*(void (**)(char *, uint64_t))(v68 + 8))(v50, v69);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v35, v60);
      swift_bridgeObjectRelease();
      v23 = v71;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v78);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_release_n();
      return v23;
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v50, v69);
    v53 = v64;
    sub_23F618458();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v54 = v78;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v78);
    *(_QWORD *)(v63 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    v23 = v71;
    v55 = (_QWORD *)(*(_QWORD *)(v71 + 48) + 16 * v33);
    v56 = v77;
    *v55 = v75;
    v55[1] = v56;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v47 + 32))(*(_QWORD *)(v23 + 56) + v76, v53, v54);
    v57 = *(_QWORD *)(v23 + 16);
    v36 = __OFADD__(v57, 1);
    v58 = v57 + 1;
    if (v36)
      break;
    v22 = v47;
    *(_QWORD *)(v23 + 16) = v58;
    v29 = v73;
    v32 = v74;
    if (v73)
      goto LABEL_4;
LABEL_5:
    v36 = __OFADD__(v32, 1);
    v37 = v32 + 1;
    v35 = v72;
    if (v36)
      goto LABEL_28;
    if (v37 >= v62)
      goto LABEL_25;
    v38 = *(_QWORD *)(v61 + 8 * v37);
    if (!v38)
    {
      v39 = v37 + 1;
      if (v37 + 1 >= v62)
        goto LABEL_25;
      v38 = *(_QWORD *)(v61 + 8 * v39);
      if (v38)
        goto LABEL_14;
      v39 = v37 + 2;
      if (v37 + 2 >= v62)
        goto LABEL_25;
      v38 = *(_QWORD *)(v61 + 8 * v39);
      if (v38)
      {
LABEL_14:
        v37 = v39;
        goto LABEL_15;
      }
      v39 = v37 + 3;
      if (v37 + 3 < v62)
      {
        v38 = *(_QWORD *)(v61 + 8 * v39);
        if (!v38)
        {
          while (1)
          {
            v37 = v39 + 1;
            if (__OFADD__(v39, 1))
              goto LABEL_29;
            if (v37 >= v62)
              goto LABEL_25;
            v38 = *(_QWORD *)(v61 + 8 * v37);
            ++v39;
            if (v38)
              goto LABEL_15;
          }
        }
        goto LABEL_14;
      }
LABEL_25:
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      return v23;
    }
LABEL_15:
    v73 = (v38 - 1) & v38;
    v74 = v37;
    v33 = __clz(__rbit64(v38)) + (v37 << 6);
    v34 = v65;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23F60DCF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  char *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t i;
  BOOL v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v56 = a2;
  v57 = a3;
  v4 = sub_23F6184B8();
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v51 = (char *)&v44 - v7;
  v8 = sub_23F61847C();
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F618470();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v49 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v44 - v15;
  sub_23F35D2E8(&qword_256E78F98);
  result = sub_23F61CA78();
  v18 = v10;
  v19 = result;
  v20 = 0;
  v55 = a1;
  v23 = *(_QWORD *)(a1 + 64);
  v22 = a1 + 64;
  v21 = v23;
  v24 = 1 << *(_BYTE *)(v22 - 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v21;
  v46 = v22;
  v47 = (unint64_t)(v24 + 63) >> 6;
  v48 = result + 64;
  v50 = result;
  if (!v26)
    goto LABEL_5;
LABEL_4:
  v58 = (v26 - 1) & v26;
  v59 = v20;
  for (i = __clz(__rbit64(v26)) | (v20 << 6); ; i = __clz(__rbit64(v30)) + (v29 << 6))
  {
    v32 = *(_QWORD *)(v55 + 56);
    v33 = (uint64_t *)(*(_QWORD *)(v55 + 48) + 16 * i);
    v34 = v33[1];
    v60 = *v33;
    v35 = *(_QWORD *)(v12 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v16, v32 + v35, v11);
    v61 = v34;
    sub_23F617BA0();
    v36 = v18;
    sub_23F618464();
    v37 = v52;
    sub_23F61844C();
    v38 = v62;
    sub_23F60BE3C(v56, v57);
    v62 = v38;
    if (v38)
    {
      (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v54);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v45);
      swift_bridgeObjectRelease();
      v19 = v50;
      swift_release();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
      return v19;
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v54);
    v39 = v49;
    sub_23F618458();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    *(_QWORD *)(v48 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v40 = (_QWORD *)(*(_QWORD *)(v50 + 48) + 16 * i);
    v19 = v50;
    v41 = v61;
    *v40 = v60;
    v40[1] = v41;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(*(_QWORD *)(v19 + 56) + v35, v39, v11);
    v42 = *(_QWORD *)(v19 + 16);
    v28 = __OFADD__(v42, 1);
    v43 = v42 + 1;
    if (v28)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v18 = v36;
    *(_QWORD *)(v19 + 16) = v43;
    v26 = v58;
    v20 = v59;
    if (v58)
      goto LABEL_4;
LABEL_5:
    v28 = __OFADD__(v20, 1);
    v29 = v20 + 1;
    if (v28)
      goto LABEL_27;
    if (v29 >= v47)
      return v19;
    v30 = *(_QWORD *)(v46 + 8 * v29);
    if (!v30)
      break;
LABEL_15:
    v58 = (v30 - 1) & v30;
    v59 = v29;
  }
  v31 = v29 + 1;
  if (v29 + 1 >= v47)
    return v19;
  v30 = *(_QWORD *)(v46 + 8 * v31);
  if (v30)
    goto LABEL_14;
  v31 = v29 + 2;
  if (v29 + 2 >= v47)
    return v19;
  v30 = *(_QWORD *)(v46 + 8 * v31);
  if (v30)
    goto LABEL_14;
  v31 = v29 + 3;
  if (v29 + 3 >= v47)
    return v19;
  v30 = *(_QWORD *)(v46 + 8 * v31);
  if (v30)
  {
LABEL_14:
    v29 = v31;
    goto LABEL_15;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v47)
      return v19;
    v30 = *(_QWORD *)(v46 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_23F60E0EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t i;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  sub_23F362C98();
  v56 = v0;
  v51 = v1;
  v3 = v2;
  v5 = v4;
  v52 = sub_23F60ED68();
  v6 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v48 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  v9 = MEMORY[0x24BDAC7A8](v8);
  sub_23F60EDE8(v9, v10, v11, v12, v13, v14, v15, v16, v44);
  sub_23F35D2E8(&qword_256E78F90);
  v17 = sub_23F61CA78();
  v50 = v5;
  sub_23F3839E4();
  v20 = v19 & v18;
  sub_23F60EFBC();
  v45 = v5 + 64;
  v46 = v21;
  v47 = v22 + 64;
  v54 = v3;
  sub_23F617BA0();
  v23 = 0;
  v53 = v17;
  v24 = (uint64_t)v48;
  if (!v20)
    goto LABEL_3;
LABEL_2:
  v25 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v55 = v23;
  for (i = v25 | (v23 << 6); ; i = __clz(__rbit64(v29)) + (v28 << 6))
  {
    v31 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * i);
    v32 = *v31;
    v33 = v31[1];
    v34 = *(_QWORD *)(v6 + 72) * i;
    v35 = v49;
    (*(void (**)(void))(v6 + 16))();
    v36 = v54;
    sub_23F617BA0();
    sub_23F3B1EA4();
    sub_23F608D9C(v35, v36, v51);
    if (v56)
    {
      swift_bridgeObjectRelease();
      sub_23F60F054();
      sub_23F3B1DF8(v35, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      sub_23F384A80();
      goto LABEL_24;
    }
    sub_23F3B1DF8(v35, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    sub_23F60EF44();
    sub_23F60EE44(v37);
    *v38 = v32;
    v38[1] = v33;
    v40 = *(_QWORD *)(v39 + 56) + v34;
    v41 = v39;
    sub_23F3D9B80(v40, v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
    v42 = *(_QWORD *)(v41 + 16);
    v27 = __OFADD__(v42, 1);
    v43 = v42 + 1;
    if (v27)
      break;
    *(_QWORD *)(v41 + 16) = v43;
    v23 = v55;
    if (v20)
      goto LABEL_2;
LABEL_3:
    v27 = __OFADD__(v23, 1);
    v28 = v23 + 1;
    if (v27)
      goto LABEL_26;
    if (v28 >= v46)
      goto LABEL_23;
    v29 = *(_QWORD *)(v45 + 8 * v28);
    if (!v29)
    {
      v30 = v28 + 1;
      if (v28 + 1 >= v46)
        goto LABEL_23;
      v29 = *(_QWORD *)(v45 + 8 * v30);
      if (v29)
        goto LABEL_12;
      v30 = v28 + 2;
      if (v28 + 2 >= v46)
        goto LABEL_23;
      v29 = *(_QWORD *)(v45 + 8 * v30);
      if (v29)
      {
LABEL_12:
        v28 = v30;
        goto LABEL_13;
      }
      v30 = v28 + 3;
      if (v28 + 3 < v46)
      {
        v29 = *(_QWORD *)(v45 + 8 * v30);
        if (!v29)
        {
          while (1)
          {
            v28 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_27;
            if (v28 >= v46)
              goto LABEL_23;
            v29 = *(_QWORD *)(v45 + 8 * v28);
            ++v30;
            if (v29)
              goto LABEL_13;
          }
        }
        goto LABEL_12;
      }
LABEL_23:
      sub_23F384A80();
LABEL_24:
      sub_23F362870();
      return;
    }
LABEL_13:
    v20 = (v29 - 1) & v29;
    v55 = v28;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
}

void sub_23F60E394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t i;
  uint64_t v18;
  char v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23F362C98();
  v40 = v1;
  v3 = v2;
  v41 = sub_23F60ED68();
  v4 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  sub_23F3834D0();
  v36 = v5;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v6);
  v37 = (uint64_t)v34 - v7;
  sub_23F35D2E8(&qword_256E78F90);
  v8 = sub_23F60F01C();
  v38 = v3;
  v39 = v8;
  sub_23F3839E4();
  v11 = v10 & v9;
  sub_23F60EFBC();
  v34[0] = v3 + 64;
  v34[1] = v13;
  v35 = v14 + 64;
  v15 = v36;
  if (!v11)
    goto LABEL_3;
LABEL_2:
  v16 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  v42 = v12;
  for (i = v16 | (v12 << 6); ; i = __clz(__rbit64(v21)) + (v18 << 6))
  {
    v23 = v37;
    v24 = (uint64_t *)(*(_QWORD *)(v38 + 48) + 16 * i);
    v25 = *v24;
    v26 = v24[1];
    v27 = *(_QWORD *)(v4 + 72) * i;
    sub_23F3D9B80(v37, *(_QWORD *)(v38 + 56) + v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    sub_23F617BA0();
    sub_23F609C84(v23, v40);
    if (v0)
    {
      sub_23F38458C();
      swift_release();
      sub_23F3B1DF8(v23, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
LABEL_28:
      sub_23F362870();
      return;
    }
    sub_23F3B1DF8(v23, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    *(_QWORD *)(v35 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v28 = v39;
    v29 = (_QWORD *)(*(_QWORD *)(v39 + 48) + 16 * i);
    v30 = v39;
    *v29 = v25;
    v29[1] = v26;
    sub_23F3D9B80(*(_QWORD *)(v28 + 56) + v27, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    v31 = *(_QWORD *)(v30 + 16);
    v20 = __OFADD__(v31, 1);
    v32 = v31 + 1;
    if (v20)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    *(_QWORD *)(v30 + 16) = v32;
    v12 = v42;
    if (v11)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v12, 1))
      goto LABEL_30;
    sub_23F60F004();
    if (v19 == v20)
      goto LABEL_28;
    v21 = *(_QWORD *)(v34[0] + 8 * v18);
    if (!v21)
      break;
LABEL_17:
    v11 = (v21 - 1) & v21;
    v42 = v18;
  }
  sub_23F60EE94();
  if (v19 == v20)
    goto LABEL_28;
  sub_23F60EE60();
  if (v21)
    goto LABEL_16;
  sub_23F60EE94();
  if (v19 == v20)
    goto LABEL_28;
  sub_23F60EE60();
  if (v21)
    goto LABEL_16;
  sub_23F60EE94();
  if (v19 == v20)
    goto LABEL_28;
  sub_23F60EE60();
  if (v21)
  {
LABEL_16:
    v18 = v22;
    goto LABEL_17;
  }
  while (!__OFADD__(v22, 1))
  {
    sub_23F60F004();
    if (v19 == v20)
      goto LABEL_28;
    v21 = *(_QWORD *)(v34[0] + 8 * v18);
    v22 = v33 + 1;
    if (v21)
      goto LABEL_17;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_23F60E5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;

  v7 = v6;
  v14 = sub_23F60ED68();
  v62 = *(_QWORD *)(v14 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  v58 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v17);
  v59 = (uint64_t)&v54 - v18;
  sub_23F35D2E8(&qword_256E78F90);
  v19 = sub_23F60F01C();
  v60 = a1;
  sub_23F3839E4();
  v22 = v21 & v20;
  sub_23F60EFBC();
  v55 = a1 + 64;
  v56 = v23;
  v57 = v24 + 64;
  v66 = a2;
  swift_retain();
  v64 = a3;
  swift_retain();
  v63 = a4;
  v25 = v14;
  sub_23F617BA0();
  v65 = a5;
  result = sub_23F617BA0();
  v27 = 0;
  v61 = v19;
  v28 = v58;
  if (!v22)
    goto LABEL_3;
LABEL_2:
  v71 = v7;
  v67 = (v22 - 1) & v22;
  v68 = v27;
  v29 = __clz(__rbit64(v22)) | (v27 << 6);
  v30 = v62;
  while (1)
  {
    v37 = v59;
    v38 = *(_QWORD *)(v60 + 56);
    v39 = (uint64_t *)(*(_QWORD *)(v60 + 48) + 16 * v29);
    v40 = v39[1];
    v69 = *v39;
    v70 = v29;
    v41 = *(_QWORD *)(v30 + 72) * v29;
    sub_23F38431C(v59, v38 + v41, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 16));
    v42 = v66;
    swift_retain();
    v43 = v25;
    v44 = v64;
    swift_retain();
    v45 = v63;
    sub_23F3668F4();
    v46 = v65;
    sub_23F383738();
    sub_23F383E5C();
    v47 = v42;
    v48 = v71;
    sub_23F60A92C(v37, v47, v44, v45, v46, a6);
    v7 = v48;
    if (v48)
    {
      sub_23F3837B0();
      v19 = v61;
      swift_release();
      sub_23F60EEC4();
      sub_23F384A80();
      sub_23F384A80();
      sub_23F3D9B70();
      sub_23F3D9B70();
      return v19;
    }
    sub_23F60EEC4();
    v49 = v70;
    *(_QWORD *)(v57 + ((v70 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v70;
    v19 = v61;
    v50 = (_QWORD *)(*(_QWORD *)(v61 + 48) + 16 * v49);
    *v50 = v69;
    v50[1] = v40;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v30 + 32))(*(_QWORD *)(v19 + 56) + v41, v28, v43);
    v51 = *(_QWORD *)(v19 + 16);
    v31 = __OFADD__(v51, 1);
    v52 = v51 + 1;
    if (v31)
      break;
    v25 = v43;
    *(_QWORD *)(v19 + 16) = v52;
    v22 = v67;
    v27 = v68;
    if (v67)
      goto LABEL_2;
LABEL_3:
    v31 = __OFADD__(v27, 1);
    v32 = v27 + 1;
    v30 = v62;
    if (v31)
      goto LABEL_25;
    if (v32 >= v56)
      goto LABEL_22;
    if (*(_QWORD *)(v55 + 8 * v32))
      goto LABEL_12;
    if (v32 + 1 >= v56)
      goto LABEL_22;
    if (*(_QWORD *)(v55 + 8 * (v32 + 1)))
      goto LABEL_12;
    if (v32 + 2 >= v56)
      goto LABEL_22;
    if (*(_QWORD *)(v55 + 8 * (v32 + 2)))
      goto LABEL_12;
    v33 = v32 + 3;
    if (v32 + 3 >= v56)
    {
LABEL_22:
      sub_23F384A80();
      sub_23F3D9B70();
      sub_23F3D9B70();
      sub_23F384A80();
      return v19;
    }
    if (!*(_QWORD *)(v55 + 8 * v33))
    {
      do
      {
        v53 = v33 + 1;
        if (__OFADD__(v33, 1))
          goto LABEL_26;
        if (v53 >= v56)
          goto LABEL_22;
        ++v33;
      }
      while (!*(_QWORD *)(v55 + 8 * v53));
    }
LABEL_12:
    v71 = v7;
    sub_23F389A18();
    v67 = v34;
    v68 = v35;
    v29 = v36 + (v35 << 6);
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23F60E970()
{
  uint64_t v0;

  sub_23F3D7A48(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_23F60E998()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23F60E9C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t i;
  uint64_t v23;
  char v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[4];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_23F362C98();
  v52 = v0;
  v47 = v1;
  v48 = v2;
  v4 = v3;
  v5 = sub_23F60ED68();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  sub_23F60EDE8(v10, v11, v12, v13, v14, v15, v16, v17, v45[0]);
  sub_23F35D2E8(&qword_256E78F90);
  sub_23F61CA78();
  v46 = v4;
  sub_23F3839E4();
  sub_23F60EFBC();
  v45[0] = v4 + 64;
  v45[1] = v20;
  v45[2] = v21 + 64;
  v49 = v21;
  if (!v18)
    goto LABEL_3;
LABEL_2:
  v50 = (v18 - 1) & v18;
  v51 = v19;
  for (i = __clz(__rbit64(v18)) | (v19 << 6); ; i = v32 + (v31 << 6))
  {
    v33 = (uint64_t *)(*(_QWORD *)(v46 + 48) + 16 * i);
    v35 = *v33;
    v34 = v33[1];
    v36 = *(_QWORD *)(v6 + 72) * i;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16))(v45[3], *(_QWORD *)(v46 + 56) + v36, v5);
    sub_23F383E5C();
    sub_23F60BE3C(v47, v48);
    if (v52)
    {
      sub_23F3837B0();
      sub_23F60F054();
      sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
LABEL_27:
      sub_23F362870();
      return;
    }
    v52 = 0;
    sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    sub_23F60EF44();
    sub_23F60EE44(v37);
    *v38 = v35;
    v38[1] = v34;
    v40 = v39;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v39 + 56) + v36, v9, v5);
    v41 = *(_QWORD *)(v40 + 16);
    v25 = __OFADD__(v41, 1);
    v42 = v41 + 1;
    if (v25)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    *(_QWORD *)(v40 + 16) = v42;
    v18 = v50;
    v19 = v51;
    if (v50)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v19, 1))
      goto LABEL_29;
    sub_23F60F004();
    if (v24 == v25)
      goto LABEL_27;
    if (!*(_QWORD *)(v45[0] + 8 * v23))
    {
      sub_23F60EE94();
      if (v24 == v25)
        goto LABEL_27;
      sub_23F60EE60();
      if (!v26)
      {
        sub_23F60EE94();
        if (v24 == v25)
          goto LABEL_27;
        sub_23F60EE60();
        if (!v27)
        {
          sub_23F60EE94();
          if (v24 == v25)
            goto LABEL_27;
          sub_23F60EE60();
          if (!v29)
            break;
        }
      }
    }
LABEL_16:
    sub_23F389A18();
    v50 = v30;
    v51 = v31;
  }
  while (!__OFADD__(v28, 1))
  {
    sub_23F60F004();
    if (v24 == v25)
      goto LABEL_27;
    v28 = v43 + 1;
    if (*(_QWORD *)(v45[0] + 8 * v44))
      goto LABEL_16;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_23F60EC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FDB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F60EC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FDB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F60EC9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 96))(v0, *(_QWORD *)(v2 - 248));
}

uint64_t sub_23F60ECB0()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23F60ECB8@<X0>(uint64_t (*a1)(uint64_t, _QWORD, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, *(unsigned int *)(v3 - 292), v2);
}

uint64_t sub_23F60ECCC()
{
  return swift_allocObject();
}

uint64_t sub_23F60ECD8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_23F617D08();
}

uint64_t sub_23F60ECF8()
{
  return swift_retain_n();
}

uint64_t sub_23F60ED00@<X0>(uint64_t (*a1)(uint64_t, _QWORD, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, *(unsigned int *)(v3 - 300), v2);
}

uint64_t sub_23F60ED14()
{
  return swift_deallocUninitializedObject();
}

uint64_t sub_23F60ED24()
{
  return swift_slowAlloc();
}

uint64_t sub_23F60ED34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_23F6184B8();
}

uint64_t sub_23F60ED58()
{
  return swift_release();
}

uint64_t sub_23F60ED60()
{
  return swift_deallocUninitializedObject();
}

uint64_t sub_23F60ED68()
{
  return sub_23F6184B8();
}

void sub_23F60ED70(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_23F60ED7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_23F6184AC();
}

uint64_t sub_23F60ED8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 128))(a1, a2, v2);
}

uint64_t sub_23F60ED98()
{
  uint64_t v0;

  return v0;
}

double sub_23F60EDA8()
{
  double v0;

  return v0;
}

uint64_t sub_23F60EDC8()
{
  return swift_allocBox();
}

uint64_t sub_23F60EDD0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F60EDD8()
{
  uint64_t v0;

  return v0;
}

void sub_23F60EDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 136) = (char *)&a9 - v9;
}

uint64_t sub_23F60EDFC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F60EE10(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F60EE18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;

  return sub_23F60A92C(a1, a2, v2, v3, v4, v5);
}

void sub_23F60EE44(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + a1) |= v1;
}

uint64_t sub_23F60EE6C()
{
  return swift_deallocBox();
}

uint64_t sub_23F60EE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(v0, v1);
}

uint64_t sub_23F60EE8C()
{
  return swift_allocBox();
}

uint64_t sub_23F60EEA0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F60EEAC()
{
  return swift_projectBox();
}

uint64_t sub_23F60EEB4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F60EEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void sub_23F60EED4()
{
  uint64_t v0;
  uint64_t v1;

  **(_QWORD **)(v1 - 144) = v0;
}

uint64_t sub_23F60EEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F60EEEC(uint64_t a1, uint64_t a2)
{
  return sub_23F60BE3C(a1, a2);
}

uint64_t sub_23F60EEF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F60EEFC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F60EF08()
{
  return sub_23F61CC1C();
}

uint64_t sub_23F60EF18()
{
  return swift_allocBox();
}

uint64_t sub_23F60EF20()
{
  return sub_23F618494();
}

uint64_t sub_23F60EF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F608D9C(a1, a2, a3);
}

uint64_t sub_23F60EF30()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F60EF64()
{
  return swift_release();
}

uint64_t sub_23F60EF6C()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23F60EF74()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F60EF88(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

void sub_23F60EF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 120) = (char *)&a9 - v9;
}

void sub_23F60EFB0()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
}

uint64_t sub_23F60EFC8()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F60EFDC(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_23F3EC80C();
}

uint64_t sub_23F60EFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F60F010()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F60F01C()
{
  return sub_23F61CA78();
}

uint64_t sub_23F60F028()
{
  return sub_23F61CC1C();
}

uint64_t sub_23F60F034(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F60F03C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F60F044()
{
  return swift_deallocBox();
}

uint64_t sub_23F60F04C()
{
  return swift_allocBox();
}

uint64_t sub_23F60F054()
{
  return swift_release();
}

uint64_t *initializeBufferWithCopyOfBuffer for ValueResolver(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B140();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F61B32C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for ValueResolver(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23F61B140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23F61B32C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for ValueResolver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ValueResolver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ValueResolver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ValueResolver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ValueResolver()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F60F360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F428AC4();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = sub_23F384B34();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return sub_23F36195C(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for ValueResolver()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F60F3CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_23F428AC4();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = sub_23F384B34();
    v10 = a1 + *(int *)(a4 + 20);
  }
  return sub_23F36196C(v10, a2, a2, v9);
}

uint64_t type metadata accessor for ValueResolver()
{
  uint64_t result;

  result = qword_256E7F900;
  if (!qword_256E7F900)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F60F46C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F61B140();
  if (v1 <= 0x3F)
  {
    result = sub_23F61B32C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23F60F4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char v20;
  char v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v35 = a2;
  v4 = sub_23F61B92C();
  v34 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v32 = (char *)v26 - v7;
  v8 = sub_23F61A408();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v31 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v26 - v13;
  v15 = MEMORY[0x24BEE4AF8];
  v37 = MEMORY[0x24BEE4AF8];
  v30 = *(_QWORD *)(a1 + 16);
  if (v30)
  {
    v26[1] = v2;
    v27 = v8;
    v16 = 0;
    v28 = a1;
    v29 = v4;
    while (v16 < *(_QWORD *)(a1 + 16))
    {
      v17 = *(_QWORD *)(v9 + 72);
      v36 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v14, a1 + v36 + v17 * v16, v8);
      sub_23F61A3FC();
      v18 = v14;
      v19 = v32;
      sub_23F471838();
      v21 = v20;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v29);
      if ((v21 & 1) != 0)
      {
        v22 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v22(v31, v18, v8);
        v23 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37C12C();
          v23 = v37;
        }
        v24 = *(_QWORD *)(v23 + 16);
        if (v24 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          sub_23F37C12C();
          v23 = v37;
        }
        *(_QWORD *)(v23 + 16) = v24 + 1;
        v25 = v23 + v36 + v24 * v17;
        v8 = v27;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(v25, v31, v27);
        v37 = v23;
        a1 = v28;
        v14 = v18;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v18, v8);
        v14 = v18;
      }
      if (v30 == ++v16)
      {
        v15 = v37;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

uint64_t sub_23F60F78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6[16] = a5;
  v6[17] = v5;
  v6[14] = a3;
  v6[15] = a4;
  v6[12] = a1;
  v6[13] = a2;
  v7 = sub_23F61A408();
  v6[18] = v7;
  v6[19] = *(_QWORD *)(v7 - 8);
  v6[20] = sub_23F366578();
  v8 = sub_23F61B998();
  v6[21] = v8;
  v6[22] = *(_QWORD *)(v8 - 8);
  v6[23] = sub_23F366578();
  v6[24] = type metadata accessor for EnumResolver();
  v6[25] = sub_23F366578();
  sub_23F35D2E8(&qword_256E7B340);
  v6[26] = sub_23F366578();
  v6[27] = type metadata accessor for QueryResolver();
  v6[28] = sub_23F366654();
  v6[29] = sub_23F3666CC();
  v9 = sub_23F61B9BC();
  v6[30] = v9;
  v6[31] = *(_QWORD *)(v9 - 8);
  v6[32] = sub_23F366578();
  v10 = sub_23F616D48();
  v6[33] = v10;
  v6[34] = *(_QWORD *)(v10 - 8);
  v6[35] = sub_23F366578();
  sub_23F35D2E8(&qword_256E70760);
  v6[36] = sub_23F366578();
  v11 = sub_23F616E68();
  v6[37] = v11;
  v6[38] = *(_QWORD *)(v11 - 8);
  v6[39] = sub_23F366578();
  v12 = sub_23F617198();
  v6[40] = v12;
  v6[41] = *(_QWORD *)(v12 - 8);
  v6[42] = sub_23F366578();
  v13 = sub_23F616FC4();
  v6[43] = v13;
  v6[44] = *(_QWORD *)(v13 - 8);
  v6[45] = sub_23F366578();
  v6[46] = type metadata accessor for DateComponentsResolver();
  v6[47] = sub_23F366578();
  v14 = sub_23F619E98();
  v6[48] = v14;
  v6[49] = *(_QWORD *)(v14 - 8);
  v6[50] = sub_23F366654();
  v6[51] = sub_23F3666CC();
  v6[52] = sub_23F3666CC();
  v6[53] = sub_23F3666CC();
  v6[54] = sub_23F3666CC();
  v6[55] = sub_23F3666CC();
  v15 = sub_23F617E64();
  v6[56] = v15;
  v6[57] = *(_QWORD *)(v15 - 8);
  v6[58] = sub_23F366578();
  v16 = sub_23F61A0F0();
  v6[59] = v16;
  v6[60] = *(_QWORD *)(v16 - 8);
  v6[61] = sub_23F366654();
  v6[62] = sub_23F3666CC();
  v17 = sub_23F6170CC();
  v6[63] = v17;
  v6[64] = *(_QWORD *)(v17 - 8);
  v6[65] = sub_23F366654();
  v6[66] = sub_23F3666CC();
  v6[67] = type metadata accessor for NLDateResolver();
  v6[68] = sub_23F366578();
  v6[69] = type metadata accessor for RelativeDateResolver();
  v6[70] = sub_23F366578();
  sub_23F35D2E8(&qword_256E701F0);
  v6[71] = sub_23F366654();
  v6[72] = sub_23F3666CC();
  v6[73] = sub_23F35D2E8(&qword_256E7F940);
  v6[74] = sub_23F366578();
  v18 = sub_23F61B92C();
  v6[75] = v18;
  v6[76] = *(_QWORD *)(v18 - 8);
  v6[77] = sub_23F366654();
  v6[78] = sub_23F3666CC();
  v6[79] = sub_23F3666CC();
  v6[80] = sub_23F3666CC();
  v6[81] = sub_23F3666CC();
  v19 = sub_23F617D08();
  v6[82] = v19;
  v6[83] = *(_QWORD *)(v19 - 8);
  v6[84] = sub_23F366578();
  v20 = sub_23F61A570();
  v6[85] = v20;
  v6[86] = *(_QWORD *)(v20 - 8);
  v6[87] = sub_23F366654();
  v6[88] = sub_23F3666CC();
  v6[89] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E702C8);
  v6[90] = sub_23F366578();
  v21 = sub_23F61B95C();
  v6[91] = v21;
  v6[92] = *(_QWORD *)(v21 - 8);
  v6[93] = sub_23F366654();
  v6[94] = sub_23F3666CC();
  v22 = sub_23F61B9EC();
  v6[95] = v22;
  v6[96] = *(_QWORD *)(v22 - 8);
  v6[97] = sub_23F366654();
  v6[98] = sub_23F3666CC();
  v6[99] = sub_23F3666CC();
  v6[100] = sub_23F3666CC();
  v6[101] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E70268);
  v6[102] = sub_23F366578();
  v23 = sub_23F61BBA8();
  v6[103] = v23;
  v6[104] = *(_QWORD *)(v23 - 8);
  v6[105] = sub_23F366654();
  v6[106] = sub_23F3666CC();
  v6[107] = sub_23F3666CC();
  v6[108] = sub_23F3666CC();
  v24 = sub_23F61B5D8();
  v6[109] = v24;
  v6[110] = *(_QWORD *)(v24 - 8);
  v6[111] = sub_23F366578();
  v25 = sub_23F61AC24();
  v6[112] = v25;
  v6[113] = *(_QWORD *)(v25 - 8);
  v6[114] = sub_23F366578();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F60FBA0()
{
  uint64_t *v0;
  uint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  int v53;
  uint64_t *v54;
  uint64_t v55;
  _QWORD *v56;
  int v57;
  uint64_t *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t **v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  unsigned int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t *v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t);
  uint64_t v117;
  uint64_t v118;
  double v119;
  uint64_t v120;
  uint64_t result;
  _QWORD *v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  __int16 v136;
  __int16 v137;
  __int16 v138;
  __int16 v139;
  __int16 v140;
  __int16 v141;
  __int16 v142;
  __int16 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  NSObject *v155;
  os_log_type_t v156;
  _BOOL4 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint8_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void (*v189)(uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int v197;
  __int16 v198;
  __int16 v199;
  __int16 v200;
  __int16 v201;
  __int16 v202;
  __int16 v203;
  __int16 v204;
  __int16 v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  void (*v214)(char *, uint64_t, uint64_t);
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  NSObject *v225;
  os_log_type_t v226;
  _BOOL4 v227;
  uint64_t v228;
  uint8_t *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  void *v239;
  os_log_type_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  void (*v258)(uint64_t, uint64_t, uint64_t);
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  os_log_type_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  void (*v268)(uint64_t, uint64_t *);
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  int *v273;
  uint64_t *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  _QWORD *v279;
  uint64_t v280;
  uint64_t *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  void (*v286)(uint64_t, uint64_t);
  uint64_t v287;
  void (*v288)(uint64_t);
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t *v292;
  int *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  void (*v300)(uint64_t, uint64_t);
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t *v305;
  uint64_t v306;
  uint64_t v307;
  NSObject *v308;
  os_log_type_t v309;
  _BOOL4 v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  void (*v342)(uint64_t);
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  os_log_type_t v357;
  uint64_t v358;
  uint64_t v359;
  void (*v360)(uint64_t, uint64_t);
  uint64_t v361;
  void (*v362)(uint64_t, uint64_t);
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  void (*v369)(uint64_t, uint64_t);
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  id v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  void (*v386)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v387;
  uint64_t v388;
  uint64_t v389;
  _OWORD *v390;
  uint64_t v391;
  uint64_t v392[3];

  v1 = v0;
  v2 = 0xD000000000000034;
  v3 = (unint64_t)"time23CachingQueryableToolbox";
  v4 = 0;
  sub_23F374898(0xD00000000000008CLL, 0x800000023F63C3A0, 30, 0xD000000000000034, 0x800000023F63C430);
  v5 = v0[17];
  v6 = v5 + *(int *)(type metadata accessor for ValueResolver() + 20);
  sub_23F61AC18();
  sub_23F61B338();
  v370 = v6;
  sub_23F362C60();
  v7 = sub_23F61B530();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = v1[104];
    v10 = v7 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v4 = *(_QWORD *)(v9 + 72);
    v3 = *(_QWORD *)(v9 + 16);
    sub_23F617BA0();
    while (1)
    {
      v2 = v1[114];
      v11 = v1;
      ((void (*)(uint64_t, unint64_t, uint64_t))v3)(v1[107], v10, v1[103]);
      v12 = sub_23F61BB78();
      v14 = v13;
      if (v12 == sub_23F61AC00() && v14 == v15)
        break;
      v17 = sub_23F61CC64();
      sub_23F362984();
      sub_23F384364();
      if ((v17 & 1) != 0)
        goto LABEL_12;
      v1 = v11;
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11[107], v11[103]);
      v10 += v4;
      if (!--v8)
      {
        sub_23F614B4C();
        sub_23F614B38();
        goto LABEL_13;
      }
    }
    sub_23F384364();
    sub_23F614B4C();
LABEL_12:
    sub_23F614B38();
    v19 = v11[107];
    v20 = v11[104];
    v21 = v11[102];
    sub_23F384364();
    v22 = v21;
    v1 = v11;
    sub_23F38431C(v22, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32));
    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
LABEL_13:
  sub_23F36196C(v1[102], v18, 1, v1[103]);
  swift_bridgeObjectRelease();
  v23 = v1;
  v24 = v3 | 0x8000000000000000;
  sub_23F374874(v2 + 88, v3 | 0x8000000000000000, 34, 0xD000000000000034, 0x800000023F63C430);
  if (v4)
  {
    v25 = v23[114];
    v26 = v23[113];
    v27 = v23[112];
    v28 = v23[111];
    v29 = v23[110];
    sub_23F3625D8(v23[102], &qword_256E70268);
    sub_23F383F80(v28, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
LABEL_16:
    swift_task_dealloc();
    sub_23F366698();
    sub_23F3666E4();
    sub_23F366708();
    sub_23F3666EC();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666D4();
    sub_23F3666C4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383C2C();
    sub_23F383C24();
    sub_23F383C1C();
    sub_23F383C14();
    sub_23F383C0C();
    sub_23F383C04();
    sub_23F383BFC();
    sub_23F383BF4();
    sub_23F383BEC();
    sub_23F383BE4();
    sub_23F383BDC();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23F383B24();
    sub_23F383B1C();
    sub_23F383B14();
    sub_23F383B0C();
    sub_23F383B04();
    sub_23F383C54();
    sub_23F383C5C();
    sub_23F383AFC();
    sub_23F383AF4();
    sub_23F383AEC();
    sub_23F383AE4();
    sub_23F383ADC();
    sub_23F383AD4();
    goto LABEL_17;
  }
  v30 = v23[92];
  v31 = v23[90];
  sub_23F3625D8(v23[102], &qword_256E70268);
  MEMORY[0x24266F0AC]();
  v32 = sub_23F61B938();
  v33 = *(void (**)(uint64_t))(v30 + 8);
  v34 = sub_23F614B0C();
  v33(v34);
  sub_23F36FE84(v32, v31);
  sub_23F362984();
  sub_23F3748BC(v2 + 88, v24, 41, 0xD000000000000034, 0x800000023F63C430);
  v36 = v23[93];
  v37 = v23[92];
  sub_23F3625D8(v23[90], &qword_256E702C8);
  MEMORY[0x24266F0AC]();
  if (sub_23F383E88(v36, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 88)) == *MEMORY[0x24BEB9A50])
  {
    v38 = v23[89];
    v39 = v23[86];
    v40 = v23[13];
    sub_23F3B13E4(v23[92]);
    swift_release();
    sub_23F38426C(v38, v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 16));
    if (sub_23F383E88(v38, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 88)) == *MEMORY[0x24BE556A0])
    {
      v41 = v23[101];
      v42 = (uint64_t *)v23[89];
      sub_23F3B13E4(v23[86]);
      v43 = *v42;
      v44 = swift_task_alloc();
      *(_QWORD *)(v44 + 16) = v43;
      *(_QWORD *)(v44 + 24) = v41;
      sub_23F367C08();
      sub_23F6149C8();
      sub_23F614B2C();
      v79 = v78;
      v80 = v23[84];
      v352 = v23[82];
      v344 = v23[83];
      v347 = v23[16];
      sub_23F366698();
      sub_23F6144E8(v79);
      sub_23F362984();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v344 + 16))(v80, v347, v352);
      sub_23F61A114();
      sub_23F435BB0();
      sub_23F614B20();
      sub_23F4063EC();
      sub_23F6148C4();
      sub_23F5DB644();
      sub_23F614964();
      goto LABEL_61;
    }
    sub_23F384274(v23[86]);
  }
  else
  {
    ((void (*)(uint64_t, uint64_t))v33)(v23[93], v23[91]);
  }
  v45 = v23[96];
  v46 = v23[95];
  v47 = v23[86];
  v48 = v23[85];
  v49 = v23[74];
  v50 = v23[13];
  v51 = (uint64_t *)(v49 + *(int *)(v23[73] + 48));
  v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
  v52(v49, v23[101], v46);
  v386 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v47 + 16);
  v386(v51, v50, v48);
  v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 88))(v49, v46);
  if (v53 != *MEMORY[0x24BEB9D18])
  {
    v58 = v23;
    if (v53 == *MEMORY[0x24BEB9CF8])
    {
      v65 = v23[86];
      sub_23F614B18(v23[99], v23[74]);
      sub_23F614AA0();
      swift_release();
      v66 = sub_23F383E88((uint64_t)v51, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 88));
      if (v66 == *MEMORY[0x24BE556B0])
      {
        sub_23F3D9D84(v23[86]);
        v68 = *v51;
        v67 = v51[1];
        sub_23F61B344();
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v23[22] + 88))(v23[23], v23[21]) != *MEMORY[0x24BEB9B50])
        {
          v150 = v23[101];
          v151 = v23[98];
          v152 = v23[95];
          v153 = v23[22];
          v154 = v23[23];
          swift_bridgeObjectRelease();
          sub_23F3D98EC(v154, *(uint64_t (**)(uint64_t, uint64_t))(v153 + 8));
          sub_23F619094();
          v52(v151, v150, v152);
          v155 = sub_23F619E8C();
          v156 = sub_23F61C628();
          v157 = os_log_type_enabled(v155, v156);
          v158 = v23[98];
          v159 = v23[96];
          v160 = v23[51];
          v162 = v23[48];
          v161 = v23[49];
          v387 = v23;
          if (v157)
          {
            v364 = v23[95];
            v163 = (uint8_t *)sub_23F366668();
            v392[0] = sub_23F366668();
            *(_DWORD *)v163 = 136315138;
            v164 = sub_23F61B9C8();
            sub_23F507C64(v164, v165);
            v23[9] = v166;
            sub_23F61C790();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v158, v364);
            sub_23F38485C(&dword_23F35A000, v155, v156, "type is not a valid AppEntity: %s", v163);
            sub_23F57D7BC();
            sub_23F366530();
          }
          v360 = *(void (**)(uint64_t, uint64_t))(v159 + 8);
          v360(v158, v23[95]);

          (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v160, v162);
          sub_23F6149C8();
          v365 = v23[111];
          v185 = v23[110];
          v186 = v23[101];
          v187 = v387[95];
          v373 = v387[74];
          sub_23F384B58();
          sub_23F3612C0((unint64_t *)&qword_256E6FB48, (uint64_t (*)(uint64_t))type metadata accessor for InterpreterError, (uint64_t)&protocol conformance descriptor for InterpreterError);
          sub_23F614990();
          sub_23F614AC0();
          swift_willThrow();
          v360(v186, v187);
          v188 = sub_23F384690();
          v189(v188);
          sub_23F383F80(v365, *(uint64_t (**)(uint64_t, uint64_t))(v185 + 8));
          sub_23F53A774();
          v360(v373, v187);
          goto LABEL_16;
        }
        v101 = v23[114];
        v102 = v23[113];
        v371 = v23[103];
        v378 = v23[108];
        v103 = v23[83];
        v358 = v23[82];
        v363 = v23[104];
        v104 = (int *)v23[27];
        v105 = (uint64_t *)v23[28];
        v106 = v23[16];
        v381 = v23[17];
        v383 = v23[12];
        sub_23F384274(v23[22]);
        *v105 = v68;
        v105[1] = v67;
        v107 = *MEMORY[0x24BE56EE0];
        v108 = sub_23F61B410();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 104))(v105, v107, v108);
        sub_23F4244A8((uint64_t)v105 + v104[5], v101, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v102 + 16));
        (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))((char *)v105 + v104[6], v106, v358);
        (*(void (**)(char *, uint64_t, uint64_t))(v363 + 16))((char *)v105 + v104[7], v378, v371);
        v109 = (char *)v105 + v104[8];
        v110 = sub_23F428AC4();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v109, v381, v110);
        sub_23F56EF14(v383);
        v111 = v23[111];
        v112 = v23[110];
        v113 = v23[104];
        v114 = v23[96];
        v115 = v23[95];
        v372 = v23[74];
        sub_23F3663AC(v23[28], (uint64_t (*)(_QWORD))type metadata accessor for QueryResolver);
        v116 = *(void (**)(uint64_t))(v114 + 8);
        v117 = sub_23F614B0C();
        v116(v117);
        sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v113 + 8));
        sub_23F383E64(v111, *(uint64_t (**)(uint64_t, uint64_t))(v112 + 8));
        sub_23F53A774();
        ((void (*)(uint64_t, uint64_t))v116)(v372, v115);
LABEL_61:
        swift_task_dealloc();
        sub_23F3666E4();
        sub_23F366708();
        sub_23F3666EC();
        sub_23F3666C4();
        sub_23F3666DC();
        sub_23F362CC8();
        sub_23F3666A0();
        sub_23F3666D4();
        sub_23F366698();
        sub_23F3668D4();
        sub_23F383980();
        sub_23F3667E0();
        sub_23F383898();
        sub_23F383978();
        sub_23F383970();
        sub_23F383890();
        sub_23F383888();
        sub_23F383880();
        sub_23F383878();
        sub_23F383870();
        sub_23F383868();
        sub_23F383C4C();
        sub_23F383C44();
        sub_23F383C3C();
        sub_23F383C34();
        sub_23F383C2C();
        sub_23F383C24();
        sub_23F383C1C();
        sub_23F383C14();
        sub_23F383C0C();
        sub_23F383C04();
        sub_23F383BFC();
        sub_23F383BF4();
        sub_23F383BEC();
        sub_23F383BE4();
        sub_23F383BDC();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_23F383B24();
        sub_23F383B1C();
        sub_23F383B14();
        sub_23F383B0C();
        sub_23F383B04();
        sub_23F383C54();
        sub_23F383C5C();
        sub_23F383AFC();
        sub_23F383AF4();
        sub_23F383AEC();
        sub_23F383AE4();
        sub_23F383ADC();
        sub_23F383AD4();
        sub_23F383C6C();
        sub_23F384760();
LABEL_17:
        sub_23F614A28();
        __asm { BR              X0 }
      }
      v58 = v23;
      if (v66 == *MEMORY[0x24BE556B8])
      {
        v81 = v23[101];
        sub_23F614A00();
        v82 = (uint64_t *)v23[78];
        v83 = v23[24];
        v84 = v23[25];
        sub_23F3D9D84(v85);
        v87 = *v51;
        v86 = v51[1];
        sub_23F614B18(v84, v81);
        sub_23F384B34();
        v88 = sub_23F614B6C();
        v89(v88, v370);
        v90 = (uint64_t *)(v84 + *(int *)(v83 + 20));
        *v90 = v87;
        v90[1] = v86;
        sub_23F4270DC(v82);
        v147 = v58[81];
        v148 = v58[78];
        v149 = v58[76];
        sub_23F3663AC(v58[25], (uint64_t (*)(_QWORD))type metadata accessor for EnumResolver);
        sub_23F38426C(v147, v148, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v149 + 32));
        v23 = v58;
LABEL_60:
        sub_23F614B58();
        v356 = v23[103];
        v359 = v23[108];
        v348 = v23[101];
        v353 = v23[104];
        v345 = v23[95];
        v333 = v23[83];
        v335 = v23[84];
        v171 = v23[82];
        v172 = v23[81];
        v337 = v172;
        v173 = v23[77];
        v174 = v23[76];
        v175 = v23[19];
        v176 = v23[20];
        v339 = v23[18];
        v177 = v23[16];
        v342 = *(void (**)(uint64_t))(v23[96] + 8);
        v342(v23[74]);
        sub_23F3612C0(&qword_256E6FFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52158]);
        sub_23F61BFEC();
        sub_23F38426C(v173, v172, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v174 + 16));
        sub_23F61A3E4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v333 + 16))(v335, v177, v171);
        sub_23F35D2E8(&qword_256E70298);
        v178 = (*(unsigned __int8 *)(v175 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80);
        v179 = swift_allocObject();
        *(_OWORD *)(v179 + 16) = xmmword_23F61E7E0;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v175 + 16))(v179 + v178, v176, v339);
        sub_23F61A114();
        sub_23F383F80(v176, *(uint64_t (**)(uint64_t, uint64_t))(v175 + 8));
        sub_23F383E88(v337, *(uint64_t (**)(uint64_t, uint64_t))(v174 + 8));
        ((void (*)(uint64_t, uint64_t))v342)(v348, v345);
        (*(void (**)(uint64_t, uint64_t))(v353 + 8))(v359, v356);
        sub_23F4063EC();
        sub_23F6148C4();
        sub_23F5DB644();
        swift_storeEnumTagMultiPayload();
        goto LABEL_61;
      }
    }
LABEL_107:
    v301 = v58[101];
    v302 = v58[97];
    v303 = v58[95];
    v304 = v58[88];
    v305 = v58;
    v306 = v58[85];
    v307 = v305[13];
    sub_23F619094();
    v386((uint64_t *)v304, v307, v306);
    v52(v302, v301, v303);
    v308 = sub_23F619E8C();
    v309 = sub_23F61C628();
    v310 = os_log_type_enabled(v308, v309);
    v311 = v305[97];
    v312 = v305[96];
    v313 = v305[95];
    v314 = v305[88];
    if (v310)
    {
      v357 = v309;
      v315 = v305[87];
      v350 = v305[86];
      v368 = v305[95];
      v316 = v305[85];
      v355 = v305[96];
      v317 = sub_23F366668();
      v392[0] = sub_23F366668();
      *(_DWORD *)v317 = 136315394;
      v386((uint64_t *)v315, v314, v316);
      v318 = sub_23F61C16C();
      sub_23F507C64(v318, v319);
      v305[7] = v320;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      sub_23F3D98EC(v314, *(uint64_t (**)(uint64_t, uint64_t))(v350 + 8));
      *(_WORD *)(v317 + 12) = 2080;
      v321 = sub_23F61B9C8();
      sub_23F507C64(v321, v322);
      v305[8] = v323;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v355 + 8))(v311, v368);
      _os_log_impl(&dword_23F35A000, v308, v357, "cannot resolve %s to %s", (uint8_t *)v317, 0x16u);
      swift_arrayDestroy();
      sub_23F366530();
    }
    sub_23F614A00();
    v324 = v305[49];
    v325 = v305[50];
    v326 = v305[48];
    (*(void (**)(uint64_t))(v327 + 8))(v314);
    v369 = *(void (**)(uint64_t, uint64_t))(v312 + 8);
    v369(v311, v313);

    (*(void (**)(uint64_t, uint64_t))(v324 + 8))(v325, v326);
    sub_23F614B58();
    v377 = v305[111];
    v328 = v305[110];
    v329 = v305[108];
    v330 = v305[104];
    v331 = v305[101];
    v332 = v305[95];
    v380 = v305[74];
    sub_23F384B58();
    sub_23F3612C0((unint64_t *)&qword_256E6FB48, (uint64_t (*)(uint64_t))type metadata accessor for InterpreterError, (uint64_t)&protocol conformance descriptor for InterpreterError);
    sub_23F614990();
    sub_23F614AC0();
    swift_willThrow();
    v369(v331, v332);
    sub_23F3D98EC(v329, *(uint64_t (**)(uint64_t, uint64_t))(v330 + 8));
    sub_23F383D74(v377, *(uint64_t (**)(uint64_t, uint64_t))(v328 + 8));
    sub_23F6148C4();
    sub_23F3625D8(v380, &qword_256E7F940);
    goto LABEL_16;
  }
  v54 = (uint64_t *)v23[100];
  v55 = v23[31];
  sub_23F614B18((uint64_t)v54, v23[74]);
  sub_23F614AA0();
  v23[115] = *v54;
  v56 = (_QWORD *)swift_projectBox();
  v57 = sub_23F383E88((uint64_t)v56, *(uint64_t (**)(uint64_t, uint64_t))(v55 + 88));
  v58 = v23;
  if (v57 == *MEMORY[0x24BEB9C48])
  {
    v60 = v23[31];
    v59 = (_BYTE *)v23[32];
    v61 = v23[30];
    sub_23F383C64((uint64_t)v59, (uint64_t)v56, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 16));
    v62 = v61;
    v58 = v23;
    (*(void (**)(_BYTE *, uint64_t))(v60 + 96))(v59, v62);
    if (*v59 == 6 && sub_23F6148B0() == *MEMORY[0x24BE556B0])
    {
      sub_23F614A00();
      v63 = (uint64_t *)v23[79];
      sub_23F3D9D84(v64);
      sub_23F41C620(*v51, v51[1], v63);
      v144 = v23[81];
      v145 = v23[79];
      v146 = v23[76];
      sub_23F362C60();
      sub_23F383C64(v144, v145, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v146 + 32));
LABEL_59:
      swift_release();
      goto LABEL_60;
    }
    goto LABEL_106;
  }
  if (v57 == *MEMORY[0x24BEB9C90])
  {
    if (sub_23F6148B0() == *MEMORY[0x24BE55690])
    {
      v69 = (uint64_t **)v23[81];
      v70 = v23[76];
      v71 = v23[75];
      sub_23F3D9D84(v23[86]);
      v72 = *(_BYTE *)v51;
      sub_23F5FBC30();
      v73 = sub_23F6149F8();
      v75 = sub_23F6149B8(v73, v74);
      *v76 = v72;
      v77 = (unsigned int *)MEMORY[0x24BEB9928];
      goto LABEL_57;
    }
    goto LABEL_106;
  }
  if (v57 == *MEMORY[0x24BEB9C80])
  {
    v91 = sub_23F6148B0();
    if (v91 == *MEMORY[0x24BE55688])
    {
      v69 = (uint64_t **)v23[81];
      v70 = v23[76];
      v71 = v23[75];
      sub_23F3D9D84(v23[86]);
      v92 = *v51;
      sub_23F5FBC30();
      v93 = sub_23F6149F8();
      v75 = sub_23F6149B8(v93, v94);
      *v95 = v92;
      v77 = (unsigned int *)MEMORY[0x24BEB9918];
      goto LABEL_57;
    }
    if (v91 != *MEMORY[0x24BE556A8])
      goto LABEL_106;
    sub_23F614A00();
    sub_23F3D9D84(v118);
    v119 = *(double *)v51;
    v120 = sub_23F5FBC30();
    result = swift_allocBox();
    if ((~*(_QWORD *)&v119 & 0x7FF0000000000000) != 0)
    {
      if (v119 > -9.22337204e18)
      {
        if (v119 < 9.22337204e18)
        {
          v123 = result;
          v124 = (uint64_t *)v23[81];
          v125 = v23[76];
          v126 = v23[75];
          *v122 = (uint64_t)v119;
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v120 - 8) + 104))(v122, *MEMORY[0x24BEB9918], v120);
          *v124 = v123;
          (*(void (**)(uint64_t *, _QWORD, uint64_t))(v125 + 104))(v124, *MEMORY[0x24BEB9A00], v126);
          goto LABEL_59;
        }
        goto LABEL_112;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_112:
    __break(1u);
    return result;
  }
  if (v57 == *MEMORY[0x24BEB9CB0])
  {
    v96 = sub_23F6148B0();
    if (v96 == *MEMORY[0x24BE55688])
    {
      v69 = (uint64_t **)v23[81];
      v70 = v23[76];
      v71 = v23[75];
      sub_23F3D9D84(v23[86]);
      v97 = *v51;
      sub_23F5FBC30();
      v98 = sub_23F6149F8();
      v75 = sub_23F6149B8(v98, v99);
      *v100 = (double)v97;
    }
    else
    {
      if (v96 != *MEMORY[0x24BE556A8])
        goto LABEL_106;
      v69 = (uint64_t **)v23[81];
      v70 = v23[76];
      v71 = v23[75];
      sub_23F3D9D84(v23[86]);
      v167 = *v51;
      sub_23F5FBC30();
      v168 = sub_23F6149F8();
      v75 = sub_23F6149B8(v168, v169);
      *v170 = v167;
    }
    v77 = (unsigned int *)MEMORY[0x24BEB9948];
LABEL_57:
    sub_23F362D94(v75, *v77, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(v51 - 1) + 104));
    *v69 = v23;
    (*(void (**)(uint64_t **, _QWORD, uint64_t))(v70 + 104))(v69, *MEMORY[0x24BEB9A00], v71);
    goto LABEL_59;
  }
  if (v57 == *MEMORY[0x24BEB9CC8])
  {
    v127 = sub_23F6148B0();
    if (v127 == *MEMORY[0x24BE55688])
    {
      sub_23F614AE8();
      v128 = v23[76];
      v129 = v23[75];
      sub_23F3D9D84(v130);
      v131 = sub_23F5FBC30();
      v132 = swift_allocBox();
      v134 = v133;
      sub_23F61C700();
      sub_23F614A48();
      *(_DWORD *)v134 = v135;
      *(_WORD *)(v134 + 4) = v136;
      *(_WORD *)(v134 + 6) = v137;
      *(_WORD *)(v134 + 8) = v138;
      *(_WORD *)(v134 + 10) = v139;
      *(_WORD *)(v134 + 12) = v140;
      *(_WORD *)(v134 + 14) = v141;
      *(_WORD *)(v134 + 16) = v142;
      *(_WORD *)(v134 + 18) = v143;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v131 - 8) + 104))(v134, *MEMORY[0x24BEB9960], v131);
      *v56 = v132;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v128 + 104))(v56, *MEMORY[0x24BEB9A00], v129);
      goto LABEL_59;
    }
    if (v127 == *MEMORY[0x24BE556A8])
    {
      sub_23F614AE8();
      v190 = v23[76];
      v191 = v23[75];
      sub_23F3D9D84(v192);
      v193 = *v51;
      sub_23F5FBC30();
      v194 = sub_23F6149F8();
      v196 = v195;
      MEMORY[0x24266FC04](*(double *)&v193);
      sub_23F614A48();
      *(_DWORD *)v196 = v197;
      *(_WORD *)(v196 + 4) = v198;
      *(_WORD *)(v196 + 6) = v199;
      *(_WORD *)(v196 + 8) = v200;
      *(_WORD *)(v196 + 10) = v201;
      *(_WORD *)(v196 + 12) = v202;
      *(_WORD *)(v196 + 14) = v203;
      *(_WORD *)(v196 + 16) = v204;
      *(_WORD *)(v196 + 18) = v205;
      sub_23F362D94(v196, *MEMORY[0x24BEB9960], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(v51 - 1) + 104));
      *v56 = v194;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v190 + 104))(v56, *MEMORY[0x24BEB9A00], v191);
      goto LABEL_59;
    }
    goto LABEL_106;
  }
  if (v57 == *MEMORY[0x24BEB9CC0])
  {
    if (sub_23F6148B0() != *MEMORY[0x24BE556B0])
      goto LABEL_106;
    v69 = (uint64_t **)v23[81];
    v70 = v23[76];
    v71 = v23[75];
    sub_23F3D9D84(v23[86]);
    v180 = *v51;
    v181 = v51[1];
    sub_23F5FBC30();
    v182 = sub_23F6149F8();
    v75 = sub_23F6149B8(v182, v183);
    *v184 = v180;
    v184[1] = v181;
    v77 = (unsigned int *)MEMORY[0x24BEB9958];
    goto LABEL_57;
  }
  if (v57 == *MEMORY[0x24BEB9C98])
  {
    if (sub_23F6148B0() != *MEMORY[0x24BE556B0])
      goto LABEL_106;
    v206 = v23[108];
    v207 = v23[104];
    v208 = v23[103];
    v209 = (uint64_t *)v23[70];
    v210 = v23[69];
    sub_23F3D9D84(v23[86]);
    v211 = *v51;
    v23[116] = *v51;
    v212 = v51[1];
    v23[117] = v212;
    v213 = (char *)v209 + *(int *)(v210 + 20);
    v214 = *(void (**)(char *, uint64_t, uint64_t))(v207 + 16);
    v23[118] = (uint64_t)v214;
    v214(v213, v206, v208);
    sub_23F3668F4();
    sub_23F616FA0();
    sub_23F61718C();
    sub_23F61709C();
    *v209 = v211;
    v209[1] = v212;
    v215 = (_QWORD *)swift_task_alloc();
    v23[119] = (uint64_t)v215;
    *v215 = v23;
    v215[1] = sub_23F6121A8;
    sub_23F614A28();
    return sub_23F5708F4(v216);
  }
  else
  {
    if (v57 != *MEMORY[0x24BEB9C60])
    {
      if (v57 == *MEMORY[0x24BEB9C88])
      {
        if (sub_23F6148D4(v23[86]) == *MEMORY[0x24BE556B0])
        {
          sub_23F614A00();
          v221 = v23[36];
          v220 = v23[37];
          sub_23F3D9D84(v222);
          v224 = *v51;
          v223 = v51[1];
          sub_23F616E38();
          if (sub_23F36195C(v221, 1, v220) == 1)
          {
            sub_23F3625D8(v23[36], &qword_256E70760);
            sub_23F384060();
            sub_23F3668F4();
            v225 = sub_23F619E8C();
            v226 = sub_23F61C628();
            v227 = os_log_type_enabled(v225, v226);
            v228 = v23[54];
            v385 = v23[49];
            v388 = v23[48];
            if (v227)
            {
              v229 = (uint8_t *)sub_23F366668();
              v392[0] = sub_23F366668();
              *(_DWORD *)v229 = 136315138;
              sub_23F3668F4();
              sub_23F37AE00(v224, v223, v392);
              v23[10] = v230;
              sub_23F61C790();
              swift_bridgeObjectRelease_n();
              sub_23F38485C(&dword_23F35A000, v225, v226, "cannot convert %s to URL", v229);
              sub_23F57D7BC();
              sub_23F366530();
            }
            swift_bridgeObjectRelease_n();

            (*(void (**)(uint64_t, uint64_t))(v385 + 8))(v228, v388);
            v281 = v23;
            v282 = v23[110];
            v361 = v23[109];
            v367 = v23[111];
            v283 = v23[101];
            v284 = v281[96];
            v285 = v281[95];
            v375 = v281[74];
            sub_23F384B58();
            sub_23F3612C0((unint64_t *)&qword_256E6FB48, (uint64_t (*)(uint64_t))type metadata accessor for InterpreterError, (uint64_t)&protocol conformance descriptor for InterpreterError);
            sub_23F614990();
            swift_storeEnumTagMultiPayload();
            swift_willThrow();
            v286 = *(void (**)(uint64_t, uint64_t))(v284 + 8);
            v286(v283, v285);
            v287 = sub_23F384690();
            v288(v287);
            (*(void (**)(uint64_t, uint64_t))(v282 + 8))(v367, v361);
            sub_23F6148C4();
            sub_23F614B80();
            v286(v375, v285);
            goto LABEL_16;
          }
          v251 = (uint64_t *)v23[81];
          v252 = v23[76];
          v253 = v23[75];
          v255 = v23[38];
          v254 = v23[39];
          v257 = v23[36];
          v256 = v23[37];
          swift_bridgeObjectRelease();
          v258 = *(void (**)(uint64_t, uint64_t, uint64_t))(v255 + 32);
          v258(v254, v257, v256);
          v259 = sub_23F5FBC30();
          v260 = swift_allocBox();
          v262 = v261;
          v258(v261, v254, v256);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v259 - 8) + 104))(v262, *MEMORY[0x24BEB9920], v259);
          *v251 = v260;
          (*(void (**)(uint64_t *, _QWORD, uint64_t))(v252 + 104))(v251, *MEMORY[0x24BEB9A00], v253);
          goto LABEL_59;
        }
        goto LABEL_106;
      }
      if (v57 == *MEMORY[0x24BEB9C70])
      {
        if (sub_23F6148D4(v23[86]) == *MEMORY[0x24BE556B0])
        {
          sub_23F614AE8();
          v231 = v23[76];
          v389 = v23[75];
          v232 = v23[34];
          v233 = v23[35];
          sub_23F3D9D84(v234);
          sub_23F616D30();
          sub_23F5FBC30();
          v235 = sub_23F6149F8();
          v237 = v236;
          sub_23F38431C(v236, v233, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v232 + 32));
          sub_23F362D94(v237, *MEMORY[0x24BEB9908], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(v51 - 1) + 104));
          *v56 = v235;
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v231 + 104))(v56, *MEMORY[0x24BEB9A00], v389);
          goto LABEL_59;
        }
        goto LABEL_106;
      }
      if (v57 == *MEMORY[0x24BEB9C58])
      {
        if (sub_23F6148D4(v23[86]) != *MEMORY[0x24BE556B0])
          goto LABEL_106;
        sub_23F614A00();
        sub_23F3D9D84(v238);
        swift_bridgeObjectRelease();
        sub_23F384060();
        v239 = (void *)sub_23F619E8C();
        v240 = sub_23F61C628();
        if (sub_23F384534(v240))
        {
          *(_WORD *)sub_23F366668() = 0;
          sub_23F614A64(&dword_23F35A000, v241, v242, "Resolving CurrencyAmount not yet supported");
          sub_23F366530();
        }
        sub_23F6148E0();
        v243 = v56[53];
      }
      else
      {
        if (v57 != *MEMORY[0x24BEB9C50])
        {
          if (v57 == *MEMORY[0x24BEB9CD0] || v57 == *MEMORY[0x24BEB9CB8] || v57 == *MEMORY[0x24BEB9CA0])
          {
            if (sub_23F6148D4(v23[86]) != *MEMORY[0x24BE556B0])
              goto LABEL_106;
          }
          else if (v57 != *MEMORY[0x24BEB9C78] || sub_23F6148B0() != *MEMORY[0x24BE556B0])
          {
            goto LABEL_106;
          }
          v340 = v23[114];
          v391 = v23[113];
          v341 = v23[104];
          v343 = v23[103];
          v346 = v23[108];
          v289 = v23[96];
          v290 = v23[95];
          v376 = v23[101];
          sub_23F614A00();
          v336 = v23[83];
          v338 = v23[82];
          v291 = v23[74];
          v292 = (uint64_t *)v23[29];
          v293 = (int *)v23[27];
          v349 = v23[17];
          v354 = v23[26];
          v334 = v23[16];
          sub_23F3D9D84(v294);
          v295 = *v51;
          v296 = v51[1];
          sub_23F366748();
          v362 = *(void (**)(uint64_t, uint64_t))(v289 + 8);
          v362(v291, v290);
          *v292 = v295;
          v292[1] = v296;
          v297 = *MEMORY[0x24BE56EE8];
          v298 = sub_23F61B410();
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v298 - 8) + 104))(v292, v297, v298);
          sub_23F38431C((uint64_t)v292 + v293[5], v340, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v391 + 16));
          (*(void (**)(char *, uint64_t, uint64_t))(v336 + 16))((char *)v292 + v293[6], v334, v338);
          (*(void (**)(char *, uint64_t, uint64_t))(v341 + 16))((char *)v292 + v293[7], v346, v343);
          sub_23F428AC4();
          v299 = sub_23F614B6C();
          v300(v299, v349);
          sub_23F36196C(v354, 1, 1, v298);
          sub_23F56FD30(v354);
          sub_23F3625D8(v354, &qword_256E7B340);
          sub_23F3663AC((uint64_t)v292, (uint64_t (*)(_QWORD))type metadata accessor for QueryResolver);
          v362(v376, v290);
          sub_23F383E64(v346, *(uint64_t (**)(uint64_t, uint64_t))(v341 + 8));
          sub_23F53A774();
          sub_23F383D74(v340, *(uint64_t (**)(uint64_t, uint64_t))(v391 + 8));
          goto LABEL_61;
        }
        if (sub_23F6148D4(v23[86]) != *MEMORY[0x24BE556B0])
        {
LABEL_106:
          sub_23F366748();
          goto LABEL_107;
        }
        sub_23F614A00();
        sub_23F3D9D84(v263);
        swift_bridgeObjectRelease();
        sub_23F384060();
        v239 = (void *)sub_23F619E8C();
        v264 = sub_23F61C628();
        if (sub_23F384534(v264))
        {
          *(_WORD *)sub_23F366668() = 0;
          sub_23F614A64(&dword_23F35A000, v265, v266, "Resolving PaymentMethod not yet supported");
          sub_23F366530();
        }
        sub_23F6148E0();
        v243 = v56[52];
      }
      v267 = v56[49];

      sub_23F383E88(v243, *(uint64_t (**)(uint64_t, uint64_t))(v267 + 8));
      sub_23F384B58();
      sub_23F3612C0((unint64_t *)&qword_256E6FB48, (uint64_t (*)(uint64_t))type metadata accessor for InterpreterError, (uint64_t)&protocol conformance descriptor for InterpreterError);
      sub_23F362D64();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      v268 = (void (*)(uint64_t, uint64_t *))MEMORY[8];
      MEMORY[8](v23, v23);
      (*(void (**)(uint64_t, void (*)(uint64_t, uint64_t, uint64_t)))(v47 + 8))(v351, v52);
      sub_23F406CD4();
      sub_23F6148C4();
      sub_23F614B80();
      v268(v370, v23);
      goto LABEL_16;
    }
    if (sub_23F6148D4(v23[86]) != *MEMORY[0x24BE556B0])
      goto LABEL_106;
    v217 = v23[108];
    v218 = v23[105];
    v219 = v23[104];
    sub_23F3D9D84(v23[86]);
    v382 = *v51;
    v384 = v51[1];
    sub_23F38426C(v218, v217, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v219 + 16));
    sub_23F61B110();
    v390 = v23 + 2;
    v245 = v23[60];
    v244 = v23[61];
    v246 = v23[58];
    v247 = v23[57];
    sub_23F61A0E4();
    sub_23F383E64(v244, *(uint64_t (**)(uint64_t, uint64_t))(v245 + 8));
    sub_23F617E58();
    sub_23F383F80(v246, *(uint64_t (**)(uint64_t, uint64_t))(v247 + 8));
    v379 = sub_23F6136E8();
    sub_23F616FA0();
    sub_23F61718C();
    v248 = sub_23F40F94C();
    if (v248)
    {
      v23[5] = (uint64_t)&type metadata for OnDeviceDataDetectors;
      v23[6] = (uint64_t)&off_250FD52C8;
      v23[2] = (uint64_t)v248;
      v23[3] = v249;
      v23[4] = v250;
    }
    else
    {
      v23[6] = 0;
      *v390 = 0u;
      *((_OWORD *)v23 + 2) = 0u;
    }
    v269 = v23[105];
    v270 = v23[104];
    v271 = v23[103];
    v272 = v23[64];
    v366 = v23[63];
    v374 = v23[65];
    v273 = (int *)v23[46];
    v274 = (uint64_t *)v23[47];
    v275 = v23[44];
    v276 = v23[45];
    v277 = v23[42];
    v278 = v23[41];
    *v274 = v382;
    v274[1] = v384;
    (*(void (**)(char *, uint64_t, uint64_t))(v270 + 32))((char *)v274 + v273[5], v269, v271);
    sub_23F38431C((uint64_t)v274 + v273[6], v276, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v275 + 32));
    sub_23F4244A8((uint64_t)v274 + v273[7], v277, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v278 + 32));
    (*(void (**)(char *, uint64_t, uint64_t))(v272 + 32))((char *)v274 + v273[8], v374, v366);
    sub_23F61458C((uint64_t)v390, (uint64_t)v274 + v273[9]);
    *(uint64_t *)((char *)v274 + v273[10]) = (uint64_t)v379;
    v279 = (_QWORD *)swift_task_alloc();
    v23[123] = (uint64_t)v279;
    *v279 = v23;
    v279[1] = sub_23F612F18;
    sub_23F614A28();
    return sub_23F40C3A8(v280);
  }
}

uint64_t sub_23F6121A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23F406D20();
  *v3 = *v2;
  *(_QWORD *)(v0 + 960) = v1;
  swift_task_dealloc();
  sub_23F3663AC(*(_QWORD *)(v0 + 560), (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateResolver);
  if (v1)
    sub_23F362984();
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F612220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 *v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  sub_23F614974();
  v1 = *(_QWORD *)(v0 + 576);
  if (sub_23F482D78(v1) == 1)
  {
    v2 = *(_QWORD *)(v0 + 960);
    v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 944);
    v4 = *(_QWORD *)(v0 + 864);
    v5 = *(_QWORD *)(v0 + 848);
    v6 = *(_QWORD *)(v0 + 824);
    sub_23F3625D8(v1, &qword_256E701F0);
    v3(v5, v4, v6);
    sub_23F61B110();
    if (v2)
    {
      v7 = *(_QWORD *)(v0 + 880);
      v8 = *(_QWORD *)(v0 + 864);
      v9 = *(_QWORD *)(v0 + 832);
      v10 = *(_QWORD *)(v0 + 824);
      v11 = *(_QWORD *)(v0 + 808);
      v12 = *(_QWORD *)(v0 + 768);
      v13 = *(_QWORD *)(v0 + 760);
      v52 = *(_QWORD *)(v0 + 888);
      v53 = *(_QWORD *)(v0 + 592);
      swift_bridgeObjectRelease();
      v14 = *(void (**)(uint64_t))(v9 + 8);
      v15 = sub_23F384690();
      v14(v15);
      v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v16(v11, v13);
      ((void (*)(uint64_t, uint64_t))v14)(v8, v10);
      sub_23F383D74(v52, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
      sub_23F6148C4();
      swift_release();
      v16(v53, v13);
      sub_23F614740();
      sub_23F362CC8();
      sub_23F3666A0();
      sub_23F3666C4();
      sub_23F3666D4();
      sub_23F366698();
      sub_23F3666E4();
      sub_23F366708();
      sub_23F3666EC();
      sub_23F3666DC();
      sub_23F3668DC();
      sub_23F3668D4();
      sub_23F383980();
      sub_23F3667E0();
      sub_23F383898();
      sub_23F383978();
      sub_23F383970();
      sub_23F383890();
      sub_23F383888();
      sub_23F383880();
      sub_23F383878();
      sub_23F383870();
      sub_23F383868();
      sub_23F383C4C();
      sub_23F383C44();
      sub_23F383C3C();
      sub_23F383C34();
      sub_23F383C2C();
      sub_23F383C24();
      sub_23F383C1C();
      sub_23F383C14();
      sub_23F383C0C();
      sub_23F383C04();
      sub_23F383BFC();
      sub_23F383BF4();
      sub_23F383BEC();
      sub_23F383BE4();
      sub_23F383BDC();
      sub_23F383B24();
      sub_23F383B1C();
      sub_23F383B14();
      sub_23F383B0C();
      sub_23F383B04();
      sub_23F383C54();
      sub_23F383C5C();
      sub_23F383AFC();
      sub_23F383AF4();
      sub_23F383AEC();
      sub_23F383AE4();
      sub_23F383ADC();
      sub_23F383AD4();
      sub_23F383C6C();
      sub_23F383FDC();
      return sub_23F614848(*(uint64_t (**)(void))(v0 + 8));
    }
    else
    {
      v27 = *(_QWORD *)(v0 + 544);
      v28 = *(_QWORD *)(v0 + 536);
      v29 = *(_QWORD *)(v0 + 496);
      v30 = *(_QWORD *)(v0 + 480);
      v31 = *(_QWORD *)(v0 + 456);
      sub_23F61A0E4();
      sub_23F383E64(v29, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
      sub_23F617E58();
      sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
      v32 = sub_23F6136E8();
      sub_23F616FA0();
      sub_23F61718C();
      v33 = (_QWORD *)(v27 + *(int *)(v28 + 36));
      v34 = sub_23F40F94C();
      if (v34)
      {
        v33[3] = &type metadata for OnDeviceDataDetectors;
        v33[4] = &off_250FD52C8;
        *v33 = v34;
        v33[1] = v35;
        v33[2] = v36;
      }
      else
      {
        v33[4] = 0;
        *(_OWORD *)v33 = 0u;
        *((_OWORD *)v33 + 1) = 0u;
      }
      v37 = *(_QWORD *)(v0 + 936);
      v38 = *(_QWORD *)(v0 + 848);
      v39 = *(_QWORD *)(v0 + 832);
      v40 = *(_QWORD *)(v0 + 824);
      v41 = *(char **)(v0 + 544);
      v42 = *(int **)(v0 + 536);
      v43 = *(_QWORD *)(v0 + 528);
      v44 = *(_QWORD *)(v0 + 512);
      *(_QWORD *)v41 = *(_QWORD *)(v0 + 928);
      *((_QWORD *)v41 + 1) = v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(&v41[v42[5]], v38, v40);
      sub_23F383C64((uint64_t)&v41[v42[8]], v43, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 32));
      *(_QWORD *)&v41[v42[10]] = v32;
      sub_23F3668F4();
      v45 = (_QWORD *)sub_23F3666CC();
      *(_QWORD *)(v0 + 968) = v45;
      *v45 = v0;
      v45[1] = sub_23F6127D0;
      return sub_23F4A8A08(*(_QWORD *)(v0 + 568));
    }
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 648);
    v19 = *(_QWORD *)(v0 + 608);
    swift_bridgeObjectRelease();
    sub_23F38426C(v18, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32));
    swift_release();
    sub_23F6149C8();
    sub_23F614B2C();
    sub_23F614AB0();
    v51 = *(_QWORD *)(v0 + 808);
    v50 = *(_QWORD *)(v0 + 760);
    v46 = *(_QWORD *)(v0 + 664);
    v47 = *(_QWORD *)(v0 + 648);
    v48 = *(_QWORD *)(v0 + 608);
    v20 = sub_23F614A84();
    v49 = *(void (**)(uint64_t))(v21 + 8);
    v49(v20);
    sub_23F3612C0(&qword_256E6FFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52158]);
    sub_23F614A78();
    sub_23F61494C();
    sub_23F6149D8();
    sub_23F6149A4(v46);
    sub_23F35D2E8(&qword_256E70298);
    v22 = (__n128 *)sub_23F614930();
    v23 = sub_23F614A0C(v22, (__n128)xmmword_23F61E7E0);
    sub_23F4244A8((uint64_t)v23, v24, v25);
    sub_23F6149E8();
    sub_23F3D98EC(v18, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    sub_23F383E88(v47, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
    ((void (*)(uint64_t, uint64_t))v49)(v51, v50);
    sub_23F405D24();
    sub_23F53A774();
    sub_23F3D096C();
    sub_23F5DB644();
    sub_23F614964();
    sub_23F614638();
    sub_23F366698();
    sub_23F3666E4();
    sub_23F366708();
    sub_23F3666EC();
    sub_23F3666C4();
    sub_23F3666DC();
    sub_23F362CC8();
    sub_23F3666A0();
    sub_23F3666D4();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383C2C();
    sub_23F383C24();
    sub_23F383C1C();
    sub_23F383C14();
    sub_23F383C0C();
    sub_23F383C04();
    sub_23F383BFC();
    sub_23F383BF4();
    sub_23F383BEC();
    sub_23F383BE4();
    sub_23F383BDC();
    sub_23F383B24();
    sub_23F383B1C();
    sub_23F383B14();
    sub_23F383B0C();
    sub_23F383B04();
    sub_23F383C54();
    sub_23F383C5C();
    sub_23F383AFC();
    sub_23F383AF4();
    sub_23F383AEC();
    sub_23F383AE4();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F383C6C();
    sub_23F383FDC();
    sub_23F38409C();
    v26 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F614848(v26);
  }
}

uint64_t sub_23F6127D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23F406D20();
  *v3 = *v2;
  *(_QWORD *)(v0 + 976) = v1;
  swift_task_dealloc();
  sub_23F3663AC(*(_QWORD *)(v0 + 544), (uint64_t (*)(_QWORD))type metadata accessor for NLDateResolver);
  if (v1)
    sub_23F362984();
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F612848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  uint64_t a65;
  uint64_t a66;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  _BOOL4 v74;
  uint64_t v75;
  uint64_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 *v88;
  char *v89;
  uint64_t v90;
  uint64_t (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v92)(void);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  sub_23F614974();
  a65 = v67;
  a66 = v68;
  a64 = v66;
  v69 = v66[71];
  v70 = sub_23F482D78(v69);
  v71 = v66[117];
  if (v70 == 1)
  {
    sub_23F3625D8(v69, &qword_256E701F0);
    sub_23F619094();
    sub_23F617BA0();
    v72 = sub_23F619E8C();
    v73 = sub_23F61C628();
    v74 = os_log_type_enabled(v72, v73);
    v75 = v66[117];
    if (v74)
    {
      v76 = v66[116];
      v77 = (uint8_t *)sub_23F366668();
      a53 = sub_23F366668();
      *(_DWORD *)v77 = 136315138;
      sub_23F617BA0();
      sub_23F37AE00(v76, v75, &a53);
      v66[11] = v78;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      sub_23F38485C(&dword_23F35A000, v72, v73, "cannot convert %s to Date", v77);
      swift_arrayDestroy();
      sub_23F366530();
    }
    v93 = v66[55];
    v94 = v66[48];
    v95 = v66[49];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v93, v94);
    v96 = v66[110];
    v109 = v66[109];
    v110 = v66[111];
    v97 = v66[108];
    v98 = v66[104];
    v99 = v66[103];
    v100 = v66[101];
    v101 = v66[96];
    v102 = v66[95];
    v112 = v66[74];
    sub_23F384B58();
    sub_23F3612C0((unint64_t *)&qword_256E6FB48, (uint64_t (*)(uint64_t))type metadata accessor for InterpreterError, (uint64_t)&protocol conformance descriptor for InterpreterError);
    sub_23F362D64();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v103 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
    v103(v100, v102);
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v97, v99);
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v110, v109);
    sub_23F53A774();
    swift_release();
    v103(v112, v102);
    swift_task_dealloc();
    sub_23F3666D4();
    sub_23F366698();
    sub_23F3666E4();
    sub_23F366708();
    sub_23F362CC8();
    sub_23F3666EC();
    sub_23F3666C4();
    sub_23F3666DC();
    sub_23F3666A0();
    swift_task_dealloc();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383C2C();
    sub_23F383C24();
    sub_23F383C1C();
    sub_23F383C14();
    sub_23F383C0C();
    sub_23F383C04();
    sub_23F383BFC();
    sub_23F383BF4();
    sub_23F383BEC();
    sub_23F383BE4();
    sub_23F383BDC();
    sub_23F383B24();
    sub_23F383B1C();
    sub_23F383B14();
    sub_23F383B0C();
    sub_23F383B04();
    sub_23F383C54();
    sub_23F383C5C();
    sub_23F383AFC();
    sub_23F383AF4();
    sub_23F383AEC();
    sub_23F383AE4();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F383C6C();
    v92 = (uint64_t (*)(void))v66[1];
  }
  else
  {
    v79 = v66[81];
    v80 = v66[76];
    swift_bridgeObjectRelease();
    sub_23F38426C(v79, v69, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 32));
    swift_release();
    sub_23F6149C8();
    v114 = v81;
    v115 = v82;
    v113 = v83;
    sub_23F614B2C();
    v111 = v84;
    sub_23F614AB0();
    v108 = v66[101];
    v107 = v66[95];
    sub_23F614AD0();
    v85 = v66[19];
    v86 = v66[20];
    v105 = v66[76];
    v106 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
    ((void (*)(_QWORD))v106)(v66[74]);
    sub_23F3612C0(&qword_256E6FFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52158]);
    sub_23F614A78();
    sub_23F61494C();
    sub_23F6149D8();
    sub_23F6149A4(a35);
    sub_23F35D2E8(&qword_256E70298);
    v88 = (__n128 *)sub_23F614930();
    v89 = sub_23F614A0C(v88, (__n128)xmmword_23F61E7E0);
    sub_23F4244A8((uint64_t)v89, v90, v91);
    sub_23F6149E8();
    sub_23F3D98EC(v86, *(uint64_t (**)(uint64_t, uint64_t))(v85 + 8));
    sub_23F383E88(v71, *(uint64_t (**)(uint64_t, uint64_t))(v105 + 8));
    v106(v108, v107);
    sub_23F406CD4();
    sub_23F614AF8(v111);
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v115, v114);
    sub_23F5DB644();
    sub_23F614964();
    sub_23F614740();
    sub_23F366698();
    sub_23F3666E4();
    sub_23F366708();
    sub_23F3666EC();
    sub_23F3666C4();
    sub_23F3666DC();
    sub_23F362CC8();
    sub_23F3666A0();
    sub_23F3666D4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383C2C();
    sub_23F383C24();
    sub_23F383C1C();
    sub_23F383C14();
    sub_23F383C0C();
    sub_23F383C04();
    sub_23F383BFC();
    sub_23F383BF4();
    sub_23F383BEC();
    sub_23F383BE4();
    sub_23F383BDC();
    sub_23F383B24();
    sub_23F383B1C();
    sub_23F383B14();
    sub_23F383B0C();
    sub_23F383B04();
    sub_23F383C54();
    sub_23F383C5C();
    sub_23F383AFC();
    sub_23F383AF4();
    sub_23F383AEC();
    sub_23F383AE4();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F383C6C();
    sub_23F383FDC();
    v92 = (uint64_t (*)(void))sub_23F384760();
  }
  return sub_23F614848(v92);
}

uint64_t sub_23F612F18()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23F406D20();
  *v3 = *v2;
  *(_QWORD *)(v0 + 992) = v1;
  swift_task_dealloc();
  sub_23F3663AC(*(_QWORD *)(v0 + 376), (uint64_t (*)(_QWORD))type metadata accessor for DateComponentsResolver);
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F612F78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 *v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v1[115];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[76] + 32))(v1[81], v1[80], v1[75]);
  sub_23F366748();
  sub_23F6149C8();
  v21 = v4;
  v22 = v5;
  v20 = v6;
  sub_23F614B2C();
  sub_23F614AB0();
  v19 = v1[101];
  v18 = v1[95];
  sub_23F614AD0();
  v16 = v1[76];
  v7 = sub_23F614A84();
  v17 = *(void (**)(uint64_t))(v8 + 8);
  v17(v7);
  sub_23F3612C0(&qword_256E6FFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52158]);
  sub_23F614A78();
  sub_23F61494C();
  sub_23F6149D8();
  sub_23F6149A4(v15);
  sub_23F35D2E8(&qword_256E70298);
  v9 = (__n128 *)sub_23F614930();
  v10 = sub_23F614A0C(v9, (__n128)xmmword_23F61E7E0);
  sub_23F4244A8((uint64_t)v10, v11, v12);
  sub_23F6149E8();
  sub_23F3D98EC(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F383E88(v0, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  ((void (*)(uint64_t, uint64_t))v17)(v19, v18);
  sub_23F4063EC();
  sub_23F6148C4();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  sub_23F5DB644();
  sub_23F614964();
  swift_task_dealloc();
  sub_23F366698();
  sub_23F3666E4();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  swift_task_dealloc();
  v13 = (uint64_t (*)(void))sub_23F384760();
  return v13();
}

uint64_t sub_23F6132EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F614974();
  sub_23F614864();
  sub_23F3D98EC(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F3D096C();
  sub_23F614B04();
  sub_23F614A20(v4);
  sub_23F614638();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3666E4();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666A0();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  return sub_23F614848(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23F613440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F614974();
  sub_23F614864();
  sub_23F3D98EC(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F3D096C();
  sub_23F614B04();
  sub_23F614A20(v4);
  sub_23F614638();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3666E4();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666A0();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  return sub_23F614848(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23F613594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F614974();
  sub_23F614864();
  sub_23F3D98EC(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F3D096C();
  sub_23F614B04();
  sub_23F614A20(v4);
  sub_23F614638();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3666E4();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666A0();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  return sub_23F614848(*(uint64_t (**)(void))(v2 + 8));
}

id sub_23F6136E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  _QWORD v12[2];

  v0 = sub_23F61B164();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F35D2E8(&qword_256E70F08);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61B128();
  v7 = sub_23F61B14C();
  sub_23F383E64((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v12[1] = v7;
  sub_23F35D2E8(&qword_256E70F10);
  sub_23F3E29D8();
  sub_23F61AD08();
  swift_bridgeObjectRelease();
  v8 = sub_23F61AAD4();
  if (sub_23F36195C((uint64_t)v6, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v6, &qword_256E70F08);
    return 0;
  }
  else
  {
    v10 = (void *)sub_23F61AA80();
    sub_23F383E64((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
    v9 = objc_msgSend(v10, sel_location);

  }
  return v9;
}

uint64_t sub_23F613858@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  os_log_t v56;
  unint64_t isa;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, char *, uint64_t);
  char *v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  unint64_t v67;
  char v68;
  char v69;
  unint64_t v70;
  char v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  BOOL v79;
  NSObject *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t result;
  uint64_t *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  char *v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  void (*v109)(char *, uint64_t);
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  os_log_t v114;
  void (*v115)(char *, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  uint64_t *v128;
  uint64_t *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  os_log_t v152;
  void (*v153)(char *, uint64_t, uint64_t);
  char *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  __int128 v158;
  __int128 v159;
  uint64_t v160;
  unint64_t v161;

  v128 = a4;
  v144 = a3;
  v131 = a5;
  v124 = sub_23F619E98();
  v7 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v126 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61B9EC();
  v143 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v125 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v142 = (char *)&v121 - v12;
  v13 = sub_23F35D2E8(&qword_256E6FB08);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v141 = (uint64_t)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v140 = (char *)&v121 - v16;
  v139 = sub_23F61B404();
  v145 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139);
  v138 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F61B92C();
  v151 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v136 = (char *)&v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v149 = (char *)&v121 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v127 = (char *)&v121 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v123 = (char *)&v121 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v130 = (char *)&v121 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v129 = (uint64_t *)((char *)&v121 - v30);
  MEMORY[0x24BDAC7A8](v29);
  v150 = (char *)&v121 - v31;
  v155 = sub_23F617D08();
  v32 = *(_QWORD *)(v155 - 8);
  v33 = MEMORY[0x24BDAC7A8](v155);
  v154 = (char *)&v121 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v121 - v35;
  v37 = *a1;
  v161 = MEMORY[0x24BEE4B00];
  v38 = *(_QWORD *)(a2 + 16);
  sub_23F377314();
  v152 = v39;
  sub_23F35D2E8(&qword_256E70FF8);
  sub_23F61BFD4();
  v148 = v38;
  if (!v38)
  {
LABEL_25:
    sub_23F61B6E0();
    v117 = swift_allocBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v142, v144, v9);
    sub_23F61B6BC();
    v118 = v129;
    *v129 = v117;
    v119 = v151;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v151 + 104))(v118, *MEMORY[0x24BEB9988], v18);
    (*(void (**)(char *, uint64_t *, uint64_t))(v119 + 16))(v130, v118, v18);
    sub_23F61A3E4();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v119 + 8))(v118, v18);
  }
  v122 = v7;
  v40 = a2 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  v146 = *(_QWORD *)(v32 + 72);
  v153 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  sub_23F617BA0();
  v133 = v18;
  v135 = v32;
  v134 = v9;
  v41 = v150;
  v132 = v37;
  v147 = v36;
  v137 = a2;
  while (1)
  {
    v153(v36, v40, v155);
    if (*(_QWORD *)(v37 + 16) && (sub_23F3756E8(), (v43 & 1) != 0))
    {
      v44 = *(_QWORD *)(v37 + 56) + *(_QWORD *)(v145 + 72) * v42;
      v45 = (uint64_t)v140;
      v46 = v139;
      (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v140, v44, v139);
      v47 = 0;
    }
    else
    {
      v47 = 1;
      v45 = (uint64_t)v140;
      v46 = v139;
    }
    sub_23F36196C(v45, v47, 1, v46);
    v48 = v141;
    sub_23F6145F0(v45, v141);
    if (sub_23F36195C(v48, 1, v46) == 1)
    {
      sub_23F3625D8(v48, &qword_256E6FB08);
      sub_23F61A78C();
      sub_23F382DD0();
      v81 = v45;
      v82 = swift_allocError();
      v83 = v160;
      v84 = v159;
      *(_OWORD *)v85 = v158;
      *(_OWORD *)(v85 + 16) = v84;
      *(_QWORD *)(v85 + 32) = v83;
      swift_willThrow();
      sub_23F3625D8(v81, &qword_256E6FB08);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v155);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v87 = v128;
LABEL_28:
      *v87 = v82;
      return result;
    }
    v49 = v145;
    v50 = v138;
    (*(void (**)(char *, uint64_t, uint64_t))(v145 + 32))(v138, v48, v46);
    sub_23F3625D8(v45, &qword_256E6FB08);
    sub_23F61B3E0();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v46);
    v51 = v142;
    sub_23F61B8CC();
    sub_23F3612C0(&qword_256E70168, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D20], MEMORY[0x24BEB9D40]);
    v52 = sub_23F61C0A0();
    v53 = *(void (**)(char *, uint64_t))(v143 + 8);
    v53(v51, v9);
    if ((v52 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v88 = v126;
      sub_23F619094();
      v89 = v151;
      v90 = *(void (**)(char *, char *, uint64_t))(v151 + 16);
      v91 = v123;
      v90(v123, v41, v18);
      v90(v127, v41, v18);
      v92 = v125;
      (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v125, v144, v9);
      v93 = sub_23F619E8C();
      v94 = sub_23F61C628();
      LODWORD(v154) = v94;
      if (os_log_type_enabled(v93, v94))
      {
        v95 = swift_slowAlloc();
        v153 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
        v157 = v153;
        *(_DWORD *)v95 = 136315650;
        v96 = sub_23F61B8F0();
        sub_23F37AE00(v96, v97, (uint64_t *)&v157);
        v156 = v98;
        v152 = v93;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        v99 = *(void (**)(char *, uint64_t))(v89 + 8);
        v99(v91, v18);
        *(_WORD *)(v95 + 12) = 2080;
        v100 = v142;
        v101 = v127;
        sub_23F61B8CC();
        v102 = sub_23F61B9C8();
        v104 = v103;
        v105 = v100;
        v106 = v134;
        v53(v105, v134);
        sub_23F37AE00(v102, v104, (uint64_t *)&v157);
        v156 = v107;
        sub_23F61C790();
        v18 = v133;
        swift_bridgeObjectRelease();
        v108 = v101;
        v109 = v99;
        v99(v108, v18);
        *(_WORD *)(v95 + 22) = 2080;
        v110 = v125;
        v111 = sub_23F61B9C8();
        sub_23F37AE00(v111, v112, (uint64_t *)&v157);
        v156 = v113;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        v53(v110, v106);
        v114 = v152;
        _os_log_impl(&dword_23F35A000, v152, (os_log_type_t)v154, "value %s has type %s and cannot be stored in Array<%s>", (uint8_t *)v95, 0x20u);
        v115 = v153;
        swift_arrayDestroy();
        MEMORY[0x242670B70](v115, -1, -1);
        v116 = v95;
        v41 = v150;
        MEMORY[0x242670B70](v116, -1, -1);

        (*(void (**)(char *, uint64_t))(v122 + 8))(v126, v124);
      }
      else
      {
        v120 = *(void (**)(char *, uint64_t))(v89 + 8);
        v120(v91, v18);
        v109 = v120;
        v120(v127, v18);
        v53(v92, v134);

        (*(void (**)(char *, uint64_t))(v122 + 8))(v88, v124);
      }
      v87 = v128;
      type metadata accessor for InterpreterError();
      sub_23F3612C0((unint64_t *)&qword_256E6FB48, (uint64_t (*)(uint64_t))type metadata accessor for InterpreterError, (uint64_t)&protocol conformance descriptor for InterpreterError);
      v82 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      v109(v41, v18);
      result = (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v147, v155);
      goto LABEL_28;
    }
    v54 = v151;
    v55 = *(void (**)(char *, char *, uint64_t))(v151 + 16);
    v55(v149, v41, v18);
    v56 = v152;
    isa = (unint64_t)v152[2].isa;
    if (isa >= (unint64_t)v152[3].isa >> 1)
    {
      sub_23F377314();
      v56 = v80;
    }
    v58 = v147;
    v56[2].isa = (Class)(isa + 1);
    v59 = *(unsigned __int8 *)(v54 + 80);
    v152 = v56;
    v60 = *(_QWORD *)(v54 + 72);
    v61 = (uint64_t)v56 + ((v59 + 32) & ~v59) + v60 * isa;
    v62 = *(void (**)(uint64_t, char *, uint64_t))(v54 + 32);
    v62(v61, v149, v18);
    v153(v154, (uint64_t)v58, v155);
    v63 = v136;
    v55(v136, v150, v18);
    v64 = v161;
    swift_isUniquelyReferenced_nonNull_native();
    v157 = (_QWORD *)v64;
    v161 = 0x8000000000000000;
    sub_23F3756E8();
    if (__OFADD__(*(_QWORD *)(v64 + 16), (v66 & 1) == 0))
      break;
    v67 = v65;
    v68 = v66;
    sub_23F35D2E8(&qword_256E74ED8);
    v69 = sub_23F61CA18();
    v37 = v132;
    if ((v69 & 1) != 0)
    {
      sub_23F3756E8();
      if ((v68 & 1) != (v71 & 1))
        goto LABEL_31;
      v67 = v70;
    }
    v72 = v157;
    if ((v68 & 1) != 0)
    {
      v73 = v151;
      v18 = v133;
      (*(void (**)(unint64_t, char *, uint64_t))(v151 + 40))(v157[7] + v67 * v60, v63, v133);
    }
    else
    {
      v157[(v67 >> 6) + 8] |= 1 << v67;
      v153((char *)(v72[6] + v67 * v146), (uint64_t)v154, v155);
      v18 = v133;
      v62(v72[7] + v67 * v60, v63, v133);
      v74 = v72[2];
      v75 = __OFADD__(v74, 1);
      v76 = v74 + 1;
      if (v75)
        goto LABEL_30;
      v72[2] = v76;
      v73 = v151;
    }
    v161 = (unint64_t)v157;
    swift_bridgeObjectRelease();
    v32 = v135;
    v77 = *(void (**)(char *, uint64_t))(v135 + 8);
    v78 = v155;
    v77(v154, v155);
    v41 = v150;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v150, v18);
    v36 = v147;
    v77(v147, v78);
    v40 += v146;
    v79 = v148-- == 1;
    v9 = v134;
    if (v79)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F6144E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = a1;
  if (*(_QWORD *)(a1 + 16) > 1uLL)
  {
    sub_23F61B92C();
    sub_23F3612C0(&qword_256E6FE60, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A30]);
    v4 = sub_23F61C550();
    v2 = sub_23F617BA0();
    v1 = sub_23F60F4F0(v2, (uint64_t)&v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F617BA0();
  }
  return v1;
}

uint64_t sub_23F61458C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E72FC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F6145D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_23F613858(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_23F6145F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FB08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F614638()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v0[51];
  *(_QWORD *)(v1 - 216) = v0[52];
  *(_QWORD *)(v1 - 208) = v2;
  v3 = v0[47];
  *(_QWORD *)(v1 - 200) = v0[50];
  *(_QWORD *)(v1 - 192) = v3;
  v4 = v0[42];
  *(_QWORD *)(v1 - 184) = v0[45];
  *(_QWORD *)(v1 - 176) = v4;
  v5 = v0[36];
  *(_QWORD *)(v1 - 168) = v0[39];
  *(_QWORD *)(v1 - 160) = v5;
  v6 = v0[32];
  *(_QWORD *)(v1 - 152) = v0[35];
  *(_QWORD *)(v1 - 144) = v6;
  v7 = v0[28];
  *(_QWORD *)(v1 - 136) = v0[29];
  *(_QWORD *)(v1 - 128) = v7;
  v8 = v0[25];
  *(_QWORD *)(v1 - 120) = v0[26];
  *(_QWORD *)(v1 - 112) = v8;
  v9 = v0[20];
  *(_QWORD *)(v1 - 104) = v0[23];
  *(_QWORD *)(v1 - 96) = v9;
  return swift_task_dealloc();
}

uint64_t sub_23F614740()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v0[50];
  *(_QWORD *)(v1 - 216) = v0[51];
  *(_QWORD *)(v1 - 208) = v2;
  v3 = v0[45];
  *(_QWORD *)(v1 - 200) = v0[47];
  *(_QWORD *)(v1 - 192) = v3;
  v4 = v0[39];
  *(_QWORD *)(v1 - 184) = v0[42];
  *(_QWORD *)(v1 - 176) = v4;
  v5 = v0[35];
  *(_QWORD *)(v1 - 168) = v0[36];
  *(_QWORD *)(v1 - 160) = v5;
  v6 = v0[29];
  *(_QWORD *)(v1 - 152) = v0[32];
  *(_QWORD *)(v1 - 144) = v6;
  v7 = v0[26];
  *(_QWORD *)(v1 - 136) = v0[28];
  *(_QWORD *)(v1 - 128) = v7;
  v8 = v0[23];
  *(_QWORD *)(v1 - 120) = v0[25];
  *(_QWORD *)(v1 - 112) = v8;
  *(_QWORD *)(v1 - 104) = v0[20];
  return swift_task_dealloc();
}

uint64_t sub_23F614848(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F614864()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[115];
  *(_QWORD *)(v1 - 96) = v0[114];
  *(_QWORD *)(v1 - 88) = v2;
  v3 = v0[112];
  *(_QWORD *)(v1 - 112) = v0[113];
  *(_QWORD *)(v1 - 104) = v3;
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[96] + 8))(v0[101], v0[95]);
}

uint64_t sub_23F6148B0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 688) + 88))(v0, *(_QWORD *)(v1 + 680));
}

uint64_t sub_23F6148C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 128) + 8))(*(_QWORD *)(v0 - 112), *(_QWORD *)(v0 - 120));
}

uint64_t sub_23F6148D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 88))(v1);
}

void sub_23F6148E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[114];
  *(_QWORD *)(v1 - 128) = v0[113];
  *(_QWORD *)(v1 - 120) = v0[112];
  *(_QWORD *)(v1 - 112) = v2;
  v3 = v0[111];
  v4 = v0[110];
  *(_QWORD *)(v1 - 160) = v0[109];
  *(_QWORD *)(v1 - 152) = v3;
  *(_QWORD *)(v1 - 176) = v0[108];
  *(_QWORD *)(v1 - 168) = v4;
  *(_QWORD *)(v1 - 144) = v0[74];
}

uint64_t sub_23F614930()
{
  return swift_allocObject();
}

uint64_t sub_23F61494C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v1, v0);
}

uint64_t sub_23F614964()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F614990()
{
  return swift_allocError();
}

uint64_t sub_23F6149A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 16))(v2, v1, v3);
}

uint64_t sub_23F6149B8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23F6149D8()
{
  return sub_23F61A3E4();
}

uint64_t sub_23F6149E8()
{
  return sub_23F61A114();
}

uint64_t sub_23F6149F8()
{
  return swift_allocBox();
}

char *sub_23F614A0C(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  return (char *)a1 + v2;
}

uint64_t sub_23F614A20(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_23F614A64(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  NSObject *v5;
  uint8_t *v6;

  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

uint64_t sub_23F614A78()
{
  return sub_23F61BFEC();
}

uint64_t sub_23F614A84()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 592);
}

uint64_t sub_23F614AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v0, v1);
}

uint64_t sub_23F614AC0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F614AF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(a1 + 8))(*(_QWORD *)(v1 - 128));
}

uint64_t sub_23F614B04()
{
  return swift_release();
}

uint64_t sub_23F614B0C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F614B18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F614B20()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 160), *(_QWORD *)(v1 - 168));
}

uint64_t sub_23F614B4C()
{
  return swift_bridgeObjectRelease();
}

void sub_23F614B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 912);
  *(_QWORD *)(v1 - 120) = *(_QWORD *)(v0 + 896);
  *(_QWORD *)(v1 - 112) = v2;
}

uint64_t sub_23F614B6C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F614B80()
{
  return swift_release();
}

void sub_23F614B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 912);
  *(_QWORD *)(v1 - 120) = *(_QWORD *)(v0 + 896);
  *(_QWORD *)(v1 - 112) = v2;
}

void sub_23F614BF4()
{
  sub_23F3E3708((uint64_t)&unk_250FD1B40);
}

id sub_23F614C00(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  BOOL v3;
  _QWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v3 = a1 == 0x73656C707574 && a2 == 0xE600000000000000;
  if (v3 || (sub_23F3C8510() & 1) != 0)
  {
    v6 = v2 + 2;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  v8 = a1 == 0x6F43656369766564 && a2 == 0xED0000747865746ELL;
  if (v8 || (sub_23F482A1C(), (sub_23F3C8510() & 1) != 0))
  {
    v6 = v2 + 3;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  if (a1 == 0xD000000000000015 && (sub_23F5BDC28(), v3) || (sub_23F3C8510() & 1) != 0)
  {
    v6 = v2 + 4;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  if (a1 == 0xD00000000000001CLL && (sub_23F5BDC28(), v3) || (sub_23F3C8510() & 1) != 0)
  {
    v6 = v2 + 5;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  if (a1 == 0xD00000000000001BLL && (sub_23F5BDC28(), v3) || (sub_23F3C8510() & 1) != 0)
  {
    v6 = v2 + 6;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  if (a1 == 0xD000000000000010 && (sub_23F5BDC28(), v3) || (sub_23F3C8510() & 1) != 0)
  {
    v6 = v2 + 7;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  v9 = a1 == 0x6576654C6B736972 && a2 == 0xE90000000000006CLL;
  if (v9 || (sub_23F482A1C(), (sub_23F3C8510() & 1) != 0))
  {
    v6 = v2 + 8;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  if (a1 == 0xD000000000000010 && (sub_23F5BDC28(), v3) || (sub_23F3C8510() & 1) != 0)
  {
    v6 = v2 + 9;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  v10 = a1 == 0x6574656D61726170 && a2 == 0xED00006570795472;
  if (v10 || (sub_23F482A1C(), (sub_23F3C8510() & 1) != 0))
  {
    v6 = v2 + 10;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  v11 = a1 == 0x5079646165726C61 && a2 == 0xEF646574706D6F72;
  if (v11 || (sub_23F482A1C(), (sub_23F3C8510() & 1) != 0))
  {
    v6 = v2 + 11;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  v12 = a1 == 0x6E656E6F706D6F63 && a2 == 0xE900000000000074;
  if (v12 || (sub_23F482A1C(), (sub_23F3C8510() & 1) != 0))
  {
    v6 = v2 + 12;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  return 0;
}

uint64_t sub_23F614F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10)
{
  uint64_t v10;

  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = a5;
  *(_QWORD *)(v10 + 56) = a6;
  *(_QWORD *)(v10 + 64) = a7;
  *(_QWORD *)(v10 + 72) = a8;
  *(_OWORD *)(v10 + 80) = a9;
  *(_QWORD *)(v10 + 96) = a10;
  return v10;
}

id *sub_23F614FC4()
{
  id *v0;

  return v0;
}

uint64_t sub_23F615030()
{
  sub_23F614FC4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PlanResolutionModelInput()
{
  return objc_opt_self();
}

void sub_23F615070()
{
  sub_23F61548C();
}

void sub_23F615084()
{
  sub_23F615494();
}

void sub_23F61509C()
{
  sub_23F61548C();
}

void sub_23F6150B0()
{
  sub_23F615124();
}

void sub_23F6150CC()
{
  sub_23F615494();
}

void sub_23F6150E4()
{
  sub_23F615124();
}

void sub_23F615104()
{
  sub_23F615124();
}

void sub_23F615124()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)sub_23F61C0E8();
  v1 = sub_23F3B209C((uint64_t)v0, sel_featureValueForName_);

  if (v1)
  {
    v2 = objc_msgSend(v1, sel_multiArrayValue);

    if (v2)
    {
      sub_23F362928();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_23F6151EC()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_featureNames);
  sub_23F61C538();

  sub_23F362928();
}

void sub_23F61523C()
{
  void *v0;
  id v1;

  v0 = (void *)sub_23F61C0E8();
  v1 = sub_23F3B209C((uint64_t)v0, sel_featureValueForName_);

  sub_23F362928();
}

id sub_23F615288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v5 = sub_23F61C10C();
  v7 = v6;
  swift_retain();
  v8 = (void *)a4(v5, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t type metadata accessor for PlanResolutionModelOutput()
{
  return objc_opt_self();
}

uint64_t sub_23F61530C(uint64_t a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC0018]), sel_init);
  v3 = sub_23F615374(a1, (uint64_t)v2);

  return v3;
}

uint64_t sub_23F615374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    type metadata accessor for PlanResolutionModelOutput();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v8;
    v9 = v7;
  }
  else
  {
    v10 = v12[0];
    sub_23F616D9C();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_23F615448()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PlanResolutionModel()
{
  return objc_opt_self();
}

void sub_23F61548C()
{
  sub_23F615124();
}

void sub_23F615494()
{
  sub_23F615124();
}

void sub_23F6156AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_23F615844(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_23F615974(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_23F615A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_23F615C68()
{
  void *v0;
  void *v1;
  uint64_t v2;

  __cxa_end_catch();
  marisa::Agent::~Agent((marisa::Agent *)&v2);

  JUMPOUT(0x23F615CF0);
}

void sub_23F615C84(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_23F61688C(a1);
  _Unwind_Resume(a1);
}

void sub_23F615C94()
{
  JUMPOUT(0x23F615CE4);
}

void sub_23F615CA0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;

  if (a22 < 0)
    operator delete(__p);
  marisa::Agent::~Agent((marisa::Agent *)&v25);

  JUMPOUT(0x23F615CF0);
}

void sub_23F615EE8()
{
  void *v0;
  void *v1;
  uint64_t v2;

  __cxa_end_catch();
  marisa::Agent::~Agent((marisa::Agent *)&v2);

  JUMPOUT(0x23F615F64);
}

void sub_23F615F04(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_23F61688C(a1);
  _Unwind_Resume(a1);
}

void sub_23F615F14()
{
  JUMPOUT(0x23F615F58);
}

void sub_23F615F20(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;
  void *v23;
  uint64_t v24;

  if (a22 < 0)
    operator delete(__p);
  marisa::Agent::~Agent((marisa::Agent *)&v24);

  JUMPOUT(0x23F615F64);
}

void sub_23F61600C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_23F616230(_Unwind_Exception *a1, uint64_t a2, void *a3, ...)
{
  void *v3;
  void *v4;
  va_list va;

  va_start(va, a3);

  marisa::Agent::~Agent((marisa::Agent *)va);
  _Unwind_Resume(a1);
}

void sub_23F61640C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_23F6166F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  void *v10;
  void *v11;

  marisa::Agent::~Agent((marisa::Agent *)&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_23F616810(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  if (*a1)
  {
    v5 = *(_QWORD *)(v2 - 8);
    v4 = v2 - 8;
    v3 = v5;
    if (v5)
    {
      v6 = 8 * v3;
      do
      {
        v7 = *(_QWORD *)(v4 + v6);
        if (v7)
          MEMORY[0x24267042C](v7, 0x1000C8077774924);
        v6 -= 8;
      }
      while (v6);
    }
    MEMORY[0x24267042C](v4 - 8, 0x10C80436913F5);
  }
  return a1;
}

void sub_23F61688C(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

_QWORD *sub_23F61689C(_QWORD *__dst, void *__src, size_t __len)
{
  void *v6;
  size_t v7;
  size_t v8;

  if (__len >= 0x7FFFFFFFFFFFFFF8)
    sub_23F616940();
  if (__len >= 0x17)
  {
    v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17)
      v7 = __len | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    *__dst = v6;
  }
  else
  {
    *((_BYTE *)__dst + 23) = __len;
    v6 = __dst;
    if (!__len)
      goto LABEL_9;
  }
  memmove(v6, __src, __len);
LABEL_9:
  *((_BYTE *)v6 + __len) = 0;
  return __dst;
}

void sub_23F616940()
{
  sub_23F61694C();
}

void sub_23F61694C()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_23F616994(exception);
  __cxa_throw(exception, (struct type_info *)off_250FD0060, MEMORY[0x24BEDAAF0]);
}

void sub_23F616980(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_23F616994(std::logic_error *a1)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, "basic_string");
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8B8] + 16);
  return result;
}

void sub_23F616A00()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.intelligenceflow", "PlanOverrides");
  v1 = (void *)qword_256EA0758;
  qword_256EA0758 = (uint64_t)v0;

}

uint64_t sub_23F616A30()
{
  return MEMORY[0x24BDCAF28]();
}

uint64_t sub_23F616A3C()
{
  return MEMORY[0x24BDCAFF8]();
}

uint64_t sub_23F616A48()
{
  return MEMORY[0x24BDCB018]();
}

uint64_t sub_23F616A54()
{
  return MEMORY[0x24BDCB020]();
}

uint64_t sub_23F616A60()
{
  return MEMORY[0x24BDCB070]();
}

uint64_t sub_23F616A6C()
{
  return MEMORY[0x24BDCB088]();
}

uint64_t sub_23F616A78()
{
  return MEMORY[0x24BDCB098]();
}

uint64_t sub_23F616A84()
{
  return MEMORY[0x24BDCB0A8]();
}

uint64_t sub_23F616A90()
{
  return MEMORY[0x24BDCB0C0]();
}

uint64_t sub_23F616A9C()
{
  return MEMORY[0x24BDCB1A8]();
}

uint64_t sub_23F616AA8()
{
  return MEMORY[0x24BDCB1B0]();
}

uint64_t sub_23F616AB4()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_23F616AC0()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_23F616ACC()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_23F616AD8()
{
  return MEMORY[0x24BDCB288]();
}

uint64_t sub_23F616AE4()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_23F616AF0()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t sub_23F616AFC()
{
  return MEMORY[0x24BDCB300]();
}

uint64_t sub_23F616B08()
{
  return MEMORY[0x24BDCB318]();
}

uint64_t sub_23F616B14()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_23F616B20()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_23F616B2C()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_23F616B38()
{
  return MEMORY[0x24BDCB428]();
}

uint64_t sub_23F616B44()
{
  return MEMORY[0x24BDCB438]();
}

uint64_t sub_23F616B50()
{
  return MEMORY[0x24BDCB470]();
}

uint64_t sub_23F616B5C()
{
  return MEMORY[0x24BDCB488]();
}

uint64_t sub_23F616B68()
{
  return MEMORY[0x24BDCB498]();
}

uint64_t sub_23F616B74()
{
  return MEMORY[0x24BDCB568]();
}

uint64_t sub_23F616B80()
{
  return MEMORY[0x24BDCB620]();
}

uint64_t sub_23F616B8C()
{
  return MEMORY[0x24BDCB6C0]();
}

uint64_t sub_23F616B98()
{
  return MEMORY[0x24BDCB728]();
}

uint64_t sub_23F616BA4()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_23F616BB0()
{
  return MEMORY[0x24BDCB9E0]();
}

uint64_t sub_23F616BBC()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_23F616BC8()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_23F616BD4()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_23F616BE0()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_23F616BEC()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_23F616BF8()
{
  return MEMORY[0x24BDCBC30]();
}

uint64_t sub_23F616C04()
{
  return MEMORY[0x24BDCBC38]();
}

uint64_t sub_23F616C10()
{
  return MEMORY[0x24BDCBC48]();
}

uint64_t sub_23F616C1C()
{
  return MEMORY[0x24BDCBC50]();
}

uint64_t sub_23F616C28()
{
  return MEMORY[0x24BDCBC58]();
}

uint64_t sub_23F616C34()
{
  return MEMORY[0x24BDCBCA0]();
}

uint64_t sub_23F616C40()
{
  return MEMORY[0x24BDCBCC8]();
}

uint64_t sub_23F616C4C()
{
  return MEMORY[0x24BDCBCE0]();
}

uint64_t sub_23F616C58()
{
  return MEMORY[0x24BDCBD00]();
}

uint64_t sub_23F616C64()
{
  return MEMORY[0x24BDCBD08]();
}

uint64_t sub_23F616C70()
{
  return MEMORY[0x24BDCBD10]();
}

uint64_t sub_23F616C7C()
{
  return MEMORY[0x24BDCBD18]();
}

uint64_t sub_23F616C88()
{
  return MEMORY[0x24BDCBD28]();
}

uint64_t sub_23F616C94()
{
  return MEMORY[0x24BDCBD38]();
}

uint64_t sub_23F616CA0()
{
  return MEMORY[0x24BDCBD48]();
}

uint64_t sub_23F616CAC()
{
  return MEMORY[0x24BDCBD60]();
}

uint64_t sub_23F616CB8()
{
  return MEMORY[0x24BDCBD68]();
}

uint64_t sub_23F616CC4()
{
  return MEMORY[0x24BDCBD70]();
}

uint64_t sub_23F616CD0()
{
  return MEMORY[0x24BDCBD78]();
}

uint64_t sub_23F616CDC()
{
  return MEMORY[0x24BDCBD80]();
}

uint64_t sub_23F616CE8()
{
  return MEMORY[0x24BDCBD88]();
}

uint64_t sub_23F616CF4()
{
  return MEMORY[0x24BDCBDA8]();
}

uint64_t sub_23F616D00()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_23F616D0C()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_23F616D18()
{
  return MEMORY[0x24BDCC268]();
}

uint64_t sub_23F616D24()
{
  return MEMORY[0x24BDCC290]();
}

uint64_t sub_23F616D30()
{
  return MEMORY[0x24BDCC2F8]();
}

uint64_t sub_23F616D3C()
{
  return MEMORY[0x24BDCC4F0]();
}

uint64_t sub_23F616D48()
{
  return MEMORY[0x24BDCC5A8]();
}

uint64_t sub_23F616D54()
{
  return MEMORY[0x24BDCC6B8]();
}

uint64_t sub_23F616D60()
{
  return MEMORY[0x24BDCC6C0]();
}

uint64_t sub_23F616D6C()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_23F616D78()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_23F616D84()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_23F616D90()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_23F616D9C()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_23F616DA8()
{
  return MEMORY[0x24BDCD320]();
}

uint64_t sub_23F616DB4()
{
  return MEMORY[0x24BDCD380]();
}

uint64_t sub_23F616DC0()
{
  return MEMORY[0x24BDCD760]();
}

uint64_t sub_23F616DCC()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_23F616DD8()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_23F616DE4()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_23F616DF0()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_23F616DFC()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_23F616E08()
{
  return MEMORY[0x24BDCD938]();
}

uint64_t sub_23F616E14()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_23F616E20()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_23F616E2C()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_23F616E38()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_23F616E44()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_23F616E50()
{
  return MEMORY[0x24BDCDAA8]();
}

uint64_t sub_23F616E5C()
{
  return MEMORY[0x24BDCDAB0]();
}

uint64_t sub_23F616E68()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23F616E74()
{
  return MEMORY[0x24BDCDB58]();
}

uint64_t sub_23F616E80()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_23F616E8C()
{
  return MEMORY[0x24BDCDB68]();
}

uint64_t sub_23F616E98()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_23F616EA4()
{
  return MEMORY[0x24BDCDBD0]();
}

uint64_t sub_23F616EB0()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_23F616EBC()
{
  return MEMORY[0x24BDCDC30]();
}

uint64_t sub_23F616EC8()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_23F616ED4()
{
  return MEMORY[0x24BDCDC60]();
}

uint64_t sub_23F616EE0()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_23F616EEC()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_23F616EF8()
{
  return MEMORY[0x24BDCE2D8]();
}

uint64_t sub_23F616F04()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_23F616F10()
{
  return MEMORY[0x24BDCE350]();
}

uint64_t sub_23F616F1C()
{
  return MEMORY[0x24BDCE378]();
}

uint64_t sub_23F616F28()
{
  return MEMORY[0x24BDCE3A0]();
}

uint64_t sub_23F616F34()
{
  return MEMORY[0x24BDCE3B8]();
}

uint64_t sub_23F616F40()
{
  return MEMORY[0x24BDCE3E8]();
}

uint64_t sub_23F616F4C()
{
  return MEMORY[0x24BDCE448]();
}

uint64_t sub_23F616F58()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_23F616F64()
{
  return MEMORY[0x24BDCE5E8]();
}

uint64_t sub_23F616F70()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_23F616F7C()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_23F616F88()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_23F616F94()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_23F616FA0()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_23F616FAC()
{
  return MEMORY[0x24BDCE8D8]();
}

uint64_t sub_23F616FB8()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_23F616FC4()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23F616FD0()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_23F616FDC()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23F616FE8()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23F616FF4()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23F617000()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23F61700C()
{
  return MEMORY[0x24BDCEB18]();
}

uint64_t sub_23F617018()
{
  return MEMORY[0x24BDCEB20]();
}

uint64_t sub_23F617024()
{
  return MEMORY[0x24BDCEB30]();
}

uint64_t sub_23F617030()
{
  return MEMORY[0x24BDCEB48]();
}

uint64_t sub_23F61703C()
{
  return MEMORY[0x24BDCEB50]();
}

uint64_t sub_23F617048()
{
  return MEMORY[0x24BDCEB60]();
}

uint64_t sub_23F617054()
{
  return MEMORY[0x24BDCEBB8]();
}

uint64_t sub_23F617060()
{
  return MEMORY[0x24BDCEC90]();
}

uint64_t sub_23F61706C()
{
  return MEMORY[0x24BDCECA0]();
}

uint64_t sub_23F617078()
{
  return MEMORY[0x24BDCECF0]();
}

uint64_t sub_23F617084()
{
  return MEMORY[0x24BDCED08]();
}

uint64_t sub_23F617090()
{
  return MEMORY[0x24BDCED50]();
}

uint64_t sub_23F61709C()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_23F6170A8()
{
  return MEMORY[0x24BDCEDE0]();
}

uint64_t sub_23F6170B4()
{
  return MEMORY[0x24BDCEE28]();
}

uint64_t sub_23F6170C0()
{
  return MEMORY[0x24BDCEE60]();
}

uint64_t sub_23F6170CC()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_23F6170D8()
{
  return MEMORY[0x24BDCEF80]();
}

uint64_t sub_23F6170E4()
{
  return MEMORY[0x24BDCEFA0]();
}

uint64_t sub_23F6170F0()
{
  return MEMORY[0x24BDCF050]();
}

uint64_t sub_23F6170FC()
{
  return MEMORY[0x24BDCF140]();
}

uint64_t sub_23F617108()
{
  return MEMORY[0x24BDCF150]();
}

uint64_t sub_23F617114()
{
  return MEMORY[0x24BDCF160]();
}

uint64_t sub_23F617120()
{
  return MEMORY[0x24BDCF1A0]();
}

uint64_t sub_23F61712C()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_23F617138()
{
  return MEMORY[0x24BDCF1D0]();
}

uint64_t sub_23F617144()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_23F617150()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_23F61715C()
{
  return MEMORY[0x24BDCF3C8]();
}

uint64_t sub_23F617168()
{
  return MEMORY[0x24BDCF428]();
}

uint64_t sub_23F617174()
{
  return MEMORY[0x24BDCF4C8]();
}

uint64_t sub_23F617180()
{
  return MEMORY[0x24BDCF4D8]();
}

uint64_t sub_23F61718C()
{
  return MEMORY[0x24BDCF500]();
}

uint64_t sub_23F617198()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_23F6171A4()
{
  return MEMORY[0x24BE6E128]();
}

uint64_t sub_23F6171B0()
{
  return MEMORY[0x24BE6E130]();
}

uint64_t sub_23F6171BC()
{
  return MEMORY[0x24BE6E138]();
}

uint64_t sub_23F6171C8()
{
  return MEMORY[0x24BE6E148]();
}

uint64_t sub_23F6171D4()
{
  return MEMORY[0x24BE6E150]();
}

uint64_t sub_23F6171E0()
{
  return MEMORY[0x24BE6E158]();
}

uint64_t sub_23F6171EC()
{
  return MEMORY[0x24BE6E160]();
}

uint64_t sub_23F6171F8()
{
  return MEMORY[0x24BE6E168]();
}

uint64_t sub_23F617204()
{
  return MEMORY[0x24BE6E180]();
}

uint64_t sub_23F617210()
{
  return MEMORY[0x24BE6E188]();
}

uint64_t sub_23F61721C()
{
  return MEMORY[0x24BE30C08]();
}

uint64_t sub_23F617228()
{
  return MEMORY[0x24BE30C18]();
}

uint64_t sub_23F617234()
{
  return MEMORY[0x24BE30C20]();
}

uint64_t sub_23F617240()
{
  return MEMORY[0x24BE30C30]();
}

uint64_t sub_23F61724C()
{
  return MEMORY[0x24BE30C38]();
}

uint64_t sub_23F617258()
{
  return MEMORY[0x24BE30C40]();
}

uint64_t sub_23F617264()
{
  return MEMORY[0x24BE397E8]();
}

uint64_t sub_23F617270()
{
  return MEMORY[0x24BE397F0]();
}

uint64_t sub_23F61727C()
{
  return MEMORY[0x24BE398D0]();
}

uint64_t sub_23F617288()
{
  return MEMORY[0x24BE398E0]();
}

uint64_t sub_23F617294()
{
  return MEMORY[0x24BE398F8]();
}

uint64_t sub_23F6172A0()
{
  return MEMORY[0x24BE39900]();
}

uint64_t sub_23F6172AC()
{
  return MEMORY[0x24BE39908]();
}

uint64_t sub_23F6172B8()
{
  return MEMORY[0x24BE39918]();
}

uint64_t sub_23F6172C4()
{
  return MEMORY[0x24BE39920]();
}

uint64_t sub_23F6172D0()
{
  return MEMORY[0x24BE39928]();
}

uint64_t sub_23F6172DC()
{
  return MEMORY[0x24BE39988]();
}

uint64_t sub_23F6172E8()
{
  return MEMORY[0x24BE39990]();
}

uint64_t sub_23F6172F4()
{
  return MEMORY[0x24BE39998]();
}

uint64_t sub_23F617300()
{
  return MEMORY[0x24BE399A8]();
}

uint64_t sub_23F61730C()
{
  return MEMORY[0x24BE39A18]();
}

uint64_t sub_23F617318()
{
  return MEMORY[0x24BE39A30]();
}

uint64_t sub_23F617324()
{
  return MEMORY[0x24BE39A38]();
}

uint64_t sub_23F617330()
{
  return MEMORY[0x24BE39A40]();
}

uint64_t sub_23F61733C()
{
  return MEMORY[0x24BE39A48]();
}

uint64_t sub_23F617348()
{
  return MEMORY[0x24BE39A50]();
}

uint64_t sub_23F617354()
{
  return MEMORY[0x24BE39A58]();
}

uint64_t sub_23F617360()
{
  return MEMORY[0x24BE39A70]();
}

uint64_t sub_23F61736C()
{
  return MEMORY[0x24BE39A78]();
}

uint64_t sub_23F617378()
{
  return MEMORY[0x24BE39A80]();
}

uint64_t sub_23F617384()
{
  return MEMORY[0x24BE39A88]();
}

uint64_t sub_23F617390()
{
  return MEMORY[0x24BE39A90]();
}

uint64_t sub_23F61739C()
{
  return MEMORY[0x24BE39A98]();
}

uint64_t sub_23F6173A8()
{
  return MEMORY[0x24BE39C98]();
}

uint64_t sub_23F6173B4()
{
  return MEMORY[0x24BE39CA0]();
}

uint64_t sub_23F6173C0()
{
  return MEMORY[0x24BE39DC0]();
}

uint64_t sub_23F6173CC()
{
  return MEMORY[0x24BE39DC8]();
}

uint64_t sub_23F6173D8()
{
  return MEMORY[0x24BE39DD0]();
}

uint64_t sub_23F6173E4()
{
  return MEMORY[0x24BE39DD8]();
}

uint64_t sub_23F6173F0()
{
  return MEMORY[0x24BE39DE0]();
}

uint64_t sub_23F6173FC()
{
  return MEMORY[0x24BE39DE8]();
}

uint64_t sub_23F617408()
{
  return MEMORY[0x24BE39DF0]();
}

uint64_t sub_23F617414()
{
  return MEMORY[0x24BE39DF8]();
}

uint64_t sub_23F617420()
{
  return MEMORY[0x24BE39FA8]();
}

uint64_t sub_23F61742C()
{
  return MEMORY[0x24BE39FC0]();
}

uint64_t sub_23F617438()
{
  return MEMORY[0x24BE67F68]();
}

uint64_t sub_23F617444()
{
  return MEMORY[0x24BE68688]();
}

uint64_t sub_23F617450()
{
  return MEMORY[0x24BE68698]();
}

uint64_t sub_23F61745C()
{
  return MEMORY[0x24BE68860]();
}

uint64_t sub_23F617468()
{
  return MEMORY[0x24BE68FD8]();
}

uint64_t sub_23F617474()
{
  return MEMORY[0x24BE68FF0]();
}

uint64_t sub_23F617480()
{
  return MEMORY[0x24BE69030]();
}

uint64_t sub_23F61748C()
{
  return MEMORY[0x24BE69040]();
}

uint64_t sub_23F617498()
{
  return MEMORY[0x24BE69048]();
}

uint64_t sub_23F6174A4()
{
  return MEMORY[0x24BE69050]();
}

uint64_t sub_23F6174B0()
{
  return MEMORY[0x24BE69058]();
}

uint64_t sub_23F6174BC()
{
  return MEMORY[0x24BE69060]();
}

uint64_t sub_23F6174C8()
{
  return MEMORY[0x24BE69068]();
}

uint64_t sub_23F6174D4()
{
  return MEMORY[0x24BE69070]();
}

uint64_t sub_23F6174E0()
{
  return MEMORY[0x24BE69078]();
}

uint64_t sub_23F6174EC()
{
  return MEMORY[0x24BE69080]();
}

uint64_t sub_23F6174F8()
{
  return MEMORY[0x24BE69090]();
}

uint64_t sub_23F617504()
{
  return MEMORY[0x24BE69098]();
}

uint64_t sub_23F617510()
{
  return MEMORY[0x24BE690A0]();
}

uint64_t sub_23F61751C()
{
  return MEMORY[0x24BEE5CC0]();
}

uint64_t sub_23F617528()
{
  return MEMORY[0x24BEE5CC8]();
}

uint64_t sub_23F617534()
{
  return MEMORY[0x24BEE5D18]();
}

uint64_t sub_23F617540()
{
  return MEMORY[0x24BEE5D28]();
}

uint64_t sub_23F61754C()
{
  return MEMORY[0x24BEE5D38]();
}

uint64_t sub_23F617558()
{
  return MEMORY[0x24BEE5D68]();
}

uint64_t sub_23F617564()
{
  return MEMORY[0x24BEE5D88]();
}

uint64_t sub_23F617570()
{
  return MEMORY[0x24BEE5D98]();
}

uint64_t sub_23F61757C()
{
  return MEMORY[0x24BEE5DD8]();
}

uint64_t sub_23F617588()
{
  return MEMORY[0x24BEE5DE8]();
}

uint64_t sub_23F617594()
{
  return MEMORY[0x24BEE5E00]();
}

uint64_t sub_23F6175A0()
{
  return MEMORY[0x24BE9F768]();
}

uint64_t sub_23F6175AC()
{
  return MEMORY[0x24BE9FFD8]();
}

uint64_t sub_23F6175B8()
{
  return MEMORY[0x24BE930A0]();
}

uint64_t sub_23F6175C4()
{
  return MEMORY[0x24BEA0240]();
}

uint64_t sub_23F6175D0()
{
  return MEMORY[0x24BE930A8]();
}

uint64_t sub_23F6175DC()
{
  return MEMORY[0x24BEA02C8]();
}

uint64_t sub_23F6175E8()
{
  return MEMORY[0x24BE930C8]();
}

uint64_t sub_23F6175F4()
{
  return MEMORY[0x24BEA0728]();
}

uint64_t sub_23F617600()
{
  return MEMORY[0x24BEA0980]();
}

uint64_t sub_23F61760C()
{
  return MEMORY[0x24BE930D8]();
}

uint64_t sub_23F617618()
{
  return MEMORY[0x24BEA15E0]();
}

uint64_t sub_23F617624()
{
  return MEMORY[0x24BE930E0]();
}

uint64_t sub_23F617630()
{
  return MEMORY[0x24BEA1F68]();
}

uint64_t sub_23F61763C()
{
  return MEMORY[0x24BE930E8]();
}

uint64_t sub_23F617648()
{
  return MEMORY[0x24BEA1F70]();
}

uint64_t sub_23F617654()
{
  return MEMORY[0x24BE930F8]();
}

uint64_t sub_23F617660()
{
  return MEMORY[0x24BEA2F48]();
}

uint64_t sub_23F61766C()
{
  return MEMORY[0x24BEA2F50]();
}

uint64_t sub_23F617678()
{
  return MEMORY[0x24BEA3538]();
}

uint64_t sub_23F617684()
{
  return MEMORY[0x24BE934F8]();
}

uint64_t sub_23F617690()
{
  return MEMORY[0x24BE93608]();
}

uint64_t sub_23F61769C()
{
  return MEMORY[0x24BE93620]();
}

uint64_t sub_23F6176A8()
{
  return MEMORY[0x24BE93648]();
}

uint64_t sub_23F6176B4()
{
  return MEMORY[0x24BE937B8]();
}

uint64_t sub_23F6176C0()
{
  return MEMORY[0x24BE937D8]();
}

uint64_t sub_23F6176CC()
{
  return MEMORY[0x24BE937E8]();
}

uint64_t sub_23F6176D8()
{
  return MEMORY[0x24BE937F0]();
}

uint64_t sub_23F6176E4()
{
  return MEMORY[0x24BE937F8]();
}

uint64_t sub_23F6176F0()
{
  return MEMORY[0x24BE93808]();
}

uint64_t sub_23F6176FC()
{
  return MEMORY[0x24BE93818]();
}

uint64_t sub_23F617708()
{
  return MEMORY[0x24BE93820]();
}

uint64_t sub_23F617714()
{
  return MEMORY[0x24BE938E0]();
}

uint64_t sub_23F617720()
{
  return MEMORY[0x24BE938F0]();
}

uint64_t sub_23F61772C()
{
  return MEMORY[0x24BE93900]();
}

uint64_t sub_23F617738()
{
  return MEMORY[0x24BE93908]();
}

uint64_t sub_23F617744()
{
  return MEMORY[0x24BE93978]();
}

uint64_t sub_23F617750()
{
  return MEMORY[0x24BE93998]();
}

uint64_t sub_23F61775C()
{
  return MEMORY[0x24BE939A0]();
}

uint64_t sub_23F617768()
{
  return MEMORY[0x24BE939B8]();
}

uint64_t sub_23F617774()
{
  return MEMORY[0x24BE939C8]();
}

uint64_t sub_23F617780()
{
  return MEMORY[0x24BE939D0]();
}

uint64_t sub_23F61778C()
{
  return MEMORY[0x24BE939E0]();
}

uint64_t sub_23F617798()
{
  return MEMORY[0x24BE93A20]();
}

uint64_t sub_23F6177A4()
{
  return MEMORY[0x24BE93A38]();
}

uint64_t sub_23F6177B0()
{
  return MEMORY[0x24BE93A40]();
}

uint64_t sub_23F6177BC()
{
  return MEMORY[0x24BE93A68]();
}

uint64_t sub_23F6177C8()
{
  return MEMORY[0x24BE93A70]();
}

uint64_t sub_23F6177D4()
{
  return MEMORY[0x24BE93AD8]();
}

uint64_t sub_23F6177E0()
{
  return MEMORY[0x24BE93AE8]();
}

uint64_t sub_23F6177EC()
{
  return MEMORY[0x24BE93B10]();
}

uint64_t sub_23F6177F8()
{
  return MEMORY[0x24BE93B48]();
}

uint64_t sub_23F617804()
{
  return MEMORY[0x24BE93B80]();
}

uint64_t sub_23F617810()
{
  return MEMORY[0x24BE93B90]();
}

uint64_t sub_23F61781C()
{
  return MEMORY[0x24BE93C30]();
}

uint64_t sub_23F617828()
{
  return MEMORY[0x24BE93C38]();
}

uint64_t sub_23F617834()
{
  return MEMORY[0x24BE93C48]();
}

uint64_t sub_23F617840()
{
  return MEMORY[0x24BE93CC0]();
}

uint64_t sub_23F61784C()
{
  return MEMORY[0x24BE93D30]();
}

uint64_t sub_23F617858()
{
  return MEMORY[0x24BE93D58]();
}

uint64_t sub_23F617864()
{
  return MEMORY[0x24BE93D68]();
}

uint64_t sub_23F617870()
{
  return MEMORY[0x24BE93D78]();
}

uint64_t sub_23F61787C()
{
  return MEMORY[0x24BE93D88]();
}

uint64_t sub_23F617888()
{
  return MEMORY[0x24BE93D90]();
}

uint64_t sub_23F617894()
{
  return MEMORY[0x24BE93DA0]();
}

uint64_t sub_23F6178A0()
{
  return MEMORY[0x24BE94110]();
}

uint64_t sub_23F6178AC()
{
  return MEMORY[0x24BE94190]();
}

uint64_t sub_23F6178B8()
{
  return MEMORY[0x24BE94198]();
}

uint64_t sub_23F6178C4()
{
  return MEMORY[0x24BE941B8]();
}

uint64_t sub_23F6178D0()
{
  return MEMORY[0x24BE941C8]();
}

uint64_t sub_23F6178DC()
{
  return MEMORY[0x24BE942A8]();
}

uint64_t sub_23F6178E8()
{
  return MEMORY[0x24BE942E0]();
}

uint64_t sub_23F6178F4()
{
  return MEMORY[0x24BE94300]();
}

uint64_t sub_23F617900()
{
  return MEMORY[0x24BE94310]();
}

uint64_t sub_23F61790C()
{
  return MEMORY[0x24BE94318]();
}

uint64_t sub_23F617918()
{
  return MEMORY[0x24BE94360]();
}

uint64_t sub_23F617924()
{
  return MEMORY[0x24BEA87E8]();
}

uint64_t sub_23F617930()
{
  return MEMORY[0x24BEA87F0]();
}

uint64_t sub_23F61793C()
{
  return MEMORY[0x24BEA8808]();
}

uint64_t sub_23F617948()
{
  return MEMORY[0x24BEA8810]();
}

uint64_t sub_23F617954()
{
  return MEMORY[0x24BEA8B20]();
}

uint64_t sub_23F617960()
{
  return MEMORY[0x24BEB7F68]();
}

uint64_t sub_23F61796C()
{
  return MEMORY[0x24BEB7F70]();
}

uint64_t sub_23F617978()
{
  return MEMORY[0x24BEB7F78]();
}

uint64_t sub_23F617984()
{
  return MEMORY[0x24BEB7F88]();
}

uint64_t sub_23F617990()
{
  return MEMORY[0x24BEB7FD8]();
}

uint64_t sub_23F61799C()
{
  return MEMORY[0x24BE3BDB0]();
}

uint64_t sub_23F6179A8()
{
  return MEMORY[0x24BEB8028]();
}

uint64_t sub_23F6179B4()
{
  return MEMORY[0x24BEB8040]();
}

uint64_t sub_23F6179C0()
{
  return MEMORY[0x24BEB80B0]();
}

uint64_t sub_23F6179CC()
{
  return MEMORY[0x24BEB80B8]();
}

uint64_t sub_23F6179D8()
{
  return MEMORY[0x24BEB80E8]();
}

uint64_t sub_23F6179E4()
{
  return MEMORY[0x24BEB8100]();
}

uint64_t sub_23F6179F0()
{
  return MEMORY[0x24BEB8188]();
}

uint64_t sub_23F6179FC()
{
  return MEMORY[0x24BEB81B8]();
}

uint64_t sub_23F617A08()
{
  return MEMORY[0x24BEB81F0]();
}

uint64_t sub_23F617A14()
{
  return MEMORY[0x24BEB8210]();
}

uint64_t sub_23F617A20()
{
  return MEMORY[0x24BEB8218]();
}

uint64_t sub_23F617A2C()
{
  return MEMORY[0x24BEB8228]();
}

uint64_t sub_23F617A38()
{
  return MEMORY[0x24BEB8238]();
}

uint64_t sub_23F617A44()
{
  return MEMORY[0x24BEB8248]();
}

uint64_t sub_23F617A50()
{
  return MEMORY[0x24BEB8258]();
}

uint64_t sub_23F617A5C()
{
  return MEMORY[0x24BEB8278]();
}

uint64_t sub_23F617A68()
{
  return MEMORY[0x24BEB8288]();
}

uint64_t sub_23F617A74()
{
  return MEMORY[0x24BEB8298]();
}

uint64_t sub_23F617A80()
{
  return MEMORY[0x24BEB82A8]();
}

uint64_t sub_23F617A8C()
{
  return MEMORY[0x24BEB82E0]();
}

uint64_t sub_23F617A98()
{
  return MEMORY[0x24BEB82F0]();
}

uint64_t sub_23F617AA4()
{
  return MEMORY[0x24BEB8310]();
}

uint64_t sub_23F617AB0()
{
  return MEMORY[0x24BEB8330]();
}

uint64_t sub_23F617ABC()
{
  return MEMORY[0x24BEB8368]();
}

uint64_t sub_23F617AC8()
{
  return MEMORY[0x24BEB8378]();
}

uint64_t sub_23F617AD4()
{
  return MEMORY[0x24BEB8388]();
}

uint64_t sub_23F617AE0()
{
  return MEMORY[0x24BEB83E0]();
}

uint64_t sub_23F617AEC()
{
  return MEMORY[0x24BEB8420]();
}

uint64_t sub_23F617AF8()
{
  return MEMORY[0x24BE3C3B8]();
}

uint64_t sub_23F617B04()
{
  return MEMORY[0x24BE3BDD0]();
}

uint64_t sub_23F617B10()
{
  return MEMORY[0x24BE3BDD8]();
}

uint64_t sub_23F617B1C()
{
  return MEMORY[0x24BE3C448]();
}

uint64_t sub_23F617B28()
{
  return MEMORY[0x24BE3C450]();
}

uint64_t sub_23F617B34()
{
  return MEMORY[0x24BE3C458]();
}

uint64_t sub_23F617B40()
{
  return MEMORY[0x24BE3C2C0]();
}

uint64_t sub_23F617B4C()
{
  return MEMORY[0x24BE3C4A8]();
}

uint64_t sub_23F617B58()
{
  return MEMORY[0x24BE3C4B8]();
}

uint64_t sub_23F617B64()
{
  return MEMORY[0x24BE3C4C0]();
}

uint64_t sub_23F617B70()
{
  return MEMORY[0x24BE3C4C8]();
}

uint64_t sub_23F617B7C()
{
  return MEMORY[0x24BE3C4D0]();
}

uint64_t sub_23F617B88()
{
  return MEMORY[0x24BE3C4D8]();
}

uint64_t sub_23F617B94()
{
  return MEMORY[0x24BE3C4E8]();
}

uint64_t sub_23F617BA0()
{
  return MEMORY[0x24BEB8610]();
}

uint64_t sub_23F617BAC()
{
  return MEMORY[0x24BEB8620]();
}

uint64_t sub_23F617BB8()
{
  return MEMORY[0x24BE3C570]();
}

uint64_t sub_23F617BC4()
{
  return MEMORY[0x24BE3C588]();
}

uint64_t sub_23F617BD0()
{
  return MEMORY[0x24BEB8648]();
}

uint64_t sub_23F617BDC()
{
  return MEMORY[0x24BEB8660]();
}

uint64_t sub_23F617BE8()
{
  return MEMORY[0x24BE51FE0]();
}

uint64_t sub_23F617BF4()
{
  return MEMORY[0x24BE51FF0]();
}

uint64_t sub_23F617C00()
{
  return MEMORY[0x24BE52000]();
}

uint64_t sub_23F617C0C()
{
  return MEMORY[0x24BE52010]();
}

uint64_t sub_23F617C18()
{
  return MEMORY[0x24BE52018]();
}

uint64_t sub_23F617C24()
{
  return MEMORY[0x24BE52030]();
}

uint64_t sub_23F617C30()
{
  return MEMORY[0x24BE52040]();
}

uint64_t sub_23F617C3C()
{
  return MEMORY[0x24BE52058]();
}

uint64_t sub_23F617C48()
{
  return MEMORY[0x24BE520C0]();
}

uint64_t sub_23F617C54()
{
  return MEMORY[0x24BE520C8]();
}

uint64_t sub_23F617C60()
{
  return MEMORY[0x24BE520D0]();
}

uint64_t sub_23F617C6C()
{
  return MEMORY[0x24BE520D8]();
}

uint64_t sub_23F617C78()
{
  return MEMORY[0x24BE520E0]();
}

uint64_t sub_23F617C84()
{
  return MEMORY[0x24BE520E8]();
}

uint64_t sub_23F617C90()
{
  return MEMORY[0x24BE520F0]();
}

uint64_t sub_23F617C9C()
{
  return MEMORY[0x24BE52100]();
}

uint64_t sub_23F617CA8()
{
  return MEMORY[0x24BE54858]();
}

uint64_t sub_23F617CB4()
{
  return MEMORY[0x24BE54860]();
}

uint64_t sub_23F617CC0()
{
  return MEMORY[0x24BE52110]();
}

uint64_t sub_23F617CCC()
{
  return MEMORY[0x24BE52118]();
}

uint64_t sub_23F617CD8()
{
  return MEMORY[0x24BE52120]();
}

uint64_t sub_23F617CE4()
{
  return MEMORY[0x24BE52128]();
}

uint64_t sub_23F617CF0()
{
  return MEMORY[0x24BE52130]();
}

uint64_t sub_23F617CFC()
{
  return MEMORY[0x24BE52138]();
}

uint64_t sub_23F617D08()
{
  return MEMORY[0x24BE52140]();
}

uint64_t sub_23F617D14()
{
  return MEMORY[0x24BE522D8]();
}

uint64_t sub_23F617D20()
{
  return MEMORY[0x24BE52300]();
}

uint64_t sub_23F617D2C()
{
  return MEMORY[0x24BE52318]();
}

uint64_t sub_23F617D38()
{
  return MEMORY[0x24BE52330]();
}

uint64_t sub_23F617D44()
{
  return MEMORY[0x24BE52338]();
}

uint64_t sub_23F617D50()
{
  return MEMORY[0x24BE52340]();
}

uint64_t sub_23F617D5C()
{
  return MEMORY[0x24BE52360]();
}

uint64_t sub_23F617D68()
{
  return MEMORY[0x24BE523C8]();
}

uint64_t sub_23F617D74()
{
  return MEMORY[0x24BE523E8]();
}

uint64_t sub_23F617D80()
{
  return MEMORY[0x24BE523F8]();
}

uint64_t sub_23F617D8C()
{
  return MEMORY[0x24BE52408]();
}

uint64_t sub_23F617D98()
{
  return MEMORY[0x24BE52418]();
}

uint64_t sub_23F617DA4()
{
  return MEMORY[0x24BE52430]();
}

uint64_t sub_23F617DB0()
{
  return MEMORY[0x24BE52438]();
}

uint64_t sub_23F617DBC()
{
  return MEMORY[0x24BE52440]();
}

uint64_t sub_23F617DC8()
{
  return MEMORY[0x24BE52448]();
}

uint64_t sub_23F617DD4()
{
  return MEMORY[0x24BE52458]();
}

uint64_t sub_23F617DE0()
{
  return MEMORY[0x24BE52508]();
}

uint64_t sub_23F617DEC()
{
  return MEMORY[0x24BE52530]();
}

uint64_t sub_23F617DF8()
{
  return MEMORY[0x24BE52588]();
}

uint64_t sub_23F617E04()
{
  return MEMORY[0x24BE52590]();
}

uint64_t sub_23F617E10()
{
  return MEMORY[0x24BE52598]();
}

uint64_t sub_23F617E1C()
{
  return MEMORY[0x24BE525A8]();
}

uint64_t sub_23F617E28()
{
  return MEMORY[0x24BE525B0]();
}

uint64_t sub_23F617E34()
{
  return MEMORY[0x24BE525B8]();
}

uint64_t sub_23F617E40()
{
  return MEMORY[0x24BE525C0]();
}

uint64_t sub_23F617E4C()
{
  return MEMORY[0x24BE525F8]();
}

uint64_t sub_23F617E58()
{
  return MEMORY[0x24BE52630]();
}

uint64_t sub_23F617E64()
{
  return MEMORY[0x24BE52660]();
}

uint64_t sub_23F617E70()
{
  return MEMORY[0x24BE52D78]();
}

uint64_t sub_23F617E7C()
{
  return MEMORY[0x24BE52D80]();
}

uint64_t sub_23F617E88()
{
  return MEMORY[0x24BE52D88]();
}

uint64_t sub_23F617E94()
{
  return MEMORY[0x24BE52D90]();
}

uint64_t sub_23F617EA0()
{
  return MEMORY[0x24BE52D98]();
}

uint64_t sub_23F617EAC()
{
  return MEMORY[0x24BE52DA0]();
}

uint64_t sub_23F617EB8()
{
  return MEMORY[0x24BE52DA8]();
}

uint64_t sub_23F617EC4()
{
  return MEMORY[0x24BE52DB0]();
}

uint64_t sub_23F617ED0()
{
  return MEMORY[0x24BE52DB8]();
}

uint64_t sub_23F617EDC()
{
  return MEMORY[0x24BE52DC0]();
}

uint64_t sub_23F617EE8()
{
  return MEMORY[0x24BE52DC8]();
}

uint64_t sub_23F617EF4()
{
  return MEMORY[0x24BE52DD0]();
}

uint64_t sub_23F617F00()
{
  return MEMORY[0x24BE52DD8]();
}

uint64_t sub_23F617F0C()
{
  return MEMORY[0x24BE52DE0]();
}

uint64_t sub_23F617F18()
{
  return MEMORY[0x24BE52DF0]();
}

uint64_t sub_23F617F24()
{
  return MEMORY[0x24BE52DF8]();
}

uint64_t sub_23F617F30()
{
  return MEMORY[0x24BE52E00]();
}

uint64_t sub_23F617F3C()
{
  return MEMORY[0x24BE52E28]();
}

uint64_t sub_23F617F48()
{
  return MEMORY[0x24BE52E50]();
}

uint64_t sub_23F617F54()
{
  return MEMORY[0x24BE52E60]();
}

uint64_t sub_23F617F60()
{
  return MEMORY[0x24BE52EA8]();
}

uint64_t sub_23F617F6C()
{
  return MEMORY[0x24BE52EC0]();
}

uint64_t sub_23F617F78()
{
  return MEMORY[0x24BE52EC8]();
}

uint64_t sub_23F617F84()
{
  return MEMORY[0x24BE52F20]();
}

uint64_t sub_23F617F90()
{
  return MEMORY[0x24BE52F30]();
}

uint64_t sub_23F617F9C()
{
  return MEMORY[0x24BE52F50]();
}

uint64_t sub_23F617FA8()
{
  return MEMORY[0x24BE52F70]();
}

uint64_t sub_23F617FB4()
{
  return MEMORY[0x24BE52F90]();
}

uint64_t sub_23F617FC0()
{
  return MEMORY[0x24BE52FA0]();
}

uint64_t sub_23F617FCC()
{
  return MEMORY[0x24BE52FB0]();
}

uint64_t sub_23F617FD8()
{
  return MEMORY[0x24BE52FC0]();
}

uint64_t sub_23F617FE4()
{
  return MEMORY[0x24BE52FD0]();
}

uint64_t sub_23F617FF0()
{
  return MEMORY[0x24BE52FE8]();
}

uint64_t sub_23F617FFC()
{
  return MEMORY[0x24BE52FF0]();
}

uint64_t sub_23F618008()
{
  return MEMORY[0x24BE53000]();
}

uint64_t sub_23F618014()
{
  return MEMORY[0x24BE53010]();
}

uint64_t sub_23F618020()
{
  return MEMORY[0x24BE53018]();
}

uint64_t sub_23F61802C()
{
  return MEMORY[0x24BE53030]();
}

uint64_t sub_23F618038()
{
  return MEMORY[0x24BE53040]();
}

uint64_t sub_23F618044()
{
  return MEMORY[0x24BE53060]();
}

uint64_t sub_23F618050()
{
  return MEMORY[0x24BE53068]();
}

uint64_t sub_23F61805C()
{
  return MEMORY[0x24BE53070]();
}

uint64_t sub_23F618068()
{
  return MEMORY[0x24BE53080]();
}

uint64_t sub_23F618074()
{
  return MEMORY[0x24BE53098]();
}

uint64_t sub_23F618080()
{
  return MEMORY[0x24BE530B0]();
}

uint64_t sub_23F61808C()
{
  return MEMORY[0x24BE530C8]();
}

uint64_t sub_23F618098()
{
  return MEMORY[0x24BE530D0]();
}

uint64_t sub_23F6180A4()
{
  return MEMORY[0x24BE530D8]();
}

uint64_t sub_23F6180B0()
{
  return MEMORY[0x24BE530F8]();
}

uint64_t sub_23F6180BC()
{
  return MEMORY[0x24BE53158]();
}

uint64_t sub_23F6180C8()
{
  return MEMORY[0x24BE53210]();
}

uint64_t sub_23F6180D4()
{
  return MEMORY[0x24BE53228]();
}

uint64_t sub_23F6180E0()
{
  return MEMORY[0x24BE53240]();
}

uint64_t sub_23F6180EC()
{
  return MEMORY[0x24BE53258]();
}

uint64_t sub_23F6180F8()
{
  return MEMORY[0x24BE53270]();
}

uint64_t sub_23F618104()
{
  return MEMORY[0x24BE53280]();
}

uint64_t sub_23F618110()
{
  return MEMORY[0x24BE53288]();
}

uint64_t sub_23F61811C()
{
  return MEMORY[0x24BE532A0]();
}

uint64_t sub_23F618128()
{
  return MEMORY[0x24BE53318]();
}

uint64_t sub_23F618134()
{
  return MEMORY[0x24BE53330]();
}

uint64_t sub_23F618140()
{
  return MEMORY[0x24BE53370]();
}

uint64_t sub_23F61814C()
{
  return MEMORY[0x24BE53378]();
}

uint64_t sub_23F618158()
{
  return MEMORY[0x24BE53398]();
}

uint64_t sub_23F618164()
{
  return MEMORY[0x24BE533A0]();
}

uint64_t sub_23F618170()
{
  return MEMORY[0x24BE534B8]();
}

uint64_t sub_23F61817C()
{
  return MEMORY[0x24BE534C8]();
}

uint64_t sub_23F618188()
{
  return MEMORY[0x24BE534D0]();
}

uint64_t sub_23F618194()
{
  return MEMORY[0x24BE534D8]();
}

uint64_t sub_23F6181A0()
{
  return MEMORY[0x24BE534E0]();
}

uint64_t sub_23F6181AC()
{
  return MEMORY[0x24BE534F0]();
}

uint64_t sub_23F6181B8()
{
  return MEMORY[0x24BE53548]();
}

uint64_t sub_23F6181C4()
{
  return MEMORY[0x24BE53558]();
}

uint64_t sub_23F6181D0()
{
  return MEMORY[0x24BE53568]();
}

uint64_t sub_23F6181DC()
{
  return MEMORY[0x24BE53598]();
}

uint64_t sub_23F6181E8()
{
  return MEMORY[0x24BE535D0]();
}

uint64_t sub_23F6181F4()
{
  return MEMORY[0x24BE53610]();
}

uint64_t sub_23F618200()
{
  return MEMORY[0x24BE53620]();
}

uint64_t sub_23F61820C()
{
  return MEMORY[0x24BE53628]();
}

uint64_t sub_23F618218()
{
  return MEMORY[0x24BE53658]();
}

uint64_t sub_23F618224()
{
  return MEMORY[0x24BE53660]();
}

uint64_t sub_23F618230()
{
  return MEMORY[0x24BE53668]();
}

uint64_t sub_23F61823C()
{
  return MEMORY[0x24BE53680]();
}

uint64_t sub_23F618248()
{
  return MEMORY[0x24BE53688]();
}

uint64_t sub_23F618254()
{
  return MEMORY[0x24BE536C0]();
}

uint64_t sub_23F618260()
{
  return MEMORY[0x24BE536E0]();
}

uint64_t sub_23F61826C()
{
  return MEMORY[0x24BE53768]();
}

uint64_t sub_23F618278()
{
  return MEMORY[0x24BE53770]();
}

uint64_t sub_23F618284()
{
  return MEMORY[0x24BE53778]();
}

uint64_t sub_23F618290()
{
  return MEMORY[0x24BE54898]();
}

uint64_t sub_23F61829C()
{
  return MEMORY[0x24BE53788]();
}

uint64_t sub_23F6182A8()
{
  return MEMORY[0x24BE53790]();
}

uint64_t sub_23F6182B4()
{
  return MEMORY[0x24BE537F8]();
}

uint64_t sub_23F6182C0()
{
  return MEMORY[0x24BE53940]();
}

uint64_t sub_23F6182CC()
{
  return MEMORY[0x24BE53948]();
}

uint64_t sub_23F6182D8()
{
  return MEMORY[0x24BE53950]();
}

uint64_t sub_23F6182E4()
{
  return MEMORY[0x24BE53958]();
}

uint64_t sub_23F6182F0()
{
  return MEMORY[0x24BE53960]();
}

uint64_t sub_23F6182FC()
{
  return MEMORY[0x24BE539B0]();
}

uint64_t sub_23F618308()
{
  return MEMORY[0x24BE539C0]();
}

uint64_t sub_23F618314()
{
  return MEMORY[0x24BE539C8]();
}

uint64_t sub_23F618320()
{
  return MEMORY[0x24BE53AB0]();
}

uint64_t sub_23F61832C()
{
  return MEMORY[0x24BE53AB8]();
}

uint64_t sub_23F618338()
{
  return MEMORY[0x24BE53AC0]();
}

uint64_t sub_23F618344()
{
  return MEMORY[0x24BE53AC8]();
}

uint64_t sub_23F618350()
{
  return MEMORY[0x24BE53AD0]();
}

uint64_t sub_23F61835C()
{
  return MEMORY[0x24BE53AE0]();
}

uint64_t sub_23F618368()
{
  return MEMORY[0x24BE53AE8]();
}

uint64_t sub_23F618374()
{
  return MEMORY[0x24BE53AF8]();
}

uint64_t sub_23F618380()
{
  return MEMORY[0x24BE53B10]();
}

uint64_t sub_23F61838C()
{
  return MEMORY[0x24BE53B60]();
}

uint64_t sub_23F618398()
{
  return MEMORY[0x24BE53B68]();
}

uint64_t sub_23F6183A4()
{
  return MEMORY[0x24BE53B70]();
}

uint64_t sub_23F6183B0()
{
  return MEMORY[0x24BE53B78]();
}

uint64_t sub_23F6183BC()
{
  return MEMORY[0x24BE53B88]();
}

uint64_t sub_23F6183C8()
{
  return MEMORY[0x24BE53B98]();
}

uint64_t sub_23F6183D4()
{
  return MEMORY[0x24BE53BA8]();
}

uint64_t sub_23F6183E0()
{
  return MEMORY[0x24BE53BB0]();
}

uint64_t sub_23F6183EC()
{
  return MEMORY[0x24BE53BB8]();
}

uint64_t sub_23F6183F8()
{
  return MEMORY[0x24BE53BC8]();
}

uint64_t sub_23F618404()
{
  return MEMORY[0x24BE53ED0]();
}

uint64_t sub_23F618410()
{
  return MEMORY[0x24BE53ED8]();
}

uint64_t sub_23F61841C()
{
  return MEMORY[0x24BE53EE0]();
}

uint64_t sub_23F618428()
{
  return MEMORY[0x24BE53EE8]();
}

uint64_t sub_23F618434()
{
  return MEMORY[0x24BE53EF8]();
}

uint64_t sub_23F618440()
{
  return MEMORY[0x24BE53F00]();
}

uint64_t sub_23F61844C()
{
  return MEMORY[0x24BE548B0]();
}

uint64_t sub_23F618458()
{
  return MEMORY[0x24BE548B8]();
}

uint64_t sub_23F618464()
{
  return MEMORY[0x24BE548C0]();
}

uint64_t sub_23F618470()
{
  return MEMORY[0x24BE548C8]();
}

uint64_t sub_23F61847C()
{
  return MEMORY[0x24BE548E8]();
}

uint64_t sub_23F618488()
{
  return MEMORY[0x24BE548F0]();
}

uint64_t sub_23F618494()
{
  return MEMORY[0x24BE548F8]();
}

uint64_t sub_23F6184A0()
{
  return MEMORY[0x24BE54900]();
}

uint64_t sub_23F6184AC()
{
  return MEMORY[0x24BE54908]();
}

uint64_t sub_23F6184B8()
{
  return MEMORY[0x24BE549B8]();
}

uint64_t sub_23F6184C4()
{
  return MEMORY[0x24BE549E0]();
}

uint64_t sub_23F6184D0()
{
  return MEMORY[0x24BE54A08]();
}

uint64_t sub_23F6184DC()
{
  return MEMORY[0x24BE54A10]();
}

uint64_t sub_23F6184E8()
{
  return MEMORY[0x24BE54A18]();
}

uint64_t sub_23F6184F4()
{
  return MEMORY[0x24BE54A40]();
}

uint64_t sub_23F618500()
{
  return MEMORY[0x24BE92380]();
}

uint64_t sub_23F61850C()
{
  return MEMORY[0x24BE92398]();
}

uint64_t sub_23F618518()
{
  return MEMORY[0x24BE923A0]();
}

uint64_t sub_23F618524()
{
  return MEMORY[0x24BE923B0]();
}

uint64_t sub_23F618530()
{
  return MEMORY[0x24BE92618]();
}

uint64_t sub_23F61853C()
{
  return MEMORY[0x24BE92638]();
}

uint64_t sub_23F618548()
{
  return MEMORY[0x24BE92650]();
}

uint64_t sub_23F618554()
{
  return MEMORY[0x24BE92658]();
}

uint64_t sub_23F618560()
{
  return MEMORY[0x24BE92660]();
}

uint64_t sub_23F61856C()
{
  return MEMORY[0x24BE92670]();
}

uint64_t sub_23F618578()
{
  return MEMORY[0x24BE92678]();
}

uint64_t sub_23F618584()
{
  return MEMORY[0x24BE926C0]();
}

uint64_t sub_23F618590()
{
  return MEMORY[0x24BE926C8]();
}

uint64_t sub_23F61859C()
{
  return MEMORY[0x24BE926D0]();
}

uint64_t sub_23F6185A8()
{
  return MEMORY[0x24BE927D0]();
}

uint64_t sub_23F6185B4()
{
  return MEMORY[0x24BE92840]();
}

uint64_t sub_23F6185C0()
{
  return MEMORY[0x24BE92848]();
}

uint64_t sub_23F6185CC()
{
  return MEMORY[0x24BE92988]();
}

uint64_t sub_23F6185D8()
{
  return MEMORY[0x24BE92990]();
}

uint64_t sub_23F6185E4()
{
  return MEMORY[0x24BE92998]();
}

uint64_t sub_23F6185F0()
{
  return MEMORY[0x24BE929A8]();
}

uint64_t sub_23F6185FC()
{
  return MEMORY[0x24BE929B0]();
}

uint64_t sub_23F618608()
{
  return MEMORY[0x24BE929B8]();
}

uint64_t sub_23F618614()
{
  return MEMORY[0x24BE929C8]();
}

uint64_t sub_23F618620()
{
  return MEMORY[0x24BE92B80]();
}

uint64_t sub_23F61862C()
{
  return MEMORY[0x24BE92BC0]();
}

uint64_t sub_23F618638()
{
  return MEMORY[0x24BEE72A8]();
}

uint64_t sub_23F618644()
{
  return MEMORY[0x24BEE72B0]();
}

uint64_t sub_23F618650()
{
  return MEMORY[0x24BEE72F0]();
}

uint64_t sub_23F61865C()
{
  return MEMORY[0x24BEE7328]();
}

uint64_t sub_23F618668()
{
  return MEMORY[0x24BEE7338]();
}

uint64_t sub_23F618674()
{
  return MEMORY[0x24BEE7350]();
}

uint64_t sub_23F618680()
{
  return MEMORY[0x24BEE5E08]();
}

uint64_t sub_23F61868C()
{
  return MEMORY[0x24BEE5E20]();
}

uint64_t sub_23F618698()
{
  return MEMORY[0x24BEE5E38]();
}

uint64_t sub_23F6186A4()
{
  return MEMORY[0x24BEE73B0]();
}

uint64_t sub_23F6186B0()
{
  return MEMORY[0x24BEE73C0]();
}

uint64_t sub_23F6186BC()
{
  return MEMORY[0x24BEE5E50]();
}

uint64_t sub_23F6186C8()
{
  return MEMORY[0x24BEE73C8]();
}

uint64_t sub_23F6186D4()
{
  return MEMORY[0x24BEE73D0]();
}

uint64_t sub_23F6186E0()
{
  return MEMORY[0x24BEE73D8]();
}

uint64_t sub_23F6186EC()
{
  return MEMORY[0x24BEE7400]();
}

uint64_t sub_23F6186F8()
{
  return MEMORY[0x24BEE5E58]();
}

uint64_t sub_23F618704()
{
  return MEMORY[0x24BEE7408]();
}

uint64_t sub_23F618710()
{
  return MEMORY[0x24BEE7418]();
}

uint64_t sub_23F61871C()
{
  return MEMORY[0x24BEE7420]();
}

uint64_t sub_23F618728()
{
  return MEMORY[0x24BEE7440]();
}

uint64_t sub_23F618734()
{
  return MEMORY[0x24BEE7448]();
}

uint64_t sub_23F618740()
{
  return MEMORY[0x24BE18B90]();
}

uint64_t sub_23F61874C()
{
  return MEMORY[0x24BE18BA0]();
}

uint64_t sub_23F618758()
{
  return MEMORY[0x24BE18BA8]();
}

uint64_t sub_23F618764()
{
  return MEMORY[0x24BE18BB0]();
}

uint64_t sub_23F618770()
{
  return MEMORY[0x24BE18BB8]();
}

uint64_t sub_23F61877C()
{
  return MEMORY[0x24BE18BC0]();
}

uint64_t sub_23F618788()
{
  return MEMORY[0x24BE18BD0]();
}

uint64_t sub_23F618794()
{
  return MEMORY[0x24BE18BD8]();
}

uint64_t sub_23F6187A0()
{
  return MEMORY[0x24BE18BE0]();
}

uint64_t sub_23F6187AC()
{
  return MEMORY[0x24BE3AEC8]();
}

uint64_t sub_23F6187B8()
{
  return MEMORY[0x24BE3AED8]();
}

uint64_t sub_23F6187C4()
{
  return MEMORY[0x24BE3AEE8]();
}

uint64_t sub_23F6187D0()
{
  return MEMORY[0x24BE3AF08]();
}

uint64_t sub_23F6187DC()
{
  return MEMORY[0x24BE3AF68]();
}

uint64_t sub_23F6187E8()
{
  return MEMORY[0x24BE3AF88]();
}

uint64_t sub_23F6187F4()
{
  return MEMORY[0x24BE58090]();
}

uint64_t sub_23F618800()
{
  return MEMORY[0x24BE58098]();
}

uint64_t sub_23F61880C()
{
  return MEMORY[0x24BE580A8]();
}

uint64_t sub_23F618818()
{
  return MEMORY[0x24BE580B0]();
}

uint64_t sub_23F618824()
{
  return MEMORY[0x24BE580B8]();
}

uint64_t sub_23F618830()
{
  return MEMORY[0x24BE580C0]();
}

uint64_t sub_23F61883C()
{
  return MEMORY[0x24BE580D0]();
}

uint64_t sub_23F618848()
{
  return MEMORY[0x24BE580D8]();
}

uint64_t sub_23F618854()
{
  return MEMORY[0x24BE580E0]();
}

uint64_t sub_23F618860()
{
  return MEMORY[0x24BE58130]();
}

uint64_t sub_23F61886C()
{
  return MEMORY[0x24BE58138]();
}

uint64_t sub_23F618878()
{
  return MEMORY[0x24BE58140]();
}

uint64_t sub_23F618884()
{
  return MEMORY[0x24BE58148]();
}

uint64_t sub_23F618890()
{
  return MEMORY[0x24BE58158]();
}

uint64_t sub_23F61889C()
{
  return MEMORY[0x24BE58160]();
}

uint64_t sub_23F6188A8()
{
  return MEMORY[0x24BE58168]();
}

uint64_t sub_23F6188B4()
{
  return MEMORY[0x24BE58170]();
}

uint64_t sub_23F6188C0()
{
  return MEMORY[0x24BE58178]();
}

uint64_t sub_23F6188CC()
{
  return MEMORY[0x24BE58188]();
}

uint64_t sub_23F6188D8()
{
  return MEMORY[0x24BE58198]();
}

uint64_t sub_23F6188E4()
{
  return MEMORY[0x24BE581A0]();
}

uint64_t sub_23F6188F0()
{
  return MEMORY[0x24BE581A8]();
}

uint64_t sub_23F6188FC()
{
  return MEMORY[0x24BE58248]();
}

uint64_t sub_23F618908()
{
  return MEMORY[0x24BE58260]();
}

uint64_t sub_23F618914()
{
  return MEMORY[0x24BE58348]();
}

uint64_t sub_23F618920()
{
  return MEMORY[0x24BE58350]();
}

uint64_t sub_23F61892C()
{
  return MEMORY[0x24BE58400]();
}

uint64_t sub_23F618938()
{
  return MEMORY[0x24BE58408]();
}

uint64_t sub_23F618944()
{
  return MEMORY[0x24BE58418]();
}

uint64_t sub_23F618950()
{
  return MEMORY[0x24BE58420]();
}

uint64_t sub_23F61895C()
{
  return MEMORY[0x24BE5BF00]();
}

uint64_t sub_23F618968()
{
  return MEMORY[0x24BE5BF08]();
}

uint64_t sub_23F618974()
{
  return MEMORY[0x24BE5BF10]();
}

uint64_t sub_23F618980()
{
  return MEMORY[0x24BE5C008]();
}

uint64_t sub_23F61898C()
{
  return MEMORY[0x24BE5C010]();
}

uint64_t sub_23F618998()
{
  return MEMORY[0x24BE5C018]();
}

uint64_t sub_23F6189A4()
{
  return MEMORY[0x24BE5C038]();
}

uint64_t sub_23F6189B0()
{
  return MEMORY[0x24BE5C048]();
}

uint64_t sub_23F6189BC()
{
  return MEMORY[0x24BE5C068]();
}

uint64_t sub_23F6189C8()
{
  return MEMORY[0x24BE5C078]();
}

uint64_t sub_23F6189D4()
{
  return MEMORY[0x24BE5C118]();
}

uint64_t sub_23F6189E0()
{
  return MEMORY[0x24BE5C120]();
}

uint64_t sub_23F6189EC()
{
  return MEMORY[0x24BE5C130]();
}

uint64_t sub_23F6189F8()
{
  return MEMORY[0x24BE5C148]();
}

uint64_t sub_23F618A04()
{
  return MEMORY[0x24BE5C160]();
}

uint64_t sub_23F618A10()
{
  return MEMORY[0x24BE5C1B0]();
}

uint64_t sub_23F618A1C()
{
  return MEMORY[0x24BE5C1D0]();
}

uint64_t sub_23F618A28()
{
  return MEMORY[0x24BE5C1E8]();
}

uint64_t sub_23F618A34()
{
  return MEMORY[0x24BE5C270]();
}

uint64_t sub_23F618A40()
{
  return MEMORY[0x24BE5C278]();
}

uint64_t sub_23F618A4C()
{
  return MEMORY[0x24BE5C2E8]();
}

uint64_t sub_23F618A58()
{
  return MEMORY[0x24BE5C2F0]();
}

uint64_t sub_23F618A64()
{
  return MEMORY[0x24BE5C300]();
}

uint64_t sub_23F618A70()
{
  return MEMORY[0x24BE5C310]();
}

uint64_t sub_23F618A7C()
{
  return MEMORY[0x24BE5C330]();
}

uint64_t sub_23F618A88()
{
  return MEMORY[0x24BE5C340]();
}

uint64_t sub_23F618A94()
{
  return MEMORY[0x24BE5C348]();
}

uint64_t sub_23F618AA0()
{
  return MEMORY[0x24BE5C350]();
}

uint64_t sub_23F618AAC()
{
  return MEMORY[0x24BE57100]();
}

uint64_t sub_23F618AB8()
{
  return MEMORY[0x24BE57108]();
}

uint64_t sub_23F618AC4()
{
  return MEMORY[0x24BE57140]();
}

uint64_t sub_23F618AD0()
{
  return MEMORY[0x24BE57150]();
}

uint64_t sub_23F618ADC()
{
  return MEMORY[0x24BE57318]();
}

uint64_t sub_23F618AE8()
{
  return MEMORY[0x24BE57320]();
}

uint64_t sub_23F618AF4()
{
  return MEMORY[0x24BE57358]();
}

uint64_t sub_23F618B00()
{
  return MEMORY[0x24BE57370]();
}

uint64_t sub_23F618B0C()
{
  return MEMORY[0x24BE57378]();
}

uint64_t sub_23F618B18()
{
  return MEMORY[0x24BE57380]();
}

uint64_t sub_23F618B24()
{
  return MEMORY[0x24BE57390]();
}

uint64_t sub_23F618B30()
{
  return MEMORY[0x24BE57398]();
}

uint64_t sub_23F618B3C()
{
  return MEMORY[0x24BE573A0]();
}

uint64_t sub_23F618B48()
{
  return MEMORY[0x24BE573A8]();
}

uint64_t sub_23F618B54()
{
  return MEMORY[0x24BE573B0]();
}

uint64_t sub_23F618B60()
{
  return MEMORY[0x24BE573B8]();
}

uint64_t sub_23F618B6C()
{
  return MEMORY[0x24BE573C0]();
}

uint64_t sub_23F618B78()
{
  return MEMORY[0x24BE573C8]();
}

uint64_t sub_23F618B84()
{
  return MEMORY[0x24BE574A0]();
}

uint64_t sub_23F618B90()
{
  return MEMORY[0x24BE574A8]();
}

uint64_t sub_23F618B9C()
{
  return MEMORY[0x24BE57538]();
}

uint64_t sub_23F618BA8()
{
  return MEMORY[0x24BE57560]();
}

uint64_t sub_23F618BB4()
{
  return MEMORY[0x24BE57570]();
}

uint64_t sub_23F618BC0()
{
  return MEMORY[0x24BE575A0]();
}

uint64_t sub_23F618BCC()
{
  return MEMORY[0x24BE575A8]();
}

uint64_t sub_23F618BD8()
{
  return MEMORY[0x24BE575B0]();
}

uint64_t sub_23F618BE4()
{
  return MEMORY[0x24BE575B8]();
}

uint64_t sub_23F618BF0()
{
  return MEMORY[0x24BE575C0]();
}

uint64_t sub_23F618BFC()
{
  return MEMORY[0x24BE575C8]();
}

uint64_t sub_23F618C08()
{
  return MEMORY[0x24BE575F0]();
}

uint64_t sub_23F618C14()
{
  return MEMORY[0x24BE57600]();
}

uint64_t sub_23F618C20()
{
  return MEMORY[0x24BE57608]();
}

uint64_t sub_23F618C2C()
{
  return MEMORY[0x24BE57638]();
}

uint64_t sub_23F618C38()
{
  return MEMORY[0x24BE57640]();
}

uint64_t sub_23F618C44()
{
  return MEMORY[0x24BE57648]();
}

uint64_t sub_23F618C50()
{
  return MEMORY[0x24BE57650]();
}

uint64_t sub_23F618C5C()
{
  return MEMORY[0x24BE57660]();
}

uint64_t sub_23F618C68()
{
  return MEMORY[0x24BE57670]();
}

uint64_t sub_23F618C74()
{
  return MEMORY[0x24BE576B8]();
}

uint64_t sub_23F618C80()
{
  return MEMORY[0x24BE576C0]();
}

uint64_t sub_23F618C8C()
{
  return MEMORY[0x24BE576C8]();
}

uint64_t sub_23F618C98()
{
  return MEMORY[0x24BE576E0]();
}

uint64_t sub_23F618CA4()
{
  return MEMORY[0x24BE576E8]();
}

uint64_t sub_23F618CB0()
{
  return MEMORY[0x24BE576F0]();
}

uint64_t sub_23F618CBC()
{
  return MEMORY[0x24BE576F8]();
}

uint64_t sub_23F618CC8()
{
  return MEMORY[0x24BE57760]();
}

uint64_t sub_23F618CD4()
{
  return MEMORY[0x24BE57770]();
}

uint64_t sub_23F618CE0()
{
  return MEMORY[0x24BE57778]();
}

uint64_t sub_23F618CEC()
{
  return MEMORY[0x24BE57788]();
}

uint64_t sub_23F618CF8()
{
  return MEMORY[0x24BE57790]();
}

uint64_t sub_23F618D04()
{
  return MEMORY[0x24BE57798]();
}

uint64_t sub_23F618D10()
{
  return MEMORY[0x24BE577A0]();
}

uint64_t sub_23F618D1C()
{
  return MEMORY[0x24BE577A8]();
}

uint64_t sub_23F618D28()
{
  return MEMORY[0x24BE577B0]();
}

uint64_t sub_23F618D34()
{
  return MEMORY[0x24BE577D8]();
}

uint64_t sub_23F618D40()
{
  return MEMORY[0x24BE577F0]();
}

uint64_t sub_23F618D4C()
{
  return MEMORY[0x24BE57870]();
}

uint64_t sub_23F618D58()
{
  return MEMORY[0x24BE57878]();
}

uint64_t sub_23F618D64()
{
  return MEMORY[0x24BE578A0]();
}

uint64_t sub_23F618D70()
{
  return MEMORY[0x24BE578A8]();
}

uint64_t sub_23F618D7C()
{
  return MEMORY[0x24BE578B0]();
}

uint64_t sub_23F618D88()
{
  return MEMORY[0x24BE578B8]();
}

uint64_t sub_23F618D94()
{
  return MEMORY[0x24BE57900]();
}

uint64_t sub_23F618DA0()
{
  return MEMORY[0x24BE57918]();
}

uint64_t sub_23F618DAC()
{
  return MEMORY[0x24BE57920]();
}

uint64_t sub_23F618DB8()
{
  return MEMORY[0x24BE57928]();
}

uint64_t sub_23F618DC4()
{
  return MEMORY[0x24BE57938]();
}

uint64_t sub_23F618DD0()
{
  return MEMORY[0x24BE57940]();
}

uint64_t sub_23F618DDC()
{
  return MEMORY[0x24BE579A0]();
}

uint64_t sub_23F618DE8()
{
  return MEMORY[0x24BE579A8]();
}

uint64_t sub_23F618DF4()
{
  return MEMORY[0x24BE579B0]();
}

uint64_t sub_23F618E00()
{
  return MEMORY[0x24BE579B8]();
}

uint64_t sub_23F618E0C()
{
  return MEMORY[0x24BE579C8]();
}

uint64_t sub_23F618E18()
{
  return MEMORY[0x24BE579F0]();
}

uint64_t sub_23F618E24()
{
  return MEMORY[0x24BE57A00]();
}

uint64_t sub_23F618E30()
{
  return MEMORY[0x24BE57A10]();
}

uint64_t sub_23F618E3C()
{
  return MEMORY[0x24BE57A20]();
}

uint64_t sub_23F618E48()
{
  return MEMORY[0x24BE57A28]();
}

uint64_t sub_23F618E54()
{
  return MEMORY[0x24BE57AF0]();
}

uint64_t sub_23F618E60()
{
  return MEMORY[0x24BE57B08]();
}

uint64_t sub_23F618E6C()
{
  return MEMORY[0x24BE57B18]();
}

uint64_t sub_23F618E78()
{
  return MEMORY[0x24BE57B20]();
}

uint64_t sub_23F618E84()
{
  return MEMORY[0x24BE57B68]();
}

uint64_t sub_23F618E90()
{
  return MEMORY[0x24BE57B88]();
}

uint64_t sub_23F618E9C()
{
  return MEMORY[0x24BE57BA0]();
}

uint64_t sub_23F618EA8()
{
  return MEMORY[0x24BE57BB8]();
}

uint64_t sub_23F618EB4()
{
  return MEMORY[0x24BE57BC8]();
}

uint64_t sub_23F618EC0()
{
  return MEMORY[0x24BE57BD0]();
}

uint64_t sub_23F618ECC()
{
  return MEMORY[0x24BE57BD8]();
}

uint64_t sub_23F618ED8()
{
  return MEMORY[0x24BE57C08]();
}

uint64_t sub_23F618EE4()
{
  return MEMORY[0x24BE57C38]();
}

uint64_t sub_23F618EF0()
{
  return MEMORY[0x24BE57C40]();
}

uint64_t sub_23F618EFC()
{
  return MEMORY[0x24BE57C58]();
}

uint64_t sub_23F618F08()
{
  return MEMORY[0x24BE57C68]();
}

uint64_t sub_23F618F14()
{
  return MEMORY[0x24BE57C70]();
}

uint64_t sub_23F618F20()
{
  return MEMORY[0x24BE57C78]();
}

uint64_t sub_23F618F2C()
{
  return MEMORY[0x24BE57C80]();
}

uint64_t sub_23F618F38()
{
  return MEMORY[0x24BE57C88]();
}

uint64_t sub_23F618F44()
{
  return MEMORY[0x24BE57C90]();
}

uint64_t sub_23F618F50()
{
  return MEMORY[0x24BE57C98]();
}

uint64_t sub_23F618F5C()
{
  return MEMORY[0x24BE57CA0]();
}

uint64_t sub_23F618F68()
{
  return MEMORY[0x24BE57CA8]();
}

uint64_t sub_23F618F74()
{
  return MEMORY[0x24BE57CB0]();
}

uint64_t sub_23F618F80()
{
  return MEMORY[0x24BE57CC0]();
}

uint64_t sub_23F618F8C()
{
  return MEMORY[0x24BE57CC8]();
}

uint64_t sub_23F618F98()
{
  return MEMORY[0x24BE57CD0]();
}

uint64_t sub_23F618FA4()
{
  return MEMORY[0x24BE57CD8]();
}

uint64_t sub_23F618FB0()
{
  return MEMORY[0x24BE57D00]();
}

uint64_t sub_23F618FBC()
{
  return MEMORY[0x24BE57D08]();
}

uint64_t sub_23F618FC8()
{
  return MEMORY[0x24BE57D18]();
}

uint64_t sub_23F618FD4()
{
  return MEMORY[0x24BE57D28]();
}

uint64_t sub_23F618FE0()
{
  return MEMORY[0x24BE57D30]();
}

uint64_t sub_23F618FEC()
{
  return MEMORY[0x24BE57D40]();
}

uint64_t sub_23F618FF8()
{
  return MEMORY[0x24BE57DB0]();
}

uint64_t sub_23F619004()
{
  return MEMORY[0x24BE57DB8]();
}

uint64_t sub_23F619010()
{
  return MEMORY[0x24BE57DD8]();
}

uint64_t sub_23F61901C()
{
  return MEMORY[0x24BE57DE0]();
}

uint64_t sub_23F619028()
{
  return MEMORY[0x24BE57DE8]();
}

uint64_t sub_23F619034()
{
  return MEMORY[0x24BE57DF0]();
}

uint64_t sub_23F619040()
{
  return MEMORY[0x24BE57DF8]();
}

uint64_t sub_23F61904C()
{
  return MEMORY[0x24BE57E00]();
}

uint64_t sub_23F619058()
{
  return MEMORY[0x24BE57E08]();
}

uint64_t sub_23F619064()
{
  return MEMORY[0x24BE57E10]();
}

uint64_t sub_23F619070()
{
  return MEMORY[0x24BE57E50]();
}

uint64_t sub_23F61907C()
{
  return MEMORY[0x24BE57E58]();
}

uint64_t sub_23F619088()
{
  return MEMORY[0x24BE57E60]();
}

uint64_t sub_23F619094()
{
  return MEMORY[0x24BE57E68]();
}

uint64_t sub_23F6190A0()
{
  return MEMORY[0x24BE57E78]();
}

uint64_t sub_23F6190AC()
{
  return MEMORY[0x24BE57E80]();
}

uint64_t sub_23F6190B8()
{
  return MEMORY[0x24BE57E88]();
}

uint64_t sub_23F6190C4()
{
  return MEMORY[0x24BE57E90]();
}

uint64_t sub_23F6190D0()
{
  return MEMORY[0x24BE57EA0]();
}

uint64_t sub_23F6190DC()
{
  return MEMORY[0x24BE57EA8]();
}

uint64_t sub_23F6190E8()
{
  return MEMORY[0x24BE57EC0]();
}

uint64_t sub_23F6190F4()
{
  return MEMORY[0x24BE57EC8]();
}

uint64_t sub_23F619100()
{
  return MEMORY[0x24BE57ED0]();
}

uint64_t sub_23F61910C()
{
  return MEMORY[0x24BE57EE0]();
}

uint64_t sub_23F619118()
{
  return MEMORY[0x24BE57EE8]();
}

uint64_t sub_23F619124()
{
  return MEMORY[0x24BE57EF0]();
}

uint64_t sub_23F619130()
{
  return MEMORY[0x24BE57F00]();
}

uint64_t sub_23F61913C()
{
  return MEMORY[0x24BE57F08]();
}

uint64_t sub_23F619148()
{
  return MEMORY[0x24BE57F18]();
}

uint64_t sub_23F619154()
{
  return MEMORY[0x24BE57F38]();
}

uint64_t sub_23F619160()
{
  return MEMORY[0x24BE57F40]();
}

uint64_t sub_23F61916C()
{
  return MEMORY[0x24BE79730]();
}

uint64_t sub_23F619178()
{
  return MEMORY[0x24BE797F8]();
}

uint64_t sub_23F619184()
{
  return MEMORY[0x24BE79830]();
}

uint64_t sub_23F619190()
{
  return MEMORY[0x24BEE6190]();
}

uint64_t sub_23F61919C()
{
  return MEMORY[0x24BEE6368]();
}

uint64_t sub_23F6191A8()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t sub_23F6191B4()
{
  return MEMORY[0x24BEE6410]();
}

uint64_t sub_23F6191C0()
{
  return MEMORY[0x24BE54010]();
}

uint64_t sub_23F6191CC()
{
  return MEMORY[0x24BE54018]();
}

uint64_t sub_23F6191D8()
{
  return MEMORY[0x24BE54020]();
}

uint64_t sub_23F6191E4()
{
  return MEMORY[0x24BE54028]();
}

uint64_t sub_23F6191F0()
{
  return MEMORY[0x24BE54040]();
}

uint64_t sub_23F6191FC()
{
  return MEMORY[0x24BE54048]();
}

uint64_t sub_23F619208()
{
  return MEMORY[0x24BE54168]();
}

uint64_t sub_23F619214()
{
  return MEMORY[0x24BE54170]();
}

uint64_t sub_23F619220()
{
  return MEMORY[0x24BE54180]();
}

uint64_t sub_23F61922C()
{
  return MEMORY[0x24BE54188]();
}

uint64_t sub_23F619238()
{
  return MEMORY[0x24BE54198]();
}

uint64_t sub_23F619244()
{
  return MEMORY[0x24BE541C0]();
}

uint64_t sub_23F619250()
{
  return MEMORY[0x24BE541D0]();
}

uint64_t sub_23F61925C()
{
  return MEMORY[0x24BE541D8]();
}

uint64_t sub_23F619268()
{
  return MEMORY[0x24BE54430]();
}

uint64_t sub_23F619274()
{
  return MEMORY[0x24BE54450]();
}

uint64_t sub_23F619280()
{
  return MEMORY[0x24BE54460]();
}

uint64_t sub_23F61928C()
{
  return MEMORY[0x24BE3C620]();
}

uint64_t sub_23F619298()
{
  return MEMORY[0x24BE3C668]();
}

uint64_t sub_23F6192A4()
{
  return MEMORY[0x24BE3C680]();
}

uint64_t sub_23F6192B0()
{
  return MEMORY[0x24BE587B8]();
}

uint64_t sub_23F6192BC()
{
  return MEMORY[0x24BE587C8]();
}

uint64_t sub_23F6192C8()
{
  return MEMORY[0x24BE587D8]();
}

uint64_t sub_23F6192D4()
{
  return MEMORY[0x24BE587E0]();
}

uint64_t sub_23F6192E0()
{
  return MEMORY[0x24BE587E8]();
}

uint64_t sub_23F6192EC()
{
  return MEMORY[0x24BE587F8]();
}

uint64_t sub_23F6192F8()
{
  return MEMORY[0x24BE58808]();
}

uint64_t sub_23F619304()
{
  return MEMORY[0x24BE58810]();
}

uint64_t sub_23F619310()
{
  return MEMORY[0x24BE58818]();
}

uint64_t sub_23F61931C()
{
  return MEMORY[0x24BE58D78]();
}

uint64_t sub_23F619328()
{
  return MEMORY[0x24BE58D80]();
}

uint64_t sub_23F619334()
{
  return MEMORY[0x24BE58D88]();
}

uint64_t sub_23F619340()
{
  return MEMORY[0x24BE58DA0]();
}

uint64_t sub_23F61934C()
{
  return MEMORY[0x24BE58DB0]();
}

uint64_t sub_23F619358()
{
  return MEMORY[0x24BE58DB8]();
}

uint64_t sub_23F619364()
{
  return MEMORY[0x24BE58DC0]();
}

uint64_t sub_23F619370()
{
  return MEMORY[0x24BE58DC8]();
}

uint64_t sub_23F61937C()
{
  return MEMORY[0x24BE58DD8]();
}

uint64_t sub_23F619388()
{
  return MEMORY[0x24BE58DE0]();
}

uint64_t sub_23F619394()
{
  return MEMORY[0x24BE58DE8]();
}

uint64_t sub_23F6193A0()
{
  return MEMORY[0x24BE58DF0]();
}

uint64_t sub_23F6193AC()
{
  return MEMORY[0x24BE58E00]();
}

uint64_t sub_23F6193B8()
{
  return MEMORY[0x24BE58E18]();
}

uint64_t sub_23F6193C4()
{
  return MEMORY[0x24BE58E28]();
}

uint64_t sub_23F6193D0()
{
  return MEMORY[0x24BE58E30]();
}

uint64_t sub_23F6193DC()
{
  return MEMORY[0x24BE58E38]();
}

uint64_t sub_23F6193E8()
{
  return MEMORY[0x24BE58E60]();
}

uint64_t sub_23F6193F4()
{
  return MEMORY[0x24BE58E70]();
}

uint64_t sub_23F619400()
{
  return MEMORY[0x24BE58E78]();
}

uint64_t sub_23F61940C()
{
  return MEMORY[0x24BE58E80]();
}

uint64_t sub_23F619418()
{
  return MEMORY[0x24BE58E88]();
}

uint64_t sub_23F619424()
{
  return MEMORY[0x24BE58EA0]();
}

uint64_t sub_23F619430()
{
  return MEMORY[0x24BE58EB0]();
}

uint64_t sub_23F61943C()
{
  return MEMORY[0x24BE58EB8]();
}

uint64_t sub_23F619448()
{
  return MEMORY[0x24BE58EC0]();
}

uint64_t sub_23F619454()
{
  return MEMORY[0x24BE58EC8]();
}

uint64_t sub_23F619460()
{
  return MEMORY[0x24BE58ED0]();
}

uint64_t sub_23F61946C()
{
  return MEMORY[0x24BE58ED8]();
}

uint64_t sub_23F619478()
{
  return MEMORY[0x24BE58EE8]();
}

uint64_t sub_23F619484()
{
  return MEMORY[0x24BE58EF0]();
}

uint64_t sub_23F619490()
{
  return MEMORY[0x24BE58EF8]();
}

uint64_t sub_23F61949C()
{
  return MEMORY[0x24BE58F00]();
}

uint64_t sub_23F6194A8()
{
  return MEMORY[0x24BE58F08]();
}

uint64_t sub_23F6194B4()
{
  return MEMORY[0x24BE58F18]();
}

uint64_t sub_23F6194C0()
{
  return MEMORY[0x24BE58F20]();
}

uint64_t sub_23F6194CC()
{
  return MEMORY[0x24BE58F28]();
}

uint64_t sub_23F6194D8()
{
  return MEMORY[0x24BE58F30]();
}

uint64_t sub_23F6194E4()
{
  return MEMORY[0x24BE58F38]();
}

uint64_t sub_23F6194F0()
{
  return MEMORY[0x24BE58F40]();
}

uint64_t sub_23F6194FC()
{
  return MEMORY[0x24BE58F48]();
}

uint64_t sub_23F619508()
{
  return MEMORY[0x24BE58F50]();
}

uint64_t sub_23F619514()
{
  return MEMORY[0x24BE58F58]();
}

uint64_t sub_23F619520()
{
  return MEMORY[0x24BE58F68]();
}

uint64_t sub_23F61952C()
{
  return MEMORY[0x24BE58F70]();
}

uint64_t sub_23F619538()
{
  return MEMORY[0x24BE58F78]();
}

uint64_t sub_23F619544()
{
  return MEMORY[0x24BE58F80]();
}

uint64_t sub_23F619550()
{
  return MEMORY[0x24BE58F88]();
}

uint64_t sub_23F61955C()
{
  return MEMORY[0x24BE58F90]();
}

uint64_t sub_23F619568()
{
  return MEMORY[0x24BE58F98]();
}

uint64_t sub_23F619574()
{
  return MEMORY[0x24BE58FA8]();
}

uint64_t sub_23F619580()
{
  return MEMORY[0x24BE58FB0]();
}

uint64_t sub_23F61958C()
{
  return MEMORY[0x24BE58FB8]();
}

uint64_t sub_23F619598()
{
  return MEMORY[0x24BE58FC0]();
}

uint64_t sub_23F6195A4()
{
  return MEMORY[0x24BE58FC8]();
}

uint64_t sub_23F6195B0()
{
  return MEMORY[0x24BE58FD0]();
}

uint64_t sub_23F6195BC()
{
  return MEMORY[0x24BE58FD8]();
}

uint64_t sub_23F6195C8()
{
  return MEMORY[0x24BE58FE0]();
}

uint64_t sub_23F6195D4()
{
  return MEMORY[0x24BE58FF8]();
}

uint64_t sub_23F6195E0()
{
  return MEMORY[0x24BE59000]();
}

uint64_t sub_23F6195EC()
{
  return MEMORY[0x24BE59008]();
}

uint64_t sub_23F6195F8()
{
  return MEMORY[0x24BE59010]();
}

uint64_t sub_23F619604()
{
  return MEMORY[0x24BE59038]();
}

uint64_t sub_23F619610()
{
  return MEMORY[0x24BE59058]();
}

uint64_t sub_23F61961C()
{
  return MEMORY[0x24BE59060]();
}

uint64_t sub_23F619628()
{
  return MEMORY[0x24BE59068]();
}

uint64_t sub_23F619634()
{
  return MEMORY[0x24BE59070]();
}

uint64_t sub_23F619640()
{
  return MEMORY[0x24BE59078]();
}

uint64_t sub_23F61964C()
{
  return MEMORY[0x24BE59080]();
}

uint64_t sub_23F619658()
{
  return MEMORY[0x24BE59088]();
}

uint64_t sub_23F619664()
{
  return MEMORY[0x24BE59090]();
}

uint64_t sub_23F619670()
{
  return MEMORY[0x24BE590A0]();
}

uint64_t sub_23F61967C()
{
  return MEMORY[0x24BE590A8]();
}

uint64_t sub_23F619688()
{
  return MEMORY[0x24BE590B0]();
}

uint64_t sub_23F619694()
{
  return MEMORY[0x24BE590B8]();
}

uint64_t sub_23F6196A0()
{
  return MEMORY[0x24BE590C8]();
}

uint64_t sub_23F6196AC()
{
  return MEMORY[0x24BE590D0]();
}

uint64_t sub_23F6196B8()
{
  return MEMORY[0x24BE590D8]();
}

uint64_t sub_23F6196C4()
{
  return MEMORY[0x24BE590E0]();
}

uint64_t sub_23F6196D0()
{
  return MEMORY[0x24BE590E8]();
}

uint64_t sub_23F6196DC()
{
  return MEMORY[0x24BE590F8]();
}

uint64_t sub_23F6196E8()
{
  return MEMORY[0x24BE59100]();
}

uint64_t sub_23F6196F4()
{
  return MEMORY[0x24BE59108]();
}

uint64_t sub_23F619700()
{
  return MEMORY[0x24BE59110]();
}

uint64_t sub_23F61970C()
{
  return MEMORY[0x24BE59120]();
}

uint64_t sub_23F619718()
{
  return MEMORY[0x24BE59128]();
}

uint64_t sub_23F619724()
{
  return MEMORY[0x24BE59130]();
}

uint64_t sub_23F619730()
{
  return MEMORY[0x24BE59138]();
}

uint64_t sub_23F61973C()
{
  return MEMORY[0x24BE59148]();
}

uint64_t sub_23F619748()
{
  return MEMORY[0x24BE59150]();
}

uint64_t sub_23F619754()
{
  return MEMORY[0x24BE59158]();
}

uint64_t sub_23F619760()
{
  return MEMORY[0x24BE59160]();
}

uint64_t sub_23F61976C()
{
  return MEMORY[0x24BE59168]();
}

uint64_t sub_23F619778()
{
  return MEMORY[0x24BE59178]();
}

uint64_t sub_23F619784()
{
  return MEMORY[0x24BE59180]();
}

uint64_t sub_23F619790()
{
  return MEMORY[0x24BE59188]();
}

uint64_t sub_23F61979C()
{
  return MEMORY[0x24BE59190]();
}

uint64_t sub_23F6197A8()
{
  return MEMORY[0x24BE591A0]();
}

uint64_t sub_23F6197B4()
{
  return MEMORY[0x24BE591A8]();
}

uint64_t sub_23F6197C0()
{
  return MEMORY[0x24BE591B0]();
}

uint64_t sub_23F6197CC()
{
  return MEMORY[0x24BE591C0]();
}

uint64_t sub_23F6197D8()
{
  return MEMORY[0x24BE591C8]();
}

uint64_t sub_23F6197E4()
{
  return MEMORY[0x24BE591D0]();
}

uint64_t sub_23F6197F0()
{
  return MEMORY[0x24BE591D8]();
}

uint64_t sub_23F6197FC()
{
  return MEMORY[0x24BE591E8]();
}

uint64_t sub_23F619808()
{
  return MEMORY[0x24BE591F0]();
}

uint64_t sub_23F619814()
{
  return MEMORY[0x24BE591F8]();
}

uint64_t sub_23F619820()
{
  return MEMORY[0x24BE59200]();
}

uint64_t sub_23F61982C()
{
  return MEMORY[0x24BE59208]();
}

uint64_t sub_23F619838()
{
  return MEMORY[0x24BE59210]();
}

uint64_t sub_23F619844()
{
  return MEMORY[0x24BE59220]();
}

uint64_t sub_23F619850()
{
  return MEMORY[0x24BE59228]();
}

uint64_t sub_23F61985C()
{
  return MEMORY[0x24BE59230]();
}

uint64_t sub_23F619868()
{
  return MEMORY[0x24BE59238]();
}

uint64_t sub_23F619874()
{
  return MEMORY[0x24BE59248]();
}

uint64_t sub_23F619880()
{
  return MEMORY[0x24BE59250]();
}

uint64_t sub_23F61988C()
{
  return MEMORY[0x24BE59258]();
}

uint64_t sub_23F619898()
{
  return MEMORY[0x24BE59260]();
}

uint64_t sub_23F6198A4()
{
  return MEMORY[0x24BE59270]();
}

uint64_t sub_23F6198B0()
{
  return MEMORY[0x24BE59278]();
}

uint64_t sub_23F6198BC()
{
  return MEMORY[0x24BE59280]();
}

uint64_t sub_23F6198C8()
{
  return MEMORY[0x24BE59288]();
}

uint64_t sub_23F6198D4()
{
  return MEMORY[0x24BE59298]();
}

uint64_t sub_23F6198E0()
{
  return MEMORY[0x24BE592A0]();
}

uint64_t sub_23F6198EC()
{
  return MEMORY[0x24BE592A8]();
}

uint64_t sub_23F6198F8()
{
  return MEMORY[0x24BE592B0]();
}

uint64_t sub_23F619904()
{
  return MEMORY[0x24BE592B8]();
}

uint64_t sub_23F619910()
{
  return MEMORY[0x24BE592C0]();
}

uint64_t sub_23F61991C()
{
  return MEMORY[0x24BE592C8]();
}

uint64_t sub_23F619928()
{
  return MEMORY[0x24BE592D0]();
}

uint64_t sub_23F619934()
{
  return MEMORY[0x24BE59308]();
}

uint64_t sub_23F619940()
{
  return MEMORY[0x24BE59318]();
}

uint64_t sub_23F61994C()
{
  return MEMORY[0x24BE59360]();
}

uint64_t sub_23F619958()
{
  return MEMORY[0x24BE59378]();
}

uint64_t sub_23F619964()
{
  return MEMORY[0x24BE59380]();
}

uint64_t sub_23F619970()
{
  return MEMORY[0x24BE59388]();
}

uint64_t sub_23F61997C()
{
  return MEMORY[0x24BE59390]();
}

uint64_t sub_23F619988()
{
  return MEMORY[0x24BE59398]();
}

uint64_t sub_23F619994()
{
  return MEMORY[0x24BE593B0]();
}

uint64_t sub_23F6199A0()
{
  return MEMORY[0x24BE593B8]();
}

uint64_t sub_23F6199AC()
{
  return MEMORY[0x24BE593C0]();
}

uint64_t sub_23F6199B8()
{
  return MEMORY[0x24BE593C8]();
}

uint64_t sub_23F6199C4()
{
  return MEMORY[0x24BE593D0]();
}

uint64_t sub_23F6199D0()
{
  return MEMORY[0x24BE593E0]();
}

uint64_t sub_23F6199DC()
{
  return MEMORY[0x24BE593E8]();
}

uint64_t sub_23F6199E8()
{
  return MEMORY[0x24BE593F0]();
}

uint64_t sub_23F6199F4()
{
  return MEMORY[0x24BE593F8]();
}

uint64_t sub_23F619A00()
{
  return MEMORY[0x24BE59400]();
}

uint64_t sub_23F619A0C()
{
  return MEMORY[0x24BE59408]();
}

uint64_t sub_23F619A18()
{
  return MEMORY[0x24BE59418]();
}

uint64_t sub_23F619A24()
{
  return MEMORY[0x24BE59420]();
}

uint64_t sub_23F619A30()
{
  return MEMORY[0x24BE59428]();
}

uint64_t sub_23F619A3C()
{
  return MEMORY[0x24BE59430]();
}

uint64_t sub_23F619A48()
{
  return MEMORY[0x24BE59438]();
}

uint64_t sub_23F619A54()
{
  return MEMORY[0x24BE59448]();
}

uint64_t sub_23F619A60()
{
  return MEMORY[0x24BE59450]();
}

uint64_t sub_23F619A6C()
{
  return MEMORY[0x24BE59458]();
}

uint64_t sub_23F619A78()
{
  return MEMORY[0x24BE59460]();
}

uint64_t sub_23F619A84()
{
  return MEMORY[0x24BE59468]();
}

uint64_t sub_23F619A90()
{
  return MEMORY[0x24BE59470]();
}

uint64_t sub_23F619A9C()
{
  return MEMORY[0x24BE59478]();
}

uint64_t sub_23F619AA8()
{
  return MEMORY[0x24BE59480]();
}

uint64_t sub_23F619AB4()
{
  return MEMORY[0x24BE594A0]();
}

uint64_t sub_23F619AC0()
{
  return MEMORY[0x24BE594B0]();
}

uint64_t sub_23F619ACC()
{
  return MEMORY[0x24BE594B8]();
}

uint64_t sub_23F619AD8()
{
  return MEMORY[0x24BE594C0]();
}

uint64_t sub_23F619AE4()
{
  return MEMORY[0x24BE594C8]();
}

uint64_t sub_23F619AF0()
{
  return MEMORY[0x24BE594D0]();
}

uint64_t sub_23F619AFC()
{
  return MEMORY[0x24BE594D8]();
}

uint64_t sub_23F619B08()
{
  return MEMORY[0x24BE594E0]();
}

uint64_t sub_23F619B14()
{
  return MEMORY[0x24BE594E8]();
}

uint64_t sub_23F619B20()
{
  return MEMORY[0x24BE594F0]();
}

uint64_t sub_23F619B2C()
{
  return MEMORY[0x24BE595D0]();
}

uint64_t sub_23F619B38()
{
  return MEMORY[0x24BE595E0]();
}

uint64_t sub_23F619B44()
{
  return MEMORY[0x24BE595E8]();
}

uint64_t sub_23F619B50()
{
  return MEMORY[0x24BE595F0]();
}

uint64_t sub_23F619B5C()
{
  return MEMORY[0x24BE59600]();
}

uint64_t sub_23F619B68()
{
  return MEMORY[0x24BE59608]();
}

uint64_t sub_23F619B74()
{
  return MEMORY[0x24BE59610]();
}

uint64_t sub_23F619B80()
{
  return MEMORY[0x24BE59620]();
}

uint64_t sub_23F619B8C()
{
  return MEMORY[0x24BE59628]();
}

uint64_t sub_23F619B98()
{
  return MEMORY[0x24BE59630]();
}

uint64_t sub_23F619BA4()
{
  return MEMORY[0x24BE59638]();
}

uint64_t sub_23F619BB0()
{
  return MEMORY[0x24BE59640]();
}

uint64_t sub_23F619BBC()
{
  return MEMORY[0x24BE59650]();
}

uint64_t sub_23F619BC8()
{
  return MEMORY[0x24BE59658]();
}

uint64_t sub_23F619BD4()
{
  return MEMORY[0x24BE59660]();
}

uint64_t sub_23F619BE0()
{
  return MEMORY[0x24BE59670]();
}

uint64_t sub_23F619BEC()
{
  return MEMORY[0x24BE59678]();
}

uint64_t sub_23F619BF8()
{
  return MEMORY[0x24BE59680]();
}

uint64_t sub_23F619C04()
{
  return MEMORY[0x24BE59688]();
}

uint64_t sub_23F619C10()
{
  return MEMORY[0x24BE59690]();
}

uint64_t sub_23F619C1C()
{
  return MEMORY[0x24BE596A0]();
}

uint64_t sub_23F619C28()
{
  return MEMORY[0x24BE596A8]();
}

uint64_t sub_23F619C34()
{
  return MEMORY[0x24BE596B0]();
}

uint64_t sub_23F619C40()
{
  return MEMORY[0x24BE596B8]();
}

uint64_t sub_23F619C4C()
{
  return MEMORY[0x24BE596C0]();
}

uint64_t sub_23F619C58()
{
  return MEMORY[0x24BE596C8]();
}

uint64_t sub_23F619C64()
{
  return MEMORY[0x24BE596D0]();
}

uint64_t sub_23F619C70()
{
  return MEMORY[0x24BE596D8]();
}

uint64_t sub_23F619C7C()
{
  return MEMORY[0x24BE596E0]();
}

uint64_t sub_23F619C88()
{
  return MEMORY[0x24BE596F0]();
}

uint64_t sub_23F619C94()
{
  return MEMORY[0x24BE596F8]();
}

uint64_t sub_23F619CA0()
{
  return MEMORY[0x24BE59700]();
}

uint64_t sub_23F619CAC()
{
  return MEMORY[0x24BE59710]();
}

uint64_t sub_23F619CB8()
{
  return MEMORY[0x24BE59720]();
}

uint64_t sub_23F619CC4()
{
  return MEMORY[0x24BE59728]();
}

uint64_t sub_23F619CD0()
{
  return MEMORY[0x24BE59730]();
}

uint64_t sub_23F619CDC()
{
  return MEMORY[0x24BE59738]();
}

uint64_t sub_23F619CE8()
{
  return MEMORY[0x24BE59748]();
}

uint64_t sub_23F619CF4()
{
  return MEMORY[0x24BE59750]();
}

uint64_t sub_23F619D00()
{
  return MEMORY[0x24BE597F0]();
}

uint64_t sub_23F619D0C()
{
  return MEMORY[0x24BE59808]();
}

uint64_t sub_23F619D18()
{
  return MEMORY[0x24BE59820]();
}

uint64_t sub_23F619D24()
{
  return MEMORY[0x24BE599F8]();
}

uint64_t sub_23F619D30()
{
  return MEMORY[0x24BE59A88]();
}

uint64_t sub_23F619D3C()
{
  return MEMORY[0x24BE59C10]();
}

uint64_t sub_23F619D48()
{
  return MEMORY[0x24BE59C38]();
}

uint64_t sub_23F619D54()
{
  return MEMORY[0x24BE5B140]();
}

uint64_t sub_23F619D60()
{
  return MEMORY[0x24BE5B150]();
}

uint64_t sub_23F619D6C()
{
  return MEMORY[0x24BE5B158]();
}

uint64_t sub_23F619D78()
{
  return MEMORY[0x24BE5B168]();
}

uint64_t sub_23F619D84()
{
  return MEMORY[0x24BE5B170]();
}

uint64_t sub_23F619D90()
{
  return MEMORY[0x24BE5B178]();
}

uint64_t sub_23F619D9C()
{
  return MEMORY[0x24BE5B180]();
}

uint64_t sub_23F619DA8()
{
  return MEMORY[0x24BE5B188]();
}

uint64_t sub_23F619DB4()
{
  return MEMORY[0x24BE5B1B8]();
}

uint64_t sub_23F619DC0()
{
  return MEMORY[0x24BE5B1C8]();
}

uint64_t sub_23F619DCC()
{
  return MEMORY[0x24BE3B490]();
}

uint64_t sub_23F619DD8()
{
  return MEMORY[0x24BE3B6C8]();
}

uint64_t sub_23F619DE4()
{
  return MEMORY[0x24BE3B6F0]();
}

uint64_t sub_23F619DF0()
{
  return MEMORY[0x24BE3B708]();
}

uint64_t sub_23F619DFC()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t sub_23F619E08()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_23F619E14()
{
  return MEMORY[0x24BEE7748]();
}

uint64_t sub_23F619E20()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_23F619E2C()
{
  return MEMORY[0x24BEE7790]();
}

uint64_t sub_23F619E38()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_23F619E44()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_23F619E50()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t sub_23F619E5C()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t sub_23F619E68()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t sub_23F619E74()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t sub_23F619E80()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t sub_23F619E8C()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23F619E98()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23F619EA4()
{
  return MEMORY[0x24BE54A90]();
}

uint64_t sub_23F619EB0()
{
  return MEMORY[0x24BE54A98]();
}

uint64_t sub_23F619EBC()
{
  return MEMORY[0x24BE54AA0]();
}

uint64_t sub_23F619EC8()
{
  return MEMORY[0x24BE54AA8]();
}

uint64_t sub_23F619ED4()
{
  return MEMORY[0x24BE54AB0]();
}

uint64_t sub_23F619EE0()
{
  return MEMORY[0x24BE54AB8]();
}

uint64_t sub_23F619EEC()
{
  return MEMORY[0x24BE54AF0]();
}

uint64_t sub_23F619EF8()
{
  return MEMORY[0x24BE54B00]();
}

uint64_t sub_23F619F04()
{
  return MEMORY[0x24BE54B70]();
}

uint64_t sub_23F619F10()
{
  return MEMORY[0x24BE54BB0]();
}

uint64_t sub_23F619F1C()
{
  return MEMORY[0x24BE54BC0]();
}

uint64_t sub_23F619F28()
{
  return MEMORY[0x24BE54BC8]();
}

uint64_t sub_23F619F34()
{
  return MEMORY[0x24BE54BE0]();
}

uint64_t sub_23F619F40()
{
  return MEMORY[0x24BE54BE8]();
}

uint64_t sub_23F619F4C()
{
  return MEMORY[0x24BE54BF0]();
}

uint64_t sub_23F619F58()
{
  return MEMORY[0x24BE54C08]();
}

uint64_t sub_23F619F64()
{
  return MEMORY[0x24BE54C10]();
}

uint64_t sub_23F619F70()
{
  return MEMORY[0x24BE54C18]();
}

uint64_t sub_23F619F7C()
{
  return MEMORY[0x24BE54C30]();
}

uint64_t sub_23F619F88()
{
  return MEMORY[0x24BE54C38]();
}

uint64_t sub_23F619F94()
{
  return MEMORY[0x24BE54C40]();
}

uint64_t sub_23F619FA0()
{
  return MEMORY[0x24BE54C90]();
}

uint64_t sub_23F619FAC()
{
  return MEMORY[0x24BE54D48]();
}

uint64_t sub_23F619FB8()
{
  return MEMORY[0x24BE54D60]();
}

uint64_t sub_23F619FC4()
{
  return MEMORY[0x24BE54D78]();
}

uint64_t sub_23F619FD0()
{
  return MEMORY[0x24BE54D80]();
}

uint64_t sub_23F619FDC()
{
  return MEMORY[0x24BE54DB0]();
}

uint64_t sub_23F619FE8()
{
  return MEMORY[0x24BE54DB8]();
}

uint64_t sub_23F619FF4()
{
  return MEMORY[0x24BE54DC8]();
}

uint64_t sub_23F61A000()
{
  return MEMORY[0x24BE54DD8]();
}

uint64_t sub_23F61A00C()
{
  return MEMORY[0x24BE54DE0]();
}

uint64_t sub_23F61A018()
{
  return MEMORY[0x24BE54DE8]();
}

uint64_t sub_23F61A024()
{
  return MEMORY[0x24BE54DF0]();
}

uint64_t sub_23F61A030()
{
  return MEMORY[0x24BE54DF8]();
}

uint64_t sub_23F61A03C()
{
  return MEMORY[0x24BE54E00]();
}

uint64_t sub_23F61A048()
{
  return MEMORY[0x24BE54E10]();
}

uint64_t sub_23F61A054()
{
  return MEMORY[0x24BE54E20]();
}

uint64_t sub_23F61A060()
{
  return MEMORY[0x24BE54E28]();
}

uint64_t sub_23F61A06C()
{
  return MEMORY[0x24BE54E48]();
}

uint64_t sub_23F61A078()
{
  return MEMORY[0x24BE54E68]();
}

uint64_t sub_23F61A084()
{
  return MEMORY[0x24BE54E80]();
}

uint64_t sub_23F61A090()
{
  return MEMORY[0x24BE54E88]();
}

uint64_t sub_23F61A09C()
{
  return MEMORY[0x24BE54E90]();
}

uint64_t sub_23F61A0A8()
{
  return MEMORY[0x24BE54EC8]();
}

uint64_t sub_23F61A0B4()
{
  return MEMORY[0x24BE54ED0]();
}

uint64_t sub_23F61A0C0()
{
  return MEMORY[0x24BE54EF8]();
}

uint64_t sub_23F61A0CC()
{
  return MEMORY[0x24BE54F00]();
}

uint64_t sub_23F61A0D8()
{
  return MEMORY[0x24BE54F10]();
}

uint64_t sub_23F61A0E4()
{
  return MEMORY[0x24BE54F78]();
}

uint64_t sub_23F61A0F0()
{
  return MEMORY[0x24BE54F88]();
}

uint64_t sub_23F61A0FC()
{
  return MEMORY[0x24BE54FC0]();
}

uint64_t sub_23F61A108()
{
  return MEMORY[0x24BE54FC8]();
}

uint64_t sub_23F61A114()
{
  return MEMORY[0x24BE54FD0]();
}

uint64_t sub_23F61A120()
{
  return MEMORY[0x24BE54FD8]();
}

uint64_t sub_23F61A12C()
{
  return MEMORY[0x24BE54FE0]();
}

uint64_t sub_23F61A138()
{
  return MEMORY[0x24BE54FE8]();
}

uint64_t sub_23F61A144()
{
  return MEMORY[0x24BE54FF8]();
}

uint64_t sub_23F61A150()
{
  return MEMORY[0x24BE55000]();
}

uint64_t sub_23F61A15C()
{
  return MEMORY[0x24BE55008]();
}

uint64_t sub_23F61A168()
{
  return MEMORY[0x24BE55018]();
}

uint64_t sub_23F61A174()
{
  return MEMORY[0x24BE55020]();
}

uint64_t sub_23F61A180()
{
  return MEMORY[0x24BE55028]();
}

uint64_t sub_23F61A18C()
{
  return MEMORY[0x24BE55040]();
}

uint64_t sub_23F61A198()
{
  return MEMORY[0x24BE55048]();
}

uint64_t sub_23F61A1A4()
{
  return MEMORY[0x24BE55050]();
}

uint64_t sub_23F61A1B0()
{
  return MEMORY[0x24BE55058]();
}

uint64_t sub_23F61A1BC()
{
  return MEMORY[0x24BE55060]();
}

uint64_t sub_23F61A1C8()
{
  return MEMORY[0x24BE55068]();
}

uint64_t sub_23F61A1D4()
{
  return MEMORY[0x24BE55070]();
}

uint64_t sub_23F61A1E0()
{
  return MEMORY[0x24BE550C8]();
}

uint64_t sub_23F61A1EC()
{
  return MEMORY[0x24BE55188]();
}

uint64_t sub_23F61A1F8()
{
  return MEMORY[0x24BE55190]();
}

uint64_t sub_23F61A204()
{
  return MEMORY[0x24BE55198]();
}

uint64_t sub_23F61A210()
{
  return MEMORY[0x24BE551A8]();
}

uint64_t sub_23F61A21C()
{
  return MEMORY[0x24BE551C0]();
}

uint64_t sub_23F61A228()
{
  return MEMORY[0x24BE551D8]();
}

uint64_t sub_23F61A234()
{
  return MEMORY[0x24BE551E0]();
}

uint64_t sub_23F61A240()
{
  return MEMORY[0x24BE551E8]();
}

uint64_t sub_23F61A24C()
{
  return MEMORY[0x24BE551F0]();
}

uint64_t sub_23F61A258()
{
  return MEMORY[0x24BE55248]();
}

uint64_t sub_23F61A264()
{
  return MEMORY[0x24BE55250]();
}

uint64_t sub_23F61A270()
{
  return MEMORY[0x24BE55258]();
}

uint64_t sub_23F61A27C()
{
  return MEMORY[0x24BE55270]();
}

uint64_t sub_23F61A288()
{
  return MEMORY[0x24BE55278]();
}

uint64_t sub_23F61A294()
{
  return MEMORY[0x24BE55288]();
}

uint64_t sub_23F61A2A0()
{
  return MEMORY[0x24BE552A8]();
}

uint64_t sub_23F61A2AC()
{
  return MEMORY[0x24BE552B0]();
}

uint64_t sub_23F61A2B8()
{
  return MEMORY[0x24BE552B8]();
}

uint64_t sub_23F61A2C4()
{
  return MEMORY[0x24BE552C0]();
}

uint64_t sub_23F61A2D0()
{
  return MEMORY[0x24BE552F0]();
}

uint64_t sub_23F61A2DC()
{
  return MEMORY[0x24BE552F8]();
}

uint64_t sub_23F61A2E8()
{
  return MEMORY[0x24BE55300]();
}

uint64_t sub_23F61A2F4()
{
  return MEMORY[0x24BE55308]();
}

uint64_t sub_23F61A300()
{
  return MEMORY[0x24BE55310]();
}

uint64_t sub_23F61A30C()
{
  return MEMORY[0x24BE55320]();
}

uint64_t sub_23F61A318()
{
  return MEMORY[0x24BE55328]();
}

uint64_t sub_23F61A324()
{
  return MEMORY[0x24BE55330]();
}

uint64_t sub_23F61A330()
{
  return MEMORY[0x24BE55378]();
}

uint64_t sub_23F61A33C()
{
  return MEMORY[0x24BE55380]();
}

uint64_t sub_23F61A348()
{
  return MEMORY[0x24BE55388]();
}

uint64_t sub_23F61A354()
{
  return MEMORY[0x24BE55390]();
}

uint64_t sub_23F61A360()
{
  return MEMORY[0x24BE55398]();
}

uint64_t sub_23F61A36C()
{
  return MEMORY[0x24BE553C0]();
}

uint64_t sub_23F61A378()
{
  return MEMORY[0x24BE553E0]();
}

uint64_t sub_23F61A384()
{
  return MEMORY[0x24BE553E8]();
}

uint64_t sub_23F61A390()
{
  return MEMORY[0x24BE553F0]();
}

uint64_t sub_23F61A39C()
{
  return MEMORY[0x24BE553F8]();
}

uint64_t sub_23F61A3A8()
{
  return MEMORY[0x24BE55400]();
}

uint64_t sub_23F61A3B4()
{
  return MEMORY[0x24BE55410]();
}

uint64_t sub_23F61A3C0()
{
  return MEMORY[0x24BE55428]();
}

uint64_t sub_23F61A3CC()
{
  return MEMORY[0x24BE55430]();
}

uint64_t sub_23F61A3D8()
{
  return MEMORY[0x24BE55438]();
}

uint64_t sub_23F61A3E4()
{
  return MEMORY[0x24BE55440]();
}

uint64_t sub_23F61A3F0()
{
  return MEMORY[0x24BE55448]();
}

uint64_t sub_23F61A3FC()
{
  return MEMORY[0x24BE55450]();
}

uint64_t sub_23F61A408()
{
  return MEMORY[0x24BE55458]();
}

uint64_t sub_23F61A414()
{
  return MEMORY[0x24BE55468]();
}

uint64_t sub_23F61A420()
{
  return MEMORY[0x24BE55470]();
}

uint64_t sub_23F61A42C()
{
  return MEMORY[0x24BE55478]();
}

uint64_t sub_23F61A438()
{
  return MEMORY[0x24BE55518]();
}

uint64_t sub_23F61A444()
{
  return MEMORY[0x24BE55528]();
}

uint64_t sub_23F61A450()
{
  return MEMORY[0x24BE55530]();
}

uint64_t sub_23F61A45C()
{
  return MEMORY[0x24BE55538]();
}

uint64_t sub_23F61A468()
{
  return MEMORY[0x24BE55540]();
}

uint64_t sub_23F61A474()
{
  return MEMORY[0x24BE55580]();
}

uint64_t sub_23F61A480()
{
  return MEMORY[0x24BE55588]();
}

uint64_t sub_23F61A48C()
{
  return MEMORY[0x24BE55590]();
}

uint64_t sub_23F61A498()
{
  return MEMORY[0x24BE55598]();
}

uint64_t sub_23F61A4A4()
{
  return MEMORY[0x24BE555A0]();
}

uint64_t sub_23F61A4B0()
{
  return MEMORY[0x24BE555A8]();
}

uint64_t sub_23F61A4BC()
{
  return MEMORY[0x24BE555B0]();
}

uint64_t sub_23F61A4C8()
{
  return MEMORY[0x24BE555B8]();
}

uint64_t sub_23F61A4D4()
{
  return MEMORY[0x24BE555C0]();
}

uint64_t sub_23F61A4E0()
{
  return MEMORY[0x24BE555C8]();
}

uint64_t sub_23F61A4EC()
{
  return MEMORY[0x24BE555D0]();
}

uint64_t sub_23F61A4F8()
{
  return MEMORY[0x24BE555D8]();
}

uint64_t sub_23F61A504()
{
  return MEMORY[0x24BE555E0]();
}

uint64_t sub_23F61A510()
{
  return MEMORY[0x24BE55628]();
}

uint64_t sub_23F61A51C()
{
  return MEMORY[0x24BE55630]();
}

uint64_t sub_23F61A528()
{
  return MEMORY[0x24BE55638]();
}

uint64_t sub_23F61A534()
{
  return MEMORY[0x24BE55640]();
}

uint64_t sub_23F61A540()
{
  return MEMORY[0x24BE55648]();
}

uint64_t sub_23F61A54C()
{
  return MEMORY[0x24BE55658]();
}

uint64_t sub_23F61A558()
{
  return MEMORY[0x24BE55668]();
}

uint64_t sub_23F61A564()
{
  return MEMORY[0x24BE55670]();
}

uint64_t sub_23F61A570()
{
  return MEMORY[0x24BE556C0]();
}

uint64_t sub_23F61A57C()
{
  return MEMORY[0x24BE556D8]();
}

uint64_t sub_23F61A588()
{
  return MEMORY[0x24BE556E0]();
}

uint64_t sub_23F61A594()
{
  return MEMORY[0x24BE556F8]();
}

uint64_t sub_23F61A5A0()
{
  return MEMORY[0x24BE55700]();
}

uint64_t sub_23F61A5AC()
{
  return MEMORY[0x24BE55708]();
}

uint64_t sub_23F61A5B8()
{
  return MEMORY[0x24BE55710]();
}

uint64_t sub_23F61A5C4()
{
  return MEMORY[0x24BE55718]();
}

uint64_t sub_23F61A5D0()
{
  return MEMORY[0x24BE55720]();
}

uint64_t sub_23F61A5DC()
{
  return MEMORY[0x24BE55728]();
}

uint64_t sub_23F61A5E8()
{
  return MEMORY[0x24BE55730]();
}

uint64_t sub_23F61A5F4()
{
  return MEMORY[0x24BE55738]();
}

uint64_t sub_23F61A600()
{
  return MEMORY[0x24BE55740]();
}

uint64_t sub_23F61A60C()
{
  return MEMORY[0x24BE55760]();
}

uint64_t sub_23F61A618()
{
  return MEMORY[0x24BE55770]();
}

uint64_t sub_23F61A624()
{
  return MEMORY[0x24BE55778]();
}

uint64_t sub_23F61A630()
{
  return MEMORY[0x24BE55780]();
}

uint64_t sub_23F61A63C()
{
  return MEMORY[0x24BE55788]();
}

uint64_t sub_23F61A648()
{
  return MEMORY[0x24BE55790]();
}

uint64_t sub_23F61A654()
{
  return MEMORY[0x24BE55798]();
}

uint64_t sub_23F61A660()
{
  return MEMORY[0x24BE557A0]();
}

uint64_t sub_23F61A66C()
{
  return MEMORY[0x24BE557A8]();
}

uint64_t sub_23F61A678()
{
  return MEMORY[0x24BE557B0]();
}

uint64_t sub_23F61A684()
{
  return MEMORY[0x24BE557B8]();
}

uint64_t sub_23F61A690()
{
  return MEMORY[0x24BE557F0]();
}

uint64_t sub_23F61A69C()
{
  return MEMORY[0x24BE557F8]();
}

uint64_t sub_23F61A6A8()
{
  return MEMORY[0x24BE55800]();
}

uint64_t sub_23F61A6B4()
{
  return MEMORY[0x24BE55808]();
}

uint64_t sub_23F61A6C0()
{
  return MEMORY[0x24BE55810]();
}

uint64_t sub_23F61A6CC()
{
  return MEMORY[0x24BE55848]();
}

uint64_t sub_23F61A6D8()
{
  return MEMORY[0x24BE55850]();
}

uint64_t sub_23F61A6E4()
{
  return MEMORY[0x24BE55860]();
}

uint64_t sub_23F61A6F0()
{
  return MEMORY[0x24BE55870]();
}

uint64_t sub_23F61A6FC()
{
  return MEMORY[0x24BE55878]();
}

uint64_t sub_23F61A708()
{
  return MEMORY[0x24BE55880]();
}

uint64_t sub_23F61A714()
{
  return MEMORY[0x24BE55888]();
}

uint64_t sub_23F61A720()
{
  return MEMORY[0x24BE55890]();
}

uint64_t sub_23F61A72C()
{
  return MEMORY[0x24BE55898]();
}

uint64_t sub_23F61A738()
{
  return MEMORY[0x24BE558A0]();
}

uint64_t sub_23F61A744()
{
  return MEMORY[0x24BE558B8]();
}

uint64_t sub_23F61A750()
{
  return MEMORY[0x24BE558C0]();
}

uint64_t sub_23F61A75C()
{
  return MEMORY[0x24BE558C8]();
}

uint64_t sub_23F61A768()
{
  return MEMORY[0x24BE558D0]();
}

uint64_t sub_23F61A774()
{
  return MEMORY[0x24BE558D8]();
}

uint64_t sub_23F61A780()
{
  return MEMORY[0x24BE558E0]();
}

uint64_t sub_23F61A78C()
{
  return MEMORY[0x24BE558F0]();
}

uint64_t sub_23F61A798()
{
  return MEMORY[0x24BE55910]();
}

uint64_t sub_23F61A7A4()
{
  return MEMORY[0x24BE55920]();
}

uint64_t sub_23F61A7B0()
{
  return MEMORY[0x24BE55928]();
}

uint64_t sub_23F61A7BC()
{
  return MEMORY[0x24BE55958]();
}

uint64_t sub_23F61A7C8()
{
  return MEMORY[0x24BE55960]();
}

uint64_t sub_23F61A7D4()
{
  return MEMORY[0x24BE55978]();
}

uint64_t sub_23F61A7E0()
{
  return MEMORY[0x24BE559A8]();
}

uint64_t sub_23F61A7EC()
{
  return MEMORY[0x24BE559C0]();
}

uint64_t sub_23F61A7F8()
{
  return MEMORY[0x24BE559C8]();
}

uint64_t sub_23F61A804()
{
  return MEMORY[0x24BE559D0]();
}

uint64_t sub_23F61A810()
{
  return MEMORY[0x24BE559D8]();
}

uint64_t sub_23F61A81C()
{
  return MEMORY[0x24BE559E0]();
}

uint64_t sub_23F61A828()
{
  return MEMORY[0x24BE559E8]();
}

uint64_t sub_23F61A834()
{
  return MEMORY[0x24BE559F0]();
}

uint64_t sub_23F61A840()
{
  return MEMORY[0x24BE559F8]();
}

uint64_t sub_23F61A84C()
{
  return MEMORY[0x24BE55A00]();
}

uint64_t sub_23F61A858()
{
  return MEMORY[0x24BE55A08]();
}

uint64_t sub_23F61A864()
{
  return MEMORY[0x24BE55A10]();
}

uint64_t sub_23F61A870()
{
  return MEMORY[0x24BE55A18]();
}

uint64_t sub_23F61A87C()
{
  return MEMORY[0x24BE55A20]();
}

uint64_t sub_23F61A888()
{
  return MEMORY[0x24BE55A40]();
}

uint64_t sub_23F61A894()
{
  return MEMORY[0x24BE55A48]();
}

uint64_t sub_23F61A8A0()
{
  return MEMORY[0x24BE55A58]();
}

uint64_t sub_23F61A8AC()
{
  return MEMORY[0x24BE55A60]();
}

uint64_t sub_23F61A8B8()
{
  return MEMORY[0x24BE55A90]();
}

uint64_t sub_23F61A8C4()
{
  return MEMORY[0x24BE55A98]();
}

uint64_t sub_23F61A8D0()
{
  return MEMORY[0x24BE55AA0]();
}

uint64_t sub_23F61A8DC()
{
  return MEMORY[0x24BE55AB0]();
}

uint64_t sub_23F61A8E8()
{
  return MEMORY[0x24BE55AC0]();
}

uint64_t sub_23F61A8F4()
{
  return MEMORY[0x24BE55AC8]();
}

uint64_t sub_23F61A900()
{
  return MEMORY[0x24BE55AD8]();
}

uint64_t sub_23F61A90C()
{
  return MEMORY[0x24BE55B28]();
}

uint64_t sub_23F61A918()
{
  return MEMORY[0x24BE55B38]();
}

uint64_t sub_23F61A924()
{
  return MEMORY[0x24BE55B40]();
}

uint64_t sub_23F61A930()
{
  return MEMORY[0x24BE55B48]();
}

uint64_t sub_23F61A93C()
{
  return MEMORY[0x24BE55B50]();
}

uint64_t sub_23F61A948()
{
  return MEMORY[0x24BE55B58]();
}

uint64_t sub_23F61A954()
{
  return MEMORY[0x24BE55B60]();
}

uint64_t sub_23F61A960()
{
  return MEMORY[0x24BE55B68]();
}

uint64_t sub_23F61A96C()
{
  return MEMORY[0x24BE55B70]();
}

uint64_t sub_23F61A978()
{
  return MEMORY[0x24BE55B78]();
}

uint64_t sub_23F61A984()
{
  return MEMORY[0x24BE55B80]();
}

uint64_t sub_23F61A990()
{
  return MEMORY[0x24BE55B88]();
}

uint64_t sub_23F61A99C()
{
  return MEMORY[0x24BE55B90]();
}

uint64_t sub_23F61A9A8()
{
  return MEMORY[0x24BE55B98]();
}

uint64_t sub_23F61A9B4()
{
  return MEMORY[0x24BE55BA0]();
}

uint64_t sub_23F61A9C0()
{
  return MEMORY[0x24BE55BA8]();
}

uint64_t sub_23F61A9CC()
{
  return MEMORY[0x24BE55BB0]();
}

uint64_t sub_23F61A9D8()
{
  return MEMORY[0x24BE55BB8]();
}

uint64_t sub_23F61A9E4()
{
  return MEMORY[0x24BE55BC0]();
}

uint64_t sub_23F61A9F0()
{
  return MEMORY[0x24BE55BC8]();
}

uint64_t sub_23F61A9FC()
{
  return MEMORY[0x24BE55BD0]();
}

uint64_t sub_23F61AA08()
{
  return MEMORY[0x24BE55BD8]();
}

uint64_t sub_23F61AA14()
{
  return MEMORY[0x24BE55BE0]();
}

uint64_t sub_23F61AA20()
{
  return MEMORY[0x24BE55BF8]();
}

uint64_t sub_23F61AA2C()
{
  return MEMORY[0x24BE55C08]();
}

uint64_t sub_23F61AA38()
{
  return MEMORY[0x24BE55C18]();
}

uint64_t sub_23F61AA44()
{
  return MEMORY[0x24BE55C28]();
}

uint64_t sub_23F61AA50()
{
  return MEMORY[0x24BE55C30]();
}

uint64_t sub_23F61AA5C()
{
  return MEMORY[0x24BE55C58]();
}

uint64_t sub_23F61AA68()
{
  return MEMORY[0x24BE55C60]();
}

uint64_t sub_23F61AA74()
{
  return MEMORY[0x24BE55CD0]();
}

uint64_t sub_23F61AA80()
{
  return MEMORY[0x24BE55CD8]();
}

uint64_t sub_23F61AA8C()
{
  return MEMORY[0x24BE55CE0]();
}

uint64_t sub_23F61AA98()
{
  return MEMORY[0x24BE55CE8]();
}

uint64_t sub_23F61AAA4()
{
  return MEMORY[0x24BE55CF0]();
}

uint64_t sub_23F61AAB0()
{
  return MEMORY[0x24BE55CF8]();
}

uint64_t sub_23F61AABC()
{
  return MEMORY[0x24BE55D00]();
}

uint64_t sub_23F61AAC8()
{
  return MEMORY[0x24BE55D08]();
}

uint64_t sub_23F61AAD4()
{
  return MEMORY[0x24BE55D10]();
}

uint64_t sub_23F61AAE0()
{
  return MEMORY[0x24BE55D20]();
}

uint64_t sub_23F61AAEC()
{
  return MEMORY[0x24BE55D28]();
}

uint64_t sub_23F61AAF8()
{
  return MEMORY[0x24BE55D30]();
}

uint64_t sub_23F61AB04()
{
  return MEMORY[0x24BE55D40]();
}

uint64_t sub_23F61AB10()
{
  return MEMORY[0x24BE55D50]();
}

uint64_t sub_23F61AB1C()
{
  return MEMORY[0x24BE55D58]();
}

uint64_t sub_23F61AB28()
{
  return MEMORY[0x24BE55D60]();
}

uint64_t sub_23F61AB34()
{
  return MEMORY[0x24BE55D68]();
}

uint64_t sub_23F61AB40()
{
  return MEMORY[0x24BE55D78]();
}

uint64_t sub_23F61AB4C()
{
  return MEMORY[0x24BE55D80]();
}

uint64_t sub_23F61AB58()
{
  return MEMORY[0x24BE55D88]();
}

uint64_t sub_23F61AB64()
{
  return MEMORY[0x24BE55D90]();
}

uint64_t sub_23F61AB70()
{
  return MEMORY[0x24BE55D98]();
}

uint64_t sub_23F61AB7C()
{
  return MEMORY[0x24BE55DA0]();
}

uint64_t sub_23F61AB88()
{
  return MEMORY[0x24BE55DA8]();
}

uint64_t sub_23F61AB94()
{
  return MEMORY[0x24BE55DB0]();
}

uint64_t sub_23F61ABA0()
{
  return MEMORY[0x24BE55DC0]();
}

uint64_t sub_23F61ABAC()
{
  return MEMORY[0x24BE55DC8]();
}

uint64_t sub_23F61ABB8()
{
  return MEMORY[0x24BE55DD0]();
}

uint64_t sub_23F61ABC4()
{
  return MEMORY[0x24BE55DF0]();
}

uint64_t sub_23F61ABD0()
{
  return MEMORY[0x24BE55DF8]();
}

uint64_t sub_23F61ABDC()
{
  return MEMORY[0x24BE55E00]();
}

uint64_t sub_23F61ABE8()
{
  return MEMORY[0x24BE55E08]();
}

uint64_t sub_23F61ABF4()
{
  return MEMORY[0x24BE55E20]();
}

uint64_t sub_23F61AC00()
{
  return MEMORY[0x24BE55E30]();
}

uint64_t sub_23F61AC0C()
{
  return MEMORY[0x24BE55E38]();
}

uint64_t sub_23F61AC18()
{
  return MEMORY[0x24BE55E40]();
}

uint64_t sub_23F61AC24()
{
  return MEMORY[0x24BE55E48]();
}

uint64_t sub_23F61AC30()
{
  return MEMORY[0x24BE55E80]();
}

uint64_t sub_23F61AC3C()
{
  return MEMORY[0x24BE55E90]();
}

uint64_t sub_23F61AC48()
{
  return MEMORY[0x24BE55EA8]();
}

uint64_t sub_23F61AC54()
{
  return MEMORY[0x24BE55ED8]();
}

uint64_t sub_23F61AC60()
{
  return MEMORY[0x24BE55EE0]();
}

uint64_t sub_23F61AC6C()
{
  return MEMORY[0x24BE55EE8]();
}

uint64_t sub_23F61AC78()
{
  return MEMORY[0x24BE55F08]();
}

uint64_t sub_23F61AC84()
{
  return MEMORY[0x24BE55F10]();
}

uint64_t sub_23F61AC90()
{
  return MEMORY[0x24BE55F18]();
}

uint64_t sub_23F61AC9C()
{
  return MEMORY[0x24BE55F20]();
}

uint64_t sub_23F61ACA8()
{
  return MEMORY[0x24BE55F28]();
}

uint64_t sub_23F61ACB4()
{
  return MEMORY[0x24BE55F48]();
}

uint64_t sub_23F61ACC0()
{
  return MEMORY[0x24BE55F50]();
}

uint64_t sub_23F61ACCC()
{
  return MEMORY[0x24BE55F58]();
}

uint64_t sub_23F61ACD8()
{
  return MEMORY[0x24BE55F60]();
}

uint64_t sub_23F61ACE4()
{
  return MEMORY[0x24BE55F68]();
}

uint64_t sub_23F61ACF0()
{
  return MEMORY[0x24BE55F78]();
}

uint64_t sub_23F61ACFC()
{
  return MEMORY[0x24BE55F80]();
}

uint64_t sub_23F61AD08()
{
  return MEMORY[0x24BE55F88]();
}

uint64_t sub_23F61AD14()
{
  return MEMORY[0x24BE55F90]();
}

uint64_t sub_23F61AD20()
{
  return MEMORY[0x24BE55F98]();
}

uint64_t sub_23F61AD2C()
{
  return MEMORY[0x24BE55FA0]();
}

uint64_t sub_23F61AD38()
{
  return MEMORY[0x24BE56050]();
}

uint64_t sub_23F61AD44()
{
  return MEMORY[0x24BE56090]();
}

uint64_t sub_23F61AD50()
{
  return MEMORY[0x24BE56098]();
}

uint64_t sub_23F61AD5C()
{
  return MEMORY[0x24BE560A0]();
}

uint64_t sub_23F61AD68()
{
  return MEMORY[0x24BE560B0]();
}

uint64_t sub_23F61AD74()
{
  return MEMORY[0x24BE560B8]();
}

uint64_t sub_23F61AD80()
{
  return MEMORY[0x24BE560C0]();
}

uint64_t sub_23F61AD8C()
{
  return MEMORY[0x24BE560C8]();
}

uint64_t sub_23F61AD98()
{
  return MEMORY[0x24BE560D0]();
}

uint64_t sub_23F61ADA4()
{
  return MEMORY[0x24BE560D8]();
}

uint64_t sub_23F61ADB0()
{
  return MEMORY[0x24BE560E0]();
}

uint64_t sub_23F61ADBC()
{
  return MEMORY[0x24BE56140]();
}

uint64_t sub_23F61ADC8()
{
  return MEMORY[0x24BE561A8]();
}

uint64_t sub_23F61ADD4()
{
  return MEMORY[0x24BE561B0]();
}

uint64_t sub_23F61ADE0()
{
  return MEMORY[0x24BE561B8]();
}

uint64_t sub_23F61ADEC()
{
  return MEMORY[0x24BE561C0]();
}

uint64_t sub_23F61ADF8()
{
  return MEMORY[0x24BE561D0]();
}

uint64_t sub_23F61AE04()
{
  return MEMORY[0x24BE561D8]();
}

uint64_t sub_23F61AE10()
{
  return MEMORY[0x24BE561E0]();
}

uint64_t sub_23F61AE1C()
{
  return MEMORY[0x24BE561E8]();
}

uint64_t sub_23F61AE28()
{
  return MEMORY[0x24BE56258]();
}

uint64_t sub_23F61AE34()
{
  return MEMORY[0x24BE562A0]();
}

uint64_t sub_23F61AE40()
{
  return MEMORY[0x24BE562A8]();
}

uint64_t sub_23F61AE4C()
{
  return MEMORY[0x24BE562B0]();
}

uint64_t sub_23F61AE58()
{
  return MEMORY[0x24BE562B8]();
}

uint64_t sub_23F61AE64()
{
  return MEMORY[0x24BE562C0]();
}

uint64_t sub_23F61AE70()
{
  return MEMORY[0x24BE562C8]();
}

uint64_t sub_23F61AE7C()
{
  return MEMORY[0x24BE562D8]();
}

uint64_t sub_23F61AE88()
{
  return MEMORY[0x24BE562E0]();
}

uint64_t sub_23F61AE94()
{
  return MEMORY[0x24BE562E8]();
}

uint64_t sub_23F61AEA0()
{
  return MEMORY[0x24BE56328]();
}

uint64_t sub_23F61AEAC()
{
  return MEMORY[0x24BE56330]();
}

uint64_t sub_23F61AEB8()
{
  return MEMORY[0x24BE56338]();
}

uint64_t sub_23F61AEC4()
{
  return MEMORY[0x24BE56360]();
}

uint64_t sub_23F61AED0()
{
  return MEMORY[0x24BE56368]();
}

uint64_t sub_23F61AEDC()
{
  return MEMORY[0x24BE56370]();
}

uint64_t sub_23F61AEE8()
{
  return MEMORY[0x24BE56378]();
}

uint64_t sub_23F61AEF4()
{
  return MEMORY[0x24BE56400]();
}

uint64_t sub_23F61AF00()
{
  return MEMORY[0x24BE56420]();
}

uint64_t sub_23F61AF0C()
{
  return MEMORY[0x24BE56428]();
}

uint64_t sub_23F61AF18()
{
  return MEMORY[0x24BE56430]();
}

uint64_t sub_23F61AF24()
{
  return MEMORY[0x24BE56448]();
}

uint64_t sub_23F61AF30()
{
  return MEMORY[0x24BE56450]();
}

uint64_t sub_23F61AF3C()
{
  return MEMORY[0x24BE56458]();
}

uint64_t sub_23F61AF48()
{
  return MEMORY[0x24BE56470]();
}

uint64_t sub_23F61AF54()
{
  return MEMORY[0x24BE56480]();
}

uint64_t sub_23F61AF60()
{
  return MEMORY[0x24BE56488]();
}

uint64_t sub_23F61AF6C()
{
  return MEMORY[0x24BE564A8]();
}

uint64_t sub_23F61AF78()
{
  return MEMORY[0x24BE564B0]();
}

uint64_t sub_23F61AF84()
{
  return MEMORY[0x24BE564B8]();
}

uint64_t sub_23F61AF90()
{
  return MEMORY[0x24BE564D0]();
}

uint64_t sub_23F61AF9C()
{
  return MEMORY[0x24BE564D8]();
}

uint64_t sub_23F61AFA8()
{
  return MEMORY[0x24BE564E0]();
}

uint64_t sub_23F61AFB4()
{
  return MEMORY[0x24BE56520]();
}

uint64_t sub_23F61AFC0()
{
  return MEMORY[0x24BE56528]();
}

uint64_t sub_23F61AFCC()
{
  return MEMORY[0x24BE56540]();
}

uint64_t sub_23F61AFD8()
{
  return MEMORY[0x24BE56548]();
}

uint64_t sub_23F61AFE4()
{
  return MEMORY[0x24BE56550]();
}

uint64_t sub_23F61AFF0()
{
  return MEMORY[0x24BE565B8]();
}

uint64_t sub_23F61AFFC()
{
  return MEMORY[0x24BE565C8]();
}

uint64_t sub_23F61B008()
{
  return MEMORY[0x24BE565D8]();
}

uint64_t sub_23F61B014()
{
  return MEMORY[0x24BE56630]();
}

uint64_t sub_23F61B020()
{
  return MEMORY[0x24BE56638]();
}

uint64_t sub_23F61B02C()
{
  return MEMORY[0x24BE56660]();
}

uint64_t sub_23F61B038()
{
  return MEMORY[0x24BE56670]();
}

uint64_t sub_23F61B044()
{
  return MEMORY[0x24BE56678]();
}

uint64_t sub_23F61B050()
{
  return MEMORY[0x24BE56688]();
}

uint64_t sub_23F61B05C()
{
  return MEMORY[0x24BE56690]();
}

uint64_t sub_23F61B068()
{
  return MEMORY[0x24BE566A8]();
}

uint64_t sub_23F61B074()
{
  return MEMORY[0x24BE566B0]();
}

uint64_t sub_23F61B080()
{
  return MEMORY[0x24BE566B8]();
}

uint64_t sub_23F61B08C()
{
  return MEMORY[0x24BE566D0]();
}

uint64_t sub_23F61B098()
{
  return MEMORY[0x24BE566D8]();
}

uint64_t sub_23F61B0A4()
{
  return MEMORY[0x24BE566E0]();
}

uint64_t sub_23F61B0B0()
{
  return MEMORY[0x24BE566E8]();
}

uint64_t sub_23F61B0BC()
{
  return MEMORY[0x24BE56700]();
}

uint64_t sub_23F61B0C8()
{
  return MEMORY[0x24BE56728]();
}

uint64_t sub_23F61B0D4()
{
  return MEMORY[0x24BE56798]();
}

uint64_t sub_23F61B0E0()
{
  return MEMORY[0x24BE567A0]();
}

uint64_t sub_23F61B0EC()
{
  return MEMORY[0x24BE567A8]();
}

uint64_t sub_23F61B0F8()
{
  return MEMORY[0x24BE567B8]();
}

uint64_t sub_23F61B104()
{
  return MEMORY[0x24BE567C0]();
}

uint64_t sub_23F61B110()
{
  return MEMORY[0x24BE567F0]();
}

uint64_t sub_23F61B11C()
{
  return MEMORY[0x24BE567F8]();
}

uint64_t sub_23F61B128()
{
  return MEMORY[0x24BE56808]();
}

uint64_t sub_23F61B134()
{
  return MEMORY[0x24BE56818]();
}

uint64_t sub_23F61B140()
{
  return MEMORY[0x24BE56828]();
}

uint64_t sub_23F61B14C()
{
  return MEMORY[0x24BE56860]();
}

uint64_t sub_23F61B158()
{
  return MEMORY[0x24BE56870]();
}

uint64_t sub_23F61B164()
{
  return MEMORY[0x24BE56878]();
}

uint64_t sub_23F61B170()
{
  return MEMORY[0x24BE568A8]();
}

uint64_t sub_23F61B17C()
{
  return MEMORY[0x24BE56970]();
}

uint64_t sub_23F61B188()
{
  return MEMORY[0x24BE569A8]();
}

uint64_t sub_23F61B194()
{
  return MEMORY[0x24BE569B0]();
}

uint64_t sub_23F61B1A0()
{
  return MEMORY[0x24BE569B8]();
}

uint64_t sub_23F61B1AC()
{
  return MEMORY[0x24BE569C0]();
}

uint64_t sub_23F61B1B8()
{
  return MEMORY[0x24BE569C8]();
}

uint64_t sub_23F61B1C4()
{
  return MEMORY[0x24BE569F0]();
}

uint64_t sub_23F61B1D0()
{
  return MEMORY[0x24BE569F8]();
}

uint64_t sub_23F61B1DC()
{
  return MEMORY[0x24BE56A00]();
}

uint64_t sub_23F61B1E8()
{
  return MEMORY[0x24BE56A08]();
}

uint64_t sub_23F61B1F4()
{
  return MEMORY[0x24BE56A18]();
}

uint64_t sub_23F61B200()
{
  return MEMORY[0x24BE56A28]();
}

uint64_t sub_23F61B20C()
{
  return MEMORY[0x24BE56A38]();
}

uint64_t sub_23F61B218()
{
  return MEMORY[0x24BE56A58]();
}

uint64_t sub_23F61B224()
{
  return MEMORY[0x24BE56A68]();
}

uint64_t sub_23F61B230()
{
  return MEMORY[0x24BE56A78]();
}

uint64_t sub_23F61B23C()
{
  return MEMORY[0x24BE56A80]();
}

uint64_t sub_23F61B248()
{
  return MEMORY[0x24BE56A88]();
}

uint64_t sub_23F61B254()
{
  return MEMORY[0x24BE56A90]();
}

uint64_t sub_23F61B260()
{
  return MEMORY[0x24BE56AA0]();
}

uint64_t sub_23F61B26C()
{
  return MEMORY[0x24BE56AA8]();
}

uint64_t sub_23F61B278()
{
  return MEMORY[0x24BE56AC0]();
}

uint64_t sub_23F61B284()
{
  return MEMORY[0x24BE56AE8]();
}

uint64_t sub_23F61B290()
{
  return MEMORY[0x24BE56B08]();
}

uint64_t sub_23F61B29C()
{
  return MEMORY[0x24BE56B40]();
}

uint64_t sub_23F61B2A8()
{
  return MEMORY[0x24BE56BD8]();
}

uint64_t sub_23F61B2B4()
{
  return MEMORY[0x24BE56BF8]();
}

uint64_t sub_23F61B2C0()
{
  return MEMORY[0x24BE56C90]();
}

uint64_t sub_23F61B2CC()
{
  return MEMORY[0x24BE56CA8]();
}

uint64_t sub_23F61B2D8()
{
  return MEMORY[0x24BE56CB0]();
}

uint64_t sub_23F61B2E4()
{
  return MEMORY[0x24BE56CD0]();
}

uint64_t sub_23F61B2F0()
{
  return MEMORY[0x24BE56D00]();
}

uint64_t sub_23F61B2FC()
{
  return MEMORY[0x24BE56D10]();
}

uint64_t sub_23F61B308()
{
  return MEMORY[0x24BE56D40]();
}

uint64_t sub_23F61B314()
{
  return MEMORY[0x24BE56D50]();
}

uint64_t sub_23F61B320()
{
  return MEMORY[0x24BE56D58]();
}

uint64_t sub_23F61B32C()
{
  return MEMORY[0x24BE56D60]();
}

uint64_t sub_23F61B338()
{
  return MEMORY[0x24BE56D70]();
}

uint64_t sub_23F61B344()
{
  return MEMORY[0x24BE56D78]();
}

uint64_t sub_23F61B350()
{
  return MEMORY[0x24BE56DB8]();
}

uint64_t sub_23F61B35C()
{
  return MEMORY[0x24BE56DC0]();
}

uint64_t sub_23F61B368()
{
  return MEMORY[0x24BE56DC8]();
}

uint64_t sub_23F61B374()
{
  return MEMORY[0x24BE56DD8]();
}

uint64_t sub_23F61B380()
{
  return MEMORY[0x24BE56DE0]();
}

uint64_t sub_23F61B38C()
{
  return MEMORY[0x24BE56DE8]();
}

uint64_t sub_23F61B398()
{
  return MEMORY[0x24BE56DF8]();
}

uint64_t sub_23F61B3A4()
{
  return MEMORY[0x24BE56E18]();
}

uint64_t sub_23F61B3B0()
{
  return MEMORY[0x24BE56E20]();
}

uint64_t sub_23F61B3BC()
{
  return MEMORY[0x24BE56E28]();
}

uint64_t sub_23F61B3C8()
{
  return MEMORY[0x24BE56E30]();
}

uint64_t sub_23F61B3D4()
{
  return MEMORY[0x24BE56E38]();
}

uint64_t sub_23F61B3E0()
{
  return MEMORY[0x24BE56E40]();
}

uint64_t sub_23F61B3EC()
{
  return MEMORY[0x24BE56E78]();
}

uint64_t sub_23F61B3F8()
{
  return MEMORY[0x24BE56EA8]();
}

uint64_t sub_23F61B404()
{
  return MEMORY[0x24BE56EB0]();
}

uint64_t sub_23F61B410()
{
  return MEMORY[0x24BE56EF8]();
}

uint64_t sub_23F61B41C()
{
  return MEMORY[0x24BE56F08]();
}

uint64_t sub_23F61B428()
{
  return MEMORY[0x24BE56F10]();
}

uint64_t sub_23F61B434()
{
  return MEMORY[0x24BE56F18]();
}

uint64_t sub_23F61B440()
{
  return MEMORY[0x24BE56F20]();
}

uint64_t sub_23F61B44C()
{
  return MEMORY[0x24BE56F28]();
}

uint64_t sub_23F61B458()
{
  return MEMORY[0x24BE56F40]();
}

uint64_t sub_23F61B464()
{
  return MEMORY[0x24BE56F50]();
}

uint64_t sub_23F61B470()
{
  return MEMORY[0x24BE56F58]();
}

uint64_t sub_23F61B47C()
{
  return MEMORY[0x24BE56F88]();
}

uint64_t sub_23F61B488()
{
  return MEMORY[0x24BE56F90]();
}

uint64_t sub_23F61B494()
{
  return MEMORY[0x24BE56F98]();
}

uint64_t sub_23F61B4A0()
{
  return MEMORY[0x24BE56FA0]();
}

uint64_t sub_23F61B4AC()
{
  return MEMORY[0x24BE56FA8]();
}

uint64_t sub_23F61B4B8()
{
  return MEMORY[0x24BE56FB0]();
}

uint64_t sub_23F61B4C4()
{
  return MEMORY[0x24BE56FD0]();
}

uint64_t sub_23F61B4D0()
{
  return MEMORY[0x24BEB8E28]();
}

uint64_t sub_23F61B4DC()
{
  return MEMORY[0x24BEB8E58]();
}

uint64_t sub_23F61B4E8()
{
  return MEMORY[0x24BEB8EC8]();
}

uint64_t sub_23F61B4F4()
{
  return MEMORY[0x24BEB8ED8]();
}

uint64_t sub_23F61B500()
{
  return MEMORY[0x24BEB8F18]();
}

uint64_t sub_23F61B50C()
{
  return MEMORY[0x24BEB8F20]();
}

uint64_t sub_23F61B518()
{
  return MEMORY[0x24BEB8F30]();
}

uint64_t sub_23F61B524()
{
  return MEMORY[0x24BEB8F40]();
}

uint64_t sub_23F61B530()
{
  return MEMORY[0x24BEB8F48]();
}

uint64_t sub_23F61B53C()
{
  return MEMORY[0x24BEB8F50]();
}

uint64_t sub_23F61B548()
{
  return MEMORY[0x24BEB8F58]();
}

uint64_t sub_23F61B554()
{
  return MEMORY[0x24BEB8F60]();
}

uint64_t sub_23F61B560()
{
  return MEMORY[0x24BEB8F68]();
}

uint64_t sub_23F61B56C()
{
  return MEMORY[0x24BEB8F70]();
}

uint64_t sub_23F61B578()
{
  return MEMORY[0x24BEB8F78]();
}

uint64_t sub_23F61B584()
{
  return MEMORY[0x24BEB8F80]();
}

uint64_t sub_23F61B590()
{
  return MEMORY[0x24BEB8F88]();
}

uint64_t sub_23F61B59C()
{
  return MEMORY[0x24BEB8F90]();
}

uint64_t sub_23F61B5A8()
{
  return MEMORY[0x24BEB8FB0]();
}

uint64_t sub_23F61B5B4()
{
  return MEMORY[0x24BEB8FB8]();
}

uint64_t sub_23F61B5C0()
{
  return MEMORY[0x24BEB8FC0]();
}

uint64_t sub_23F61B5CC()
{
  return MEMORY[0x24BEB8FD8]();
}

uint64_t sub_23F61B5D8()
{
  return MEMORY[0x24BEB8FE0]();
}

uint64_t sub_23F61B5E4()
{
  return MEMORY[0x24BEB9020]();
}

uint64_t sub_23F61B5F0()
{
  return MEMORY[0x24BEB9030]();
}

uint64_t sub_23F61B5FC()
{
  return MEMORY[0x24BEB91C0]();
}

uint64_t sub_23F61B608()
{
  return MEMORY[0x24BEB91D0]();
}

uint64_t sub_23F61B614()
{
  return MEMORY[0x24BEB91D8]();
}

uint64_t sub_23F61B620()
{
  return MEMORY[0x24BEB91E0]();
}

uint64_t sub_23F61B62C()
{
  return MEMORY[0x24BEB9200]();
}

uint64_t sub_23F61B638()
{
  return MEMORY[0x24BEB93F8]();
}

uint64_t sub_23F61B644()
{
  return MEMORY[0x24BEB9408]();
}

uint64_t sub_23F61B650()
{
  return MEMORY[0x24BEB9428]();
}

uint64_t sub_23F61B65C()
{
  return MEMORY[0x24BEB9430]();
}

uint64_t sub_23F61B668()
{
  return MEMORY[0x24BEB9438]();
}

uint64_t sub_23F61B674()
{
  return MEMORY[0x24BEB94B8]();
}

uint64_t sub_23F61B680()
{
  return MEMORY[0x24BEB94E0]();
}

uint64_t sub_23F61B68C()
{
  return MEMORY[0x24BEB94E8]();
}

uint64_t sub_23F61B698()
{
  return MEMORY[0x24BEB94F8]();
}

uint64_t sub_23F61B6A4()
{
  return MEMORY[0x24BEB9550]();
}

uint64_t sub_23F61B6B0()
{
  return MEMORY[0x24BEB9660]();
}

uint64_t sub_23F61B6BC()
{
  return MEMORY[0x24BEB96F8]();
}

uint64_t sub_23F61B6C8()
{
  return MEMORY[0x24BEB9700]();
}

uint64_t sub_23F61B6D4()
{
  return MEMORY[0x24BEB9708]();
}

uint64_t sub_23F61B6E0()
{
  return MEMORY[0x24BEB9710]();
}

uint64_t sub_23F61B6EC()
{
  return MEMORY[0x24BEB9720]();
}

uint64_t sub_23F61B6F8()
{
  return MEMORY[0x24BEB9728]();
}

uint64_t sub_23F61B704()
{
  return MEMORY[0x24BEB9730]();
}

uint64_t sub_23F61B710()
{
  return MEMORY[0x24BEB9738]();
}

uint64_t sub_23F61B71C()
{
  return MEMORY[0x24BEB9740]();
}

uint64_t sub_23F61B728()
{
  return MEMORY[0x24BEB9748]();
}

uint64_t sub_23F61B734()
{
  return MEMORY[0x24BEB9758]();
}

uint64_t sub_23F61B740()
{
  return MEMORY[0x24BEB9760]();
}

uint64_t sub_23F61B74C()
{
  return MEMORY[0x24BEB9790]();
}

uint64_t sub_23F61B758()
{
  return MEMORY[0x24BEB9798]();
}

uint64_t sub_23F61B764()
{
  return MEMORY[0x24BEB97A0]();
}

uint64_t sub_23F61B770()
{
  return MEMORY[0x24BEB97A8]();
}

uint64_t sub_23F61B77C()
{
  return MEMORY[0x24BEB97B0]();
}

uint64_t sub_23F61B788()
{
  return MEMORY[0x24BEB97B8]();
}

uint64_t sub_23F61B794()
{
  return MEMORY[0x24BEB97C8]();
}

uint64_t sub_23F61B7A0()
{
  return MEMORY[0x24BEB97D0]();
}

uint64_t sub_23F61B7AC()
{
  return MEMORY[0x24BEB97D8]();
}

uint64_t sub_23F61B7B8()
{
  return MEMORY[0x24BEB97E8]();
}

uint64_t sub_23F61B7C4()
{
  return MEMORY[0x24BEB97F0]();
}

uint64_t sub_23F61B7D0()
{
  return MEMORY[0x24BEB9820]();
}

uint64_t sub_23F61B7DC()
{
  return MEMORY[0x24BEB9828]();
}

uint64_t sub_23F61B7E8()
{
  return MEMORY[0x24BEB9830]();
}

uint64_t sub_23F61B7F4()
{
  return MEMORY[0x24BEB9838]();
}

uint64_t sub_23F61B800()
{
  return MEMORY[0x24BEB9840]();
}

uint64_t sub_23F61B80C()
{
  return MEMORY[0x24BEB9848]();
}

uint64_t sub_23F61B818()
{
  return MEMORY[0x24BEB9850]();
}

uint64_t sub_23F61B824()
{
  return MEMORY[0x24BEB9858]();
}

uint64_t sub_23F61B830()
{
  return MEMORY[0x24BEB9860]();
}

uint64_t sub_23F61B83C()
{
  return MEMORY[0x24BEB9868]();
}

uint64_t sub_23F61B848()
{
  return MEMORY[0x24BEB9878]();
}

uint64_t sub_23F61B854()
{
  return MEMORY[0x24BEB9880]();
}

uint64_t sub_23F61B860()
{
  return MEMORY[0x24BEB9888]();
}

uint64_t sub_23F61B86C()
{
  return MEMORY[0x24BEB9890]();
}

uint64_t sub_23F61B878()
{
  return MEMORY[0x24BEB9898]();
}

uint64_t sub_23F61B884()
{
  return MEMORY[0x24BEB98A8]();
}

uint64_t sub_23F61B890()
{
  return MEMORY[0x24BEB98B0]();
}

uint64_t sub_23F61B89C()
{
  return MEMORY[0x24BEB98B8]();
}

uint64_t sub_23F61B8A8()
{
  return MEMORY[0x24BEB9970]();
}

uint64_t sub_23F61B8B4()
{
  return MEMORY[0x24BEB9978]();
}

uint64_t sub_23F61B8C0()
{
  return MEMORY[0x24BEB9980]();
}

uint64_t sub_23F61B8CC()
{
  return MEMORY[0x24BEB99A0]();
}

uint64_t sub_23F61B8D8()
{
  return MEMORY[0x24BE53FC8]();
}

uint64_t sub_23F61B8E4()
{
  return MEMORY[0x24BE53FD0]();
}

uint64_t sub_23F61B8F0()
{
  return MEMORY[0x24BEB99A8]();
}

uint64_t sub_23F61B8FC()
{
  return MEMORY[0x24BEB99B8]();
}

uint64_t sub_23F61B908()
{
  return MEMORY[0x24BE57008]();
}

uint64_t sub_23F61B914()
{
  return MEMORY[0x24BEB99C0]();
}

uint64_t sub_23F61B920()
{
  return MEMORY[0x24BEB99D0]();
}

uint64_t sub_23F61B92C()
{
  return MEMORY[0x24BEB9A18]();
}

uint64_t sub_23F61B938()
{
  return MEMORY[0x24BEB9A68]();
}

uint64_t sub_23F61B944()
{
  return MEMORY[0x24BEB9A70]();
}

uint64_t sub_23F61B950()
{
  return MEMORY[0x24BEB9A78]();
}

uint64_t sub_23F61B95C()
{
  return MEMORY[0x24BEB9AB8]();
}

uint64_t sub_23F61B968()
{
  return MEMORY[0x24BEB9AE8]();
}

uint64_t sub_23F61B974()
{
  return MEMORY[0x24BEB9AF0]();
}

uint64_t sub_23F61B980()
{
  return MEMORY[0x24BEB9AF8]();
}

uint64_t sub_23F61B98C()
{
  return MEMORY[0x24BEB9B30]();
}

uint64_t sub_23F61B998()
{
  return MEMORY[0x24BEB9B70]();
}

uint64_t sub_23F61B9A4()
{
  return MEMORY[0x24BEB9BA0]();
}

uint64_t sub_23F61B9B0()
{
  return MEMORY[0x24BEB9C30]();
}

uint64_t sub_23F61B9BC()
{
  return MEMORY[0x24BEB9CD8]();
}

uint64_t sub_23F61B9C8()
{
  return MEMORY[0x24BEB9CE8]();
}

uint64_t sub_23F61B9D4()
{
  return MEMORY[0x24BEB9CF0]();
}

uint64_t sub_23F61B9E0()
{
  return MEMORY[0x24BE57018]();
}

uint64_t sub_23F61B9EC()
{
  return MEMORY[0x24BEB9D20]();
}

uint64_t sub_23F61B9F8()
{
  return MEMORY[0x24BEB9D58]();
}

uint64_t sub_23F61BA04()
{
  return MEMORY[0x24BEB9DB8]();
}

uint64_t sub_23F61BA10()
{
  return MEMORY[0x24BEB9DD0]();
}

uint64_t sub_23F61BA1C()
{
  return MEMORY[0x24BEB9DE0]();
}

uint64_t sub_23F61BA28()
{
  return MEMORY[0x24BEB9DF8]();
}

uint64_t sub_23F61BA34()
{
  return MEMORY[0x24BEB9E00]();
}

uint64_t sub_23F61BA40()
{
  return MEMORY[0x24BEB9E18]();
}

uint64_t sub_23F61BA4C()
{
  return MEMORY[0x24BEB9E60]();
}

uint64_t sub_23F61BA58()
{
  return MEMORY[0x24BEB9E88]();
}

uint64_t sub_23F61BA64()
{
  return MEMORY[0x24BEB9E90]();
}

uint64_t sub_23F61BA70()
{
  return MEMORY[0x24BEB9EF0]();
}

uint64_t sub_23F61BA7C()
{
  return MEMORY[0x24BEB9F30]();
}

uint64_t sub_23F61BA88()
{
  return MEMORY[0x24BEB9F38]();
}

uint64_t sub_23F61BA94()
{
  return MEMORY[0x24BEB9F50]();
}

uint64_t sub_23F61BAA0()
{
  return MEMORY[0x24BEB9F58]();
}

uint64_t sub_23F61BAAC()
{
  return MEMORY[0x24BEB9F60]();
}

uint64_t sub_23F61BAB8()
{
  return MEMORY[0x24BEB9FA8]();
}

uint64_t sub_23F61BAC4()
{
  return MEMORY[0x24BEBA0E0]();
}

uint64_t sub_23F61BAD0()
{
  return MEMORY[0x24BEBA110]();
}

uint64_t sub_23F61BADC()
{
  return MEMORY[0x24BEBA120]();
}

uint64_t sub_23F61BAE8()
{
  return MEMORY[0x24BEBA148]();
}

uint64_t sub_23F61BAF4()
{
  return MEMORY[0x24BEBA160]();
}

uint64_t sub_23F61BB00()
{
  return MEMORY[0x24BEBA178]();
}

uint64_t sub_23F61BB0C()
{
  return MEMORY[0x24BEBA288]();
}

uint64_t sub_23F61BB18()
{
  return MEMORY[0x24BEBA2A0]();
}

uint64_t sub_23F61BB24()
{
  return MEMORY[0x24BEBA2B0]();
}

uint64_t sub_23F61BB30()
{
  return MEMORY[0x24BEBA2B8]();
}

uint64_t sub_23F61BB3C()
{
  return MEMORY[0x24BEBA2F0]();
}

uint64_t sub_23F61BB48()
{
  return MEMORY[0x24BEBA300]();
}

uint64_t sub_23F61BB54()
{
  return MEMORY[0x24BEBA310]();
}

uint64_t sub_23F61BB60()
{
  return MEMORY[0x24BEBA330]();
}

uint64_t sub_23F61BB6C()
{
  return MEMORY[0x24BEBA338]();
}

uint64_t sub_23F61BB78()
{
  return MEMORY[0x24BEBA348]();
}

uint64_t sub_23F61BB84()
{
  return MEMORY[0x24BEBA350]();
}

uint64_t sub_23F61BB90()
{
  return MEMORY[0x24BEBA358]();
}

uint64_t sub_23F61BB9C()
{
  return MEMORY[0x24BEBA360]();
}

uint64_t sub_23F61BBA8()
{
  return MEMORY[0x24BEBA368]();
}

uint64_t sub_23F61BBB4()
{
  return MEMORY[0x24BEBA388]();
}

uint64_t sub_23F61BBC0()
{
  return MEMORY[0x24BEBA390]();
}

uint64_t sub_23F61BBCC()
{
  return MEMORY[0x24BEBA398]();
}

uint64_t sub_23F61BBD8()
{
  return MEMORY[0x24BEBA3A8]();
}

uint64_t sub_23F61BBE4()
{
  return MEMORY[0x24BEBA418]();
}

uint64_t sub_23F61BBF0()
{
  return MEMORY[0x24BEBA420]();
}

uint64_t sub_23F61BBFC()
{
  return MEMORY[0x24BEBA428]();
}

uint64_t sub_23F61BC08()
{
  return MEMORY[0x24BEBA438]();
}

uint64_t sub_23F61BC14()
{
  return MEMORY[0x24BEBA448]();
}

uint64_t sub_23F61BC20()
{
  return MEMORY[0x24BEBA468]();
}

uint64_t sub_23F61BC2C()
{
  return MEMORY[0x24BEBA480]();
}

uint64_t sub_23F61BC38()
{
  return MEMORY[0x24BEBA490]();
}

uint64_t sub_23F61BC44()
{
  return MEMORY[0x24BEBA498]();
}

uint64_t sub_23F61BC50()
{
  return MEMORY[0x24BEBA4A8]();
}

uint64_t sub_23F61BC5C()
{
  return MEMORY[0x24BEBA4B0]();
}

uint64_t sub_23F61BC68()
{
  return MEMORY[0x24BEBA4C8]();
}

uint64_t sub_23F61BC74()
{
  return MEMORY[0x24BEBA4D0]();
}

uint64_t sub_23F61BC80()
{
  return MEMORY[0x24BEBA4E8]();
}

uint64_t sub_23F61BC8C()
{
  return MEMORY[0x24BEBA4F0]();
}

uint64_t sub_23F61BC98()
{
  return MEMORY[0x24BEBA508]();
}

uint64_t sub_23F61BCA4()
{
  return MEMORY[0x24BEBA550]();
}

uint64_t sub_23F61BCB0()
{
  return MEMORY[0x24BEBA560]();
}

uint64_t sub_23F61BCBC()
{
  return MEMORY[0x24BEBA568]();
}

uint64_t sub_23F61BCC8()
{
  return MEMORY[0x24BE57028]();
}

uint64_t sub_23F61BCD4()
{
  return MEMORY[0x24BEBA5C0]();
}

uint64_t sub_23F61BCE0()
{
  return MEMORY[0x24BEBA5E0]();
}

uint64_t sub_23F61BCEC()
{
  return MEMORY[0x24BEBA610]();
}

uint64_t sub_23F61BCF8()
{
  return MEMORY[0x24BEBA618]();
}

uint64_t sub_23F61BD04()
{
  return MEMORY[0x24BEBA630]();
}

uint64_t sub_23F61BD10()
{
  return MEMORY[0x24BEBA638]();
}

uint64_t sub_23F61BD1C()
{
  return MEMORY[0x24BEBA658]();
}

uint64_t sub_23F61BD28()
{
  return MEMORY[0x24BEBA670]();
}

uint64_t sub_23F61BD34()
{
  return MEMORY[0x24BEBA6B8]();
}

uint64_t sub_23F61BD40()
{
  return MEMORY[0x24BEBA6C0]();
}

uint64_t sub_23F61BD4C()
{
  return MEMORY[0x24BEBA738]();
}

uint64_t sub_23F61BD58()
{
  return MEMORY[0x24BEBA740]();
}

uint64_t sub_23F61BD64()
{
  return MEMORY[0x24BEBA748]();
}

uint64_t sub_23F61BD70()
{
  return MEMORY[0x24BEBA750]();
}

uint64_t sub_23F61BD7C()
{
  return MEMORY[0x24BEE54D0]();
}

uint64_t sub_23F61BD88()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_23F61BD94()
{
  return MEMORY[0x24BEE5558]();
}

uint64_t sub_23F61BDA0()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_23F61BDAC()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_23F61BDB8()
{
  return MEMORY[0x24BE5EA10]();
}

uint64_t sub_23F61BDC4()
{
  return MEMORY[0x24BE5EA28]();
}

uint64_t sub_23F61BDD0()
{
  return MEMORY[0x24BE5EA38]();
}

uint64_t sub_23F61BDDC()
{
  return MEMORY[0x24BE5EA48]();
}

uint64_t sub_23F61BDE8()
{
  return MEMORY[0x24BE5EA58]();
}

uint64_t sub_23F61BDF4()
{
  return MEMORY[0x24BE5EA78]();
}

uint64_t sub_23F61BE00()
{
  return MEMORY[0x24BE5EA80]();
}

uint64_t sub_23F61BE0C()
{
  return MEMORY[0x24BE5EA90]();
}

uint64_t sub_23F61BE18()
{
  return MEMORY[0x24BE5EA98]();
}

uint64_t sub_23F61BE24()
{
  return MEMORY[0x24BE5EAA8]();
}

uint64_t sub_23F61BE30()
{
  return MEMORY[0x24BE5EAB0]();
}

uint64_t sub_23F61BE3C()
{
  return MEMORY[0x24BE5EAB8]();
}

uint64_t sub_23F61BE48()
{
  return MEMORY[0x24BE5EAC0]();
}

uint64_t sub_23F61BE54()
{
  return MEMORY[0x24BE5EAC8]();
}

uint64_t sub_23F61BE60()
{
  return MEMORY[0x24BE5EAE8]();
}

uint64_t sub_23F61BE6C()
{
  return MEMORY[0x24BE5EB00]();
}

uint64_t sub_23F61BE78()
{
  return MEMORY[0x24BDC62A8]();
}

uint64_t sub_23F61BE84()
{
  return MEMORY[0x24BDC62B0]();
}

uint64_t sub_23F61BE90()
{
  return MEMORY[0x24BDC62C8]();
}

uint64_t sub_23F61BE9C()
{
  return MEMORY[0x24BDC62F0]();
}

uint64_t sub_23F61BEA8()
{
  return MEMORY[0x24BDC6AC0]();
}

uint64_t sub_23F61BEB4()
{
  return MEMORY[0x24BDC6AF8]();
}

uint64_t sub_23F61BEC0()
{
  return MEMORY[0x24BDC6B60]();
}

uint64_t sub_23F61BECC()
{
  return MEMORY[0x24BDC6B68]();
}

uint64_t sub_23F61BED8()
{
  return MEMORY[0x24BDC6B78]();
}

uint64_t sub_23F61BEE4()
{
  return MEMORY[0x24BDC6B80]();
}

uint64_t sub_23F61BEF0()
{
  return MEMORY[0x24BDC6BA8]();
}

uint64_t sub_23F61BEFC()
{
  return MEMORY[0x24BE7A7E0]();
}

uint64_t sub_23F61BF08()
{
  return MEMORY[0x24BE7A808]();
}

uint64_t sub_23F61BF14()
{
  return MEMORY[0x24BE7A900]();
}

uint64_t sub_23F61BF20()
{
  return MEMORY[0x24BE7A908]();
}

uint64_t sub_23F61BF2C()
{
  return MEMORY[0x24BE7AB88]();
}

uint64_t sub_23F61BF38()
{
  return MEMORY[0x24BE3C8C8]();
}

uint64_t sub_23F61BF44()
{
  return MEMORY[0x24BE3BA58]();
}

uint64_t sub_23F61BF50()
{
  return MEMORY[0x24BEB8678]();
}

uint64_t sub_23F61BF5C()
{
  return MEMORY[0x24BEB8680]();
}

uint64_t sub_23F61BF68()
{
  return MEMORY[0x24BEB8690]();
}

uint64_t sub_23F61BF74()
{
  return MEMORY[0x24BEB86A0]();
}

uint64_t sub_23F61BF80()
{
  return MEMORY[0x24BEB86B8]();
}

uint64_t sub_23F61BF8C()
{
  return MEMORY[0x24BE3B080]();
}

uint64_t sub_23F61BF98()
{
  return MEMORY[0x24BE7ACF8]();
}

uint64_t sub_23F61BFA4()
{
  return MEMORY[0x24BEE01A8]();
}

uint64_t sub_23F61BFB0()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23F61BFBC()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_23F61BFC8()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_23F61BFD4()
{
  return MEMORY[0x24BEE0298]();
}

uint64_t sub_23F61BFE0()
{
  return MEMORY[0x24BE92C40]();
}

uint64_t sub_23F61BFEC()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_23F61BFF8()
{
  return MEMORY[0x24BEE02C0]();
}

uint64_t sub_23F61C004()
{
  return MEMORY[0x24BEE0418]();
}

uint64_t sub_23F61C010()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_23F61C01C()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_23F61C028()
{
  return MEMORY[0x24BE57038]();
}

uint64_t sub_23F61C034()
{
  return MEMORY[0x24BE57040]();
}

uint64_t sub_23F61C040()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23F61C04C()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_23F61C058()
{
  return MEMORY[0x24BEE75C8]();
}

uint64_t sub_23F61C064()
{
  return MEMORY[0x24BEE75E8]();
}

uint64_t sub_23F61C070()
{
  return MEMORY[0x24BEE75F0]();
}

uint64_t sub_23F61C07C()
{
  return MEMORY[0x24BEE75F8]();
}

uint64_t sub_23F61C088()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_23F61C094()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_23F61C0A0()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23F61C0AC()
{
  return MEMORY[0x24BDCF890]();
}

uint64_t sub_23F61C0B8()
{
  return MEMORY[0x24BDCF8A0]();
}

uint64_t sub_23F61C0C4()
{
  return MEMORY[0x24BDCF8D8]();
}

uint64_t sub_23F61C0D0()
{
  return MEMORY[0x24BDCF978]();
}

uint64_t sub_23F61C0DC()
{
  return MEMORY[0x24BDCF990]();
}

uint64_t sub_23F61C0E8()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23F61C0F4()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_23F61C100()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_23F61C10C()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23F61C118()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_23F61C124()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_23F61C130()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_23F61C13C()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_23F61C148()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_23F61C154()
{
  return MEMORY[0x24BDCFB20]();
}

uint64_t sub_23F61C160()
{
  return MEMORY[0x24BDCFB38]();
}

uint64_t sub_23F61C16C()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23F61C178()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_23F61C184()
{
  return MEMORY[0x24BEE0A20]();
}

uint64_t sub_23F61C190()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_23F61C19C()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_23F61C1A8()
{
  return MEMORY[0x24BEE0A70]();
}

uint64_t sub_23F61C1B4()
{
  return MEMORY[0x24BEE0A80]();
}

uint64_t sub_23F61C1C0()
{
  return MEMORY[0x24BEE0A88]();
}

uint64_t sub_23F61C1CC()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_23F61C1D8()
{
  return MEMORY[0x24BE57048]();
}

uint64_t sub_23F61C1E4()
{
  return MEMORY[0x24BE57050]();
}

uint64_t sub_23F61C1F0()
{
  return MEMORY[0x24BE57058]();
}

uint64_t sub_23F61C1FC()
{
  return MEMORY[0x24BE57060]();
}

uint64_t sub_23F61C208()
{
  return MEMORY[0x24BE57068]();
}

uint64_t sub_23F61C214()
{
  return MEMORY[0x24BE57070]();
}

uint64_t sub_23F61C220()
{
  return MEMORY[0x24BE57078]();
}

uint64_t sub_23F61C22C()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23F61C238()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_23F61C244()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_23F61C250()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_23F61C25C()
{
  return MEMORY[0x24BEE0B88]();
}

uint64_t sub_23F61C268()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_23F61C274()
{
  return MEMORY[0x24BEE0BB8]();
}

uint64_t sub_23F61C280()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23F61C28C()
{
  return MEMORY[0x24BEE0BC8]();
}

uint64_t sub_23F61C298()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_23F61C2A4()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_23F61C2B0()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23F61C2BC()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_23F61C2C8()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_23F61C2D4()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_23F61C2E0()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_23F61C2EC()
{
  return MEMORY[0x24BEE0C70]();
}

uint64_t sub_23F61C2F8()
{
  return MEMORY[0x24BEE0C80]();
}

uint64_t sub_23F61C304()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_23F61C310()
{
  return MEMORY[0x24BEE0CC8]();
}

uint64_t sub_23F61C31C()
{
  return MEMORY[0x24BEE0CD0]();
}

uint64_t sub_23F61C328()
{
  return MEMORY[0x24BEE0CE8]();
}

uint64_t sub_23F61C334()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_23F61C340()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_23F61C34C()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_23F61C358()
{
  return MEMORY[0x24BDCFB60]();
}

uint64_t sub_23F61C364()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_23F61C370()
{
  return MEMORY[0x24BEE0DF8]();
}

uint64_t sub_23F61C37C()
{
  return MEMORY[0x24BEE0EB8]();
}

uint64_t sub_23F61C388()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_23F61C394()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_23F61C3A0()
{
  return MEMORY[0x24BEE1008]();
}

uint64_t sub_23F61C3AC()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_23F61C3B8()
{
  return MEMORY[0x24BEE1088]();
}

uint64_t sub_23F61C3C4()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_23F61C3D0()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23F61C3DC()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23F61C3E8()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_23F61C3F4()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23F61C400()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23F61C40C()
{
  return MEMORY[0x24BEE1168]();
}

uint64_t sub_23F61C418()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23F61C424()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_23F61C430()
{
  return MEMORY[0x24BEE1368]();
}

uint64_t sub_23F61C43C()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23F61C448()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_23F61C454()
{
  return MEMORY[0x24BEE6860]();
}

uint64_t sub_23F61C460()
{
  return MEMORY[0x24BEE6888]();
}

uint64_t sub_23F61C46C()
{
  return MEMORY[0x24BEE68C8]();
}

uint64_t sub_23F61C478()
{
  return MEMORY[0x24BEE6938]();
}

uint64_t sub_23F61C484()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_23F61C490()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_23F61C49C()
{
  return MEMORY[0x24BEE6AC0]();
}

uint64_t sub_23F61C4A8()
{
  return MEMORY[0x24BEE6AD8]();
}

uint64_t sub_23F61C4B4()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_23F61C4C0()
{
  return MEMORY[0x24BEE6B28]();
}

uint64_t sub_23F61C4CC()
{
  return MEMORY[0x24BEE6B98]();
}

uint64_t sub_23F61C4D8()
{
  return MEMORY[0x24BEE6BB8]();
}

uint64_t sub_23F61C4E4()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_23F61C4F0()
{
  return MEMORY[0x24BEE1370]();
}

uint64_t sub_23F61C4FC()
{
  return MEMORY[0x24BDCFC78]();
}

uint64_t sub_23F61C508()
{
  return MEMORY[0x24BDCFC80]();
}

uint64_t sub_23F61C514()
{
  return MEMORY[0x24BDCFCB0]();
}

uint64_t sub_23F61C520()
{
  return MEMORY[0x24BEE14C8]();
}

uint64_t sub_23F61C52C()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_23F61C538()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_23F61C544()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_23F61C550()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_23F61C55C()
{
  return MEMORY[0x24BEE15E0]();
}

uint64_t sub_23F61C568()
{
  return MEMORY[0x24BDCFD18]();
}

uint64_t sub_23F61C574()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_23F61C580()
{
  return MEMORY[0x24BDCFD50]();
}

uint64_t sub_23F61C58C()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_23F61C598()
{
  return MEMORY[0x24BE57090]();
}

uint64_t sub_23F61C5A4()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_23F61C5B0()
{
  return MEMORY[0x24BEE1A20]();
}

uint64_t sub_23F61C5BC()
{
  return MEMORY[0x24BEE7650]();
}

uint64_t sub_23F61C5C8()
{
  return MEMORY[0x24BEE7658]();
}

uint64_t sub_23F61C5D4()
{
  return MEMORY[0x24BEE7660]();
}

uint64_t sub_23F61C5E0()
{
  return MEMORY[0x24BEE7668]();
}

uint64_t sub_23F61C5EC()
{
  return MEMORY[0x24BDCFD70]();
}

uint64_t sub_23F61C5F8()
{
  return MEMORY[0x24BEE5B30]();
}

uint64_t sub_23F61C604()
{
  return MEMORY[0x24BDCFED8]();
}

uint64_t sub_23F61C610()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_23F61C61C()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23F61C628()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23F61C634()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23F61C640()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23F61C64C()
{
  return MEMORY[0x24BE53FF0]();
}

uint64_t sub_23F61C658()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_23F61C664()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_23F61C670()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_23F61C67C()
{
  return MEMORY[0x24BEA3850]();
}

uint64_t sub_23F61C688()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_23F61C694()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_23F61C6A0()
{
  return MEMORY[0x24BEE5B60]();
}

uint64_t sub_23F61C6AC()
{
  return MEMORY[0x24BEE5B68]();
}

uint64_t sub_23F61C6B8()
{
  return MEMORY[0x24BDD01E0]();
}

uint64_t sub_23F61C6C4()
{
  return MEMORY[0x24BDD01F8]();
}

uint64_t sub_23F61C6D0()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_23F61C6DC()
{
  return MEMORY[0x24BDD0260]();
}

uint64_t sub_23F61C6E8()
{
  return MEMORY[0x24BDD0278]();
}

uint64_t sub_23F61C6F4()
{
  return MEMORY[0x24BDD02D8]();
}

uint64_t sub_23F61C700()
{
  return MEMORY[0x24BDD02E0]();
}

uint64_t sub_23F61C70C()
{
  return MEMORY[0x24BDD0378]();
}

uint64_t sub_23F61C718()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_23F61C724()
{
  return MEMORY[0x24BE570A8]();
}

uint64_t sub_23F61C730()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23F61C73C()
{
  return MEMORY[0x24BEE1C78]();
}

uint64_t sub_23F61C748()
{
  return MEMORY[0x24BEE1D50]();
}

uint64_t sub_23F61C754()
{
  return MEMORY[0x24BEE1DB8]();
}

uint64_t sub_23F61C760()
{
  return MEMORY[0x24BEE1DF0]();
}

uint64_t sub_23F61C76C()
{
  return MEMORY[0x24BEE1E60]();
}

uint64_t sub_23F61C778()
{
  return MEMORY[0x24BEE1E68]();
}

uint64_t sub_23F61C784()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_23F61C790()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23F61C79C()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23F61C7A8()
{
  return MEMORY[0x24BDD04B8]();
}

uint64_t sub_23F61C7B4()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_23F61C7C0()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_23F61C7CC()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_23F61C7D8()
{
  return MEMORY[0x24BDD0580]();
}

uint64_t sub_23F61C7E4()
{
  return MEMORY[0x24BDD0600]();
}

uint64_t sub_23F61C7F0()
{
  return MEMORY[0x24BDD0630]();
}

uint64_t sub_23F61C7FC()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_23F61C808()
{
  return MEMORY[0x24BEE5E68]();
}

uint64_t sub_23F61C814()
{
  return MEMORY[0x24BEE2028]();
}

uint64_t sub_23F61C820()
{
  return MEMORY[0x24BEE20A0]();
}

uint64_t sub_23F61C82C()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_23F61C838()
{
  return MEMORY[0x24BEE2118]();
}

uint64_t sub_23F61C844()
{
  return MEMORY[0x24BEE2200]();
}

uint64_t sub_23F61C850()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23F61C85C()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23F61C868()
{
  return MEMORY[0x24BEE22D8]();
}

uint64_t sub_23F61C874()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_23F61C880()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_23F61C88C()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_23F61C898()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_23F61C8A4()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_23F61C8B0()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23F61C8BC()
{
  return MEMORY[0x24BEE24F0]();
}

uint64_t sub_23F61C8C8()
{
  return MEMORY[0x24BEE2500]();
}

uint64_t sub_23F61C8D4()
{
  return MEMORY[0x24BEE2508]();
}

uint64_t sub_23F61C8E0()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23F61C8EC()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23F61C8F8()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t sub_23F61C904()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23F61C910()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_23F61C91C()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_23F61C928()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23F61C934()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23F61C940()
{
  return MEMORY[0x24BEE6D68]();
}

uint64_t sub_23F61C94C()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_23F61C958()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_23F61C964()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_23F61C970()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_23F61C97C()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_23F61C988()
{
  return MEMORY[0x24BEE6D80]();
}

uint64_t sub_23F61C994()
{
  return MEMORY[0x24BEE6DC0]();
}

uint64_t sub_23F61C9A0()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_23F61C9AC()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_23F61C9B8()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_23F61C9C4()
{
  return MEMORY[0x24BEE6E28]();
}

uint64_t sub_23F61C9D0()
{
  return MEMORY[0x24BEE6E68]();
}

uint64_t sub_23F61C9DC()
{
  return MEMORY[0x24BEE6E70]();
}

uint64_t sub_23F61C9E8()
{
  return MEMORY[0x24BEE6E90]();
}

uint64_t sub_23F61C9F4()
{
  return MEMORY[0x24BEE6E98]();
}

uint64_t sub_23F61CA00()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23F61CA0C()
{
  return MEMORY[0x24BEE2D50]();
}

uint64_t sub_23F61CA18()
{
  return MEMORY[0x24BEE2E58]();
}

uint64_t sub_23F61CA24()
{
  return MEMORY[0x24BEE2E68]();
}

uint64_t sub_23F61CA30()
{
  return MEMORY[0x24BEE2E70]();
}

uint64_t sub_23F61CA3C()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t sub_23F61CA48()
{
  return MEMORY[0x24BEE2F18]();
}

uint64_t sub_23F61CA54()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23F61CA60()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_23F61CA6C()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23F61CA78()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23F61CA84()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23F61CA90()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23F61CA9C()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23F61CAA8()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_23F61CAB4()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_23F61CAC0()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t sub_23F61CACC()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_23F61CAD8()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_23F61CAE4()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_23F61CAF0()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_23F61CAFC()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_23F61CB08()
{
  return MEMORY[0x24BEE3348]();
}

uint64_t sub_23F61CB14()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23F61CB20()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_23F61CB2C()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_23F61CB38()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_23F61CB44()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23F61CB50()
{
  return MEMORY[0x24BEE33C0]();
}

uint64_t sub_23F61CB5C()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_23F61CB68()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_23F61CB74()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_23F61CB80()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_23F61CB8C()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_23F61CB98()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_23F61CBA4()
{
  return MEMORY[0x24BEE3490]();
}

uint64_t sub_23F61CBB0()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_23F61CBBC()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_23F61CBC8()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_23F61CBD4()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_23F61CBE0()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23F61CBEC()
{
  return MEMORY[0x24BEE3510]();
}

uint64_t sub_23F61CBF8()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_23F61CC04()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_23F61CC10()
{
  return MEMORY[0x24BEE3550]();
}

uint64_t sub_23F61CC1C()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23F61CC28()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_23F61CC34()
{
  return MEMORY[0x24BEE39B0]();
}

uint64_t sub_23F61CC40()
{
  return MEMORY[0x24BEE39E0]();
}

uint64_t sub_23F61CC4C()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_23F61CC58()
{
  return MEMORY[0x24BEE3A28]();
}

uint64_t sub_23F61CC64()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23F61CC70()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_23F61CC7C()
{
  return MEMORY[0x24BEE3DD8]();
}

uint64_t sub_23F61CC88()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_23F61CC94()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23F61CCA0()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_23F61CCAC()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_23F61CCB8()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_23F61CCC4()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23F61CCD0()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23F61CCDC()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23F61CCE8()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23F61CCF4()
{
  return MEMORY[0x24BDD0710]();
}

uint64_t sub_23F61CD00()
{
  return MEMORY[0x24BEE42B8]();
}

uint64_t sub_23F61CD0C()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_23F61CD18()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_23F61CD24()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_23F61CD30()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23F61CD3C()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23F61CD48()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_23F61CD54()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_23F61CD60()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23F61CD6C()
{
  return MEMORY[0x24BE570B8]();
}

uint64_t sub_23F61CD78()
{
  return MEMORY[0x24BDD07F8]();
}

uint64_t sub_23F61CD84()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23F61CD90()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23F61CD9C()
{
  return MEMORY[0x24BEE47F8]();
}

uint64_t sub_23F61CDA8()
{
  return MEMORY[0x24BEE4828]();
}

uint64_t sub_23F61CDB4()
{
  return MEMORY[0x24BEE4830]();
}

uint64_t sub_23F61CDC0()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23F61CDCC()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x24BE1A1B0]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x24BE1A1C8]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x24BE0C258]();
}

uint64_t MGCopyAnswerWithError()
{
  return MEMORY[0x24BED8450]();
}

uint64_t MGGetSInt32Answer()
{
  return MEMORY[0x24BED8490]();
}

uint64_t _AFSupportPreferencesBoolForKeyWithDefault()
{
  return MEMORY[0x24BE09470]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

uint64_t marisa::Trie::mmap(marisa::Trie *this, const char *a2)
{
  return MEMORY[0x24BEDC580](this, a2);
}

uint64_t marisa::Trie::build(marisa::Trie *this, Keyset *a2)
{
  return MEMORY[0x24BEDC588](this, a2);
}

uint64_t marisa::Trie::Trie(marisa::Trie *this)
{
  return MEMORY[0x24BEDC598](this);
}

void marisa::Trie::~Trie(marisa::Trie *this)
{
  MEMORY[0x24BEDC5A0](this);
}

uint64_t marisa::Agent::set_query(marisa::Agent *this, const char *a2)
{
  return MEMORY[0x24BEDC5A8](this, a2);
}

uint64_t marisa::Agent::set_query(marisa::Agent *this)
{
  return MEMORY[0x24BEDC5B0](this);
}

uint64_t marisa::Agent::Agent(marisa::Agent *this)
{
  return MEMORY[0x24BEDC5B8](this);
}

void marisa::Agent::~Agent(marisa::Agent *this)
{
  MEMORY[0x24BEDC5C0](this);
}

uint64_t marisa::Keyset::push_back(marisa::Keyset *this, const char *a2, float a3)
{
  return MEMORY[0x24BEDC5D0](this, a2, a3);
}

uint64_t marisa::Keyset::Keyset(marisa::Keyset *this)
{
  return MEMORY[0x24BEDC5D8](this);
}

uint64_t marisa::Trie::reverse_lookup(marisa::Trie *this, marisa::Agent *a2)
{
  return MEMORY[0x24BEDC5E0](this, a2);
}

uint64_t marisa::Trie::predictive_search(marisa::Trie *this, marisa::Agent *a2)
{
  return MEMORY[0x24BEDC5E8](this, a2);
}

uint64_t marisa::Trie::save(marisa::Trie *this, const char *a2)
{
  return MEMORY[0x24BEDC5F0](this, a2);
}

uint64_t marisa::Trie::size(marisa::Trie *this)
{
  return MEMORY[0x24BEDC5F8](this);
}

uint64_t marisa::Trie::lookup(marisa::Trie *this, marisa::Agent *a2)
{
  return MEMORY[0x24BEDC608](this, a2);
}

uint64_t marisa::Trie::num_keys(marisa::Trie *this)
{
  return MEMORY[0x24BEDC610](this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x24BEDAAA8](this, a2);
}

void std::terminate(void)
{
  MEMORY[0x24BEDB6C0]();
}

uint64_t operator delete[]()
{
  return off_250FD0078();
}

void operator delete(void *__p)
{
  off_250FD0080(__p);
}

void *__cdecl operator new(size_t __sz)
{
  return (void *)off_250FD0088(__sz);
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x24BEDB8F8](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x24BEDB910](a1);
}

void __cxa_end_catch(void)
{
  MEMORY[0x24BEDB928]();
}

void __cxa_free_exception(void *a1)
{
  MEMORY[0x24BEDB930](a1);
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
  MEMORY[0x24BEDB960](a1, lptinfo, a3);
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x24BEDCE10]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x24BEDCE18]();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB80](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x24BEE4B48]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

long double log(long double __x)
{
  long double result;

  MEMORY[0x24BDAEAA8](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x24BDAEEA8](__b, *(_QWORD *)&__c, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x24BEDCFB0](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x24BEDCFC0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)((uint64_t (*)(id, SEL))MEMORY[0x24BEDD108])(a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x24BDAF368](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

long double pow(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAF688](__x, __y);
  return result;
}

char *__cdecl strchr(char *__s, int __c)
{
  return (char *)MEMORY[0x24BDAFEE8](__s, *(_QWORD *)&__c);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x24BDAFF40](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x24BEE7198]();
}

uint64_t swift_asyncLet_finish()
{
  return MEMORY[0x24BEE71A0]();
}

uint64_t swift_asyncLet_get_throwing()
{
  return MEMORY[0x24BEE71B0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocBox()
{
  return MEMORY[0x24BEE4BF8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x24BEE4C20]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x24BEE4DD8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x24BEE4E38]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x24BEE4E50]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x24BEE4E80]();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return MEMORY[0x24BEE4E88]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_readAtKeyPath()
{
  return MEMORY[0x24BEE4ED8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x24BEE4F28]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_taskGroup_addPending()
{
  return MEMORY[0x24BEE7210]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

uint64_t tcc_authorization_record_get_authorization_right()
{
  return MEMORY[0x24BEB39B0]();
}

uint64_t tcc_authorization_record_get_service()
{
  return MEMORY[0x24BEB39C0]();
}

uint64_t tcc_identity_create()
{
  return MEMORY[0x24BEB39E8]();
}

uint64_t tcc_message_options_create()
{
  return MEMORY[0x24BEB3A08]();
}

uint64_t tcc_message_options_set_reply_handler_policy()
{
  return MEMORY[0x24BEB3A10]();
}

uint64_t tcc_server_create()
{
  return MEMORY[0x24BEB3A20]();
}

uint64_t tcc_server_message_get_authorization_records_by_identity()
{
  return MEMORY[0x24BEB3A28]();
}

uint64_t tcc_service_get_name()
{
  return MEMORY[0x24BEB3A48]();
}

