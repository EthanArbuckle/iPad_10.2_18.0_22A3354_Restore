uint64_t sub_23F4493C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E747B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t FullPlannerService.handle(_:plannerServiceContext:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[20] = a1;
  v2[21] = v1;
  v3 = sub_23F3B1728();
  v2[22] = v3;
  v2[23] = *(_QWORD *)(v3 - 8);
  v2[24] = sub_23F366578();
  v4 = sub_23F61B2E4();
  v2[25] = v4;
  v2[26] = *(_QWORD *)(v4 - 8);
  v2[27] = sub_23F366654();
  v2[28] = sub_23F3666CC();
  v2[29] = *(_QWORD *)(sub_23F35D2E8(&qword_256E702E0) - 8);
  v2[30] = sub_23F366654();
  v2[31] = sub_23F3666CC();
  v5 = sub_23F619E50();
  v2[32] = v5;
  v2[33] = *(_QWORD *)(v5 - 8);
  v2[34] = sub_23F366654();
  v2[35] = sub_23F3666CC();
  v2[36] = sub_23F3666CC();
  v6 = sub_23F428AC4();
  v2[37] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[38] = v7;
  v2[39] = *(_QWORD *)(v7 + 64);
  v2[40] = swift_task_alloc();
  v2[41] = type metadata accessor for FullPlannerResponse(0);
  v2[42] = sub_23F366578();
  v2[43] = type metadata accessor for FullPlannerRequest(0);
  v2[44] = sub_23F366578();
  v8 = sub_23F619E20();
  v2[45] = v8;
  v2[46] = *(_QWORD *)(v8 - 8);
  v2[47] = sub_23F366654();
  v2[48] = sub_23F3666CC();
  v2[49] = sub_23F3666CC();
  v2[50] = sub_23F3666CC();
  v2[51] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F449554()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint8_t *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  NSObject *v26;
  os_signpost_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint8_t *v33;
  os_signpost_id_t v34;
  NSObject *v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  __int128 *v38;

  v38 = (__int128 *)(v0 + 56);
  if (qword_256E6EEC0 != -1)
    swift_once();
  v1 = sub_23F619E44();
  *(_QWORD *)(v0 + 416) = sub_23F361498(v1, (uint64_t)qword_256E7FEE8);
  sub_23F619E38();
  sub_23F619DFC();
  v2 = sub_23F619E38();
  v3 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v4 = (uint8_t *)sub_23F3EEE70();
    *(_WORD *)v4 = 0;
    v5 = sub_23F619E08();
    sub_23F44D498(&dword_23F35A000, v2, v3, v5, "FullPlannerService.handle", "", v4);
    sub_23F366530();
  }
  v6 = *(_QWORD *)(v0 + 400);
  v7 = *(_QWORD *)(v0 + 408);
  v8 = *(_QWORD *)(v0 + 368);
  v9 = *(_QWORD *)(v0 + 168);

  sub_23F4244A8(v6, v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  sub_23F619E74();
  sub_23F3668A0();
  *(_QWORD *)(v0 + 424) = sub_23F619E68();
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  *(_QWORD *)(v0 + 432) = v10;
  sub_23F42652C(v10);
  sub_23F3B1450();
  sub_23F44BDB0(v9 + 16, (uint64_t)v38, &qword_256E747B8);
  if (*(_QWORD *)(v0 + 80))
  {
    v11 = *(_QWORD *)(v0 + 320);
    v12 = *(_QWORD *)(v0 + 304);
    v13 = *(_QWORD *)(v0 + 160);
    sub_23F362678(v38, v0 + 16);
    sub_23F61B128();
    sub_23F5F4714();
    *(_QWORD *)(v0 + 440) = v14;
    sub_23F382FC4(v0 + 16, v0 + 96);
    sub_23F4244A8(v11, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
    v15 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v16 = swift_allocObject();
    *(_QWORD *)(v0 + 448) = v16;
    sub_23F362678((__int128 *)(v0 + 96), v16 + 16);
    sub_23F4244A8(v16 + v15, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32));
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 456) = v17;
    sub_23F3612C0(&qword_256E747D8, type metadata accessor for FullPlannerRequest, (uint64_t)&protocol conformance descriptor for FullPlannerRequest);
    sub_23F3612C0(&qword_256E747E0, type metadata accessor for FullPlannerRequest, (uint64_t)&protocol conformance descriptor for FullPlannerRequest);
    sub_23F3612C0(&qword_256E747E8, type metadata accessor for FullPlannerResponse, (uint64_t)&protocol conformance descriptor for FullPlannerResponse);
    sub_23F3612C0(&qword_256E747F0, type metadata accessor for FullPlannerResponse, (uint64_t)&protocol conformance descriptor for FullPlannerResponse);
    *v17 = v0;
    v17[1] = sub_23F449AE4;
    return sub_23F617258();
  }
  else
  {
    sub_23F3625D8((uint64_t)v38, &qword_256E747B8);
    sub_23F3B2130();
    v19 = sub_23F619E8C();
    v20 = sub_23F61C628();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_23F35A000, v19, v20, "Could not run full planner; setup() has not been called before handle(_:)",
        v21,
        2u);
      sub_23F366530();
    }
    v23 = *(_QWORD *)(v0 + 184);
    v22 = *(_QWORD *)(v0 + 192);
    v24 = *(_QWORD *)(v0 + 176);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    sub_23F43A570();
    swift_allocError();
    *v25 = 9;
    swift_willThrow();
    v26 = sub_23F619E38();
    sub_23F619E5C();
    v27 = sub_23F61C688();
    if ((sub_23F61C718() & 1) != 0)
    {
      v28 = *(_QWORD *)(v0 + 280);
      v30 = *(_QWORD *)(v0 + 256);
      v29 = *(_QWORD *)(v0 + 264);
      swift_retain();
      sub_23F619E80();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v29 + 88))(v28, v30) == *MEMORY[0x24BEE7810])
      {
        v31 = "[Error] Interval already ended";
      }
      else
      {
        sub_23F384274(*(_QWORD *)(v0 + 264));
        v31 = "";
      }
      v33 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v33 = 0;
      v34 = sub_23F619E08();
      sub_23F44D498(&dword_23F35A000, v26, v27, v34, "FullPlannerService.handle", v31, v33);
      sub_23F366530();
    }
    v32 = *(_QWORD *)(v0 + 384);
    v35 = v26;
    v36 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    v37 = *(_QWORD *)(v0 + 360);

    v36(v32, v37);
    sub_23F3D9AF4();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F3666EC();
    sub_23F362CC8();
    sub_23F3666DC();
    swift_task_dealloc();
    sub_23F3668DC();
    swift_task_dealloc();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23F449AE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 464) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_23F3D9AF4();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F3D9AF4();
  }
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F449B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, unint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_signpost_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint8_t *v26;
  os_signpost_id_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 200);
  sub_23F35D2E8(&qword_256E747F8);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23F61E7E0;
  v8 = v7 + v6;
  sub_23F44BDB0(v1, v8, &qword_256E702E0);
  sub_23F44BDB0(v8, v2, &qword_256E702E0);
  sub_23F44BDE8(v2, v3);
  if (sub_23F36195C(v3, 1, v5) == 1)
  {
    sub_23F3625D8(*(_QWORD *)(v0 + 240), &qword_256E702E0);
    v34 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 216);
    v9 = *(_QWORD *)(v0 + 224);
    v11 = *(_QWORD *)(v0 + 200);
    v12 = *(void (**)(unint64_t, unint64_t, uint64_t))(*(_QWORD *)(v0 + 208) + 32);
    v12(v9, *(_QWORD *)(v0 + 240), v11);
    v12(v10, v9, v11);
    v13 = MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F44D4C8();
      v13 = v32;
    }
    v14 = *(_QWORD *)(v13 + 16);
    if (v14 >= *(_QWORD *)(v13 + 24) >> 1)
    {
      sub_23F44D4C8();
      v13 = v33;
    }
    v16 = *(_QWORD *)(v0 + 208);
    v15 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)(v13 + 16) = v14 + 1;
    v34 = v13;
    v12(v13+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v14, v15, v17);
  }
  v18 = *(_QWORD *)(v0 + 352);
  v19 = *(_QWORD *)(v0 + 336);
  swift_setDeallocating();
  sub_23F513624();
  sub_23F3663AC(v19, type metadata accessor for FullPlannerResponse);
  sub_23F3663AC(v18, type metadata accessor for FullPlannerRequest);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  v20 = sub_23F619E38();
  sub_23F619E5C();
  v21 = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    v22 = *(_QWORD *)(v0 + 288);
    v24 = *(_QWORD *)(v0 + 256);
    v23 = *(_QWORD *)(v0 + 264);
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v23 + 88))(v22, v24) == *MEMORY[0x24BEE7810])
    {
      v25 = "[Error] Interval already ended";
    }
    else
    {
      sub_23F384274(*(_QWORD *)(v0 + 264));
      v25 = "";
    }
    v26 = (uint8_t *)sub_23F3EEE70();
    *(_WORD *)v26 = 0;
    v27 = sub_23F619E08();
    sub_23F44D498(&dword_23F35A000, v20, v21, v27, "FullPlannerService.handle", v25, v26);
    sub_23F366530();
  }
  v28 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
  v29 = *(_QWORD *)(v0 + 392);
  v30 = *(_QWORD *)(v0 + 360);

  v28(v29, v30);
  swift_release();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3666C4();
  swift_task_dealloc();
  sub_23F3668DC();
  swift_task_dealloc();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v34);
}

uint64_t sub_23F449EF4()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint8_t *v8;
  os_signpost_id_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  sub_23F3663AC(*(_QWORD *)(v0 + 352), type metadata accessor for FullPlannerRequest);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  v1 = sub_23F619E38();
  sub_23F619E5C();
  v2 = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 264);
    v3 = *(_QWORD *)(v0 + 272);
    v5 = *(_QWORD *)(v0 + 256);
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x24BEE7810])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      sub_23F384274(*(_QWORD *)(v0 + 264));
      v6 = "";
    }
    v8 = (uint8_t *)sub_23F3EEE70();
    *(_WORD *)v8 = 0;
    v9 = sub_23F619E08();
    sub_23F44D498(&dword_23F35A000, v1, v2, v9, "FullPlannerService.handle", v6, v8);
    sub_23F366530();
  }
  v7 = *(_QWORD *)(v0 + 376);
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
  v11 = *(_QWORD *)(v0 + 360);

  v10(v7, v11);
  swift_release();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3666D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FullPlannerRequest.init(transcript:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  sub_23F428AE4();
  sub_23F44D47C();
  return sub_23F3F9C0C(a2, a1, v5, *(uint64_t (**)(void))(v4 + 32));
}

uint64_t sub_23F44A144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a1;
  v5 = sub_23F619E98();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  v6 = sub_23F61B2E4();
  v4[10] = v6;
  v4[11] = *(_QWORD *)(v6 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E702E0);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F44A224()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[4];
  v2 = v1[3];
  v3 = v1[4];
  sub_23F35EA9C(v1, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_23F44A2A8;
  return v6(v0[15], v0[5], v2, v3);
}

uint64_t sub_23F44A2A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F44A300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, uint64_t);
  uint64_t v12;
  void (*v13)(uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 80);
  sub_23F44BDB0(*(_QWORD *)(v0 + 120), v1, &qword_256E702E0);
  if (sub_23F36195C(v1, 1, v2) == 1)
  {
    sub_23F3625D8(*(_QWORD *)(v0 + 112), &qword_256E702E0);
    sub_23F3B2130();
    v3 = (void *)sub_23F619E8C();
    v4 = sub_23F61C628();
    if (sub_23F3F0E3C(v4))
    {
      *(_WORD *)sub_23F3EEE70() = 0;
      sub_23F3F0DF0(&dword_23F35A000, v5, v6, "Could not run full planner. Returning empty response");
      sub_23F366530();
    }
    v7 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 56);
    v10 = *(_QWORD *)(v0 + 24);

    sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    sub_23F3625D8(v7, &qword_256E702E0);
    sub_23F36196C(v10, 1, 1, v8);
    *(_OWORD *)(v10 + *(int *)(type metadata accessor for FullPlannerResponse(0) + 20)) = xmmword_23F620FD0;
  }
  else
  {
    v11 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 88) + 32);
    v11(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 80));
    sub_23F619088();
    v12 = sub_23F3C85C0();
    v13(v12);
    v14 = sub_23F619E8C();
    v15 = sub_23F61C610();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 64);
    v28 = *(_QWORD *)(v0 + 56);
    v19 = *(_QWORD *)(v0 + 48);
    if (v16)
    {
      v20 = (uint8_t *)sub_23F366668();
      v29 = sub_23F366668();
      *(_DWORD *)v20 = 136315138;
      sub_23F3612C0(&qword_256E74B50, (uint64_t (*)(uint64_t))MEMORY[0x24BE56CD0], MEMORY[0x24BE56CF0]);
      v21 = sub_23F61CC1C();
      sub_23F37AE00(v21, v22, &v29);
      *(_QWORD *)(v0 + 16) = v23;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      sub_23F44D488();
      _os_log_impl(&dword_23F35A000, v14, v15, "Response: %s", v20, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F44D488();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v18, v19);
    sub_23F3625D8(v17, &qword_256E702E0);
    v24 = *(_QWORD *)(v0 + 80);
    v25 = *(_QWORD *)(v0 + 24);
    v11(v25, *(_QWORD *)(v0 + 104), v24);
    sub_23F36196C(v25, 0, 1, v24);
    v26 = (_QWORD *)(v25 + *(int *)(type metadata accessor for FullPlannerResponse(0) + 20));
    *v26 = 0;
    v26[1] = 0;
  }
  sub_23F44D4A8();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F44A644()
{
  uint64_t v0;

  sub_23F44D4A8();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void FullPlannerResponse.init(event:status:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *a2;
  v5 = a2[1];
  sub_23F44BDE8(a1, a3);
  v6 = (_QWORD *)(a3 + *(int *)(type metadata accessor for FullPlannerResponse(0) + 20));
  *v6 = v4;
  v6[1] = v5;
  sub_23F362B80();
}

uint64_t FullPlannerService.telemetryTarget.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE54BA0];
  sub_23F619F10();
  sub_23F44D47C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(a1, v2);
}

void FullPlannerService.deinit()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3625D8(v0 + 16, &qword_256E747B8);
  v1 = sub_23F384B34();
  sub_23F362B6C(v1);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime18FullPlannerService_toolExecutionSession);
  swift_bridgeObjectRelease();
  sub_23F362928();
}

uint64_t FullPlannerService.__deallocating_deinit()
{
  FullPlannerService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23F44A794(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F3609AC;
  return FullPlannerService.setup(sessionState:)(a1);
}

uint64_t sub_23F44A7E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F44A834;
  return FullPlannerService.handle(_:plannerServiceContext:)(a1);
}

uint64_t sub_23F44A834(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = sub_23F3629E8();
  if (!v1)
    v4 = a1;
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

uint64_t sub_23F44A86C@<X0>(uint64_t a1@<X8>)
{
  return FullPlannerService.telemetryTarget.getter(a1);
}

uint64_t sub_23F44A880()
{
  char v0;

  static FullPlannerService.isEnabled()();
  return v0 & 1;
}

uint64_t sub_23F44A898()
{
  return sub_23F5ABEC8();
}

uint64_t FullPlannerRequest.transcript.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F428AE4();
  sub_23F44D47C();
  v0 = sub_23F3C85C0();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

uint64_t sub_23F44A8E0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x697263736E617274 && a2 == 0xEA00000000007470)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F44A970()
{
  return 0x697263736E617274;
}

void sub_23F44A98C()
{
  sub_23F44AF38();
}

uint64_t sub_23F44A9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F44A8E0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F44A9D0()
{
  sub_23F44BE30();
  return sub_23F61CDC0();
}

uint64_t sub_23F44A9F8()
{
  sub_23F44BE30();
  return sub_23F61CDCC();
}

void FullPlannerRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23F35D2E8(&qword_256E74800);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F383EC4();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F44BE30();
  sub_23F44D4B8();
  sub_23F61B164();
  sub_23F3612C0(&qword_256E74810, (uint64_t (*)(uint64_t))MEMORY[0x24BE56878], MEMORY[0x24BE56888]);
  sub_23F61CBE0();
  sub_23F362A28(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F3F4040();
}

void FullPlannerRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F362C98();
  v4 = v3;
  v12 = v5;
  v14 = sub_23F61B164();
  v11 = *(_QWORD *)(v14 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v13 = v7;
  v8 = sub_23F35D2E8(&qword_256E74818);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3E2718();
  type metadata accessor for FullPlannerRequest(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3845CC();
  sub_23F35EA9C(v4, v4[3]);
  sub_23F44BE30();
  sub_23F61CD84();
  if (!v0)
  {
    sub_23F3612C0(&qword_256E74820, (uint64_t (*)(uint64_t))MEMORY[0x24BE56878], MEMORY[0x24BE56890]);
    sub_23F61CB44();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v1, v13, v14);
    sub_23F44BE6C(v1, v12);
  }
  sub_23F44D4A0();
  sub_23F362870();
}

void sub_23F44AC70()
{
  FullPlannerRequest.init(from:)();
}

void sub_23F44AC84(_QWORD *a1)
{
  FullPlannerRequest.encode(to:)(a1);
}

void FullPlannerResponse.event.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F44BDB0(v1, a1, &qword_256E702E0);
}

uint64_t FullPlannerResponse.status.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FullPlannerResponse(0) + 20));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_23F44BEB0(v4, v5);
}

uint64_t sub_23F44ACF0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023F636670 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72456E776F726874 && a2 == 0xEB00000000726F72)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F44AE50(char a1)
{
  if (!a1)
    return 0x73736563637573;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0x72456E776F726874;
}

uint64_t sub_23F44AEB4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023F636690)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void sub_23F44AF38()
{
  sub_23F61CD30();
  sub_23F362AE0();
  sub_23F61CD60();
  sub_23F362AD4();
}

unint64_t sub_23F44AF68()
{
  return 0xD000000000000010;
}

uint64_t sub_23F44AF84()
{
  char *v0;

  return sub_23F44AE50(*v0);
}

uint64_t sub_23F44AF8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F44ACF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F44AFB0()
{
  sub_23F44BEC4();
  return sub_23F61CDC0();
}

uint64_t sub_23F44AFD8()
{
  sub_23F44BEC4();
  return sub_23F61CDCC();
}

uint64_t sub_23F44B000()
{
  sub_23F44BF3C();
  return sub_23F61CDC0();
}

uint64_t sub_23F44B028()
{
  sub_23F44BF3C();
  return sub_23F61CDCC();
}

uint64_t sub_23F44B050()
{
  sub_23F44BF78();
  return sub_23F61CDC0();
}

uint64_t sub_23F44B078()
{
  sub_23F44BF78();
  return sub_23F61CDCC();
}

void sub_23F44B0A0()
{
  sub_23F61CD30();
  sub_23F362AE0();
  sub_23F61CD60();
  sub_23F362AD4();
}

uint64_t sub_23F44B0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F44AEB4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F44B0F8()
{
  sub_23F44BF00();
  return sub_23F61CDC0();
}

uint64_t sub_23F44B120()
{
  sub_23F44BF00();
  return sub_23F61CDCC();
}

void FullPlannerResponse.Status.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F362C98();
  v4 = v0;
  v6 = v5;
  v18 = *(_QWORD *)(sub_23F35D2E8(&qword_256E74828) - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v17 = v8;
  v9 = sub_23F35D2E8(&qword_256E74830);
  v15 = *(_QWORD *)(v9 - 8);
  v16 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3E2718();
  v14 = sub_23F35D2E8(&qword_256E74838);
  v11 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  sub_23F383EC4();
  v19 = *(_QWORD *)(sub_23F35D2E8(&qword_256E74840) - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F362930();
  v13 = *(_QWORD *)(v4 + 8);
  sub_23F35EA9C(v6, v6[3]);
  sub_23F44BEC4();
  sub_23F61CD90();
  if (v13)
  {
    if (v13 != 1)
    {
      sub_23F44D4E8();
      sub_23F44D428();
      sub_23F61CBB0();
      sub_23F383D74(v17, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
      sub_23F362A28(v1, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
      goto LABEL_7;
    }
    sub_23F44D4F4();
    sub_23F44D428();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v3, v16);
  }
  else
  {
    sub_23F44BF78();
    sub_23F44D428();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v14);
  }
  sub_23F362A28(v1, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
LABEL_7:
  sub_23F362870();
}

void FullPlannerResponse.Status.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;

  sub_23F362C98();
  v4 = v3;
  v33 = v5;
  sub_23F35D2E8(&qword_256E74868);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v7 = sub_23F35D2E8(&qword_256E74870);
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F44D458(v9, v29);
  v30 = sub_23F35D2E8(&qword_256E74878);
  v10 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  sub_23F3E2718();
  v11 = sub_23F35D2E8(&qword_256E74880);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F362930();
  sub_23F35EA9C(v4, v4[3]);
  sub_23F44BEC4();
  sub_23F61CD84();
  if (v0)
    goto LABEL_10;
  v13 = v1;
  v14 = sub_23F61CB5C();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_9:
    v23 = sub_23F61C928();
    swift_allocError();
    v25 = v24;
    sub_23F35D2E8(&qword_256E6F538);
    *v25 = &type metadata for FullPlannerResponse.Status;
    sub_23F61CAD8();
    sub_23F61C91C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_23F383D74(v13, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
LABEL_10:
    v26 = (uint64_t)v4;
    goto LABEL_11;
  }
  v16 = *(unsigned __int8 *)(v14 + 32);
  sub_23F362460(1, v15, v14, v14 + 32, 0, (2 * v15) | 1);
  v18 = v17;
  v20 = v19;
  swift_bridgeObjectRelease();
  if (v18 != v20 >> 1)
  {
    v13 = v1;
    goto LABEL_9;
  }
  if (v16)
  {
    if (v16 == 1)
    {
      sub_23F44D4F4();
      sub_23F44D44C();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v34, v32);
      sub_23F44D474();
      sub_23F383D74(v18, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
      v21 = 0;
      v22 = 1;
    }
    else
    {
      sub_23F44D4E8();
      v27 = v1;
      sub_23F44D44C();
      v21 = sub_23F61CB14();
      v22 = v28;
      sub_23F44D438();
      swift_unknownObjectRelease();
      sub_23F383D74(v27, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    }
  }
  else
  {
    sub_23F44BF78();
    sub_23F44D44C();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v30);
    sub_23F44D474();
    sub_23F383D74(v18, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    v21 = 0;
    v22 = 0;
  }
  *v33 = v21;
  v33[1] = v22;
  v26 = (uint64_t)v4;
LABEL_11:
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v26);
  sub_23F362870();
}

uint64_t sub_23F44B74C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x746E657665 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F44B828()
{
  return 2;
}

uint64_t sub_23F44B830(char a1)
{
  if ((a1 & 1) != 0)
    return 0x737574617473;
  else
    return 0x746E657665;
}

void sub_23F44B860()
{
  FullPlannerResponse.Status.init(from:)();
}

void sub_23F44B874()
{
  FullPlannerResponse.Status.encode(to:)();
}

uint64_t sub_23F44B888()
{
  char *v0;

  return sub_23F44B830(*v0);
}

uint64_t sub_23F44B890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F44B74C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F44B8B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F44B828();
  *a1 = result;
  return result;
}

uint64_t sub_23F44B8D8()
{
  sub_23F44BFB4();
  return sub_23F61CDC0();
}

uint64_t sub_23F44B900()
{
  sub_23F44BFB4();
  return sub_23F61CDCC();
}

void FullPlannerResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_23F35D2E8(&qword_256E74888);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F38F964();
  v7 = v6 - v5;
  sub_23F35EA9C(a1, a1[3]);
  sub_23F44BFB4();
  sub_23F44D4B8();
  sub_23F61B2E4();
  sub_23F3612C0(&qword_256E74898, (uint64_t (*)(uint64_t))MEMORY[0x24BE56CD0], MEMORY[0x24BE56CE0]);
  sub_23F61CB98();
  if (!v1)
  {
    type metadata accessor for FullPlannerResponse(0);
    sub_23F44BFF0();
    sub_23F61CBE0();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  sub_23F3F4040();
}

void FullPlannerResponse.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  sub_23F362C98();
  v3 = v2;
  v14 = v4;
  sub_23F35D2E8(&qword_256E702E0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F44D458(v6, v13);
  v15 = sub_23F35D2E8(&qword_256E748A8);
  v7 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3845CC();
  v8 = type metadata accessor for FullPlannerResponse(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F38F964();
  v12 = v11 - v10;
  sub_23F35EA9C(v3, v3[3]);
  sub_23F44BFB4();
  sub_23F61CD84();
  if (v0)
  {
    sub_23F44D4A0();
  }
  else
  {
    sub_23F61B2E4();
    LOBYTE(v17) = 0;
    sub_23F3612C0(&qword_256E748B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE56CD0], MEMORY[0x24BE56CE8]);
    sub_23F61CAFC();
    sub_23F44BDE8(v16, v12);
    sub_23F44C02C();
    sub_23F61CB44();
    sub_23F383D74(v1, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    *(_OWORD *)(v12 + *(int *)(v8 + 20)) = v17;
    sub_23F44C068(v12, v14);
    sub_23F44D4A0();
    sub_23F3663AC(v12, type metadata accessor for FullPlannerResponse);
  }
  sub_23F362870();
}

void sub_23F44BC70()
{
  FullPlannerResponse.init(from:)();
}

void sub_23F44BC84(_QWORD *a1)
{
  FullPlannerResponse.encode(to:)(a1);
}

uint64_t type metadata accessor for FullPlannerResponse(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E74A90);
}

uint64_t type metadata accessor for FullPlannerRequest(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E749F8);
}

uint64_t sub_23F44BCC0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23F428AC4() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F383E88(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return swift_deallocObject();
}

uint64_t sub_23F44BD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F428AC4() - 8) + 80);
  v7 = v2 + 16;
  v8 = v2 + ((v6 + 56) & ~v6);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_23F3609AC;
  return sub_23F44A144(a1, a2, v7, v8);
}

void sub_23F44BDB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_23F35D2E8(a3);
  sub_23F44D47C();
  v3 = sub_23F3C85C0();
  v4(v3);
  sub_23F362928();
}

uint64_t sub_23F44BDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E702E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F44BE30()
{
  unint64_t result;

  result = qword_256E74808;
  if (!qword_256E74808)
  {
    result = MEMORY[0x242670A44](&unk_23F622FD8, &type metadata for FullPlannerRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74808);
  }
  return result;
}

uint64_t sub_23F44BE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FullPlannerRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F44BEB0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return sub_23F617BA0();
  return result;
}

unint64_t sub_23F44BEC4()
{
  unint64_t result;

  result = qword_256E74848;
  if (!qword_256E74848)
  {
    result = MEMORY[0x242670A44](&unk_23F622F88, &type metadata for FullPlannerResponse.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74848);
  }
  return result;
}

unint64_t sub_23F44BF00()
{
  unint64_t result;

  result = qword_256E74850;
  if (!qword_256E74850)
  {
    result = MEMORY[0x242670A44](&unk_23F622F38, &type metadata for FullPlannerResponse.Status.ThrownErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74850);
  }
  return result;
}

unint64_t sub_23F44BF3C()
{
  unint64_t result;

  result = qword_256E74858;
  if (!qword_256E74858)
  {
    result = MEMORY[0x242670A44](&unk_23F622EE8, &type metadata for FullPlannerResponse.Status.NoClientResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74858);
  }
  return result;
}

unint64_t sub_23F44BF78()
{
  unint64_t result;

  result = qword_256E74860;
  if (!qword_256E74860)
  {
    result = MEMORY[0x242670A44](&unk_23F622E98, &type metadata for FullPlannerResponse.Status.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74860);
  }
  return result;
}

unint64_t sub_23F44BFB4()
{
  unint64_t result;

  result = qword_256E74890;
  if (!qword_256E74890)
  {
    result = MEMORY[0x242670A44](&unk_23F622E48, &type metadata for FullPlannerResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74890);
  }
  return result;
}

unint64_t sub_23F44BFF0()
{
  unint64_t result;

  result = qword_256E748A0;
  if (!qword_256E748A0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for FullPlannerResponse.Status, &type metadata for FullPlannerResponse.Status);
    atomic_store(result, (unint64_t *)&qword_256E748A0);
  }
  return result;
}

unint64_t sub_23F44C02C()
{
  unint64_t result;

  result = qword_256E748B8[0];
  if (!qword_256E748B8[0])
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for FullPlannerResponse.Status, &type metadata for FullPlannerResponse.Status);
    atomic_store(result, qword_256E748B8);
  }
  return result;
}

uint64_t sub_23F44C068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FullPlannerResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23F44C0AC(uint64_t a1)
{
  uint64_t v2;

  sub_23F3612C0(&qword_256E748D0, type metadata accessor for FullPlannerService, (uint64_t)&protocol conformance descriptor for FullPlannerService);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t type metadata accessor for FullPlannerService(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E74900);
}

uint64_t sub_23F44C0FC()
{
  return type metadata accessor for FullPlannerService(0);
}

uint64_t sub_23F44C104()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FullPlannerService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FullPlannerService.__allocating_init(toolbox:toolExecutionSession:identityChain:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t initializeBufferWithCopyOfBuffer for FullPlannerRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B164();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for FullPlannerRequest(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61B164();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for FullPlannerRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for FullPlannerRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for FullPlannerRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for FullPlannerRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FullPlannerRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F44C334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F428AE4();
  return sub_23F36195C(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FullPlannerRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F44C370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F428AE4();
  v0 = sub_23F44D4D4();
  return sub_23F36196C(v0, v1, v2, v3);
}

uint64_t sub_23F44C398()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B164();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FullPlannerResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B2E4();
    if (sub_23F36195C((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F35D2E8(&qword_256E702E0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      sub_23F36196C((uint64_t)a1, 0, 1, v7);
    }
    v10 = *(int *)(a3 + 20);
    v11 = (uint64_t *)((char *)a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    v13 = v12[1];
    if (v13 >= 2)
    {
      *v11 = *v12;
      v11[1] = v13;
      sub_23F617BA0();
    }
    else
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
    }
  }
  return a1;
}

unint64_t destroy for FullPlannerResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;

  v4 = sub_23F61B2E4();
  if (!sub_23F36195C(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

char *initializeWithCopy for FullPlannerResponse(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;

  v6 = sub_23F61B2E4();
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F35D2E8(&qword_256E702E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *((_QWORD *)v10 + 1);
  if (v11 >= 2)
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v11;
    sub_23F617BA0();
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  return a1;
}

char *assignWithCopy for FullPlannerResponse(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;

  v6 = sub_23F61B2E4();
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      sub_23F36196C((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F35D2E8(&qword_256E702E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)&a1[v11 + 8];
  v15 = *((_QWORD *)v13 + 1);
  if (v14 >= 2)
  {
    if (v15 >= 2)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_23F3625D8((uint64_t)v12, &qword_256E74A30);
    goto LABEL_12;
  }
  if (v15 < 2)
  {
LABEL_12:
    *(_OWORD *)v12 = *(_OWORD *)v13;
    return a1;
  }
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  sub_23F617BA0();
  return a1;
}

char *initializeWithTake for FullPlannerResponse(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23F61B2E4();
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F35D2E8(&qword_256E702E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for FullPlannerResponse(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;

  v6 = sub_23F61B2E4();
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      sub_23F36196C((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F35D2E8(&qword_256E702E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  if (*(_QWORD *)&a1[v11 + 8] >= 2uLL)
  {
    v14 = *((_QWORD *)v13 + 1);
    if (v14 >= 2)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = v14;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_23F3625D8((uint64_t)v12, &qword_256E74A30);
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
  return a1;
}

uint64_t getEnumTagSinglePayload for FullPlannerResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F44C9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E702E0);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    sub_23F36195C(a1, a2, v4);
  else
    sub_23F362B80();
}

uint64_t storeEnumTagSinglePayload for FullPlannerResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F44CA3C(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_DWORD *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E702E0) - 8) + 84) == a3)
  {
    v7 = sub_23F44D4D4();
    sub_23F36196C(v7, v8, v9, v10);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 + 1);
    sub_23F362B80();
  }
}

void sub_23F44CAA4()
{
  unint64_t v0;

  sub_23F44CB14();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23F44CB14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E74AA0)
  {
    sub_23F61B2E4();
    v0 = sub_23F61C730();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256E74AA0);
  }
}

unint64_t destroy for FullPlannerResponse.Status(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

void _s30IntelligenceFlowPlannerRuntime19FullPlannerResponseV6StatusOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    sub_23F617BA0();
  }
  sub_23F362928();
}

_QWORD *assignWithCopy for FullPlannerResponse.Status(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_23F617BA0();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FullPlannerResponse.Status(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FullPlannerResponse.Status(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FullPlannerResponse.Status(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_23F44CD78(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23F44CD90(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FullPlannerResponse.Status()
{
  return &type metadata for FullPlannerResponse.Status;
}

uint64_t storeEnumTagSinglePayload for FullPlannerResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F44CE0C + 4 * byte_23F622825[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F44CE40 + 4 * byte_23F622820[v4]))();
}

uint64_t sub_23F44CE40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F44CE48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F44CE50);
  return result;
}

uint64_t sub_23F44CE5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F44CE64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F44CE68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F44CE70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FullPlannerResponse.CodingKeys()
{
  return &type metadata for FullPlannerResponse.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FullPlannerResponse.Status.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F44CED8 + 4 * byte_23F62282F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F44CF0C + 4 * byte_23F62282A[v4]))();
}

uint64_t sub_23F44CF0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F44CF14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F44CF1CLL);
  return result;
}

uint64_t sub_23F44CF28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F44CF30);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F44CF34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F44CF3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FullPlannerResponse.Status.CodingKeys()
{
  return &type metadata for FullPlannerResponse.Status.CodingKeys;
}

ValueMetadata *type metadata accessor for FullPlannerResponse.Status.SuccessCodingKeys()
{
  return &type metadata for FullPlannerResponse.Status.SuccessCodingKeys;
}

ValueMetadata *type metadata accessor for FullPlannerResponse.Status.NoClientResponseCodingKeys()
{
  return &type metadata for FullPlannerResponse.Status.NoClientResponseCodingKeys;
}

ValueMetadata *type metadata accessor for FullPlannerResponse.Status.ThrownErrorCodingKeys()
{
  return &type metadata for FullPlannerResponse.Status.ThrownErrorCodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerRuntime19FullPlannerResponseV6StatusO21ThrownErrorCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F44CFCC + 4 * byte_23F622834[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F44CFEC + 4 * byte_23F622839[v4]))();
}

_BYTE *sub_23F44CFCC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F44CFEC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F44CFF4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F44CFFC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F44D004(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F44D00C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FullPlannerRequest.CodingKeys()
{
  return &type metadata for FullPlannerRequest.CodingKeys;
}

unint64_t sub_23F44D02C()
{
  unint64_t result;

  result = qword_256E74AD0;
  if (!qword_256E74AD0)
  {
    result = MEMORY[0x242670A44](&unk_23F622B58, &type metadata for FullPlannerRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74AD0);
  }
  return result;
}

unint64_t sub_23F44D06C()
{
  unint64_t result;

  result = qword_256E74AD8;
  if (!qword_256E74AD8)
  {
    result = MEMORY[0x242670A44](&unk_23F622C10, &type metadata for FullPlannerResponse.Status.ThrownErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74AD8);
  }
  return result;
}

unint64_t sub_23F44D0AC()
{
  unint64_t result;

  result = qword_256E74AE0;
  if (!qword_256E74AE0)
  {
    result = MEMORY[0x242670A44](&unk_23F622D68, &type metadata for FullPlannerResponse.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74AE0);
  }
  return result;
}

unint64_t sub_23F44D0EC()
{
  unint64_t result;

  result = qword_256E74AE8;
  if (!qword_256E74AE8)
  {
    result = MEMORY[0x242670A44](&unk_23F622E20, &type metadata for FullPlannerResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74AE8);
  }
  return result;
}

unint64_t sub_23F44D12C()
{
  unint64_t result;

  result = qword_256E74AF0;
  if (!qword_256E74AF0)
  {
    result = MEMORY[0x242670A44](&unk_23F622D90, &type metadata for FullPlannerResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74AF0);
  }
  return result;
}

unint64_t sub_23F44D16C()
{
  unint64_t result;

  result = qword_256E74AF8;
  if (!qword_256E74AF8)
  {
    result = MEMORY[0x242670A44](&unk_23F622DB8, &type metadata for FullPlannerResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74AF8);
  }
  return result;
}

unint64_t sub_23F44D1AC()
{
  unint64_t result;

  result = qword_256E74B00;
  if (!qword_256E74B00)
  {
    result = MEMORY[0x242670A44](&unk_23F622C88, &type metadata for FullPlannerResponse.Status.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74B00);
  }
  return result;
}

unint64_t sub_23F44D1EC()
{
  unint64_t result;

  result = qword_256E74B08;
  if (!qword_256E74B08)
  {
    result = MEMORY[0x242670A44](&unk_23F622CB0, &type metadata for FullPlannerResponse.Status.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74B08);
  }
  return result;
}

unint64_t sub_23F44D22C()
{
  unint64_t result;

  result = qword_256E74B10;
  if (!qword_256E74B10)
  {
    result = MEMORY[0x242670A44](&unk_23F622C38, &type metadata for FullPlannerResponse.Status.NoClientResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74B10);
  }
  return result;
}

unint64_t sub_23F44D26C()
{
  unint64_t result;

  result = qword_256E74B18;
  if (!qword_256E74B18)
  {
    result = MEMORY[0x242670A44](&unk_23F622C60, &type metadata for FullPlannerResponse.Status.NoClientResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74B18);
  }
  return result;
}

unint64_t sub_23F44D2AC()
{
  unint64_t result;

  result = qword_256E74B20;
  if (!qword_256E74B20)
  {
    result = MEMORY[0x242670A44](&unk_23F622B80, &type metadata for FullPlannerResponse.Status.ThrownErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74B20);
  }
  return result;
}

unint64_t sub_23F44D2EC()
{
  unint64_t result;

  result = qword_256E74B28;
  if (!qword_256E74B28)
  {
    result = MEMORY[0x242670A44](&unk_23F622BA8, &type metadata for FullPlannerResponse.Status.ThrownErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74B28);
  }
  return result;
}

unint64_t sub_23F44D32C()
{
  unint64_t result;

  result = qword_256E74B30;
  if (!qword_256E74B30)
  {
    result = MEMORY[0x242670A44](&unk_23F622CD8, &type metadata for FullPlannerResponse.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74B30);
  }
  return result;
}

unint64_t sub_23F44D36C()
{
  unint64_t result;

  result = qword_256E74B38;
  if (!qword_256E74B38)
  {
    result = MEMORY[0x242670A44](&unk_23F622D00, &type metadata for FullPlannerResponse.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74B38);
  }
  return result;
}

unint64_t sub_23F44D3AC()
{
  unint64_t result;

  result = qword_256E74B40;
  if (!qword_256E74B40)
  {
    result = MEMORY[0x242670A44](&unk_23F622AC8, &type metadata for FullPlannerRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74B40);
  }
  return result;
}

unint64_t sub_23F44D3EC()
{
  unint64_t result;

  result = qword_256E74B48;
  if (!qword_256E74B48)
  {
    result = MEMORY[0x242670A44](&unk_23F622AF0, &type metadata for FullPlannerRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74B48);
  }
  return result;
}

uint64_t sub_23F44D428()
{
  return sub_23F61CB74();
}

uint64_t sub_23F44D438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8))(v1, v0);
}

uint64_t sub_23F44D44C()
{
  return sub_23F61CACC();
}

void sub_23F44D458(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F44D474()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F44D488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

void sub_23F44D498(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6, uint8_t *a7)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, a7, 2u);
}

uint64_t sub_23F44D4A0()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0);
}

uint64_t sub_23F44D4A8()
{
  return swift_task_dealloc();
}

uint64_t sub_23F44D4B8()
{
  return sub_23F61CD90();
}

void sub_23F44D4C8()
{
  sub_23F377C90();
}

uint64_t sub_23F44D4D4()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F44D4E8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23F44BF00();
}

unint64_t sub_23F44D4F4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_23F44BF3C();
}

void FullPlannerToolboxDelegate.toolDefinitionCustomMapping(toolDefinition:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F44D724();
  sub_23F44D710();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F44D69C();
  sub_23F44DB04();
  if (v0)
  {
    sub_23F619088();
    v2 = (void *)sub_23F619E8C();
    v3 = sub_23F61C628();
    if (sub_23F44D6F0(v3))
    {
      *(_WORD *)sub_23F3EEE70() = 0;
      sub_23F44D6BC(&dword_23F35A000, v4, v5, "Unable to find ToolDefinitionRenderer for toolbox mapping. Falling back to ToolKit.ToolDefinition.id");
      sub_23F44D6E0();
    }

    sub_23F44D6D0();
    sub_23F61B5A8();
    sub_23F44D700();
  }
  sub_23F383568();
}

void FullPlannerToolboxDelegate.assistantSchemaCustomMapping(assistantSchemaIdentifier:assistantToolSchemaDefinition:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F44D724();
  sub_23F44D710();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F44D69C();
  sub_23F44DDB4();
  if (v0)
  {
    sub_23F619088();
    v2 = (void *)sub_23F619E8C();
    v3 = sub_23F61C628();
    if (sub_23F44D6F0(v3))
    {
      *(_WORD *)sub_23F3EEE70() = 0;
      sub_23F44D6BC(&dword_23F35A000, v4, v5, "Unable to find AssistantSchemaRenderer for toolbox mapping. Falling back to AssistantSchemaIdentifier.kind");
      sub_23F44D6E0();
    }

    sub_23F44D6D0();
    sub_23F61BCD4();
    sub_23F44D700();
  }
  sub_23F383568();
}

void sub_23F44D664()
{
  FullPlannerToolboxDelegate.toolDefinitionCustomMapping(toolDefinition:)();
}

void sub_23F44D678()
{
  FullPlannerToolboxDelegate.assistantSchemaCustomMapping(assistantSchemaIdentifier:assistantToolSchemaDefinition:)();
}

ValueMetadata *type metadata accessor for FullPlannerToolboxDelegate()
{
  return &type metadata for FullPlannerToolboxDelegate;
}

uint64_t sub_23F44D69C()
{
  uint64_t v0;

  return v0;
}

void sub_23F44D6BC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_23F44D6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void sub_23F44D6E0()
{
  JUMPOUT(0x242670B70);
}

BOOL sub_23F44D6F0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_23F44D700()
{
  void *v0;

}

uint64_t sub_23F44D724()
{
  return sub_23F619E98();
}

void sub_23F44D730(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  BOOL v20;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v27 = a1;
  v28 = a2;
  v29 = a3;
  type metadata accessor for FullPlannerVersionHandler.Version();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F383EC4();
  v5 = type metadata accessor for FullPlannerPreferences();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256E6EE90 != -1)
    swift_once();
  v9 = sub_23F361498(v5, (uint64_t)qword_256E7FE90);
  swift_beginAccess();
  sub_23F3663D4(v9, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F617C48();
  v11 = v30;
  v10 = v31;
  sub_23F42432C((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  v12 = v11 == 0x6168706C61 && v10 == 0xE500000000000000;
  if (v12 || (sub_23F4508DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v10 = v3 + *(int *)(sub_23F35D2E8(&qword_256E74B60) + 64);
    v13 = sub_23F6170CC();
    sub_23F450908(v13);
    v14 = sub_23F384B34();
    sub_23F450920(v14);
LABEL_15:
    v18 = v29;
    sub_23F44E8D8(v28, v10);
    swift_storeEnumTagMultiPayload();
    sub_23F44E048(v3, v18);
    sub_23F42432C(v3, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerVersionHandler.Version);
    return;
  }
  v15 = v11 == 0x6F76617262 && v10 == 0xE500000000000000;
  if (v15
    || (sub_23F4508DC() & 1) != 0
    || (v11 == 0x65696C72616863 ? (v19 = v10 == 0xE700000000000000) : (v19 = 0),
        v19
     || (sub_23F4508DC() & 1) != 0
     || (v11 == 0x61746C6564 ? (v20 = v10 == 0xE500000000000000) : (v20 = 0), v20 || (sub_23F4508DC() & 1) != 0)))
  {
    swift_bridgeObjectRelease();
    sub_23F35D2E8(&qword_256E74B58);
    v16 = sub_23F4508E8();
    sub_23F450908(v16);
    v17 = sub_23F384B34();
    sub_23F450920(v17);
    sub_23F450938();
    goto LABEL_15;
  }
  if (v11 == 1869112165 && v10 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  v22 = sub_23F4508DC();
  sub_23F362984();
  if ((v22 & 1) != 0)
  {
LABEL_35:
    sub_23F35D2E8(&qword_256E74B58);
    v25 = sub_23F4508E8();
    sub_23F450908(v25);
    v26 = sub_23F384B34();
    sub_23F450920(v26);
    sub_23F450938();
    goto LABEL_15;
  }
  sub_23F38F04C();
  v23 = sub_23F362D64();
  sub_23F45096C(v23, v24);
}

void sub_23F44DB04()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  BOOL v3;
  BOOL v4;
  BOOL v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _UNKNOWN **v18;

  v0 = sub_23F450988();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F383EC4();
  if (qword_256E6EE90 != -1)
    swift_once();
  sub_23F361498(v0, (uint64_t)qword_256E7FE90);
  sub_23F450944();
  sub_23F450978();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F617C48();
  sub_23F4509B0();
  v2 = v15 == 0x6168706C61 && v16 == 0xE500000000000000;
  if (v2
    || (sub_23F4508DC() & 1) != 0
    || ((sub_23F4509D0(), v2) ? (v3 = v16 == 0xE500000000000000) : (v3 = 0),
        v3
     || (sub_23F4508DC() & 1) != 0
     || ((sub_23F450998(), v2) ? (v4 = v16 == 0xE700000000000000) : (v4 = 0),
         v4
      || (sub_23F4508DC() & 1) != 0
      || ((sub_23F4509BC(), v2) ? (v5 = v16 == 0xE500000000000000) : (v5 = 0),
          v5 || (sub_23F4508DC() & 1) != 0 || (v15 == 1869112165 ? (v6 = v16 == 0xE400000000000000) : (v6 = 0), v6)))))
  {
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  v7 = sub_23F4508DC();
  sub_23F362984();
  if ((v7 & 1) != 0)
  {
LABEL_31:
    v17 = type metadata accessor for AlphaAppNameRenderer(0);
    v18 = &off_250FD31D8;
    v10 = sub_23F36145C(&v15);
    v11 = sub_23F6170CC();
    sub_23F36196C((uint64_t)v10, 1, 1, v11);
    type metadata accessor for RenderingState();
    inited = swift_initStackObject();
    v13 = sub_23F61BFEC();
    v14 = MEMORY[0x24BEE4B08];
    *(_QWORD *)(inited + 16) = v13;
    *(_QWORD *)(inited + 24) = v14;
    sub_23F3A2544();
    swift_setDeallocating();
    RenderingState.deinit();
    swift_deallocClassInstance();
    sub_23F44E86C((uint64_t)&v15);
    goto LABEL_32;
  }
  sub_23F38F04C();
  v8 = sub_23F362D64();
  sub_23F45096C(v8, v9);
LABEL_32:
  sub_23F450958();
}

void sub_23F44DDB4()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  BOOL v3;
  BOOL v4;
  BOOL v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v0 = sub_23F450988();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F383EC4();
  if (qword_256E6EE90 != -1)
    swift_once();
  sub_23F361498(v0, (uint64_t)qword_256E7FE90);
  sub_23F450944();
  sub_23F450978();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F617C48();
  sub_23F4509B0();
  v2 = v10 == 0x6168706C61 && v11 == 0xE500000000000000;
  if (v2
    || (sub_23F4508DC() & 1) != 0
    || ((sub_23F4509D0(), v2) ? (v3 = v11 == 0xE500000000000000) : (v3 = 0),
        v3
     || (sub_23F4508DC() & 1) != 0
     || ((sub_23F450998(), v2) ? (v4 = v11 == 0xE700000000000000) : (v4 = 0),
         v4
      || (sub_23F4508DC() & 1) != 0
      || ((sub_23F4509BC(), v2) ? (v5 = v11 == 0xE500000000000000) : (v5 = 0),
          v5 || (sub_23F4508DC() & 1) != 0 || (v10 == 1869112165 ? (v6 = v11 == 0xE400000000000000) : (v6 = 0), v6)))))
  {
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  v7 = sub_23F4508DC();
  sub_23F362984();
  if ((v7 & 1) != 0)
  {
LABEL_31:
    sub_23F61BCD4();
    sub_23F61C1FC();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  sub_23F38F04C();
  v8 = sub_23F362D64();
  sub_23F45096C(v8, v9);
LABEL_32:
  sub_23F450958();
}

BOOL sub_23F44DFC8(uint64_t a1, uint64_t a2)
{
  return a2 != 0;
}

uint64_t sub_23F44DFD4()
{
  sub_23F4508A0();
  return sub_23F61CCAC();
}

uint64_t sub_23F44DFFC()
{
  sub_23F4508A0();
  return sub_23F61CCA0();
}

unint64_t sub_23F44E024()
{
  return 0xD00000000000001ELL;
}

BOOL sub_23F44E040(uint64_t a1)
{
  uint64_t v1;

  return sub_23F44DFC8(a1, *(_QWORD *)(v1 + 8));
}

void sub_23F44E048(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  char *v16;
  _QWORD v17[128];

  v17[5] = a2;
  v3 = sub_23F35D2E8(&qword_256E705E0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v17[7] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v17[8] = (char *)v17 - v6;
  v7 = sub_23F61B32C();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v17[6] = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = sub_23F6170CC();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v17[9] = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = type metadata accessor for FullPlannerVersionHandler.Version();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3663D4(a1, (uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  v16 = (char *)sub_23F44E204 + 4 * word_23F6230C0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F44E204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;

  v9 = sub_23F35D2E8(&qword_256E74B60);
  v10 = v6 + *(int *)(v9 + 48);
  v11 = v6 + *(int *)(v9 + 64);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  *(_QWORD *)(v0 + 32) = v4;
  v12(v2, v6, v7);
  v13 = v1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v5, v10, v1);
  v14 = *(_QWORD *)(v0 + 64);
  sub_23F44E920(v11, v14);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v4 + 16))(*(_QWORD *)(v0 + 72), v2, v7);
  v15 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v15, v5, v13);
  v16 = *(_QWORD *)(v0 + 56);
  sub_23F44E8D8(v14, v16);
  *(_QWORD *)(v8 - 96) = 0;
  *(_OWORD *)(v8 - 128) = 0u;
  *(_OWORD *)(v8 - 112) = 0u;
  *(_QWORD *)(v8 - 144) = 0;
  *(_OWORD *)(v8 - 176) = 0u;
  *(_OWORD *)(v8 - 160) = 0u;
  *(_BYTE *)(v8 - 136) = -1;
  bzero((void *)(v0 + 728), 0xC8uLL);
  bzero((void *)(v0 + 368), 0x168uLL);
  *(_QWORD *)(v0 + 352) = 0;
  *(_OWORD *)(v0 + 320) = 0u;
  *(_OWORD *)(v0 + 336) = 0u;
  *(_BYTE *)(v0 + 360) = -1;
  *(_QWORD *)(v0 + 304) = 0;
  *(_OWORD *)(v0 + 272) = 0u;
  *(_OWORD *)(v0 + 288) = 0u;
  *(_QWORD *)(v0 + 256) = 0;
  *(_OWORD *)(v0 + 224) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_BYTE *)(v0 + 264) = -1;
  *(_QWORD *)(v0 + 208) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  *(_BYTE *)(v0 + 216) = -1;
  *(_QWORD *)(v0 + 160) = 0;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_BYTE *)(v0 + 168) = -1;
  *(_QWORD *)(v0 + 112) = 0;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_BYTE *)(v0 + 120) = -1;
  v17 = _s15AlphaComponentsVMa();
  v18 = *(uint64_t **)(v0 + 40);
  v18[3] = v17;
  v18[4] = (uint64_t)&off_256E706D0;
  v19 = sub_23F36145C(v18);
  sub_23F38E8EC(*(_QWORD *)(v0 + 72), v15, v16, v8 - 128, (_OWORD *)(v8 - 176), v0 + 728, v0 + 368, v0 + 320, v19, v0 + 272, (_OWORD *)(v0 + 224), v0 + 176, v0 + 128, v0 + 80);
  sub_23F44E968(v14);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 32) + 8))(v2, v7);
}

uint64_t sub_23F44E86C(uint64_t a1)
{
  destroy for AnyActionRequirementEvaluating();
  return a1;
}

uint64_t type metadata accessor for FullPlannerVersionHandler.Version()
{
  uint64_t result;

  result = qword_256E74BE8;
  if (!qword_256E74BE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F44E8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E705E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F44E920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E705E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F44E968(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E705E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F44E9A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F44E9FC + 4 * byte_23F6230CA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_23F44EF4C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v8 = sub_23F6170CC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
      v9 = sub_23F35D2E8(&qword_256E74B60);
      v10 = a1 + *(int *)(v9 + 48);
      v11 = sub_23F61B32C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      v7 = *(int *)(v9 + 64);
      goto LABEL_4;
    case 1:
    case 2:
    case 3:
    case 4:
      v3 = sub_23F6170CC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = (int *)sub_23F35D2E8(&qword_256E74B58);
      v5 = a1 + v4[12];
      v6 = sub_23F61B32C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v4[16]);
      v7 = v4[20];
LABEL_4:
      v12 = a1 + v7;
      v13 = sub_23F61B104();
      result = sub_23F36195C(v12, 1, v13);
      if (!(_DWORD)result)
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      break;
    default:
      return result;
  }
  return result;
}

void sub_23F44F094()
{
  char *v0;

  v0 = (char *)sub_23F44F0DC + 4 * byte_23F6230D4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F44F0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  v3 = sub_23F35D2E8(&qword_256E74B60);
  v4 = *(int *)(v3 + 48);
  v5 = v0 + v4;
  v6 = v1 + v4;
  v7 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  v8 = *(int *)(v3 + 64);
  v9 = (void *)(v0 + v8);
  v10 = (const void *)(v1 + v8);
  v11 = sub_23F61B104();
  if (sub_23F36195C((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23F44F60C(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F42432C(result, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerVersionHandler.Version);
    v2 = (char *)&loc_23F44F66C + 4 * byte_23F6230D9[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_23F44FBAC()
{
  char *v0;

  v0 = (char *)sub_23F44FBF4 + 4 * byte_23F6230DE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F44FBF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = sub_23F35D2E8(&qword_256E74B60);
  v4 = *(int *)(v3 + 48);
  v5 = v0 + v4;
  v6 = v1 + v4;
  v7 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  v8 = *(int *)(v3 + 64);
  v9 = (void *)(v0 + v8);
  v10 = (const void *)(v1 + v8);
  v11 = sub_23F61B104();
  if (sub_23F36195C((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23F450104(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F42432C(result, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerVersionHandler.Version);
    v2 = (char *)&loc_23F450164 + 4 * byte_23F6230E3[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23F450674()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  char v18;
  char v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;

  v0 = sub_23F6170CC();
  v1 = v0;
  if (v2 <= 0x3F)
  {
    v3 = *(_QWORD *)(v0 - 8);
    v1 = sub_23F61B32C();
    if (v4 <= 0x3F)
    {
      sub_23F38C624();
      if (v6 > 0x3F)
      {
        return v5;
      }
      else
      {
        v7 = v3 + 64;
        v8 = *(_QWORD *)(v1 - 8) + 64;
        v9 = *(_QWORD *)(v5 - 8) + 64;
        swift_getTupleTypeLayout3();
        v20 = &v19;
        swift_getTupleTypeLayout();
        v21 = &v18;
        swift_getTupleTypeLayout();
        v22 = &v13;
        v14 = v7;
        v15 = v8;
        v16 = "(";
        v17 = v9;
        swift_getTupleTypeLayout();
        v23 = &v12;
        v14 = v7;
        v15 = v8;
        v16 = "(";
        v17 = v9;
        swift_getTupleTypeLayout();
        v24 = &v11;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v1;
}

uint64_t getEnumTagSinglePayload for FullPlannerVersionHandlerError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FullPlannerVersionHandlerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FullPlannerVersionHandlerError()
{
  return &type metadata for FullPlannerVersionHandlerError;
}

unint64_t sub_23F4508A0()
{
  unint64_t result;

  result = qword_256E74C20;
  if (!qword_256E74C20)
  {
    result = MEMORY[0x242670A44](&unk_23F623150, &type metadata for FullPlannerVersionHandlerError);
    atomic_store(result, (unint64_t *)&qword_256E74C20);
  }
  return result;
}

uint64_t sub_23F4508DC()
{
  return sub_23F61CC64();
}

uint64_t sub_23F4508E8()
{
  return sub_23F6170CC();
}

uint64_t sub_23F450908(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_23F450920(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_23F450938()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F361418(*(_QWORD *)(v1 - 144), v0);
}

uint64_t sub_23F450944()
{
  return swift_beginAccess();
}

uint64_t sub_23F45096C(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  a2[1] = 0;
  return swift_willThrow();
}

void sub_23F450978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_23F3663D4(v0, v1, v2);
}

uint64_t sub_23F450988()
{
  return type metadata accessor for FullPlannerPreferences();
}

void sub_23F4509B0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_23F42432C(v0, v1);
}

uint64_t dispatch thunk of GrammarGenerating.makeGrammar(from:identifier:renderingState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t static FullPlannerGrammarGeneratorHelpers.getGrammarPromptRenderer(locale:toolbox:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  ValueMetadata *v9;
  _UNKNOWN **v10;
  _BYTE v11[24];
  uint64_t v12;
  uint64_t v13;

  v1 = sub_23F35D2E8(&qword_256E705E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = &type metadata for StubToolExecutionSessionWrapper;
  v10 = &off_250FDF7C0;
  v4 = sub_23F61B104();
  sub_23F36196C((uint64_t)v3, 1, 1, v4);
  sub_23F44D730((uint64_t)v8, (uint64_t)v3, (uint64_t)v11);
  sub_23F44E968((uint64_t)v3);
  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v8);
  if (!v0)
  {
    v6 = v12;
    v7 = v13;
    sub_23F38EB10((uint64_t)v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v7 + 72))(v6, v7);
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v11);
  }
  return result;
}

ValueMetadata *type metadata accessor for FullPlannerGrammarGeneratorHelpers()
{
  return &type metadata for FullPlannerGrammarGeneratorHelpers;
}

ValueMetadata *type metadata accessor for GrammarDeduplicater()
{
  return &type metadata for GrammarDeduplicater;
}

ValueMetadata *type metadata accessor for InAppResponsePolicy()
{
  return &type metadata for InAppResponsePolicy;
}

void sub_23F450B3C()
{
  off_256E74C28 = &unk_250FD0FB0;
}

uint64_t sub_23F450B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v5 = sub_23F61A0D8();
  v3[13] = v5;
  v3[14] = *(_QWORD *)(v5 - 8);
  v3[15] = sub_23F366578();
  v6 = sub_23F6170CC();
  v3[16] = v6;
  v3[17] = *(_QWORD *)(v6 - 8);
  v3[18] = sub_23F366578();
  sub_23F35D2E8(&qword_256E70760);
  v3[19] = sub_23F366578();
  v7 = sub_23F617F0C();
  v3[20] = v7;
  v3[21] = *(_QWORD *)(v7 - 8);
  v3[22] = sub_23F366578();
  v8 = (_QWORD *)swift_task_alloc();
  v3[23] = v8;
  *v8 = v3;
  v8[1] = sub_23F450C10;
  return sub_23F4510D0(a2);
}

uint64_t sub_23F450C10(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    return sub_23F435B58(*(uint64_t (**)(void))(v5 + 8));
  }
  else
  {
    *(_BYTE *)(v4 + 216) = a1;
    return swift_task_switch();
  }
}

uint64_t sub_23F450CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  if (*(_BYTE *)(v0 + 216))
  {
    v1 = *(_QWORD *)(v0 + 80);
    if (*(_BYTE *)(v0 + 216) == 1)
    {
      v2 = sub_23F451D20();
      v3 = v1;
      v4 = 1;
    }
    else
    {
      sub_23F617F90();
      sub_23F451D08(v1);
      v15 = sub_23F451D20();
      sub_23F451D08(v1 + *(int *)(v15 + 20));
      v3 = v1;
      v4 = 0;
      v2 = v15;
    }
    sub_23F36196C(v3, v4, 1, v2);
    sub_23F451CB8();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD **)(v0 + 96);
    sub_23F35D2E8(&qword_256E6FC58);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
    *(_QWORD *)(inited + 32) = 0x7954656369766564;
    *(_QWORD *)(inited + 40) = 0xEA00000000006570;
    static MobileGestalt.answerProductKey.getter();
    *(_QWORD *)(inited + 48) = v8;
    *(_QWORD *)(inited + 56) = v9;
    sub_23F61BFEC();
    sub_23F35EA9C(v6, v6[3]);
    sub_23F586054();
    v11 = v10;
    *(_QWORD *)(v0 + 192) = v10;
    swift_bridgeObjectRelease();
    v12 = sub_23F616E68();
    sub_23F36196C(v5, 1, 1, v12);
    sub_23F61AD74();
    sub_23F61AD68();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v13;
    *v13 = v0;
    v13[1] = sub_23F450EB0;
    return sub_23F3E4588(*(_QWORD *)(v0 + 176), 0xD000000000000023, 0x800000023F6366B0, v11, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
  }
}

uint64_t sub_23F450EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v8 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_23F3CFCB0(v2, &qword_256E70760);
  return swift_task_switch();
}

uint64_t sub_23F450F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(uint64_t **)(v0 + 80);
  v3 = sub_23F617ED0();
  v5 = v4;
  v6 = sub_23F617EE8();
  v8 = v7;
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  *v2 = v3;
  v2[1] = v5;
  sub_23F617F90();
  sub_23F451D14((uint64_t)v2);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = type metadata accessor for DialogOutput();
  v11 = (uint64_t *)(v9 + *(int *)(v10 + 20));
  if (v8)
  {
    *v11 = v6;
    v11[1] = v8;
    v9 = *(_QWORD *)(v0 + 80);
  }
  sub_23F451D14((uint64_t)v11);
  sub_23F451D20();
  sub_23F36196C(v9, 0, 1, v10);
  sub_23F451CB8();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F451084()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F4510D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1[2] = a1;
  v2 = sub_23F61ADB0();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v3 = sub_23F61B668();
  v1[6] = v3;
  v1[7] = *(_QWORD *)(v3 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v4 = sub_23F61B5D8();
  v1[10] = v4;
  v1[11] = *(_QWORD *)(v4 - 8);
  v1[12] = swift_task_alloc();
  v5 = sub_23F619E98();
  v1[13] = v5;
  v1[14] = *(_QWORD *)(v5 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v6 = sub_23F61A0D8();
  v1[19] = v6;
  v1[20] = *(_QWORD *)(v6 - 8);
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  v7 = sub_23F61BB3C();
  v1[23] = v7;
  v1[24] = *(_QWORD *)(v7 - 8);
  v1[25] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E70238);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v8 = sub_23F618134();
  v1[28] = v8;
  v1[29] = *(_QWORD *)(v8 - 8);
  v1[30] = swift_task_alloc();
  v9 = sub_23F61ACA8();
  v1[31] = v9;
  v1[32] = *(_QWORD *)(v9 - 8);
  v1[33] = swift_task_alloc();
  v10 = sub_23F61A504();
  v1[34] = v10;
  v1[35] = *(_QWORD *)(v10 - 8);
  v1[36] = swift_task_alloc();
  v11 = sub_23F617DD4();
  v1[37] = v11;
  v1[38] = *(_QWORD *)(v11 - 8);
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v12 = sub_23F61AB94();
  v1[41] = v12;
  v1[42] = *(_QWORD *)(v12 - 8);
  v1[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F45134C()
{
  uint64_t v0;
  uint64_t result;
  __int128 v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  void (*v22)(uint64_t, uint64_t);
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  int v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  void (*v69)(uint64_t, uint64_t);
  void *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, _QWORD);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  result = sub_23F61AD98();
  v126 = *(_QWORD *)(result + 16);
  if (!v126)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  v3 = 0;
  v4 = *(_QWORD *)(v0 + 336);
  v120 = *(_QWORD *)(v0 + 304);
  v124 = *(_QWORD *)(v0 + 256);
  v125 = *(_QWORD *)(v0 + 280);
  v118 = *(_QWORD *)(v0 + 160);
  v110 = *(_QWORD *)(v0 + 112);
  v99 = *(_QWORD *)(v0 + 192);
  v100 = *(_QWORD *)(v0 + 88);
  v122 = result + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v121 = *MEMORY[0x24BE53328];
  v112 = *MEMORY[0x24BE54EE8];
  v111 = *MEMORY[0x24BE54F08];
  HIDWORD(v109) = *MEMORY[0x24BE54EF0];
  LODWORD(v109) = *MEMORY[0x24BE54EE0];
  v98 = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v2 = 136315138;
  v96 = v2;
  v107 = v4;
  v119 = result;
  v123 = *(_QWORD *)(v0 + 232);
  v113 = *(_QWORD *)(v0 + 32);
  while (1)
  {
    if (v3 >= *(_QWORD *)(result + 16))
    {
      __break(1u);
LABEL_67:
      __break(1u);
      return result;
    }
    v5 = *(_QWORD *)(v0 + 264);
    v7 = *(_QWORD *)(v0 + 240);
    v6 = *(_QWORD *)(v0 + 248);
    v8 = *(_QWORD *)(v0 + 224);
    (*(void (**)(_QWORD, unint64_t, _QWORD))(v4 + 16))(*(_QWORD *)(v0 + 344), v122 + *(_QWORD *)(v4 + 72) * v3, *(_QWORD *)(v0 + 328));
    sub_23F61AB4C();
    sub_23F61A4F8();
    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v125 + 8));
    sub_23F61AC78();
    (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v5, v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v123 + 88))(v7, v8) != v121)
    {
      v15 = *(_QWORD *)(v0 + 240);
      v16 = *(_QWORD *)(v0 + 224);
      (*(void (**)(_QWORD, _QWORD))(v4 + 8))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 328));
      (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v15, v16);
      goto LABEL_32;
    }
    v9 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(v123 + 96))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
    sub_23F451CC8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v120 + 32));
    sub_23F61AB70();
    v11 = sub_23F36195C(v9, 1, v10);
    v12 = *(_QWORD *)(v0 + 216);
    if (v11 == 1)
    {
      sub_23F3CFCB0(*(_QWORD *)(v0 + 216), &qword_256E70238);
      v13 = 0;
      v14 = 0xE000000000000000;
    }
    else
    {
      v17 = *(_QWORD *)(v0 + 80);
      sub_23F61B548();
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v12, v17);
      v13 = sub_23F61BB18();
      v14 = v18;
      sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v99 + 8));
    }
    if (qword_256E6EEC8 != -1)
      swift_once();
    v19 = off_256E74C28;
    v20 = *((_QWORD *)off_256E74C28 + 2);
    if (v20)
    {
      v21 = *((_QWORD *)off_256E74C28 + 4) == v13 && *((_QWORD *)off_256E74C28 + 5) == v14;
      if (v21 || (sub_23F451CA8() & 1) != 0)
      {
LABEL_17:
        sub_23F451CF8();
        sub_23F451CE8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v120 + 16));
        v22 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
        sub_23F451D34();
        goto LABEL_20;
      }
      if (v20 != 1)
      {
        if (v19[6] == v13 && v19[7] == v14)
          goto LABEL_17;
        result = sub_23F451CA8();
        if ((result & 1) != 0)
          goto LABEL_17;
        if (v20 != 2)
        {
          v45 = v19 + 9;
          v46 = 2;
          do
          {
            v47 = v46 + 1;
            if (__OFADD__(v46, 1))
              goto LABEL_67;
            if (*(v45 - 1) == v13 && *v45 == v14)
              goto LABEL_17;
            result = sub_23F451CA8();
            if ((result & 1) != 0)
              goto LABEL_17;
            ++v46;
            v45 += 2;
          }
          while (v47 != v20);
        }
      }
    }
    sub_23F451CF8();
    sub_23F451CE8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v120 + 16));
    v23 = sub_23F617D98();
    v22 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
    sub_23F451D34();
    if ((v23 & 1) == 0)
    {
      v42 = *(_QWORD *)(v0 + 344);
      v43 = *(_QWORD *)(v0 + 328);
      v22(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 296));
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v42, v43);
      goto LABEL_32;
    }
LABEL_20:
    v24 = *(_QWORD *)(v0 + 176);
    v25 = *(_QWORD *)(v0 + 152);
    sub_23F61AD68();
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 88))(v24, v25);
    if (v26 == v112 || v26 == v111)
      break;
    if (v26 == HIDWORD(v109) || v26 == (_DWORD)v109)
    {
      v52 = *(void **)(v0 + 144);
      swift_bridgeObjectRelease();
      sub_23F3F0F00();
      sub_23F619E8C();
      v53 = sub_23F3B1A04();
      if (sub_23F3F0E3C(v53))
      {
        *(_WORD *)sub_23F366668() = 0;
        sub_23F3F0DF0(&dword_23F35A000, v54, v55, "Display only/forward in-app response, suppressing dialog.");
        sub_23F3F0E04();
      }
      sub_23F451CD8();

      sub_23F451C94(v56, v57, v58, v59, v60, v61, v62, v63, v96, *((uint64_t *)&v96 + 1), v97, v98, v99, v100, v102, v103, v104, v105, v107,
        v109,
        v110);
      sub_23F451D28();
      sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      v49 = 2;
      goto LABEL_51;
    }
    sub_23F3F0F00();
    sub_23F451CC8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 16));
    v29 = sub_23F619E8C();
    v30 = sub_23F61C634();
    v31 = os_log_type_enabled(v29, v30);
    v32 = *(_QWORD *)(v0 + 344);
    v115 = *(_QWORD *)(v0 + 320);
    v116 = *(_QWORD *)(v0 + 328);
    v114 = *(_QWORD *)(v0 + 296);
    if (v31)
    {
      v33 = *(_QWORD *)(v0 + 40);
      v34 = *(_QWORD *)(v0 + 24);
      v35 = sub_23F366668();
      v36 = sub_23F366668();
      v127 = v36;
      *(_DWORD *)v35 = v96;
      sub_23F61AD68();
      v37 = sub_23F61C16C();
      sub_23F37AE00(v37, v38, &v127);
      *(_QWORD *)(v35 + 4) = v39;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v33, v34);
      _os_log_impl(&dword_23F35A000, v29, v30, "Unknown response mode %s", (uint8_t *)v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v36, -1, -1);
      sub_23F3F0E04();
    }
    v40 = *(_QWORD *)(v0 + 40);
    v41 = *(_QWORD *)(v0 + 24);

    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v40, v41);
    sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v110 + 8));
    v22(v115, v114);
    v4 = v107;
    (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v32, v116);
    (*(void (**)(_QWORD, _QWORD))(v118 + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 152));
LABEL_32:
    result = v119;
    if (++v3 == v126)
      goto LABEL_49;
  }
  v50 = *(_QWORD *)(v0 + 208);
  v51 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRelease();
  sub_23F61AB70();
  if (sub_23F36195C(v50, 1, v51) == 1)
  {
    sub_23F3CFCB0(*(_QWORD *)(v0 + 208), &qword_256E70238);
    goto LABEL_63;
  }
  v64 = *(_QWORD *)(v0 + 72);
  v66 = *(_QWORD *)(v0 + 56);
  v65 = *(_QWORD *)(v0 + 64);
  v67 = *(_QWORD *)(v0 + 48);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 80));
  sub_23F61B5C0();
  sub_23F61B650();
  sub_23F451C54();
  v68 = sub_23F61C844();
  v69 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
  v69(v65, v67);
  v69(v64, v67);
  if ((v68 & 1) != 0)
  {
    v70 = *(void **)(v0 + 136);
    sub_23F3F0F00();
    sub_23F619E8C();
    v71 = sub_23F3B1A04();
    if (sub_23F3F0E3C(v71))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F3F0DF0(&dword_23F35A000, v72, v73, "Voice only/forward in-app response, ask user to continue on device.");
      sub_23F3F0E04();
    }
    sub_23F451CD8();
    v74 = *(_QWORD *)(v0 + 96);
    v75 = *(_QWORD *)(v0 + 80);

    sub_23F451C94(v76, v77, v78, v79, v80, v81, v82, v83, v96, *((uint64_t *)&v96 + 1), v97, v98, v99, v100, v102, v103, v104, (uint64_t)v22, v107,
      v109,
      v110);
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v74, v75);
    v106(v67, v69);
    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v108 + 8));
    v117 = 0;
    goto LABEL_52;
  }
  (*(void (**)(_QWORD, _QWORD))(v100 + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
LABEL_63:
  v84 = *(void **)(v0 + 128);
  sub_23F3F0F00();
  sub_23F619E8C();
  v85 = sub_23F3B1A04();
  if (sub_23F3F0E3C(v85))
  {
    *(_WORD *)sub_23F366668() = 0;
    sub_23F3F0DF0(&dword_23F35A000, v86, v87, "Voice only/forward in-app response, generate response.");
    sub_23F3F0E04();
  }
  sub_23F451CD8();

  sub_23F451C94(v88, v89, v90, v91, v92, v93, v94, v95, v96, *((uint64_t *)&v96 + 1), v97, v98, v99, v100, v102, v103, v104, v105, v107,
    v109,
    v110);
  sub_23F451D28();
  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
LABEL_50:
  v49 = 1;
LABEL_51:
  v117 = v49;
LABEL_52:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v117);
}

unint64_t sub_23F451C54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E74C40;
  if (!qword_256E74C40)
  {
    v1 = sub_23F61B668();
    result = MEMORY[0x242670A44](MEMORY[0x24BEB9448], v1);
    atomic_store(result, (unint64_t *)&qword_256E74C40);
  }
  return result;
}

uint64_t sub_23F451C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a21 + 8))(v21, v22);
}

uint64_t sub_23F451CA8()
{
  return sub_23F61CC64();
}

uint64_t sub_23F451CB8()
{
  return swift_task_dealloc();
}

uint64_t sub_23F451CC8@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v3, v2);
}

uint64_t sub_23F451CE8@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v1, v3);
}

uint64_t sub_23F451CF8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F451D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_23F451D14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t sub_23F451D20()
{
  return type metadata accessor for DialogOutput();
}

uint64_t sub_23F451D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F451D34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

void sub_23F451D40(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = sub_23F61B92C();
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  sub_23F362930();
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_23F37B78C();
    a3(0);
    sub_23F383D14();
    v9 = a1 + v8;
    v11 = *(_QWORD *)(v10 + 72);
    do
    {
      sub_23F61B3E0();
      v12 = *(_QWORD *)(v15 + 16);
      if (v12 >= *(_QWORD *)(v15 + 24) >> 1)
        sub_23F37B78C();
      *(_QWORD *)(v15 + 16) = v12 + 1;
      sub_23F383EB8();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v15 + v13 + *(_QWORD *)(v6 + 72) * v12, v3, v14);
      v9 += v11;
      --v7;
    }
    while (v7);
  }
  sub_23F362870();
}

void sub_23F451E68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(unint64_t, char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a2;
  v3 = sub_23F61A1D4();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E6FB08);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61B404();
  v39 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v37 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v35 = (char *)&v34 - v12;
  v13 = *(_QWORD *)(a1 + 56);
  v40 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v41 = (unint64_t)(v14 + 63) >> 6;
  sub_23F617BA0();
  v17 = 0;
  v38 = MEMORY[0x24BEE4AF8];
  while (v16)
  {
    v18 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v19 = v18 | (v17 << 6);
LABEL_22:
    v23 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v19);
    sub_23F617BA0();
    sub_23F617BA0();
    v24 = 1;
    sub_23F61A1BC();
    if (*(_QWORD *)(v23 + 16))
    {
      sub_23F375614();
      if ((v26 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v8, *(_QWORD *)(v23 + 56) + *(_QWORD *)(v39 + 72) * v25, v9);
        v24 = 0;
      }
    }
    sub_23F36196C((uint64_t)v8, v24, 1, v9);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v5, v43);
    swift_bridgeObjectRelease();
    if (sub_23F36195C((uint64_t)v8, 1, v9) == 1)
    {
      sub_23F481698((uint64_t)v8, &qword_256E6FB08);
    }
    else
    {
      v27 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
      v28 = v35;
      v27(v35, v8, v9);
      v36 = (void (*)(unint64_t, char *, uint64_t))v27;
      v27(v37, v28, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377350();
        v38 = v32;
      }
      v29 = *(_QWORD *)(v38 + 16);
      if (v29 >= *(_QWORD *)(v38 + 24) >> 1)
      {
        sub_23F377350();
        v38 = v33;
      }
      v31 = v38;
      v30 = v39;
      *(_QWORD *)(v38 + 16) = v29 + 1;
      v36(v31+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v29, v37, v9);
    }
  }
  v20 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v20 >= v41)
    goto LABEL_32;
  v21 = *(_QWORD *)(v40 + 8 * v20);
  ++v17;
  if (v21)
    goto LABEL_21;
  v17 = v20 + 1;
  if (v20 + 1 >= v41)
    goto LABEL_32;
  v21 = *(_QWORD *)(v40 + 8 * v17);
  if (v21)
    goto LABEL_21;
  v17 = v20 + 2;
  if (v20 + 2 >= v41)
    goto LABEL_32;
  v21 = *(_QWORD *)(v40 + 8 * v17);
  if (v21)
    goto LABEL_21;
  v17 = v20 + 3;
  if (v20 + 3 >= v41)
    goto LABEL_32;
  v21 = *(_QWORD *)(v40 + 8 * v17);
  if (v21)
  {
LABEL_21:
    v16 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v17 << 6);
    goto LABEL_22;
  }
  v22 = v20 + 4;
  if (v22 >= v41)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  v21 = *(_QWORD *)(v40 + 8 * v22);
  if (v21)
  {
    v17 = v22;
    goto LABEL_21;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v41)
      goto LABEL_32;
    v21 = *(_QWORD *)(v40 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_21;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_23F45226C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  void (*v60)(char *);
  char *v61;
  uint64_t v62;

  v56 = a2;
  v3 = sub_23F35D2E8(&qword_256E70218);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for DependencyId(0);
  v47 = *(_QWORD *)(v55 - 8);
  v6 = MEMORY[0x24BDAC7A8](v55);
  v54 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v46 = (uint64_t)&v45 - v8;
  v62 = sub_23F35D2E8(&qword_256E74E60);
  v9 = MEMORY[0x24BDAC7A8](v62);
  v11 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v9);
  v61 = (char *)&v45 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v53 = (uint64_t *)((char *)&v45 - v14);
  v15 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  v52 = v15;
  v45 = a1;
  if (v15)
  {
    v16 = sub_23F617D08();
    v17 = 0;
    v18 = *(_QWORD *)(v16 - 8);
    v19 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v48 = *(_QWORD *)(v18 + 72);
    v49 = v18;
    v60 = *(void (**)(char *))(v18 + 16);
    v57 = MEMORY[0x24BEE4AF8];
    v50 = v11;
    v51 = v5;
    v20 = v60;
    v21 = v18;
    do
    {
      v22 = v62;
      v23 = v61;
      v24 = &v61[*(int *)(v62 + 48)];
      v59 = v19;
      v20(v24);
      v25 = (uint64_t)v53;
      v26 = (char *)v53 + *(int *)(v22 + 48);
      *v53 = v17;
      v58 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      v58(v26, v24, v16);
      sub_23F383004(v25, (uint64_t)v11, &qword_256E74E60);
      v27 = *(int *)(v22 + 48);
      v28 = (char *)v23 + v27;
      v29 = (char *)v11 + v27;
      v30 = *v11;
      *v23 = *v11;
      ((void (*)(char *, char *, uint64_t))v20)((char *)v23 + v27, (char *)v11 + v27, v16);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v28, v16);
      v31 = v56;
      sub_23F617BA0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377CE0();
        v31 = v40;
      }
      v32 = *(_QWORD *)(v31 + 16);
      if (v32 >= *(_QWORD *)(v31 + 24) >> 1)
      {
        sub_23F377CE0();
        v31 = v41;
      }
      *(_QWORD *)(v31 + 16) = v32 + 1;
      v33 = v31 + 32 * v32;
      *(_QWORD *)(v33 + 32) = 0;
      *(_QWORD *)(v33 + 40) = 0;
      *(_QWORD *)(v33 + 48) = v30;
      *(_BYTE *)(v33 + 56) = 0;
      v34 = &v61[*(int *)(v62 + 48)];
      ((void (*)(char *, char *, uint64_t))v60)(v34, v29, v16);
      v35 = (uint64_t)v51;
      *v51 = v31;
      v36 = v55;
      v58((char *)(v35 + *(int *)(v55 + 20)), v34, v16);
      sub_23F36196C(v35, 0, 1, v36);
      v11 = v50;
      sub_23F481698((uint64_t)v50, &qword_256E74E60);
      if (sub_23F36195C(v35, 1, v36) == 1)
      {
        sub_23F481698(v35, &qword_256E70218);
      }
      else
      {
        v37 = v46;
        sub_23F36262C(v35, v46, type metadata accessor for DependencyId);
        sub_23F36262C(v37, v54, type metadata accessor for DependencyId);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F377CCC();
          v57 = v42;
        }
        v38 = *(_QWORD *)(v57 + 16);
        if (v38 >= *(_QWORD *)(v57 + 24) >> 1)
        {
          sub_23F377CCC();
          v57 = v43;
        }
        v39 = v57;
        *(_QWORD *)(v57 + 16) = v38 + 1;
        sub_23F36262C(v54, v39+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v38, type metadata accessor for DependencyId);
      }
      ++v17;
      v19 = v59 + v48;
    }
    while (v52 != v17);
  }
  else
  {
    v57 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v57;
}

uint64_t sub_23F4526D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[3];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v5 = type metadata accessor for DependencyId(0);
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)v34 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v38 = (uint64_t)v34 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v34[2] = v2;
    v13 = *(_QWORD *)(sub_23F61AE70() - 8);
    v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v35 = *(_QWORD *)(v13 + 72);
    v34[1] = a1;
    sub_23F617BA0();
    v15 = MEMORY[0x24BEE4AF8];
    v36 = v8;
    v37 = a2;
    do
    {
      v42 = sub_23F61AE40();
      v17 = v16;
      v18 = sub_23F61AE4C();
      v20 = v19;
      sub_23F617BA0();
      sub_23F617BA0();
      v21 = a2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377CE0();
        v21 = v29;
      }
      v22 = *(_QWORD *)(v21 + 16);
      if (v22 >= *(_QWORD *)(v21 + 24) >> 1)
      {
        sub_23F377CE0();
        v21 = v30;
      }
      *(_QWORD *)(v21 + 16) = v22 + 1;
      v23 = v21 + 32 * v22;
      *(_QWORD *)(v23 + 32) = v42;
      *(_QWORD *)(v23 + 40) = v17;
      *(_QWORD *)(v23 + 48) = v18;
      *(_BYTE *)(v23 + 56) = v20 & 1;
      swift_bridgeObjectRelease();
      v24 = v39;
      sub_23F61AE64();
      *v24 = v21;
      v25 = (uint64_t)v24;
      v26 = v38;
      sub_23F36262C(v25, v38, type metadata accessor for DependencyId);
      v27 = (uint64_t)v36;
      sub_23F36262C(v26, (uint64_t)v36, type metadata accessor for DependencyId);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377CCC();
        v15 = v31;
      }
      a2 = v37;
      v28 = *(_QWORD *)(v15 + 16);
      if (v28 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_23F377CCC();
        v15 = v32;
      }
      *(_QWORD *)(v15 + 16) = v28 + 1;
      sub_23F36262C(v27, v15+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v28, type metadata accessor for DependencyId);
      v14 += v35;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v15;
}

uint64_t sub_23F4529A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  v5 = a2 + 56;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  result = sub_23F617BA0();
  v11 = 0;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * i);
    swift_bridgeObjectRetain_n();
    sub_23F453224(MEMORY[0x24BEE4B00], a3, v17);
    sub_23F4727A0(&v19, v18, (void (*)(uint64_t *, uint64_t))sub_23F480ED4, (uint64_t (*)(uint64_t, uint64_t))sub_23F491114, (uint64_t)&qword_256E71A48, (uint64_t)&unk_256E74E80);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v11 >= v9)
      goto LABEL_24;
    v15 = *(_QWORD *)(v5 + 8 * v11);
    if (!v15)
      break;
LABEL_17:
    v8 = (v15 - 1) & v15;
  }
  v16 = v11 + 1;
  if (v11 + 1 >= v9)
    goto LABEL_24;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 2;
  if (v11 + 2 >= v9)
    goto LABEL_24;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 3;
  if (v11 + 3 >= v9)
    goto LABEL_24;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 4;
  if (v11 + 4 >= v9)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    swift_release();
    return v20;
  }
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
LABEL_16:
    v11 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v9)
      goto LABEL_24;
    v15 = *(_QWORD *)(v5 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23F452B80(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  void (*v51)(_BYTE *, uint64_t);
  uint64_t v52;
  void (*v53)(void);
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  _BYTE *v59;
  uint64_t v60;
  void (*v61)(_BYTE *, _BYTE *, uint64_t);
  _QWORD *v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  unint64_t v68;
  char v69;
  _QWORD *v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t result;
  _BYTE v75[16];
  uint64_t v76;
  int64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  _BYTE *v80;
  _QWORD *v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int64_t v91;
  void (*v92)(void);
  uint64_t v93;
  uint64_t v94;
  void (*v95)(_BYTE *, uint64_t);
  void (*v96)(uint64_t, uint64_t, uint64_t);
  _BYTE *v97;
  _QWORD v98[6];
  _QWORD *v99;

  v86 = a4;
  v84 = a3;
  v81 = a1;
  v5 = sub_23F61B404();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v79 = &v75[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v93 = sub_23F35D2E8(&qword_256E6FAF8);
  v8 = MEMORY[0x24BDAC7A8](v93);
  v78 = &v75[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v8);
  v80 = &v75[-v11];
  v12 = MEMORY[0x24BDAC7A8](v10);
  v83 = &v75[-v13];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = &v75[-v15];
  MEMORY[0x24BDAC7A8](v14);
  v82 = &v75[-v17];
  sub_23F38231C(a2, v98);
  v85 = v98[0];
  v76 = v98[1];
  v91 = v98[3];
  v18 = v98[4];
  v77 = (unint64_t)(v98[2] + 64) >> 6;
  sub_23F617BA0();
  v90 = v6;
  v97 = v16;
  if (!v18)
    goto LABEL_3;
LABEL_2:
  v19 = v5;
  v20 = v6;
  v94 = (v18 - 1) & v18;
  v21 = __clz(__rbit64(v18)) | (v91 << 6);
  while (1)
  {
    v26 = v85;
    v27 = *(_QWORD *)(v85 + 48);
    v28 = sub_23F61A1D4();
    v29 = *(_QWORD **)(v28 - 8);
    v30 = v27 + v29[9] * v21;
    v31 = (void (*)(void))v29[2];
    v32 = (uint64_t)v82;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v31)(v82, v30, v28);
    v33 = *(_QWORD *)(v26 + 56);
    v34 = v20;
    v89 = *(_QWORD *)(v20 + 72);
    v35 = v33 + v89 * v21;
    v36 = v93;
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
    v38 = v19;
    v37(v32 + *(int *)(v93 + 48), v35, v19);
    v39 = (uint64_t)v97;
    sub_23F383004(v32, (uint64_t)v97, &qword_256E6FAF8);
    v40 = *(int *)(v36 + 48);
    v41 = v83;
    v42 = &v83[v40];
    v43 = v39;
    v44 = v39 + v40;
    v92 = v31;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v31)(v83, v43, v28);
    v96 = v37;
    v37((uint64_t)v42, v44, v38);
    v45 = v38;
    v46 = sub_23F61A1C8();
    v48 = v47;
    v95 = (void (*)(_BYTE *, uint64_t))v29[1];
    v95(v41, v28);
    if (v46 == v84 && v48 == v86)
    {
      swift_bridgeObjectRelease();
      v51 = *(void (**)(_BYTE *, uint64_t))(v34 + 8);
      v51(v42, v45);
    }
    else
    {
      v50 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      v51 = *(void (**)(_BYTE *, uint64_t))(v34 + 8);
      v51(v42, v45);
      if ((v50 & 1) == 0)
      {
        v5 = v45;
        v6 = v90;
        goto LABEL_37;
      }
    }
    v53 = v92;
    v52 = v93;
    v54 = v80;
    v55 = &v80[*(int *)(v93 + 48)];
    v56 = v44;
    v57 = (uint64_t)v97;
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v92)(v80, v97, v28);
    v87 = v56;
    v96((uint64_t)v55, v56, v45);
    v88 = sub_23F61A1A4();
    LOBYTE(v56) = v58;
    v95(v54, v28);
    v51(v55, v45);
    v5 = v45;
    if ((v56 & 1) != 0)
    {
      v6 = v90;
      goto LABEL_38;
    }
    v59 = &v78[*(int *)(v52 + 48)];
    v60 = v28;
    v53();
    v96((uint64_t)v59, v87, v45);
    v61 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v90 + 32);
    v61(v79, v59, v45);
    v62 = v81;
    swift_isUniquelyReferenced_nonNull_native();
    v99 = v62;
    v63 = v88;
    v64 = sub_23F37556C(v88);
    if (__OFADD__(v62[2], (v65 & 1) == 0))
      goto LABEL_42;
    v66 = v64;
    v67 = v65;
    sub_23F35D2E8(&qword_256E74EE8);
    v5 = v45;
    if ((sub_23F61CA18() & 1) != 0)
    {
      v68 = sub_23F37556C(v63);
      if ((v67 & 1) != (v69 & 1))
        goto LABEL_44;
      v66 = v68;
    }
    v70 = v99;
    if ((v67 & 1) != 0)
    {
      v6 = v90;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v90 + 40))(v99[7] + v66 * v89, v79, v45);
    }
    else
    {
      v99[(v66 >> 6) + 8] |= 1 << v66;
      *(_QWORD *)(v70[6] + 8 * v66) = v63;
      v61((_BYTE *)(v70[7] + v66 * v89), v79, v45);
      v71 = v70[2];
      v72 = __OFADD__(v71, 1);
      v73 = v71 + 1;
      if (v72)
        goto LABEL_43;
      v70[2] = v73;
      v6 = v90;
    }
    v81 = v99;
    swift_bridgeObjectRelease();
    v95(v78, v60);
LABEL_37:
    v57 = (uint64_t)v97;
LABEL_38:
    v18 = v94;
    sub_23F481698(v57, &qword_256E6FAF8);
    if (v18)
      goto LABEL_2;
LABEL_3:
    v22 = v91 + 1;
    if (__OFADD__(v91, 1))
      break;
    if (v22 >= v77)
      goto LABEL_40;
    v23 = *(_QWORD *)(v76 + 8 * v22);
    v24 = v91 + 1;
    if (!v23)
    {
      v24 = v91 + 2;
      if (v91 + 2 >= v77)
        goto LABEL_40;
      v23 = *(_QWORD *)(v76 + 8 * v24);
      if (!v23)
      {
        v24 = v91 + 3;
        if (v91 + 3 >= v77)
          goto LABEL_40;
        v23 = *(_QWORD *)(v76 + 8 * v24);
        if (!v23)
        {
          v24 = v91 + 4;
          if (v91 + 4 >= v77)
            goto LABEL_40;
          v23 = *(_QWORD *)(v76 + 8 * v24);
          if (!v23)
          {
            v24 = v91 + 5;
            if (v91 + 5 >= v77)
              goto LABEL_40;
            v23 = *(_QWORD *)(v76 + 8 * v24);
            if (!v23)
            {
              v25 = v91 + 6;
              while (v25 < v77)
              {
                v23 = *(_QWORD *)(v76 + 8 * v25++);
                if (v23)
                {
                  v24 = v25 - 1;
                  goto LABEL_18;
                }
              }
LABEL_40:
              swift_release();
              swift_bridgeObjectRelease();
              return (uint64_t)v81;
            }
          }
        }
      }
    }
LABEL_18:
    v19 = v5;
    v20 = v6;
    v94 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
    v91 = v24;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

void sub_23F453224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  uint64_t v30;

  v28 = a3;
  v26 = sub_23F35D2E8(&qword_256E708C0);
  v6 = MEMORY[0x24BDAC7A8](v26);
  v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - v9;
  v30 = a1;
  sub_23F38231C(a2, v29);
  v27 = v29[0];
  v11 = v29[3];
  v12 = v29[4];
  v24 = v29[1];
  v25 = (unint64_t)(v29[2] + 64) >> 6;
  sub_23F617BA0();
  if (!v12)
    goto LABEL_3;
LABEL_2:
  v13 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  v14 = v13 | (v11 << 6);
  while (1)
  {
    v18 = *(_QWORD *)(v27 + 56);
    v19 = (uint64_t *)(*(_QWORD *)(v27 + 48) + 16 * v14);
    v20 = *v19;
    v21 = v19[1];
    v22 = sub_23F617D08();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(&v10[*(int *)(v26 + 48)], v18 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, v22);
    *(_QWORD *)v10 = v20;
    *((_QWORD *)v10 + 1) = v21;
    sub_23F383004((uint64_t)v10, (uint64_t)v8, &qword_256E708C0);
    sub_23F617BA0();
    sub_23F46FA1C(&v30, v8, v28);
    if (v3)
    {
      swift_bridgeObjectRelease();
      sub_23F481698((uint64_t)v8, &qword_256E708C0);
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    sub_23F481698((uint64_t)v8, &qword_256E708C0);
    if (v12)
      goto LABEL_2;
LABEL_3:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v15 >= v25)
      goto LABEL_24;
    v16 = *(_QWORD *)(v24 + 8 * v15);
    if (!v16)
    {
      v17 = v11 + 2;
      if (v11 + 2 >= v25)
        goto LABEL_24;
      v16 = *(_QWORD *)(v24 + 8 * v17);
      if (v16)
        goto LABEL_12;
      v17 = v11 + 3;
      if (v11 + 3 >= v25)
        goto LABEL_24;
      v16 = *(_QWORD *)(v24 + 8 * v17);
      if (v16)
        goto LABEL_12;
      v17 = v11 + 4;
      if (v11 + 4 >= v25)
        goto LABEL_24;
      v16 = *(_QWORD *)(v24 + 8 * v17);
      if (v16)
      {
LABEL_12:
        v15 = v17;
      }
      else
      {
        v15 = v11 + 5;
        if (v11 + 5 >= v25)
          goto LABEL_24;
        v16 = *(_QWORD *)(v24 + 8 * v15);
        if (!v16)
        {
          v23 = v11 + 6;
          while (v23 < v25)
          {
            v16 = *(_QWORD *)(v24 + 8 * v23++);
            if (v16)
            {
              v15 = v23 - 1;
              goto LABEL_13;
            }
          }
LABEL_24:
          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
      }
    }
LABEL_13:
    v12 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v15 << 6);
    v11 = v15;
  }
  __break(1u);
}

void sub_23F4534CC(uint64_t a1, uint64_t (*a2)(char *, char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];
  int64_t v24;

  v4 = sub_23F35D2E8(&qword_256E74E48);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F38231C(a1, v23);
  v7 = v23[0];
  v22 = v23[1];
  v8 = v23[3];
  v9 = v23[4];
  v24 = (unint64_t)(v23[2] + 64) >> 6;
  sub_23F617BA0();
  while (1)
  {
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v8 << 6);
      goto LABEL_20;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v12 >= v24)
      goto LABEL_22;
    v13 = *(_QWORD *)(v22 + 8 * v12);
    v14 = v8 + 1;
    if (!v13)
    {
      v14 = v8 + 2;
      if (v8 + 2 >= v24)
        goto LABEL_22;
      v13 = *(_QWORD *)(v22 + 8 * v14);
      if (!v13)
      {
        v14 = v8 + 3;
        if (v8 + 3 >= v24)
          goto LABEL_22;
        v13 = *(_QWORD *)(v22 + 8 * v14);
        if (!v13)
        {
          v14 = v8 + 4;
          if (v8 + 4 >= v24)
            goto LABEL_22;
          v13 = *(_QWORD *)(v22 + 8 * v14);
          if (!v13)
          {
            v14 = v8 + 5;
            if (v8 + 5 >= v24)
              goto LABEL_22;
            v13 = *(_QWORD *)(v22 + 8 * v14);
            if (!v13)
            {
              v15 = v8 + 6;
              while (v15 < v24)
              {
                v13 = *(_QWORD *)(v22 + 8 * v15++);
                if (v13)
                {
                  v14 = v15 - 1;
                  goto LABEL_19;
                }
              }
LABEL_22:
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_19:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
    v8 = v14;
LABEL_20:
    v16 = *(_QWORD *)(v7 + 48);
    v17 = sub_23F617D08();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v6, v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v11, v17);
    v18 = *(_QWORD *)(v7 + 56);
    v19 = sub_23F61B92C();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(&v6[*(int *)(v4 + 48)], v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v11, v19);
    v20 = a2(v6, &v6[*(int *)(v4 + 48)]);
    sub_23F481698((uint64_t)v6, &qword_256E74E48);
    if ((v20 & 1) == 0)
    {
      swift_release();
      return;
    }
  }
  __break(1u);
}

void sub_23F453714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  sub_23F362ABC();
  v85 = v0;
  v67 = v1;
  v65 = sub_23F619FAC();
  v64 = *(_QWORD *)(v65 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F36285C();
  v66 = v3;
  v4 = sub_23F384040();
  v83 = *(_QWORD *)(v4 - 8);
  v84 = v4;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  v8 = v7 - v6;
  sub_23F35D2E8(&qword_256E702D8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F38F964();
  v12 = v11 - v10;
  v13 = sub_23F61A684();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  sub_23F383780();
  sub_23F3B13F0(v18);
  v19 = sub_23F61B2C0();
  v79 = *(_QWORD *)(v19 - 8);
  v80 = v19;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F38F964();
  v23 = v22 - v21;
  v24 = sub_23F61B1E8();
  v77 = *(_QWORD *)(v24 - 8);
  v78 = v24;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F36285C();
  v76 = v26;
  sub_23F39C56C();
  v27 = sub_23F61B2E4();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  sub_23F38F964();
  v31 = v30 - v29;
  v32 = sub_23F61B14C();
  if (*(_QWORD *)(v32 + 16))
  {
    sub_23F383EB8();
    v75 = v32 + v34;
    v74 = *MEMORY[0x24BE56AC8];
    v68 = v23;
    v69 = v12;
    v81 = v27;
    v70 = v31;
    v71 = v28;
    v72 = v14;
    v73 = v32;
    do
    {
      if (v33 > *(_QWORD *)(v32 + 16))
      {
        __break(1u);
        return;
      }
      v35 = v12;
      v36 = *(_QWORD *)(v28 + 72);
      v82 = v33 - 1;
      sub_23F383C64(v31, v75 + v36 * (v33 - 1), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16));
      sub_23F61B2CC();
      v37 = v31;
      v38 = v28;
      v40 = v79;
      v39 = v80;
      v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 88))(v23, v80);
      if (v41 == v74)
      {
        (*(void (**)(uint64_t, uint64_t))(v40 + 96))(v23, v39);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 32))(v76, v23, v78);
        v42 = sub_23F61B1B8();
        v43 = *(_QWORD *)(v42 + 16);
        if (v43)
        {
          v44 = v72;
          sub_23F383EB8();
          v46 = v42 + v45;
          v47 = *(_QWORD *)(v44 + 72);
          v48 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
          while (1)
          {
            v48(v17, v46, v13);
            sub_23F61A660();
            v49 = sub_23F617CD8();
            (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v8, v84);
            if ((v49 & 1) != 0)
              break;
            sub_23F3D98EC((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
            v46 += v47;
            if (!--v43)
            {
              v50 = 1;
              v12 = v69;
              goto LABEL_13;
            }
          }
          v12 = v69;
          sub_23F4244A8(v69, (uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 32));
          v50 = 0;
LABEL_13:
          v31 = v70;
          v28 = v71;
          v23 = v68;
        }
        else
        {
          v50 = 1;
          v31 = v70;
          v28 = v71;
          v12 = v35;
          v44 = v72;
        }
        v32 = v73;
        sub_23F36196C(v12, v50, 1, v13);
        sub_23F3837B0();
        sub_23F383740(v12, 1, v13);
        if (!v51)
        {
          sub_23F362984();
          v52 = v63;
          v53 = sub_23F38422C();
          sub_23F4244A8(v53, v54, v55);
          v56 = v66;
          sub_23F61A63C();
          sub_23F3D98EC(v52, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
          sub_23F482964();
          sub_23F482A0C();
          v57 = v64;
          if ((*(unsigned int (**)(uint64_t, uint64_t))(v64 + 88))(v56, v65) == *MEMORY[0x24BE54D08])
          {
            sub_23F383E88(v56, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 96));
            v58 = sub_23F482ECC();
            v59 = v67;
            sub_23F482A60(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32));
            v60 = v59;
            v61 = 0;
            v62 = v58;
            goto LABEL_23;
          }
          sub_23F383E88(v56, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
          goto LABEL_22;
        }
        sub_23F482964();
        sub_23F482A0C();
        sub_23F481698(v12, &qword_256E702D8);
      }
      else
      {
        sub_23F383CA8(v37, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
        sub_23F482504();
        v28 = v38;
        v31 = v37;
        v12 = v35;
        v32 = v73;
      }
      v33 = v82;
    }
    while (v82);
  }
  sub_23F362984();
LABEL_22:
  v62 = sub_23F482ECC();
  v60 = v67;
  v61 = 1;
LABEL_23:
  sub_23F36196C(v60, v61, 1, v62);
  sub_23F362948();
}

uint64_t sub_23F453B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v3 = sub_23F619FAC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v36 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61A684();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v35 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v30 = (char *)&v26 - v11;
  v12 = MEMORY[0x24BEE4AF8];
  v39 = MEMORY[0x24BEE4AF8];
  v34 = *(_QWORD *)(a1 + 16);
  if (v34)
  {
    v26 = v1;
    v33 = v4;
    v13 = 0;
    v32 = *MEMORY[0x24BE54CC0];
    v31 = *MEMORY[0x24BE54CD8];
    v28 = v3;
    v29 = a1;
    v27 = v6;
    v14 = v30;
    v15 = v33;
    while (v13 < *(_QWORD *)(a1 + 16))
    {
      v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v17 = a1;
      v37 = *(_QWORD *)(v7 + 72);
      v38 = v16;
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v14, a1 + v16 + v37 * v13, v6);
      v18 = v6;
      v19 = v36;
      sub_23F61A63C();
      v20 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v19, v3);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v3);
      if (v20 == v32 || v20 == v31)
      {
        v22 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v22(v35, v14, v18);
        v23 = v39;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37BA28();
          v23 = v39;
        }
        v24 = *(_QWORD *)(v23 + 16);
        if (v24 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          sub_23F37BA28();
          v23 = v39;
        }
        *(_QWORD *)(v23 + 16) = v24 + 1;
        v25 = v23 + v38 + v24 * v37;
        v6 = v27;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(v25, v35, v27);
        v39 = v23;
        v3 = v28;
        a1 = v29;
        v14 = v30;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v14, v18);
        v6 = v18;
        a1 = v17;
      }
      if (v34 == ++v13)
      {
        v12 = v39;
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

void sub_23F453E0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  v20 = MEMORY[0x24BEE4AF8];
  sub_23F37B47C();
  v18 = a1 + 56;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 56);
  v19 = (unint64_t)(63 - v4) >> 6;
  if (!v2)
  {
    sub_23F617BA0();
    v7 = 0;
LABEL_28:
    if (!v5)
      goto LABEL_30;
LABEL_29:
    for (v5 &= v5 - 1; ; v5 = (v14 - 1) & v14)
    {
      swift_bridgeObjectRetain_n();
      sub_23F35D2E8(&qword_256E74E30);
      sub_23F61C16C();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(v20 + 16);
      if (v16 >= *(_QWORD *)(v20 + 24) >> 1)
        sub_23F37B47C();
      *(_QWORD *)(v20 + 16) = v16 + 1;
      v17 = v20 + 16 * v16;
      *(_QWORD *)(v17 + 32) = 538976288;
      *(_QWORD *)(v17 + 40) = 0xE400000000000000;
      if (v5)
        goto LABEL_29;
LABEL_30:
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        goto LABEL_52;
      }
      if (v13 >= v19)
        goto LABEL_50;
      v14 = *(_QWORD *)(v18 + 8 * v13);
      ++v7;
      if (!v14)
      {
        v7 = v13 + 1;
        if (v13 + 1 >= v19)
          goto LABEL_50;
        v14 = *(_QWORD *)(v18 + 8 * v7);
        if (!v14)
        {
          v7 = v13 + 2;
          if (v13 + 2 >= v19)
            goto LABEL_50;
          v14 = *(_QWORD *)(v18 + 8 * v7);
          if (!v14)
          {
            v7 = v13 + 3;
            if (v13 + 3 >= v19)
              goto LABEL_50;
            v14 = *(_QWORD *)(v18 + 8 * v7);
            if (!v14)
            {
              v15 = v13 + 4;
              if (v15 >= v19)
              {
LABEL_50:
                swift_release();
                return;
              }
              v14 = *(_QWORD *)(v18 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v7 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    break;
                  if (v7 >= v19)
                    goto LABEL_50;
                  v14 = *(_QWORD *)(v18 + 8 * v7);
                  ++v15;
                  if (v14)
                    goto LABEL_45;
                }
LABEL_55:
                __break(1u);
LABEL_56:
                __break(1u);
                goto LABEL_57;
              }
              v7 = v15;
            }
          }
        }
      }
LABEL_45:
      ;
    }
  }
  sub_23F617BA0();
  v6 = 0;
  v7 = 0;
  while (v5)
  {
    v5 &= v5 - 1;
LABEL_23:
    swift_bridgeObjectRetain_n();
    sub_23F35D2E8(&qword_256E74E30);
    sub_23F61C16C();
    sub_23F61C280();
    swift_bridgeObjectRelease();
    sub_23F61C280();
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v20 + 16);
    if (v11 >= *(_QWORD *)(v20 + 24) >> 1)
      sub_23F37B47C();
    ++v6;
    *(_QWORD *)(v20 + 16) = v11 + 1;
    v12 = v20 + 16 * v11;
    *(_QWORD *)(v12 + 32) = 538976288;
    *(_QWORD *)(v12 + 40) = 0xE400000000000000;
    if (v6 == v2)
      goto LABEL_28;
  }
  v8 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v8 >= v19)
    goto LABEL_53;
  v9 = *(_QWORD *)(v18 + 8 * v8);
  ++v7;
  if (v9)
    goto LABEL_22;
  v7 = v8 + 1;
  if (v8 + 1 >= v19)
    goto LABEL_54;
  v9 = *(_QWORD *)(v18 + 8 * v7);
  if (v9)
    goto LABEL_22;
  v7 = v8 + 2;
  if (v8 + 2 >= v19)
    goto LABEL_58;
  v9 = *(_QWORD *)(v18 + 8 * v7);
  if (v9)
    goto LABEL_22;
  v7 = v8 + 3;
  if (v8 + 3 >= v19)
    goto LABEL_59;
  v9 = *(_QWORD *)(v18 + 8 * v7);
  if (v9)
  {
LABEL_22:
    v5 = (v9 - 1) & v9;
    goto LABEL_23;
  }
  v10 = v8 + 4;
  if (v10 >= v19)
    goto LABEL_60;
  v9 = *(_QWORD *)(v18 + 8 * v10);
  if (v9)
  {
    v7 = v10;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_56;
    if (v7 >= v19)
      break;
    v9 = *(_QWORD *)(v18 + 8 * v7);
    ++v10;
    if (v9)
      goto LABEL_22;
  }
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
}

uint64_t Interpreter.init<A>(toolbox:actionRequirements:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t (**v14)@<X0>(uint64_t *@<X8>);
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v10 = *(_QWORD *)(sub_23F384B34() - 8);
  sub_23F38431C(a5, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  v16 = a3;
  v17 = a4;
  v11 = sub_23F36145C((uint64_t *)&v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v11, a2, a3);
  sub_23F383D74(a1, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  v12 = sub_23F482EC4();
  result = sub_23F362678(&v15, a5 + *(int *)(v12 + 20));
  v14 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(a5 + *(int *)(v12 + 24));
  *v14 = sub_23F45437C;
  v14[1] = 0;
  return result;
}

uint64_t type metadata accessor for Interpreter(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E74CF8);
}

_QWORD *sub_23F454340()
{
  type metadata accessor for ToolResolver();
  swift_allocObject();
  return sub_23F5E8EF8();
}

uint64_t sub_23F45437C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = (uint64_t)sub_23F454340();
  if (!v1)
  {
    v4 = result;
    result = type metadata accessor for ToolResolver();
    a1[3] = result;
    a1[4] = (uint64_t)&off_250FE0A38;
    *a1 = v4;
  }
  return result;
}

uint64_t Interpreter.resolve(sessionState:contextId:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = type metadata accessor for ValueResolver();
  v4[12] = sub_23F366578();
  v5 = sub_23F482ECC();
  v4[13] = v5;
  v4[14] = *(_QWORD *)(v5 - 8);
  v4[15] = sub_23F366578();
  v6 = sub_23F61AE94();
  v4[16] = v6;
  v4[17] = *(_QWORD *)(v6 - 8);
  v4[18] = sub_23F366578();
  v7 = sub_23F61A3D8();
  v4[19] = v7;
  v4[20] = *(_QWORD *)(v7 - 8);
  v4[21] = sub_23F366578();
  v8 = sub_23F61A204();
  v4[22] = v8;
  v4[23] = *(_QWORD *)(v8 - 8);
  v4[24] = sub_23F366578();
  v9 = sub_23F61AB28();
  v4[25] = v9;
  v4[26] = *(_QWORD *)(v9 - 8);
  v4[27] = sub_23F366578();
  v10 = sub_23F61A780();
  v4[28] = v10;
  v4[29] = *(_QWORD *)(v10 - 8);
  v4[30] = sub_23F366578();
  v11 = sub_23F61A5AC();
  v4[31] = v11;
  v4[32] = *(_QWORD *)(v11 - 8);
  v4[33] = sub_23F366578();
  v12 = sub_23F61A24C();
  v4[34] = v12;
  v4[35] = *(_QWORD *)(v12 - 8);
  v4[36] = sub_23F366578();
  sub_23F35D2E8(&qword_256E702D0);
  v4[37] = sub_23F366578();
  v13 = sub_23F61A684();
  v4[38] = v13;
  v4[39] = *(_QWORD *)(v13 - 8);
  v4[40] = sub_23F3666CC();
  v4[41] = sub_23F3666CC();
  v4[42] = sub_23F3666CC();
  v4[43] = sub_23F3666CC();
  v4[44] = sub_23F3666CC();
  v14 = sub_23F384B34();
  v4[45] = v14;
  v4[46] = *(_QWORD *)(v14 - 8);
  v4[47] = sub_23F366578();
  type metadata accessor for ActionResolverRequestEvaluator();
  v4[48] = sub_23F366578();
  v15 = sub_23F618B90();
  v4[49] = v15;
  v4[50] = *(_QWORD *)(v15 - 8);
  v4[51] = sub_23F366578();
  v16 = sub_23F61AA14();
  v4[52] = v16;
  v4[53] = *(_QWORD *)(v16 - 8);
  v4[54] = sub_23F3666CC();
  v4[55] = sub_23F3666CC();
  v17 = sub_23F61ADEC();
  v4[56] = v17;
  v4[57] = *(_QWORD *)(v17 - 8);
  v4[58] = sub_23F366578();
  v4[59] = sub_23F35D2E8(&qword_256E74C50);
  v4[60] = sub_23F366578();
  sub_23F35D2E8(&qword_256E70888);
  v4[61] = sub_23F3666CC();
  v4[62] = sub_23F3666CC();
  v4[63] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E70878);
  v4[64] = sub_23F366578();
  v18 = sub_23F61B1E8();
  v4[65] = v18;
  v4[66] = *(_QWORD *)(v18 - 8);
  v4[67] = sub_23F366578();
  v19 = sub_23F619FAC();
  v4[68] = v19;
  v4[69] = *(_QWORD *)(v19 - 8);
  v4[70] = sub_23F3666CC();
  v4[71] = sub_23F3666CC();
  v4[72] = sub_23F3666CC();
  v4[73] = sub_23F3666CC();
  v20 = sub_23F61A738();
  v4[74] = v20;
  v4[75] = *(_QWORD *)(v20 - 8);
  v4[76] = sub_23F3666CC();
  v4[77] = sub_23F3666CC();
  v21 = sub_23F618134();
  v4[78] = v21;
  v4[79] = *(_QWORD *)(v21 - 8);
  v4[80] = sub_23F3666CC();
  v4[81] = sub_23F3666CC();
  v22 = sub_23F61ACA8();
  v4[82] = v22;
  v4[83] = *(_QWORD *)(v22 - 8);
  v4[84] = sub_23F3666CC();
  v4[85] = sub_23F3666CC();
  v23 = sub_23F384040();
  v4[86] = v23;
  v4[87] = *(_QWORD *)(v23 - 8);
  v4[88] = sub_23F3666CC();
  v4[89] = sub_23F3666CC();
  v4[90] = sub_23F3666CC();
  v4[91] = sub_23F3666CC();
  v4[92] = sub_23F3666CC();
  v4[93] = sub_23F3666CC();
  v4[94] = sub_23F3666CC();
  v4[95] = sub_23F3666CC();
  v4[96] = sub_23F3666CC();
  v4[97] = sub_23F3666CC();
  v4[98] = sub_23F3666CC();
  v4[99] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E702D8);
  v4[100] = sub_23F3666CC();
  v4[101] = sub_23F3666CC();
  v4[102] = sub_23F3666CC();
  v4[103] = sub_23F3666CC();
  v24 = sub_23F61A504();
  v4[104] = v24;
  v4[105] = *(_QWORD *)(v24 - 8);
  v4[106] = sub_23F366578();
  v25 = sub_23F61A36C();
  v4[107] = v25;
  v4[108] = *(_QWORD *)(v25 - 8);
  v4[109] = sub_23F366578();
  v26 = sub_23F61B0E0();
  v4[110] = v26;
  v4[111] = *(_QWORD *)(v26 - 8);
  v4[112] = sub_23F366578();
  type metadata accessor for UserPromptResolver(0);
  v4[113] = sub_23F3666CC();
  v4[114] = sub_23F3666CC();
  v27 = sub_23F61A360();
  v4[115] = v27;
  v4[116] = *(_QWORD *)(v27 - 8);
  v4[117] = sub_23F3666CC();
  v4[118] = sub_23F3666CC();
  v28 = sub_23F61A0B4();
  v4[119] = v28;
  v4[120] = *(_QWORD *)(v28 - 8);
  v4[121] = sub_23F366578();
  v29 = sub_23F61B164();
  v4[122] = v29;
  v4[123] = *(_QWORD *)(v29 - 8);
  v4[124] = sub_23F3666CC();
  v4[125] = sub_23F3666CC();
  v4[126] = sub_23F3666CC();
  v4[127] = sub_23F3666CC();
  v4[128] = sub_23F3666CC();
  v4[129] = sub_23F3666CC();
  v4[130] = sub_23F3666CC();
  v4[131] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E702E0);
  v4[132] = sub_23F3666CC();
  v4[133] = sub_23F3666CC();
  v4[134] = sub_23F3666CC();
  v4[135] = sub_23F3666CC();
  v4[136] = sub_23F3666CC();
  v30 = sub_23F61B2C0();
  v4[137] = v30;
  v4[138] = *(_QWORD *)(v30 - 8);
  v4[139] = sub_23F3666CC();
  v4[140] = sub_23F3666CC();
  v4[141] = sub_23F3666CC();
  v4[142] = sub_23F3666CC();
  v4[143] = sub_23F3666CC();
  v31 = sub_23F61A6B4();
  v4[144] = v31;
  v4[145] = *(_QWORD *)(v31 - 8);
  v4[146] = sub_23F366578();
  v32 = sub_23F619E98();
  v4[147] = v32;
  v4[148] = *(_QWORD *)(v32 - 8);
  v4[149] = sub_23F3666CC();
  v4[150] = sub_23F3666CC();
  v4[151] = sub_23F3666CC();
  v4[152] = sub_23F3666CC();
  v4[153] = sub_23F3666CC();
  v4[154] = sub_23F3666CC();
  v4[155] = sub_23F3666CC();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F454A20()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD, _QWORD);
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t (*v67)(uint64_t, uint64_t);
  int v68;
  int v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  _BOOL4 v83;
  uint64_t v84;
  uint64_t v85;
  _DWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(_QWORD);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v111)(_QWORD, _QWORD);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  void (*v174)(uint64_t);
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t (*v187)(void);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void (*v192)(uint64_t);
  void (*v193)(uint64_t);
  uint64_t v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  void (*v198)(uint64_t, uint64_t);
  uint64_t v199;
  uint64_t v200;
  void (*v201)(_QWORD, _QWORD);
  void (*v202)(uint64_t, uint64_t);

  sub_23F3836F0();
  sub_23F384060();
  v1 = sub_23F619E8C();
  v2 = sub_23F61C610();
  if (os_log_type_enabled(v1, v2))
  {
    *(_WORD *)sub_23F366668() = 0;
    sub_23F432948(&dword_23F35A000, v1, v3, "resolving query");
    sub_23F366530();
  }
  v4 = v0[148];
  v5 = v0[136];
  v6 = v0[123];

  v0[156] = *(_QWORD *)(v4 + 8);
  sub_23F48252C();
  sub_23F61B128();
  sub_23F61B14C();
  v7 = *(void (**)(_QWORD, _QWORD))(v6 + 8);
  v0[157] = v7;
  sub_23F482E68();
  sub_23F482E80();
  sub_23F362984();
  v8 = sub_23F61B2E4();
  sub_23F3C84F4(v5);
  if (v27)
  {
    sub_23F481698(v0[136], &qword_256E702E0);
  }
  else
  {
    sub_23F482E50();
    sub_23F48294C();
    sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
    v9 = sub_23F4822CC();
    if (v9 == *MEMORY[0x24BE56B48])
    {
      v10 = v0[146];
      v11 = v0[145];
      sub_23F482E44();
      sub_23F4827D4(v12);
      v13 = sub_23F482084(v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
      v14 = *(_QWORD *)(MEMORY[0x24266DBA0](v13) + 16);
      if (v14)
      {
        v201 = v7;
        v15 = v0[120];
        sub_23F383EB8();
        v18 = v16 + v17;
        v19 = *(_QWORD *)(v15 + 72);
        v20 = *(uint64_t (**)(void))(v15 + 16);
        sub_23F617BA0();
        while (1)
        {
          v21 = v0[121];
          sub_23F4827E0();
          v22 = v20();
          v23 = *(_QWORD *)(MEMORY[0x24266D5B8](v22) + 16);
          swift_bridgeObjectRelease();
          sub_23F383D74(v21, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
          if (!v23)
            break;
          v18 += v19;
          if (!--v14)
          {
            sub_23F384A80();
            v7 = v201;
            goto LABEL_14;
          }
        }
        v101 = v0[146];
        v103 = v0[7];
        v102 = v0[8];
        sub_23F384A80();
        sub_23F458358(v102, v101, v103);
        v33 = v0[146];
        v34 = v0[144];
        v35 = *(void (**)(uint64_t, uint64_t))(v0[145] + 8);
        goto LABEL_52;
      }
      swift_bridgeObjectRelease();
LABEL_14:
      v24 = v0[145];
    }
    else
    {
      sub_23F482E44();
    }
    sub_23F384274(v24);
  }
  v25 = v0[135];
  sub_23F48256C();
  sub_23F482B34();
  sub_23F451D28();
  sub_23F482718();
  sub_23F362984();
  sub_23F3C84F4(v25);
  if (v27)
  {
    sub_23F481698(v0[135], &qword_256E702E0);
  }
  else
  {
    sub_23F482E50();
    sub_23F48294C();
    sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
    sub_23F4822CC();
    v26 = v0[142];
    sub_23F482B58();
    if (v27)
    {
      v29 = v0[118];
      v30 = v0[116];
      sub_23F3B13E4(v28);
      sub_23F362D94(v29, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 32));
      sub_23F428AC4();
      sub_23F482AEC();
      v31 = sub_23F3848F0();
      v32(v31);
      sub_23F60324C();
      sub_23F3663AC(v0[114], type metadata accessor for UserPromptResolver);
LABEL_22:
      v33 = sub_23F3840BC();
LABEL_52:
      v35(v33, v34);
      goto LABEL_81;
    }
    sub_23F4057A8(*(uint64_t (**)(uint64_t))(v28 + 8));
  }
  v36 = v0[134];
  sub_23F48256C();
  sub_23F482B34();
  sub_23F451D28();
  sub_23F482718();
  sub_23F362984();
  sub_23F3C84F4(v36);
  if (v27)
  {
    sub_23F481698(v0[134], &qword_256E702E0);
  }
  else
  {
    sub_23F482E50();
    sub_23F48294C();
    sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
    sub_23F4822CC();
    sub_23F482B58();
    if (v37)
    {
      v39 = v0[111];
      v40 = v0[108];
      sub_23F3B13E4(v38);
      sub_23F4822BC(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 32));
      sub_23F61A8B8();
      if (sub_23F4062C8(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 88)) == *MEMORY[0x24BE55318])
      {
        v41 = v0[117];
        v42 = v0[116];
        v43 = v0[115];
        v44 = v0[113];
        v45 = v0[109];
        v46 = v0[8];
        sub_23F4827D4(v0[108]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v41, v45, v43);
        sub_23F428AC4();
        sub_23F482AEC();
        v47(v44, v46);
        sub_23F60324C();
        v48 = v0[116];
        v49 = v0[112];
        v50 = v0[111];
        v51 = v0[110];
        sub_23F3663AC(v0[113], type metadata accessor for UserPromptResolver);
        sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
LABEL_81:
        sub_23F481AB8();
        sub_23F366708();
        sub_23F3666EC();
        sub_23F3666C4();
        sub_23F3666DC();
        sub_23F362CC8();
        sub_23F3666A0();
        sub_23F3666D4();
        sub_23F366698();
        sub_23F3666E4();
        sub_23F3668DC();
        sub_23F3668D4();
        sub_23F383980();
        sub_23F3667E0();
        sub_23F383898();
        sub_23F383978();
        sub_23F383970();
        sub_23F383890();
        sub_23F383888();
        sub_23F383880();
        sub_23F383878();
        sub_23F383870();
        sub_23F383868();
        sub_23F383C4C();
        sub_23F383C44();
        sub_23F383C3C();
        sub_23F383C34();
        sub_23F383C2C();
        sub_23F383C24();
        sub_23F383C1C();
        sub_23F383C14();
        sub_23F383C0C();
        sub_23F383C04();
        sub_23F383BFC();
        sub_23F383BF4();
        sub_23F383BEC();
        sub_23F383BE4();
        sub_23F383BDC();
        sub_23F383BD4();
        sub_23F383BCC();
        sub_23F383BC4();
        sub_23F383BBC();
        sub_23F383BB4();
        sub_23F383BAC();
        sub_23F383BA4();
        sub_23F383B9C();
        sub_23F383B94();
        sub_23F383B8C();
        sub_23F383B84();
        sub_23F383B7C();
        sub_23F383B74();
        sub_23F383B6C();
        sub_23F383B64();
        sub_23F383B5C();
        sub_23F383B54();
        sub_23F383DCC();
        sub_23F383DC4();
        sub_23F4821E4();
        sub_23F4821DC();
        sub_23F4821D4();
        sub_23F4821CC();
        sub_23F4821C4();
        sub_23F4821BC();
        sub_23F4821B4();
        sub_23F4821AC();
        sub_23F4823A4();
        sub_23F48239C();
        sub_23F383B4C();
        sub_23F383B44();
        sub_23F383B3C();
        sub_23F383B34();
        sub_23F383B2C();
        sub_23F383B24();
        sub_23F383B1C();
        sub_23F383B14();
        sub_23F383B0C();
        sub_23F383B04();
        sub_23F383C54();
        sub_23F383C5C();
        sub_23F383AFC();
        sub_23F383AF4();
        sub_23F383AEC();
        sub_23F383AE4();
        sub_23F383ADC();
        sub_23F383AD4();
        sub_23F383C6C();
        sub_23F383FDC();
        v187 = (uint64_t (*)(void))sub_23F384760();
        return sub_23F38346C(v187);
      }
      v52 = v0[109];
      v53 = v0[108];
      sub_23F384274(v0[111]);
      sub_23F383E64(v52, *(uint64_t (**)(uint64_t, uint64_t))(v53 + 8));
    }
    else
    {
      sub_23F4057A8(*(uint64_t (**)(uint64_t))(v38 + 8));
    }
  }
  v54 = v0[133];
  sub_23F61B128();
  sub_23F61B14C();
  sub_23F482E68();
  sub_23F482E80();
  sub_23F362984();
  sub_23F3C84F4(v54);
  if (v27)
  {
    sub_23F481698(v0[133], &qword_256E702E0);
    goto LABEL_39;
  }
  sub_23F61B2CC();
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
  v55 = sub_23F3848F0();
  v56(v55);
  v57 = v0[140];
  sub_23F482B58();
  if (v58)
  {
    v202 = v7;
    v60 = v0[106];
    v61 = v0[105];
    v188 = v0[103];
    v62 = v0[99];
    v189 = v0[87];
    v190 = v0[86];
    v63 = v0[81];
    v194 = v0[79];
    v197 = v0[78];
    sub_23F3B13E4(v59);
    sub_23F362D94(v60, v57, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 32));
    sub_23F61B128();
    sub_23F61A480();
    sub_23F459428(v62, v188);
    v64 = *(void (**)(uint64_t, uint64_t))(v189 + 8);
    v64(v62, v190);
    sub_23F482D3C();
    sub_23F61A4F8();
    sub_23F61AC78();
    v65 = sub_23F482D84();
    v193 = v66;
    v66(v65);
    v67 = *(uint64_t (**)(uint64_t, uint64_t))(v194 + 88);
    v68 = v67(v63, v197);
    v69 = *MEMORY[0x24BE53328];
    v70 = *(void (**)(uint64_t, uint64_t))(v194 + 8);
    v70(v63, v197);
    v195 = v69;
    if (v68 != v69)
      goto LABEL_60;
    v71 = v0[102];
    sub_23F382EF8(v0[103], v71, &qword_256E702D8);
    v72 = sub_23F482D78(v71);
    v73 = v0[102];
    if ((_DWORD)v72 == 1)
    {
      sub_23F482784(v72, &qword_256E702D8);
      goto LABEL_60;
    }
    v198 = v64;
    v129 = v0[69];
    v130 = v0[39];
    sub_23F61A63C();
    sub_23F383CA8(v73, *(uint64_t (**)(uint64_t, uint64_t))(v130 + 8));
    if (sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v129 + 88)) == *MEMORY[0x24BE54D28])
    {
      v131 = v0[75];
      v132 = v0[73];
      sub_23F482B18();
      (*(void (**)(uint64_t))(v133 + 96))(v132);
      sub_23F482A60(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v131 + 32));
      if ((sub_23F61A72C() & 1) != 0)
      {
        v134 = v0[106];
        v135 = v0[98];
        v137 = v0[7];
        v136 = v0[8];
        sub_23F61B134();
        sub_23F61B17C();
        sub_23F366748();
        sub_23F4599C0(v135, v134, v136, v137);
        v138 = v0[103];
        v139 = v0[77];
        v140 = v0[75];
        v198(v0[98], v0[86]);
        sub_23F383D74(v139, *(uint64_t (**)(uint64_t, uint64_t))(v140 + 8));
        sub_23F481698(v138, &qword_256E702D8);
        goto LABEL_22;
      }
      v141 = v0[75];
    }
    else
    {
      sub_23F482B18();
    }
    sub_23F384274(v141);
    v64 = v198;
LABEL_60:
    v192 = (void (*)(uint64_t))v70;
    v142 = (void (*)(uint64_t))v64;
    v143 = v0[127];
    v199 = v0[122];
    v144 = v0[99];
    v145 = v0[64];
    sub_23F61B128();
    sub_23F61A480();
    v0[6] = sub_23F482B34();
    *(_QWORD *)(sub_23F384908() + 16) = v144;
    sub_23F35D2E8(&qword_256E70F10);
    sub_23F3B0CC8(&qword_256E74C70, &qword_256E70F10);
    sub_23F61AC48();
    sub_23F3666A0();
    swift_bridgeObjectRelease();
    v146 = sub_23F384690();
    v142(v146);
    v202(v143, v199);
    sub_23F3C84F4(v145);
    if (v27)
    {
      sub_23F481698(v0[64], &qword_256E70878);
    }
    else
    {
      v147 = v0[101];
      v148 = v0[38];
      sub_23F482DB4(v0[66]);
      v149 = sub_23F61B1B8();
      sub_23F3F1438(v149, v147);
      sub_23F362984();
      v150 = sub_23F36195C(v147, 1, v148);
      if ((_DWORD)v150 == 1)
      {
        sub_23F482784(v150, &qword_256E702D8);
        v151 = 1;
      }
      else
      {
        v152 = v0[39];
        sub_23F61A63C();
        sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v152 + 8));
        v151 = 0;
      }
      v153 = v0[69];
      v154 = v0[68];
      v156 = v0[62];
      v155 = v0[63];
      v158 = v0[59];
      v157 = v0[60];
      sub_23F40B4B8(v155, v151);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v153 + 104))(v156, *MEMORY[0x24BE54CB0], v154);
      sub_23F40B4B8(v156, 0);
      v159 = v157 + *(int *)(v158 + 48);
      sub_23F382EF8(v155, v157, &qword_256E70888);
      sub_23F382EF8(v156, v159, &qword_256E70888);
      if (sub_23F482D78(v157) == 1)
      {
        sub_23F481698(v0[62], &qword_256E70888);
        v160 = sub_23F3B1CF8();
        sub_23F481698(v160, v161);
        sub_23F3C84F4(v159);
        if (!v27)
          goto LABEL_73;
        sub_23F481698(v0[60], &qword_256E70888);
      }
      else
      {
        sub_23F382EF8(v0[60], v0[61], &qword_256E70888);
        sub_23F3C84F4(v159);
        if (v27)
        {
          v162 = v0[69];
          v163 = v0[68];
          v164 = v0[61];
          sub_23F481698(v0[62], &qword_256E70888);
          v165 = sub_23F384664();
          sub_23F481698(v165, v166);
          (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v164, v163);
LABEL_73:
          sub_23F481698(v0[60], &qword_256E74C50);
LABEL_77:
          (*(void (**)(_QWORD, _QWORD))(v0[66] + 8))(v0[67], v0[65]);
          goto LABEL_79;
        }
        v167 = v0[69];
        v168 = v0[68];
        v170 = v0[62];
        v169 = v0[63];
        v172 = v0[60];
        v171 = v0[61];
        sub_23F362D94(v0[72], v159, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v167 + 32));
        sub_23F3B121C(&qword_256E74C78, (void (*)(uint64_t))MEMORY[0x24BE54D48]);
        v173 = sub_23F61C0A0();
        v174 = *(void (**)(uint64_t))(v167 + 8);
        v175 = sub_23F384AB4();
        v174(v175);
        sub_23F4829E4(v170);
        sub_23F4829E4(v169);
        ((void (*)(uint64_t, uint64_t))v174)(v171, v168);
        sub_23F4829E4(v172);
        if ((v173 & 1) == 0)
          goto LABEL_77;
      }
      v176 = v0[67];
      v177 = v0[66];
      sub_23F61A4F8();
      sub_23F61AC78();
      v178 = sub_23F384AB4();
      v193(v178);
      sub_23F3D98EC(v176, *(uint64_t (**)(uint64_t, uint64_t))(v177 + 8));
      v179 = sub_23F3848F0();
      if (((unsigned int (*)(uint64_t))v67)(v179) == v195)
      {
        v180 = v0[105];
        sub_23F481698(v0[103], &qword_256E702D8);
        sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v180 + 8));
        v181 = sub_23F3B1CF8();
        v192(v181);
        sub_23F4824BC();
LABEL_80:
        swift_storeEnumTagMultiPayload();
        goto LABEL_81;
      }
      ((void (*)(_QWORD, _QWORD))v192)(v0[80], v0[78]);
    }
LABEL_79:
    v182 = v0[105];
    v183 = v0[57];
    v184 = v0[58];
    v196 = v0[106];
    v200 = v0[56];
    v185 = v0[7];
    sub_23F482D34();
    sub_23F45A544();
    sub_23F384AB4();
    sub_23F482D3C();
    v186 = sub_23F61AA5C();
    sub_23F4820BC(v186, &qword_256E702D8);
    sub_23F383D74(v196, *(uint64_t (**)(uint64_t, uint64_t))(v182 + 8));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v183 + 32))(v185, v184, v200);
    sub_23F4824BC();
    goto LABEL_80;
  }
  sub_23F4057A8(*(uint64_t (**)(uint64_t))(v59 + 8));
LABEL_39:
  v74 = v0[132];
  sub_23F48256C();
  sub_23F482B34();
  sub_23F451D28();
  sub_23F482718();
  sub_23F362984();
  sub_23F3C84F4(v74);
  if (v27)
  {
    sub_23F481698(v0[132], &qword_256E702E0);
LABEL_46:
    v91 = v0[127];
    v92 = v0[100];
    v93 = v0[38];
    sub_23F482D34();
    sub_23F45A98C(v91, v92);
    sub_23F482DA8();
    if (sub_23F36195C(v92, 1, v93) != 1)
    {
      v97 = v0[125];
      v98 = v0[44];
      v99 = v0[42];
      v100 = *(void (**)(_QWORD))(v0[39] + 32);
      ((void (*)(uint64_t, _QWORD, _QWORD))v100)(v98, v0[100], v0[38]);
      sub_23F482D34();
      v0[161] = sub_23F45AE30(v99, v98, MEMORY[0x24BEE4AF8], v97);
      v7(v0[125], v0[122]);
      v104 = sub_23F3B1CF8();
      v100(v104);
      sub_23F61B128();
      v105 = (_QWORD *)swift_task_alloc();
      v0[162] = v105;
      *v105 = v0;
      v105[1] = sub_23F456018;
      sub_23F3843EC();
      return sub_23F45B1B8(v106, v107, v108, v109);
    }
    sub_23F481698(v0[100], &qword_256E702D8);
    sub_23F384060();
    v94 = sub_23F619E8C();
    v95 = sub_23F61C61C();
    if (sub_23F3F0E3C(v95))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F432948(&dword_23F35A000, v94, v96, "no program statements left to resolve");
      sub_23F366530();
    }

    sub_23F48252C();
    sub_23F4824BC();
    goto LABEL_80;
  }
  sub_23F482E50();
  sub_23F48294C();
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
  v75 = sub_23F4822CC();
  if (v75 != *MEMORY[0x24BE56C58])
  {
    sub_23F482E44();
    sub_23F384274(v90);
    goto LABEL_46;
  }
  v76 = v0[139];
  sub_23F482E44();
  v78 = v0[54];
  v77 = v0[55];
  v79 = v0[53];
  sub_23F482774(*(uint64_t (**)(uint64_t))(v80 + 96));
  sub_23F38431C(v77, v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 32));
  sub_23F384060();
  sub_23F38431C(v78, v77, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 16));
  v81 = sub_23F619E8C();
  v82 = sub_23F61C61C();
  v83 = os_log_type_enabled(v81, v82);
  v85 = v0[53];
  v84 = v0[54];
  if (v83)
  {
    v191 = v0[52];
    v86 = (_DWORD *)sub_23F366668();
    sub_23F366668();
    *v86 = 136315138;
    v87 = sub_23F61AA08();
    sub_23F482C90(v87, v88);
    v0[5] = v89;
    sub_23F482C78();
    sub_23F38458C();
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v84, v191);
    sub_23F4264A8(&dword_23F35A000, v81, v82, ".actionResolverRequestCreated: %s");
    sub_23F3B17D4();
    sub_23F366530();
  }
  v111 = *(void (**)(_QWORD, _QWORD))(v85 + 8);
  v111(v0[54], v0[52]);

  sub_23F48225C();
  v0[158] = v111;
  v113 = v0[50];
  v112 = v0[51];
  v115 = v0[46];
  v114 = v0[47];
  v116 = v0[10];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v113 + 104))(v112, *MEMORY[0x24BE57410], v0[49]);
  sub_23F618B84();
  sub_23F383D74(v112, *(uint64_t (**)(uint64_t, uint64_t))(v113 + 8));
  v117 = (_QWORD *)(v116 + *(int *)(sub_23F482EC4() + 20));
  v118 = v117[3];
  v119 = v117[4];
  v120 = sub_23F35EA9C(v117, v118);
  sub_23F384840(v114, v116, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 16));
  v121 = *(_QWORD *)(v118 - 8);
  v122 = swift_task_alloc();
  sub_23F383C64(v122, (uint64_t)v120, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v121 + 16));
  ActionResolverRequestEvaluator.init<A>(toolbox:actionRequirements:)(v114, v122, v118, v119);
  sub_23F3666E4();
  v123 = (_QWORD *)swift_task_alloc();
  v0[159] = v123;
  *v123 = v0;
  v123[1] = sub_23F455E34;
  sub_23F3843EC();
  return ActionResolverRequestEvaluator.resolve(actionResolverRequest:sessionState:isDefaultResolverEnabled:contextId:)(v124, v125, v126, v127, v128);
}

uint64_t sub_23F455E34()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 1280) = v1;
  swift_task_dealloc();
  sub_23F3663AC(*(_QWORD *)(v0 + 384), (uint64_t (*)(_QWORD))type metadata accessor for ActionResolverRequestEvaluator);
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F455E90()
{
  uint64_t (*v0)(void);

  sub_23F3836F0();
  sub_23F4828B8();
  sub_23F4818BC();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383BD4();
  sub_23F383BCC();
  sub_23F383BC4();
  sub_23F383BBC();
  sub_23F383BB4();
  sub_23F383BAC();
  sub_23F383BA4();
  sub_23F383B9C();
  sub_23F383B94();
  sub_23F383B8C();
  sub_23F383B84();
  sub_23F383B7C();
  sub_23F383B74();
  sub_23F383B6C();
  sub_23F383B64();
  sub_23F383B5C();
  sub_23F383B54();
  sub_23F383DCC();
  sub_23F383DC4();
  sub_23F4821E4();
  sub_23F4821DC();
  sub_23F4821D4();
  sub_23F4821CC();
  sub_23F4821C4();
  sub_23F4821BC();
  sub_23F4821B4();
  sub_23F4821AC();
  sub_23F383B4C();
  sub_23F383B44();
  sub_23F383B3C();
  sub_23F383B34();
  sub_23F383B2C();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  sub_23F41C50C();
  v0 = (uint64_t (*)(void))sub_23F482670();
  return sub_23F38346C(v0);
}

uint64_t sub_23F456018()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D10();
  sub_23F3B2010(v2);
  *(_QWORD *)(v1 + 1304) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v1 + 1256))(*(_QWORD *)(v1 + 992), *(_QWORD *)(v1 + 976));
  sub_23F362D18();
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F456080()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  void (*v32)(uint64_t);
  _DWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(void);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v115;
  void (*v116)(uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  os_log_type_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t);
  void (*v171)(uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  os_log_type_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(uint64_t, uint64_t);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  void (*v202)(uint64_t, uint64_t);
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;

  sub_23F3836F0();
  v2 = v0[153];
  v4 = v0[40];
  v3 = v0[41];
  v5 = sub_23F45C5E4(v0[37]);
  v206 = v6;
  sub_23F384060();
  sub_23F482D44(v3);
  sub_23F482D44(v4);
  v7 = sub_23F619E8C();
  v8 = sub_23F61C61C();
  if (sub_23F384534(v8))
  {
    v9 = sub_23F366668();
    sub_23F366668();
    *(_DWORD *)v9 = 136643075;
    sub_23F61A660();
    sub_23F3B121C(&qword_256E6FB60, (void (*)(uint64_t))MEMORY[0x24BE52140]);
    sub_23F61CC1C();
    v10 = sub_23F482D84();
    sub_23F383F80(v10, v11);
    v12 = sub_23F3840BC();
    sub_23F37AE00(v12, v13, v14);
    v0[3] = v15;
    sub_23F389F14();
    sub_23F61C790();
    sub_23F362D18();
    sub_23F482D28();
    *(_WORD *)(v9 + 12) = 2085;
    sub_23F61A63C();
    v16 = sub_23F61C16C();
    sub_23F482C90(v16, v17);
    v0[4] = v18;
    sub_23F61C790();
    sub_23F362984();
    sub_23F482D28();
    _os_log_impl(&dword_23F35A000, v7, (os_log_type_t)v2, "next expression to evaluate: %{sensitive}s %{sensitive}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v19 = (void (*)(uint64_t))v0[156];
  v20 = *(_QWORD *)(v0[39] + 8);
  sub_23F482294(v0[41]);
  sub_23F48225C();

  v21 = sub_23F3840BC();
  v19(v21);
  v0[164] = v20;
  v22 = v0[163];
  Interpreter.worlds(stmt:sessionState:toolId:)(v0[43], v0[8], v5, v206);
  v0[165] = v23;
  if (v22)
  {
    v24 = v0[37];
    sub_23F384120();
    sub_23F481698(v24, &qword_256E702D0);
    sub_23F48252C();
    v25 = sub_23F38422C();
    ((void (*)(uint64_t))v20)(v25);
LABEL_5:
    sub_23F481CB4();
    sub_23F3666E4();
    sub_23F366708();
    sub_23F3666EC();
    sub_23F3666C4();
    sub_23F3666DC();
    sub_23F362CC8();
    sub_23F3666A0();
    sub_23F3666D4();
    sub_23F366698();
    sub_23F3668E4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383C2C();
    sub_23F383C24();
    sub_23F383C1C();
    sub_23F383C14();
    sub_23F383C0C();
    sub_23F383C04();
    sub_23F383BFC();
    sub_23F383BF4();
    sub_23F383BEC();
    sub_23F383BE4();
    sub_23F383BDC();
    sub_23F383BD4();
    sub_23F383BCC();
    sub_23F383BC4();
    sub_23F383BBC();
    sub_23F383BB4();
    sub_23F383BAC();
    sub_23F383BA4();
    sub_23F383B9C();
    sub_23F383B94();
    sub_23F383B8C();
    sub_23F383B84();
    sub_23F383B7C();
    sub_23F383B74();
    sub_23F383B6C();
    sub_23F383B64();
    sub_23F383B5C();
    sub_23F383B54();
    sub_23F383DCC();
    sub_23F383DC4();
    sub_23F4821E4();
    sub_23F4821DC();
    sub_23F4821D4();
    sub_23F4821CC();
    sub_23F4821C4();
    sub_23F4821BC();
    sub_23F4821B4();
    sub_23F4821AC();
    sub_23F4823A4();
    sub_23F48239C();
    sub_23F383B4C();
    sub_23F383B44();
    sub_23F383B3C();
    sub_23F383B34();
    sub_23F383B2C();
    sub_23F383B24();
    sub_23F383B1C();
    sub_23F383B14();
    sub_23F383B0C();
    sub_23F383B04();
    sub_23F383C54();
    sub_23F383C5C();
    sub_23F383AFC();
    sub_23F383AF4();
    sub_23F383AEC();
    sub_23F383AE4();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F383C6C();
    v26 = (uint64_t (*)(void))v0[1];
    return sub_23F38346C(v26);
  }
  v28 = v23;
  sub_23F384120();
  sub_23F384060();
  sub_23F3E0254();
  v29 = sub_23F619E8C();
  v30 = sub_23F61C61C();
  v31 = os_log_type_enabled(v29, v30);
  v32 = (void (*)(uint64_t))v0[156];
  v202 = (void (*)(uint64_t, uint64_t))v20;
  v203 = v28;
  if (v31)
  {
    v33 = (_DWORD *)sub_23F366668();
    sub_23F366668();
    *v33 = 136315138;
    v34 = sub_23F45DC18(v28);
    sub_23F482C90(v34, v35);
    v0[2] = v36;
    sub_23F61C790();
    sub_23F362D08();
    sub_23F384A80();
    sub_23F4264A8(&dword_23F35A000, v29, v30, "World states: %s");
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F384A80();

  v37 = sub_23F3B1CF8();
  v32(v37);
  v38 = v0[69];
  v39 = v0[68];
  sub_23F61A63C();
  sub_23F61A63C();
  v40 = sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 88));
  if (v40 == *MEMORY[0x24BE54D08])
  {
    v41 = v0[70];
    sub_23F482B18();
    v42 = v0[46];
    v198 = v0[45];
    v43 = v0[14];
    v44 = v0[15];
    v45 = v0[12];
    v47 = v0[10];
    v46 = v0[11];
    v48 = v0[8];
    sub_23F482774(*(uint64_t (**)(uint64_t))(v49 + 96));
    sub_23F384840(v44, v41, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 32));
    sub_23F428AC4();
    sub_23F482AEC();
    v50(v45, v48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v45 + *(int *)(v46 + 20), v47, v198);
    sub_23F61A660();
    v51 = (_QWORD *)swift_task_alloc();
    v0[170] = v51;
    *v51 = v0;
    v51[1] = sub_23F4578B0;
    sub_23F3843EC();
    return sub_23F60F78C(v52, v53, v54, v55, v56);
  }
  if (v40 == *MEMORY[0x24BE54CA0])
  {
    v57 = v0[91];
    v58 = v0[90];
    v59 = v0[37];
    v61 = v0[7];
    v60 = v0[8];
    sub_23F4827D4(v0[69]);
    v62 = sub_23F384664();
    sub_23F38431C(v62, v63, v64);
    sub_23F482D20();
    sub_23F460BBC(v57, v203, v59, v60, v58, v61);
    v65 = (void (*)(uint64_t, uint64_t))v0[91];
    v66 = v0[87];
    v193 = v0[69];
    v194 = v0[68];
    v199 = v0[71];
    v67 = v0[44];
    v69 = v0[37];
    v68 = v0[38];
    sub_23F384120();
    v70 = *(void (**)(uint64_t))(v66 + 8);
    v71 = sub_23F384AB4();
    v70(v71);
    v72 = sub_23F38422C();
    v70(v72);
    sub_23F481698(v69, &qword_256E702D0);
    sub_23F384690();
    sub_23F4823DC();
    v65(v67, v68);
    v73 = v194;
    v74 = *(void (**)(uint64_t, uint64_t))(v193 + 8);
    v75 = v199;
LABEL_13:
    v74(v75, v73);
    goto LABEL_33;
  }
  if (v40 == *MEMORY[0x24BE54D18]
    || v40 == *MEMORY[0x24BE54D00]
    || v40 == *MEMORY[0x24BE54CC8]
    || v40 == *MEMORY[0x24BE54CF8])
  {
    v79 = v0[71];
    sub_23F482B18();
    v80 = v0[8];
    v82 = *(void (**)(void))(v81 + 8);
    v82();
    v83 = sub_23F384908();
    *(_QWORD *)(v83 + 16) = v80;
    *(_QWORD *)(v83 + 24) = v79;
    sub_23F367C08();
    v208 = v0[71];
    v107 = (void (*)(uint64_t, uint64_t))v0[43];
    v196 = v0[44];
    v201 = v0[68];
    v108 = v0[37];
    v109 = v0[38];
    sub_23F384364();
    sub_23F362CC8();
    sub_23F61A660();
    sub_23F384664();
    sub_23F61A114();
    sub_23F481698(v108, &qword_256E702D0);
    sub_23F4823DC();
    v107(v196, v109);
    ((void (*)(uint64_t, uint64_t))v82)(v208, v201);
    sub_23F4824BC();
LABEL_32:
    swift_storeEnumTagMultiPayload();
    goto LABEL_33;
  }
  if (v40 == *MEMORY[0x24BE54CC0])
  {
    v84 = v0[70];
    sub_23F482B18();
    v86 = v0[17];
    v85 = v0[18];
    v88 = (char *)v0[7];
    v87 = v0[8];
    sub_23F482E38(v89);
    sub_23F383C64(v85, v84, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 32));
    v90 = v85;
    v39 = 0;
    sub_23F462848(v90, v203, v87, v88);
    v207 = v0[71];
    v195 = v0[69];
    v200 = v0[68];
    v91 = v0[44];
    sub_23F3B5F04();
    v92 = sub_23F482704();
    sub_23F4820BC(v92, &qword_256E702D0);
    sub_23F4823DC();
    sub_23F3D09D0(v91);
    v93 = v200;
    v94 = *(void (**)(uint64_t, uint64_t))(v195 + 8);
    v95 = v207;
    goto LABEL_28;
  }
  if (v40 == *MEMORY[0x24BE54CD8])
  {
    v96 = v0[70];
    v98 = v0[35];
    v97 = v0[36];
    sub_23F482774(*(uint64_t (**)(uint64_t))(v0[69] + 96));
    sub_23F38431C(v97, v96, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 32));
    sub_23F482D20();
    v99 = (_QWORD *)swift_task_alloc();
    v0[166] = v99;
    *v99 = v0;
    v99[1] = sub_23F45745C;
    sub_23F3843EC();
    return sub_23F45DCE0(v100, v101, v102, v103, v104, v105, v106);
  }
  if (v40 == *MEMORY[0x24BE54CD0])
  {
    v110 = v0[69];
    v111 = v0[23];
    v112 = v0[10];
    v209 = v0[8];
    sub_23F389D0C();
    sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v110 + 96));
    sub_23F4822BC(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 32));
    sub_23F61A1F8();
    v113 = sub_23F384908();
    *(_QWORD *)(v113 + 16) = v112;
    *(_QWORD *)(v113 + 24) = v209;
    sub_23F367BDC();
    sub_23F384364();
    sub_23F3666D4();
    sub_23F61AA5C();
    sub_23F4824BC();
    swift_storeEnumTagMultiPayload();
    v135 = sub_23F482504();
    sub_23F4820BC(v135, &qword_256E702D0);
    sub_23F4823DC();
    sub_23F482E74();
    sub_23F4829EC();
    goto LABEL_33;
  }
  if (v40 == *MEMORY[0x24BE54CE8] || v40 == *MEMORY[0x24BE54D30])
    goto LABEL_41;
  if (v40 == *MEMORY[0x24BE54D28])
  {
    v121 = v0[92];
    v122 = v0[76];
    v123 = v0[70];
    v124 = v0[69];
    sub_23F4820A4();
    sub_23F383D74(v123, *(uint64_t (**)(uint64_t, uint64_t))(v124 + 96));
    v125 = sub_23F3B1CF8();
    sub_23F384840(v125, v126, v127);
    sub_23F482738();
    v128 = v122;
    v39 = 0;
    sub_23F45FE20(v128, v197, v121, v1);
    v129 = (void (*)(uint64_t, uint64_t))v0[76];
    v130 = v0[75];
    v131 = v0[69];
    v203 = v0[68];
    v206 = v0[71];
    v132 = v0[44];
    v134 = v0[37];
    v133 = v0[38];
    sub_23F384274(v0[87]);
    sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v130 + 8));
    sub_23F481698(v134, &qword_256E702D0);
    sub_23F4823DC();
    v129(v132, v133);
    v94 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
LABEL_47:
    v93 = v203;
    v95 = v206;
LABEL_28:
    v94(v95, v93);
    if (v39)
      goto LABEL_5;
LABEL_33:
    sub_23F481AB8();
    sub_23F366708();
    sub_23F3666EC();
    sub_23F3666C4();
    sub_23F3666DC();
    sub_23F362CC8();
    sub_23F3666A0();
    sub_23F3666D4();
    sub_23F366698();
    sub_23F3666E4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383C2C();
    sub_23F383C24();
    sub_23F383C1C();
    sub_23F383C14();
    sub_23F383C0C();
    sub_23F383C04();
    sub_23F383BFC();
    sub_23F383BF4();
    sub_23F383BEC();
    sub_23F383BE4();
    sub_23F383BDC();
    sub_23F383BD4();
    sub_23F383BCC();
    sub_23F383BC4();
    sub_23F383BBC();
    sub_23F383BB4();
    sub_23F383BAC();
    sub_23F383BA4();
    sub_23F383B9C();
    sub_23F383B94();
    sub_23F383B8C();
    sub_23F383B84();
    sub_23F383B7C();
    sub_23F383B74();
    sub_23F383B6C();
    sub_23F383B64();
    sub_23F383B5C();
    sub_23F383B54();
    sub_23F383DCC();
    sub_23F383DC4();
    sub_23F4821E4();
    sub_23F4821DC();
    sub_23F4821D4();
    sub_23F4821CC();
    sub_23F4821C4();
    sub_23F4821BC();
    sub_23F4821B4();
    sub_23F4821AC();
    sub_23F4823A4();
    sub_23F48239C();
    sub_23F383B4C();
    sub_23F383B44();
    sub_23F383B3C();
    sub_23F383B34();
    sub_23F383B2C();
    sub_23F383B24();
    sub_23F383B1C();
    sub_23F383B14();
    sub_23F383B0C();
    sub_23F383B04();
    sub_23F383C54();
    sub_23F383C5C();
    sub_23F383AFC();
    sub_23F383AF4();
    sub_23F383AEC();
    sub_23F383AE4();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F383C6C();
    sub_23F383FDC();
    v26 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F38346C(v26);
  }
  if (v40 == *MEMORY[0x24BE54D38])
  {
    v136 = v0[94];
    v137 = v0[70];
    sub_23F482660();
    v139 = v0[29];
    v138 = v0[30];
    sub_23F4820A4();
    sub_23F383E64(v137, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 96));
    sub_23F384840(v138, v137, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v139 + 32));
    sub_23F482738();
    sub_23F4822DC();
    sub_23F45F128(v140, v141, v142);
    sub_23F4820C4();
LABEL_46:
    sub_23F384274(v143);
    v144 = sub_23F482704();
    sub_23F4820BC(v144, &qword_256E702D0);
    sub_23F4823DC();
    sub_23F3D09D0(v136);
    v94 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
    goto LABEL_47;
  }
  if (v40 == *MEMORY[0x24BE54C98])
  {
    v145 = v0[70];
    sub_23F482660();
    v147 = v0[26];
    v146 = v0[27];
    sub_23F389D0C();
    sub_23F383E64(v145, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 96));
    sub_23F384840(v146, v145, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v147 + 32));
    sub_23F61A660();
    v148 = (_QWORD *)swift_task_alloc();
    v0[168] = v148;
    *v148 = v0;
    v148[1] = sub_23F45768C;
    sub_23F3843EC();
    return sub_23F45F26C(v149, v150, v151, v152, v153);
  }
  if (v40 == *MEMORY[0x24BE54CF0])
  {
    v136 = v0[89];
    v154 = v0[70];
    sub_23F482660();
    v156 = v0[20];
    v155 = v0[21];
    sub_23F4820A4();
    sub_23F383E64(v154, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 96));
    sub_23F384840(v155, v154, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v156 + 32));
    sub_23F482738();
    sub_23F4822DC();
    sub_23F460FB0(v157, v158, v159);
    sub_23F4820C4();
    goto LABEL_46;
  }
  if (v40 == *MEMORY[0x24BE54D20])
  {
LABEL_41:
    v115 = v0[69];
    sub_23F389D0C();
    v116 = *(void (**)(uint64_t))(v115 + 8);
    sub_23F48252C();
    v117 = sub_23F3848F0();
    sub_23F46333C(v117, v118, v119);
    sub_23F481698(v0[37], &qword_256E702D0);
    sub_23F4822AC();
    sub_23F482514();
    v120 = sub_23F3840BC();
    v116(v120);
    goto LABEL_33;
  }
  if (v40 == *MEMORY[0x24BE54D10])
  {
    v136 = v0[96];
    v160 = v0[70];
    sub_23F482660();
    v162 = v0[32];
    v161 = v0[33];
    sub_23F4820A4();
    sub_23F383E64(v160, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 96));
    sub_23F384840(v161, v160, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v162 + 32));
    sub_23F482738();
    sub_23F4822DC();
    sub_23F45E43C(v163, v164, v165);
    sub_23F4820C4();
    goto LABEL_46;
  }
  if (v40 == *MEMORY[0x24BE54CE0])
  {
    sub_23F389D0C();
    sub_23F384060();
    v166 = (void *)sub_23F619E8C();
    v167 = sub_23F61C628();
    if (sub_23F384534(v167))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F482724(&dword_23F35A000, v168, v169, "Interpreter support for get_mentioned_apps is not yet implemented");
      sub_23F366530();
    }
    v170 = (void (*)(uint64_t))v0[156];
    v204 = v0[71];
    v210 = v0[70];
    v171 = (void (*)(uint64_t))v0[37];

    v172 = sub_23F384690();
    v170(v172);
    sub_23F384B58();
    sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
    sub_23F362D64();
    sub_23F482A9C();
    v173 = swift_willThrow();
    sub_23F482784(v173, &qword_256E702D0);
    sub_23F4823DC();
    v174 = sub_23F389F14();
    v171(v174);
    sub_23F4829D4(v204);
    sub_23F4829D4(v210);
    goto LABEL_5;
  }
  if (v40 == *MEMORY[0x24BE54CB8])
  {
    sub_23F389D0C();
    sub_23F384060();
    v175 = (void *)sub_23F619E8C();
    v176 = sub_23F61C628();
    if (sub_23F384534(v176))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F482724(&dword_23F35A000, v177, v178, "Interpreter support for get_mentioned_apps is not yet implemented");
      sub_23F366530();
    }
    v179 = (void (*)(uint64_t, uint64_t))v0[156];
    v180 = v0[151];
    v181 = v0[147];
    v182 = v0[69];
    v205 = v0[68];
    v211 = v0[71];
    v183 = v0[43];
    v185 = v0[37];
    v184 = v0[38];

    v179(v180, v181);
    sub_23F384B58();
    sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
    sub_23F362D64();
    sub_23F482A9C();
    swift_willThrow();
    sub_23F481698(v185, &qword_256E702D0);
    v202(v183, v184);
    v186 = sub_23F3848F0();
    ((void (*)(uint64_t))v202)(v186);
    (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v211, v205);
    goto LABEL_5;
  }
  if (v40 == *MEMORY[0x24BE54CA8])
  {
    sub_23F389D0C();
    sub_23F482738();
    v187 = sub_23F384664();
    sub_23F45EE68(v187, v188, v189);
    v190 = sub_23F384274(v0[87]);
    sub_23F4820BC(v190, &qword_256E702D0);
    sub_23F4822AC();
    sub_23F482514();
    v75 = sub_23F3840BC();
    goto LABEL_13;
  }
  if (v40 == *MEMORY[0x24BE54CB0] || v40 == *MEMORY[0x24BE54D40])
  {
    v191 = v0[69];
    v192 = sub_23F389D0C();
    sub_23F4820BC(v192, &qword_256E702D0);
    sub_23F4822AC();
    sub_23F482514();
    sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v191 + 8));
    sub_23F4824BC();
    goto LABEL_32;
  }
  sub_23F3843EC();
  return sub_23F61CC58();
}

uint64_t sub_23F45745C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D10();
  sub_23F3B2010(v2);
  *(_QWORD *)(v1 + 1336) = v0;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v1 + 696));
  sub_23F362D18();
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F4574C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F3836F0();
  v1 = v0[69];
  v2 = v0[44];
  v3 = sub_23F384274(v0[35]);
  sub_23F4820BC(v3, &qword_256E702D0);
  sub_23F48225C();
  sub_23F482294(v2);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F4818BC();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383BD4();
  sub_23F383BCC();
  sub_23F383BC4();
  sub_23F383BBC();
  sub_23F383BB4();
  sub_23F383BAC();
  sub_23F383BA4();
  sub_23F383B9C();
  sub_23F383B94();
  sub_23F383B8C();
  sub_23F383B84();
  sub_23F383B7C();
  sub_23F383B74();
  sub_23F383B6C();
  sub_23F383B64();
  sub_23F383B5C();
  sub_23F383B54();
  sub_23F383DCC();
  sub_23F383DC4();
  sub_23F4821E4();
  sub_23F4821DC();
  sub_23F4821D4();
  sub_23F4821CC();
  sub_23F4821C4();
  sub_23F4821BC();
  sub_23F4821B4();
  sub_23F4821AC();
  sub_23F383B4C();
  sub_23F383B44();
  sub_23F383B3C();
  sub_23F383B34();
  sub_23F383B2C();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  sub_23F41C50C();
  v4 = (uint64_t (*)(void))sub_23F482670();
  return sub_23F38346C(v4);
}

uint64_t sub_23F45768C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 1352) = v1;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v0 + 696));
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F4576E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F3836F0();
  v1 = v0[69];
  v2 = v0[44];
  v3 = sub_23F384274(v0[26]);
  sub_23F4820BC(v3, &qword_256E702D0);
  sub_23F48225C();
  sub_23F482294(v2);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F4818BC();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383BD4();
  sub_23F383BCC();
  sub_23F383BC4();
  sub_23F383BBC();
  sub_23F383BB4();
  sub_23F383BAC();
  sub_23F383BA4();
  sub_23F383B9C();
  sub_23F383B94();
  sub_23F383B8C();
  sub_23F383B84();
  sub_23F383B7C();
  sub_23F383B74();
  sub_23F383B6C();
  sub_23F383B64();
  sub_23F383B5C();
  sub_23F383B54();
  sub_23F383DCC();
  sub_23F383DC4();
  sub_23F4821E4();
  sub_23F4821DC();
  sub_23F4821D4();
  sub_23F4821CC();
  sub_23F4821C4();
  sub_23F4821BC();
  sub_23F4821B4();
  sub_23F4821AC();
  sub_23F383B4C();
  sub_23F383B44();
  sub_23F383B3C();
  sub_23F383B34();
  sub_23F383B2C();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  sub_23F41C50C();
  v4 = (uint64_t (*)(void))sub_23F482670();
  return sub_23F38346C(v4);
}

uint64_t sub_23F4578B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D10();
  sub_23F3B2010(v2);
  *(_QWORD *)(v1 + 1368) = v0;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v1 + 696));
  sub_23F362D18();
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F457918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F3836F0();
  v3 = sub_23F48247C();
  sub_23F3663AC(v3, (uint64_t (*)(_QWORD))type metadata accessor for ValueResolver);
  v4 = sub_23F3B1CC8(v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F4820BC(v4, &qword_256E702D0);
  sub_23F451D28();
  sub_23F4824B4(v1);
  sub_23F482D00();
  sub_23F4818BC();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383BD4();
  sub_23F383BCC();
  sub_23F383BC4();
  sub_23F383BBC();
  sub_23F383BB4();
  sub_23F383BAC();
  sub_23F383BA4();
  sub_23F383B9C();
  sub_23F383B94();
  sub_23F383B8C();
  sub_23F383B84();
  sub_23F383B7C();
  sub_23F383B74();
  sub_23F383B6C();
  sub_23F383B64();
  sub_23F383B5C();
  sub_23F383B54();
  sub_23F383DCC();
  sub_23F383DC4();
  sub_23F4821E4();
  sub_23F4821DC();
  sub_23F4821D4();
  sub_23F4821CC();
  sub_23F4821C4();
  sub_23F4821BC();
  sub_23F4821B4();
  sub_23F4821AC();
  sub_23F383B4C();
  sub_23F383B44();
  sub_23F383B3C();
  sub_23F383B34();
  sub_23F383B2C();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  sub_23F41C50C();
  v5 = (uint64_t (*)(void))sub_23F482670();
  return sub_23F38346C(v5);
}

uint64_t sub_23F457AD4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23F3836F0();
  sub_23F4828B8();
  sub_23F4816BC(*(_QWORD *)(v0 + 1280));
  sub_23F3666E4();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383BD4();
  sub_23F383BCC();
  sub_23F383BC4();
  sub_23F383BBC();
  sub_23F383BB4();
  sub_23F383BAC();
  sub_23F383BA4();
  sub_23F383B9C();
  sub_23F383B94();
  sub_23F383B8C();
  sub_23F383B84();
  sub_23F383B7C();
  sub_23F383B74();
  sub_23F383B6C();
  sub_23F383B64();
  sub_23F383B5C();
  sub_23F383B54();
  sub_23F383DCC();
  sub_23F383DC4();
  sub_23F4821E4();
  sub_23F4821DC();
  sub_23F4821D4();
  sub_23F4821CC();
  sub_23F4821C4();
  sub_23F4821BC();
  sub_23F4821B4();
  sub_23F4821AC();
  sub_23F4823A4();
  sub_23F48239C();
  sub_23F383B4C();
  sub_23F383B44();
  sub_23F383B3C();
  sub_23F383B34();
  sub_23F383B2C();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  v1 = (uint64_t (*)(void))sub_23F4824A4();
  return sub_23F38346C(v1);
}

uint64_t sub_23F457C60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3836F0();
  v1 = v0[44];
  sub_23F4829DC(v0[43]);
  sub_23F4829DC(v1);
  sub_23F4816BC(v0[163]);
  sub_23F3666E4();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383BD4();
  sub_23F383BCC();
  sub_23F383BC4();
  sub_23F383BBC();
  sub_23F383BB4();
  sub_23F383BAC();
  sub_23F383BA4();
  sub_23F383B9C();
  sub_23F383B94();
  sub_23F383B8C();
  sub_23F383B84();
  sub_23F383B7C();
  sub_23F383B74();
  sub_23F383B6C();
  sub_23F383B64();
  sub_23F383B5C();
  sub_23F383B54();
  sub_23F383DCC();
  sub_23F383DC4();
  sub_23F4821E4();
  sub_23F4821DC();
  sub_23F4821D4();
  sub_23F4821CC();
  sub_23F4821C4();
  sub_23F4821BC();
  sub_23F4821B4();
  sub_23F4821AC();
  sub_23F4823A4();
  sub_23F48239C();
  sub_23F383B4C();
  sub_23F383B44();
  sub_23F383B3C();
  sub_23F383B34();
  sub_23F383B2C();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  v2 = (uint64_t (*)(void))sub_23F4824A4();
  return sub_23F38346C(v2);
}

uint64_t sub_23F457E00()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F3836F0();
  v1 = v0[69];
  v2 = v0[44];
  v3 = sub_23F384274(v0[35]);
  sub_23F4820BC(v3, &qword_256E702D0);
  sub_23F48225C();
  sub_23F482294(v2);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F4816BC(v0[167]);
  sub_23F3666E4();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383BD4();
  sub_23F383BCC();
  sub_23F383BC4();
  sub_23F383BBC();
  sub_23F383BB4();
  sub_23F383BAC();
  sub_23F383BA4();
  sub_23F383B9C();
  sub_23F383B94();
  sub_23F383B8C();
  sub_23F383B84();
  sub_23F383B7C();
  sub_23F383B74();
  sub_23F383B6C();
  sub_23F383B64();
  sub_23F383B5C();
  sub_23F383B54();
  sub_23F383DCC();
  sub_23F383DC4();
  sub_23F4821E4();
  sub_23F4821DC();
  sub_23F4821D4();
  sub_23F4821CC();
  sub_23F4821C4();
  sub_23F4821BC();
  sub_23F4821B4();
  sub_23F4821AC();
  sub_23F4823A4();
  sub_23F48239C();
  sub_23F383B4C();
  sub_23F383B44();
  sub_23F383B3C();
  sub_23F383B34();
  sub_23F383B2C();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  v4 = (uint64_t (*)(void))sub_23F4824A4();
  return sub_23F38346C(v4);
}

uint64_t sub_23F457FCC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F3836F0();
  v1 = v0[69];
  v2 = v0[44];
  v3 = sub_23F384274(v0[26]);
  sub_23F4820BC(v3, &qword_256E702D0);
  sub_23F48225C();
  sub_23F482294(v2);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F4816BC(v0[169]);
  sub_23F3666E4();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383BD4();
  sub_23F383BCC();
  sub_23F383BC4();
  sub_23F383BBC();
  sub_23F383BB4();
  sub_23F383BAC();
  sub_23F383BA4();
  sub_23F383B9C();
  sub_23F383B94();
  sub_23F383B8C();
  sub_23F383B84();
  sub_23F383B7C();
  sub_23F383B74();
  sub_23F383B6C();
  sub_23F383B64();
  sub_23F383B5C();
  sub_23F383B54();
  sub_23F383DCC();
  sub_23F383DC4();
  sub_23F4821E4();
  sub_23F4821DC();
  sub_23F4821D4();
  sub_23F4821CC();
  sub_23F4821C4();
  sub_23F4821BC();
  sub_23F4821B4();
  sub_23F4821AC();
  sub_23F4823A4();
  sub_23F48239C();
  sub_23F383B4C();
  sub_23F383B44();
  sub_23F383B3C();
  sub_23F383B34();
  sub_23F383B2C();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  v4 = (uint64_t (*)(void))sub_23F4824A4();
  return sub_23F38346C(v4);
}

uint64_t sub_23F458198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_23F3836F0();
  v4 = sub_23F48247C();
  sub_23F3663AC(v4, (uint64_t (*)(_QWORD))type metadata accessor for ValueResolver);
  v5 = sub_23F3B1CC8(v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F4820BC(v5, &qword_256E702D0);
  sub_23F451D28();
  sub_23F4824B4(v1);
  sub_23F482D00();
  sub_23F4816BC(*(_QWORD *)(v2 + 1368));
  sub_23F3666E4();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383BD4();
  sub_23F383BCC();
  sub_23F383BC4();
  sub_23F383BBC();
  sub_23F383BB4();
  sub_23F383BAC();
  sub_23F383BA4();
  sub_23F383B9C();
  sub_23F383B94();
  sub_23F383B8C();
  sub_23F383B84();
  sub_23F383B7C();
  sub_23F383B74();
  sub_23F383B6C();
  sub_23F383B64();
  sub_23F383B5C();
  sub_23F383B54();
  sub_23F383DCC();
  sub_23F383DC4();
  sub_23F4821E4();
  sub_23F4821DC();
  sub_23F4821D4();
  sub_23F4821CC();
  sub_23F4821C4();
  sub_23F4821BC();
  sub_23F4821B4();
  sub_23F4821AC();
  sub_23F4823A4();
  sub_23F48239C();
  sub_23F383B4C();
  sub_23F383B44();
  sub_23F383B3C();
  sub_23F383B34();
  sub_23F383B2C();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  v6 = (uint64_t (*)(void))sub_23F4824A4();
  return sub_23F38346C(v6);
}

uint64_t sub_23F458358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint8_t *v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  NSObject *v97;
  os_log_type_t v98;
  _BOOL4 v99;
  uint8_t *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  char *v107;
  uint64_t v108;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;

  v159 = a1;
  v121 = a3;
  v4 = sub_23F619E98();
  v154 = *(_QWORD *)(v4 - 8);
  v155 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v157 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v147 = (char *)&v112 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v131 = (char *)&v112 - v9;
  v10 = sub_23F35D2E8(&qword_256E6FB18);
  MEMORY[0x24BDAC7A8](v10);
  v119 = (uint64_t)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_23F618134();
  v115 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v117 = (char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F61ACA8();
  MEMORY[0x24BDAC7A8](v13);
  v118 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v15);
  v124 = (uint64_t)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for TranscriptValueFetcher(0);
  MEMORY[0x24BDAC7A8](v127);
  v128 = (char *)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v18);
  v129 = (uint64_t *)((char *)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v123 = sub_23F61B92C();
  v122 = *(_QWORD *)(v123 - 8);
  v20 = MEMORY[0x24BDAC7A8](v123);
  v113 = (char *)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v132 = (char *)&v112 - v22;
  v126 = type metadata accessor for ExpressionEvaluator(0);
  MEMORY[0x24BDAC7A8](v126);
  v133 = (char *)&v112 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_23F617D08();
  v141 = *(_QWORD *)(v143 - 8);
  v24 = MEMORY[0x24BDAC7A8](v143);
  v114 = (char *)&v112 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v144 = (char *)&v112 - v26;
  v27 = sub_23F35D2E8(&qword_256E703B8);
  MEMORY[0x24BDAC7A8](v27);
  v142 = (char *)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_23F61A570();
  v135 = *(_QWORD *)(v145 - 8);
  MEMORY[0x24BDAC7A8](v145);
  v130 = (char *)&v112 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_23F61AC24();
  v138 = *(_QWORD *)(v140 - 8);
  MEMORY[0x24BDAC7A8](v140);
  v139 = (char *)&v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23F35D2E8(&qword_256E74E68);
  MEMORY[0x24BDAC7A8](v31);
  v150 = (uint64_t)&v112 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_23F61A294();
  v146 = *(_QWORD *)(v153 - 8);
  MEMORY[0x24BDAC7A8](v153);
  v148 = (char *)&v112 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23F61B164();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v112 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_23F35D2E8(&qword_256E74E70);
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v112 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_23F61B44C();
  v156 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v158 = (char *)&v112 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_23F617000();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v149 = (char *)&v112 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v45);
  v136 = (char *)&v112 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v50 = (char *)&v112 - v49;
  v120 = a2;
  sub_23F61A69C();
  sub_23F61B128();
  sub_23F465FB4((uint64_t)v50, (uint64_t)v40);
  v125 = v35;
  v51 = *(void (**)(char *, uint64_t))(v35 + 8);
  v137 = v37;
  v51(v37, v34);
  if (sub_23F36195C((uint64_t)v40, 1, v41) == 1)
  {
    sub_23F481698((uint64_t)v40, &qword_256E74E70);
    sub_23F619094();
    v52 = v149;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v149, v50, v43);
    v53 = sub_23F619E8C();
    v54 = sub_23F61C628();
    v55 = v43;
    if (os_log_type_enabled(v53, v54))
    {
      v56 = swift_slowAlloc();
      v152 = v50;
      v57 = (uint8_t *)v56;
      v58 = swift_slowAlloc();
      v151 = v44;
      v59 = v58;
      v161 = v58;
      *(_DWORD *)v57 = 136315138;
      sub_23F3B121C(&qword_256E74E78, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
      v60 = sub_23F61CC1C();
      sub_23F37AE00(v60, v61, &v161);
      v160 = v62;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      v63 = *(void (**)(char *, uint64_t))(v151 + 8);
      v63(v52, v43);
      _os_log_impl(&dword_23F35A000, v53, v54, "QueryStep not found for the step results with query event id: %s", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v59, -1, -1);
      v64 = v57;
      v50 = v152;
      MEMORY[0x242670B70](v64, -1, -1);
    }
    else
    {
      v63 = *(void (**)(char *, uint64_t))(v44 + 8);
      v63(v52, v43);
    }

    (*(void (**)(char *, uint64_t))(v154 + 8))(v157, v155);
    type metadata accessor for InterpreterError();
    sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    v65 = v51;
    v151 = v44;
    v152 = v50;
    v112 = v43;
    (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v158, v40, v41);
    v66 = sub_23F61B440();
    v67 = v150;
    sub_23F36FF98(v66, v150);
    swift_bridgeObjectRelease();
    v68 = v153;
    v69 = v41;
    if (sub_23F36195C(v67, 1, v153) == 1)
    {
      sub_23F481698(v67, &qword_256E74E68);
      v70 = v147;
      sub_23F619094();
      v71 = v151;
      v50 = v152;
      v72 = v136;
      v73 = v112;
      (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v136, v152, v112);
      v74 = sub_23F619E8C();
      v75 = sub_23F61C628();
      if (os_log_type_enabled(v74, v75))
      {
        v76 = (uint8_t *)swift_slowAlloc();
        v159 = swift_slowAlloc();
        v161 = v159;
        *(_DWORD *)v76 = 136315138;
        sub_23F3B121C(&qword_256E74E78, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
        v77 = sub_23F61CC1C();
        sub_23F37AE00(v77, v78, &v161);
        v160 = v79;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        v63 = *(void (**)(char *, uint64_t))(v151 + 8);
        v63(v72, v73);
        _os_log_impl(&dword_23F35A000, v74, v75, "No queries found in query step with query event id: %s", v76, 0xCu);
        v80 = v159;
        swift_arrayDestroy();
        MEMORY[0x242670B70](v80, -1, -1);
        v81 = v76;
        v50 = v152;
        MEMORY[0x242670B70](v81, -1, -1);

        (*(void (**)(char *, uint64_t))(v154 + 8))(v147, v155);
      }
      else
      {
        v63 = *(void (**)(char *, uint64_t))(v71 + 8);
        v63(v72, v73);

        (*(void (**)(char *, uint64_t))(v154 + 8))(v70, v155);
      }
      v55 = v73;
      v101 = v158;
      type metadata accessor for InterpreterError();
      sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v101, v69);
    }
    else
    {
      v157 = (char *)v41;
      v82 = v146;
      (*(void (**)(char *, uint64_t, uint64_t))(v146 + 32))(v148, v67, v68);
      v83 = v139;
      sub_23F61A288();
      v147 = (char *)sub_23F61AC00();
      v150 = v84;
      v85 = *(void (**)(char *, uint64_t))(v138 + 8);
      v86 = v140;
      v85(v83, v140);
      sub_23F61A288();
      v149 = (char *)sub_23F61AC18();
      v88 = v87;
      v85(v83, v86);
      v89 = v137;
      sub_23F61B128();
      v90 = v144;
      v91 = v158;
      sub_23F61B41C();
      v92 = (uint64_t)v142;
      sub_23F453714();
      v93 = v92;
      (*(void (**)(char *, uint64_t))(v141 + 8))(v90, v143);
      v65(v89, v34);
      v94 = v145;
      if (sub_23F36195C(v92, 1, v145) == 1)
      {
        v95 = v91;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23F481698(v93, &qword_256E703B8);
        v96 = v131;
        sub_23F619094();
        v97 = sub_23F619E8C();
        v98 = sub_23F61C628();
        v99 = os_log_type_enabled(v97, v98);
        v55 = v112;
        if (v99)
        {
          v100 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v100 = 0;
          _os_log_impl(&dword_23F35A000, v97, v98, "Unable to resolve variable name to expression in plan.", v100, 2u);
          MEMORY[0x242670B70](v100, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v154 + 8))(v96, v155);
        type metadata accessor for InterpreterError();
        sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
        swift_allocError();
        sub_23F61B41C();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v148, v153);
        (*(void (**)(char *, char *))(v156 + 8))(v95, v157);
      }
      else
      {
        v155 = v88;
        v102 = (uint64_t)v130;
        (*(void (**)(char *, uint64_t, uint64_t))(v135 + 32))(v130, v92, v94);
        v103 = (uint64_t)v133;
        sub_23F61B128();
        sub_23F61B404();
        sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
        v104 = sub_23F61BFEC();
        *(_QWORD *)(v103 + *(int *)(v126 + 20)) = v104;
        v105 = (uint64_t)v128;
        (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v128, v103, v34);
        *(_QWORD *)(v105 + *(int *)(v127 + 20)) = v104;
        sub_23F617BA0();
        v106 = v129;
        sub_23F5F782C(v102, v129);
        sub_23F3663AC(v105, type metadata accessor for TranscriptValueFetcher);
        v107 = v132;
        v108 = v134;
        sub_23F374500(0xD000000000000092, 0x800000023F6349A0, 25, 0x6C6176286C617665, 0xEC000000293A6575);
        v55 = v112;
        if (!v108)
        {
          sub_23F481698((uint64_t)v106, &qword_256E701F0);
          sub_23F36196C(v124, 1, 1, v55);
          (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v113, v107, v123);
          v110 = v117;
          sub_23F618404();
          (*(void (**)(char *, _QWORD, uint64_t))(v115 + 104))(v110, *MEMORY[0x24BE53310], v116);
          v111 = sub_23F61811C();
          sub_23F36196C(v119, 1, 1, v111);
          sub_23F61AC90();
          sub_23F61B134();
          sub_23F61B17C();
          swift_release();
          sub_23F61A6A8();
          sub_23F61A4BC();
          (*(void (**)(char *, uint64_t))(v122 + 8))(v107, v123);
          sub_23F3663AC(v103, type metadata accessor for ExpressionEvaluator);
          (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v102, v145);
          (*(void (**)(char *, uint64_t))(v146 + 8))(v148, v153);
          (*(void (**)(char *, char *))(v156 + 8))(v158, v157);
          (*(void (**)(char *, uint64_t))(v151 + 8))(v152, v112);
          type metadata accessor for StepResolution();
          return swift_storeEnumTagMultiPayload();
        }
        sub_23F481698((uint64_t)v106, &qword_256E701F0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23F3663AC(v103, type metadata accessor for ExpressionEvaluator);
        (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v102, v145);
        (*(void (**)(char *, uint64_t))(v146 + 8))(v148, v153);
        (*(void (**)(char *, char *))(v156 + 8))(v158, v157);
      }
      v50 = v152;
      v63 = *(void (**)(char *, uint64_t))(v151 + 8);
    }
  }
  return ((uint64_t (*)(char *, uint64_t))v63)(v50, v55);
}

void sub_23F459428(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  int v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v77 = a1;
  v57 = a2;
  v2 = sub_23F617D08();
  v75 = *(_QWORD *)(v2 - 8);
  v76 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F61A684();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v58 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v57 - v9;
  v11 = sub_23F35D2E8(&qword_256E702D8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v61 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v64 = (char *)&v57 - v14;
  v15 = sub_23F61B2C0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F61B1E8();
  v69 = *(_QWORD *)(v19 - 8);
  v70 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v71 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_23F61B2E4();
  v21 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v73 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F61B14C();
  v24 = v23;
  v25 = *(_QWORD *)(v23 + 16);
  if (v25)
  {
    v68 = v15;
    v26 = v23 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v66 = *MEMORY[0x24BE56AC8];
    v67 = v18;
    v59 = v16;
    v60 = v26;
    v62 = v21;
    v63 = v6;
    v65 = v23;
    while (v25 <= *(_QWORD *)(v24 + 16))
    {
      v27 = *(_QWORD *)(v21 + 72);
      v72 = v25 - 1;
      v28 = v26 + v27 * (v25 - 1);
      v29 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
      v30 = v73;
      v31 = v21;
      v32 = v74;
      v29(v73, v28, v74);
      v33 = v67;
      sub_23F61B2CC();
      v34 = *(uint64_t (**)(char *, uint64_t))(v16 + 88);
      v35 = v16;
      v36 = v68;
      v37 = v34(v33, v68);
      if (v37 == v66)
      {
        (*(void (**)(char *, uint64_t))(v35 + 96))(v33, v36);
        (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v71, v33, v70);
        v38 = sub_23F61B1B8();
        v39 = *(_QWORD *)(v38 + 16);
        if (v39)
        {
          v40 = v63;
          v41 = v38 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
          v42 = *(_QWORD *)(v63 + 72);
          v43 = *(void (**)(char *, unint64_t, uint64_t))(v63 + 16);
          while (1)
          {
            v43(v10, v41, v5);
            sub_23F61A660();
            v44 = sub_23F617CD8();
            (*(void (**)(char *, uint64_t))(v75 + 8))(v4, v76);
            if ((v44 & 1) != 0)
              break;
            (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v5);
            v41 += v42;
            if (!--v39)
            {
              v45 = 1;
              v46 = (uint64_t)v64;
              goto LABEL_13;
            }
          }
          v46 = (uint64_t)v64;
          (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v64, v10, v5);
          v45 = 0;
LABEL_13:
          v48 = v73;
          v47 = v74;
          v21 = v62;
          v24 = v65;
        }
        else
        {
          v45 = 1;
          v48 = v73;
          v47 = v74;
          v21 = v62;
          v40 = v63;
          v46 = (uint64_t)v64;
          v24 = v65;
        }
        sub_23F36196C(v46, v45, 1, v5);
        swift_bridgeObjectRelease();
        if (sub_23F36195C(v46, 1, v5) != 1)
        {
          (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v70);
          (*(void (**)(char *, uint64_t))(v21 + 8))(v48, v47);
          swift_bridgeObjectRelease();
          v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32);
          v55 = v57;
          v56(v57, v46, v5);
          v54 = 0;
          goto LABEL_24;
        }
        sub_23F481698(v46, &qword_256E702D8);
        v49 = sub_23F61B1B8();
        if (*(_QWORD *)(v49 + 16))
        {
          v50 = (uint64_t)v61;
          (*(void (**)(char *, unint64_t, uint64_t))(v40 + 16))(v61, v49 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80)), v5);
          v51 = 0;
          v16 = v59;
        }
        else
        {
          v51 = 1;
          v16 = v59;
          v50 = (uint64_t)v61;
        }
        sub_23F36196C(v50, v51, 1, v5);
        swift_bridgeObjectRelease();
        if (sub_23F36195C(v50, 1, v5) == 1)
        {
          (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v70);
          (*(void (**)(char *, uint64_t))(v21 + 8))(v73, v74);
          sub_23F481698(v50, &qword_256E702D8);
          v26 = v60;
        }
        else
        {
          v52 = v58;
          (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v58, v50, v5);
          sub_23F61A660();
          v53 = sub_23F617CCC();
          (*(void (**)(char *, uint64_t))(v75 + 8))(v4, v76);
          (*(void (**)(char *, uint64_t))(v40 + 8))(v52, v5);
          (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v70);
          (*(void (**)(char *, uint64_t))(v21 + 8))(v73, v74);
          v26 = v60;
          if ((v53 & 1) != 0)
            goto LABEL_22;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v36);
        v21 = v31;
        v24 = v65;
        v16 = v35;
      }
      v25 = v72;
      if (!v72)
        goto LABEL_22;
    }
    __break(1u);
  }
  else
  {
LABEL_22:
    swift_bridgeObjectRelease();
    v54 = 1;
    v55 = v57;
LABEL_24:
    sub_23F36196C(v55, v54, 1, v5);
  }
}

uint64_t sub_23F4599C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  void (*v64)(char *, char *);
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t result;
  char *v69;
  void (*v70)(char *, _QWORD);
  char *v71;
  void (*v72)(char *, uint64_t);
  char *v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, _QWORD);
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124[8];
  uint64_t v125;

  v114 = a4;
  v110 = a3;
  v113 = a1;
  v5 = sub_23F35D2E8(&qword_256E6FB18);
  MEMORY[0x24BDAC7A8](v5);
  v99 = (uint64_t)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v7);
  v102 = (uint64_t)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_23F618284();
  v101 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v100 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_23F617D08();
  v109 = *(_QWORD *)(v112 - 8);
  v10 = MEMORY[0x24BDAC7A8](v112);
  v98 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v97 = (char *)&v90 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v111 = (char *)&v90 - v14;
  v119 = sub_23F61A504();
  v107 = *(_QWORD *)(v119 - 8);
  MEMORY[0x24BDAC7A8](v119);
  v115 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F619E98();
  v122 = *(_QWORD *)(v16 - 8);
  v123 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v117 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v95 = (char *)&v90 - v19;
  v20 = sub_23F61B92C();
  v120 = *(_QWORD *)(v20 - 8);
  v121 = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v93 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v116 = (char *)&v90 - v23;
  v105 = sub_23F61B6E0();
  v104 = *(_QWORD *)(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v106 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23F618134();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v108 = (char *)&v90 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v90 - v29;
  v31 = sub_23F61ACA8();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v94 = (char *)&v90 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v90 - v35;
  v125 = sub_23F617DD4();
  v37 = *(_QWORD *)(v125 - 8);
  v38 = MEMORY[0x24BDAC7A8](v125);
  v96 = (char *)&v90 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v90 - v40;
  v118 = a2;
  sub_23F61A4F8();
  sub_23F61AC78();
  v42 = v36;
  v43 = (char *)v25;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v42, v31);
  v44 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v30, v25);
  if ((_DWORD)v44 == *MEMORY[0x24BE53328])
  {
    v45 = v44;
    (*(void (**)(char *, uint64_t))(v26 + 96))(v30, v25);
    v46 = v125;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v41, v30, v125);
    v47 = v116;
    sub_23F617DA4();
    v49 = v120;
    v48 = v121;
    v50 = (*(uint64_t (**)(char *, uint64_t))(v120 + 88))(v47, v121);
    v51 = v48;
    if (v50 == *MEMORY[0x24BEB9988])
    {
      v90 = v26;
      v91 = v37;
      v92 = v41;
      (*(void (**)(char *, uint64_t))(v49 + 96))(v47, v48);
      v52 = swift_projectBox();
      v53 = v104;
      v54 = v106;
      v55 = v105;
      (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v106, v52, v105);
      swift_release();
      v56 = *(_QWORD *)(sub_23F61B6D4() + 16);
      swift_bridgeObjectRelease();
      v57 = v119;
      v58 = v115;
      if (v56)
      {
        v59 = *(_QWORD *)(sub_23F61B6D4() + 16);
        swift_bridgeObjectRelease();
        if (v59 == 1)
        {
          v117 = v43;
          v60 = v95;
          sub_23F619094();
          v61 = sub_23F619E8C();
          v62 = sub_23F61C628();
          if (os_log_type_enabled(v61, v62))
          {
            v63 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v63 = 0;
            _os_log_impl(&dword_23F35A000, v61, v62, "pick_one is resolving a non-collection value to itself", v63, 2u);
            MEMORY[0x242670B70](v63, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v122 + 8))(v60, v123);
          (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v58, v118, v57);
          v64 = *(void (**)(char *, char *))(v91 + 16);
          v65 = v96;
          v66 = v125;
          v64(v96, v92);
          v67 = v106;
          result = sub_23F61B6D4();
          if (!*(_QWORD *)(result + 16))
          {
            __break(1u);
            return result;
          }
          (*(void (**)(char *, unint64_t, uint64_t))(v120 + 16))(v93, result + ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80)), v121);
          swift_bridgeObjectRelease();
          sub_23F617DB0();
          v69 = v108;
          ((void (*)(char *, char *, uint64_t))v64)(v108, v65, v66);
          (*(void (**)(char *, uint64_t, char *))(v90 + 104))(v69, v45, v117);
          v70 = (void (*)(char *, _QWORD))sub_23F61A4EC();
          sub_23F61AC84();
          v70(v124, 0);
          sub_23F61B134();
          v71 = v111;
          sub_23F61B17C();
          swift_release();
          sub_23F61A4A4();
          (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v71, v113, v112);
          sub_23F61A48C();
          v72 = *(void (**)(char *, uint64_t))(v91 + 8);
          v72(v65, v66);
          (*(void (**)(char *, uint64_t))(v104 + 8))(v67, v105);
          v72(v92, v66);
          (*(void (**)(uint64_t, char *, uint64_t))(v107 + 32))(v114, v58, v119);
        }
        else
        {
          sub_23F61B6D4();
          v84 = v100;
          sub_23F61826C();
          v85 = sub_23F617000();
          sub_23F36196C(v102, 1, 1, v85);
          v86 = sub_23F61A4E0();
          v122 = v87;
          v123 = v86;
          v88 = v108;
          (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v108, v84, v103);
          (*(void (**)(char *, _QWORD, char *))(v90 + 104))(v88, *MEMORY[0x24BE532F8], v43);
          v89 = sub_23F61811C();
          sub_23F36196C(v99, 1, 1, v89);
          sub_23F61AC90();
          sub_23F61B134();
          sub_23F61B17C();
          swift_release();
          (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v97, v113, v112);
          sub_23F61A480();
          sub_23F61A4B0();
          (*(void (**)(char *, uint64_t))(v101 + 8))(v84, v103);
          (*(void (**)(char *, uint64_t))(v53 + 8))(v106, v55);
          (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v125);
        }
        goto LABEL_15;
      }
      v77 = v45;
      v117 = v43;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
      v46 = v125;
      v41 = v92;
      v37 = v91;
      v26 = v90;
      v79 = v58;
      v78 = v107;
    }
    else
    {
      v77 = v45;
      v117 = v43;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v51);
      v57 = v119;
      v78 = v107;
      v79 = v115;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v79, v118, v57);
    v80 = v108;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v108, v41, v46);
    (*(void (**)(char *, uint64_t, char *))(v26 + 104))(v80, v77, v117);
    v81 = v37;
    v82 = (void (*)(char *, _QWORD))sub_23F61A4EC();
    sub_23F61AC84();
    v82(v124, 0);
    sub_23F61B134();
    v83 = v111;
    sub_23F61B17C();
    swift_release();
    sub_23F61A4A4();
    (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v83, v113, v112);
    sub_23F61A48C();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v41, v46);
    (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v114, v79, v57);
LABEL_15:
    type metadata accessor for StepResolution();
    return swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v25);
  v73 = v117;
  sub_23F619094();
  v74 = sub_23F619E8C();
  v75 = sub_23F61C628();
  if (os_log_type_enabled(v74, v75))
  {
    v76 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v76 = 0;
    _os_log_impl(&dword_23F35A000, v74, v75, "Expected action success for search results", v76, 2u);
    MEMORY[0x242670B70](v76, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v122 + 8))(v73, v123);
  type metadata accessor for InterpreterError();
  sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

void sub_23F45A544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  int v45;
  int v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v0 = sub_23F617D08();
  v42 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v41 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v40 = (char *)&v32 - v3;
  v4 = sub_23F61A504();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - v8;
  v10 = sub_23F61B2C0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v38 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v32 - v14;
  v49 = sub_23F61B2E4();
  v16 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v48 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x24BEE4B08];
  v18 = sub_23F61B14C();
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v47 = v18 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v46 = *MEMORY[0x24BE56C70];
    v45 = *MEMORY[0x24BE56B98];
    v44 = MEMORY[0x24BEE4AF8];
    v36 = v11;
    v37 = v0;
    v33 = v5;
    v34 = v9;
    v20 = v16;
    v35 = v10;
    while (v19 <= *(_QWORD *)(v18 + 16))
    {
      v21 = v18;
      --v19;
      v22 = v20;
      (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v48, v47 + *(_QWORD *)(v20 + 72) * v19, v49);
      sub_23F61B2CC();
      v23 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v15, v10);
      if (v23 == v46)
      {
        (*(void (**)(char *, uint64_t))(v20 + 8))(v48, v49);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
        goto LABEL_18;
      }
      if (v23 == v45)
      {
        v24 = v38;
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v38, v15, v10);
        (*(void (**)(char *, uint64_t))(v11 + 96))(v24, v10);
        v43 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v43(v9, v24, v4);
        sub_23F61A474();
        v25 = v4;
        v26 = v40;
        sub_23F4723D0();
        LOBYTE(v24) = v27;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v37);
        if ((v24 & 1) != 0)
        {
          (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v39, v9, v25);
          v4 = v25;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F377CB8();
            v44 = v30;
          }
          v10 = v35;
          v11 = v36;
          v28 = *(_QWORD *)(v44 + 16);
          v5 = v33;
          if (v28 >= *(_QWORD *)(v44 + 24) >> 1)
          {
            sub_23F377CB8();
            v44 = v31;
          }
          v29 = v44;
          *(_QWORD *)(v44 + 16) = v28 + 1;
          v43((char *)(v29+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v28), v39, v4);
        }
        else
        {
          v4 = v25;
          v10 = v35;
          v11 = v36;
        }
        v20 = v22;
        v9 = v34;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v34, v4);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v48, v49);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
      v18 = v21;
      if (!v19)
        goto LABEL_20;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
LABEL_18:
  sub_23F4F346C();
}

uint64_t sub_23F45A98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;

  v4 = sub_23F617D08();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_23F619FAC();
  v64 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61A684();
  v65 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F35D2E8(&qword_256E70878);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F61B1E8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = a1;
  sub_23F61B14C();
  sub_23F4F373C((uint64_t)v14);
  swift_bridgeObjectRelease();
  if (sub_23F36195C((uint64_t)v14, 1, v15) == 1)
  {
    sub_23F481698((uint64_t)v14, &qword_256E70878);
    return sub_23F36196C(a2, 1, 1, v9);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  v46 = v18;
  v20 = sub_23F61B1B8();
  v21 = *(_QWORD *)(v20 + 16);
  if (!v21)
  {
    v41 = 1;
    goto LABEL_49;
  }
  v43 = v16;
  v44 = v15;
  v45 = a2;
  v22 = v20 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
  v63 = *MEMORY[0x24BE54CC0];
  v62 = *MEMORY[0x24BE54CD8];
  v61 = *MEMORY[0x24BE54CD0];
  v60 = *MEMORY[0x24BE54CE8];
  v59 = *MEMORY[0x24BE54D30];
  v58 = *MEMORY[0x24BE54D28];
  v57 = *MEMORY[0x24BE54D38];
  v56 = *MEMORY[0x24BE54C98];
  v55 = *MEMORY[0x24BE54CF0];
  v54 = *MEMORY[0x24BE54D20];
  v53 = *MEMORY[0x24BE54D10];
  v23 = *MEMORY[0x24BE54CE0];
  v47 = *MEMORY[0x24BE54CA8];
  v52 = *(_QWORD *)(v65 + 72);
  v24 = *(void (**)(char *, unint64_t, uint64_t))(v65 + 16);
  v42[1] = v20;
  sub_23F617BA0();
  v25 = v51;
  do
  {
    v24(v11, v22, v9);
    sub_23F61A63C();
    v26 = v64;
    v27 = (*(uint64_t (**)(char *, uint64_t))(v64 + 88))(v8, v25);
    if (v27 == v63
      || v27 == v62
      || v27 == v61
      || v27 == v60
      || v27 == v59
      || v27 == v58
      || v27 == v57
      || v27 == v56
      || v27 == v55
      || v27 == v54
      || v27 == v53
      || v27 == v23)
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v25);
    }
    else if (v27 != v47)
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v25);
      goto LABEL_45;
    }
    sub_23F61A660();
    v39 = sub_23F61B14C();
    v40 = sub_23F464634((uint64_t)v6, v39);
    v25 = v51;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v49);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      a2 = v45;
      (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v45, v11, v9);
      v41 = 0;
      goto LABEL_48;
    }
LABEL_45:
    (*(void (**)(char *, uint64_t))(v65 + 8))(v11, v9);
    v22 += v52;
    --v21;
  }
  while (v21);
  swift_bridgeObjectRelease();
  v41 = 1;
  a2 = v45;
LABEL_48:
  v16 = v43;
  v15 = v44;
LABEL_49:
  sub_23F36196C(a2, v41, 1, v9);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v46, v15);
}

uint64_t sub_23F45AE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v5 = v4;
  v46 = a4;
  v52 = a1;
  v8 = sub_23F35D2E8(&qword_256E702D8);
  MEMORY[0x24BDAC7A8](v8);
  v48 = (uint64_t)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_23F61A684();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v45 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for DependencyId(0);
  v11 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v13 = (_QWORD *)((char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_23F619FAC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a2;
  sub_23F61A63C();
  v18 = a3;
  v19 = v50;
  v20 = sub_23F464F94(a3, v5);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return v18;
  }
  v21 = v20;
  v43 = v18;
  v44 = 0;
  v50 = v5;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v18 = *(_QWORD *)(v21 + 16);
  if (v18)
  {
    v22 = *(unsigned __int8 *)(v11 + 80);
    v42[1] = v21;
    v23 = v21 + ((v22 + 32) & ~v22);
    v24 = *(_QWORD *)(v11 + 72);
    v25 = v46;
    v26 = v53;
    while (1)
    {
      sub_23F362600(v23, (uint64_t)v13, type metadata accessor for DependencyId);
      v27 = (uint64_t)v13 + *(int *)(v26 + 20);
      v28 = sub_23F61B14C();
      v29 = v25;
      v30 = sub_23F464634(v27, v28);
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
      {
        sub_23F3663AC((uint64_t)v13, type metadata accessor for DependencyId);
        v31 = v52;
        v25 = v29;
      }
      else
      {
        v32 = v48;
        v25 = v29;
        sub_23F459428(v27, v48);
        if (sub_23F36195C(v32, 1, v49) != 1)
        {
          swift_bridgeObjectRelease();
          v35 = v47;
          v36 = v32;
          v37 = v45;
          v38 = v49;
          (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v45, v36, v49);
          v39 = *v13;
          sub_23F617BA0();
          v40 = v44;
          v41 = sub_23F45AE30(v52, v37, v39, v29);
          if (!v40)
            v18 = v41;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v38);
          sub_23F3663AC((uint64_t)v13, type metadata accessor for DependencyId);
          return v18;
        }
        sub_23F3663AC((uint64_t)v13, type metadata accessor for DependencyId);
        sub_23F481698(v32, &qword_256E702D8);
        v31 = v52;
      }
      v33 = v51;
      v26 = v53;
      v23 += v24;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
  }
  swift_bridgeObjectRelease();
  v33 = v51;
  v31 = v52;
LABEL_12:
  v18 = v43;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v31, v33, v49);
  sub_23F617BA0();
  return v18;
}

uint64_t sub_23F45B1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5[9] = a4;
  v5[10] = v4;
  v5[7] = a2;
  v5[8] = a3;
  v5[6] = a1;
  sub_23F35D2E8(&qword_256E70228);
  v5[11] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E702D8);
  v5[12] = swift_task_alloc();
  v6 = sub_23F61A684();
  v5[13] = v6;
  v5[14] = *(_QWORD *)(v6 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  v7 = sub_23F61B1E8();
  v5[17] = v7;
  v5[18] = *(_QWORD *)(v7 - 8);
  v5[19] = swift_task_alloc();
  v8 = sub_23F61AA14();
  v5[20] = v8;
  v5[21] = *(_QWORD *)(v8 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v9 = sub_23F61A09C();
  v5[24] = v9;
  v5[25] = *(_QWORD *)(v9 - 8);
  v5[26] = swift_task_alloc();
  v10 = sub_23F61B0BC();
  v5[27] = v10;
  v5[28] = *(_QWORD *)(v10 - 8);
  v5[29] = swift_task_alloc();
  v11 = sub_23F61B2C0();
  v5[30] = v11;
  v5[31] = *(_QWORD *)(v11 - 8);
  v5[32] = swift_task_alloc();
  v5[33] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E702E0);
  v5[34] = swift_task_alloc();
  v12 = sub_23F61B2E4();
  v5[35] = v12;
  v5[36] = *(_QWORD *)(v12 - 8);
  v5[37] = swift_task_alloc();
  v5[38] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E74F00);
  v5[39] = swift_task_alloc();
  v13 = sub_23F61AE94();
  v5[40] = v13;
  v5[41] = *(_QWORD *)(v13 - 8);
  v5[42] = swift_task_alloc();
  v14 = sub_23F619E98();
  v5[43] = v14;
  v5[44] = *(_QWORD *)(v14 - 8);
  v5[45] = swift_task_alloc();
  v5[46] = swift_task_alloc();
  v5[47] = swift_task_alloc();
  v5[48] = swift_task_alloc();
  v5[49] = swift_task_alloc();
  v15 = sub_23F617D08();
  v5[50] = v15;
  v5[51] = *(_QWORD *)(v15 - 8);
  v5[52] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E70238);
  v5[53] = swift_task_alloc();
  v16 = sub_23F61B5D8();
  v5[54] = v16;
  v5[55] = *(_QWORD *)(v16 - 8);
  v5[56] = swift_task_alloc();
  v17 = sub_23F61A24C();
  v5[57] = v17;
  v5[58] = *(_QWORD *)(v17 - 8);
  v5[59] = swift_task_alloc();
  v5[60] = swift_task_alloc();
  v18 = sub_23F619FAC();
  v5[61] = v18;
  v5[62] = *(_QWORD *)(v18 - 8);
  v5[63] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F45B538()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  _DWORD *v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  _BOOL4 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(void);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  NSObject *v157;
  os_log_type_t v158;
  _BOOL4 v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _DWORD *v164;
  uint64_t v165;
  uint64_t (*v166)(uint64_t, uint64_t);
  uint64_t v167;
  void (*v168)(uint64_t, uint64_t);
  uint64_t v169;
  void (*v170)(uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207[2];

  v1 = v0[9];
  if (*(_QWORD *)(v1 + 16) && *(_QWORD *)(v1 + 40))
  {
    v2 = v0[62];
    v3 = v0[63];
    v4 = v0[61];
    sub_23F3668F4();
    sub_23F61A63C();
    v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v3, v4);
    if (v5 == *MEMORY[0x24BE54CC0])
    {
      v6 = v0[63];
      v7 = v0[41];
      v8 = v0[42];
      v9 = v0[39];
      sub_23F3B13E4(v0[62]);
      sub_23F384840(v8, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
      v10 = sub_23F61AE88();
      sub_23F36FFB0(v10, v9);
      sub_23F362984();
      v11 = sub_23F61AE70();
      sub_23F383740(v9, 1, v11);
      if (v44)
      {
        v12 = v0[47];
        v13 = v0[39];
        sub_23F362D18();
        sub_23F481698(v13, &qword_256E74F00);
        sub_23F384060();
        sub_23F619E8C();
        v14 = sub_23F3F0EEC();
        if (sub_23F3F0E3C(v14))
        {
          *(_WORD *)sub_23F366668() = 0;
          sub_23F432948(&dword_23F35A000, v12, v15, "Expected at least one update expression");
          sub_23F366530();
        }
        v16 = v0[47];
        v17 = v0[44];

        sub_23F383E64(v16, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
        sub_23F384B58();
        sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
        sub_23F362D64();
      }
      else
      {
        v38 = v0[51];
        v39 = v0[52];
        v41 = v0[34];
        v40 = v0[35];
        sub_23F481698(v0[39], &qword_256E74F00);
        MEMORY[0x24266E38C]();
        sub_23F5F68A0(v39, v41);
        v42 = *(void (**)(uint64_t))(v38 + 8);
        v43 = sub_23F389F14();
        v42(v43);
        sub_23F383740(v41, 1, v40);
        if (!v44)
        {
          v55 = v0[31];
          sub_23F482DB4(v0[36]);
          sub_23F61B2CC();
          v56 = sub_23F4062C8(*(uint64_t (**)(uint64_t, uint64_t))(v55 + 88));
          if (v56 == *MEMORY[0x24BE56AC8])
          {
            v57 = v0[33];
            v59 = v0[18];
            v58 = v0[19];
            v60 = v0[12];
            sub_23F3B13E4(v0[31]);
            sub_23F38431C(v58, v57, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 32));
            v61 = sub_23F61B1B8();
            v62 = sub_23F453B68(v61);
            sub_23F3F1438(v62, v60);
            sub_23F362984();
            sub_23F389F14();
            sub_23F482BD4();
            sub_23F374850(v63, v64, v65, v66, v67);
            v123 = v0[52];
            v201 = v0[50];
            sub_23F481698(v0[12], &qword_256E702D8);
            sub_23F482D20();
            sub_23F465D5C();
            ((void (*)(uint64_t, uint64_t))v42)(v123, v201);
            sub_23F389F14();
            sub_23F482BD4();
            sub_23F374650(v124, v125, v126, v127, v128);
            v202 = v0[41];
            v194 = v0[35];
            v198 = v0[38];
            v143 = v0[21];
            v142 = v0[22];
            v186 = v0[19];
            v189 = v0[36];
            v144 = v0[16];
            v181 = v0[18];
            v184 = v0[17];
            v145 = v0[14];
            v146 = v0[6];
            sub_23F481698(v0[11], &qword_256E70228);
            sub_23F61A978();
            sub_23F61AA08();
            sub_23F482B0C();
            sub_23F4820E8();
            sub_23F383E64(v142, *(uint64_t (**)(uint64_t, uint64_t))(v143 + 8));
            sub_23F383D74(v144, *(uint64_t (**)(uint64_t, uint64_t))(v145 + 8));
            (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v186, v184);
            v147 = (*(uint64_t (**)(uint64_t, uint64_t))(v189 + 8))(v198, v194);
            sub_23F48229C(v147, v148, v149, v150, v151, v152, v153, v154, v171, v172, v173, v174, v175, v176, v177, v178, v179, v181, v184,
              v186,
              v189,
              v194,
              v198,
              v202);
            v28 = sub_23F482598();
            v29 = v146;
LABEL_39:
            v30 = 0;
            goto LABEL_13;
          }
          if (v56 == *MEMORY[0x24BE56AF8])
          {
            sub_23F4821EC();
            v92 = v0[36];
            v192 = v0[35];
            v195 = v0[38];
            v93 = v0[33];
            v95 = v0[28];
            v94 = v0[29];
            v96 = v0[6];
            sub_23F3B13E4(v0[31]);
            sub_23F384840(v94, v93, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 32));
            sub_23F61A660();
            sub_23F61B0B0();
            sub_23F482B0C();
            sub_23F4820E8();
            sub_23F383F80(v94, *(uint64_t (**)(uint64_t, uint64_t))(v95 + 8));
            v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v92 + 8))(v195, v192);
            sub_23F48229C(v97, v98, v99, v100, v101, v102, v103, v104, v171, v172, v173, v174, v175, v176, v177, v178, v179, v180, v182,
              v185,
              v187,
              v192,
              v195,
              v200);
            v28 = sub_23F482598();
            v29 = v96;
            goto LABEL_39;
          }
          if (v56 == *MEMORY[0x24BE56BA0])
          {
            sub_23F4821EC();
            v196 = v0[38];
            v110 = v0[35];
            v109 = v0[36];
            v111 = v0[33];
            v113 = v0[25];
            v112 = v0[26];
            v114 = v0[6];
            sub_23F482E38(v0[31]);
            sub_23F384840(v112, v111, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 32));
            sub_23F61A060();
            sub_23F61A090();
            sub_23F482B0C();
            sub_23F4820E8();
            sub_23F383F80(v112, *(uint64_t (**)(uint64_t, uint64_t))(v113 + 8));
            v115 = (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 8))(v196, v110);
            sub_23F48229C(v115, v116, v117, v118, v119, v120, v121, v122, v171, v172, v173, v174, v175, v176, v177, v178, v179, v180, v182,
              v185,
              v187,
              v190,
              v196,
              v200);
            v28 = sub_23F482598();
            v29 = v114;
            goto LABEL_39;
          }
          v129 = v0[36];
          if (v56 == *MEMORY[0x24BE56C58])
          {
            sub_23F4821EC();
            v130 = v0[23];
            v131 = v0[21];
            v193 = v0[6];
            v197 = v0[38];
            sub_23F3B13E4(v0[31]);
            sub_23F482DC0();
            v132();
            sub_23F61A660();
            sub_23F61AA08();
            sub_23F482B0C();
            v133 = v193;
            sub_23F4820E8();
            sub_23F3B1CC8(v130, *(uint64_t (**)(uint64_t, uint64_t))(v131 + 8));
            v134 = sub_23F383F80(v197, *(uint64_t (**)(uint64_t, uint64_t))(v129 + 8));
            sub_23F48229C(v134, v135, v136, v137, v138, v139, v140, v141, v171, v172, v173, v174, v175, v176, v177, v178, v179, v180, v182,
              v185,
              v187,
              v193,
              v197,
              v200);
            v28 = sub_23F482598();
            v29 = v133;
            goto LABEL_39;
          }
          v156 = v0[37];
          v155 = v0[38];
          sub_23F362D18();
          sub_23F384060();
          sub_23F384840(v156, v155, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v129 + 16));
          v157 = sub_23F619E8C();
          v158 = sub_23F61C628();
          v159 = os_log_type_enabled(v157, v158);
          v160 = v0[48];
          v161 = v0[43];
          v203 = v0[44];
          v162 = v0[37];
          v204 = v0[38];
          v163 = v0[36];
          v199 = v0[35];
          if (v159)
          {
            v164 = (_DWORD *)sub_23F366668();
            v207[0] = sub_23F366668();
            *v164 = 136315138;
            sub_23F61B2CC();
            sub_23F3B121C(&qword_256E74F08, (void (*)(uint64_t))MEMORY[0x24BE56C90]);
            sub_23F61CC1C();
            v165 = sub_23F482D84();
            sub_23F383E88(v165, v166);
            sub_23F4828F0();
            v0[4] = v167;
            sub_23F61C790();
            sub_23F3B5F04();
            sub_23F4829D4(v162);
            sub_23F4264A8(&dword_23F35A000, v157, v158, "cannot create an ActionParameterContext for an update whose event payload is %s");
            sub_23F3B17D4();
            sub_23F366530();
          }

          v168 = *(void (**)(uint64_t, uint64_t))(v163 + 8);
          v168(v162, v199);
          (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v160, v161);
          v168(v204, v199);
          v169 = sub_23F384664();
          v170(v169);
          v70 = v0[31];
LABEL_27:
          v71 = v0[6];
          v72 = sub_23F482598();
          sub_23F3838D8(v71, v73, v74, v72);
          sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v70 + 8));
          goto LABEL_14;
        }
        v45 = sub_23F362D18();
        sub_23F482784(v45, &qword_256E702E0);
        sub_23F384B58();
        sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
        sub_23F362D64();
      }
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      (*(void (**)(_QWORD, _QWORD))(v0[41] + 8))(v0[42], v0[40]);
      sub_23F3666DC();
      sub_23F3666C4();
      sub_23F3666EC();
      sub_23F3666E4();
      sub_23F366698();
      sub_23F3666A0();
      sub_23F366708();
      sub_23F362CC8();
      sub_23F3668E4();
      sub_23F3668DC();
      sub_23F3668D4();
      sub_23F3666D4();
      sub_23F383980();
      sub_23F3667E0();
      sub_23F383898();
      sub_23F383978();
      sub_23F383970();
      sub_23F383890();
      sub_23F383888();
      sub_23F383880();
      sub_23F383878();
      sub_23F383870();
      sub_23F383868();
      sub_23F383C4C();
      sub_23F383C44();
      sub_23F383C6C();
      sub_23F383FDC();
      v31 = (uint64_t (*)(void))v0[1];
      return v31();
    }
    if (v5 != *MEMORY[0x24BE54CD8])
    {
      v46 = v0[14];
      v47 = v0[15];
      v48 = v0[7];
      sub_23F362D18();
      sub_23F384060();
      sub_23F38431C(v47, v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 16));
      v49 = sub_23F619E8C();
      v50 = sub_23F61C634();
      if (os_log_type_enabled(v49, v50))
      {
        v183 = v0[15];
        v188 = v0[14];
        v191 = v0[13];
        v51 = (_DWORD *)sub_23F366668();
        v207[0] = sub_23F366668();
        *v51 = 136315138;
        sub_23F61A660();
        sub_23F3B121C(&qword_256E6FB60, (void (*)(uint64_t))MEMORY[0x24BE52140]);
        sub_23F61CC1C();
        v52 = sub_23F482D84();
        sub_23F383E64(v52, v53);
        sub_23F4828F0();
        v0[3] = v54;
        sub_23F61C790();
        sub_23F3B5F04();
        (*(void (**)(uint64_t, uint64_t))(v188 + 8))(v183, v191);
        sub_23F4264A8(&dword_23F35A000, v49, v50, "not an action expression: %s");
        sub_23F3B17D4();
        sub_23F366530();
      }
      sub_23F384274(v0[14]);

      v68 = sub_23F38422C();
      v69(v68);
      v70 = v0[62];
      goto LABEL_27;
    }
    v33 = v0[63];
    v34 = v0[60];
    v35 = v0[58];
    sub_23F3B13E4(v0[62]);
    sub_23F38431C(v34, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 32));
    sub_23F61A240();
    sub_23F61B338();
    v37 = v0[53];
    v36 = v0[54];
    sub_23F3E26A0(v37, 0);
    sub_23F384120();
    sub_23F383740(v37, 1, v36);
    if (!v75)
    {
      v105 = v0[58];
      v205 = v0[57];
      v206 = v0[60];
      v106 = v0[55];
      v107 = v0[56];
      v108 = v0[6];
      sub_23F4244A8(v107, v0[53], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 32));
      sub_23F61A660();
      sub_23F61B5A8();
      sub_23F482B0C();
      sub_23F61AC0C();
      sub_23F3D98EC(v107, *(uint64_t (**)(uint64_t, uint64_t))(v106 + 8));
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v206, v205);
      v28 = sub_23F482598();
      v29 = v108;
      goto LABEL_39;
    }
    v76 = v0[58];
    v77 = v0[53];
    sub_23F362D18();
    sub_23F481698(v77, &qword_256E70238);
    sub_23F619094();
    sub_23F4822BC(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 16));
    v78 = sub_23F619E8C();
    v79 = sub_23F61C628();
    v80 = os_log_type_enabled(v78, v79);
    v81 = v0[59];
    v82 = v0[60];
    v84 = v0[57];
    v83 = v0[58];
    v85 = v0[49];
    if (v80)
    {
      v86 = (uint8_t *)sub_23F366668();
      v207[0] = sub_23F366668();
      *(_DWORD *)v86 = 136315138;
      v87 = sub_23F61A240();
      sub_23F37AE00(v87, v88, v207);
      v0[5] = v89;
      sub_23F61C790();
      sub_23F384364();
      sub_23F482DCC(v81);
      sub_23F38485C(&dword_23F35A000, v78, v79, "cannot find a tool definition for '%s'", v86);
      sub_23F3B17D4();
      sub_23F366530();
    }
    v90 = v0[44];

    v91 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
    v91(v81, v84);
    sub_23F3D98EC(v85, *(uint64_t (**)(uint64_t, uint64_t))(v90 + 8));
    v91(v82, v84);
  }
  else
  {
    sub_23F619094();
    sub_23F3E0254();
    v18 = sub_23F619E8C();
    v19 = sub_23F61C610();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)sub_23F366668();
      v207[0] = sub_23F366668();
      *(_DWORD *)v20 = 136315138;
      v21 = sub_23F384A00();
      MEMORY[0x24266F8F8](v21, &type metadata for DependencyPath);
      v22 = sub_23F38458C();
      sub_23F482D58(v22, v23, v207);
      v0[2] = v24;
      sub_23F61C790();
      sub_23F362D18();
      sub_23F384A80();
      sub_23F38485C(&dword_23F35A000, v18, v19, "cannot create an ActionParameterContext for path %s", v20);
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F384A80();

    v25 = sub_23F384AB4();
    v26(v25);
  }
  v27 = v0[6];
  v28 = sub_23F482598();
  v29 = v27;
  v30 = 1;
LABEL_13:
  sub_23F36196C(v29, v30, 1, v28);
LABEL_14:
  swift_task_dealloc();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  v31 = (uint64_t (*)(void))sub_23F384760();
  return v31();
}

uint64_t sub_23F45C5E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = sub_23F619FAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61A24C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F35D2E8(&qword_256E702D0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F382EF8(a1, (uint64_t)v12, &qword_256E702D0);
  v13 = sub_23F61AC24();
  if (sub_23F36195C((uint64_t)v12, 1, v13) == 1)
  {
    sub_23F481698((uint64_t)v12, &qword_256E702D0);
    sub_23F61A63C();
    if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x24BE54CD8])
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
      v14 = sub_23F61A240();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0;
    }
  }
  else
  {
    v14 = sub_23F61AC18();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  return v14;
}

void Interpreter.worlds(stmt:sessionState:toolId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(_QWORD);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, unint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  BOOL v125;
  unint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(unint64_t, uint64_t, uint64_t);
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char v135;
  unint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(uint64_t, uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(void);
  unint64_t v177;
  unint64_t v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t inited;
  int v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(uint64_t, uint64_t);
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  void (*v236)(uint64_t, uint64_t);
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  char v248[8];
  uint64_t v249;
  uint64_t v250;
  char v251[8];
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;

  v217 = a4;
  v219 = a3;
  v241 = sub_23F617D08();
  v243 = *(_QWORD *)(v241 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3834D0();
  v246 = v8;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383780();
  sub_23F3B13F0(v11);
  sub_23F61B3EC();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v14 = sub_23F3B13F0(v13);
  v15 = type metadata accessor for CandidateWithDependencies(v14);
  sub_23F383E7C(v15, (uint64_t)&v253);
  v234 = v16;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F3834D0();
  v242 = v18;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F383780();
  sub_23F3B13F0(v20);
  v247 = sub_23F61B404();
  v245 = *(_QWORD *)(v247 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F3834D0();
  v244 = v22;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F383780();
  sub_23F3B13F0(v26);
  v27 = sub_23F61B9EC();
  sub_23F383E7C(v27, (uint64_t)&v232);
  v201 = v28;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F383780();
  sub_23F3B13F0(v31);
  v32 = sub_23F61B92C();
  sub_23F383E7C(v32, (uint64_t)&v236);
  v205 = v33;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F383780();
  sub_23F3B13F0(v37);
  v38 = sub_23F61B95C();
  sub_23F383E7C(v38, (uint64_t)&v238);
  v207 = v39;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F36285C();
  v212 = v41;
  sub_23F35D2E8(&qword_256E70268);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F36285C();
  sub_23F3B13F0(v43);
  v44 = sub_23F61BBA8();
  sub_23F383E7C(v44, (uint64_t)&v249);
  v223 = v45;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F3834D0();
  v240 = v47;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F383780();
  sub_23F3B13F0(v49);
  v50 = sub_23F61B5D8();
  sub_23F383E7C(v50, (uint64_t)&v242);
  v211 = v51;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F36285C();
  v54 = sub_23F3B13F0(v53);
  v55 = type metadata accessor for DependencyId(v54);
  sub_23F383E7C(v55, (uint64_t)v251);
  v225 = v56;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F36285C();
  v59 = sub_23F3B13F0(v58);
  v60 = type metadata accessor for TranscriptValueFetcher(v59);
  sub_23F383E7C(v60, (uint64_t)&v254);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F36285C();
  sub_23F3B13F0(v62);
  v63 = sub_23F61B164();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F383A54();
  sub_23F619FAC();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F362930();
  sub_23F61A63C();
  v218 = a2;
  sub_23F61B128();
  v65 = v239;
  sub_23F4662A8(v5, v4);
  if (v65)
  {
    v229 = v65;
    sub_23F482A38();
    sub_23F482A28();
    goto LABEL_3;
  }
  v195 = v4;
  sub_23F482A38();
  sub_23F482A28();
  sub_23F383738();
  sub_23F470ED8();
  v67 = v66;
  sub_23F362984();
  v252 = v67;
  sub_23F47CB64(&v252);
  sub_23F482DE8();
  sub_23F362984();
  v68 = v246;
  v69 = v235;
  v210 = *(_QWORD *)(v252 + 16);
  if (!v210)
  {
    swift_release();
    sub_23F35D2E8(&qword_256E74C80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
    sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
    *(_QWORD *)(inited + 32) = sub_23F61BFEC();
    sub_23F3E3E10(inited);
    goto LABEL_3;
  }
  v215 = v252;
  sub_23F35D2E8(&qword_256E74C80);
  v70 = swift_initStackObject();
  *(_OWORD *)(v70 + 16) = xmmword_23F61E7E0;
  sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
  *(_QWORD *)(v70 + 32) = sub_23F482D14();
  sub_23F3E3E10(v70);
  v252 = v71;
  isUniquelyReferenced_nonNull_native = v227;
  sub_23F61B128();
  *(_QWORD *)(v227 + *(int *)(v238 + 20)) = sub_23F482D14();
  sub_23F482A48();
  v214 = v75;
  v193 = *MEMORY[0x24BEB9A50];
  v194 = *MEMORY[0x24BEB9988];
  v76 = v240;
  v77 = (uint64_t)v228;
  v78 = v226;
  while (1)
  {
    if (v74 >= *(_QWORD *)(v73 + 16))
      goto LABEL_117;
    v221 = v74;
    sub_23F4827E0();
    sub_23F362600(v79, v80, v81);
    v82 = v77 + *(int *)(v78 + 20);
    v249 = sub_23F61B14C();
    MEMORY[0x24BDAC7A8](v249);
    *((_QWORD *)&v193 - 2) = isUniquelyReferenced_nonNull_native;
    *((_QWORD *)&v193 - 1) = v82;
    v239 = v82;
    sub_23F35D2E8(&qword_256E70F10);
    sub_23F35D2E8(&qword_256E74C88);
    sub_23F3B0CC8(&qword_256E74C70, &qword_256E70F10);
    sub_23F4827E0();
    sub_23F61AC48();
    sub_23F482DE8();
    swift_bridgeObjectRelease();
    if (!v250)
      goto LABEL_74;
    v83 = v242;
    v84 = v243;
    v232 = *(void (**)(uint64_t, uint64_t))(v250 + 16);
    if (!v232)
    {
      v77 = (uint64_t)v228;
      sub_23F3663AC((uint64_t)v228, type metadata accessor for DependencyId);
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    v233 = v252;
    v252 = MEMORY[0x24BEE4B08];
    isUniquelyReferenced_nonNull_native = v241;
    v230 = v250;
    if (!v217)
      goto LABEL_40;
    v85 = *v228;
    if (!*(_QWORD *)(*v228 + 16) || !*(_QWORD *)(v85 + 40))
      goto LABEL_40;
    v69 = *(_QWORD *)(v85 + 32);
    v238 = *(_QWORD *)(v85 + 40);
    sub_23F617BA0();
    sub_23F384AB4();
    v86 = v229;
    sub_23F61B338();
    sub_23F482DE8();
    if (v86)
    {
LABEL_115:
      sub_23F48277C();
      sub_23F48277C();
      sub_23F48277C();
      sub_23F3663AC((uint64_t)v228, type metadata accessor for DependencyId);
      swift_release();
      sub_23F3663AC(v227, type metadata accessor for TranscriptValueFetcher);
      swift_bridgeObjectRelease();
LABEL_3:
      sub_23F362870();
      return;
    }
    v87 = sub_23F61B530();
    v88 = *(_QWORD *)(v87 + 16);
    if (v88)
    {
      v89 = v223;
      v68 = v87 + ((*(unsigned __int8 *)(v223 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v223 + 80));
      sub_23F617BA0();
      v237 = *(_QWORD *)(v89 + 72);
      v90 = *(void (**)(uint64_t, unint64_t, uint64_t))(v89 + 16);
      v91 = v222;
      while (1)
      {
        v90(v76, v68, v91);
        if (sub_23F61BB78() == v69 && v238 == v92)
        {
          sub_23F384364();
          v84 = v243;
          goto LABEL_27;
        }
        sub_23F482DC0();
        v94 = sub_23F61CC64();
        sub_23F362984();
        if ((v94 & 1) != 0)
          break;
        v76 = v240;
        v95 = v222;
        (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v240, v222);
        v91 = v95;
        v68 += v237;
        --v88;
        v83 = v242;
        if (!v88)
        {
          sub_23F384364();
          v96 = v222;
          v84 = v243;
          sub_23F482A8C();
          v98 = v213;
          goto LABEL_28;
        }
      }
      v83 = v242;
      v84 = v243;
LABEL_27:
      sub_23F482A8C();
      sub_23F362984();
      v98 = v213;
      v76 = v240;
      v96 = v222;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v223 + 32))(v213, v240, v222);
      v97 = 0;
    }
    else
    {
      v97 = 1;
      v69 = v235;
      v98 = v213;
      v96 = v222;
    }
LABEL_28:
    sub_23F36196C(v98, v97, 1, v96);
    sub_23F48277C();
    sub_23F384364();
    if (sub_23F36195C(v98, 1, v96) == 1)
    {
      sub_23F482064();
      sub_23F481698(v98, &qword_256E70268);
      goto LABEL_40;
    }
    v99 = v209;
    v100 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v223 + 32))(v209, v98, v96);
    v101 = v212;
    MEMORY[0x24266F0AC](v100);
    v102 = v207;
    v103 = (*(uint64_t (**)(uint64_t, uint64_t))(v207 + 88))(v101, v208);
    if (v103 == v193)
      break;
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v99, v96);
    sub_23F482064();
    sub_23F3D98EC(v212, *(uint64_t (**)(uint64_t, uint64_t))(v102 + 8));
LABEL_39:
    v76 = v240;
LABEL_40:
    sub_23F482A48();
    v231 = v115;
    while (2)
    {
      if (v114 >= *(_QWORD *)(v112 + 16))
      {
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
        goto LABEL_122;
      }
      v236 = (void (*)(uint64_t, uint64_t))(v114 + 1);
      sub_23F362600(v231 + *(_QWORD *)(v113 + 72) * v114, v83, type metadata accessor for CandidateWithDependencies);
      v116 = *(_QWORD *)(v83 + *(int *)(v69 + 20));
      sub_23F383738();
      sub_23F466618(v233, v116);
      v118 = v117;
      sub_23F362984();
      v119 = 0;
      v237 = v118 + 56;
      sub_23F4826C4();
      v122 = v121 & v120;
      sub_23F482C30();
      if (v122)
      {
LABEL_43:
        v123 = __clz(__rbit64(v122));
        v122 &= v122 - 1;
        v124 = v123 | (v119 << 6);
        goto LABEL_58;
      }
      while (1)
      {
        v125 = __OFADD__(v119++, 1);
        if (v125)
          goto LABEL_112;
        if (v119 >= v238)
          goto LABEL_72;
        v126 = *(_QWORD *)(v237 + 8 * v119);
        if (!v126)
          break;
LABEL_57:
        v122 = (v126 - 1) & v126;
        v124 = __clz(__rbit64(v126)) + (v119 << 6);
LABEL_58:
        v129 = *(_QWORD *)(*(_QWORD *)(v118 + 48) + 8 * v124);
        v130 = *(void (**)(unint64_t, uint64_t, uint64_t))(v84 + 16);
        v130(v68, v239, isUniquelyReferenced_nonNull_native);
        sub_23F4826BC(v244, v83, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v245 + 16));
        sub_23F383738();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v250 = v129;
        sub_23F3756E8();
        if (__OFADD__(*(_QWORD *)(v129 + 16), (v132 & 1) == 0))
        {
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
          goto LABEL_113;
        }
        v133 = v131;
        v134 = v132;
        sub_23F35D2E8(&qword_256E74C90);
        v135 = sub_23F61CA18();
        isUniquelyReferenced_nonNull_native = v241;
        v84 = v243;
        if ((v135 & 1) != 0)
        {
          sub_23F3756E8();
          if ((v134 & 1) != (v137 & 1))
            goto LABEL_124;
          v133 = v136;
        }
        v138 = v250;
        if ((v134 & 1) != 0)
        {
          v139 = sub_23F482BFC();
          sub_23F4826BC(v139, v141, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v140 + 40));
        }
        else
        {
          sub_23F384B78(v250 + 8 * (v133 >> 6));
          v130(v142 + *(_QWORD *)(v84 + 72) * v133, v246, isUniquelyReferenced_nonNull_native);
          v143 = sub_23F482BFC();
          sub_23F4826BC(v143, v145, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v144 + 32));
          v146 = *(_QWORD *)(v138 + 16);
          v125 = __OFADD__(v146, 1);
          v147 = v146 + 1;
          if (v125)
            goto LABEL_111;
          *(_QWORD *)(v138 + 16) = v147;
        }
        sub_23F482BC8();
        v68 = v246;
        (*(void (**)(unint64_t, uint64_t))(v84 + 8))(v246, isUniquelyReferenced_nonNull_native);
        sub_23F4727A0(&v250, v134, (void (*)(uint64_t *, uint64_t))sub_23F481120, (uint64_t (*)(uint64_t, uint64_t))sub_23F491138, (uint64_t)&qword_256E71A20, (uint64_t)&unk_256E74E30);
        swift_bridgeObjectRelease();
        v83 = v242;
        v76 = v240;
        if (v122)
          goto LABEL_43;
      }
      sub_23F482ADC();
      if (v127 == v125)
        goto LABEL_72;
      sub_23F4828E0();
      if (v126)
        goto LABEL_56;
      sub_23F482ADC();
      if (v127 == v125)
        goto LABEL_72;
      sub_23F4828E0();
      if (v126)
        goto LABEL_56;
      sub_23F482ADC();
      if (v127 != v125)
      {
        sub_23F4828E0();
        if (!v126)
        {
          while (1)
          {
            v119 = v128 + 1;
            if (__OFADD__(v128, 1))
              break;
            if (v119 >= v238)
              goto LABEL_72;
            v126 = *(_QWORD *)(v237 + 8 * v119);
            ++v128;
            if (v126)
              goto LABEL_57;
          }
          __break(1u);
          goto LABEL_115;
        }
LABEL_56:
        v119 = v128;
        goto LABEL_57;
      }
LABEL_72:
      swift_release();
      sub_23F3663AC(v83, type metadata accessor for CandidateWithDependencies);
      v114 = (unint64_t)v236;
      v69 = v235;
      v113 = v234;
      v112 = v230;
      if (v236 != v232)
        continue;
      break;
    }
    swift_bridgeObjectRelease();
    sub_23F48277C();
LABEL_74:
    v77 = (uint64_t)v228;
    sub_23F3663AC((uint64_t)v228, type metadata accessor for DependencyId);
LABEL_75:
    v74 = v221 + 1;
    isUniquelyReferenced_nonNull_native = v227;
    v78 = v226;
    v73 = v215;
    if (v221 + 1 == v210)
    {
LABEL_113:
      swift_release();
      sub_23F3663AC(isUniquelyReferenced_nonNull_native, type metadata accessor for TranscriptValueFetcher);
      goto LABEL_3;
    }
  }
  sub_23F3D98EC(v212, *(uint64_t (**)(uint64_t, uint64_t))(v102 + 96));
  swift_release();
  sub_23F451D40(v230, (uint64_t)v248, (void (*)(_QWORD))type metadata accessor for CandidateWithDependencies);
  sub_23F482DE8();
  v105 = *(_QWORD *)(v104 + 16);
  if (!v105)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    sub_23F48245C();
    sub_23F482064();
    v69 = v235;
    goto LABEL_39;
  }
  v106 = v205;
  v107 = (void (*)(uint64_t, uint64_t))(v104
                                               + ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80)));
  v237 = v104;
  sub_23F617BA0();
  v238 = *(_QWORD *)(v106 + 72);
  v236 = v107;
  v108 = v206;
  v109 = v204;
  v110 = v203;
  while (1)
  {
    sub_23F3F0EE4(v110, (uint64_t)v107);
    sub_23F3F0EE4(v109, v110);
    v111 = (*(uint64_t (**)(uint64_t, uint64_t))(v106 + 88))(v109, v108);
    if (v111 != v194)
      break;
    sub_23F3D98EC(v109, *(uint64_t (**)(uint64_t, uint64_t))(v106 + 96));
    swift_release();
    sub_23F3D98EC(v110, *(uint64_t (**)(uint64_t, uint64_t))(v106 + 8));
    v107 = (void (*)(uint64_t, uint64_t))((char *)v107 + v238);
    if (!--v105)
    {
      swift_bridgeObjectRelease_n();
      v68 = v246;
      v83 = v242;
      goto LABEL_38;
    }
  }
  sub_23F3B1E08(v109);
  sub_23F3B1E08(v110);
  v148 = v237;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v148 + 16))
  {
    v149 = v106;
    v150 = v197;
    sub_23F3F0EE4((uint64_t)v197, (uint64_t)v236);
    v151 = v200;
    sub_23F61B8CC();
    sub_23F3B1E08((uint64_t)v150);
    sub_23F61B6E0();
    v152 = swift_allocBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v201 + 16))(v198, v151, v202);
    sub_23F61B6BC();
    *v150 = v152;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v149 + 104))(v150, v194, v108);
    v153 = v230;
    v68 = v246;
    v154 = v199;
    if (!*(_QWORD *)(v230 + 16))
      goto LABEL_123;
    sub_23F383EB8();
    sub_23F362600(v153 + v155, v154, type metadata accessor for CandidateWithDependencies);
    sub_23F362984();
    v156 = v154;
    v157 = v245;
    v158 = *(void (**)(uint64_t, uint64_t, uint64_t))(v245 + 16);
    v159 = v196;
    v160 = v154;
    v161 = v247;
    v158(v196, v160, v247);
    sub_23F3663AC(v156, type metadata accessor for CandidateWithDependencies);
    sub_23F61B3F8();
    v236 = *(void (**)(uint64_t, uint64_t))(v157 + 8);
    v236(v159, v161);
    sub_23F61B134();
    sub_23F61B17C();
    swift_release();
    sub_23F61B3C8();
    v162 = 0;
    v237 = v233 + 56;
    sub_23F4826C4();
    v165 = v164 & v163;
    sub_23F482C30();
    v69 = v235;
    if (!v165)
      goto LABEL_81;
LABEL_80:
    v166 = __clz(__rbit64(v165));
    v165 &= v165 - 1;
    v167 = v166 | (v162 << 6);
    v168 = v220;
    while (1)
    {
      v175 = *(_QWORD *)(*(_QWORD *)(v233 + 48) + 8 * v167);
      v176 = *(void (**)(void))(v243 + 16);
      v176();
      v158(v168, v216, v247);
      sub_23F383738();
      swift_isUniquelyReferenced_nonNull_native();
      v250 = v175;
      sub_23F3756E8();
      if (__OFADD__(*(_QWORD *)(v175 + 16), (v178 & 1) == 0))
        goto LABEL_118;
      v69 = v177;
      v68 = v178;
      sub_23F35D2E8(&qword_256E74C90);
      v179 = sub_23F61CA18();
      v180 = v241;
      v181 = v220;
      if ((v179 & 1) != 0)
      {
        sub_23F3756E8();
        if ((v68 & 1) != (v183 & 1))
          goto LABEL_124;
        v69 = v182;
      }
      v184 = v250;
      if ((v68 & 1) != 0)
      {
        v185 = sub_23F482BE8();
        sub_23F4826BC(v185, v181, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v186 + 40));
      }
      else
      {
        sub_23F384B78(v250 + 8 * (v69 >> 6));
        ((void (*)(unint64_t, uint64_t, uint64_t))v176)(v187 + *(_QWORD *)(v243 + 72) * v69, v224, v180);
        v188 = sub_23F482BE8();
        sub_23F4826BC(v188, v181, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v189 + 32));
        v190 = *(_QWORD *)(v184 + 16);
        v125 = __OFADD__(v190, 1);
        v191 = v190 + 1;
        if (v125)
          goto LABEL_119;
        *(_QWORD *)(v184 + 16) = v191;
      }
      sub_23F482A8C();
      sub_23F482BC8();
      (*(void (**)(uint64_t, uint64_t))(v243 + 8))(v224, v180);
      sub_23F4727A0(&v250, v181, (void (*)(uint64_t *, uint64_t))sub_23F481120, (uint64_t (*)(uint64_t, uint64_t))sub_23F491138, (uint64_t)&qword_256E71A20, (uint64_t)&unk_256E74E30);
      swift_bridgeObjectRelease();
      if (v165)
        goto LABEL_80;
LABEL_81:
      v169 = v162 + 1;
      v168 = v220;
      if (__OFADD__(v162, 1))
        goto LABEL_120;
      v76 = v240;
      if (v169 >= v238)
      {
LABEL_108:
        swift_release();
        v236(v216, v247);
        (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v200, v202);
        sub_23F48245C();
        sub_23F482064();
        goto LABEL_74;
      }
      v170 = *(_QWORD *)(v237 + 8 * v169);
      ++v162;
      if (!v170)
      {
        v162 = v169 + 1;
        sub_23F482B24();
        if (v127 == v125)
          goto LABEL_108;
        sub_23F482910();
        if (!v170)
        {
          v162 = v171 + 2;
          sub_23F482B24();
          if (v127 == v125)
            goto LABEL_108;
          sub_23F482910();
          if (!v170)
          {
            v173 = v172 + 3;
            if (v173 >= v238)
              goto LABEL_108;
            v170 = *(_QWORD *)(v237 + 8 * v173);
            if (!v170)
            {
              while (1)
              {
                v162 = v173 + 1;
                if (__OFADD__(v173, 1))
                  goto LABEL_121;
                sub_23F482B24();
                if (v127 == v125)
                  goto LABEL_108;
                sub_23F482910();
                v173 = v174 + 1;
                if (v170)
                  goto LABEL_97;
              }
            }
            v162 = v173;
          }
        }
      }
LABEL_97:
      v165 = (v170 - 1) & v170;
      v167 = __clz(__rbit64(v170)) + (v162 << 6);
    }
  }
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  sub_23F61CC94();
  __break(1u);
  swift_release();
  __break(1u);
}

uint64_t sub_23F45DC18(uint64_t a1)
{
  sub_23F453E0C(a1);
  sub_23F35D2E8(&qword_256E70580);
  sub_23F3B0CC8(&qword_256E70588, &qword_256E70580);
  sub_23F61C088();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  return 2651;
}

uint64_t sub_23F45DCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a4;
  v8[7] = a5;
  v8[4] = a2;
  v8[5] = a3;
  v8[3] = a1;
  v9 = sub_23F619E98();
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = swift_task_alloc();
  v10 = sub_23F61AB28();
  v8[13] = v10;
  v8[14] = *(_QWORD *)(v10 - 8);
  v8[15] = swift_task_alloc();
  v11 = sub_23F61B5D8();
  v8[16] = v11;
  v8[17] = *(_QWORD *)(v11 - 8);
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E70220);
  v8[20] = swift_task_alloc();
  v12 = sub_23F61B308();
  v8[21] = v12;
  v8[22] = *(_QWORD *)(v12 - 8);
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F45DE08()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = v0;
  v3 = v0[20];
  v2 = v0[21];
  v4 = sub_23F61A240();
  v6 = v5;
  v7 = sub_23F61A228();
  sub_23F482A1C();
  sub_23F61B314();
  sub_23F383740(v3, 1, v2);
  if (v8)
  {
    v9 = v0[12];
    v10 = sub_23F3837B0();
    sub_23F482784(v10, &qword_256E70220);
    sub_23F619094();
    sub_23F3E0254();
    v11 = v9;
    sub_23F619E8C();
    v12 = sub_23F3F0EEC();
    v13 = sub_23F482920(v12);
    v15 = v0[11];
    v14 = v0[12];
    v16 = v1[10];
    if (v13)
    {
      v17 = (_DWORD *)sub_23F366668();
      v54 = sub_23F366668();
      *v17 = 136315138;
      v18 = sub_23F3668F4();
      sub_23F482D58(v18, v19, &v54);
      v1[2] = v20;
      sub_23F482C78();
      swift_bridgeObjectRelease_n();
      sub_23F4264A8(&dword_23F35A000, v11, (os_log_type_t)v3, "tool not found: %s");
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F384A80();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    sub_23F384B58();
    sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
    sub_23F362D64();
    *v29 = v4;
    v29[1] = v6;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
LABEL_10:
    sub_23F482B3C();
    __asm { BR              X0 }
  }
  v22 = v0[23];
  v21 = v0[24];
  v23 = v0[22];
  sub_23F384840(v1[24], v1[20], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 32));
  sub_23F384840(v22, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
  v24 = sub_23F4062C8(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88));
  if (v24 == *MEMORY[0x24BE56D38])
  {
    v25 = v1[19];
    v27 = v1[22];
    v26 = v1[23];
    v28 = v1[17];
    v52 = v1[6];
    v48 = v1[7];
    v50 = v1[5];
    v46 = v1[3];
    sub_23F362D18();
    sub_23F383D74(v26, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 96));
    sub_23F384840(v25, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 32));
    sub_23F46C3C0(v48, v25, v7, v50, v52, v46);
LABEL_11:
    v36 = v1[22];
    v37 = v1[17];
    sub_23F3B5F04();
    sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
    sub_23F4057A8(*(uint64_t (**)(uint64_t))(v36 + 8));
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    goto LABEL_10;
  }
  v30 = v7;
  if (v24 == *MEMORY[0x24BE56D28])
  {
    v31 = v1[18];
    v33 = v1[22];
    v32 = v1[23];
    v34 = v1[17];
    v53 = v1[6];
    v49 = v1[7];
    v51 = v1[5];
    v47 = v1[3];
    sub_23F362D18();
    sub_23F383D74(v32, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 96));
    sub_23F384840(v31, v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 32));
    sub_23F46DB44(v49, v31, v30, v51, v53, v47);
    goto LABEL_11;
  }
  if (v24 == *MEMORY[0x24BE56D30])
  {
    sub_23F362984();
    sub_23F35D2E8(&qword_256E700E8);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_23F61E7E0;
    *(_QWORD *)(v38 + 32) = v4;
    *(_QWORD *)(v38 + 40) = v6;
    sub_23F61A1EC();
    v39 = (_QWORD *)swift_task_alloc();
    v1[25] = v39;
    *v39 = v1;
    v39[1] = sub_23F45E2D0;
    sub_23F482B3C();
    return sub_23F45F26C(v40, v41, v42, v43, v44);
  }
  else
  {
    sub_23F482B3C();
    return sub_23F61CC58();
  }
}

uint64_t sub_23F45E2D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 208) = v1;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v0 + 112));
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F45E328()
{
  _QWORD *v0;
  void (*v1)(_QWORD, _QWORD);
  uint64_t (*v2)(void);

  v1 = *(void (**)(_QWORD, _QWORD))(v0[22] + 8);
  v1(v0[24], v0[21]);
  v1(v0[23], v0[21]);
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  v2 = (uint64_t (*)(void))sub_23F384760();
  return v2();
}

uint64_t sub_23F45E3B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 184);
  sub_23F4829DC(*(_QWORD *)(v0 + 192));
  sub_23F4829DC(v1);
  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F45E43C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  char *v63;
  void (*v64)(char *, uint64_t);
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;

  v106 = a2;
  v105 = a3;
  v4 = sub_23F35D2E8(&qword_256E6FFA0);
  MEMORY[0x24BDAC7A8](v4);
  v90 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_23F61B2C0();
  v6 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v8 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61B0BC();
  v114 = *(_QWORD *)(v9 - 8);
  v115 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v113 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E6FB18);
  MEMORY[0x24BDAC7A8](v11);
  v96 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_23F617D14();
  v99 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v101 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_23F618134();
  v100 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v104 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F61ACA8();
  MEMORY[0x24BDAC7A8](v15);
  v97 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F35D2E8(&qword_256E6FB20);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v95 = (uint64_t)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v111 = (uint64_t)&v88 - v20;
  v21 = sub_23F35D2E8(&qword_256E70228);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v91 = (uint64_t)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v94 = (uint64_t)&v88 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v93 = (uint64_t)&v88 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v107 = (char *)&v88 - v28;
  v29 = sub_23F61B164();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v92 = (char *)&v88 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v88 - v33;
  v35 = sub_23F617D08();
  v117 = *(_QWORD *)(v35 - 8);
  v118 = v35;
  v36 = MEMORY[0x24BDAC7A8](v35);
  v98 = (char *)&v88 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v116 = (char *)&v88 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v88 - v41;
  MEMORY[0x24266DAB0](v40);
  v108 = a1;
  sub_23F61B128();
  v43 = sub_23F61B14C();
  v44 = *(void (**)(char *, uint64_t))(v30 + 8);
  v109 = v29;
  v44(v34, v29);
  v45 = sub_23F464634((uint64_t)v42, v43);
  swift_bridgeObjectRelease();
  v119 = v42;
  if ((v45 & 1) != 0)
  {
    sub_23F61B128();
    v46 = (uint64_t)v107;
    sub_23F465D5C();
    v44(v34, v109);
    v47 = sub_23F617000();
    sub_23F36196C(v111, 1, 1, v47);
    v48 = v93;
    sub_23F382EF8(v46, v93, &qword_256E70228);
    v49 = sub_23F61AA14();
    if (sub_23F36195C(v48, 1, v49) == 1)
    {
      sub_23F481698(v48, &qword_256E70228);
    }
    else
    {
      sub_23F61AA08();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
    }
    v67 = (uint64_t)v96;
    (*(void (**)(char *, _QWORD, uint64_t))(v99 + 104))(v101, *MEMORY[0x24BE52288], v102);
    v68 = v104;
    sub_23F617D38();
    (*(void (**)(char *, _QWORD, uint64_t))(v100 + 104))(v68, *MEMORY[0x24BE53320], v103);
    v69 = sub_23F61811C();
    sub_23F36196C(v67, 1, 1, v69);
    sub_23F61AC90();
    sub_23F61B134();
    sub_23F61B17C();
    swift_release();
    v71 = v117;
    v70 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v98, v106, v118);
    sub_23F61A4BC();
    sub_23F481698((uint64_t)v107, &qword_256E70228);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v119, v70);
  }
  else
  {
    v107 = v34;
    v50 = v92;
    sub_23F61B128();
    v51 = sub_23F61B14C();
    v44(v50, v109);
    v52 = *(_QWORD *)(v51 + 16);
    v89 = (void (*)(uint64_t, uint64_t))v44;
    if (v52)
    {
      v53 = *(_QWORD *)(sub_23F61B2E4() - 8);
      v54 = v51 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
      v55 = *MEMORY[0x24BE56AF8];
      v56 = *(_QWORD *)(v53 + 72);
      v93 = v51;
      sub_23F617BA0();
      v112 = v8;
      LODWORD(v111) = v55;
      v110 = v56;
      do
      {
        sub_23F61B2CC();
        if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v120) == v55)
        {
          (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v120);
          v57 = v113;
          v58 = v114;
          v59 = v115;
          (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v113, v8, v115);
          v60 = v6;
          v61 = v116;
          sub_23F61B05C();
          v62 = sub_23F617CD8();
          v63 = v61;
          v6 = v60;
          v8 = v112;
          v64 = *(void (**)(char *, uint64_t))(v117 + 8);
          v64(v63, v118);
          v65 = *(void (**)(char *, uint64_t))(v58 + 8);
          v56 = v110;
          v66 = v59;
          v55 = v111;
          v65(v57, v66);
          if ((v62 & 1) != 0)
          {
            swift_bridgeObjectRelease_n();
            v84 = v118;
            v85 = *(void (**)(char *, uint64_t, uint64_t))(v117 + 16);
            v86 = (uint64_t)v90;
            v85(v90, v106, v118);
            sub_23F36196C(v86, 0, 1, v84);
            v87 = v119;
            v85(v116, (uint64_t)v119, v84);
            sub_23F61A798();
            v64(v87, v84);
            goto LABEL_19;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v120);
        }
        v54 += v56;
        --v52;
      }
      while (v52);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v72 = (uint64_t)v96;
    v73 = (uint64_t)v107;
    sub_23F61B128();
    v74 = v73;
    v75 = v94;
    sub_23F465D5C();
    v89(v74, v109);
    v76 = sub_23F617000();
    sub_23F36196C(v95, 1, 1, v76);
    v77 = v91;
    sub_23F382EF8(v75, v91, &qword_256E70228);
    v78 = sub_23F61AA14();
    if (sub_23F36195C(v77, 1, v78) == 1)
    {
      sub_23F481698(v77, &qword_256E70228);
    }
    else
    {
      sub_23F61AA08();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v77, v78);
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v99 + 104))(v101, *MEMORY[0x24BE52270], v102);
    v79 = v104;
    sub_23F617D38();
    (*(void (**)(char *, _QWORD, uint64_t))(v100 + 104))(v79, *MEMORY[0x24BE53320], v103);
    v80 = sub_23F61811C();
    sub_23F36196C(v72, 1, 1, v80);
    sub_23F61AC90();
    sub_23F61B134();
    sub_23F61B17C();
    swift_release();
    v82 = v117;
    v81 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v98, v106, v118);
    sub_23F61A4BC();
    sub_23F481698(v94, &qword_256E70228);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v119, v81);
  }
LABEL_19:
  type metadata accessor for StepResolution();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F45EE68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v27 = a2;
  v30 = a1;
  v31 = a3;
  v3 = sub_23F617D08();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v25[1] = (char *)v25 - v6;
  v7 = sub_23F35D2E8(&qword_256E6FB18);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F617D14();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F618134();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F61ACA8();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23F617000();
  sub_23F36196C((uint64_t)v21, 1, 1, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BE52280], v10);
  sub_23F617D38();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BE53320], v14);
  v23 = sub_23F61811C();
  sub_23F36196C((uint64_t)v9, 1, 1, v23);
  sub_23F61AC90();
  sub_23F61B134();
  sub_23F61B17C();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v26, v30, v29);
  sub_23F61A4BC();
  type metadata accessor for StepResolution();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F45F128@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v16 = a3;
  v17 = a2;
  v4 = sub_23F617D08();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F61A504();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24266DC78](v10);
  v18 = a1;
  v13 = v19;
  sub_23F46E81C((uint64_t)v7, v12);
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_23F4599C0(v17, (uint64_t)v12, v18, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_23F45F26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6[12] = a5;
  v6[13] = v5;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  sub_23F35D2E8(&qword_256E6FB18);
  v6[14] = swift_task_alloc();
  v7 = sub_23F618134();
  v6[15] = v7;
  v6[16] = *(_QWORD *)(v7 - 8);
  v6[17] = swift_task_alloc();
  sub_23F61ACA8();
  v6[18] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E6FB20);
  v6[19] = swift_task_alloc();
  v8 = sub_23F617D08();
  v6[20] = v8;
  v6[21] = *(_QWORD *)(v8 - 8);
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  v9 = sub_23F61B5D8();
  v6[24] = v9;
  v6[25] = *(_QWORD *)(v9 - 8);
  v6[26] = swift_task_alloc();
  v6[27] = swift_task_alloc();
  v10 = sub_23F61B164();
  v6[28] = v10;
  v6[29] = *(_QWORD *)(v10 - 8);
  v6[30] = swift_task_alloc();
  v11 = sub_23F6182A8();
  v6[31] = v11;
  v6[32] = *(_QWORD *)(v11 - 8);
  v6[33] = swift_task_alloc();
  v6[34] = type metadata accessor for ToolResolver.Decision();
  v6[35] = swift_task_alloc();
  v12 = sub_23F619E20();
  v6[36] = v12;
  v6[37] = *(_QWORD *)(v12 - 8);
  v6[38] = swift_task_alloc();
  v6[39] = swift_task_alloc();
  v13 = sub_23F619E98();
  v6[40] = v13;
  v6[41] = *(_QWORD *)(v13 - 8);
  v6[42] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23F45F480()
{
  _QWORD *v0;
  os_log_type_t v1;
  NSObject *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  NSObject *v35;
  os_signpost_type_t v36;
  uint8_t *v37;
  os_signpost_id_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[2];
  uint64_t v52;

  v2 = v0[42];
  v3 = sub_23F61A1F8();
  v0[43] = v3;
  sub_23F619094();
  sub_23F3E0254();
  sub_23F619E8C();
  v4 = sub_23F3F0EEC();
  if (sub_23F482920(v4))
  {
    v5 = (uint8_t *)sub_23F366668();
    v51[0] = sub_23F366668();
    *(_DWORD *)v5 = 136315138;
    v6 = sub_23F383E5C();
    MEMORY[0x24266F8F8](v6, MEMORY[0x24BEE0D00]);
    sub_23F3837B0();
    v7 = sub_23F384AB4();
    sub_23F37AE00(v7, v8, v9);
    v0[7] = v10;
    sub_23F61C790();
    sub_23F362D08();
    sub_23F384A80();
    sub_23F38485C(&dword_23F35A000, v2, v1, "resolve_tool() resolving among: %s", v5);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F384A80();

  v11 = sub_23F384AB4();
  v12(v11);
  v13 = *(_QWORD *)(v3 + 16);
  v0[44] = v13;
  if (!v13)
  {
    sub_23F38458C();
    sub_23F384B58();
    sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
    sub_23F362D64();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23F482628();
    swift_task_dealloc();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F482930();
    __asm { BR              X0 }
  }
  v14 = v0[25];
  sub_23F384A00();
  v15 = (uint64_t *)(v3 + 40);
  v16 = MEMORY[0x24BEE4AF8];
  do
  {
    v17 = v0[13];
    v18 = *v15;
    v51[0] = *(v15 - 1);
    v51[1] = v18;
    sub_23F46ED3C(v51, v17, &v52);
    v19 = v52;
    v20 = *(_QWORD *)(v52 + 16);
    v21 = *(_QWORD *)(v16 + 16);
    if (__OFADD__(v21, v20))
    {
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      sub_23F61CA9C();
      sub_23F482930();
      return;
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(_QWORD *)(v16 + 24) >> 1)
    {
      sub_23F37796C();
      v16 = v22;
    }
    v0[45] = v16;
    if (*(_QWORD *)(v19 + 16))
    {
      v23 = *(_QWORD *)(v16 + 16);
      if ((*(_QWORD *)(v16 + 24) >> 1) - v23 < v20)
        goto LABEL_30;
      v24 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v25 = *(_QWORD *)(v14 + 72);
      v26 = v16 + v24 + v25 * v23;
      if (v19 + v24 < v26 + v25 * v20 && v26 < v19 + v24 + v25 * v20)
        goto LABEL_32;
      swift_arrayInitWithCopy();
      if (v20)
      {
        v28 = *(_QWORD *)(v16 + 16);
        v29 = __OFADD__(v28, v20);
        v30 = v28 + v20;
        if (v29)
          goto LABEL_31;
        *(_QWORD *)(v16 + 16) = v30;
      }
    }
    else if (v20)
    {
      goto LABEL_29;
    }
    v15 += 2;
    sub_23F362984();
    --v13;
  }
  while (v13);
  v31 = v0[13];
  sub_23F3837B0();
  v32 = sub_23F482EC4();
  (*(void (**)(void))(v31 + *(int *)(v32 + 24)))();
  if (qword_256E6F080 != -1)
    swift_once();
  v34 = sub_23F619E44();
  sub_23F361498(v34, (uint64_t)qword_256E80338);
  sub_23F619E38();
  sub_23F619DFC();
  v35 = sub_23F619E38();
  v36 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v37 = (uint8_t *)sub_23F366668();
    *(_WORD *)v37 = 0;
    v38 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v35, v36, v38, "ToolResolver.run", "", v37, 2u);
    sub_23F366530();
  }
  v39 = v0[38];
  v40 = v0[39];
  v42 = v0[36];
  v41 = v0[37];
  v43 = v0[30];
  v49 = v0[29];
  v50 = v0[28];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v39, v40, v42);
  sub_23F619E74();
  swift_allocObject();
  sub_23F3F9CD0();
  v0[46] = sub_23F619E68();
  sub_23F48274C(*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
  sub_23F35EA9C(v0 + 2, v0[5]);
  sub_23F61B128();
  sub_23F618290();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v43, v50);
  v44 = (_QWORD *)swift_task_alloc();
  v0[47] = v44;
  *v44 = v0;
  v44[1] = sub_23F45FA10;
  sub_23F482930();
  sub_23F5E9454(v45, v46, v47, v48);
}

uint64_t sub_23F45FA10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D10();
  sub_23F3B2010(v2);
  *(_QWORD *)(v1 + 384) = v0;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v1 + 256));
  if (v0)
    sub_23F362984();
  sub_23F362D18();
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F45FA8C()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = (uint64_t *)v0[35];
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    v11 = (_QWORD *)v0[43];
    v27 = *v1;
    if (v0[44] == 1 && v11[2])
    {
      v13 = v11[4];
      v12 = v11[5];
      sub_23F384324();
    }
    else
    {
      v13 = 0;
      v12 = 0;
    }
    v30 = v0[21];
    v32 = v0[22];
    v14 = v0[19];
    v33 = v0[20];
    v15 = v0[17];
    v16 = v0[15];
    v17 = v0[16];
    v18 = v0[14];
    v28 = v0[11];
    sub_23F384364();
    v19 = sub_23F617000();
    sub_23F3838D8(v14, v20, v21, v19);
    MEMORY[0x24266B704](v13, v12, v27);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v15, *MEMORY[0x24BE532E0], v16);
    v22 = sub_23F61811C();
    sub_23F3838D8(v18, v23, v24, v22);
    sub_23F61AC90();
    sub_23F61B134();
    sub_23F61B17C();
    sub_23F366748();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v32, v28, v33);
    sub_23F36679C();
    sub_23F61A4BC();
  }
  else
  {
    v2 = v0[27];
    v3 = v0[25];
    v4 = v0[22];
    v5 = v0[21];
    v29 = v0[11];
    v31 = v0[20];
    swift_bridgeObjectRelease();
    sub_23F383C64(v2, (uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    v6 = sub_23F482A1C();
    sub_23F383C64(v6, v7, v8);
    sub_23F61B134();
    sub_23F61B17C();
    sub_23F366748();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v29, v31);
    sub_23F61A39C();
    v9 = sub_23F384664();
    v10(v9);
  }
  sub_23F4824BC();
  swift_storeEnumTagMultiPayload();
  sub_23F46F380();
  sub_23F366748();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v0 + 2));
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  v25 = (uint64_t (*)(void))sub_23F384760();
  return v25();
}

uint64_t sub_23F45FD5C()
{
  uint64_t v0;

  sub_23F46F380();
  sub_23F3668FC();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F482628();
  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F45FE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t *);
  void (*v96)(uint64_t *);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  __int128 v128;
  uint64_t v129;
  uint64_t (*v130)(_QWORD *);
  uint64_t v131;
  uint64_t v132;

  v104 = a3;
  v123 = a2;
  v111 = a1;
  v105 = a4;
  v99 = sub_23F617000();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v97 = (uint64_t)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_23F617D08();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v115 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_23F61B3A4();
  v107 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121);
  v114 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_23F61B3EC();
  v109 = *(_QWORD *)(v119 - 8);
  MEMORY[0x24BDAC7A8](v119);
  v120 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_23F61B92C();
  v117 = *(_QWORD *)(v122 - 8);
  v8 = MEMORY[0x24BDAC7A8](v122);
  v101 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v100 = (uint64_t *)((char *)&v90 - v10);
  v11 = sub_23F35D2E8(&qword_256E6FB08);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F61A1D4();
  MEMORY[0x24BDAC7A8](v14);
  v118 = (uint64_t)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_23F61B2E4();
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v116 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F35D2E8(&qword_256E701C8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F61B164();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23F618B90();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v27, *MEMORY[0x24BE573F8], v24);
  v28 = sub_23F618B84();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  if ((v28 & 1) != 0)
  {
    v132 = MEMORY[0x24BEE4B00];
    sub_23F61B128();
    v29 = sub_23F61B14C();
    v30 = *(void (**)(char *, uint64_t))(v21 + 8);
    v30(v23, v20);
    v31 = *(_QWORD *)(v29 + 16);
    *(_QWORD *)&v128 = 0;
    *((_QWORD *)&v128 + 1) = v31;
    v129 = v29;
    v130 = sub_23F3F3B20;
    v131 = 0;
    sub_23F617BA0();
    v32 = v110;
    sub_23F3F0F58(&v128);
    v34 = v33;
    swift_bridgeObjectRelease();
    sub_23F3F1380(v34, (uint64_t)v19);
    swift_bridgeObjectRelease();
    v35 = sub_23F3F166C((uint64_t)v19);
    v110 = v36;
    v38 = v37;
    v91 = v32;
    sub_23F481698((uint64_t)v19, &qword_256E701C8);
    swift_bridgeObjectRelease();
    if (v38)
    {
      sub_23F61B128();
      v39 = sub_23F61B14C();
      result = ((uint64_t (*)(char *, uint64_t))v30)(v23, v20);
      if ((v35 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v35 < *(_QWORD *)(v39 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v112 + 16))(v116, v39+ ((*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80))+ *(_QWORD *)(v112 + 72) * v35, v113);
        swift_bridgeObjectRelease();
        v41 = v118;
        sub_23F61A1BC();
        v42 = sub_23F61B8A8();
        v93 = v20;
        v92 = v30;
        v43 = v42;
        v44 = swift_allocBox();
        *v45 = v110;
        v45[1] = v38;
        HIDWORD(v90) = *MEMORY[0x24BEB9958];
        v96 = *(void (**)(uint64_t *))(*(_QWORD *)(v43 - 8) + 104);
        v96(v45);
        v46 = v100;
        *v100 = v44;
        HIDWORD(v94) = *MEMORY[0x24BEB9A00];
        v95 = *(void (**)(uint64_t *))(v117 + 104);
        v95(v46);
        LODWORD(v110) = *MEMORY[0x24BE56E60];
        v109 = *(_QWORD *)(v109 + 104);
        ((void (*)(char *))v109)(v120);
        v108 = *MEMORY[0x24BE56E10];
        v107 = *(_QWORD *)(v107 + 104);
        v47 = (uint64_t)v13;
        v48 = v114;
        ((void (*)(void))v107)();
        sub_23F61B134();
        sub_23F61B17C();
        swift_release();
        sub_23F61B3D4();
        v106 = sub_23F61B404();
        sub_23F36196C(v47, 0, 1, v106);
        sub_23F37261C(v47, v41, v49, v50, v51, v52, v53, v54, v90, v91, (uint64_t)v92, v93, v94, (uint64_t)v95, (uint64_t)v96, v97, v98, v99);
        sub_23F61A1BC();
        v55 = swift_allocBox();
        v57 = v56;
        *v56 = sub_23F61A720();
        v57[1] = v58;
        ((void (*)(uint64_t *, _QWORD, uint64_t))v96)(v57, HIDWORD(v90), v43);
        *v46 = v55;
        ((void (*)(uint64_t *, _QWORD, uint64_t))v95)(v46, HIDWORD(v94), v122);
        ((void (*)(char *, _QWORD, uint64_t))v109)(v120, v110, v119);
        ((void (*)(char *, _QWORD, uint64_t))v107)(v48, v108, v121);
        sub_23F61B134();
        sub_23F61B17C();
        swift_release();
        sub_23F61B3D4();
        sub_23F36196C(v47, 0, 1, v106);
        sub_23F37261C(v47, v118, v59, v60, v61, v62, v63, v64, v90, v91, (uint64_t)v92, v93, v94, (uint64_t)v95, (uint64_t)v96, v97, v98, v99);
        sub_23F61B128();
        v65 = sub_23F61B14C();
        v92(v23, v93);
        v124 = v65;
        v66 = v97;
        sub_23F61B260();
        sub_23F35D2E8(&qword_256E70F10);
        sub_23F3B0CC8(&qword_256E70F18, &qword_256E70F10);
        v67 = sub_23F61ACC0();
        (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v66, v99);
        swift_bridgeObjectRelease();
        v68 = *(_QWORD *)(v67 + 16);
        swift_bridgeObjectRelease();
        sub_23F61A1BC();
        v69 = swift_allocBox();
        *v70 = v68 == 0;
        LODWORD(v98) = *MEMORY[0x24BEB9928];
        v99 = v43;
        v96((uint64_t *)v70);
        *v46 = v69;
        ((void (*)(uint64_t *, _QWORD, uint64_t))v95)(v46, HIDWORD(v94), v122);
        ((void (*)(char *, _QWORD, uint64_t))v109)(v120, v110, v119);
        v71 = v114;
        ((void (*)(char *, _QWORD, uint64_t))v107)(v114, v108, v121);
        sub_23F61B134();
        sub_23F61B17C();
        swift_release();
        sub_23F61B3D4();
        sub_23F36196C(v47, 0, 1, v106);
        sub_23F37261C(v47, v118, v72, v73, v74, v75, v76, v77, v90, v91, (uint64_t)v92, v93, v94, (uint64_t)v95, (uint64_t)v96, v97, v98, v99);
        if ((sub_23F61A708() & 1) != 0)
        {
          sub_23F61A1BC();
          v78 = v99;
          v79 = swift_allocBox();
          *v80 = 1;
          ((void (*)(_BYTE *, _QWORD, uint64_t))v96)(v80, v98, v78);
          *v46 = v79;
          ((void (*)(uint64_t *, _QWORD, uint64_t))v95)(v46, HIDWORD(v94), v122);
          ((void (*)(char *, _QWORD, uint64_t))v109)(v120, v110, v119);
          ((void (*)(char *, _QWORD, uint64_t))v107)(v71, v108, v121);
          sub_23F61B134();
          sub_23F61B17C();
          swift_release();
          sub_23F61B3D4();
          sub_23F36196C(v47, 0, 1, v106);
          sub_23F37261C(v47, v118, v81, v82, v83, v84, v85, v86, v90, v91, (uint64_t)v92, v93, v94, (uint64_t)v95, (uint64_t)v96, v97, v98, v99);
        }
        sub_23F61B128();
        sub_23F5FD568((uint64_t)v23, (uint64_t)v46);
      }
      __break(1u);
    }
    else
    {
      sub_23F61A78C();
      sub_23F382DD0();
      swift_allocError();
      v87 = v127;
      v88 = v126;
      *(_OWORD *)v89 = v125;
      *(_OWORD *)(v89 + 16) = v88;
      *(_QWORD *)(v89 + 32) = v87;
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    type metadata accessor for InterpreterError();
    sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

void sub_23F460BBC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v60 = a4;
  v53 = a2;
  v58 = a6;
  v9 = sub_23F617D08();
  v10 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  v51 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v52 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F35D2E8(&qword_256E702D0);
  MEMORY[0x24BDAC7A8](v12);
  v54 = (uint64_t)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F61AC24();
  v55 = *(_QWORD *)(v14 - 8);
  v56 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v48 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F35D2E8(&qword_256E6FB00);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v45 - v20;
  v22 = type metadata accessor for StepResolution();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v45 - v26;
  v49 = a1;
  v57 = a5;
  v28 = a3;
  v29 = v59;
  sub_23F466A88(a1, a5, a3, v60, (uint64_t)v21);
  if (!v29)
  {
    v46 = v25;
    v47 = v19;
    v31 = v55;
    v30 = v56;
    v59 = 0;
    v32 = v57;
    if (sub_23F36195C((uint64_t)v21, 1, v22) == 1)
    {
      sub_23F481698((uint64_t)v21, &qword_256E6FB00);
      v33 = v54;
      sub_23F382EF8(v28, v54, &qword_256E702D0);
      if (sub_23F36195C(v33, 1, v30) == 1)
      {
        sub_23F481698(v33, &qword_256E702D0);
        v35 = v60;
        goto LABEL_5;
      }
      v39 = v31;
      v40 = (uint64_t)v48;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v48, v33, v30);
      v41 = (uint64_t)v47;
      v35 = v60;
      v42 = v59;
      sub_23F4684AC(v49, v60, v40, (uint64_t)v47);
      v43 = v58;
      if (v42)
      {
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v30);
        return;
      }
      v59 = 0;
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v30);
      if (sub_23F36195C(v41, 1, v22) == 1)
      {
        sub_23F481698(v41, &qword_256E6FB00);
LABEL_5:
        MEMORY[0x24BDAC7A8](v34);
        *(&v45 - 2) = v35;
        *(&v45 - 1) = v32;
        v36 = v59;
        sub_23F367C08();
        if (!v36)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v52, v32, v50);
          sub_23F61A114();
          swift_storeEnumTagMultiPayload();
        }
        return;
      }
      v44 = (uint64_t)v46;
      sub_23F36262C(v41, (uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for StepResolution);
      v37 = v44;
      v38 = v43;
    }
    else
    {
      sub_23F36262C((uint64_t)v21, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StepResolution);
      v37 = (uint64_t)v27;
      v38 = v58;
    }
    sub_23F36262C(v37, v38, (uint64_t (*)(_QWORD))type metadata accessor for StepResolution);
  }
}

uint64_t sub_23F460FB0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  char *v81;
  uint64_t v82;
  char *v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  NSObject *v116;
  os_log_type_t v117;
  uint8_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  NSObject *v130;
  os_log_type_t v131;
  uint8_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint8_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  void (*v151)(char *, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  void (*v158)(char *, uint64_t);
  uint64_t v159;
  char *v160;
  char *v161;
  NSObject *v162;
  os_log_type_t v163;
  uint8_t *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(uint64_t, char *);
  char *v172;
  void (*v173)(char *, uint64_t);
  uint64_t v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  uint64_t v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint8_t *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char v221[8];

  v212 = a2;
  v213 = a3;
  v218 = a1;
  v3 = sub_23F61B164();
  v206 = *(_QWORD *)(v3 - 8);
  v207 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v205 = (char *)&v175 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F35D2E8(&qword_256E702E0);
  MEMORY[0x24BDAC7A8](v5);
  v208 = (uint8_t *)&v175 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F619E98();
  v209 = *(_QWORD *)(v7 - 8);
  v210 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v214 = (char *)&v175 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v203 = (char *)&v175 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v180 = (char *)&v175 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v177 = (char *)&v175 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v176 = (char *)&v175 - v16;
  v204 = sub_23F617000();
  MEMORY[0x24BDAC7A8](v204);
  v175 = (char *)&v175 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = sub_23F61A21C();
  v190 = *(_QWORD *)(v191 - 8);
  MEMORY[0x24BDAC7A8](v191);
  v192 = (char *)&v175 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F35D2E8(&qword_256E6FB20);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v215 = (char *)&v175 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v188 = (uint64_t)&v175 - v22;
  v23 = sub_23F35D2E8(&qword_256E70220);
  MEMORY[0x24BDAC7A8](v23);
  v181 = (char *)&v175 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = sub_23F61B308();
  v179 = *(_QWORD *)(v184 - 8);
  v25 = MEMORY[0x24BDAC7A8](v184);
  v183 = (char *)&v175 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v182 = (char *)&v175 - v27;
  v28 = sub_23F35D2E8(&qword_256E74EE0);
  MEMORY[0x24BDAC7A8](v28);
  v185 = (char *)&v175 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = sub_23F617D8C();
  v186 = *(_QWORD *)(v197 - 8);
  MEMORY[0x24BDAC7A8](v197);
  v187 = (char *)&v175 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = sub_23F618134();
  v199 = *(_QWORD *)(v200 - 8);
  MEMORY[0x24BDAC7A8](v200);
  v32 = (char *)&v175 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_23F61ACA8();
  v33 = *(_QWORD *)(v198 - 8);
  MEMORY[0x24BDAC7A8](v198);
  v35 = (char *)&v175 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = sub_23F617DD4();
  v194 = *(_QWORD *)(v196 - 8);
  MEMORY[0x24BDAC7A8](v196);
  v195 = (char *)&v175 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_23F61A504();
  v201 = *(_QWORD *)(v37 - 8);
  v202 = v37;
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v175 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23F35D2E8(&qword_256E6FFA0);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v189 = (uint64_t)&v175 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v175 - v43;
  v45 = sub_23F617D08();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = MEMORY[0x24BDAC7A8](v45);
  v193 = (char *)&v175 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = MEMORY[0x24BDAC7A8](v47);
  v178 = (char *)&v175 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v211 = (char *)&v175 - v52;
  MEMORY[0x24BDAC7A8](v51);
  v54 = (char *)&v175 - v53;
  sub_23F61A3C0();
  v55 = sub_23F36195C((uint64_t)v44, 1, v45);
  v217 = v46;
  if (v55 == 1)
  {
    v56 = v216;
    v203 = (char *)v45;
    sub_23F481698((uint64_t)v44, &qword_256E6FFA0);
    v57 = v205;
    v58 = (char *)v218;
    sub_23F61B128();
    v59 = sub_23F61B14C();
    (*(void (**)(char *, uint64_t))(v206 + 8))(v57, v207);
    v60 = (uint64_t)v208;
    sub_23F3F1328(v59, (uint64_t)v208);
    swift_bridgeObjectRelease();
    v61 = sub_23F61B2E4();
    if (sub_23F36195C(v60, 1, v61) == 1)
    {
      sub_23F481698(v60, &qword_256E702E0);
      v62 = (uint64_t)v215;
      v63 = sub_23F36196C((uint64_t)v215, 1, 1, v204);
    }
    else
    {
      v62 = (uint64_t)v215;
      sub_23F61B1F4();
      v63 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v60, v61);
    }
    v67 = v214;
    v68 = v56;
    MEMORY[0x24BDAC7A8](v63);
    *(&v175 - 2) = v58;
    v69 = sub_23F446E28((void (*)(uint64_t *__return_ptr, char *))sub_23F48143C, (uint64_t)(&v175 - 4), (uint64_t)v221);
    if (v69 && *(_QWORD *)(v69 + 16) == 1 && (sub_23F36FFBC(v69), v70))
    {
      swift_bridgeObjectRelease();
      sub_23F36196C(v188, 1, 1, v204);
      (*(void (**)(char *, _QWORD, uint64_t))(v190 + 104))(v192, *MEMORY[0x24BE551B8], v191);
      v71 = (uint64_t)v203;
      (*(void (**)(char *, uint64_t, char *))(v217 + 16))(v211, v212, v203);
      sub_23F36196C(v189, 1, 1, v71);
      sub_23F61A540();
      sub_23F481698(v62, &qword_256E6FB20);
      type metadata accessor for StepResolution();
    }
    else
    {
      sub_23F619094();
      sub_23F617BA0();
      v98 = sub_23F619E8C();
      v99 = sub_23F61C628();
      if (os_log_type_enabled(v98, v99))
      {
        v100 = (uint8_t *)swift_slowAlloc();
        v101 = swift_slowAlloc();
        v216 = v68;
        v102 = v101;
        v220 = v101;
        *(_DWORD *)v100 = 136315138;
        v208 = v100 + 4;
        sub_23F617BA0();
        v103 = sub_23F61C544();
        v105 = v104;
        swift_bridgeObjectRelease();
        sub_23F37AE00(v103, v105, &v220);
        v219 = v106;
        sub_23F61C790();
        swift_bridgeObjectRelease_n();
        v62 = (uint64_t)v215;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23F35A000, v98, v99, "Unable to perform undo due to either none or more than one app in focus: %s", v100, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x242670B70](v102, -1, -1);
        MEMORY[0x242670B70](v100, -1, -1);

        (*(void (**)(char *, uint64_t))(v209 + 8))(v214, v210);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v209 + 8))(v67, v210);
      }
      v107 = v213;
      v108 = v203;
      sub_23F61B134();
      v109 = (uint64_t)v211;
      sub_23F61B17C();
      swift_release();
      sub_23F46F75C(v109, v212, v107);
      (*(void (**)(uint64_t, char *))(v217 + 8))(v109, v108);
      sub_23F481698(v62, &qword_256E6FB20);
      type metadata accessor for StepResolution();
    }
    return swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v54, v44, v45);
  v215 = v54;
  v64 = v216;
  sub_23F46E81C((uint64_t)v54, v39);
  if (v64)
  {
    v65 = (uint64_t)v215;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v217 + 8))(v65, v45);
  }
  v72 = v39;
  sub_23F61A4F8();
  sub_23F61AC78();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v198);
  v73 = v199;
  v74 = v200;
  if ((*(unsigned int (**)(char *, uint64_t))(v199 + 88))(v32, v200) != *MEMORY[0x24BE53328])
  {
    (*(void (**)(char *, uint64_t))(v73 + 8))(v32, v74);
    v65 = (uint64_t)v215;
    goto LABEL_17;
  }
  v214 = v39;
  (*(void (**)(char *, uint64_t))(v73 + 96))(v32, v74);
  v75 = v194;
  v76 = v195;
  v77 = v196;
  (*(void (**)(char *, char *, uint64_t))(v194 + 32))(v195, v32, v196);
  v78 = (uint64_t)v185;
  sub_23F617DBC();
  v79 = v197;
  v80 = sub_23F36195C(v78, 1, v197);
  v65 = (uint64_t)v215;
  if (v80 == 1)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
    sub_23F481698(v78, &qword_256E74EE0);
    v72 = v214;
LABEL_17:
    v216 = 0;
    v81 = v203;
    sub_23F619094();
    v82 = v217;
    v83 = v193;
    (*(void (**)(char *, uint64_t, uint64_t))(v217 + 16))(v193, v65, v45);
    v84 = sub_23F619E8C();
    v85 = sub_23F61C628();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = swift_slowAlloc();
      v214 = v72;
      v87 = v45;
      v88 = (uint8_t *)v86;
      v89 = swift_slowAlloc();
      v220 = v89;
      *(_DWORD *)v88 = 136315138;
      sub_23F3B121C(&qword_256E6FB60, (void (*)(uint64_t))MEMORY[0x24BE52140]);
      v90 = sub_23F61CC1C();
      sub_23F37AE00(v90, v91, &v220);
      v219 = v92;
      v65 = (uint64_t)v215;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      v93 = *(void (**)(char *, uint64_t))(v217 + 8);
      v93(v83, v87);
      _os_log_impl(&dword_23F35A000, v84, v85, "Unable to perform undo due to missing undo context for result on statement: %s", v88, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v89, -1, -1);
      v94 = v88;
      v45 = v87;
      v72 = v214;
      MEMORY[0x242670B70](v94, -1, -1);

      (*(void (**)(char *, uint64_t))(v209 + 8))(v203, v210);
    }
    else
    {
      v93 = *(void (**)(char *, uint64_t))(v82 + 8);
      v93(v83, v45);

      (*(void (**)(char *, uint64_t))(v209 + 8))(v81, v210);
    }
    v95 = v213;
    v96 = v201;
    sub_23F61B134();
    v97 = (uint64_t)v211;
    sub_23F61B17C();
    swift_release();
    sub_23F46F75C(v97, v212, v95);
    v93((char *)v97, v45);
LABEL_21:
    (*(void (**)(char *, uint64_t))(v96 + 8))(v72, v202);
    v93((char *)v65, v45);
    type metadata accessor for StepResolution();
    return swift_storeEnumTagMultiPayload();
  }
  v203 = (char *)v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v186 + 32))(v187, v78, v79);
  v110 = sub_23F61A4E0();
  if (!v111)
  {
    v216 = 0;
    v127 = v180;
    sub_23F619094();
    v128 = v217;
    v129 = v178;
    v45 = (uint64_t)v203;
    (*(void (**)(char *, uint64_t, char *))(v217 + 16))(v178, v65, v203);
    v130 = sub_23F619E8C();
    v131 = sub_23F61C628();
    if (os_log_type_enabled(v130, v131))
    {
      v132 = (uint8_t *)swift_slowAlloc();
      v133 = swift_slowAlloc();
      v220 = v133;
      *(_DWORD *)v132 = 136315138;
      sub_23F3B121C(&qword_256E6FB60, (void (*)(uint64_t))MEMORY[0x24BE52140]);
      v134 = sub_23F61CC1C();
      sub_23F37AE00(v134, v135, &v220);
      v219 = v136;
      v65 = (uint64_t)v215;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      v93 = *(void (**)(char *, uint64_t))(v128 + 8);
      v72 = v214;
      v137 = v129;
      v138 = v197;
      v93(v137, (uint64_t)v203);
      _os_log_impl(&dword_23F35A000, v130, v131, "Unable to undo result since there's no associated tool: %s", v132, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v133, -1, -1);
      v139 = v132;
      v45 = (uint64_t)v203;
      MEMORY[0x242670B70](v139, -1, -1);

      (*(void (**)(char *, uint64_t))(v209 + 8))(v180, v210);
      v140 = v213;
      v96 = v201;
    }
    else
    {
      v93 = *(void (**)(char *, uint64_t))(v128 + 8);
      v93(v129, v45);

      (*(void (**)(char *, uint64_t))(v209 + 8))(v127, v210);
      v140 = v213;
      v72 = v214;
      v96 = v201;
      v138 = v197;
    }
    sub_23F61B134();
    v153 = (uint64_t)v211;
    sub_23F61B17C();
    swift_release();
    sub_23F46F75C(v153, v212, v140);
    v93((char *)v153, v45);
    (*(void (**)(char *, uint64_t))(v186 + 8))(v187, v138);
    (*(void (**)(char *, uint64_t))(v194 + 8))(v195, v196);
    goto LABEL_21;
  }
  v112 = v111;
  v113 = (uint64_t)v181;
  v208 = (uint8_t *)v110;
  sub_23F61B314();
  v114 = v184;
  if (sub_23F36195C(v113, 1, v184) == 1)
  {
    sub_23F481698(v113, &qword_256E70220);
    v115 = v177;
    sub_23F619094();
    swift_bridgeObjectRetain_n();
    v116 = sub_23F619E8C();
    v117 = sub_23F61C628();
    if (os_log_type_enabled(v116, v117))
    {
      v118 = (uint8_t *)swift_slowAlloc();
      v119 = swift_slowAlloc();
      v220 = v119;
      *(_DWORD *)v118 = 136315138;
      sub_23F617BA0();
      v120 = (uint64_t)v208;
      sub_23F37AE00((uint64_t)v208, v112, &v220);
      v219 = v121;
      v122 = v214;
      v65 = (uint64_t)v215;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23F35A000, v116, v117, "tool not found for undo: %s", v118, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v119, -1, -1);
      MEMORY[0x242670B70](v118, -1, -1);

      v123 = v115;
      v124 = v197;
      (*(void (**)(char *, uint64_t))(v209 + 8))(v123, v210);
      v126 = v201;
      v125 = v202;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v209 + 8))(v115, v210);
      v126 = v201;
      v125 = v202;
      v124 = v197;
      v120 = (uint64_t)v208;
      v122 = v214;
    }
    type metadata accessor for InterpreterError();
    sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
    swift_allocError();
    *v154 = v120;
    v154[1] = v112;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v186 + 8))(v187, v124);
    (*(void (**)(char *, uint64_t))(v194 + 8))(v195, v196);
    (*(void (**)(char *, uint64_t))(v126 + 8))(v122, v125);
    v45 = (uint64_t)v203;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v217 + 8))(v65, v45);
  }
  v141 = v113;
  v142 = v179;
  v143 = v182;
  (*(void (**)(char *, uint64_t, uint64_t))(v179 + 32))(v182, v141, v114);
  v144 = v183;
  (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v183, v143, v114);
  v145 = (*(uint64_t (**)(char *, uint64_t))(v142 + 88))(v144, v114);
  if (v145 == *MEMORY[0x24BE56D38])
  {
    swift_bridgeObjectRelease();
    v218 = sub_23F617D74();
    v216 = v146;
    v147 = v188;
    sub_23F617D80();
    sub_23F36196C(v147, 0, 1, v204);
    (*(void (**)(char *, _QWORD, uint64_t))(v190 + 104))(v192, *MEMORY[0x24BE551B8], v191);
    v148 = (uint64_t)v203;
    (*(void (**)(char *, uint64_t, char *))(v217 + 16))(v211, v212, v203);
    v149 = v189;
    v150 = v214;
    sub_23F61A498();
    sub_23F36196C(v149, 0, 1, v148);
    sub_23F61A540();
    v151 = *(void (**)(char *, uint64_t))(v142 + 8);
    v152 = v184;
    v151(v182, v184);
    (*(void (**)(char *, uint64_t))(v186 + 8))(v187, v197);
    (*(void (**)(char *, uint64_t))(v194 + 8))(v195, v196);
    (*(void (**)(char *, uint64_t))(v201 + 8))(v150, v202);
    (*(void (**)(uint64_t, uint64_t))(v217 + 8))(v65, v148);
    type metadata accessor for StepResolution();
    swift_storeEnumTagMultiPayload();
    return ((uint64_t (*)(char *, uint64_t))v151)(v183, v152);
  }
  else if (v145 == *MEMORY[0x24BE56D28])
  {
    swift_bridgeObjectRelease();
    sub_23F617D80();
    (*(void (**)(char *, _QWORD, uint64_t))(v190 + 104))(v192, *MEMORY[0x24BE551B8], v191);
    v155 = (uint64_t)v203;
    (*(void (**)(char *, uint64_t, char *))(v217 + 16))(v211, v212, v203);
    v156 = v189;
    v157 = v214;
    sub_23F61A498();
    sub_23F36196C(v156, 0, 1, v155);
    sub_23F61AA2C();
    v158 = *(void (**)(char *, uint64_t))(v179 + 8);
    v159 = v184;
    v158(v182, v184);
    (*(void (**)(char *, uint64_t))(v186 + 8))(v187, v197);
    (*(void (**)(char *, uint64_t))(v194 + 8))(v195, v196);
    (*(void (**)(char *, uint64_t))(v201 + 8))(v157, v202);
    (*(void (**)(uint64_t, uint64_t))(v217 + 8))(v65, v155);
    type metadata accessor for StepResolution();
    swift_storeEnumTagMultiPayload();
    return ((uint64_t (*)(char *, uint64_t))v158)(v183, v159);
  }
  else
  {
    v160 = v214;
    if (v145 == *MEMORY[0x24BE56D30])
    {
      v161 = v176;
      sub_23F619094();
      sub_23F617BA0();
      v162 = sub_23F619E8C();
      v163 = sub_23F61C628();
      if (os_log_type_enabled(v162, v163))
      {
        v164 = (uint8_t *)swift_slowAlloc();
        v165 = swift_slowAlloc();
        v216 = 0;
        v166 = v165;
        v220 = v165;
        *(_DWORD *)v164 = 136315138;
        sub_23F617BA0();
        sub_23F37AE00((uint64_t)v208, v112, &v220);
        v219 = v167;
        v65 = (uint64_t)v215;
        sub_23F61C790();
        v168 = v160;
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23F35A000, v162, v163, "Unable to undo result since it doesn't map to a concrete tool: %s", v164, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x242670B70](v166, -1, -1);
        MEMORY[0x242670B70](v164, -1, -1);

        (*(void (**)(char *, uint64_t))(v209 + 8))(v161, v210);
        v169 = v202;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v209 + 8))(v161, v210);
        v169 = v202;
        v168 = v160;
      }
      sub_23F61B134();
      v170 = (uint64_t)v211;
      sub_23F61B17C();
      swift_release();
      sub_23F46F75C(v170, v212, v213);
      v171 = *(void (**)(uint64_t, char *))(v217 + 8);
      v172 = v203;
      v171(v170, v203);
      v173 = *(void (**)(char *, uint64_t))(v179 + 8);
      v174 = v184;
      v173(v182, v184);
      (*(void (**)(char *, uint64_t))(v186 + 8))(v187, v197);
      (*(void (**)(char *, uint64_t))(v194 + 8))(v195, v196);
      (*(void (**)(char *, uint64_t))(v201 + 8))(v168, v169);
      v171(v65, v172);
      type metadata accessor for StepResolution();
      swift_storeEnumTagMultiPayload();
      return ((uint64_t (*)(char *, uint64_t))v173)(v183, v174);
    }
    else
    {
      result = sub_23F61CC58();
      __break(1u);
    }
  }
  return result;
}

void sub_23F462848(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, _QWORD);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  char *v76;
  char *v77;
  void (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, _QWORD);
  char *v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  char *v97;
  char *v98;
  void (*v99)(char *, char *, uint64_t);
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  void (*v109)(uint64_t, uint64_t);
  _QWORD v110[2];
  char *v111;
  int v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t, uint64_t);
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  void (*v128)(char *);
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  char *v146;
  char v147[8];
  uint64_t v148;

  v136 = a2;
  v148 = a1;
  v111 = a4;
  v5 = sub_23F61AE34();
  v134 = *(_QWORD *)(v5 - 8);
  v135 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v133 = (char *)v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F6184F4();
  v131 = *(_QWORD *)(v7 - 8);
  v132 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v121 = (char *)v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(&qword_256E703C0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v120 = (char *)v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v138 = (char *)v110 - v12;
  v13 = sub_23F61AE70();
  v140 = *(_QWORD *)(v13 - 8);
  v141 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v139 = (char *)v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_23F617D08();
  v144 = *(_QWORD *)(v142 - 8);
  MEMORY[0x24BDAC7A8](v142);
  v16 = (char *)v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_23F61B164();
  v17 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130);
  v19 = (char *)v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F35D2E8(&qword_256E70228);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_23F61AA14();
  v137 = *(_QWORD *)(v143 - 8);
  v23 = MEMORY[0x24BDAC7A8](v143);
  v119 = (char *)v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v118 = (uint64_t)v110 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v117 = (char *)v110 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v116 = (char *)v110 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)v110 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)v110 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (char *)v110 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)v110 - v40;
  v122 = a3;
  v42 = sub_23F61B128();
  MEMORY[0x24266E38C](v42);
  sub_23F465D5C();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v16, v142);
  v43 = *(void (**)(char *, uint64_t))(v17 + 8);
  v44 = v41;
  v43(v19, v130);
  v45 = v145;
  sub_23F374650(0xD00000000000008ALL, 0x800000023F6366E0, 662, 0xD000000000000035, 0x800000023F6369B0);
  sub_23F481698((uint64_t)v22, &qword_256E70228);
  if (!v45)
  {
    v113 = v39;
    v114 = v36;
    v115 = v33;
    v46 = sub_23F61AE88();
    v47 = *(_QWORD *)(v46 + 16);
    if (v47)
    {
      v148 = 0;
      v48 = (*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80);
      v110[1] = v46;
      v49 = v46 + v48;
      LODWORD(v130) = *MEMORY[0x24BE54A38];
      v129 = *MEMORY[0x24BE56290];
      v112 = *MEMORY[0x24BE56298];
      v126 = *(_QWORD *)(v140 + 72);
      v128 = *(void (**)(char *))(v140 + 16);
      v127 = xmmword_23F61E7E0;
      v51 = v138;
      v50 = v139;
      v146 = v44;
      while (1)
      {
        v144 = v49;
        v128(v50);
        sub_23F61AE40();
        sub_23F61AE64();
        v52 = v131;
        v53 = v51;
        v54 = (uint64_t)v51;
        v55 = v132;
        (*(void (**)(char *, _QWORD, uint64_t))(v131 + 104))(v53, v130, v132);
        sub_23F36196C(v54, 0, 1, v55);
        v56 = (void (*)(char *, _QWORD))sub_23F61A9E4();
        if (sub_23F36195C(v54, 1, v55) == 1)
        {
          sub_23F481698(v54, &qword_256E703C0);
          v57 = (uint64_t)v120;
          sub_23F37DD94();
          swift_bridgeObjectRelease();
          sub_23F481698(v57, &qword_256E703C0);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v121, v54, v55);
          sub_23F37E2D0();
          swift_bridgeObjectRelease();
        }
        v58 = v136;
        v56(v147, 0);
        sub_23F35D2E8(&qword_256E704A0);
        v59 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E70498) - 8) + 80);
        v60 = (v59 + 32) & ~v59;
        v61 = swift_allocObject();
        *(_OWORD *)(v61 + 16) = v127;
        v62 = (uint64_t *)(v61 + v60);
        *v62 = sub_23F61AE40();
        v62[1] = v63;
        sub_23F61AE64();
        v64 = sub_23F61BFEC();
        sub_23F617BA0();
        v65 = v148;
        v66 = sub_23F4529A4(MEMORY[0x24BEE4B08], v58, v64);
        swift_bridgeObjectRelease();
        v67 = v133;
        sub_23F61AE58();
        v68 = (*(uint64_t (**)(char *, uint64_t))(v134 + 88))(v67, v135);
        v145 = v47;
        if (v68 == v129)
        {
          v69 = v137;
          v70 = (uint64_t)v119;
          v71 = v143;
          (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v119, v146, v143);
          v72 = sub_23F61AE40();
          v73 = v118;
          sub_23F46A3E4(v70, v72, v74, v66, v118);
          v51 = v138;
          v148 = v65;
          if (v65)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v109 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
            v109(v70, v71);
            (*(void (**)(char *, uint64_t))(v140 + 8))(v139, v141);
            swift_bridgeObjectRelease();
            v109((uint64_t)v146, v71);
            return;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v75 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
          v75(v70, v71);
          v76 = v139;
          (*(void (**)(char *, uint64_t))(v140 + 8))(v139, v141);
          v77 = v146;
          v75((uint64_t)v146, v71);
          v78 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 32);
          v78(v77, v73, v71);
          v44 = v77;
          v50 = v76;
        }
        else
        {
          v79 = v143;
          v80 = v137;
          if (v68 != v112)
          {
            sub_23F61CC58();
            __break(1u);
            return;
          }
          v148 = v65;
          v81 = *(void (**)(char *, char *, uint64_t))(v137 + 16);
          v82 = v114;
          v81(v114, v146, v143);
          v83 = sub_23F61AE40();
          v85 = v84;
          v86 = v115;
          v124 = v81;
          v81(v115, v82, v79);
          v87 = *(_QWORD *)(sub_23F61A9CC() + 16);
          swift_bridgeObjectRelease();
          if (v87)
          {
            v88 = sub_23F61A9CC();
            MEMORY[0x24BDAC7A8](v88);
            v89 = v125;
            v110[-4] = v66;
            v110[-3] = v89;
            v110[-2] = v83;
            v110[-1] = v85;
            v90 = v148;
            sub_23F51C95C(MEMORY[0x24BEE4B08], (void (*)(uint64_t *, uint64_t *))sub_23F481458, (uint64_t)&v110[-6], v88);
            v148 = v90;
            swift_bridgeObjectRelease();
            sub_23F61A9D8();
          }
          else
          {
            sub_23F617BA0();
            v91 = (void (*)(char *, _QWORD))sub_23F61A9C0();
            sub_23F3601B8(v66);
            v91(v147, 0);
          }
          v92 = v113;
          v93 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
          v94 = v143;
          v93(v113, v86, v143);
          v123 = (void (*)(char *, uint64_t, uint64_t))v93;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v95 = *(void (**)(char *, uint64_t))(v80 + 8);
          v95(v82, v94);
          v96 = v92;
          v97 = v146;
          v95(v146, v94);
          v93(v97, v96, v94);
          v98 = v117;
          v99 = v124;
          v124(v117, v97, v94);
          v100 = v139;
          v101 = (char *)sub_23F61AE40();
          v103 = v102;
          v104 = v116;
          v99(v116, v98, v94);
          v105 = v97;
          v50 = v100;
          v106 = sub_23F61A9A8();
          sub_23F617BA0();
          v107 = v148;
          sub_23F47FB6C(v106, v101, v103);
          v148 = v107;
          swift_bridgeObjectRelease();
          sub_23F61A9B4();
          v78 = v123;
          swift_bridgeObjectRelease();
          v108 = v98;
          v44 = v105;
          v95(v108, v94);
          (*(void (**)(char *, uint64_t))(v140 + 8))(v50, v141);
          v95(v105, v94);
          v78(v105, (uint64_t)v104, v94);
          v51 = v138;
        }
        v49 = v144 + v126;
        v47 = v145 - 1;
        if (v145 == 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
      }
    }
    swift_bridgeObjectRelease();
    v78 = *(void (**)(char *, uint64_t, uint64_t))(v137 + 32);
LABEL_18:
    v78(v111, (uint64_t)v44, v143);
    type metadata accessor for StepResolution();
    swift_storeEnumTagMultiPayload();
  }
}

void sub_23F46333C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  int v43;
  int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;

  v125 = a2;
  v128 = (char *)a1;
  v100 = a3;
  v105 = sub_23F618134();
  v104 = *(_QWORD *)(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v103 = (uint64_t)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_23F61ACA8();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v97 = (uint64_t)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UserPromptResolver(0);
  MEMORY[0x24BDAC7A8](v5);
  v111 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_23F61A504();
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v127 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UserPromptResolver.Resolution(0);
  MEMORY[0x24BDAC7A8](v8);
  v113 = (uint64_t)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F617D08();
  v129 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v110 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v126 = (char *)&v96 - v13;
  v14 = sub_23F619E98();
  v121 = *(_QWORD *)(v14 - 8);
  v122 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v120 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v109 = (char *)&v96 - v17;
  v108 = sub_23F61A6FC();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v106 = (uint64_t)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F61A2C4();
  v118 = *(_QWORD *)(v19 - 8);
  v119 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v117 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F61A75C();
  v115 = *(_QWORD *)(v21 - 8);
  v116 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v114 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F619FAC();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23F35D2E8(&qword_256E74EF8);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v124 = (char *)&v96 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (uint64_t *)((char *)&v96 - v31);
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v96 - v33;
  v35 = sub_23F35D2E8(&qword_256E6FFA0);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v123 = (uint64_t)&v96 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v96 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v96 - v41;
  sub_23F36196C((uint64_t)&v96 - v41, 1, 1, v10);
  sub_23F36196C((uint64_t)v34, 1, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v26, v128, v23);
  v43 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v26, v23);
  v44 = *MEMORY[0x24BE54CE8];
  v130 = v8;
  if (v43 == v44)
  {
    (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
    v45 = v117;
    v46 = v118;
    v47 = v119;
    v48 = (*(uint64_t (**)(char *, char *, uint64_t))(v118 + 32))(v117, v26, v119);
    MEMORY[0x24266D7B0](v48);
    sub_23F481698((uint64_t)v42, &qword_256E6FFA0);
    sub_23F36196C((uint64_t)v40, 0, 1, v10);
    sub_23F383004((uint64_t)v40, (uint64_t)v42, &qword_256E6FFA0);
    v49 = sub_23F61A2B8();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
    sub_23F481698((uint64_t)v34, &qword_256E74EF8);
    *v32 = v49;
    v50 = v130;
    swift_storeEnumTagMultiPayload();
    sub_23F36196C((uint64_t)v32, 0, 1, v50);
    sub_23F383004((uint64_t)v32, (uint64_t)v34, &qword_256E74EF8);
    v51 = (uint64_t)v34;
    v52 = v10;
    goto LABEL_8;
  }
  v128 = v42;
  if (v43 == *MEMORY[0x24BE54D30])
  {
    (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
    v53 = v114;
    v54 = v115;
    v55 = v116;
    v56 = (*(uint64_t (**)(char *, char *, uint64_t))(v115 + 32))(v114, v26, v116);
    MEMORY[0x24266DC54](v56);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);
    v51 = (uint64_t)v34;
    sub_23F481698((uint64_t)v34, &qword_256E74EF8);
    v42 = v128;
    sub_23F481698((uint64_t)v128, &qword_256E6FFA0);
    v52 = v10;
    sub_23F36196C((uint64_t)v40, 0, 1, v10);
    sub_23F383004((uint64_t)v40, (uint64_t)v42, &qword_256E6FFA0);
    v57 = v130;
LABEL_7:
    swift_storeEnumTagMultiPayload();
    sub_23F36196C((uint64_t)v34, 0, 1, v57);
LABEL_8:
    v62 = v123;
    sub_23F382EF8((uint64_t)v42, v123, &qword_256E6FFA0);
    v63 = sub_23F36195C(v62, 1, v52);
    v64 = (uint64_t)v126;
    v65 = v127;
    v67 = (uint64_t)v124;
    v66 = v125;
    v68 = v129;
    if (v63 == 1)
    {
      v69 = &qword_256E6FFA0;
      v70 = v62;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v129 + 32))(v126, v62, v52);
      sub_23F382EF8(v51, v67, &qword_256E74EF8);
      if (sub_23F36195C(v67, 1, v130) != 1)
      {
        v77 = v113;
        sub_23F36262C(v67, v113, type metadata accessor for UserPromptResolver.Resolution);
        v78 = v112;
        sub_23F46E81C(v64, v65);
        if (v78)
        {
          sub_23F3663AC(v77, type metadata accessor for UserPromptResolver.Resolution);
          (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v64, v52);
        }
        else
        {
          v84 = sub_23F61B140();
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v111, v66, v84);
          v85 = (uint64_t)v110;
          sub_23F61A480();
          v130 = sub_23F61A4E0();
          v128 = (char *)v86;
          v87 = v97;
          sub_23F61A4F8();
          v88 = v103;
          sub_23F61AC78();
          (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v87, v99);
          v89 = v88;
          v90 = (uint64_t)v111;
          sub_23F6036F4(v85, v130, (uint64_t)v128, v77, v89, v91, v92, v93, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107);
          v94 = v77;
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v89, v105);
          v95 = *(void (**)(char *, uint64_t))(v129 + 8);
          v95(v110, v52);
          sub_23F3663AC(v90, type metadata accessor for UserPromptResolver);
          (*(void (**)(char *, uint64_t))(v101 + 8))(v127, v102);
          sub_23F3663AC(v94, type metadata accessor for UserPromptResolver.Resolution);
          v95(v126, v52);
        }
LABEL_15:
        sub_23F481698(v51, &qword_256E74EF8);
        sub_23F481698((uint64_t)v42, &qword_256E6FFA0);
        return;
      }
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v64, v52);
      v69 = &qword_256E74EF8;
      v70 = v67;
    }
    sub_23F481698(v70, v69);
    v72 = v121;
    v71 = v122;
    v73 = v120;
    sub_23F619094();
    v74 = sub_23F619E8C();
    v75 = sub_23F61C628();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v76 = 0;
      _os_log_impl(&dword_23F35A000, v74, v75, "Expected statement ID from confirm, pick or reject expression", v76, 2u);
      MEMORY[0x242670B70](v76, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v71);
    type metadata accessor for InterpreterError();
    sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_15;
  }
  if (v43 == *MEMORY[0x24BE54D20])
  {
    (*(void (**)(char *, uint64_t))(v24 + 96))(v26, v23);
    v58 = v107;
    v59 = v106;
    v60 = v108;
    v61 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v107 + 32))(v106, v26, v108);
    MEMORY[0x24266DC00](v61);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v60);
    v51 = (uint64_t)v34;
    sub_23F481698((uint64_t)v34, &qword_256E74EF8);
    v42 = v128;
    sub_23F481698((uint64_t)v128, &qword_256E6FFA0);
    v52 = v10;
    sub_23F36196C((uint64_t)v40, 0, 1, v10);
    sub_23F383004((uint64_t)v40, (uint64_t)v42, &qword_256E6FFA0);
    v57 = v130;
    goto LABEL_7;
  }
  v79 = v24;
  v80 = v109;
  sub_23F619094();
  v81 = sub_23F619E8C();
  v82 = sub_23F61C628();
  if (os_log_type_enabled(v81, v82))
  {
    v83 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v83 = 0;
    _os_log_impl(&dword_23F35A000, v81, v82, "Expected expression to be of type confirm, pick or reject", v83, 2u);
    MEMORY[0x242670B70](v83, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v121 + 8))(v80, v122);
  type metadata accessor for InterpreterError();
  sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  sub_23F481698((uint64_t)v34, &qword_256E74EF8);
  sub_23F481698((uint64_t)v128, &qword_256E6FFA0);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v26, v23);
}

void sub_23F463EE8(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void);
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(void);
  char *v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  void (*v61)(char *, char *, uint64_t);
  _QWORD *v62;
  unint64_t v63;
  char v64;
  unint64_t v65;
  char v66;
  char v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  _QWORD v83[2];
  char *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  int64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  int64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  _QWORD v108[6];
  _QWORD *v109;

  v101 = a3;
  v103 = (char *)a2;
  v86 = a4;
  v94 = sub_23F35D2E8(&qword_256E74E40);
  v5 = MEMORY[0x24BDAC7A8](v94);
  v7 = (char *)v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v107 = (char *)v83 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v93 = (uint64_t)v83 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v92 = (char *)v83 - v12;
  v13 = sub_23F61B92C();
  v104 = *(_QWORD *)(v13 - 8);
  v105 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v83 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)v83 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (_QWORD *)((char *)v83 - v23);
  v25 = type metadata accessor for ExpressionEvaluator(0);
  MEMORY[0x24BDAC7A8](v25);
  v27 = *a1;
  v28 = (char *)v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61B128();
  *(_QWORD *)&v28[*(int *)(v25 + 20)] = v27;
  sub_23F617BA0();
  v29 = v106;
  sub_23F428FE8((uint64_t)v103, v24);
  if (v29)
  {
    sub_23F3663AC((uint64_t)v28, type metadata accessor for ExpressionEvaluator);
    *v101 = v29;
  }
  else
  {
    v89 = v22;
    v83[1] = 0;
    v103 = v19;
    v84 = v28;
    v85 = v24;
    v91 = v16;
    v30 = sub_23F617D08();
    sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
    v106 = v30;
    v31 = v105;
    v32 = sub_23F61BFEC();
    sub_23F38231C(v27, v108);
    v90 = v108[0];
    v87 = v108[1];
    v95 = v108[3];
    v33 = v108[4];
    v88 = (unint64_t)(v108[2] + 64) >> 6;
    sub_23F617BA0();
    v34 = (uint64_t)v92;
    v35 = v93;
    v36 = v94;
    v102 = v7;
    while (1)
    {
      v37 = v91;
      v101 = (_QWORD *)v32;
      if (v33)
      {
        v38 = v36;
        v100 = (v33 - 1) & v33;
        v39 = __clz(__rbit64(v33)) | (v95 << 6);
      }
      else
      {
        v40 = v95 + 1;
        if (__OFADD__(v95, 1))
          goto LABEL_36;
        if (v40 >= v88)
          goto LABEL_33;
        v41 = *(_QWORD *)(v87 + 8 * v40);
        v42 = v95 + 1;
        if (!v41)
        {
          v42 = v95 + 2;
          if (v95 + 2 >= v88)
            goto LABEL_33;
          v41 = *(_QWORD *)(v87 + 8 * v42);
          if (!v41)
          {
            v42 = v95 + 3;
            if (v95 + 3 >= v88)
              goto LABEL_33;
            v41 = *(_QWORD *)(v87 + 8 * v42);
            if (!v41)
            {
              v42 = v95 + 4;
              if (v95 + 4 >= v88)
                goto LABEL_33;
              v41 = *(_QWORD *)(v87 + 8 * v42);
              if (!v41)
              {
                v42 = v95 + 5;
                if (v95 + 5 >= v88)
                  goto LABEL_33;
                v41 = *(_QWORD *)(v87 + 8 * v42);
                if (!v41)
                {
                  v42 = v95 + 6;
                  if (v95 + 6 >= v88)
                    goto LABEL_33;
                  v41 = *(_QWORD *)(v87 + 8 * v42);
                  if (!v41)
                  {
                    v43 = v95 + 7;
                    while (v43 < v88)
                    {
                      v41 = *(_QWORD *)(v87 + 8 * v43++);
                      if (v41)
                      {
                        v42 = v43 - 1;
                        goto LABEL_23;
                      }
                    }
LABEL_33:
                    swift_release();
                    v81 = v104;
                    v82 = v85;
                    (*(void (**)(char *, uint64_t *, uint64_t))(v104 + 16))(v37, v85, v31);
                    sub_23F61A3E4();
                    (*(void (**)(uint64_t *, uint64_t))(v81 + 8))(v82, v31);
                    sub_23F3663AC((uint64_t)v84, type metadata accessor for ExpressionEvaluator);
                    return;
                  }
                }
              }
            }
          }
        }
LABEL_23:
        v38 = v36;
        v100 = (v41 - 1) & v41;
        v39 = __clz(__rbit64(v41)) + (v42 << 6);
        v95 = v42;
      }
      v44 = v90;
      v45 = *(_QWORD *)(v90 + 48);
      v46 = *(_QWORD *)(v106 - 8);
      v96 = *(_QWORD *)(v46 + 72);
      v99 = v46;
      v47 = *(void (**)(void))(v46 + 16);
      ((void (*)(uint64_t, unint64_t, uint64_t))v47)(v34, v45 + v96 * v39, v106);
      v48 = *(_QWORD *)(v44 + 56);
      v49 = sub_23F61B404();
      v50 = *(_QWORD **)(v49 - 8);
      v51 = v48 + v50[9] * v39;
      v52 = (void (*)(uint64_t, uint64_t, uint64_t))v50[2];
      v52(v34 + *(int *)(v38 + 48), v51, v49);
      sub_23F383004(v34, v35, &qword_256E74E40);
      v53 = *(int *)(v38 + 48);
      v54 = &v107[v53];
      v55 = v35 + v53;
      v47();
      v98 = v54;
      v56 = v54;
      v57 = v47;
      v52((uint64_t)v56, v55, v49);
      v58 = &v102[*(int *)(v38 + 48)];
      v47();
      v52((uint64_t)v58, v55, v49);
      v59 = v89;
      sub_23F61B3E0();
      v60 = (void (*)(char *, uint64_t))v50[1];
      v97 = v49;
      v60(v58, v49);
      v61 = *(void (**)(char *, char *, uint64_t))(v104 + 32);
      v61(v103, v59, v105);
      v62 = v101;
      swift_isUniquelyReferenced_nonNull_native();
      v109 = v62;
      sub_23F3756E8();
      if (__OFADD__(v62[2], (v64 & 1) == 0))
        break;
      v65 = v63;
      v66 = v64;
      sub_23F35D2E8(&qword_256E74ED8);
      v67 = sub_23F61CA18();
      v68 = v107;
      v69 = v104;
      if ((v67 & 1) != 0)
      {
        sub_23F3756E8();
        if ((v66 & 1) != (v71 & 1))
          goto LABEL_37;
        v65 = v70;
      }
      v72 = v109;
      if ((v66 & 1) != 0)
      {
        v73 = v109[7] + *(_QWORD *)(v69 + 72) * v65;
        v31 = v105;
        (*(void (**)(uint64_t, char *, uint64_t))(v69 + 40))(v73, v103, v105);
      }
      else
      {
        v109[(v65 >> 6) + 8] |= 1 << v65;
        ((void (*)(unint64_t, char *, uint64_t))v57)(v72[6] + v65 * v96, v68, v106);
        v74 = v72[7] + *(_QWORD *)(v69 + 72) * v65;
        v31 = v105;
        v61((char *)v74, v103, v105);
        v75 = v72[2];
        v76 = __OFADD__(v75, 1);
        v77 = v75 + 1;
        if (v76)
          goto LABEL_35;
        v72[2] = v77;
      }
      v32 = (uint64_t)v109;
      swift_bridgeObjectRelease();
      v78 = *(void (**)(char *, uint64_t))(v99 + 8);
      v79 = v68;
      v80 = v106;
      v78(v79, v106);
      v78(v102, v80);
      v60(v98, v97);
      v35 = v93;
      sub_23F481698(v93, &qword_256E74E40);
      v36 = v94;
      v34 = (uint64_t)v92;
      v33 = v100;
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    sub_23F61CC94();
    __break(1u);
  }
}

uint64_t sub_23F464634(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  _BOOL8 v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  _DWORD *v75;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  char *v100;
  int v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  char *v107;
  int v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  int v122;

  v121 = a1;
  v96 = sub_23F61A924();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v94 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F61A138();
  v114 = *(_QWORD *)(v4 - 8);
  v115 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v113 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61A6B4();
  v104 = *(_QWORD *)(v6 - 8);
  v105 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v103 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F617D68();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v92 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_23F61A048();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v89 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F61A594();
  v110 = *(_QWORD *)(v12 - 8);
  v111 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v109 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_23F618134();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v84 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_23F61ACA8();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v81 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F617D08();
  v117 = *(_QWORD *)(v16 - 8);
  v118 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F61A504();
  v116 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v119 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F61B2C0();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v93 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v112 = (char *)&v80 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v102 = (char *)&v80 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v107 = (char *)&v80 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v100 = (char *)&v80 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v80 - v33;
  v35 = *(_QWORD *)(a2 + 16);
  if (!v35)
    return 0;
  v99 = v19;
  v87 = v9;
  v88 = v8;
  v36 = *(_QWORD *)(sub_23F61B2E4() - 8);
  v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v122 = *MEMORY[0x24BE56AF0];
  v108 = *MEMORY[0x24BE56B20];
  v106 = *MEMORY[0x24BE56B48];
  v101 = *MEMORY[0x24BE56B98];
  v98 = *MEMORY[0x24BE56BC8];
  v38 = *(_QWORD *)(v36 + 72);
  sub_23F617BA0();
  v97 = a2;
  v39 = a2 + v37 + v38 * (v35 - 1);
  v120 = -v38;
  v40 = v116;
  v41 = v119;
  while (1)
  {
    sub_23F61B2CC();
    v42 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v34, v21);
    if (v42 == v122)
    {
      v43 = v112;
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v112, v34, v21);
      (*(void (**)(char *, uint64_t))(v22 + 96))(v43, v21);
      v44 = v113;
      v45 = v114;
      v46 = v43;
      v47 = v115;
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v113, v46, v115);
      sub_23F61A108();
LABEL_5:
      v48 = sub_23F617CD8();
      (*(void (**)(char *, uint64_t))(v117 + 8))(v18, v118);
      v49 = *(void (**)(char *, uint64_t))(v45 + 8);
      v40 = v116;
      v50 = v47;
      v41 = v119;
      v49(v44, v50);
      if ((v48 & 1) != 0)
        goto LABEL_25;
      goto LABEL_22;
    }
    if (v42 != v108)
      break;
    v51 = v107;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v107, v34, v21);
    (*(void (**)(char *, uint64_t))(v22 + 96))(v51, v21);
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v109, v51, v111);
    v52 = sub_23F61A57C();
    v54 = v53;
    if (v52 == sub_23F617CB4() && v54 == v55)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      v69 = v89;
      v70 = v109;
      sub_23F61A588();
      v71 = v92;
      sub_23F61A03C();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v69, v91);
      (*(void (**)(char *, uint64_t))(v110 + 8))(v70, v111);
      v72 = v87;
      v73 = v88;
      v74 = (*(uint64_t (**)(char *, uint64_t))(v87 + 88))(v71, v88);
      v75 = (_DWORD *)MEMORY[0x24BE523C0];
      goto LABEL_28;
    }
    v57 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v57 & 1) != 0)
      goto LABEL_27;
    (*(void (**)(char *, uint64_t))(v110 + 8))(v109, v111);
    v41 = v119;
LABEL_22:
    --v35;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v34, v21);
    v39 += v120;
    if (!v35)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  if (v42 == v106)
  {
    v58 = v102;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v102, v34, v21);
    (*(void (**)(char *, uint64_t))(v22 + 96))(v58, v21);
    v60 = v103;
    v59 = v104;
    v61 = v105;
    (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v103, v58, v105);
    sub_23F61A6A8();
    LOBYTE(v58) = sub_23F617CD8();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v18, v118);
    v62 = *(void (**)(char *, uint64_t))(v59 + 8);
    v40 = v116;
    v63 = v61;
    v41 = v119;
    v62(v60, v63);
    if ((v58 & 1) != 0)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v34, v21);
      return 1;
    }
    goto LABEL_22;
  }
  if (v42 != v101)
  {
    if (v42 != v98)
      goto LABEL_22;
    v66 = v93;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v93, v34, v21);
    (*(void (**)(char *, uint64_t))(v22 + 96))(v66, v21);
    v45 = v95;
    v44 = v94;
    v67 = v66;
    v47 = v96;
    (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v94, v67, v96);
    sub_23F61A90C();
    goto LABEL_5;
  }
  v64 = v100;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v100, v34, v21);
  (*(void (**)(char *, uint64_t))(v22 + 96))(v64, v21);
  v65 = v99;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v41, v64, v99);
  sub_23F61A480();
  LOBYTE(v64) = sub_23F617CD8();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v18, v118);
  if ((v64 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v65);
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  v77 = v41;
  v78 = v81;
  sub_23F61A4F8();
  v79 = v40;
  v71 = v84;
  sub_23F61AC78();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v78, v83);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v77, v65);
  v72 = v85;
  v73 = v86;
  v74 = (*(uint64_t (**)(char *, uint64_t))(v85 + 88))(v71, v86);
  v75 = (_DWORD *)MEMORY[0x24BE53328];
LABEL_28:
  v68 = v74 == *v75;
  (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v73);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v34, v21);
  return v68;
}

uint64_t sub_23F464F94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  void (*v45)(uint64_t *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(unint64_t, char *, uint64_t);
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t result;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  void (*v79)(unint64_t, char *, uint64_t);
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  int v96;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  v119 = a2;
  v140 = a1;
  v114 = sub_23F61B518();
  v113 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v112 = (char *)&v109 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_23F61B5D8();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v109 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F35D2E8(&qword_256E70220);
  MEMORY[0x24BDAC7A8](v4);
  v118 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_23F61B308();
  v116 = *(_QWORD *)(v117 - 8);
  v6 = MEMORY[0x24BDAC7A8](v117);
  v115 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v123 = (char *)&v109 - v8;
  v9 = sub_23F61A24C();
  v121 = *(_QWORD *)(v9 - 8);
  v122 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v120 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F61AE94();
  v125 = *(_QWORD *)(v11 - 8);
  v126 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v124 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F61A42C();
  v131 = *(_QWORD *)(v13 - 8);
  v132 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v127 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F61A180();
  v129 = *(_QWORD *)(v15 - 8);
  v130 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v128 = (char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F61A468();
  v135 = *(_QWORD *)(v17 - 8);
  v136 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v133 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_23F617D08();
  v137 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139);
  v138 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_23F61A630();
  v20 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v22 = (char *)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F61A570();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (uint64_t *)((char *)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v109 - v28;
  v30 = sub_23F619FAC();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v109 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v33, v141, v30);
  v34 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v33, v30);
  if (v34 == *MEMORY[0x24BE54D08])
  {
    (*(void (**)(char *, uint64_t))(v31 + 96))(v33, v30);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v29, v33, v23);
    (*(void (**)(uint64_t *, char *, uint64_t))(v24 + 16))(v27, v29, v23);
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v24 + 88))(v27, v23) == *MEMORY[0x24BE556A0])
    {
      (*(void (**)(uint64_t *, uint64_t))(v24 + 96))(v27, v23);
      v35 = *v27;
      v36 = v140;
      sub_23F617BA0();
      v37 = sub_23F45226C(v35, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v23);
    }
    else
    {
      v45 = *(void (**)(uint64_t *, uint64_t))(v24 + 8);
      v45(v27, v23);
      v37 = MEMORY[0x24BEE4AF8];
      v45((uint64_t *)v29, v23);
    }
    return v37;
  }
  if (v34 == *MEMORY[0x24BE54CA0])
  {
    (*(void (**)(char *, uint64_t))(v31 + 96))(v33, v30);
    v39 = v137;
    v38 = v138;
    v40 = v139;
    (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v138, v33, v139);
    sub_23F35D2E8(&qword_256E70208);
    v41 = type metadata accessor for DependencyId(0);
    v42 = *(unsigned __int8 *)(*(_QWORD *)(v41 - 8) + 80);
    v43 = (v42 + 32) & ~v42;
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_23F61E7E0;
    (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v37 + v43 + *(int *)(v41 + 20), v38, v40);
    *(_QWORD *)(v37 + v43) = v140;
    v44 = *(void (**)(char *, uint64_t))(v39 + 8);
    sub_23F617BA0();
    v44(v38, v40);
    return v37;
  }
  if (v34 == *MEMORY[0x24BE54D18])
  {
    (*(void (**)(char *, uint64_t))(v31 + 96))(v33, v30);
    v46 = v134;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v33, v134);
    sub_23F35D2E8(&qword_256E70208);
    v47 = type metadata accessor for DependencyId(0);
    v48 = *(unsigned __int8 *)(*(_QWORD *)(v47 - 8) + 80);
    v49 = (v48 + 32) & ~v48;
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_23F61E7E0;
    v50 = v140;
    sub_23F617BA0();
    v51 = v138;
    sub_23F61A618();
    *(_QWORD *)(v37 + v49) = v50;
    (*(void (**)(uint64_t, char *, uint64_t))(v137 + 32))(v37 + v49 + *(int *)(v47 + 20), v51, v139);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v46);
    return v37;
  }
  if (v34 == *MEMORY[0x24BE54D00])
  {
    (*(void (**)(char *, uint64_t))(v31 + 96))(v33, v30);
    v52 = v133;
    (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v133, v33, v136);
    sub_23F35D2E8(&qword_256E70208);
    v53 = type metadata accessor for DependencyId(0);
    v54 = *(_QWORD *)(v53 - 8);
    v141 = *(_QWORD *)(v54 + 72);
    v55 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_23F61E980;
    v56 = v140;
    sub_23F617BA0();
    v57 = v138;
    sub_23F61A444();
    *(_QWORD *)(v37 + v55) = v56;
    v58 = *(void (**)(unint64_t, char *, uint64_t))(v137 + 32);
    v59 = v139;
    v58(v37 + v55 + *(int *)(v53 + 20), v57, v139);
    v60 = (uint64_t *)(v37 + v55 + v141);
    sub_23F617BA0();
    sub_23F61A450();
    *v60 = v56;
    v58((unint64_t)v60 + *(int *)(v53 + 20), v57, v59);
    v62 = v135;
    v61 = v136;
LABEL_11:
    (*(void (**)(char *, uint64_t))(v62 + 8))(v52, v61);
    return v37;
  }
  if (v34 == *MEMORY[0x24BE54CC8])
  {
    (*(void (**)(char *, uint64_t))(v31 + 96))(v33, v30);
    v64 = v128;
    v63 = v129;
    v65 = v130;
    (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v128, v33, v130);
    sub_23F35D2E8(&qword_256E70208);
    v66 = type metadata accessor for DependencyId(0);
    v67 = *(unsigned __int8 *)(*(_QWORD *)(v66 - 8) + 80);
    v68 = (v67 + 32) & ~v67;
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_23F61E7E0;
    v69 = v140;
    v70 = sub_23F617BA0();
    v71 = v138;
    MEMORY[0x24266D678](v70);
    *(_QWORD *)(v37 + v68) = v69;
    (*(void (**)(uint64_t, char *, uint64_t))(v137 + 32))(v37 + v68 + *(int *)(v66 + 20), v71, v139);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
    return v37;
  }
  if (v34 == *MEMORY[0x24BE54CF8])
  {
    (*(void (**)(char *, uint64_t))(v31 + 96))(v33, v30);
    v52 = v127;
    (*(void (**)(char *, char *, uint64_t))(v131 + 32))(v127, v33, v132);
    sub_23F35D2E8(&qword_256E70208);
    v73 = type metadata accessor for DependencyId(0);
    v74 = *(_QWORD *)(v73 - 8);
    v141 = *(_QWORD *)(v74 + 72);
    v75 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_23F61E980;
    v76 = v140;
    v77 = sub_23F617BA0();
    v78 = v138;
    MEMORY[0x24266D924](v77);
    *(_QWORD *)(v37 + v75) = v76;
    v79 = *(void (**)(unint64_t, char *, uint64_t))(v137 + 32);
    v80 = v139;
    v79(v37 + v75 + *(int *)(v73 + 20), v78, v139);
    v81 = (uint64_t *)(v37 + v75 + v141);
    sub_23F617BA0();
    sub_23F61A420();
    *v81 = v76;
    v79((unint64_t)v81 + *(int *)(v73 + 20), v78, v80);
    v62 = v131;
    v61 = v132;
    goto LABEL_11;
  }
  if (v34 == *MEMORY[0x24BE54CC0])
  {
    (*(void (**)(char *, uint64_t))(v31 + 96))(v33, v30);
    v83 = v124;
    v82 = v125;
    v84 = v126;
    (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v124, v33, v126);
    v85 = sub_23F61AE88();
    v86 = v140;
    sub_23F617BA0();
    v37 = sub_23F4526D4(v85, v86);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
    return v37;
  }
  if (v34 != *MEMORY[0x24BE54CD8])
  {
    if (v34 == *MEMORY[0x24BE54CD0]
      || v34 == *MEMORY[0x24BE54CE8]
      || v34 == *MEMORY[0x24BE54D30]
      || v34 == *MEMORY[0x24BE54D28]
      || v34 == *MEMORY[0x24BE54D38]
      || v34 == *MEMORY[0x24BE54C98]
      || v34 == *MEMORY[0x24BE54CF0]
      || v34 == *MEMORY[0x24BE54D20]
      || v34 == *MEMORY[0x24BE54D10]
      || v34 == *MEMORY[0x24BE54CE0])
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    }
    else if (v34 != *MEMORY[0x24BE54CB8]
           && v34 != *MEMORY[0x24BE54CA8]
           && v34 != *MEMORY[0x24BE54CB0]
           && v34 != *MEMORY[0x24BE54D40])
    {
      goto LABEL_53;
    }
    return MEMORY[0x24BEE4AF8];
  }
  (*(void (**)(char *, uint64_t))(v31 + 96))(v33, v30);
  v88 = v121;
  v87 = v122;
  v89 = v120;
  (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v120, v33, v122);
  sub_23F61A240();
  v37 = (uint64_t)v118;
  sub_23F61B314();
  swift_bridgeObjectRelease();
  v90 = v123;
  v91 = v142;
  sub_23F37482C(0xD00000000000008ALL, 0x800000023F6366E0, 1473, 0xD00000000000001BLL, 0x800000023F636770);
  if (v91)
  {
    sub_23F481698(v37, &qword_256E70220);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v87);
    return v37;
  }
  sub_23F481698(v37, &qword_256E70220);
  v92 = v116;
  v93 = v115;
  v94 = v90;
  v95 = v117;
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v115, v94, v117);
  v96 = (*(uint64_t (**)(char *, uint64_t))(v92 + 88))(v93, v95);
  if (v96 == *MEMORY[0x24BE56D38] || v96 == *MEMORY[0x24BE56D28])
  {
    (*(void (**)(char *, uint64_t))(v92 + 96))(v93, v95);
    v98 = v110;
    v99 = v109;
    v100 = v93;
    v101 = v111;
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v109, v100, v111);
    sub_23F61B530();
LABEL_42:
    v103 = (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v99, v101);
    MEMORY[0x24BDAC7A8](v103);
    v104 = (char *)v140;
    *(&v109 - 2) = v89;
    *(&v109 - 1) = v104;
    sub_23F36F93C();
    v37 = v105;
    (*(void (**)(char *, uint64_t))(v92 + 8))(v123, v117);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v87);
    swift_bridgeObjectRelease();
    return v37;
  }
  if (v96 == *MEMORY[0x24BE56D30])
  {
    (*(void (**)(char *, uint64_t))(v92 + 96))(v93, v95);
    v98 = v113;
    v99 = v112;
    v102 = v93;
    v101 = v114;
    (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v112, v102, v114);
    sub_23F61B50C();
    goto LABEL_42;
  }
LABEL_53:
  result = sub_23F61CC58();
  __break(1u);
  return result;
}

void sub_23F465D5C()
{
  uint64_t v0;
  uint64_t (**v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (**v28)(uint64_t, uint64_t);
  void (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;

  sub_23F362ABC();
  v34 = v4;
  v25 = v5;
  v6 = sub_23F384040();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v31 = v8;
  v9 = sub_23F61B2C0();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383A54();
  v35 = sub_23F61AA14();
  sub_23F3B1748();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23F61B2E4();
  v14 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  sub_23F3845CC();
  v15 = sub_23F61B14C();
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    sub_23F383EB8();
    v38 = v15 + v17;
    v37 = *MEMORY[0x24BE56C58];
    v27 = v9;
    v28 = v1;
    v30 = v15;
    v26 = v3;
    while (v16 <= *(_QWORD *)(v15 + 16))
    {
      --v16;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v2, v38 + *(_QWORD *)(v14 + 72) * v16, v39);
      sub_23F61B2CC();
      v18 = v1[11](v3, v9);
      if (v18 == v37)
      {
        sub_23F48274C(v1[12]);
        v19 = v3;
        v20 = v35;
        v29 = *(void (**)(void))(v0 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v29)(v13, v19, v35);
        v21 = v31;
        sub_23F61A978();
        v36 = sub_23F617CD8();
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v21, v33);
        sub_23F3D98EC(v2, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
        if ((v36 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v23 = v25;
          sub_23F482DC0();
          v29();
          v22 = 0;
          v24 = v20;
          goto LABEL_11;
        }
        sub_23F3B1CC8((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
        v9 = v27;
        v1 = v28;
        v3 = v26;
        v15 = v30;
        if (!v16)
          goto LABEL_9;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v39);
        sub_23F48274C(v1[1]);
        if (!v16)
          goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    sub_23F362C60();
    v22 = 1;
    v23 = v25;
    v24 = v35;
LABEL_11:
    sub_23F36196C(v23, v22, 1, v24);
    sub_23F362948();
  }
}

uint64_t sub_23F465FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  unint64_t v44;

  v39 = a1;
  v32 = a2;
  v2 = sub_23F617000();
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v36 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F61B2C0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23F61B44C();
  v8 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F61B2E4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v41 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F61B14C();
  v15 = v14;
  v16 = *(_QWORD *)(v14 + 16);
  if (v16)
  {
    v44 = v14 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v43 = *MEMORY[0x24BE56B28];
    v17 = v41;
    v33 = v4;
    v34 = v5;
    v35 = v14;
    while (v16 <= *(_QWORD *)(v15 + 16))
    {
      --v16;
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v17, v44 + *(_QWORD *)(v12 + 72) * v16, v11);
      sub_23F61B2CC();
      v18 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
      if (v18 == v43)
      {
        (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
        v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v20 = v11;
        v21 = v7;
        v22 = v7;
        v23 = v40;
        v19(v10, v22, v40);
        v24 = v36;
        sub_23F61B260();
        v42 = sub_23F616FE8();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v38);
        v25 = v12;
        v26 = *(void (**)(char *, uint64_t))(v12 + 8);
        v27 = v20;
        v26(v17, v20);
        if ((v42 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v29 = v32;
          v19((char *)v32, v10, v23);
          v28 = 0;
          v30 = v23;
          return sub_23F36196C(v29, v28, 1, v30);
        }
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
        v4 = v33;
        v5 = v34;
        v7 = v21;
        v11 = v27;
        v12 = v25;
        v15 = v35;
        v17 = v41;
        if (!v16)
          goto LABEL_9;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (!v16)
        {
LABEL_9:
          swift_bridgeObjectRelease();
          v28 = 1;
          v29 = v32;
          v30 = v40;
          return sub_23F36196C(v29, v28, 1, v30);
        }
      }
    }
    __break(1u);
  }
  swift_bridgeObjectRelease();
  v28 = 1;
  v30 = v40;
  v29 = v32;
  return sub_23F36196C(v29, v28, 1, v30);
}

uint64_t sub_23F4662A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v39 = a1;
  v3 = sub_23F619FAC();
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_23F617D08();
  v46 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E702D8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61A684();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DependencyId(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BEE4B08];
  v17 = v45;
  result = sub_23F464F94(MEMORY[0x24BEE4AF8], a2);
  if (!v17)
  {
    v42 = v8;
    v43 = v9;
    v44 = v16;
    v45 = 0;
    v32 = v10;
    v33 = a2;
    v31 = result;
    sub_23F617BA0();
    sub_23F35FF54();
    v19 = *(_QWORD *)(v31 + 16);
    if (v19)
    {
      v20 = (uint64_t)v44;
      v41 = &v44[*(int *)(v13 + 20)];
      v21 = v31 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      v40 = *(_QWORD *)(v14 + 72);
      v23 = v38;
      v22 = v39;
      v24 = v46;
      v25 = (uint64_t)v37;
      do
      {
        sub_23F362600(v21, v20, type metadata accessor for DependencyId);
        (*(void (**)(uint64_t, char *, uint64_t))(v24 + 16))(v25, v41, v23);
        sub_23F3663AC(v20, type metadata accessor for DependencyId);
        v26 = (uint64_t)v42;
        sub_23F459428(v25, (uint64_t)v42);
        v24 = v46;
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v25, v23);
        v27 = v43;
        if (sub_23F36195C(v26, 1, v43) == 1)
        {
          sub_23F481698(v26, &qword_256E702D8);
        }
        else
        {
          v28 = v32;
          (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v12, v26, v27);
          v29 = v34;
          sub_23F61A63C();
          v30 = v45;
          sub_23F4662A8(v22, v33);
          if (v30)
          {
            (*(void (**)(char *, uint64_t))(v35 + 8))(v29, v36);
            (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v27);
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          v45 = 0;
          (*(void (**)(char *, uint64_t))(v35 + 8))(v29, v36);
          sub_23F360040();
          (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v27);
          v23 = v38;
          v22 = v39;
          v24 = v46;
          v25 = (uint64_t)v37;
        }
        v21 += v40;
        --v19;
        v20 = (uint64_t)v44;
      }
      while (v19);
    }
    swift_bridgeObjectRelease();
    return v47;
  }
  return result;
}

void sub_23F466618(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t inited;
  void (*v5)(uint64_t);

  sub_23F617BA0();
  v3 = sub_23F383738();
  if (!*(_QWORD *)(sub_23F48019C(v3, a2) + 16))
  {
    swift_release();
    sub_23F35D2E8(&qword_256E74C80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
    sub_23F384040();
    v5 = (void (*)(uint64_t))MEMORY[0x24BE52140];
    sub_23F61B404();
    sub_23F3B121C(&qword_256E6FFB0, v5);
    *(_QWORD *)(inited + 32) = sub_23F61BFEC();
    sub_23F3E3E10(inited);
  }
}

uint64_t sub_23F4666E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v31;
  uint64_t v32;

  v32 = a2;
  v5 = sub_23F61B92C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E74E50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E6FB08);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F35D2E8(&qword_256E701F0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v31 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v31 - v21;
  sub_23F368690(a1, a3);
  v23 = sub_23F61B404();
  if (sub_23F36195C((uint64_t)v13, 1, v23) == 1)
  {
    sub_23F481698((uint64_t)v13, &qword_256E6FB08);
    v24 = 1;
  }
  else
  {
    sub_23F61B3E0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v13, v23);
    v24 = 0;
  }
  sub_23F36196C((uint64_t)v22, v24, 1, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v20, v32, v5);
  sub_23F36196C((uint64_t)v20, 0, 1, v5);
  v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  v26 = &qword_256E701F0;
  sub_23F382EF8((uint64_t)v22, (uint64_t)v10, &qword_256E701F0);
  sub_23F382EF8((uint64_t)v20, v25, &qword_256E701F0);
  if (sub_23F36195C((uint64_t)v10, 1, v5) == 1)
  {
    sub_23F481698((uint64_t)v20, &qword_256E701F0);
    sub_23F481698((uint64_t)v22, &qword_256E701F0);
    if (sub_23F36195C(v25, 1, v5) == 1)
    {
      v27 = -1;
    }
    else
    {
      v26 = &qword_256E74E50;
      v27 = 0;
    }
  }
  else
  {
    sub_23F382EF8((uint64_t)v10, (uint64_t)v17, &qword_256E701F0);
    if (sub_23F36195C(v25, 1, v5) == 1)
    {
      sub_23F481698((uint64_t)v20, &qword_256E701F0);
      sub_23F481698((uint64_t)v22, &qword_256E701F0);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
      v27 = 0;
      v26 = &qword_256E74E50;
    }
    else
    {
      v28 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v31, v25, v5);
      sub_23F3B121C(&qword_256E6FE68, (void (*)(uint64_t))MEMORY[0x24BEB9A18]);
      v27 = sub_23F61C0A0();
      v29 = *(void (**)(char *, uint64_t))(v6 + 8);
      v29(v28, v5);
      v26 = &qword_256E701F0;
      sub_23F481698((uint64_t)v20, &qword_256E701F0);
      sub_23F481698((uint64_t)v22, &qword_256E701F0);
      v29(v17, v5);
    }
  }
  sub_23F481698((uint64_t)v10, v26);
  return v27 & 1;
}

uint64_t sub_23F466A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  NSObject *v55;
  uint8_t *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  int v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t (*v109)(char *, uint64_t);
  char *v110;
  int v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  void (*v129)(char *, char *, uint64_t);
  char *v130;
  int v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  char *v142;
  void (*v143)(char *, uint64_t);
  char *v144;
  NSObject *v145;
  os_log_type_t v146;
  _BOOL4 v147;
  uint8_t *v148;
  uint8_t *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  void (*v156)(char *, unint64_t, uint64_t);
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  void (*v170)(char *, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(char *, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t Resolver;
  char *v185;
  char *v186;
  void (*v187)(char *, uint64_t);
  char *v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  int v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  int v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  void (*v248)(char *, char *, uint64_t);
  void (*v249)(char *, uint64_t);
  void (*v250)(char *, uint64_t);
  char *v251;
  uint64_t v252;

  v200 = a4;
  v220 = a3;
  v212 = a2;
  v240 = a1;
  v193 = a5;
  Resolver = type metadata accessor for QueryResolver();
  MEMORY[0x24BDAC7A8](Resolver);
  v190 = (char *)&v183 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E70268);
  MEMORY[0x24BDAC7A8](v6);
  v185 = (char *)&v183 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = sub_23F61BBA8();
  v198 = *(_QWORD *)(v199 - 8);
  v8 = MEMORY[0x24BDAC7A8](v199);
  v194 = (char *)&v183 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v186 = (char *)&v183 - v10;
  v204 = sub_23F61B7AC();
  v203 = *(_QWORD *)(v204 - 8);
  MEMORY[0x24BDAC7A8](v204);
  v202 = (char *)&v183 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = sub_23F61B6E0();
  v195 = *(_QWORD *)(v197 - 8);
  MEMORY[0x24BDAC7A8](v197);
  v196 = (char *)&v183 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = sub_23F61B92C();
  v214 = *(_QWORD *)(v217 - 8);
  v13 = MEMORY[0x24BDAC7A8](v217);
  v205 = (char *)&v183 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v201 = (char *)&v183 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v207 = (char *)&v183 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v210 = (char *)&v183 - v19;
  v20 = sub_23F35D2E8(&qword_256E6FB00);
  MEMORY[0x24BDAC7A8](v20);
  v211 = (uint64_t)&v183 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = type metadata accessor for StepResolution();
  MEMORY[0x24BDAC7A8](v213);
  v192 = (uint64_t)&v183 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = sub_23F61B5D8();
  v208 = *(_QWORD *)(v209 - 8);
  v23 = MEMORY[0x24BDAC7A8](v209);
  v191 = (char *)&v183 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v225 = (char *)&v183 - v25;
  v26 = sub_23F35D2E8(&qword_256E702D0);
  MEMORY[0x24BDAC7A8](v26);
  v219 = (uint64_t)&v183 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = sub_23F61AC24();
  v221 = *(_QWORD *)(v226 - 8);
  MEMORY[0x24BDAC7A8](v226);
  v222 = (char *)&v183 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23F618134();
  v236 = *(_QWORD *)(v29 - 8);
  v237 = v29;
  MEMORY[0x24BDAC7A8](v29);
  v235 = (char *)&v183 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23F61ACA8();
  v233 = *(_QWORD *)(v31 - 8);
  v234 = v31;
  MEMORY[0x24BDAC7A8](v31);
  v232 = (char *)&v183 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = sub_23F617DD4();
  v228 = *(_QWORD *)(v229 - 8);
  v33 = MEMORY[0x24BDAC7A8](v229);
  v218 = (char *)&v183 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v227 = (char *)&v183 - v35;
  v36 = sub_23F617D08();
  v241 = *(_QWORD *)(v36 - 8);
  v242 = v36;
  MEMORY[0x24BDAC7A8](v36);
  v239 = (char *)&v183 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_23F61B2C0();
  v243 = *(_QWORD *)(v38 - 8);
  v244 = v38;
  MEMORY[0x24BDAC7A8](v38);
  v251 = (char *)&v183 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23F61A504();
  v246 = *(_QWORD *)(v40 - 8);
  v247 = v40;
  MEMORY[0x24BDAC7A8](v40);
  v223 = (char *)&v183 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v245 = sub_23F61B2E4();
  v224 = *(_QWORD *)(v245 - 8);
  MEMORY[0x24BDAC7A8](v245);
  v216 = (char *)&v183 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_23F61B164();
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)&v183 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_23F619E98();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = MEMORY[0x24BDAC7A8](v47);
  v188 = (char *)&v183 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49);
  v52 = (char *)&v183 - v51;
  sub_23F619094();
  v53 = sub_23F619E8C();
  v54 = sub_23F61C61C();
  v55 = v53;
  if (os_log_type_enabled(v53, v54))
  {
    v56 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v56 = 0;
    _os_log_impl(&dword_23F35A000, v55, v54, "Resolving action success event", v56, 2u);
    MEMORY[0x242670B70](v56, -1, -1);
  }

  v57 = *(void (**)(char *, uint64_t))(v48 + 8);
  v189 = v47;
  v57(v52, v47);
  sub_23F61B128();
  v58 = sub_23F61B14C();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
  v59 = *(_QWORD *)(v58 + 16);
  if (!v59)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    v116 = 1;
    v117 = v193;
    return sub_23F36196C(v117, v116, 1, v213);
  }
  v187 = v57;
  v60 = v224;
  v250 = (void (*)(char *, uint64_t))(v58
                                              + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80)));
  LODWORD(v249) = *MEMORY[0x24BE56B98];
  v231 = *MEMORY[0x24BE53328];
  v206 = *MEMORY[0x24BEB9988];
  v61 = v244;
  v62 = v245;
  v63 = v216;
  v64 = v223;
  v65 = v243;
  v238 = v58;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v59 > *(_QWORD *)(v58 + 16))
        {
          __break(1u);
          goto LABEL_45;
        }
        --v59;
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v63, (char *)v250 + *(_QWORD *)(v60 + 72) * v59, v62);
        v66 = v63;
        v67 = v251;
        sub_23F61B2CC();
        v68 = (*(uint64_t (**)(char *, uint64_t))(v65 + 88))(v67, v61);
        if (v68 == (_DWORD)v249)
          break;
        (*(void (**)(char *, uint64_t))(v60 + 8))(v66, v62);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v67, v61);
        v63 = v66;
        if (!v59)
          goto LABEL_23;
      }
      v248 = (void (*)(char *, char *, uint64_t))v59;
      v69 = v66;
      (*(void (**)(char *, uint64_t))(v65 + 96))(v67, v61);
      v70 = v246;
      v71 = v64;
      v72 = v64;
      v73 = v247;
      (*(void (**)(char *, char *, uint64_t))(v246 + 32))(v71, v67, v247);
      v74 = v239;
      sub_23F61A480();
      v75 = sub_23F617CD8();
      (*(void (**)(char *, uint64_t))(v241 + 8))(v74, v242);
      if ((v75 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v73);
      v63 = v69;
      v62 = v245;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v69, v245);
      v64 = v72;
LABEL_15:
      v58 = v238;
      v65 = v243;
      v61 = v244;
      v59 = (uint64_t)v248;
      if (!v248)
        goto LABEL_23;
    }
    v76 = v232;
    sub_23F61A4F8();
    v77 = v235;
    sub_23F61AC78();
    (*(void (**)(char *, uint64_t))(v233 + 8))(v76, v234);
    v79 = v236;
    v78 = v237;
    v80 = (*(uint64_t (**)(char *, uint64_t))(v236 + 88))(v77, v237);
    v63 = v69;
    if (v80 != v231)
    {
      v64 = v72;
      (*(void (**)(char *, uint64_t))(v79 + 8))(v77, v78);
      (*(void (**)(char *, uint64_t))(v246 + 8))(v72, v247);
      v62 = v245;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v69, v245);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v79 + 96))(v77, v78);
    v81 = v228;
    v82 = *(void (**)(char *, char *, uint64_t))(v228 + 32);
    v83 = v218;
    v84 = v229;
    v82(v218, v77, v229);
    v85 = v227;
    v82(v227, v83, v84);
    v86 = v219;
    sub_23F382EF8(v220, v219, &qword_256E702D0);
    v87 = v226;
    v88 = sub_23F36195C(v86, 1, v226);
    v59 = (uint64_t)v248;
    if (v88 != 1)
      break;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v85, v84);
    v64 = v223;
    (*(void (**)(char *, uint64_t))(v246 + 8))(v223, v247);
    v60 = v224;
    v62 = v245;
    (*(void (**)(char *, uint64_t))(v224 + 8))(v63, v245);
    sub_23F481698(v86, &qword_256E702D0);
LABEL_22:
    v58 = v238;
    v65 = v243;
    v61 = v244;
    if (!v59)
      goto LABEL_23;
  }
  v89 = v86;
  v90 = v222;
  (*(void (**)(char *, uint64_t, uint64_t))(v221 + 32))(v222, v89, v87);
  sub_23F61AC18();
  v91 = v87;
  v92 = v215;
  v93 = v230;
  sub_23F61B338();
  if (v93)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v228 + 8))(v85, v229);
    (*(void (**)(char *, uint64_t))(v246 + 8))(v223, v247);
    (*(void (**)(char *, uint64_t))(v224 + 8))(v216, v245);
    swift_bridgeObjectRelease();
    v58 = v221;
    v59 = (uint64_t)v90;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v59, v91);
  }
  swift_bridgeObjectRelease();
  v94 = sub_23F61AC00();
  v230 = 0;
  v95 = v94;
  v97 = v96;
  v98 = (uint64_t)v210;
  sub_23F617DA4();
  v99 = v211;
  v100 = v230;
  sub_23F5D7D40(v95, v97, v98, v212, v92, v211);
  if (v100)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v214 + 8))(v98, v217);
    (*(void (**)(char *, uint64_t))(v208 + 8))(v225, v209);
    (*(void (**)(char *, uint64_t))(v228 + 8))(v227, v229);
    (*(void (**)(char *, uint64_t))(v246 + 8))(v223, v247);
    (*(void (**)(char *, uint64_t))(v224 + 8))(v216, v245);
    swift_bridgeObjectRelease();
    v91 = v226;
    v58 = v221;
    v59 = (uint64_t)v222;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v59, v91);
  }
  v230 = 0;
  v101 = v214;
  v102 = *(void (**)(uint64_t, uint64_t))(v214 + 8);
  v103 = v217;
  v102(v98, v217);
  swift_bridgeObjectRelease();
  v104 = sub_23F36195C(v99, 1, v213);
  v105 = v245;
  v106 = v216;
  if (v104 != 1)
  {
    (*(void (**)(char *, uint64_t))(v208 + 8))(v225, v209);
    (*(void (**)(char *, uint64_t))(v228 + 8))(v227, v229);
    (*(void (**)(char *, uint64_t))(v246 + 8))(v223, v247);
    (*(void (**)(char *, uint64_t))(v224 + 8))(v106, v105);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v221 + 8))(v222, v226);
    v118 = v192;
    sub_23F36262C(v99, v192, (uint64_t (*)(_QWORD))type metadata accessor for StepResolution);
    v117 = v193;
    sub_23F36262C(v118, v193, (uint64_t (*)(_QWORD))type metadata accessor for StepResolution);
    v116 = 0;
    return sub_23F36196C(v117, v116, 1, v213);
  }
  sub_23F481698(v99, &qword_256E6FB00);
  v107 = v207;
  v108 = v227;
  sub_23F617DA4();
  v109 = *(uint64_t (**)(char *, uint64_t))(v101 + 88);
  v110 = v107;
  v111 = v109(v107, v103);
  v112 = v228;
  if (v111 != v206)
  {
    (*(void (**)(char *, uint64_t))(v208 + 8))(v225, v209);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v108, v229);
    v113 = v223;
    (*(void (**)(char *, uint64_t))(v246 + 8))(v223, v247);
    v60 = v224;
    v114 = v106;
    v115 = v106;
    v62 = v105;
    (*(void (**)(char *, uint64_t))(v224 + 8))(v115, v105);
    (*(void (**)(char *, uint64_t))(v221 + 8))(v222, v226);
    v102((uint64_t)v110, v103);
    v63 = v114;
    v64 = v113;
    goto LABEL_22;
  }
  v120 = v214;
  v250 = *(void (**)(char *, uint64_t))(v214 + 96);
  v250(v110, v103);
  v121 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v195 + 16))(v196, v121, v197);
  swift_release();
  v122 = sub_23F61B6D4();
  v123 = *(_QWORD *)(v122 + 16);
  if (v123)
  {
    v249 = (void (*)(char *, uint64_t))v102;
    v252 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v124 = *(unsigned __int8 *)(v120 + 80);
    v240 = v122;
    v125 = v122 + ((v124 + 32) & ~v124);
    v243 = *(_QWORD *)(v120 + 72);
    v248 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
    LODWORD(v244) = *MEMORY[0x24BEB99E0];
    v63 = v225;
    v126 = v229;
    v127 = v201;
    while (1)
    {
      v128 = v217;
      v129 = v248;
      v248(v127, (char *)v125, v217);
      v130 = v205;
      v129(v205, v127, v128);
      v131 = v109(v130, v128);
      if (v131 != (_DWORD)v244)
        break;
      v132 = v127;
      v250(v130, v128);
      v133 = swift_projectBox();
      v134 = v203;
      v135 = v202;
      v136 = v204;
      (*(void (**)(char *, uint64_t, uint64_t))(v203 + 16))(v202, v133, v204);
      swift_release();
      v137 = sub_23F61B6EC();
      v251 = v138;
      (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v136);
      v249(v132, v128);
      v62 = v252;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v127 = v132;
        v139 = v137;
      }
      else
      {
        v139 = v137;
        sub_23F37B47C();
        v127 = v201;
        v62 = v252;
      }
      v140 = *(_QWORD *)(v62 + 16);
      if (v140 >= *(_QWORD *)(v62 + 24) >> 1)
      {
        sub_23F37B47C();
        v127 = v201;
        v62 = v252;
      }
      *(_QWORD *)(v62 + 16) = v140 + 1;
      v141 = v62 + 16 * v140;
      v142 = v251;
      *(_QWORD *)(v141 + 32) = v139;
      *(_QWORD *)(v141 + 40) = v142;
      v125 += v243;
      --v123;
      v63 = v225;
      v126 = v229;
      if (!v123)
      {
        swift_bridgeObjectRelease();
        v58 = v221;
        v105 = v245;
        goto LABEL_42;
      }
    }
    v143 = v249;
    v249(v130, v128);
    v144 = v188;
    sub_23F619094();
    v145 = sub_23F619E8C();
    v146 = sub_23F61C628();
    v147 = os_log_type_enabled(v145, v146);
    v59 = (uint64_t)v222;
    if (v147)
    {
      v148 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v148 = 0;
      _os_log_impl(&dword_23F35A000, v145, v146, "Expected entity type for identifier query", v148, 2u);
      v149 = v148;
      v128 = v217;
      MEMORY[0x242670B70](v149, -1, -1);
    }

    v187(v144, v189);
    type metadata accessor for InterpreterError();
    sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v143(v201, v128);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v195 + 8))(v196, v197);
    (*(void (**)(char *, uint64_t))(v208 + 8))(v63, v209);
    (*(void (**)(char *, uint64_t))(v228 + 8))(v227, v126);
    (*(void (**)(char *, uint64_t))(v246 + 8))(v223, v247);
    (*(void (**)(char *, uint64_t))(v224 + 8))(v216, v245);
    swift_bridgeObjectRelease();
    v91 = v226;
    v58 = v221;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v59, v91);
  }
  swift_bridgeObjectRelease();
  v62 = MEMORY[0x24BEE4AF8];
  v58 = v221;
  v63 = v225;
LABEL_42:
  v59 = (uint64_t)v222;
  sub_23F61AC18();
  v150 = v230;
  sub_23F61B338();
  v151 = v227;
  v64 = v150;
  if (v150)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v195 + 8))(v196, v197);
    (*(void (**)(char *, uint64_t))(v208 + 8))(v63, v209);
    (*(void (**)(char *, uint64_t))(v228 + 8))(v151, v229);
    (*(void (**)(char *, uint64_t))(v246 + 8))(v223, v247);
    (*(void (**)(char *, uint64_t))(v224 + 8))(v216, v105);
    swift_bridgeObjectRelease();
    v91 = v226;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v59, v91);
  }
LABEL_45:
  swift_bridgeObjectRelease();
  v152 = sub_23F61B530();
  v153 = *(_QWORD *)(v152 + 16);
  v251 = (char *)v152;
  if (v153)
  {
    v154 = v152 + ((*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80));
    v155 = *(_QWORD *)(v198 + 72);
    v156 = *(void (**)(char *, unint64_t, uint64_t))(v198 + 16);
    sub_23F617BA0();
    v157 = v199;
    v158 = v194;
    while (1)
    {
      v156(v158, v154, v157);
      v159 = sub_23F61BB78();
      v161 = v160;
      if (v159 == sub_23F61AC00() && v161 == v162)
        break;
      v164 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v164 & 1) != 0)
        goto LABEL_57;
      v158 = v194;
      v157 = v199;
      (*(void (**)(char *, uint64_t))(v198 + 8))(v194, v199);
      v154 += v155;
      if (!--v153)
      {
        swift_bridgeObjectRelease();
        v165 = 1;
        v166 = v226;
        v58 = v221;
        v167 = v222;
        v63 = v225;
        goto LABEL_55;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_57:
    v166 = v226;
    v157 = v199;
    v168 = v186;
    swift_bridgeObjectRelease();
    v169 = (uint64_t)v185;
    (*(void (**)(char *, char *, uint64_t))(v198 + 32))(v185, v194, v157);
    v165 = 0;
    v58 = v221;
    v167 = v222;
    v63 = v225;
  }
  else
  {
    v167 = (char *)v59;
    v165 = 1;
    v166 = v226;
    v157 = v199;
LABEL_55:
    v168 = v186;
    v169 = (uint64_t)v185;
  }
  sub_23F36196C(v169, v165, 1, v157);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F374874(0xD00000000000008ALL, 0x800000023F6366E0, 638, 0xD000000000000052, 0x800000023F636950);
  if (v64)
  {
    swift_bridgeObjectRelease();
    sub_23F481698(v169, &qword_256E70268);
    v170 = *(void (**)(char *, uint64_t))(v208 + 8);
    v171 = v209;
    v170(v191, v209);
    (*(void (**)(char *, uint64_t))(v195 + 8))(v196, v197);
    v170(v63, v171);
    (*(void (**)(char *, uint64_t))(v228 + 8))(v227, v229);
    (*(void (**)(char *, uint64_t))(v246 + 8))(v223, v247);
    (*(void (**)(char *, uint64_t))(v224 + 8))(v216, v245);
    v91 = v166;
    v59 = (uint64_t)v167;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v59, v91);
  }
  sub_23F481698(v169, &qword_256E70268);
  *(_QWORD *)v190 = v62;
  v172 = *MEMORY[0x24BE56ED8];
  v173 = sub_23F61B410();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v173 - 8) + 104))(v190, v172, v173);
  v174 = (int *)Resolver;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(&v190[*(int *)(Resolver + 20)], v167, v166);
  (*(void (**)(char *, uint64_t, uint64_t))(v241 + 16))(&v190[v174[6]], v212, v242);
  v175 = v168;
  v176 = v198;
  v177 = v175;
  (*(void (**)(char *))(v198 + 16))(&v190[v174[7]]);
  v178 = &v190[v174[8]];
  v179 = sub_23F61B140();
  v180 = (uint64_t)v190;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v178, v200, v179);
  v117 = v193;
  sub_23F56EF14(v193);
  sub_23F3663AC(v180, (uint64_t (*)(_QWORD))type metadata accessor for QueryResolver);
  (*(void (**)(char *, uint64_t))(v176 + 8))(v177, v199);
  v181 = *(void (**)(char *, uint64_t))(v208 + 8);
  v182 = v209;
  v181(v191, v209);
  (*(void (**)(char *, uint64_t))(v195 + 8))(v196, v197);
  v181(v63, v182);
  (*(void (**)(char *, uint64_t))(v228 + 8))(v227, v229);
  (*(void (**)(char *, uint64_t))(v246 + 8))(v223, v247);
  (*(void (**)(char *, uint64_t))(v224 + 8))(v216, v245);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v167, v226);
  v116 = 0;
  return sub_23F36196C(v117, v116, 1, v213);
}

uint64_t sub_23F4684AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(char *, unint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t Resolver;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v95 = a3;
  v99 = a4;
  Resolver = type metadata accessor for QueryResolver();
  MEMORY[0x24BDAC7A8](Resolver);
  v85 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E70268);
  MEMORY[0x24BDAC7A8](v7);
  v83 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61BBA8();
  v93 = *(_QWORD *)(v9 - 8);
  v94 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v92 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v84 = (char *)&v79 - v12;
  v13 = sub_23F61B5D8();
  v86 = *(_QWORD *)(v13 - 8);
  v87 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v88 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F61B8A8();
  v97 = *(_QWORD *)(v15 - 8);
  v98 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v96 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_23F61B878();
  v91 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v90 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_23F61B164();
  v18 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v20 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23F61B92C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v79 - v29;
  v82 = a2;
  sub_23F61B128();
  v103 = sub_23F61B14C();
  v80 = a1;
  v102 = a1;
  sub_23F35D2E8(&qword_256E70F10);
  sub_23F3B0CC8(&qword_256E74C70, &qword_256E70F10);
  v31 = v101;
  sub_23F61AC48();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v100);
  if (sub_23F36195C((uint64_t)v23, 1, v24) == 1)
  {
    sub_23F481698((uint64_t)v23, &qword_256E701F0);
    v32 = 1;
    v33 = v99;
LABEL_11:
    v48 = type metadata accessor for StepResolution();
    return sub_23F36196C(v33, v32, 1, v48);
  }
  v101 = v31;
  v35 = v96;
  v34 = v97;
  v36 = v98;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v23, v24);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
  if ((*(unsigned int (**)(char *, uint64_t))(v25 + 88))(v28, v24) != *MEMORY[0x24BEB9A00])
  {
    v47 = *(void (**)(char *, uint64_t))(v25 + 8);
    v47(v30, v24);
    v47(v28, v24);
LABEL_10:
    v32 = 1;
    v33 = v99;
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t))(v25 + 96))(v28, v24);
  v37 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v35, v37, v36);
  if ((*(unsigned int (**)(char *, uint64_t))(v34 + 88))(v35, v36) != *MEMORY[0x24BEB9950])
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
    swift_release();
    goto LABEL_10;
  }
  v79 = v30;
  v100 = v25;
  v38 = v101;
  (*(void (**)(char *, uint64_t))(v34 + 96))(v35, v36);
  v39 = v90;
  v40 = v91;
  v41 = v89;
  (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v90, v35, v89);
  swift_release();
  v42 = (void *)sub_23F61B86C();
  v43 = sub_23F480E68(v42);
  if (!v44)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v41);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v79, v24);
    v32 = 1;
    v33 = v99;
    goto LABEL_11;
  }
  v45 = v43;
  v46 = v44;
  sub_23F61AC18();
  sub_23F61B338();
  if (v38)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v39, v41);
  }
  else
  {
    v101 = 0;
    swift_bridgeObjectRelease();
    v50 = sub_23F61B530();
    v51 = *(_QWORD *)(v50 + 16);
    v97 = v45;
    v98 = v50;
    if (v51)
    {
      v96 = (char *)v24;
      v52 = v50 + ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80));
      v53 = *(_QWORD *)(v93 + 72);
      v54 = *(void (**)(char *, unint64_t, uint64_t))(v93 + 16);
      sub_23F617BA0();
      v55 = v94;
      v56 = v92;
      while (1)
      {
        v54(v56, v52, v55);
        v57 = sub_23F61BB78();
        v59 = v58;
        if (v57 == sub_23F61AC00() && v59 == v60)
          break;
        v62 = sub_23F61CC64();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v62 & 1) != 0)
          goto LABEL_25;
        v56 = v92;
        v55 = v94;
        (*(void (**)(char *, uint64_t))(v93 + 8))(v92, v94);
        v52 += v53;
        if (!--v51)
        {
          swift_bridgeObjectRelease();
          v63 = 1;
          v64 = v85;
          v41 = v89;
          v24 = (uint64_t)v96;
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_25:
      v64 = v85;
      v41 = v89;
      v67 = v93;
      v55 = v94;
      v65 = v84;
      v66 = (uint64_t)v83;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v66, v92, v55);
      v63 = 0;
      v24 = (uint64_t)v96;
    }
    else
    {
      v63 = 1;
      v64 = v85;
      v55 = v94;
LABEL_23:
      v65 = v84;
      v66 = (uint64_t)v83;
    }
    sub_23F36196C(v66, v63, 1, v55);
    swift_bridgeObjectRelease();
    v68 = v101;
    sub_23F374874(0xD00000000000008ALL, 0x800000023F6366E0, 557, 0xD000000000000047, 0x800000023F6368B0);
    if (!v68)
    {
      sub_23F481698(v66, &qword_256E70268);
      *(_QWORD *)v64 = v97;
      *((_QWORD *)v64 + 1) = v46;
      v69 = *MEMORY[0x24BE56EE0];
      v70 = sub_23F61B410();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 104))(v64, v69, v70);
      v71 = (int *)Resolver;
      v72 = &v64[*(int *)(Resolver + 20)];
      v73 = sub_23F61AC24();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v72, v95, v73);
      v74 = &v64[v71[6]];
      v75 = sub_23F617D08();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v74, v80, v75);
      v76 = v93;
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(&v64[v71[7]], v65, v55);
      v77 = &v64[v71[8]];
      v78 = sub_23F61B140();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v77, v82, v78);
      v33 = v99;
      sub_23F56EF14(v99);
      sub_23F3663AC((uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for QueryResolver);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v65, v94);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v88, v87);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v41);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v79, v24);
      v32 = 0;
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    sub_23F481698(v66, &qword_256E70268);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v88, v87);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v41);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v79, v24);
}

void sub_23F468DD0(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(void);
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  void (*v58)(void);
  char *v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  void (*v62)(char *, char *, uint64_t);
  _QWORD *v63;
  unint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  char v68;
  char *v69;
  unint64_t v70;
  char v71;
  _QWORD *v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  _QWORD v80[2];
  char *v81;
  uint64_t v82;
  uint64_t v83;
  int64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  int64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  _QWORD v105[6];
  _QWORD *v106;

  v98 = a3;
  v99 = (char *)a2;
  v82 = a4;
  v5 = sub_23F35D2E8(&qword_256E74E40);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v100 = (char *)v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v104 = (char *)v80 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v91 = (uint64_t)v80 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v90 = (char *)v80 - v12;
  v13 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (_QWORD *)((char *)v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_23F61B92C();
  v101 = *(_QWORD *)(v16 - 8);
  v102 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v89 = (char *)v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v80 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)v80 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v80 - v25;
  v27 = type metadata accessor for TranscriptValueFetcher(0);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *a1;
  sub_23F61B128();
  *(_QWORD *)&v29[*(int *)(v27 + 20)] = v30;
  sub_23F617BA0();
  sub_23F5F7CC8((uint64_t)v99, v15);
  v31 = v103;
  sub_23F374500(0xD00000000000008ALL, 0x800000023F6366E0, 536, 0xD000000000000046, 0x800000023F636900);
  sub_23F481698((uint64_t)v15, &qword_256E701F0);
  if (v31)
  {
    sub_23F3663AC((uint64_t)v29, type metadata accessor for TranscriptValueFetcher);
    *v98 = v31;
  }
  else
  {
    v80[1] = 0;
    v87 = v24;
    v99 = v21;
    v81 = v26;
    v32 = sub_23F617D08();
    sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
    v103 = v32;
    v33 = v102;
    v34 = sub_23F61BFEC();
    sub_23F38231C(v30, v105);
    v88 = v105[0];
    v83 = v105[1];
    v92 = v105[3];
    v35 = v105[4];
    v84 = (unint64_t)(v105[2] + 64) >> 6;
    sub_23F617BA0();
    v37 = (uint64_t)v90;
    v36 = v91;
    v85 = v29;
    v86 = v5;
    while (1)
    {
      v38 = v89;
      v98 = (_QWORD *)v34;
      if (v35)
      {
        v39 = v5;
        v97 = (v35 - 1) & v35;
        v40 = __clz(__rbit64(v35)) | (v92 << 6);
      }
      else
      {
        v41 = v92 + 1;
        if (__OFADD__(v92, 1))
          goto LABEL_36;
        if (v41 >= v84)
          goto LABEL_33;
        v42 = *(_QWORD *)(v83 + 8 * v41);
        v43 = v92 + 1;
        if (!v42)
        {
          v43 = v92 + 2;
          if (v92 + 2 >= v84)
            goto LABEL_33;
          v42 = *(_QWORD *)(v83 + 8 * v43);
          if (!v42)
          {
            v43 = v92 + 3;
            if (v92 + 3 >= v84)
              goto LABEL_33;
            v42 = *(_QWORD *)(v83 + 8 * v43);
            if (!v42)
            {
              v43 = v92 + 4;
              if (v92 + 4 >= v84)
                goto LABEL_33;
              v42 = *(_QWORD *)(v83 + 8 * v43);
              if (!v42)
              {
                v43 = v92 + 5;
                if (v92 + 5 >= v84)
                  goto LABEL_33;
                v42 = *(_QWORD *)(v83 + 8 * v43);
                if (!v42)
                {
                  v43 = v92 + 6;
                  if (v92 + 6 >= v84)
                    goto LABEL_33;
                  v42 = *(_QWORD *)(v83 + 8 * v43);
                  if (!v42)
                  {
                    v44 = v92 + 7;
                    while (v44 < v84)
                    {
                      v42 = *(_QWORD *)(v83 + 8 * v44++);
                      if (v42)
                      {
                        v43 = v44 - 1;
                        goto LABEL_23;
                      }
                    }
LABEL_33:
                    swift_release();
                    v78 = v101;
                    v79 = v81;
                    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v38, v81, v33);
                    sub_23F61A3E4();
                    (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v33);
                    sub_23F3663AC((uint64_t)v29, type metadata accessor for TranscriptValueFetcher);
                    return;
                  }
                }
              }
            }
          }
        }
LABEL_23:
        v39 = v5;
        v97 = (v42 - 1) & v42;
        v40 = __clz(__rbit64(v42)) + (v43 << 6);
        v92 = v43;
      }
      v45 = v88;
      v46 = *(_QWORD *)(v88 + 48);
      v47 = *(_QWORD *)(v103 - 8);
      v93 = *(_QWORD *)(v47 + 72);
      v96 = v47;
      v48 = *(void (**)(void))(v47 + 16);
      ((void (*)(uint64_t, unint64_t, uint64_t))v48)(v37, v46 + v93 * v40, v103);
      v49 = *(_QWORD *)(v45 + 56);
      v50 = sub_23F61B404();
      v51 = *(_QWORD **)(v50 - 8);
      v52 = v49 + v51[9] * v40;
      v53 = (void (*)(uint64_t, uint64_t, uint64_t))v51[2];
      v53(v37 + *(int *)(v39 + 48), v52, v50);
      sub_23F383004(v37, v36, &qword_256E74E40);
      v54 = *(int *)(v39 + 48);
      v55 = &v104[v54];
      v56 = v36 + v54;
      v48();
      v95 = v55;
      v57 = v55;
      v58 = v48;
      v53((uint64_t)v57, v56, v50);
      v59 = &v100[*(int *)(v39 + 48)];
      v48();
      v53((uint64_t)v59, v56, v50);
      v60 = v87;
      sub_23F61B3E0();
      v61 = (void (*)(char *, uint64_t))v51[1];
      v94 = v50;
      v61(v59, v50);
      v62 = *(void (**)(char *, char *, uint64_t))(v101 + 32);
      v62(v99, v60, v102);
      v63 = v98;
      swift_isUniquelyReferenced_nonNull_native();
      v106 = v63;
      sub_23F3756E8();
      if (__OFADD__(v63[2], (v65 & 1) == 0))
        break;
      v66 = v64;
      v67 = v65;
      sub_23F35D2E8(&qword_256E74ED8);
      v68 = sub_23F61CA18();
      v69 = v104;
      if ((v68 & 1) != 0)
      {
        sub_23F3756E8();
        if ((v67 & 1) != (v71 & 1))
          goto LABEL_37;
        v66 = v70;
      }
      v72 = v106;
      if ((v67 & 1) != 0)
      {
        v33 = v102;
        (*(void (**)(unint64_t, char *, uint64_t))(v101 + 40))(v106[7] + *(_QWORD *)(v101 + 72) * v66, v99, v102);
      }
      else
      {
        v106[(v66 >> 6) + 8] |= 1 << v66;
        ((void (*)(unint64_t, char *, uint64_t))v58)(v72[6] + v66 * v93, v69, v103);
        v33 = v102;
        v62((char *)(v72[7] + *(_QWORD *)(v101 + 72) * v66), v99, v102);
        v73 = v72[2];
        v74 = __OFADD__(v73, 1);
        v75 = v73 + 1;
        if (v74)
          goto LABEL_35;
        v72[2] = v75;
      }
      v34 = (uint64_t)v106;
      swift_bridgeObjectRelease();
      v76 = *(void (**)(char *, uint64_t))(v96 + 8);
      v77 = v103;
      v76(v69, v103);
      v76(v100, v77);
      v61(v95, v94);
      v36 = v91;
      sub_23F481698(v91, &qword_256E74E40);
      v5 = v86;
      v37 = (uint64_t)v90;
      v29 = v85;
      v35 = v97;
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    sub_23F61CC94();
    __break(1u);
  }
}

uint64_t sub_23F4695A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void (*v56)(char *, unint64_t, uint64_t);
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (*v71)(char *, unint64_t, uint64_t);
  char *v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  char *v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  void (*v96)(char *, unint64_t, uint64_t);
  char *v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  void (*v109)(char *, unint64_t, uint64_t);
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  unsigned int (*v154)(char *, uint64_t);
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;

  v164 = a3;
  v167 = a2;
  v162 = sub_23F61A5F4();
  v153 = *(_QWORD *)(v162 - 8);
  MEMORY[0x24BDAC7A8](v162);
  v160 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_23F618FEC();
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v132 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E74EC8);
  MEMORY[0x24BDAC7A8](v6);
  v139 = (char *)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_23F61AF60();
  v163 = *(_QWORD *)(v140 - 8);
  v8 = MEMORY[0x24BDAC7A8](v140);
  v136 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v131 = (char *)&v128 - v10;
  v11 = sub_23F618D28();
  v158 = *(_QWORD *)(v11 - 8);
  v159 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v157 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F617D08();
  v165 = *(_QWORD *)(v13 - 8);
  v166 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F35D2E8(&qword_256E74ED0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v142 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v150 = (char *)&v128 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v147 = (char *)&v128 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v152 = (char *)&v128 - v23;
  v161 = sub_23F61AE1C();
  v168 = *(_QWORD *)(v161 - 8);
  v24 = MEMORY[0x24BDAC7A8](v161);
  v138 = (char *)&v128 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v135 = (char *)&v128 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v145 = (char *)&v128 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v143 = (char *)&v128 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v144 = (char *)&v128 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v141 = (char *)&v128 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v128 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v149 = (char *)&v128 - v39;
  v40 = sub_23F61B2C0();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v155 = (char *)&v128 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)&v128 - v44;
  v46 = sub_23F61AAD4();
  v47 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v49 = (char *)&v128 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = a1;
  sub_23F61B2CC();
  v154 = *(unsigned int (**)(char *, uint64_t))(v41 + 88);
  if (v154(v45, v40) != *MEMORY[0x24BE56C10])
  {
    v146 = v41;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v45, v40);
    v60 = v164;
    v63 = v40;
    v57 = v161;
    v64 = v162;
LABEL_8:
    v65 = v155;
    sub_23F61B2CC();
    if (v154(v65, v63) == *MEMORY[0x24BE56B60])
    {
      (*(void (**)(char *, uint64_t))(v146 + 96))(v65, v63);
      v66 = (*(uint64_t (**)(char *, char *, uint64_t))(v153 + 32))(v160, v65, v64);
      v67 = MEMORY[0x24266DAD4](v66);
      v68 = *(_QWORD *)(v67 + 16);
      if (v68)
      {
        v69 = v67 + ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80));
        v70 = *(_QWORD *)(v168 + 72);
        v71 = *(void (**)(char *, unint64_t, uint64_t))(v168 + 16);
        v72 = v145;
        while (1)
        {
          v71(v72, v69, v57);
          sub_23F61AE10();
          v73 = sub_23F617CD8();
          (*(void (**)(char *, uint64_t))(v165 + 8))(v15, v166);
          if ((v73 & 1) != 0)
            break;
          (*(void (**)(char *, uint64_t))(v168 + 8))(v72, v57);
          v69 += v70;
          if (!--v68)
          {
            v74 = 1;
            v60 = v164;
            v64 = v162;
            goto LABEL_26;
          }
        }
        v91 = (uint64_t)v150;
        (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v150, v72, v57);
        v74 = 0;
        v60 = v164;
        v64 = v162;
      }
      else
      {
        v74 = 1;
LABEL_26:
        v91 = (uint64_t)v150;
      }
      sub_23F36196C(v91, v74, 1, v57);
      swift_bridgeObjectRelease();
      if (sub_23F36195C(v91, 1, v57) != 1)
      {
        v101 = v168;
        v102 = v143;
        (*(void (**)(char *, uint64_t, uint64_t))(v168 + 32))(v143, v91, v57);
        v103 = v157;
        sub_23F61ADF8();
        sub_23F618CE0();
        (*(void (**)(char *, uint64_t))(v158 + 8))(v103, v159);
        (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v57);
        return (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v160, v64);
      }
      sub_23F481698(v91, &qword_256E74ED0);
      v92 = MEMORY[0x24266DAEC]();
      v93 = *(_QWORD *)(v92 + 16);
      if (v93)
      {
        v94 = v92 + ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80));
        v95 = *(_QWORD *)(v168 + 72);
        v96 = *(void (**)(char *, unint64_t, uint64_t))(v168 + 16);
        v97 = v138;
        while (1)
        {
          v96(v97, v94, v57);
          sub_23F61AE10();
          v98 = sub_23F617CD8();
          (*(void (**)(char *, uint64_t))(v165 + 8))(v15, v166);
          if ((v98 & 1) != 0)
            break;
          (*(void (**)(char *, uint64_t))(v168 + 8))(v97, v57);
          v94 += v95;
          if (!--v93)
          {
            v99 = 1;
            v60 = v164;
            v64 = v162;
            v100 = (uint64_t)v142;
            goto LABEL_48;
          }
        }
        v100 = (uint64_t)v142;
        (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v142, v97, v57);
        v99 = 0;
        v60 = v164;
        v64 = v162;
      }
      else
      {
        v99 = 1;
        v100 = (uint64_t)v142;
      }
LABEL_48:
      sub_23F36196C(v100, v99, 1, v57);
      swift_bridgeObjectRelease();
      if (sub_23F36195C(v100, 1, v57) != 1)
      {
        v122 = v168;
        v123 = v135;
        (*(void (**)(char *, uint64_t, uint64_t))(v168 + 32))(v135, v100, v57);
        v124 = v157;
        sub_23F61ADF8();
        sub_23F618CE0();
        (*(void (**)(char *, uint64_t))(v158 + 8))(v124, v159);
        (*(void (**)(char *, uint64_t))(v122 + 8))(v123, v57);
        return (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v160, v64);
      }
      (*(void (**)(char *, uint64_t))(v153 + 8))(v160, v64);
      sub_23F481698(v100, &qword_256E74ED0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v146 + 8))(v65, v63);
    }
    v119 = sub_23F61B92C();
    v120 = v60;
    v121 = 1;
    return sub_23F36196C(v120, v121, 1, v119);
  }
  v50 = *(void (**)(char *, uint64_t))(v41 + 96);
  v129 = v40;
  v50(v45, v40);
  v148 = v47;
  v51 = (*(uint64_t (**)(char *, char *, uint64_t))(v47 + 32))(v49, v45, v46);
  v151 = v49;
  v52 = MEMORY[0x24266DF9C](v51);
  v53 = *(_QWORD *)(v52 + 16);
  v137 = v46;
  v130 = v52;
  if (v53)
  {
    v54 = v52 + ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80));
    v55 = *(_QWORD *)(v168 + 72);
    v56 = *(void (**)(char *, unint64_t, uint64_t))(v168 + 16);
    v57 = v161;
    while (1)
    {
      v56(v38, v54, v57);
      sub_23F61AE10();
      v58 = sub_23F617CD8();
      (*(void (**)(char *, uint64_t))(v165 + 8))(v15, v166);
      if ((v58 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t))(v168 + 8))(v38, v57);
      v54 += v55;
      if (!--v53)
      {
        v59 = 1;
        v60 = v164;
        v61 = v137;
        v62 = v148;
        goto LABEL_16;
      }
    }
    v75 = (uint64_t)v152;
    (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v152, v38, v57);
    v59 = 0;
    v60 = v164;
    v61 = v137;
    v62 = v148;
  }
  else
  {
    v61 = v46;
    v59 = 1;
    v60 = v164;
    v62 = v148;
    v57 = v161;
LABEL_16:
    v75 = (uint64_t)v152;
  }
  sub_23F36196C(v75, v59, 1, v57);
  swift_bridgeObjectRelease();
  if (sub_23F36195C(v75, 1, v57) != 1)
  {
    v87 = v168;
    v88 = v149;
    (*(void (**)(char *, uint64_t, uint64_t))(v168 + 32))(v149, v75, v57);
    v89 = v157;
    sub_23F61ADF8();
    sub_23F618CE0();
    (*(void (**)(char *, uint64_t))(v158 + 8))(v89, v159);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v57);
    v90 = *(uint64_t (**)(char *, uint64_t))(v62 + 8);
    return v90(v151, v61);
  }
  sub_23F481698(v75, &qword_256E74ED0);
  v76 = MEMORY[0x24266DFA8]();
  v77 = *(_QWORD *)(v76 + 16);
  if (v77)
  {
    v78 = *(unsigned __int8 *)(v168 + 80);
    v161 = v76;
    v79 = v76 + ((v78 + 32) & ~v78);
    v80 = *(_QWORD *)(v168 + 72);
    v81 = *(void (**)(char *, uint64_t, uint64_t))(v168 + 16);
    v82 = v144;
    while (1)
    {
      v81(v82, v79, v57);
      sub_23F61AE10();
      v83 = sub_23F617CD8();
      (*(void (**)(char *, uint64_t))(v165 + 8))(v15, v166);
      if ((v83 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t))(v168 + 8))(v82, v57);
      v79 += v80;
      if (!--v77)
      {
        v84 = 1;
        v60 = v164;
        v85 = v162;
        v61 = v137;
        v86 = (uint64_t)v147;
        goto LABEL_37;
      }
    }
    v86 = (uint64_t)v147;
    (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v147, v82, v57);
    v84 = 0;
    v60 = v164;
    v85 = v162;
    v61 = v137;
  }
  else
  {
    v84 = 1;
    v85 = v162;
    v86 = (uint64_t)v147;
  }
LABEL_37:
  sub_23F36196C(v86, v84, 1, v57);
  swift_bridgeObjectRelease();
  if (sub_23F36195C(v86, 1, v57) != 1)
  {
    v116 = v168;
    v117 = v141;
    (*(void (**)(char *, uint64_t, uint64_t))(v168 + 32))(v141, v86, v57);
    v118 = v157;
    sub_23F61ADF8();
    sub_23F618CE0();
    (*(void (**)(char *, uint64_t))(v158 + 8))(v118, v159);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v117, v57);
    v90 = *(uint64_t (**)(char *, uint64_t))(v148 + 8);
    return v90(v151, v61);
  }
  sub_23F481698(v86, &qword_256E74ED0);
  v105 = sub_23F61AAB0();
  v106 = *(_QWORD *)(v105 + 16);
  v146 = v41;
  v161 = v105;
  if (v106)
  {
    v107 = v105 + ((*(unsigned __int8 *)(v163 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80));
    v108 = *(_QWORD *)(v163 + 72);
    v109 = *(void (**)(char *, unint64_t, uint64_t))(v163 + 16);
    v110 = v140;
    v111 = v136;
    while (1)
    {
      v109(v111, v107, v110);
      v112 = v110;
      sub_23F61AF54();
      v113 = sub_23F617CD8();
      (*(void (**)(char *, uint64_t))(v165 + 8))(v15, v166);
      if ((v113 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t))(v163 + 8))(v111, v112);
      v107 += v108;
      --v106;
      v110 = v112;
      if (!v106)
      {
        v114 = 1;
        v60 = v164;
        v64 = v162;
        v115 = (uint64_t)v139;
        goto LABEL_56;
      }
    }
    v115 = (uint64_t)v139;
    (*(void (**)(char *, char *, uint64_t))(v163 + 32))(v139, v111, v112);
    v114 = 0;
    v64 = v162;
    v110 = v112;
    v60 = v164;
  }
  else
  {
    v114 = 1;
    v110 = v140;
    v115 = (uint64_t)v139;
    v64 = v85;
  }
LABEL_56:
  sub_23F36196C(v115, v114, 1, v110);
  swift_bridgeObjectRelease();
  if (sub_23F36195C(v115, 1, v110) == 1)
  {
    (*(void (**)(char *, uint64_t))(v148 + 8))(v151, v137);
    sub_23F481698(v115, &qword_256E74EC8);
    v63 = v129;
    goto LABEL_8;
  }
  v125 = v163;
  v126 = v131;
  (*(void (**)(char *, uint64_t, uint64_t))(v163 + 32))(v131, v115, v110);
  v127 = v132;
  sub_23F61AF48();
  sub_23F618FD4();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v127, v134);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v126, v110);
  (*(void (**)(char *, uint64_t))(v148 + 8))(v151, v137);
  v119 = sub_23F61B92C();
  v120 = v60;
  v121 = 0;
  return sub_23F36196C(v120, v121, 1, v119);
}

uint64_t sub_23F46A3E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t *, _QWORD);
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[4];
  uint64_t v31;

  v29 = a5;
  v10 = sub_23F61AA14();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v31 = a4;
  sub_23F617BA0();
  v14 = sub_23F61A9A8();
  sub_23F617BA0();
  v27 = a2;
  sub_23F452B80(MEMORY[0x24BEE4B00], v14, a2, a3);
  sub_23F617BA0();
  sub_23F47115C();
  v16 = v15;
  swift_bridgeObjectRelease();
  v30[0] = v16;
  sub_23F47D468(v30);
  if (v5)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F51BEF8();
    v18 = v17;
    swift_bridgeObjectRelease();
    swift_release();
    v19 = *(_QWORD *)(sub_23F61A9CC() + 16);
    v20 = swift_bridgeObjectRelease();
    if (v19)
    {
      v21 = sub_23F61A9CC();
      MEMORY[0x24BDAC7A8](v21);
      *(&v26 - 4) = (uint64_t)&v31;
      *(&v26 - 3) = v28;
      *(&v26 - 2) = v18;
      sub_23F51C95C(MEMORY[0x24BEE4B08], (void (*)(uint64_t *, uint64_t *))sub_23F481474, (uint64_t)(&v26 - 6), v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23F61A9D8();
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v29, v13, v10);
    }
    else
    {
      if (*(_QWORD *)(v18 + 16))
      {
        MEMORY[0x24BDAC7A8](v20);
        v22 = v27;
        *(&v26 - 4) = v28;
        *(&v26 - 3) = v22;
        *(&v26 - 2) = a3;
        *(&v26 - 1) = v18;
        sub_23F617BA0();
        v23 = sub_23F51C95C(MEMORY[0x24BEE4B08], (void (*)(uint64_t *, uint64_t *))sub_23F481490, (uint64_t)(&v26 - 6), a4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a4 = v23;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_23F617BA0();
      v24 = (void (*)(uint64_t *, _QWORD))sub_23F61A9C0();
      sub_23F3601B8(a4);
      v24(v30, 0);
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v29, v13, v10);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F46A6DC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t i;
  BOOL v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  _QWORD *v75;
  char v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _BOOL8 v80;
  char v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t result;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  int64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  _QWORD *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;

  v7 = v6;
  v109 = a5;
  v110 = a6;
  v90 = a1;
  v10 = sub_23F61B404();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v112 = (char *)&v90 - v15;
  v16 = sub_23F35D2E8(&qword_256E70388);
  MEMORY[0x24BDAC7A8](v16);
  v101 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_23F61A1D4();
  v114 = *(_QWORD **)(v118 - 8);
  v18 = MEMORY[0x24BDAC7A8](v118);
  v116 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v117 = (char *)&v90 - v20;
  v21 = sub_23F35D2E8(&qword_256E6FB08);
  MEMORY[0x24BDAC7A8](v21);
  v103 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_23F35D2E8(&qword_256E70280);
  v92 = *(_QWORD *)(v108 - 8);
  v23 = MEMORY[0x24BDAC7A8](v108);
  v102 = (uint64_t *)((char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = MEMORY[0x24BDAC7A8](v23);
  v107 = (uint64_t *)((char *)&v90 - v26);
  MEMORY[0x24BDAC7A8](v25);
  v106 = (uint64_t *)((char *)&v90 - v27);
  v28 = *a2;
  v29 = *(_QWORD *)(a3 + 56);
  v93 = a3 + 56;
  v30 = 1 << *(_BYTE *)(a3 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & v29;
  v94 = (unint64_t)(v30 + 63) >> 6;
  sub_23F617BA0();
  v95 = a3;
  sub_23F617BA0();
  v33 = 0;
  v119 = v10;
  v115 = v11;
  v91 = v14;
  if (!v32)
    goto LABEL_5;
LABEL_4:
  v97 = (v32 - 1) & v32;
  for (i = __clz(__rbit64(v32)) | (v33 << 6); ; i = __clz(__rbit64(v36)) + (v33 << 6))
  {
    v38 = *(_QWORD *)(*(_QWORD *)(v95 + 48) + 8 * i);
    v39 = v110;
    sub_23F617BA0();
    v100 = v38;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F452B80(MEMORY[0x24BEE4B00], v28, v109, v39);
    sub_23F617BA0();
    sub_23F47115C();
    v41 = v40;
    swift_bridgeObjectRelease();
    v120 = v41;
    sub_23F47D468(&v120);
    if (v7)
      goto LABEL_52;
    v98 = v33;
    swift_bridgeObjectRelease();
    sub_23F51BEF8();
    v43 = v42;
    swift_bridgeObjectRelease();
    swift_release();
    v44 = *(_QWORD *)(v43 + 16);
    v99 = 0;
    if (v44)
    {
      v113 = v28;
      v105 = (char *)v106 + *(int *)(v108 + 48);
      v45 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
      v96 = v43;
      v46 = v43 + v45;
      v104 = *(_QWORD *)(v92 + 72);
      v47 = v107;
      do
      {
        v48 = v106;
        sub_23F382EF8(v46, (uint64_t)v106, &qword_256E70280);
        v49 = v108;
        v50 = (char *)v47 + *(int *)(v108 + 48);
        v51 = *v48;
        *v47 = v51;
        v52 = v115;
        v111 = *(void (**)(char *, char *, uint64_t))(v115 + 32);
        v111(v50, v105, v10);
        v53 = sub_23F61C0E8();
        v54 = objc_msgSend((id)v53, sel_key, v90);

        sub_23F61C10C();
        v55 = (char *)v102 + *(int *)(v49 + 48);
        *v102 = v51;
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v55, v50, v119);
        v56 = v117;
        sub_23F61A1BC();
        v57 = v55;
        v10 = v119;
        (*(void (**)(char *, uint64_t))(v52 + 8))(v57, v119);
        v58 = v113;
        sub_23F617BA0();
        sub_23F375614();
        v60 = v59;
        LOBYTE(v53) = v61;
        swift_bridgeObjectRelease();
        if ((v53 & 1) != 0)
        {
          swift_isUniquelyReferenced_nonNull_native();
          v120 = v58;
          sub_23F35D2E8(&qword_256E6FB50);
          v56 = v117;
          sub_23F61CA18();
          v62 = (void (*)(uint64_t, uint64_t))v114[1];
          v63 = v118;
          v62(*(_QWORD *)(v120 + 48) + v114[9] * v60, v118);
          v64 = v120;
          v65 = *(_QWORD *)(v120 + 56) + *(_QWORD *)(v52 + 72) * v60;
          v66 = (uint64_t)v103;
          v111(v103, (char *)v65, v10);
          sub_23F3B121C(&qword_256E6FA98, (void (*)(uint64_t))MEMORY[0x24BE55070]);
          v113 = v64;
          sub_23F61CA30();
          swift_bridgeObjectRelease();
          sub_23F36196C(v66, 0, 1, v10);
        }
        else
        {
          v66 = (uint64_t)v103;
          sub_23F36196C((uint64_t)v103, 1, 1, v10);
          v62 = (void (*)(uint64_t, uint64_t))v114[1];
          v63 = v118;
        }
        v62((uint64_t)v56, v63);
        sub_23F481698(v66, &qword_256E6FB08);
        v47 = v107;
        sub_23F481698((uint64_t)v107, &qword_256E70280);
        v46 += v104;
        --v44;
      }
      while (v44);
      swift_bridgeObjectRelease();
      v11 = v115;
      v28 = v113;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_23F617BA0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v121 = (_QWORD *)v28;
    sub_23F5E2968(&v120, v100, sub_23F47D4EC, 0);
    sub_23F617BA0();
    v68 = (uint64_t)v101;
    sub_23F5E29A8();
    v69 = sub_23F35D2E8(&qword_256E70390);
    v70 = v28;
    if (sub_23F36195C(v68, 1, v69) != 1)
      break;
LABEL_40:
    swift_bridgeObjectRelease();
    sub_23F382E18();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = v70;
    v33 = v98;
    v7 = v99;
    v32 = v97;
    if (v97)
      goto LABEL_4;
LABEL_5:
    v35 = __OFADD__(v33++, 1);
    if (v35)
      goto LABEL_49;
    if (v33 >= v94)
    {
LABEL_46:
      swift_release();
      sub_23F4727A0(&v120, v28, (void (*)(uint64_t *, uint64_t))sub_23F480ED4, (uint64_t (*)(uint64_t, uint64_t))sub_23F491114, (uint64_t)&qword_256E71A48, (uint64_t)&qword_256E74E80);
      return swift_bridgeObjectRelease();
    }
    v36 = *(_QWORD *)(v93 + 8 * v33);
    if (!v36)
    {
      v37 = v33 + 1;
      if (v33 + 1 >= v94)
        goto LABEL_46;
      v36 = *(_QWORD *)(v93 + 8 * v37);
      if (!v36)
      {
        v37 = v33 + 2;
        if (v33 + 2 >= v94)
          goto LABEL_46;
        v36 = *(_QWORD *)(v93 + 8 * v37);
        if (!v36)
        {
          v37 = v33 + 3;
          if (v33 + 3 >= v94)
            goto LABEL_46;
          v36 = *(_QWORD *)(v93 + 8 * v37);
          if (!v36)
          {
            while (1)
            {
              v33 = v37 + 1;
              if (__OFADD__(v37, 1))
                goto LABEL_50;
              if (v33 >= v94)
                goto LABEL_46;
              v36 = *(_QWORD *)(v93 + 8 * v33);
              ++v37;
              if (v36)
                goto LABEL_15;
            }
          }
        }
      }
      v33 = v37;
    }
LABEL_15:
    v97 = (v36 - 1) & v36;
  }
  v113 = v28;
  v71 = (void (*)(char *, uint64_t, uint64_t))v114[4];
  v72 = v91;
  while (1)
  {
    v73 = v68 + *(int *)(v69 + 48);
    v71(v116, v68, v118);
    v74 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
    v74(v112, v73, v119);
    v75 = v121;
    sub_23F375614();
    v78 = v77;
    v79 = v75[2];
    v80 = (v76 & 1) == 0;
    if (__OFADD__(v79, v80))
      break;
    v81 = v76;
    if (v75[3] < v79 + v80)
    {
      sub_23F513968();
      sub_23F375614();
      if ((v81 & 1) != (v83 & 1))
        goto LABEL_51;
      v78 = v82;
LABEL_31:
      v84 = v118;
      if ((v81 & 1) != 0)
        goto LABEL_36;
      goto LABEL_32;
    }
    v84 = v118;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23F35D2E8(&qword_256E6FB50);
      sub_23F61CA24();
      goto LABEL_31;
    }
    if ((v76 & 1) != 0)
    {
LABEL_36:
      v88 = v119;
      v74(v72, (uint64_t)v112, v119);
      ((void (*)(char *, uint64_t))v114[1])(v116, v84);
      v11 = v115;
      (*(void (**)(unint64_t, char *, uint64_t))(v115 + 40))(v121[7] + *(_QWORD *)(v115 + 72) * v78, v72, v88);
      goto LABEL_37;
    }
LABEL_32:
    v85 = v121;
    v121[(v78 >> 6) + 8] |= 1 << v78;
    v71((char *)(v85[6] + v114[9] * v78), (uint64_t)v116, v84);
    v11 = v115;
    v74((char *)(v85[7] + *(_QWORD *)(v115 + 72) * v78), (uint64_t)v112, v119);
    v86 = v85[2];
    v35 = __OFADD__(v86, 1);
    v87 = v86 + 1;
    if (v35)
      goto LABEL_48;
    v85[2] = v87;
LABEL_37:
    v68 = (uint64_t)v101;
    sub_23F5E29A8();
    v69 = sub_23F35D2E8(&qword_256E70390);
    isUniquelyReferenced_nonNull_native = 1;
    if (sub_23F36195C(v68, 1, v69) == 1)
    {
      v70 = (uint64_t)v121;
      v10 = v119;
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  sub_23F61CC94();
  __break(1u);
LABEL_52:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23F46B138(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  char *v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t result;
  _QWORD v55[4];
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _QWORD *v72;

  v70 = a6;
  v55[3] = a1;
  v10 = sub_23F61B404();
  v68 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v59 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F61A1D4();
  v64 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v71 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_23F35D2E8(&qword_256E70280);
  v14 = *(_QWORD *)(v63 - 8);
  v15 = MEMORY[0x24BDAC7A8](v63);
  v58 = (_QWORD *)((char *)v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v15);
  v67 = (_QWORD *)((char *)v55 - v18);
  MEMORY[0x24BDAC7A8](v17);
  v62 = (_QWORD *)((char *)v55 - v19);
  v20 = sub_23F35D2E8(&qword_256E74EF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *a2;
  sub_23F3B121C(&qword_256E6FA98, (void (*)(uint64_t))MEMORY[0x24BE55070]);
  v65 = v12;
  v69 = v10;
  v24 = sub_23F61BFEC();
  sub_23F617BA0();
  v60 = a4;
  v61 = a5;
  sub_23F452B80(MEMORY[0x24BEE4B00], v23, a4, a5);
  sub_23F617BA0();
  sub_23F47115C();
  v26 = v25;
  swift_bridgeObjectRelease();
  v72 = (_QWORD *)v26;
  sub_23F47D468((uint64_t *)&v72);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    sub_23F51BEF8();
    v28 = v27;
    swift_release();
    if (*(_QWORD *)(v28 + 16))
    {
      sub_23F3F1444(v70, (uint64_t)v22);
      v29 = v63;
      if (sub_23F36195C((uint64_t)v22, 1, v63) == 1)
      {
        swift_bridgeObjectRelease();
        sub_23F481698((uint64_t)v22, &qword_256E74EF0);
LABEL_19:
        sub_23F4727A0(&v72, v24, (void (*)(uint64_t *, uint64_t))sub_23F480ED4, (uint64_t (*)(uint64_t, uint64_t))sub_23F491114, (uint64_t)&qword_256E71A48, (uint64_t)&qword_256E74E80);
        return swift_bridgeObjectRelease();
      }
      v30 = *(_QWORD *)v22;
      (*(void (**)(char *, uint64_t))(v68 + 8))(&v22[*(int *)(v29 + 48)], v69);
      v70 = v30 + 1;
      if (__OFADD__(v30, 1))
        goto LABEL_23;
      v31 = *(_QWORD *)(v28 + 16);
      if (v31)
      {
        v55[1] = v28;
        v55[2] = 0;
        v57 = (char *)v62 + *(int *)(v29 + 48);
        v32 = v28 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
        v56 = *(_QWORD *)(v14 + 72);
        while (1)
        {
          v66 = v31;
          v33 = v62;
          sub_23F382EF8(v32, (uint64_t)v62, &qword_256E70280);
          v34 = *(int *)(v29 + 48);
          v35 = v67;
          v36 = (char *)v67 + v34;
          v37 = *v33;
          *v67 = *v33;
          v38 = v24;
          v39 = v68;
          v40 = v69;
          v41 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
          v41((char *)v35 + v34, v57, v69);
          sub_23F617BA0();
          sub_23F61A1BC();
          v42 = (char *)v58 + *(int *)(v29 + 48);
          *v58 = v37;
          (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v42, v36, v40);
          v43 = v59;
          v41(v59, v42, v40);
          swift_isUniquelyReferenced_nonNull_native();
          v72 = (_QWORD *)v38;
          sub_23F375614();
          if (__OFADD__(*(_QWORD *)(v38 + 16), (v45 & 1) == 0))
            break;
          v46 = v44;
          v47 = v45;
          sub_23F35D2E8(&qword_256E6FB50);
          if ((sub_23F61CA18() & 1) != 0)
          {
            sub_23F375614();
            if ((v47 & 1) != (v49 & 1))
              goto LABEL_24;
            v46 = v48;
          }
          v50 = v72;
          if ((v47 & 1) != 0)
          {
            (*(void (**)(unint64_t, char *, uint64_t))(v68 + 40))(v72[7] + *(_QWORD *)(v68 + 72) * v46, v43, v69);
          }
          else
          {
            v72[(v46 >> 6) + 8] |= 1 << v46;
            (*(void (**)(unint64_t, char *, uint64_t))(v64 + 16))(v50[6] + *(_QWORD *)(v64 + 72) * v46, v71, v65);
            v41((char *)(v50[7] + *(_QWORD *)(v68 + 72) * v46), v43, v69);
            v51 = v50[2];
            v52 = __OFADD__(v51, 1);
            v53 = v51 + 1;
            if (v52)
              goto LABEL_22;
            v50[2] = v53;
          }
          v24 = (uint64_t)v72;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v64 + 8))(v71, v65);
          sub_23F481698((uint64_t)v67, &qword_256E70280);
          v52 = __OFADD__(v70++, 1);
          v29 = v63;
          if (v52)
            goto LABEL_21;
          v32 += v56;
          v31 = v66 - 1;
          if (v66 == 1)
            goto LABEL_18;
        }
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        sub_23F61CC94();
        __break(1u);
        goto LABEL_25;
      }
    }
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
LABEL_25:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23F46B6C8(uint64_t a1, _QWORD **a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  BOOL v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  unint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  void (*v62)(uint64_t, char *, uint64_t);
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t inited;
  uint64_t *v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t *v90;
  int v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  char v95;
  char v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  char *v109;
  unint64_t v110;
  char v111;
  unint64_t v112;
  char v113;
  unint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t result;
  _QWORD v119[2];
  uint64_t v120;
  int64_t v121;
  uint64_t v122;
  uint64_t v123;
  int64_t v124;
  uint64_t v125;
  __int128 v126;
  uint64_t *v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  int64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(char *, unint64_t, uint64_t);
  _QWORD *v144;
  uint64_t v145;
  char *v146;
  uint64_t *v147;
  uint64_t v148;
  void (*v149)(char *, char *, uint64_t);
  uint64_t v150;
  _QWORD *v151;
  char *v152;
  void (*v153)(char *, char *, uint64_t);
  uint64_t v154;
  _QWORD *v155;
  uint64_t *v156;
  char *v157;
  char *v158;
  char *v159;
  _QWORD *v160;

  v6 = v5;
  v129 = a5;
  v119[1] = a1;
  v9 = sub_23F61B404();
  v142 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v157 = (char *)v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_23F35D2E8(&qword_256E70280);
  v125 = *(_QWORD *)(v150 - 8);
  v11 = MEMORY[0x24BDAC7A8](v150);
  v144 = (_QWORD *)((char *)v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v11);
  v156 = (_QWORD *)((char *)v119 - v14);
  MEMORY[0x24BDAC7A8](v13);
  v147 = (_QWORD *)((char *)v119 - v15);
  v16 = sub_23F35D2E8(&qword_256E74EF0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v128 = (_QWORD *)((char *)v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v17);
  v127 = (_QWORD *)((char *)v119 - v19);
  v154 = sub_23F61A1D4();
  v151 = *(_QWORD **)(v154 - 8);
  v20 = MEMORY[0x24BDAC7A8](v154);
  v158 = (char *)v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v119 - v22;
  v134 = sub_23F35D2E8(&qword_256E6FAF8);
  v24 = MEMORY[0x24BDAC7A8](v134);
  v133 = (char *)v119 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v138 = (uint64_t)v119 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v132 = (char *)v119 - v28;
  v29 = *a2;
  v30 = *a3;
  v31 = *(_QWORD *)(*a3 + 56);
  v120 = *a3 + 56;
  v32 = 1 << *(_BYTE *)(v30 + 32);
  if (v32 < 64)
    v33 = ~(-1 << v32);
  else
    v33 = -1;
  v34 = v33 & v31;
  v121 = (unint64_t)(v32 + 63) >> 6;
  sub_23F617BA0();
  v122 = v30;
  sub_23F617BA0();
  v35 = 0;
  v126 = xmmword_23F61E980;
  v152 = v23;
  if (!v34)
    goto LABEL_6;
  while (2)
  {
    v123 = (v34 - 1) & v34;
    v124 = v35;
    v36 = __clz(__rbit64(v34)) | (v35 << 6);
LABEL_17:
    v41 = *(_QWORD *)(*(_QWORD *)(v122 + 48) + 8 * v36);
    v42 = *(_QWORD *)(v41 + 64);
    v130 = v41 + 64;
    v43 = 1 << *(_BYTE *)(v41 + 32);
    if (v43 < 64)
      v44 = ~(-1 << v43);
    else
      v44 = -1;
    v45 = v44 & v42;
    v131 = (unint64_t)(v43 + 63) >> 6;
    swift_bridgeObjectRetain_n();
    v46 = 0;
    v139 = v41;
    while (1)
    {
      v155 = v29;
      if (v45)
      {
        v140 = v6;
        v136 = (v45 - 1) & v45;
        v137 = v46;
        v47 = __clz(__rbit64(v45)) | (v46 << 6);
        goto LABEL_34;
      }
      v37 = __OFADD__(v46, 1);
      v48 = v46 + 1;
      if (v37)
        goto LABEL_78;
      if (v48 >= v131)
        break;
      v49 = *(_QWORD *)(v130 + 8 * v48);
      if (!v49)
      {
        v50 = v48 + 1;
        if (v48 + 1 >= v131)
          break;
        v49 = *(_QWORD *)(v130 + 8 * v50);
        if (!v49)
        {
          v50 = v48 + 2;
          if (v48 + 2 >= v131)
            break;
          v49 = *(_QWORD *)(v130 + 8 * v50);
          if (!v49)
          {
            v50 = v48 + 3;
            if (v48 + 3 >= v131)
              break;
            v49 = *(_QWORD *)(v130 + 8 * v50);
            if (!v49)
            {
              while (1)
              {
                v48 = v50 + 1;
                if (__OFADD__(v50, 1))
                  goto LABEL_79;
                if (v48 >= v131)
                  goto LABEL_67;
                v49 = *(_QWORD *)(v130 + 8 * v48);
                ++v50;
                if (v49)
                  goto LABEL_33;
              }
            }
          }
        }
        v48 = v50;
      }
LABEL_33:
      v140 = v6;
      v136 = (v49 - 1) & v49;
      v137 = v48;
      v47 = __clz(__rbit64(v49)) + (v48 << 6);
LABEL_34:
      v51 = *(_QWORD *)(v41 + 48);
      v52 = v151;
      v141 = v151[9];
      v143 = (void (*)(char *, unint64_t, uint64_t))v151[2];
      v53 = v132;
      v54 = v154;
      v143(v132, v51 + v141 * v47, v154);
      v55 = *(_QWORD *)(v41 + 56);
      v56 = v142;
      v148 = *(_QWORD *)(v142 + 72);
      v57 = v55 + v148 * v47;
      v58 = v134;
      v59 = &v53[*(int *)(v134 + 48)];
      v60 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 16);
      v60(v59, v57, v9);
      v61 = v138;
      v159 = (char *)(v138 + *(int *)(v58 + 48));
      v62 = (void (*)(uint64_t, char *, uint64_t))v52[4];
      v62(v138, v53, v54);
      v63 = v159;
      v153 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
      v153(v159, v59, v9);
      v64 = *(int *)(v58 + 48);
      v65 = v133;
      v66 = &v133[v64];
      v143(v133, v61, v54);
      v149 = (void (*)(char *, char *, uint64_t))v60;
      v60(v66, (uint64_t)v63, v9);
      v62((uint64_t)v152, v65, v54);
      v159 = *(char **)(v56 + 8);
      ((void (*)(char *, uint64_t))v159)(v66, v9);
      v67 = (uint64_t)v155;
      sub_23F617BA0();
      v68 = sub_23F61A1C8();
      v70 = v69;
      sub_23F617BA0();
      v71 = (_QWORD *)MEMORY[0x24BEE4B00];
      v72 = v68;
      v73 = v140;
      sub_23F452B80(MEMORY[0x24BEE4B00], v67, v72, v70);
      sub_23F617BA0();
      sub_23F47115C();
      v75 = v74;
      swift_bridgeObjectRelease();
      v160 = (_QWORD *)v75;
      sub_23F47D468((uint64_t *)&v160);
      if (v73)
        goto LABEL_83;
      swift_bridgeObjectRelease();
      sub_23F51BEF8();
      v77 = v76;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v78 = sub_23F61A1C8();
      v80 = v79;
      sub_23F617BA0();
      sub_23F452B80(v71, v139, v78, v80);
      sub_23F617BA0();
      sub_23F47115C();
      v82 = v81;
      swift_bridgeObjectRelease();
      v160 = (_QWORD *)v82;
      sub_23F47D468((uint64_t *)&v160);
      v83 = v150;
      v6 = 0;
      swift_bridgeObjectRelease();
      sub_23F51BEF8();
      v85 = v84;
      swift_bridgeObjectRelease();
      swift_release();
      if (*(_QWORD *)(v85 + 16))
      {
        v135 = v85;
        sub_23F35D2E8(&qword_256E6FE00);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v126;
        v87 = v127;
        sub_23F3F1444(v77, (uint64_t)v127);
        swift_bridgeObjectRelease();
        if (sub_23F36195C((uint64_t)v87, 1, v83) == 1)
        {
          sub_23F481698((uint64_t)v87, &qword_256E74EF0);
          v88 = -1;
        }
        else
        {
          v88 = *v87;
          ((void (*)(char *, uint64_t))v159)((char *)v87 + *(int *)(v83 + 48), v9);
        }
        *(_QWORD *)(inited + 32) = v88;
        v90 = v128;
        sub_23F3F1444(v129, (uint64_t)v128);
        v91 = sub_23F36195C((uint64_t)v90, 1, v83);
        v140 = 0;
        if (v91 == 1)
        {
          sub_23F481698((uint64_t)v90, &qword_256E74EF0);
          v92 = -1;
        }
        else
        {
          v93 = v90;
          v92 = *v90;
          ((void (*)(char *, uint64_t))v159)((char *)v93 + *(int *)(v83 + 48), v9);
        }
        *(_QWORD *)(inited + 40) = v92;
        v94 = sub_23F385B28((_QWORD *)inited);
        v96 = v95;
        swift_setDeallocating();
        if ((v96 & 1) != 0)
          v97 = -1;
        else
          v97 = v94;
        v159 = (char *)(v97 + 1);
        if (__OFADD__(v97, 1))
        {
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
          goto LABEL_80;
        }
        v98 = *(_QWORD **)(v135 + 16);
        if (v98)
        {
          v146 = (char *)v147 + *(int *)(v83 + 48);
          v99 = v135 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
          v145 = *(_QWORD *)(v125 + 72);
          v29 = v155;
          while (1)
          {
            v155 = v98;
            v100 = (uint64_t)v29;
            v101 = v147;
            sub_23F382EF8(v99, (uint64_t)v147, &qword_256E70280);
            v102 = *(int *)(v83 + 48);
            v103 = v156;
            v104 = v83;
            v105 = (char *)v156 + v102;
            v106 = *v101;
            *v156 = *v101;
            v107 = v153;
            v153((char *)v103 + v102, v146, v9);
            sub_23F61A1C8();
            v108 = v9;
            sub_23F61A1BC();
            v109 = (char *)v144 + *(int *)(v104 + 48);
            *v144 = v106;
            v149(v109, v105, v9);
            v107(v157, v109, v9);
            swift_isUniquelyReferenced_nonNull_native();
            v160 = (_QWORD *)v100;
            v29 = (_QWORD *)v100;
            sub_23F375614();
            if (__OFADD__(*(_QWORD *)(v100 + 16), (v111 & 1) == 0))
              break;
            v112 = v110;
            v113 = v111;
            sub_23F35D2E8(&qword_256E6FB50);
            if ((sub_23F61CA18() & 1) != 0)
            {
              sub_23F375614();
              if ((v113 & 1) != (v115 & 1))
                goto LABEL_82;
              v112 = v114;
            }
            v29 = v160;
            if ((v113 & 1) != 0)
            {
              v9 = v108;
              (*(void (**)(unint64_t, char *, uint64_t))(v142 + 40))(v160[7] + v112 * v148, v157, v108);
            }
            else
            {
              v160[(v112 >> 6) + 8] |= 1 << v112;
              v143((char *)(v29[6] + v112 * v141), (unint64_t)v158, v154);
              v9 = v108;
              v153((char *)(v29[7] + v112 * v148), v157, v108);
              v116 = v29[2];
              v37 = __OFADD__(v116, 1);
              v117 = v116 + 1;
              if (v37)
                goto LABEL_75;
              v29[2] = v117;
            }
            v29 = v160;
            swift_bridgeObjectRelease();
            v89 = (void (*)(char *, uint64_t))v151[1];
            v89(v158, v154);
            sub_23F481698((uint64_t)v156, &qword_256E70280);
            v37 = __OFADD__(v159++, 1);
            v83 = v150;
            if (v37)
              goto LABEL_74;
            v99 += v145;
            v98 = (_QWORD *)((char *)v155 - 1);
            if (v155 == (_QWORD *)1)
            {
              swift_bridgeObjectRelease();
              v6 = v140;
              goto LABEL_62;
            }
          }
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
          goto LABEL_76;
        }
        swift_bridgeObjectRelease();
        v89 = (void (*)(char *, uint64_t))v151[1];
        v6 = v140;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v89 = (void (*)(char *, uint64_t))v151[1];
      }
      v29 = v155;
LABEL_62:
      v41 = v139;
      v89(v152, v154);
      sub_23F481698(v138, &qword_256E6FAF8);
      v46 = v137;
      v45 = v136;
    }
LABEL_67:
    swift_release();
    swift_bridgeObjectRelease();
    v35 = v124;
    v34 = v123;
    if (v123)
      continue;
    break;
  }
LABEL_6:
  v37 = __OFADD__(v35, 1);
  v38 = v35 + 1;
  if (v37)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if (v38 >= v121)
    goto LABEL_76;
  v39 = *(_QWORD *)(v120 + 8 * v38);
  if (v39)
    goto LABEL_16;
  v40 = v38 + 1;
  if (v38 + 1 >= v121)
    goto LABEL_76;
  v39 = *(_QWORD *)(v120 + 8 * v40);
  if (v39)
  {
LABEL_15:
    v38 = v40;
LABEL_16:
    v123 = (v39 - 1) & v39;
    v124 = v38;
    v36 = __clz(__rbit64(v39)) + (v38 << 6);
    goto LABEL_17;
  }
  v40 = v38 + 2;
  if (v38 + 2 >= v121)
    goto LABEL_76;
  v39 = *(_QWORD *)(v120 + 8 * v40);
  if (v39)
    goto LABEL_15;
  v40 = v38 + 3;
  if (v38 + 3 >= v121)
  {
LABEL_76:
    swift_release();
    sub_23F4727A0(&v160, (uint64_t)v29, (void (*)(uint64_t *, uint64_t))sub_23F480ED4, (uint64_t (*)(uint64_t, uint64_t))sub_23F491114, (uint64_t)&qword_256E71A48, (uint64_t)&qword_256E74E80);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v39 = *(_QWORD *)(v120 + 8 * v40);
    if (v39)
      goto LABEL_15;
    while (1)
    {
      v38 = v40 + 1;
      if (__OFADD__(v40, 1))
        break;
      if (v38 >= v121)
        goto LABEL_76;
      v39 = *(_QWORD *)(v120 + 8 * v38);
      ++v40;
      if (v39)
        goto LABEL_16;
    }
LABEL_81:
    __break(1u);
LABEL_82:
    sub_23F61CC94();
    __break(1u);
LABEL_83:
    result = swift_release();
    __break(1u);
  }
  return result;
}

uint64_t sub_23F46C3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  NSObject *v63;
  os_log_type_t v64;
  _BOOL4 v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t *, _QWORD);
  uint64_t *v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  NSObject *v129;
  os_log_type_t v130;
  uint8_t *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  _BOOL4 v141;
  uint64_t v142;
  uint8_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  void (*v157)(uint64_t *, _QWORD);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(char *, uint64_t);
  char *v165;
  char *v166;
  uint64_t v167;
  NSObject *v168;
  os_log_type_t v169;
  int v170;
  _BOOL4 v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  os_log_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint8_t *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  char *v224;
  uint64_t v225;
  void (*v226)(char *, uint64_t);
  void (*v227)(char *, uint64_t, uint64_t);
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  os_log_t v244;
  uint64_t v245;
  uint64_t v246;

  v231 = a5;
  v229 = a4;
  v218 = a1;
  v214 = a6;
  v195 = sub_23F61B3A4();
  v194 = *(_QWORD *)(v195 - 8);
  MEMORY[0x24BDAC7A8](v195);
  v9 = (char *)&v186 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = sub_23F61B3EC();
  v190 = *(_QWORD *)(v191 - 8);
  MEMORY[0x24BDAC7A8](v191);
  v193 = (uint64_t)&v186 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = sub_23F61B92C();
  v188 = *(_QWORD *)(v189 - 8);
  MEMORY[0x24BDAC7A8](v189);
  v192 = (uint64_t *)((char *)&v186 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_23F35D2E8(&qword_256E70CE8);
  MEMORY[0x24BDAC7A8](v12);
  v187 = (uint64_t)&v186 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v14);
  v204 = (char *)&v186 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = sub_23F617000();
  v202 = *(_QWORD *)(v205 - 8);
  MEMORY[0x24BDAC7A8](v205);
  v203 = (char *)&v186 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F35D2E8(&qword_256E702E0);
  MEMORY[0x24BDAC7A8](v17);
  v209 = (uint64_t)&v186 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F61B2E4();
  v207 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v206 = (char *)&v186 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F61B4F4();
  v243 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v244 = (os_log_t)((char *)&v186 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = sub_23F35D2E8(&qword_256E6FB08);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v186 = (uint64_t)&v186 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v212 = (uint64_t)&v186 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v224 = (char *)&v186 - v28;
  v225 = sub_23F61A1D4();
  v217 = *(_QWORD *)(v225 - 8);
  v29 = MEMORY[0x24BDAC7A8](v225);
  v211 = (char *)&v186 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v223 = (char *)&v186 - v31;
  v216 = sub_23F617D08();
  v236 = *(_QWORD *)(v216 - 8);
  v32 = MEMORY[0x24BDAC7A8](v216);
  v213 = (char *)&v186 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v233 = (char *)&v186 - v34;
  v230 = sub_23F61B164();
  v221 = *(_QWORD *)(v230 - 8);
  v35 = MEMORY[0x24BDAC7A8](v230);
  v208 = (char *)&v186 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v228 = (char *)&v186 - v37;
  v38 = sub_23F35D2E8(&qword_256E70228);
  MEMORY[0x24BDAC7A8](v38);
  v235 = (uint64_t)&v186 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = sub_23F61AA14();
  v234 = *(_QWORD *)(v238 - 8);
  MEMORY[0x24BDAC7A8](v238);
  v240 = (char *)&v186 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_23F61B5D8();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v198 = (char *)&v186 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v199 = (char *)&v186 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v222 = (char *)&v186 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v50 = (char *)&v186 - v49;
  v237 = sub_23F619E98();
  v215 = *(uint8_t **)(v237 - 8);
  v51 = MEMORY[0x24BDAC7A8](v237);
  v201 = (char *)&v186 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = MEMORY[0x24BDAC7A8](v51);
  v200 = (char *)&v186 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v197 = (char *)&v186 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v232 = (char *)&v186 - v58;
  MEMORY[0x24BDAC7A8](v57);
  v60 = (char *)&v186 - v59;
  sub_23F617BA0();
  v219 = a3;
  v61 = v239;
  v239 = sub_23F4529A4(MEMORY[0x24BEE4B08], v229, a3);
  sub_23F619094();
  v229 = v42;
  v62 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v241 = a2;
  v242 = v41;
  v227 = v62;
  v62(v50, a2, v41);
  v63 = sub_23F619E8C();
  v64 = sub_23F61C61C();
  v65 = os_log_type_enabled(v63, v64);
  v210 = v19;
  v196 = v9;
  v220 = v61;
  if (v65)
  {
    v66 = (uint8_t *)swift_slowAlloc();
    v67 = swift_slowAlloc();
    v245 = v67;
    *(_DWORD *)v66 = 136315138;
    v226 = (void (*)(char *, uint64_t))(v66 + 4);
    v68 = sub_23F61B5A8();
    sub_23F37AE00(v68, v69, &v245);
    v246 = v70;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v226 = *(void (**)(char *, uint64_t))(v229 + 8);
    v226(v50, v242);
    _os_log_impl(&dword_23F35A000, v63, v64, "Resolving app intent %s", v66, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v67, -1, -1);
    MEMORY[0x242670B70](v66, -1, -1);
  }
  else
  {
    v226 = *(void (**)(char *, uint64_t))(v229 + 8);
    v226(v50, v242);
  }

  v71 = v237;
  v229 = *((_QWORD *)v215 + 1);
  ((void (*)(char *, uint64_t))v229)(v60, v237);
  v72 = v232;
  sub_23F619094();
  swift_bridgeObjectRetain_n();
  v73 = sub_23F619E8C();
  v74 = sub_23F61C61C();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = (uint8_t *)swift_slowAlloc();
    v76 = swift_slowAlloc();
    v245 = v76;
    *(_DWORD *)v75 = 136315138;
    v215 = v75 + 4;
    sub_23F617BA0();
    sub_23F35D2E8(&qword_256E74E80);
    sub_23F48138C();
    v77 = sub_23F61C544();
    v79 = v78;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v77, v79, &v245);
    v246 = v80;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F35A000, v73, v74, "parameter value sets %s", v75, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v76, -1, -1);
    MEMORY[0x242670B70](v75, -1, -1);

    v81 = v232;
    v82 = v237;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v81 = v72;
    v82 = v71;
  }
  ((void (*)(char *, uint64_t))v229)(v81, v82);
  v83 = v238;
  v84 = v241;
  v85 = v218;
  v86 = v216;
  v87 = v233;
  v88 = v228;
  sub_23F61B128();
  v89 = v235;
  sub_23F465D5C();
  v232 = *(char **)(v221 + 8);
  ((void (*)(char *, uint64_t))v232)(v88, v230);
  v90 = v236;
  v91 = *(void (**)(char *, uint64_t, uint64_t))(v236 + 16);
  v91(v87, v85, v86);
  v92 = v222;
  v93 = v84;
  v94 = v242;
  v227(v222, v93, v242);
  if (sub_23F36195C(v89, 1, v83) == 1)
  {
    v91(v213, (uint64_t)v87, v86);
    sub_23F61B5A8();
    sub_23F6184F4();
    sub_23F61BFEC();
    MEMORY[0x24266DE7C]();
    sub_23F61A948();
    v226(v92, v94);
    (*(void (**)(char *, uint64_t))(v236 + 8))(v233, v86);
    sub_23F481698(v235, &qword_256E70228);
  }
  else
  {
    v226(v92, v94);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v87, v86);
    (*(void (**)(char *, uint64_t, uint64_t))(v234 + 32))(v240, v89, v83);
  }
  v95 = v219;
  v96 = v217;
  sub_23F61A9D8();
  v97 = v220;
  v98 = sub_23F47F860(v95);
  v99 = (void (*)(uint64_t *, _QWORD))sub_23F61A9E4();
  sub_23F47D5A8(v98, (uint64_t)sub_23F47D548, 0, v100);
  v239 = v97;
  v99(&v245, 0);
  v101 = 1;
  v102 = (uint64_t)v223;
  sub_23F61A1BC();
  v103 = sub_23F61A9A8();
  v104 = (uint64_t)v224;
  sub_23F368524(v102, v103);
  swift_bridgeObjectRelease();
  v105 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
  v106 = v102;
  v107 = v225;
  v105(v106, v225);
  v108 = sub_23F61B404();
  LODWORD(v99) = sub_23F36195C(v104, 1, v108);
  sub_23F481698(v104, &qword_256E6FB08);
  if ((_DWORD)v99 == 1)
  {
    v109 = sub_23F61A9CC();
    sub_23F36FD50(v109);
    v111 = v110;
    swift_bridgeObjectRelease();
    if (v111)
    {
      v112 = (uint64_t)v211;
      sub_23F61A1BC();
      v113 = v212;
      sub_23F368524(v112, v111);
      swift_bridgeObjectRelease();
      v105(v112, v107);
      v101 = sub_23F36195C(v113, 1, v108) != 1;
    }
    else
    {
      v113 = v212;
      sub_23F36196C(v212, 1, 1, v108);
      v101 = 0;
    }
    sub_23F481698(v113, &qword_256E6FB08);
  }
  v114 = sub_23F61B554();
  (*(void (**)(os_log_t, _QWORD, uint64_t))(v243 + 104))(v244, *MEMORY[0x24BEB8EB8], v21);
  v115 = *(_QWORD *)(v114 + 16);
  if (!v115)
  {
LABEL_19:
    (*(void (**)(os_log_t, uint64_t))(v243 + 8))(v244, v21);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v116 = v114 + ((*(unsigned __int8 *)(v243 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v243 + 80));
  v117 = *(_QWORD *)(v243 + 72);
  sub_23F3B121C(&qword_256E708D8, (void (*)(uint64_t))MEMORY[0x24BEB8ED8]);
  while ((sub_23F61C0A0() & 1) == 0)
  {
    v116 += v117;
    if (!--v115)
      goto LABEL_19;
  }
  (*(void (**)(os_log_t, uint64_t))(v243 + 8))(v244, v21);
  swift_bridgeObjectRelease();
  if (v101)
    goto LABEL_20;
  v119 = v208;
  sub_23F61B128();
  v120 = sub_23F61B14C();
  v121 = v230;
  ((void (*)(char *, uint64_t))v232)(v119, v230);
  v122 = v209;
  sub_23F3F1328(v120, v209);
  swift_bridgeObjectRelease();
  v123 = v210;
  if (sub_23F36195C(v122, 1, v210) != 1)
  {
    v124 = v207;
    v125 = v206;
    (*(void (**)(char *, uint64_t, uint64_t))(v207 + 32))(v206, v122, v123);
    v126 = (uint64_t)v204;
    sub_23F61B1F4();
    v127 = v205;
    if (sub_23F36195C(v126, 1, v205) == 1)
    {
      sub_23F481698(v126, &qword_256E6FB20);
      v128 = v201;
      sub_23F619094();
      v129 = sub_23F619E8C();
      v130 = sub_23F61C628();
      if (os_log_type_enabled(v129, v130))
      {
        v131 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v131 = 0;
        _os_log_impl(&dword_23F35A000, v129, v130, "Missing query event ID when resolving system framework intent app parameter", v131, 2u);
        MEMORY[0x242670B70](v131, -1, -1);
      }

      ((void (*)(char *, uint64_t))v229)(v128, v237);
      type metadata accessor for InterpreterError();
      sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v124 + 8))(v125, v123);
      return (*(uint64_t (**)(char *, uint64_t))(v234 + 8))(v240, v238);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v202 + 32))(v203, v126, v127);
    v132 = v228;
    sub_23F61B128();
    v133 = sub_23F61B14C();
    ((void (*)(char *, uint64_t))v232)(v132, v121);
    v245 = v133;
    sub_23F35D2E8(&qword_256E70F10);
    sub_23F3B0CC8(&qword_256E70F18, &qword_256E70F10);
    v134 = sub_23F61ACD8();
    swift_bridgeObjectRelease();
    v135 = *(_QWORD *)(v134 + 16);
    if (v135 == 1)
    {
      sub_23F36FFBC(v134);
      if (v148)
      {
        swift_bridgeObjectRelease();
        v149 = (uint64_t)v211;
        sub_23F61A1BC();
        v150 = sub_23F61B8A8();
        v151 = swift_allocBox();
        v153 = v152;
        v154 = sub_23F61BC5C();
        sub_23F36196C(v187, 1, 1, v154);
        sub_23F61B818();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v150 - 8) + 104))(v153, *MEMORY[0x24BEB9910], v150);
        v155 = v192;
        *v192 = v151;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v188 + 104))(v155, *MEMORY[0x24BEB9A00], v189);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v190 + 104))(v193, *MEMORY[0x24BE56E70], v191);
        (*(void (**)(char *, _QWORD, uint64_t))(v194 + 104))(v196, *MEMORY[0x24BE56E00], v195);
        sub_23F61B134();
        sub_23F61B17C();
        swift_release();
        v156 = v186;
        sub_23F61B3D4();
        sub_23F36196C(v156, 0, 1, v108);
        v157 = (void (*)(uint64_t *, _QWORD))sub_23F61A99C();
        sub_23F37261C(v156, v149, v158, v159, v160, v161, v162, v163, v186, v187, v188, v189, v190, v191, (uint64_t)v192, v193, v194, v195);
        v157(&v245, 0);
        goto LABEL_35;
      }
    }
    else if (!v135)
    {
      swift_bridgeObjectRelease();
      v136 = v197;
      sub_23F619094();
      v137 = v199;
      v138 = v242;
      v227(v199, v241, v242);
      v139 = sub_23F619E8C();
      v140 = sub_23F61C628();
      v141 = os_log_type_enabled(v139, v140);
      v142 = v207;
      if (v141)
      {
        v143 = (uint8_t *)swift_slowAlloc();
        v144 = swift_slowAlloc();
        v245 = v144;
        *(_DWORD *)v143 = 136315138;
        v145 = sub_23F61B5A8();
        sub_23F37AE00(v145, v146, &v245);
        v246 = v147;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        v226(v199, v242);
        _os_log_impl(&dword_23F35A000, v139, v140, "Unable to set the foreground app for system framework intent %s due to no app being in focus", v143, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x242670B70](v144, -1, -1);
        MEMORY[0x242670B70](v143, -1, -1);

        ((void (*)(char *, uint64_t))v229)(v136, v237);
LABEL_35:
        (*(void (**)(char *, uint64_t))(v202 + 8))(v203, v205);
        v164 = *(void (**)(char *, uint64_t))(v207 + 8);
LABEL_41:
        v164(v206, v123);
        goto LABEL_20;
      }

      v226(v137, v138);
      v185 = v136;
LABEL_40:
      ((void (*)(char *, uint64_t))v229)(v185, v237);
      (*(void (**)(char *, uint64_t))(v202 + 8))(v203, v127);
      v164 = *(void (**)(char *, uint64_t))(v142 + 8);
      goto LABEL_41;
    }
    v165 = v200;
    sub_23F619094();
    v166 = v198;
    v167 = v242;
    v227(v198, v241, v242);
    sub_23F617BA0();
    v168 = sub_23F619E8C();
    v169 = sub_23F61C628();
    v170 = v169;
    v171 = os_log_type_enabled(v168, v169);
    v142 = v207;
    if (!v171)
    {
      swift_bridgeObjectRelease_n();

      v226(v166, v167);
      v185 = v165;
      goto LABEL_40;
    }
    v172 = swift_slowAlloc();
    v244 = v168;
    v173 = v166;
    v174 = v172;
    v175 = swift_slowAlloc();
    v245 = v175;
    *(_DWORD *)v174 = 136315394;
    v176 = sub_23F61B5A8();
    sub_23F37AE00(v176, v177, &v245);
    v246 = v178;
    LODWORD(v243) = v170;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v226(v173, v167);
    *(_WORD *)(v174 + 12) = 2080;
    sub_23F617BA0();
    v179 = sub_23F61C544();
    v180 = v123;
    v182 = v181;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v179, v182, &v245);
    v246 = v183;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v184 = v244;
    _os_log_impl(&dword_23F35A000, v244, (os_log_type_t)v243, "Unable to set the foreground app for system framework intent %s due to more than one app in focus: %s", (uint8_t *)v174, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v175, -1, -1);
    MEMORY[0x242670B70](v174, -1, -1);

    ((void (*)(char *, uint64_t))v229)(v200, v237);
    (*(void (**)(char *, uint64_t))(v202 + 8))(v203, v205);
    (*(void (**)(char *, uint64_t))(v207 + 8))(v206, v180);
LABEL_20:
    (*(void (**)(uint64_t, char *, uint64_t))(v234 + 32))(v214, v240, v238);
    type metadata accessor for StepResolution();
    return swift_storeEnumTagMultiPayload();
  }
  sub_23F481698(v122, &qword_256E702E0);
  type metadata accessor for InterpreterError();
  sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v234 + 8))(v240, v238);
}

void sub_23F46DB44(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  void (*v72)(char *, unint64_t, uint64_t);
  char *v73;
  uint64_t v74;
  char v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint8_t *v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  os_log_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119[8];
  uint64_t v120;

  v116 = a5;
  v115 = a4;
  v104 = a3;
  v89 = a1;
  v91 = a6;
  v7 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v7);
  v101 = (uint64_t *)((char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_23F35D2E8(&qword_256E70258);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F61B92C();
  v107 = *(_QWORD *)(v12 - 8);
  v108 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v100 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v105 = (char *)&v87 - v15;
  v102 = sub_23F61B404();
  v95 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v97 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F617D08();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v88 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v114 = (uint64_t)&v87 - v21;
  v22 = sub_23F35D2E8(&qword_256E74EC0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v112 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v111 = (uint64_t *)((char *)&v87 - v25);
  v99 = type metadata accessor for TranscriptValueFetcher(0);
  MEMORY[0x24BDAC7A8](v99);
  v103 = (uint64_t)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23F61B5D8();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_23F619E98();
  v98 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v32 = (char *)&v87 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F619094();
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v90 = a2;
  v33(v30, a2, v27);
  v34 = sub_23F619E8C();
  v35 = sub_23F61C61C();
  v36 = os_log_type_enabled(v34, v35);
  v110 = v18;
  if (v36)
  {
    v96 = v34;
    v37 = (uint8_t *)swift_slowAlloc();
    v94 = swift_slowAlloc();
    v120 = v94;
    v93 = v37;
    *(_DWORD *)v37 = 136315138;
    v92 = v37 + 4;
    v38 = sub_23F61B5A8();
    sub_23F37AE00(v38, v39, &v120);
    v118 = v40;
    v18 = v110;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    v41 = v96;
    v42 = v93;
    _os_log_impl(&dword_23F35A000, v96, v35, "Resolving client action %s", v93, 0xCu);
    v43 = v94;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v43, -1, -1);
    MEMORY[0x242670B70](v42, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);

  }
  (*(void (**)(char *, uint64_t))(v98 + 8))(v32, v113);
  v44 = v104;
  sub_23F617BA0();
  v45 = v117;
  v113 = sub_23F4529A4(MEMORY[0x24BEE4B08], v115, v44);
  v117 = v45;
  v46 = v103;
  sub_23F61B128();
  sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
  *(_QWORD *)(v46 + *(int *)(v99 + 20)) = sub_23F61BFEC();
  v47 = *(_QWORD *)(v44 + 64);
  v92 = (uint8_t *)(v44 + 64);
  v120 = MEMORY[0x24BEE4B00];
  v48 = 1 << *(_BYTE *)(v44 + 32);
  v49 = -1;
  if (v48 < 64)
    v49 = ~(-1 << v48);
  v50 = v49 & v47;
  LODWORD(v96) = *MEMORY[0x24BE54E38];
  LODWORD(v93) = *MEMORY[0x24BE54E40];
  v94 = (unint64_t)(v48 + 63) >> 6;
  v87 = v94 - 1;
  sub_23F617BA0();
  v51 = 0;
  v99 = 0x800000023F6366E0;
  v98 = 0x800000023F636790;
  v52 = v114;
  v54 = v111;
  v53 = v112;
  v109 = v17;
  v106 = v11;
  if (!v50)
    goto LABEL_9;
LABEL_7:
  v115 = v51;
  v116 = (v50 - 1) & v50;
  v55 = __clz(__rbit64(v50)) | (v51 << 6);
  while (2)
  {
    v56 = *(_QWORD *)(v104 + 56);
    v57 = (_QWORD *)(*(_QWORD *)(v104 + 48) + 16 * v55);
    v58 = v57[1];
    *(_QWORD *)v53 = *v57;
    *((_QWORD *)v53 + 1) = v58;
    v59 = v56 + *(_QWORD *)(v18 + 72) * v55;
    v60 = sub_23F35D2E8(&qword_256E708C0);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(&v53[*(int *)(v60 + 48)], v59, v17);
    sub_23F36196C((uint64_t)v53, 0, 1, v60);
    sub_23F617BA0();
    while (1)
    {
      sub_23F383004((uint64_t)v53, (uint64_t)v54, &qword_256E74EC0);
      v64 = sub_23F35D2E8(&qword_256E708C0);
      if (sub_23F36195C((uint64_t)v54, 1, v64) == 1)
      {
        swift_bridgeObjectRelease();
        swift_release();
        (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v88, v89, v17);
        sub_23F61B5A8();
        sub_23F61A054();
        sub_23F3663AC(v103, type metadata accessor for TranscriptValueFetcher);
        type metadata accessor for StepResolution();
        swift_storeEnumTagMultiPayload();
        return;
      }
      v65 = *v54;
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v52, (char *)v54 + *(int *)(v64 + 48), v17);
      sub_23F617BA0();
      v66 = v117;
      sub_23F451E68(v113, v65);
      v67 = v66;
      sub_23F368FE0();
      sub_23F470ED8();
      v69 = v68;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v69 + 16) != 1)
        goto LABEL_25;
      v70 = v95;
      v71 = v69 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
      v72 = *(void (**)(char *, unint64_t, uint64_t))(v95 + 16);
      v73 = v97;
      v117 = v66;
      v74 = v102;
      v72(v97, v71, v102);
      v75 = sub_23F46E6B4();
      v76 = *(void (**)(char *, uint64_t))(v70 + 8);
      v77 = v74;
      v67 = v117;
      v76(v73, v77);
      if ((v75 & 1) != 0)
      {
        v78 = v97;
        v79 = v102;
        v72(v97, v71, v102);
        swift_release();
        v80 = v105;
        sub_23F61B3E0();
        v76(v78, v79);
        v81 = (uint64_t)v106;
        v82 = v107;
        v83 = v108;
        (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v106, v80, v108);
        v84 = sub_23F61A06C();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v84 - 8) + 104))(v81, v93, v84);
        v52 = v114;
      }
      else
      {
LABEL_25:
        v85 = v101;
        v52 = v114;
        sub_23F5F7CC8(v114, v101);
        v86 = v100;
        sub_23F374500(0xD00000000000008ALL, v99, 916, 0xD00000000000004BLL, v98);
        if (v67)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_23F481698((uint64_t)v85, &qword_256E701F0);
          (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v52, v109);
          swift_release();
          swift_bridgeObjectRelease();
          sub_23F3663AC(v103, type metadata accessor for TranscriptValueFetcher);
          return;
        }
        sub_23F481698((uint64_t)v85, &qword_256E701F0);
        sub_23F451D40(v69, (uint64_t)v119, (void (*)(_QWORD))MEMORY[0x24BE56EB0]);
        v117 = 0;
        swift_release();
        v82 = v107;
        v83 = v108;
        (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v105, v86, v108);
        v80 = v86;
        v81 = (uint64_t)v106;
        sub_23F61A078();
        v84 = sub_23F61A06C();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v84 - 8) + 104))(v81, v96, v84);
      }
      sub_23F36196C(v81, 0, 1, v84);
      sub_23F372B34();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v83);
      v17 = v109;
      v18 = v110;
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v52, v109);
      v54 = v111;
      v53 = v112;
      v51 = v115;
      v50 = v116;
      if (v116)
        goto LABEL_7;
LABEL_9:
      v61 = v51 + 1;
      if (__OFADD__(v51, 1))
      {
        __break(1u);
        goto LABEL_41;
      }
      if (v61 >= v94)
      {
LABEL_19:
        v115 = v51;
        goto LABEL_20;
      }
      v62 = *(_QWORD *)&v92[8 * v61];
      if (v62)
        goto LABEL_12;
      v51 += 2;
      if (v61 + 1 < v94)
        break;
LABEL_37:
      v115 = v61;
LABEL_20:
      v63 = sub_23F35D2E8(&qword_256E708C0);
      sub_23F36196C((uint64_t)v53, 1, 1, v63);
      v116 = 0;
    }
    v62 = *(_QWORD *)&v92[8 * v51];
    if (v62)
      goto LABEL_15;
    if (v61 + 2 >= v94)
      goto LABEL_19;
    v62 = *(_QWORD *)&v92[8 * v61 + 16];
    if (v62)
    {
      v61 += 2;
      goto LABEL_12;
    }
    v51 = v61 + 3;
    if (v61 + 3 >= v94)
    {
      v115 = v61 + 2;
      goto LABEL_20;
    }
    v62 = *(_QWORD *)&v92[8 * v51];
    if (v62)
    {
LABEL_15:
      v61 = v51;
LABEL_12:
      v115 = v61;
      v116 = (v62 - 1) & v62;
      v55 = __clz(__rbit64(v62)) + (v61 << 6);
      continue;
    }
    break;
  }
  while (1)
  {
    v61 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v61 >= v94)
    {
      v61 = v87;
      goto LABEL_37;
    }
    v62 = *(_QWORD *)&v92[8 * v61];
    ++v51;
    if (v62)
      goto LABEL_12;
  }
LABEL_41:
  __break(1u);
}

uint64_t sub_23F46E6B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v0 = sub_23F61B3EC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v16 - v5;
  v7 = sub_23F61B3A4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61B3B0();
  v11 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v11 == *MEMORY[0x24BE56E08] || v11 == *MEMORY[0x24BE56E10])
  {
    v13 = 1;
  }
  else
  {
    sub_23F61B3F8();
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BE56E60], v0);
    v13 = sub_23F489C40((uint64_t)v6, (uint64_t)v4);
    v14 = *(void (**)(char *, uint64_t))(v1 + 8);
    v14(v4, v0);
    v14(v6, v0);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v13 & 1;
}

uint64_t sub_23F46E81C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char v31;
  char *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;

  v51 = a2;
  v52 = a1;
  v2 = sub_23F619E98();
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v44 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F617D08();
  v5 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  v54 = v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)&v42 - v8;
  v9 = sub_23F61B2C0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = ((char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_23F61B2E4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v57 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F61B164();
  v17 = *(NSObject **)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61B128();
  v20 = v19;
  v21 = sub_23F61B14C();
  v22 = v19;
  v23 = (char *)v21;
  ((void (*)(char *, uint64_t))v17[1].isa)(v22, v16);
  v24 = *((_QWORD *)v23 + 2);
  if (v24)
  {
    v56 = &v23[(*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)];
    v55 = *MEMORY[0x24BE56B98];
    v47 = v9;
    v48 = v10;
    v49 = v23;
    while (v24 <= *((_QWORD *)v23 + 2))
    {
      --v24;
      v17 = v57;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v57, &v56[*(_QWORD *)(v14 + 72) * v24], v13);
      v20 = (char *)v17;
      sub_23F61B2CC();
      v25 = (*(uint64_t (**)(NSObject *, uint64_t))(v10 + 88))(v12, v9);
      if (v25 == v55)
      {
        (*(void (**)(NSObject *, uint64_t))(v10 + 96))(v12, v9);
        v26 = sub_23F61A504();
        v27 = *(_QWORD *)(v26 - 8);
        v20 = v51;
        v17 = v12;
        (*(void (**)(char *, NSObject *, uint64_t))(v27 + 32))(v51, v12, v26);
        v28 = v14;
        v29 = v13;
        v30 = v50;
        sub_23F61A480();
        v31 = sub_23F617CD8();
        v32 = v30;
        v13 = v29;
        v14 = v28;
        (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v53);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v57, v13);
        if ((v31 & 1) != 0)
          return swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v26);
        v9 = v47;
        v10 = v48;
        v12 = v17;
        v23 = v49;
        if (!v24)
          goto LABEL_9;
      }
      else
      {
        (*(void (**)(NSObject *, uint64_t))(v14 + 8))(v17, v13);
        (*(void (**)(NSObject *, uint64_t))(v10 + 8))(v12, v9);
        if (!v24)
          goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  v17 = v44;
  sub_23F619094();
  v13 = v53;
  v14 = v54;
  v23 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v43, v52, v53);
  v12 = sub_23F619E8C();
  v33 = sub_23F61C628();
  v34 = os_log_type_enabled(v12, v33);
  v9 = v45;
  v20 = (char *)v46;
  if (!v34)
  {
LABEL_13:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);

    (*(void (**)(NSObject *, char *))(v9 + 8))(v17, v20);
    goto LABEL_14;
  }
  v35 = (uint8_t *)swift_slowAlloc();
  v36 = v13;
  v37 = swift_slowAlloc();
  v59 = v37;
  *(_DWORD *)v35 = 136315138;
  sub_23F3B121C(&qword_256E6FB60, (void (*)(uint64_t))MEMORY[0x24BE52140]);
  v38 = sub_23F61CC1C();
  sub_23F37AE00(v38, v39, &v59);
  v58 = v40;
  sub_23F61C790();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v23, v36);
  _os_log_impl(&dword_23F35A000, v12, v33, "Missing statement result for statement ID=%s", v35, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x242670B70](v37, -1, -1);
  MEMORY[0x242670B70](v35, -1, -1);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v46);
LABEL_14:
  type metadata accessor for InterpreterError();
  sub_23F3B121C(&qword_256E6FB48, (void (*)(uint64_t))type metadata accessor for InterpreterError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_23F46ED3C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  void (*v31)(char *, char *, uint64_t);
  unint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  char *v42;
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;

  v68 = a3;
  v5 = sub_23F619E98();
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v65 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)&v55 - v8;
  v60 = sub_23F61BCE0();
  v57 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v59 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_23F61B518();
  v62 = *(_QWORD *)(v64 - 8);
  v10 = MEMORY[0x24BDAC7A8](v64);
  v61 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v63 = (char *)&v55 - v12;
  v13 = sub_23F61B5D8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F35D2E8(&qword_256E70220);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  v21 = a1[1];
  v58 = a2;
  sub_23F61B314();
  v22 = sub_23F61B308();
  if (sub_23F36195C((uint64_t)v19, 1, v22) == 1)
  {
    v23 = v65;
    sub_23F619094();
    swift_bridgeObjectRetain_n();
    v24 = sub_23F619E8C();
    v25 = sub_23F61C628();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v70 = v27;
      *(_DWORD *)v26 = 136315138;
      sub_23F617BA0();
      sub_23F37AE00(v20, v21, &v70);
      v69 = v28;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23F35A000, v24, v25, "no tool found for %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v27, -1, -1);
      MEMORY[0x242670B70](v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v23, v67);
    v33 = MEMORY[0x24BEE4AF8];
    goto LABEL_9;
  }
  v29 = *(_QWORD *)(v22 - 8);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v19, v22);
  if (v30 == *MEMORY[0x24BE56D38] || v30 == *MEMORY[0x24BE56D28])
  {
    (*(void (**)(char *, uint64_t))(v29 + 96))(v19, v22);
    v31 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v31(v16, v19, v13);
    sub_23F35D2E8(&qword_256E6FDC8);
    v32 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_23F61E7E0;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v31)(v33 + v32, v16, v13);
    goto LABEL_9;
  }
  if (v30 == *MEMORY[0x24BE56D30])
  {
    (*(void (**)(char *, uint64_t))(v29 + 96))(v19, v22);
    v37 = v62;
    v36 = v63;
    v38 = v64;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v63, v19, v64);
    v39 = v59;
    sub_23F61B500();
    v33 = sub_23F61B2F0();
    v40 = *(void (**)(char *, uint64_t))(v57 + 8);
    v40(v39, v60);
    v41 = v61;
    if (!v33)
    {
      v42 = v56;
      sub_23F619094();
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v41, v36, v38);
      v43 = v41;
      v44 = sub_23F619E8C();
      v45 = sub_23F61C628();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        v47 = swift_slowAlloc();
        v70 = v47;
        *(_DWORD *)v46 = 136315138;
        v65 = (char *)(v46 + 4);
        v48 = v59;
        sub_23F61B500();
        v49 = sub_23F61BCC8();
        v51 = v50;
        v40(v48, v60);
        sub_23F37AE00(v49, v51, &v70);
        v69 = v52;
        v38 = v64;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        v53 = *(void (**)(char *, uint64_t))(v62 + 8);
        v53(v61, v38);
        _os_log_impl(&dword_23F35A000, v44, v45, "no tools found for schema %s", v46, 0xCu);
        swift_arrayDestroy();
        v54 = v47;
        v36 = v63;
        MEMORY[0x242670B70](v54, -1, -1);
        MEMORY[0x242670B70](v46, -1, -1);

        (*(void (**)(char *, uint64_t))(v66 + 8))(v56, v67);
      }
      else
      {
        v53 = *(void (**)(char *, uint64_t))(v37 + 8);
        v53(v43, v38);

        (*(void (**)(char *, uint64_t))(v66 + 8))(v42, v67);
      }
      v35 = v68;
      result = ((uint64_t (*)(char *, uint64_t))v53)(v36, v38);
      v33 = MEMORY[0x24BEE4AF8];
      goto LABEL_10;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v36, v38);
LABEL_9:
    v35 = v68;
LABEL_10:
    *v35 = v33;
    return result;
  }
  result = sub_23F61CC58();
  __break(1u);
  return result;
}

uint64_t sub_23F46F380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  NSObject *v12;
  char v13;
  char v14;
  const char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_signpost_id_t v22;
  void (*v23)(_BYTE *, uint64_t);
  _BYTE v24[12];
  int v25;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_23F619E50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_23F619E20();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v24[-v9];
  if (qword_256E6F080 != -1)
    swift_once();
  v11 = sub_23F619E44();
  sub_23F361498(v11, (uint64_t)qword_256E80338);
  v12 = sub_23F619E38();
  sub_23F619E5C();
  v25 = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v1 + 88))(v3, v0) == *MEMORY[0x24BEE7810])
    {
      v13 = 0;
      v14 = 0;
      v15 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
      v15 = "%s";
      v14 = 2;
      v13 = 1;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v8, v10, v4);
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v27 = v18;
    *(_BYTE *)v17 = v14;
    *(_BYTE *)(v17 + 1) = v13;
    *(_WORD *)(v17 + 2) = 2080;
    v19 = sub_23F61C8F8();
    sub_23F37AE00(v19, v20, &v27);
    v26 = v21;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v22 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v12, (os_signpost_type_t)v25, v22, "ToolResolver.run", v15, (uint8_t *)v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v18, -1, -1);
    MEMORY[0x242670B70](v17, -1, -1);

    v23 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v23(v10, v4);
    return ((uint64_t (*)(_BYTE *, uint64_t))v23)(v8, v4);
  }
  else
  {

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
  }
}

uint64_t sub_23F46F660@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v2 = sub_23F61B164();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61B128();
  v6 = sub_23F61B14C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9[1] = v6;
  sub_23F35D2E8(&qword_256E70F10);
  sub_23F3B0CC8(&qword_256E70F18, &qword_256E70F10);
  v7 = sub_23F61ACD8();
  result = swift_bridgeObjectRelease();
  *a1 = v7;
  return result;
}

uint64_t sub_23F46F75C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a1;
  v32 = a2;
  v33 = a3;
  v3 = sub_23F617D08();
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - v6;
  v8 = sub_23F35D2E8(&qword_256E6FB18);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F617D14();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F618134();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F61ACA8();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F617000();
  sub_23F36196C((uint64_t)v22, 1, 1, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BE52260], v11);
  sub_23F617D38();
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x24BE53320], v15);
  v24 = sub_23F61811C();
  sub_23F36196C((uint64_t)v10, 1, 1, v24);
  sub_23F61AC90();
  v25 = v30;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  v26(v7, v31, v30);
  v26(v28, v32, v25);
  return sub_23F61A4BC();
}

uint64_t sub_23F46F9E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X3>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_23F46E81C(a1, a3);
  if (v3)
    *a2 = v3;
  return result;
}

void sub_23F46FA1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  unint64_t v81;
  char v82;
  unint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  _QWORD *v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  unint64_t *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  void (*v125)(char *, char *, uint64_t);
  _QWORD *v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  _QWORD *v141;

  v136 = a3;
  v131 = a2;
  v128 = a1;
  v3 = sub_23F61B3EC();
  MEMORY[0x24BDAC7A8](v3);
  v123 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F35D2E8(&qword_256E74EB0);
  MEMORY[0x24BDAC7A8](v5);
  v112 = (uint64_t)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E74EB8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (unint64_t *)((char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t *)((char *)&v106 - v11);
  v13 = sub_23F61A1D4();
  v133 = *(_QWORD *)(v13 - 8);
  v134 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v140 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v117 = (char *)&v106 - v16;
  v129 = sub_23F61B92C();
  v135 = *(_QWORD *)(v129 - 8);
  v17 = MEMORY[0x24BDAC7A8](v129);
  v122 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v132 = (char *)&v106 - v19;
  v108 = sub_23F61B6E0();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v106 = (uint64_t)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F35D2E8(&qword_256E6FB08);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v113 = (uint64_t)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v137 = (uint64_t)&v106 - v24;
  v110 = sub_23F61B404();
  v130 = *(_QWORD *)(v110 - 8);
  v25 = MEMORY[0x24BDAC7A8](v110);
  v139 = (char *)&v106 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v138 = (char *)&v106 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v106 - v29;
  v31 = sub_23F35D2E8(&qword_256E708C0);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v106 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23F617D08();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v121 = (char *)&v106 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)&v106 - v38;
  v126 = v33;
  v127 = v31;
  v40 = *(int *)(v31 + 48);
  v41 = &v33[v40];
  v42 = (char *)v131 + v40;
  v43 = v110;
  v44 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v124 = v42;
  v125 = v44;
  ((void (*)(char *))v44)(v41);
  v45 = v41;
  v46 = v34;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v39, v45, v34);
  v47 = v137;
  sub_23F368690((uint64_t)v39, v136);
  v48 = v47;
  v49 = v43;
  if (sub_23F36195C(v48, 1, v43) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v46);
    sub_23F481698(v137, &qword_256E6FB08);
  }
  else
  {
    v118 = v35;
    v119 = v39;
    v120 = v46;
    v50 = v130;
    v111 = *(void (**)(char *, uint64_t, uint64_t))(v130 + 32);
    v111(v30, v137, v43);
    v51 = v132;
    sub_23F61B3E0();
    v52 = v135;
    v53 = v129;
    if ((*(unsigned int (**)(char *, uint64_t))(v135 + 88))(v51, v129) == *MEMORY[0x24BEB9988])
    {
      (*(void (**)(char *, uint64_t))(v52 + 96))(v51, v53);
      v54 = swift_projectBox();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 16))(v106, v54, v108);
      swift_release();
      v55 = sub_23F61B6D4();
      v56 = 0;
      v57 = *(_QWORD *)(v55 + 16);
      v58 = v53;
      v132 = v30;
      v117 = (char *)v55;
      v113 = v57;
      v116 = v10;
      v115 = v5;
      v114 = v12;
      while (1)
      {
        if (v56 == v57)
        {
          v59 = 1;
          v60 = v57;
        }
        else
        {
          if (v56 >= *(_QWORD *)(v55 + 16))
            goto LABEL_23;
          v61 = v56;
          v60 = v56 + 1;
          v62 = v135;
          v63 = v112 + *(int *)(v5 + 48);
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v135 + 16))(v63, v55+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * v56, v58);
          v64 = (char *)v10 + *(int *)(v5 + 48);
          *v10 = v61;
          v65 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
          v30 = v132;
          v65(v64, v63, v58);
          v59 = 0;
        }
        sub_23F36196C((uint64_t)v10, v59, 1, v5);
        sub_23F383004((uint64_t)v10, (uint64_t)v12, &qword_256E74EB8);
        if (sub_23F36195C((uint64_t)v12, 1, v5) == 1)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v106, v108);
          (*(void (**)(char *, uint64_t))(v130 + 8))(v30, v49);
          (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v120);
          return;
        }
        v66 = *v12;
        v136 = v60;
        v137 = v66;
        (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v122, (char *)v12 + *(int *)(v5 + 48), v58);
        v67 = v49;
        sub_23F61B3F8();
        v68 = v120;
        v69 = v125;
        v125(v121, v119, v120);
        v70 = v138;
        sub_23F61B3C8();
        v71 = v126;
        v72 = (char *)v126 + *(int *)(v127 + 48);
        v73 = v131[1];
        *v126 = *v131;
        v71[1] = v73;
        v69(v72, v124, v68);
        sub_23F617BA0();
        v74 = v130;
        v75 = v128;
        sub_23F61A1BC();
        (*(void (**)(char *, uint64_t))(v118 + 8))(v72, v68);
        v76 = v74;
        v77 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
        v78 = v67;
        v77(v139, v70, v67);
        swift_isUniquelyReferenced_nonNull_native();
        v141 = (_QWORD *)*v75;
        v79 = v141;
        v80 = v75;
        *v75 = 0x8000000000000000;
        sub_23F375614();
        if (__OFADD__(v79[2], (v82 & 1) == 0))
          break;
        v83 = v81;
        v84 = v82;
        sub_23F35D2E8(&qword_256E6FB50);
        v85 = sub_23F61CA18();
        v49 = v78;
        v86 = v76;
        v58 = v129;
        if ((v85 & 1) != 0)
        {
          sub_23F375614();
          if ((v84 & 1) != (v88 & 1))
            goto LABEL_25;
          v83 = v87;
        }
        v89 = v141;
        if ((v84 & 1) != 0)
        {
          (*(void (**)(unint64_t, char *, uint64_t))(v86 + 40))(v141[7] + *(_QWORD *)(v86 + 72) * v83, v139, v78);
        }
        else
        {
          v141[(v83 >> 6) + 8] |= 1 << v83;
          (*(void (**)(unint64_t, char *, uint64_t))(v133 + 16))(v89[6] + *(_QWORD *)(v133 + 72) * v83, v140, v134);
          v111((char *)(v89[7] + *(_QWORD *)(v86 + 72) * v83), (uint64_t)v139, v78);
          v90 = v89[2];
          v91 = __OFADD__(v90, 1);
          v92 = v90 + 1;
          if (v91)
            goto LABEL_24;
          v89[2] = v92;
        }
        *v80 = v141;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v133 + 8))(v140, v134);
        (*(void (**)(char *, uint64_t))(v86 + 8))(v138, v78);
        v5 = v115;
        v10 = v116;
        v12 = v114;
        v30 = v132;
        v55 = (uint64_t)v117;
        v57 = v113;
        v56 = v136;
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      sub_23F61CC94();
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
      v93 = v126;
      v94 = (char *)v126 + *(int *)(v127 + 48);
      v95 = v131[1];
      *v126 = *v131;
      v93[1] = v95;
      v96 = v120;
      v125(v94, v124, v120);
      sub_23F617BA0();
      v97 = (uint64_t)v117;
      sub_23F61A1BC();
      v98 = *(void (**)(char *, uint64_t))(v118 + 8);
      v98(v94, v96);
      v99 = v113;
      (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v113, v30, v49);
      sub_23F36196C(v99, 0, 1, v49);
      sub_23F37261C(v99, v97, v100, v101, v102, v103, v104, v105, v106, v107, v108, v109, v110, (uint64_t)v111, v112, v113, (uint64_t)v114, v115);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v49);
      v98(v119, v96);
    }
  }
}

uint64_t sub_23F4703F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F3E2AC4;
  return Interpreter.resolve(sessionState:contextId:)(a1, a2, a3);
}

uint64_t sub_23F47045C@<X0>(uint64_t a1@<X2>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = sub_23F35D2E8(&qword_256E6FFA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F617D08();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F61A228();
  v12 = sub_23F61BB78();
  sub_23F3686A4(v12, v13, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (sub_23F36195C((uint64_t)v6, 1, v7) == 1)
  {
    sub_23F481698((uint64_t)v6, &qword_256E6FFA0);
    v14 = type metadata accessor for DependencyId(0);
    v15 = (uint64_t)a2;
    v16 = 1;
  }
  else
  {
    v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v17(v10, v6, v7);
    v18 = sub_23F61BB78();
    v20 = v19;
    sub_23F617BA0();
    sub_23F617BA0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F377CE0();
      a1 = v25;
    }
    v21 = *(_QWORD *)(a1 + 16);
    if (v21 >= *(_QWORD *)(a1 + 24) >> 1)
    {
      sub_23F377CE0();
      a1 = v26;
    }
    *(_QWORD *)(a1 + 16) = v21 + 1;
    v22 = a1 + 32 * v21;
    *(_QWORD *)(v22 + 32) = v18;
    *(_QWORD *)(v22 + 40) = v20;
    *(_QWORD *)(v22 + 48) = 0;
    *(_BYTE *)(v22 + 56) = 1;
    swift_bridgeObjectRelease();
    v23 = type metadata accessor for DependencyId(0);
    v17(&a2[*(int *)(v23 + 20)], v10, v7);
    *(_QWORD *)a2 = a1;
    v15 = (uint64_t)a2;
    v16 = 0;
    v14 = v23;
  }
  return sub_23F36196C(v15, v16, 1, v14);
}

uint64_t sub_23F47067C()
{
  sub_23F617BA0();
  sub_23F3C7954();
  swift_bridgeObjectRelease();
  type metadata accessor for DependencyId(0);
  sub_23F617D08();
  sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
  return sub_23F61C04C();
}

uint64_t sub_23F470708()
{
  if ((sub_23F3C5F58() & 1) == 0)
    return 0;
  type metadata accessor for DependencyId(0);
  return sub_23F617CD8();
}

uint64_t sub_23F47075C()
{
  sub_23F61CD30();
  sub_23F617BA0();
  sub_23F3C7954();
  swift_bridgeObjectRelease();
  type metadata accessor for DependencyId(0);
  sub_23F617D08();
  sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
  sub_23F61C04C();
  return sub_23F61CD60();
}

uint64_t sub_23F470800()
{
  sub_23F61CD30();
  sub_23F617BA0();
  sub_23F3C7954();
  swift_bridgeObjectRelease();
  sub_23F617D08();
  sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
  sub_23F61C04C();
  return sub_23F61CD60();
}

uint64_t sub_23F4708A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a3)
  {
    sub_23F61CD48();
    sub_23F617BA0();
    sub_23F482E5C();
    sub_23F362C60();
    if ((a5 & 1) == 0)
    {
LABEL_3:
      sub_23F61CD48();
      return sub_23F61CD3C();
    }
  }
  else
  {
    sub_23F61CD48();
    if ((a5 & 1) == 0)
      goto LABEL_3;
  }
  return sub_23F61CD48();
}

void sub_23F470928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2 && a6 && (a1 != a5 || a2 != a6))
    sub_23F3C8510();
  sub_23F362B80();
}

uint64_t sub_23F4709A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_23F61CD30();
  sub_23F61CD48();
  if (a2)
  {
    sub_23F617BA0();
    sub_23F61C22C();
    swift_bridgeObjectRelease();
  }
  sub_23F61CD48();
  if ((a4 & 1) == 0)
    sub_23F61CD3C();
  return sub_23F61CD60();
}

uint64_t sub_23F470A5C()
{
  uint64_t v0;

  return sub_23F4709A4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_23F470A6C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F4708A0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_23F470A7C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 24);
  sub_23F61CD30();
  sub_23F61CD48();
  if (v1)
  {
    sub_23F617BA0();
    sub_23F61C22C();
    swift_bridgeObjectRelease();
  }
  sub_23F61CD48();
  if (!v2)
    sub_23F61CD3C();
  return sub_23F61CD60();
}

void sub_23F470B2C(uint64_t a1, uint64_t *a2)
{
  sub_23F470928(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *a2, a2[1]);
}

uint64_t sub_23F470B50@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a1;
  v28 = a2;
  v2 = sub_23F617D08();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B2C0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F61B1E8();
  v27 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61B2CC();
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) != *MEMORY[0x24BE56AC8])
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_10:
    v20 = 1;
    v21 = v28;
    return sub_23F36196C(v21, v20, 1, v10);
  }
  (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
  v13 = v27;
  v25 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v25(v12, v9, v10);
  v14 = sub_23F61B1B8();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v10);
    goto LABEL_10;
  }
  v23 = v10;
  v24 = v12;
  v16 = *(_QWORD *)(sub_23F61A684() - 8);
  v17 = v14 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v18 = *(_QWORD *)(v16 + 72);
  while (1)
  {
    sub_23F61A660();
    v19 = sub_23F617CD8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v19 & 1) != 0)
      break;
    v17 += v18;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      v10 = v23;
      v12 = v24;
      v13 = v27;
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  v21 = v28;
  v10 = v23;
  v25((char *)v28, v24, v23);
  v20 = 0;
  return sub_23F36196C(v21, v20, 1, v10);
}

void sub_23F470DA4(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_23F463EE8(a1, *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_23F470DC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, char *a3@<X8>)
{
  return sub_23F46F9E8(a1, a2, a3);
}

uint64_t sub_23F470DDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F470B50(*(_QWORD *)(v1 + 16), a1);
}

uint64_t type metadata accessor for DependencyId(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E74D90);
}

void sub_23F470E08(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  const void *v6;
  uint64_t v7;
  _QWORD v8[3];

  v3 = (_QWORD *)(a2 - a1);
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if (!v3
         || ((uint64_t)v3 <= 0
           ? (v2 = (_QWORD *)MEMORY[0x24BEE4AF8])
           : (_QWORD *)(sub_23F35D2E8(&qword_256E6FE00),
                        v6 = (const void *)sub_23F4825A0(),
                        sub_23F482CAC(v6),
                        v2[2] = v3,
                        v2[3] = v7),
             sub_23F388178(v8, v2 + 4, (uint64_t)v3, a1, a2) == v3))
  {
    sub_23F383F28();
    return;
  }
  __break(1u);
}

void sub_23F470EA0()
{
  sub_23F470ED8();
}

void sub_23F470EBC()
{
  sub_23F470ED8();
}

void sub_23F470ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  void (*v4)(_QWORD);
  void (*v5)(_QWORD);
  const void *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F4825AC();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_9;
  v5 = v4;
  sub_23F4827AC(v2, v3);
  v5(0);
  sub_23F482680();
  v6 = (const void *)swift_allocObject();
  j__malloc_size(v6);
  if (v0)
  {
    sub_23F3847C0();
    v8 = v8 && v0 == -1;
    if (!v8)
    {
      sub_23F482B78(v7);
      sub_23F4828C8(v9, (uint64_t)v6 + v1, v10);
      sub_23F383738();
      sub_23F482974();
      if (!v8)
        __break(1u);
LABEL_9:
      sub_23F3F5D00();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_23F470F80()
{
  sub_23F470ED8();
}

void sub_23F470F9C()
{
  sub_23F471438();
}

void sub_23F470FB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  const void *v7;
  size_t v8;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else
  {
    if (!v5)
      goto LABEL_8;
    if (v5 > 0)
    {
      sub_23F35D2E8(&qword_256E70310);
      v7 = (const void *)swift_allocObject();
      v8 = j__malloc_size(v7);
      sub_23F482B78(v8 - 32);
    }
    if (v4 != a3)
    {
      sub_23F3C1830();
LABEL_8:
      sub_23F383488();
      return;
    }
  }
  __break(1u);
}

void sub_23F471064(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_11;
  }
  v4 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v3 == -1
    || (v4 <= 0
      ? (v2 = MEMORY[0x24BEE4AF8])
      : (sub_23F35D2E8(&qword_256E6FE00),
         v7 = (const void *)sub_23F4825A0(),
         sub_23F482CAC(v7),
         *(_QWORD *)(v2 + 16) = v4,
         *(_QWORD *)(v2 + 24) = v8),
        sub_23F38889C((uint64_t)&v9, v2 + 32, v4, a1, a2) == v4))
  {
    sub_23F383F28();
    return;
  }
LABEL_12:
  __break(1u);
}

void sub_23F471108()
{
  sub_23F471438();
}

void sub_23F471124()
{
  sub_23F470ED8();
}

void sub_23F471140()
{
  sub_23F47115C();
}

void sub_23F47115C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  const void *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F4825AC();
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_9;
  v4 = v3;
  sub_23F4827AC(v1, v2);
  sub_23F35D2E8(v4);
  sub_23F482680();
  v5 = (const void *)swift_allocObject();
  j__malloc_size(v5);
  if (v0)
  {
    sub_23F3847C0();
    v7 = v7 && v0 == -1;
    if (!v7)
    {
      sub_23F482B78(v6);
      sub_23F35D2E8(v4);
      sub_23F383EB8();
      sub_23F4828C8(v9, (uint64_t)v5 + v8, v10);
      sub_23F383738();
      sub_23F482974();
      if (!v7)
        __break(1u);
LABEL_9:
      sub_23F3F5D00();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_23F471218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  BOOL v5;

  sub_23F4825AC();
  v1 = *(_QWORD *)(v0 + 16);
  if (!v1)
    goto LABEL_9;
  sub_23F35D2E8(&qword_256E702F8);
  v2 = *(_QWORD *)(*(_QWORD *)(sub_23F618D28() - 8) + 72);
  v3 = (_QWORD *)swift_allocObject();
  j__malloc_size(v3);
  if (v2)
  {
    sub_23F3847C0();
    v5 = v5 && v2 == -1;
    if (!v5)
    {
      v3[2] = v1;
      v3[3] = 2 * (v4 / v2);
      sub_23F389138();
      sub_23F482C98();
      sub_23F383738();
      sub_23F48299C();
      if (!v5)
        __break(1u);
LABEL_9:
      sub_23F3F5D00();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_23F4712E0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else
  {
    if (!v5)
      goto LABEL_8;
    if (v5 > 0)
    {
      sub_23F35D2E8(&qword_256E700E8);
      v7 = (_QWORD *)sub_23F4825A0();
      j__malloc_size(v7);
      sub_23F482EB0();
      v7[2] = v5;
      v7[3] = v8;
    }
    if (v4 != a3)
    {
      sub_23F3C179C();
LABEL_8:
      sub_23F383488();
      return;
    }
  }
  __break(1u);
}

void sub_23F47137C()
{
  sub_23F471438();
}

void sub_23F471398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;

  sub_23F4825AC();
  a25 = v26;
  a26 = v28;
  v29 = *(_QWORD *)(v27 + 16);
  if (v29)
  {
    v30 = v27;
    sub_23F35D2E8(&qword_256E700E8);
    v31 = (_QWORD *)sub_23F4825A0();
    j__malloc_size(v31);
    sub_23F482EB0();
    v31[2] = v29;
    v31[3] = v32;
    sub_23F3892EC((uint64_t)&a10, v31 + 4, v29, v30);
    sub_23F482C98();
    sub_23F617BA0();
    sub_23F48299C();
    if (!v33)
      __break(1u);
  }
  sub_23F3F5D00();
}

void sub_23F47141C()
{
  sub_23F471438();
}

void sub_23F471438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t (*v3)(_QWORD);
  void (*v4)(uint64_t, uint64_t, char *);
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, char *);
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F362ABC();
  v6 = v5 >> 1;
  v7 = (v5 >> 1) - v1;
  if (__OFSUB__(v5 >> 1, v1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!v7)
    goto LABEL_14;
  v8 = v4;
  v9 = v3;
  v10 = v1;
  v11 = v0;
  if (v7 > 0)
  {
    sub_23F35D2E8(v2);
    v12 = *(_QWORD *)(*(_QWORD *)(v9(0) - 8) + 72);
    v13 = (_QWORD *)swift_allocObject();
    j__malloc_size(v13);
    if (v12)
    {
      sub_23F3847C0();
      v15 = v15 && v12 == -1;
      if (!v15)
      {
        v13[2] = v7;
        v13[3] = 2 * (v14 / v12);
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_12:
  if (v6 != v10)
  {
    v9(0);
    sub_23F383D14();
    v8(v11 + *(_QWORD *)(v17 + 72) * v10, v7, (char *)v13 + v16);
LABEL_14:
    sub_23F362948();
    return;
  }
LABEL_18:
  __break(1u);
}

void sub_23F471530()
{
  sub_23F470ED8();
}

void sub_23F47154C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F362ABC();
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for ActionResolver.Parameter(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F362930();
  v8 = *v0;
  sub_23F61CD30();
  sub_23F61A1D4();
  sub_23F3B121C(&qword_256E6FA98, (void (*)(uint64_t))MEMORY[0x24BE55070]);
  sub_23F617BA0();
  sub_23F61C04C();
  v9 = sub_23F482E08();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v21 = v5;
    v12 = ~v10;
    v13 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_23F482424(*(_QWORD *)(v8 + 48) + v13 * v11, v1);
      v14 = sub_23F61A1B0();
      sub_23F482558(v1);
      if ((v14 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
      if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      {
        sub_23F384120();
        v5 = v21;
        goto LABEL_7;
      }
    }
    sub_23F384120();
    sub_23F482558(v3);
    sub_23F48261C();
    sub_23F482424(v19 + v13 * v11, v20);
  }
  else
  {
    sub_23F384120();
LABEL_7:
    v15 = sub_23F482DD4();
    v16 = sub_23F3B1CF8();
    sub_23F362600(v16, v17, type metadata accessor for ActionResolver.Parameter);
    v18 = sub_23F4826A0();
    sub_23F476560(v18, v11, v15);
    sub_23F4827A0(v22);
    sub_23F36262C(v3, v5, type metadata accessor for ActionResolver.Parameter);
  }
  sub_23F362948();
}

void sub_23F471708()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  BOOL v20;
  char v21;
  uint64_t v22;

  sub_23F482190();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = *v0;
  sub_23F3F9B00();
  sub_23F384324();
  sub_23F482E5C();
  v8 = sub_23F362C10();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  sub_23F3E441C();
  if ((v11 & 1) == 0)
  {
LABEL_16:
    sub_23F38432C();
    v21 = sub_23F384544();
    v22 = *v0;
    sub_23F482A7C();
    sub_23F476780(v4, v2, v10, v21);
    sub_23F482520(v22);
    *v6 = v4;
    v6[1] = v2;
    goto LABEL_17;
  }
  v12 = *(_QWORD *)(v7 + 48);
  v13 = (_QWORD *)(v12 + 16 * v10);
  v14 = *v13 == v4 && v13[1] == v2;
  if (!v14 && (sub_23F3C8510() & 1) == 0)
  {
    v17 = ~v9;
    do
    {
      v10 = (v10 + 1) & v17;
      sub_23F3E441C();
      if ((v18 & 1) == 0)
        goto LABEL_16;
      v19 = (_QWORD *)(v12 + 16 * v10);
      v20 = *v19 == v4 && v19[1] == v2;
    }
    while (!v20 && (sub_23F3C8510() & 1) == 0);
  }
  sub_23F362C60();
  sub_23F38432C();
  v15 = (uint64_t *)(*(_QWORD *)(*v0 + 48) + 16 * v10);
  v16 = v15[1];
  *v6 = *v15;
  v6[1] = v16;
  sub_23F617BA0();
LABEL_17:
  sub_23F482174();
}

void sub_23F471838()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F362ABC();
  sub_23F481FF0();
  sub_23F61B92C();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F481F20();
  sub_23F3B121C(&qword_256E6FE60, v2);
  sub_23F482098();
  sub_23F481FA0();
  sub_23F481E88();
  if ((v4 & 1) != 0)
  {
    sub_23F481FC8(v3);
    while (1)
    {
      sub_23F481EDC(v5);
      sub_23F3B121C(&qword_256E6FE68, (void (*)(uint64_t))MEMORY[0x24BEB9A18]);
      sub_23F481F58();
      sub_23F481F88();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F481EB4();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F482444();
        goto LABEL_7;
      }
    }
    sub_23F3B5F04();
    sub_23F482090(v10);
    sub_23F481F40();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F482450();
LABEL_7:
    sub_23F482344();
    sub_23F481F70();
    v7 = sub_23F481EFC();
    sub_23F476918(v7, v8, v9);
    sub_23F481FE0();
    sub_23F481FB4();
  }
  sub_23F362948();
}

void sub_23F471928()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F362ABC();
  sub_23F481FF0();
  sub_23F61A1D4();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F481F20();
  sub_23F3B121C(&qword_256E6FA98, v2);
  sub_23F482098();
  sub_23F481FA0();
  sub_23F481E88();
  if ((v4 & 1) != 0)
  {
    sub_23F481FC8(v3);
    while (1)
    {
      sub_23F481EDC(v5);
      sub_23F3B121C(&qword_256E70328, (void (*)(uint64_t))MEMORY[0x24BE55070]);
      sub_23F481F58();
      sub_23F481F88();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F481EB4();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F482444();
        goto LABEL_7;
      }
    }
    sub_23F3B5F04();
    sub_23F482090(v10);
    sub_23F481F40();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F482450();
LABEL_7:
    sub_23F482344();
    sub_23F481F70();
    v7 = sub_23F481EFC();
    sub_23F476B6C(v7, v8, v9);
    sub_23F481FE0();
    sub_23F481FB4();
  }
  sub_23F362948();
}

void sub_23F471A18()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F362ABC();
  sub_23F481FF0();
  sub_23F61B404();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F481F20();
  sub_23F3B121C(&qword_256E703B0, v2);
  sub_23F482098();
  sub_23F481FA0();
  sub_23F481E88();
  if ((v4 & 1) != 0)
  {
    sub_23F481FC8(v3);
    while (1)
    {
      sub_23F481EDC(v5);
      sub_23F3B121C(&qword_256E74F30, (void (*)(uint64_t))MEMORY[0x24BE56EB0]);
      sub_23F481F58();
      sub_23F481F88();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F481EB4();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F482444();
        goto LABEL_7;
      }
    }
    sub_23F3B5F04();
    sub_23F482090(v10);
    sub_23F481F40();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F482450();
LABEL_7:
    sub_23F482344();
    sub_23F481F70();
    v7 = sub_23F481EFC();
    sub_23F476DC0(v7, v8, v9);
    sub_23F481FE0();
    sub_23F481FB4();
  }
  sub_23F362948();
}

uint64_t sub_23F471B08(_QWORD *a1, uint64_t a2)
{
  return sub_23F4727A0(a1, a2, (void (*)(uint64_t *, uint64_t))sub_23F480ED4, (uint64_t (*)(uint64_t, uint64_t))sub_23F491114, (uint64_t)&unk_256E71A48, (uint64_t)&unk_256E74E80);
}

void sub_23F471B2C()
{
  uint64_t *v0;
  unsigned __int8 v1;
  unsigned __int8 v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  sub_23F482190();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = *v0;
  sub_23F3F9B00();
  sub_23F61CD54();
  sub_23F61CD54();
  sub_23F61CD3C();
  v10 = sub_23F362C10();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v11;
    while (1)
    {
      v14 = *(_QWORD *)(v9 + 48) + 24 * v12;
      v15 = v6 >> 14 == *(_QWORD *)v14 >> 14 && *(_QWORD *)(v14 + 8) >> 14 == v4 >> 14;
      if (v15 && *(unsigned __int8 *)(v14 + 16) == v2)
        break;
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_10;
    }
    v17 = *(_QWORD *)(*v0 + 48) + 24 * v12;
    v6 = *(_QWORD *)v17;
    v4 = *(_QWORD *)(v17 + 8);
    v2 = *(_BYTE *)(v17 + 16);
  }
  else
  {
LABEL_10:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v0;
    *v0 = 0x8000000000000000;
    sub_23F477014(v6, v4, v2, v12, isUniquelyReferenced_nonNull_native);
    *v0 = v18;
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)v8 = v6;
  *(_QWORD *)(v8 + 8) = v4;
  *(_BYTE *)(v8 + 16) = v2;
  sub_23F482174();
}

void sub_23F471C7C()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F362ABC();
  sub_23F481FF0();
  sub_23F61B9EC();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F481F20();
  sub_23F3B121C(&qword_256E6FDB0, v2);
  sub_23F482098();
  sub_23F481FA0();
  sub_23F481E88();
  if ((v4 & 1) != 0)
  {
    sub_23F481FC8(v3);
    while (1)
    {
      sub_23F481EDC(v5);
      sub_23F3B121C(&qword_256E70168, (void (*)(uint64_t))MEMORY[0x24BEB9D20]);
      sub_23F481F58();
      sub_23F481F88();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F481EB4();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F482444();
        goto LABEL_7;
      }
    }
    sub_23F3B5F04();
    sub_23F482090(v10);
    sub_23F481F40();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F482450();
LABEL_7:
    sub_23F482344();
    sub_23F481F70();
    v7 = sub_23F481EFC();
    sub_23F4771B0(v7, v8, v9);
    sub_23F481FE0();
    sub_23F481FB4();
  }
  sub_23F362948();
}

void sub_23F471D6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  char *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_23F362ABC();
  v5 = v4;
  v6 = sub_23F482C84();
  v44 = *(_QWORD *)(v6 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(&qword_256E71A60);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E70238);
  sub_23F3B1748();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3834D0();
  v45 = v14;
  sub_23F383588();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v38 - v17;
  MEMORY[0x24BDAC7A8](v16);
  sub_23F383780();
  v39 = v19;
  v40 = v0;
  sub_23F482900();
  sub_23F617BA0();
  sub_23F3E4100();
  sub_23F4826E0();
  sub_23F482560();
  v22 = v21 & ~v20;
  v49 = v3 + 56;
  if (((*(_QWORD *)(v3 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
  {
    sub_23F3B5F04();
LABEL_16:
    v35 = v39;
    v34 = v40;
    v36 = sub_23F384544();
    sub_23F382EF8(v5, v35, &qword_256E70238);
    v50 = *v34;
    *v34 = 0x8000000000000000;
    sub_23F477404(v35, v22, v36);
    sub_23F482520(v50);
    sub_23F383004(v5, v2, &qword_256E70238);
    goto LABEL_18;
  }
  v38 = v2;
  v47 = ~v20;
  v48 = *(_QWORD *)(v1 + 72);
  v23 = v45;
  v41 = v3;
  while (1)
  {
    v24 = *(_QWORD *)(v3 + 48);
    v46 = v48 * v22;
    sub_23F4828D8(v24 + v48 * v22, (uint64_t)v18);
    v25 = (uint64_t)&v12[*(int *)(v9 + 48)];
    sub_23F4828D8((uint64_t)v18, (uint64_t)v12);
    sub_23F4828D8(v5, v25);
    sub_23F383740((uint64_t)v12, 1, v6);
    if (v26)
      break;
    sub_23F4828D8((uint64_t)v12, v23);
    sub_23F383740(v25, 1, v6);
    if (v26)
    {
      sub_23F383CA8(v23, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
LABEL_11:
      sub_23F481698((uint64_t)v12, &qword_256E71A60);
      sub_23F482D9C();
      goto LABEL_13;
    }
    v27 = v44;
    v28 = v42;
    sub_23F4822BC(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 32));
    sub_23F3B121C(&qword_256E71170, (void (*)(uint64_t))MEMORY[0x24BEB8FE0]);
    v43 = sub_23F61C0A0();
    v29 = v9;
    v30 = v5;
    v31 = *(void (**)(char *, uint64_t))(v27 + 8);
    v3 = v41;
    v32 = v28;
    v23 = v45;
    v31(v32, v6);
    v33 = sub_23F3B1CF8();
    ((void (*)(uint64_t))v31)(v33);
    v5 = v30;
    v9 = v29;
    sub_23F481698((uint64_t)v12, &qword_256E70238);
    sub_23F482D9C();
    if ((v43 & 1) != 0)
      goto LABEL_17;
LABEL_13:
    v22 = (v22 + 1) & v47;
    if (((*(_QWORD *)(v49 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
    {
      sub_23F3B5F04();
      v2 = v38;
      goto LABEL_16;
    }
  }
  sub_23F383740(v25, 1, v6);
  if (!v26)
    goto LABEL_11;
  sub_23F481698((uint64_t)v12, &qword_256E70238);
  sub_23F481698((uint64_t)v18, &qword_256E70238);
LABEL_17:
  sub_23F3B5F04();
  sub_23F4829E4(v5);
  sub_23F48261C();
  sub_23F382EF8(v37 + v46, v38, &qword_256E70238);
LABEL_18:
  sub_23F362948();
}

uint64_t sub_23F4720F8(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  char v23;
  unint64_t v24;
  _QWORD *v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  v11 = *v5;
  sub_23F383E5C();
  v12 = sub_23F61C040();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  v14 = v12 & ~v13;
  sub_23F4825E8();
  v34 = a1;
  if ((v15 & 1) != 0)
  {
    v16 = *(_QWORD *)(v11 + 48);
    if ((sub_23F5AA1B8(*(_QWORD *)(v16 + 32 * v14), *(_QWORD *)(v16 + 32 * v14 + 8), *(_QWORD *)(v16 + 32 * v14 + 16), *(_QWORD *)(v16 + 32 * v14 + 24), a2, a3, a4, a5) & 1) != 0)
    {
LABEL_3:
      sub_23F384120();
      sub_23F3837B0();
      sub_23F48261C();
      v18 = v17 + 32 * v14;
      v20 = *(_QWORD *)(v18 + 16);
      v19 = *(_QWORD *)(v18 + 24);
      *(_OWORD *)v34 = *(_OWORD *)v18;
      *(_QWORD *)(v34 + 16) = v20;
      *(_QWORD *)(v34 + 24) = v19;
      sub_23F617BA0();
      return 0;
    }
    v22 = ~v13;
    v14 = (v14 + 1) & v22;
    sub_23F4825E8();
    if ((v23 & 1) != 0)
    {
      v24 = a3 >> 16;
      do
      {
        v25 = (_QWORD *)(v16 + 32 * v14);
        v26 = v25[2] == a4 && v25[3] == a5;
        v27 = v26 && *v25 >> 16 == a2 >> 16;
        v28 = v27 && v25[1] >> 16 == v24;
        if (v28 || (sub_23F61CC10() & 1) != 0)
          goto LABEL_3;
        v14 = (v14 + 1) & v22;
        sub_23F4825E8();
      }
      while ((v29 & 1) != 0);
    }
  }
  sub_23F3837B0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v35 = *v33;
  *v33 = 0x8000000000000000;
  sub_23F384A00();
  v31 = sub_23F389F14();
  sub_23F4777F0(v31, v32, a4, a5, v14, isUniquelyReferenced_nonNull_native);
  *v33 = v35;
  swift_bridgeObjectRelease();
  *(_QWORD *)v34 = a2;
  *(_QWORD *)(v34 + 8) = a3;
  result = 1;
  *(_QWORD *)(v34 + 16) = a4;
  *(_QWORD *)(v34 + 24) = a5;
  return result;
}

void sub_23F4722E0()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F362ABC();
  sub_23F481FF0();
  sub_23F61BCE0();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F481F20();
  sub_23F3B121C(&qword_256E6FEB8, v2);
  sub_23F482098();
  sub_23F481FA0();
  sub_23F481E88();
  if ((v4 & 1) != 0)
  {
    sub_23F481FC8(v3);
    while (1)
    {
      sub_23F481EDC(v5);
      sub_23F3B121C(&qword_256E6FEC0, (void (*)(uint64_t))MEMORY[0x24BEBA5E0]);
      sub_23F481F58();
      sub_23F481F88();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F481EB4();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F482444();
        goto LABEL_7;
      }
    }
    sub_23F3B5F04();
    sub_23F482090(v10);
    sub_23F481F40();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F482450();
LABEL_7:
    sub_23F482344();
    sub_23F481F70();
    v7 = sub_23F481EFC();
    sub_23F4779E8(v7, v8, v9);
    sub_23F481FE0();
    sub_23F481FB4();
  }
  sub_23F362948();
}

void sub_23F4723D0()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F362ABC();
  sub_23F481FF0();
  sub_23F617D08();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F481F20();
  sub_23F3B121C(&qword_256E6FFB0, v2);
  sub_23F482098();
  sub_23F481FA0();
  sub_23F481E88();
  if ((v4 & 1) != 0)
  {
    sub_23F481FC8(v3);
    while (1)
    {
      sub_23F481EDC(v5);
      sub_23F3B121C(&qword_256E701E8, (void (*)(uint64_t))MEMORY[0x24BE52140]);
      sub_23F481F58();
      sub_23F481F88();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F481EB4();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F482444();
        goto LABEL_7;
      }
    }
    sub_23F3B5F04();
    sub_23F482090(v10);
    sub_23F481F40();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F482450();
LABEL_7:
    sub_23F482344();
    sub_23F481F70();
    v7 = sub_23F481EFC();
    sub_23F477C3C(v7, v8, v9);
    sub_23F481FE0();
    sub_23F481FB4();
  }
  sub_23F362948();
}

void sub_23F4724C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  _BYTE *v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  BOOL v34;
  char v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;

  sub_23F362ABC();
  v4 = v0;
  v6 = v5;
  v8 = v7;
  v9 = type metadata accessor for DependencyId(0);
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F482314();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - v12;
  sub_23F482900();
  sub_23F617BA0();
  sub_23F383738();
  sub_23F3C7954();
  sub_23F362984();
  v48 = v9;
  v14 = *(int *)(v9 + 20);
  v54 = (uint64_t *)v6;
  v15 = v6 + v14;
  sub_23F384040();
  sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
  v47 = v15;
  sub_23F61C04C();
  v16 = sub_23F4826E0();
  v17 = -1 << *(_BYTE *)(v3 + 32);
  v18 = v16 & ~v17;
  v53 = v3 + 56;
  if (((*(_QWORD *)(v3 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
  {
    v44 = v13;
    v45 = v4;
    v46 = v8;
    v50 = ~v17;
    v51 = v3;
    v52 = *(_QWORD *)(v1 + 72);
    v19 = type metadata accessor for DependencyId;
    while (1)
    {
      v20 = *(_QWORD *)(v3 + 48);
      v49 = v52 * v18;
      v21 = v19;
      sub_23F482D0C(v20 + v52 * v18, v2);
      v22 = *(_QWORD *)v2;
      v23 = *v54;
      v24 = *(_QWORD *)(*(_QWORD *)v2 + 16);
      if (v24 == *(_QWORD *)(*v54 + 16))
      {
        if (v24)
          v25 = v22 == v23;
        else
          v25 = 1;
        if (!v25)
        {
          v26 = (_BYTE *)(v22 + 56);
          v27 = (unsigned __int8 *)(v23 + 56);
          do
          {
            v28 = *((_QWORD *)v26 - 2);
            v29 = *((_QWORD *)v26 - 1);
            v30 = *v26;
            v31 = *((_QWORD *)v27 - 2);
            v32 = *((_QWORD *)v27 - 1);
            v33 = *v27;
            if (v28)
            {
              if (!v31)
                goto LABEL_10;
              v34 = *((_QWORD *)v26 - 3) == *((_QWORD *)v27 - 3) && v28 == v31;
              if (!v34 && (sub_23F3C8510() & 1) == 0)
                goto LABEL_10;
            }
            else if (v31)
            {
              goto LABEL_10;
            }
            if ((v30 & 1) != 0)
            {
              if (!v33)
                goto LABEL_10;
            }
            else
            {
              if (v29 == v32)
                v35 = v33;
              else
                v35 = 1;
              if ((v35 & 1) != 0)
                goto LABEL_10;
            }
            v27 += 32;
            v26 += 32;
            --v24;
          }
          while (v24);
        }
        if ((sub_23F617CD8() & 1) != 0)
          break;
      }
LABEL_10:
      v19 = v21;
      sub_23F3663AC(v2, v21);
      v3 = v51;
      v18 = (v18 + 1) & v50;
      if (((*(_QWORD *)(v53 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      {
        sub_23F3B5F04();
        v4 = v45;
        v13 = v44;
        goto LABEL_31;
      }
    }
    sub_23F482558(v2);
    swift_bridgeObjectRelease();
    sub_23F482558((uint64_t)v54);
    sub_23F48261C();
    sub_23F482424(v41 + v49, v42);
  }
  else
  {
    sub_23F3B5F04();
LABEL_31:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23F362600((uint64_t)v54, (uint64_t)v13, type metadata accessor for DependencyId);
    v55 = *v4;
    *v4 = 0x8000000000000000;
    v37 = sub_23F384690();
    sub_23F477E90(v37, v38, isUniquelyReferenced_nonNull_native);
    *v4 = v55;
    swift_bridgeObjectRelease();
    v39 = sub_23F482A1C();
    sub_23F36262C(v39, v40, type metadata accessor for DependencyId);
  }
  sub_23F362948();
}

uint64_t sub_23F4727A0(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t), uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v27[9];

  v10 = *v6;
  sub_23F61CD30();
  sub_23F384A00();
  a3(v27, a2);
  v11 = sub_23F61CD60();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  sub_23F482ED4();
  if ((v14 & 1) != 0)
  {
    v15 = sub_23F383738();
    v16 = a4(v15, a2);
    sub_23F362984();
    if ((v16 & 1) != 0)
    {
LABEL_6:
      sub_23F362C60();
      sub_23F38458C();
      *a1 = *(_QWORD *)(*(_QWORD *)(*v6 + 48) + 8 * v13);
      sub_23F617BA0();
      return 0;
    }
    v17 = ~v12;
    while (1)
    {
      v13 = (v13 + 1) & v17;
      sub_23F482ED4();
      if ((v18 & 1) == 0)
        break;
      v19 = sub_23F383738();
      v20 = a4(v19, a2);
      sub_23F362984();
      if ((v20 & 1) != 0)
        goto LABEL_6;
    }
  }
  sub_23F38458C();
  v22 = sub_23F384544();
  v27[0] = *v6;
  v23 = sub_23F482A7C();
  sub_23F478BB4(v23, v13, v22, a5, a3, a4, a6);
  sub_23F482520(v27[0]);
  *a1 = a2;
  return 1;
}

void sub_23F472900()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;

  sub_23F482190();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v7 = *v0;
  sub_23F61C10C();
  sub_23F61CD30();
  sub_23F383E5C();
  sub_23F482EA4();
  v8 = sub_23F362C10();
  sub_23F38432C();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  sub_23F362A58();
  if ((v11 & 1) != 0)
  {
    sub_23F482E8C();
    if (v1 == sub_23F482BA0() && v8 == v12)
    {
LABEL_16:
      sub_23F384A80();
    }
    else
    {
      v14 = sub_23F3C8510();
      sub_23F362984();
      sub_23F38432C();
      if ((v14 & 1) == 0)
      {
        v15 = ~v9;
        do
        {
          v10 = (v10 + 1) & v15;
          sub_23F362A58();
          if ((v16 & 1) == 0)
            goto LABEL_15;
          sub_23F482E8C();
          if (v14 == sub_23F482BA0() && v8 == v17)
            goto LABEL_16;
          v14 = sub_23F3C8510();
          sub_23F362984();
          sub_23F38432C();
        }
        while ((v14 & 1) == 0);
      }
    }

    sub_23F3837B0();
    v21 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v10);
    *v6 = v21;
    v22 = v21;
    goto LABEL_18;
  }
LABEL_15:
  sub_23F3837B0();
  v19 = sub_23F384544();
  v23 = *v2;
  *v2 = 0x8000000000000000;
  v20 = v4;
  sub_23F47819C((uint64_t)v20, v10, v19);
  sub_23F482520(v23);
  *v6 = v20;
LABEL_18:
  sub_23F482174();
}

void sub_23F472A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t DecorationTuple;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  sub_23F362ABC();
  v4 = v3;
  v6 = v5;
  DecorationTuple = type metadata accessor for QueryDecorationTuple(0);
  v28 = *(_QWORD *)(DecorationTuple - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F482314();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F383780();
  sub_23F39C56C();
  sub_23F618BB4();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F38F964();
  v13 = v12 - v11;
  sub_23F482B68();
  sub_23F617BA0();
  sub_23F618BCC();
  sub_23F3B121C(&qword_256E70F20, (void (*)(uint64_t))MEMORY[0x24BE57570]);
  sub_23F61C04C();
  sub_23F3B1CC8(v13, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  v14 = *(_QWORD *)(v4 + *(int *)(DecorationTuple + 20));
  sub_23F3668F4();
  sub_23F55BF30(&v29, v14);
  sub_23F362D18();
  v15 = sub_23F482E08();
  v16 = -1 << *(_BYTE *)(v2 + 32);
  v17 = v15 & ~v16;
  if (((*(_QWORD *)(v2 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
  {
    v18 = ~v16;
    v19 = *(_QWORD *)(v28 + 72);
    while (1)
    {
      sub_23F482424(*(_QWORD *)(v2 + 48) + v19 * v17, v1);
      if ((sub_23F618BF0() & 1) != 0)
      {
        sub_23F35D4F4();
        if ((v20 & 1) != 0)
          break;
      }
      sub_23F482558(v1);
      v17 = (v17 + 1) & v18;
      if (((*(_QWORD *)(v2 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
        goto LABEL_6;
    }
    sub_23F3C8574(v1);
    sub_23F384364();
    sub_23F3C8574(v4);
    sub_23F48261C();
    sub_23F482D0C(v26 + v19 * v17, v27);
  }
  else
  {
LABEL_6:
    sub_23F384364();
    v21 = sub_23F482DD4();
    sub_23F4827E0();
    sub_23F362600(v22, v23, v24);
    v25 = sub_23F4826A0();
    sub_23F4783C8(v25, v17, v21);
    sub_23F4827A0(v29);
    sub_23F36262C(v4, v6, type metadata accessor for QueryDecorationTuple);
  }
  sub_23F362948();
}

void sub_23F472CB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  void (*v47)(uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t DecorationTupleParameter;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  sub_23F362ABC();
  v4 = v0;
  v6 = v5;
  v8 = v7;
  v9 = sub_23F618D28();
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  sub_23F3B13F0(v11);
  v56 = sub_23F618D88();
  v59 = *(_QWORD *)(v56 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v14 = sub_23F3B13F0(v13);
  type metadata accessor for QueryDecorationEntityValue(v14);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F4822F8();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F383780();
  v55 = v17;
  sub_23F35D2E8(&qword_256E6F7F8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F36285C();
  v61 = v19;
  v20 = sub_23F39C56C();
  DecorationTupleParameter = type metadata accessor for QueryDecorationTupleParameter(v20);
  sub_23F3B1748();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F482314();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F383780();
  v54 = v23;
  v24 = *v4;
  sub_23F61CD30();
  sub_23F383E5C();
  v25 = v6;
  QueryDecorationTupleParameter.hash(into:)();
  sub_23F4826E0();
  sub_23F482560();
  v28 = v27 & ~v26;
  if (((*(_QWORD *)(v24 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
  {
LABEL_22:
    sub_23F3837B0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23F362600(v25, v54, type metadata accessor for QueryDecorationTupleParameter);
    v63 = *v4;
    *v4 = 0x8000000000000000;
    v49 = sub_23F482A1C();
    sub_23F47869C(v49, v50, isUniquelyReferenced_nonNull_native);
    *v4 = v63;
    swift_bridgeObjectRelease();
    sub_23F482E98(v25);
    goto LABEL_23;
  }
  v62 = ~v26;
  v29 = *(_QWORD *)(v1 + 72);
  v30 = v24 + 56;
  while (1)
  {
    sub_23F482424(*(_QWORD *)(v24 + 48) + v29 * v28, v2);
    if ((sub_23F61BB6C() & 1) == 0)
      goto LABEL_18;
    v31 = *(int *)(DecorationTupleParameter + 20);
    if (*(_QWORD *)(v2 + v31) != *(_QWORD *)(v25 + v31))
      goto LABEL_18;
    v32 = v2 + v31 + *(int *)(type metadata accessor for QueryDecorationEntity(0) + 20);
    sub_23F482424(v32, v61);
    v33 = sub_23F482A70();
    sub_23F482424(v33, v34);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
      break;
    sub_23F362600(v61, v55, type metadata accessor for QueryDecorationEntityValue);
    if (sub_23F4827EC())
    {
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v55, v56);
      v41 = v61;
      goto LABEL_16;
    }
    v43 = sub_23F482A70();
    sub_23F38431C(v43, v44, v45);
    v53 = sub_23F618D7C();
    v46 = sub_23F482A70();
    v47(v46);
    sub_23F4824B4(v55);
    sub_23F3663AC(v61, type metadata accessor for QueryDecorationEntityValue);
    v30 = v24 + 56;
    if ((v53 & 1) != 0)
      goto LABEL_25;
LABEL_18:
    sub_23F482558(v2);
    v28 = (v28 + 1) & v62;
    if (((*(_QWORD *)(v30 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
      goto LABEL_22;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_23F362600(v61, v3, type metadata accessor for QueryDecorationEntityValue);
    if (sub_23F4827EC() == 1)
    {
      v36 = sub_23F482A70();
      sub_23F38431C(v36, v37, v38);
      v52 = sub_23F618CEC();
      v39 = *(void (**)(uint64_t))(v57 + 8);
      v40 = sub_23F482A70();
      v39(v40);
      sub_23F3D09D0(v3);
      v41 = v61;
      if ((v52 & 1) != 0)
        goto LABEL_24;
      sub_23F3663AC(v61, type metadata accessor for QueryDecorationEntityValue);
      goto LABEL_17;
    }
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v3, v58);
    v41 = v61;
LABEL_16:
    sub_23F481698(v41, &qword_256E6F7F8);
LABEL_17:
    v30 = v24 + 56;
    goto LABEL_18;
  }
  v42 = sub_23F4827EC() == 2;
  v41 = v61;
  if (!v42)
    goto LABEL_16;
LABEL_24:
  sub_23F3663AC(v41, type metadata accessor for QueryDecorationEntityValue);
LABEL_25:
  sub_23F3C8574(v2);
  sub_23F3837B0();
  sub_23F3C8574(v25);
  sub_23F48261C();
  sub_23F482D0C(v51 + v29 * v28, v8);
LABEL_23:
  sub_23F362948();
}

uint64_t sub_23F473180(_QWORD *a1, uint64_t a2)
{
  return sub_23F4727A0(a1, a2, (void (*)(uint64_t *, uint64_t))sub_23F55BF30, (uint64_t (*)(uint64_t, uint64_t))sub_23F35D4F4, (uint64_t)&unk_256E74DF0, (uint64_t)&unk_256E74DE8);
}

uint64_t sub_23F4731A4(_QWORD *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  BOOL v22;
  char v23;
  char v24;
  __int128 v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = *v2;
  sub_23F61CD30();
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  sub_23F617BA0();
  sub_23F384324();
  sub_23F482EA4();
  sub_23F38432C();
  sub_23F384A00();
  v37 = v9;
  sub_23F482DC0();
  sub_23F61C22C();
  sub_23F38458C();
  sub_23F61CD60();
  sub_23F482560();
  v13 = v12 & ~v11;
  v14 = v6;
  v15 = v6 + 56;
  v34 = (uint64_t)a2;
  v35 = a1;
  v33 = v3;
  if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v16 = ~v11;
    v36 = a2[4];
    while (1)
    {
      v17 = (_QWORD *)(*(_QWORD *)(v14 + 48) + 40 * v13);
      v19 = v17[2];
      v18 = v17[3];
      v20 = v17[4];
      v21 = *v17 == v7 && v17[1] == v8;
      if (v21 || (sub_23F3C8510() & 1) != 0)
      {
        v22 = v19 == v37 && v18 == v10;
        if (v22 || (sub_23F3C8510() & 1) != 0)
        {
          sub_23F4903B0(v20, v36);
          if ((v23 & 1) != 0)
            break;
        }
      }
      v13 = (v13 + 1) & v16;
      if (((*(_QWORD *)(v15 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_15;
    }
    sub_23F3837B0();
    sub_23F382D8C(v34);
    sub_23F48261C();
    v28 = (_QWORD *)(v27 + 40 * v13);
    v29 = v28[1];
    v30 = v28[2];
    v31 = v28[3];
    v32 = v28[4];
    *v35 = *v28;
    v35[1] = v29;
    v35[2] = v30;
    v35[3] = v31;
    v35[4] = v32;
    sub_23F617BA0();
    sub_23F3668F4();
    sub_23F383738();
    return 0;
  }
  else
  {
LABEL_15:
    sub_23F3837B0();
    v24 = sub_23F482DD4();
    v38 = *v33;
    *v33 = 0x8000000000000000;
    sub_23F382BDC(v34);
    sub_23F478D08((_QWORD *)v34, v13, v24);
    sub_23F4827A0(v38);
    v25 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)v35 = *(_OWORD *)v34;
    *((_OWORD *)v35 + 1) = v25;
    v35[4] = *(_QWORD *)(v34 + 32);
    return 1;
  }
}

void sub_23F4733B0()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F362ABC();
  sub_23F481FF0();
  sub_23F618ED8();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F481F20();
  sub_23F3B121C(&qword_256E70148, v2);
  sub_23F482098();
  sub_23F481FA0();
  sub_23F481E88();
  if ((v4 & 1) != 0)
  {
    sub_23F481FC8(v3);
    while (1)
    {
      sub_23F481EDC(v5);
      sub_23F3B121C(&qword_256E74E18, (void (*)(uint64_t))MEMORY[0x24BE57C08]);
      sub_23F481F58();
      sub_23F481F88();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F481EB4();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F482444();
        goto LABEL_7;
      }
    }
    sub_23F3B5F04();
    sub_23F482090(v10);
    sub_23F481F40();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F482450();
LABEL_7:
    sub_23F482344();
    sub_23F481F70();
    v7 = sub_23F481EFC();
    sub_23F478F24(v7, v8, v9);
    sub_23F481FE0();
    sub_23F481FB4();
  }
  sub_23F362948();
}

void sub_23F4734A0()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F362ABC();
  sub_23F481FF0();
  sub_23F618C20();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F481F20();
  sub_23F3B121C(&qword_256E70090, v2);
  sub_23F482098();
  sub_23F481FA0();
  sub_23F481E88();
  if ((v4 & 1) != 0)
  {
    sub_23F481FC8(v3);
    while (1)
    {
      sub_23F481EDC(v5);
      sub_23F3B121C(&qword_256E70F30, (void (*)(uint64_t))MEMORY[0x24BE57608]);
      sub_23F481F58();
      sub_23F481F88();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F481EB4();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F482444();
        goto LABEL_7;
      }
    }
    sub_23F3B5F04();
    sub_23F482090(v10);
    sub_23F481F40();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F482450();
LABEL_7:
    sub_23F482344();
    sub_23F481F70();
    v7 = sub_23F481EFC();
    sub_23F479178(v7, v8, v9);
    sub_23F481FE0();
    sub_23F481FB4();
  }
  sub_23F362948();
}

void sub_23F473590()
{
  char v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_23F362ABC();
  sub_23F481FF0();
  sub_23F61B5D8();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F481F20();
  sub_23F3B121C(&qword_256E70528, v2);
  sub_23F482098();
  sub_23F481FA0();
  sub_23F481E88();
  if ((v4 & 1) != 0)
  {
    sub_23F481FC8(v3);
    while (1)
    {
      sub_23F481EDC(v5);
      sub_23F3B121C(&qword_256E71170, (void (*)(uint64_t))MEMORY[0x24BEB8FE0]);
      sub_23F481F58();
      sub_23F481F88();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_23F481EB4();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_23F482444();
        goto LABEL_7;
      }
    }
    sub_23F3B5F04();
    sub_23F482090(v10);
    sub_23F481F40();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F482450();
LABEL_7:
    sub_23F482344();
    sub_23F481F70();
    v7 = sub_23F481EFC();
    sub_23F4793CC(v7, v8, v9);
    sub_23F481FE0();
    sub_23F481FB4();
  }
  sub_23F362948();
}

uint64_t sub_23F473680()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = *v0;
  sub_23F35D2E8(&qword_256E71A40);
  result = sub_23F61C8A4();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_34;
  v23 = v2;
  v5 = 0;
  v6 = (_QWORD *)(v2 + 56);
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (v9)
  {
LABEL_19:
    while (1)
    {
      sub_23F61CD30();
      sub_23F61CD3C();
      result = sub_23F61CD60();
      v14 = -1 << *(_BYTE *)(v4 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) == 0)
        break;
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
LABEL_28:
      v9 &= v9 - 1;
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      ++*(_QWORD *)(v4 + 16);
      if (!v9)
        goto LABEL_6;
    }
    v18 = 0;
    v19 = (unint64_t)(63 - v14) >> 6;
    while (++v16 != v19 || (v18 & 1) == 0)
    {
      v20 = v16 == v19;
      if (v16 == v19)
        v16 = 0;
      v18 |= v20;
      v21 = *(_QWORD *)(v11 + 8 * v16);
      if (v21 != -1)
      {
        v17 = __clz(__rbit64(~v21)) + (v16 << 6);
        goto LABEL_28;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_6:
    v12 = v5 + 1;
    if (!__OFADD__(v5, 1))
    {
      if (v12 < v10)
      {
        v9 = v6[v12];
        ++v5;
        if (v9)
          goto LABEL_19;
        v5 = v12 + 1;
        if (v12 + 1 < v10)
        {
          v9 = v6[v5];
          if (v9)
            goto LABEL_19;
          v5 = v12 + 2;
          if (v12 + 2 < v10)
          {
            v9 = v6[v5];
            if (v9)
              goto LABEL_19;
            v13 = v12 + 3;
            if (v13 < v10)
            {
              v9 = v6[v13];
              if (v9)
              {
                v5 = v13;
                goto LABEL_19;
              }
              while (1)
              {
                v5 = v13 + 1;
                if (__OFADD__(v13, 1))
                  goto LABEL_37;
                if (v5 >= v10)
                  break;
                v9 = v6[v5];
                ++v13;
                if (v9)
                  goto LABEL_19;
              }
            }
          }
        }
      }
      v22 = 1 << *(_BYTE *)(v23 + 32);
      if (v22 > 63)
        sub_23F51394C(0, (unint64_t)(v22 + 63) >> 6, v6);
      else
        *v6 = -1 << v22;
      v1 = v0;
      *(_QWORD *)(v23 + 16) = 0;
LABEL_34:
      result = swift_release();
      *v1 = v4;
      return result;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

void sub_23F4738F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = type metadata accessor for ActionResolver.Parameter(0);
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_23F35D2E8(&qword_256E74F28);
  v6 = sub_23F61C8A4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    swift_retain();
    v13 = 0;
    if (!v11)
      goto LABEL_7;
LABEL_6:
    v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      v19 = v5;
      v20 = *(_QWORD *)(v5 + 48);
      v21 = *(_QWORD *)(v36 + 72);
      sub_23F36262C(v20 + v21 * i, (uint64_t)v4, type metadata accessor for ActionResolver.Parameter);
      sub_23F61CD30();
      sub_23F61A1D4();
      sub_23F3B121C(&qword_256E6FA98, (void (*)(uint64_t))MEMORY[0x24BE55070]);
      sub_23F61C04C();
      v22 = sub_23F61CD60();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) == 0)
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          v29 = v25 == v28;
          if (v25 == v28)
            v25 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v12 + 8 * v25);
          if (v30 != -1)
          {
            v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      sub_23F36262C((uint64_t)v4, *(_QWORD *)(v7 + 48) + v26 * v21, type metadata accessor for ActionResolver.Parameter);
      ++*(_QWORD *)(v7 + 16);
      v5 = v19;
      if (v11)
        goto LABEL_6;
LABEL_7:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_38;
      if (v16 >= v34)
        goto LABEL_32;
      v17 = v35[v16];
      ++v13;
      if (!v17)
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v34)
          goto LABEL_32;
        v17 = v35[v13];
        if (!v17)
        {
          v13 = v16 + 2;
          if (v16 + 2 >= v34)
            goto LABEL_32;
          v17 = v35[v13];
          if (!v17)
          {
            v18 = v16 + 3;
            if (v18 >= v34)
            {
LABEL_32:
              swift_release();
              v1 = v33;
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 > 63)
                sub_23F51394C(0, (unint64_t)(v31 + 63) >> 6, v35);
              else
                *v35 = -1 << v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v17 = v35[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_39;
                if (v13 >= v34)
                  goto LABEL_32;
                v17 = v35[v13];
                ++v18;
                if (v17)
                  goto LABEL_20;
              }
            }
            v13 = v18;
          }
        }
      }
LABEL_20:
      v11 = (v17 - 1) & v17;
    }
  }
  swift_release();
  *v1 = v7;
}

uint64_t sub_23F473C74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_23F35D2E8(&qword_256E71A50);
  v3 = sub_23F61C8A4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_23F61CD30();
      sub_23F61C22C();
      result = sub_23F61CD60();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_23F51394C(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23F473F4C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v1 = *v0;
  sub_23F35D2E8(&qword_256E74DD0);
  result = sub_23F61C8A4();
  v3 = result;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 0;
    v5 = *(_QWORD *)(v1 + 56);
    v30 = (_QWORD *)(v1 + 56);
    v6 = 1 << *(_BYTE *)(v1 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & v5;
    v29 = (unint64_t)(v6 + 63) >> 6;
    v9 = result + 56;
    if ((v7 & v5) == 0)
      goto LABEL_7;
LABEL_6:
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (i = v10 | (v4 << 6); ; i = __clz(__rbit64(v13)) + (v4 << 6))
    {
      v15 = *(_QWORD *)(v1 + 48) + 24 * i;
      v17 = *(_QWORD *)v15;
      v16 = *(_QWORD *)(v15 + 8);
      v18 = *(_BYTE *)(v15 + 16);
      sub_23F61CD30();
      sub_23F61CD54();
      sub_23F61CD54();
      sub_23F61CD3C();
      result = sub_23F61CD60();
      v19 = -1 << *(_BYTE *)(v3 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v9 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      v27 = *(_QWORD *)(v3 + 48) + 24 * v22;
      *(_QWORD *)v27 = v17;
      *(_QWORD *)(v27 + 8) = v16;
      *(_BYTE *)(v27 + 16) = v18;
      ++*(_QWORD *)(v3 + 16);
      if (v8)
        goto LABEL_6;
LABEL_7:
      v12 = v4 + 1;
      if (__OFADD__(v4, 1))
        goto LABEL_38;
      if (v12 >= v29)
        goto LABEL_32;
      v13 = v30[v12];
      ++v4;
      if (!v13)
      {
        v4 = v12 + 1;
        if (v12 + 1 >= v29)
          goto LABEL_32;
        v13 = v30[v4];
        if (!v13)
        {
          v4 = v12 + 2;
          if (v12 + 2 >= v29)
            goto LABEL_32;
          v13 = v30[v4];
          if (!v13)
          {
            v14 = v12 + 3;
            if (v14 >= v29)
            {
LABEL_32:
              v28 = 1 << *(_BYTE *)(v1 + 32);
              if (v28 > 63)
                sub_23F51394C(0, (unint64_t)(v28 + 63) >> 6, v30);
              else
                *v30 = -1 << v28;
              *(_QWORD *)(v1 + 16) = 0;
              break;
            }
            v13 = v30[v14];
            if (!v13)
            {
              while (1)
              {
                v4 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_39;
                if (v4 >= v29)
                  goto LABEL_32;
                v13 = v30[v4];
                ++v14;
                if (v13)
                  goto LABEL_20;
              }
            }
            v4 = v14;
          }
        }
      }
LABEL_20:
      v8 = (v13 - 1) & v13;
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

void sub_23F474250()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;

  v1 = v0;
  v2 = sub_23F61B5D8();
  v49 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v48 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F35D2E8(&qword_256E70238);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v46 - v9;
  v11 = *v0;
  sub_23F35D2E8(&qword_256E74F60);
  v12 = sub_23F61C8A4();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v47 = v0;
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v51 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v50 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    swift_retain();
    v19 = v17;
    v20 = 0;
    v52 = v11;
    if (!v17)
      goto LABEL_7;
LABEL_6:
    v53 = (v19 - 1) & v19;
    v54 = v20;
    for (i = __clz(__rbit64(v19)) | (v20 << 6); ; i = __clz(__rbit64(v23)) + (v24 << 6))
    {
      v26 = *(_QWORD *)(v11 + 48);
      v27 = *(_QWORD *)(v5 + 72);
      sub_23F383004(v26 + v27 * i, (uint64_t)v10, &qword_256E70238);
      sub_23F61CD30();
      sub_23F382EF8((uint64_t)v10, (uint64_t)v8, &qword_256E70238);
      if (sub_23F36195C((uint64_t)v8, 1, v2) == 1)
      {
        sub_23F61CD48();
      }
      else
      {
        v28 = v5;
        v29 = v49;
        v30 = v13;
        v31 = v10;
        v32 = v8;
        v33 = v48;
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v48, v32, v2);
        sub_23F61CD48();
        sub_23F3B121C(&qword_256E70528, (void (*)(uint64_t))MEMORY[0x24BEB8FE0]);
        sub_23F61C04C();
        v34 = *(void (**)(char *, uint64_t))(v29 + 8);
        v5 = v28;
        v35 = v33;
        v8 = v32;
        v10 = v31;
        v13 = v30;
        v34(v35, v2);
      }
      v36 = sub_23F61CD60();
      v37 = -1 << *(_BYTE *)(v13 + 32);
      v38 = v36 & ~v37;
      v39 = v38 >> 6;
      if (((-1 << v38) & ~*(_QWORD *)(v18 + 8 * (v38 >> 6))) == 0)
      {
        v41 = 0;
        v42 = (unint64_t)(63 - v37) >> 6;
        while (++v39 != v42 || (v41 & 1) == 0)
        {
          v43 = v39 == v42;
          if (v39 == v42)
            v39 = 0;
          v41 |= v43;
          v44 = *(_QWORD *)(v18 + 8 * v39);
          if (v44 != -1)
          {
            v40 = __clz(__rbit64(~v44)) + (v39 << 6);
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      v40 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v18 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
      *(_QWORD *)(v18 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      sub_23F383004((uint64_t)v10, *(_QWORD *)(v13 + 48) + v40 * v27, &qword_256E70238);
      ++*(_QWORD *)(v13 + 16);
      v11 = v52;
      v19 = v53;
      v20 = v54;
      if (v53)
        goto LABEL_6;
LABEL_7:
      v22 = v20 + 1;
      if (__OFADD__(v20, 1))
        goto LABEL_41;
      if (v22 >= v50)
        goto LABEL_35;
      v23 = v51[v22];
      v24 = v20 + 1;
      if (!v23)
      {
        v24 = v20 + 2;
        if (v20 + 2 >= v50)
          goto LABEL_35;
        v23 = v51[v24];
        if (!v23)
        {
          v24 = v20 + 3;
          if (v20 + 3 >= v50)
            goto LABEL_35;
          v23 = v51[v24];
          if (!v23)
          {
            v25 = v20 + 4;
            if (v20 + 4 >= v50)
            {
LABEL_35:
              swift_release();
              v1 = v47;
              v45 = 1 << *(_BYTE *)(v11 + 32);
              if (v45 > 63)
                sub_23F51394C(0, (unint64_t)(v45 + 63) >> 6, v51);
              else
                *v51 = -1 << v45;
              *(_QWORD *)(v11 + 16) = 0;
              break;
            }
            v23 = v51[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_42;
                if (v24 >= v50)
                  goto LABEL_35;
                v23 = v51[v24];
                ++v25;
                if (v23)
                  goto LABEL_20;
              }
            }
            v24 = v20 + 4;
          }
        }
      }
LABEL_20:
      v53 = (v23 - 1) & v23;
      v54 = v24;
    }
  }
  swift_release();
  *v1 = v13;
}

uint64_t sub_23F4746D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = *v0;
  sub_23F35D2E8(&qword_256E74F50);
  v3 = sub_23F61C8A4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v33 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v32 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      v16 = v2;
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * i);
      v19 = *v17;
      v18 = v17[1];
      v21 = v17[2];
      v20 = v17[3];
      result = sub_23F61C040();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6))) == 0)
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v22) >> 6;
        while (++v24 != v27 || (v26 & 1) == 0)
        {
          v28 = v24 == v27;
          if (v24 == v27)
            v24 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v8 + 8 * v24);
          if (v29 != -1)
          {
            v25 = __clz(__rbit64(~v29)) + (v24 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v8 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      v30 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v25);
      *v30 = v19;
      v30[1] = v18;
      v30[2] = v21;
      v30[3] = v20;
      ++*(_QWORD *)(v4 + 16);
      v2 = v16;
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v13 >= v32)
        goto LABEL_32;
      v14 = v33[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v32)
          goto LABEL_32;
        v14 = v33[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v32)
            goto LABEL_32;
          v14 = v33[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v32)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v31 = 1 << *(_BYTE *)(v2 + 32);
              if (v31 > 63)
                sub_23F51394C(0, (unint64_t)(v31 + 63) >> 6, v33);
              else
                *v33 = -1 << v31;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v33[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_39;
                if (v10 >= v32)
                  goto LABEL_32;
                v14 = v33[v10];
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_23F4749D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v1 = v0;
  v2 = type metadata accessor for DependencyId(0);
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t **)((char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *v0;
  sub_23F35D2E8(&qword_256E74E58);
  v6 = sub_23F61C8A4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_45:
    swift_release();
    *v1 = v7;
    return;
  }
  v35 = v0;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = *(_QWORD *)(v5 + 56);
  v40 = (_QWORD *)(v5 + 56);
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & v9;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 56;
  swift_retain();
  v13 = 0;
  v37 = v7;
  v38 = v5;
  v36 = v4;
  if (!v11)
    goto LABEL_7;
  do
  {
    v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v44 = v13;
    v15 = v14 | (v13 << 6);
LABEL_21:
    v20 = *(_QWORD *)(v5 + 48);
    v43 = *(_QWORD *)(v41 + 72);
    sub_23F36262C(v20 + v43 * v15, (uint64_t)v4, type metadata accessor for DependencyId);
    sub_23F61CD30();
    v21 = *v4;
    sub_23F61CD3C();
    v22 = *(_QWORD *)(v21 + 16);
    if (!v22)
      goto LABEL_30;
    sub_23F617BA0();
    v23 = (unsigned __int8 *)(v21 + 56);
    do
    {
      v24 = *v23;
      if (*((_QWORD *)v23 - 2))
      {
        sub_23F61CD48();
        sub_23F617BA0();
        sub_23F61C22C();
        if (v24)
          goto LABEL_25;
      }
      else
      {
        sub_23F61CD48();
        if (v24)
        {
LABEL_25:
          sub_23F61CD48();
          goto LABEL_28;
        }
      }
      sub_23F61CD48();
      sub_23F61CD3C();
LABEL_28:
      swift_bridgeObjectRelease();
      v23 += 32;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    v7 = v37;
    v5 = v38;
    v4 = v36;
LABEL_30:
    sub_23F617D08();
    sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
    sub_23F61C04C();
    v25 = sub_23F61CD60();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = v25 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) == 0)
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      while (++v28 != v31 || (v30 & 1) == 0)
      {
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v12 + 8 * v28);
        if (v33 != -1)
        {
          v29 = __clz(__rbit64(~v33)) + (v28 << 6);
          goto LABEL_39;
        }
      }
      __break(1u);
      goto LABEL_47;
    }
    v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_39:
    *(_QWORD *)(v12 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    sub_23F36262C((uint64_t)v4, *(_QWORD *)(v7 + 48) + v29 * v43, type metadata accessor for DependencyId);
    ++*(_QWORD *)(v7 + 16);
    v13 = v44;
  }
  while (v11);
LABEL_7:
  v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v16 >= v39)
    goto LABEL_41;
  v17 = v40[v16];
  v18 = v13 + 1;
  if (v17)
    goto LABEL_20;
  v18 = v13 + 2;
  if (v13 + 2 >= v39)
    goto LABEL_41;
  v17 = v40[v18];
  if (v17)
    goto LABEL_20;
  v18 = v13 + 3;
  if (v13 + 3 >= v39)
    goto LABEL_41;
  v17 = v40[v18];
  if (v17)
    goto LABEL_20;
  v19 = v13 + 4;
  if (v13 + 4 >= v39)
  {
LABEL_41:
    swift_release();
    v1 = v35;
    v34 = 1 << *(_BYTE *)(v5 + 32);
    if (v34 > 63)
      sub_23F51394C(0, (unint64_t)(v34 + 63) >> 6, v40);
    else
      *v40 = -1 << v34;
    *(_QWORD *)(v5 + 16) = 0;
    goto LABEL_45;
  }
  v17 = v40[v19];
  if (v17)
  {
    v18 = v13 + 4;
LABEL_20:
    v11 = (v17 - 1) & v17;
    v44 = v18;
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
    goto LABEL_21;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v39)
      goto LABEL_41;
    v17 = v40[v18];
    ++v19;
    if (v17)
      goto LABEL_20;
  }
LABEL_48:
  __break(1u);
}

uint64_t sub_23F474E28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  sub_23F35D2E8(&qword_256E74E10);
  v3 = sub_23F61C8A4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v27 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v29 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      sub_23F61C10C();
      sub_23F61CD30();
      sub_23F61C22C();
      v17 = sub_23F61CD60();
      result = swift_bridgeObjectRelease();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = v17 & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6))) == 0)
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          v24 = v20 == v23;
          if (v20 == v23)
            v20 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v8 + 8 * v20);
          if (v25 != -1)
          {
            v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v8 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v16;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v13 >= v28)
        goto LABEL_32;
      v14 = v29[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v28)
          goto LABEL_32;
        v14 = v29[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v28)
            goto LABEL_32;
          v14 = v29[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v28)
            {
LABEL_32:
              swift_release();
              v1 = v27;
              v26 = 1 << *(_BYTE *)(v2 + 32);
              if (v26 > 63)
                sub_23F51394C(0, (unint64_t)(v26 + 63) >> 6, v29);
              else
                *v29 = -1 << v26;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v29[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_39;
                if (v10 >= v28)
                  goto LABEL_32;
                v14 = v29[v10];
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_23F475134()
{
  _QWORD **v0;
  uint64_t v1;
  void (*v2)(char *, uint64_t);
  void (*v3)(char *, uint64_t);
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];

  sub_23F362ABC();
  v3 = v2;
  v6 = *(_QWORD *)(sub_23F4829FC(v4, v5) - 8);
  sub_23F482740();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v22 - v8;
  v10 = *v0;
  sub_23F4829C4();
  v11 = sub_23F482538();
  if (v10[2])
  {
    v22[1] = v0;
    sub_23F384958();
    sub_23F4824C4();
    sub_23F482D50();
    v12 = 0;
    if (!v0)
      goto LABEL_4;
LABEL_3:
    sub_23F482894();
    while (1)
    {
      sub_23F482E98(v10[6] + *(_QWORD *)(v6 + 72) * v13);
      v3(v9, v11);
      if (v0)
        goto LABEL_3;
LABEL_4:
      v14 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
        return;
      }
      if (v14 >= v1)
        goto LABEL_20;
      ++v12;
      if (!v10[v14])
      {
        v12 = v14 + 1;
        if (v14 + 1 >= v1)
          goto LABEL_20;
        if (!v10[v12])
        {
          v12 = v14 + 2;
          if (v14 + 2 >= v1)
            goto LABEL_20;
          if (!v10[v12])
          {
            v15 = v14 + 3;
            if (v15 >= v1)
            {
LABEL_20:
              sub_23F3D9AF4();
              sub_23F482874();
              if (v17 ^ v18 | v16)
              {
                sub_23F482560();
                *v10 = v19;
              }
              else
              {
                v20 = sub_23F482954();
                sub_23F51394C(v20, v21, v10);
              }
              v10[2] = 0;
              break;
            }
            if (!v10[v15])
            {
              while (1)
              {
                v12 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_26;
                if (v12 >= v1)
                  goto LABEL_20;
                ++v15;
                if (v10[v12])
                  goto LABEL_17;
              }
            }
            v12 = v15;
          }
        }
      }
LABEL_17:
      sub_23F482840();
    }
  }
  sub_23F3D9AF4();
  sub_23F482CD0();
  sub_23F362948();
}

void sub_23F4752B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t (*v14)(uint64_t);
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  char *v24;
  uint64_t DecorationEntity;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t DecorationTupleParameter;
  uint64_t DecorationEntityValue;
  uint64_t v44;

  v1 = v0;
  DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
  MEMORY[0x24BDAC7A8](DecorationEntityValue);
  v44 = (uint64_t)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationTupleParameter = type metadata accessor for QueryDecorationTupleParameter(0);
  v41 = *(_QWORD *)(DecorationTupleParameter - 8);
  MEMORY[0x24BDAC7A8](DecorationTupleParameter);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_23F35D2E8(&qword_256E74E00);
  v6 = sub_23F61C8A4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v38 = v0;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v40 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v39 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    swift_retain();
    v13 = 0;
    v14 = type metadata accessor for QueryDecorationTupleParameter;
    if (!v11)
      goto LABEL_7;
LABEL_6:
    v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (i = v15 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
    {
      v20 = v5;
      v21 = *(_QWORD *)(v41 + 72);
      v22 = *(_QWORD *)(v5 + 48) + v21 * i;
      v23 = v14;
      sub_23F36262C(v22, (uint64_t)v4, v14);
      sub_23F61CD30();
      sub_23F61BB78();
      sub_23F61C22C();
      swift_bridgeObjectRelease();
      v24 = &v4[*(int *)(DecorationTupleParameter + 20)];
      sub_23F61CD3C();
      DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
      sub_23F362600((uint64_t)&v24[*(int *)(DecorationEntity + 20)], v44, type metadata accessor for QueryDecorationEntityValue);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1)
          goto LABEL_26;
        v27 = sub_23F618D28();
      }
      else
      {
        v27 = sub_23F618D88();
      }
      (*(void (**)(uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v44);
LABEL_26:
      sub_23F61CD30();
      sub_23F61CD3C();
      sub_23F61CD60();
      sub_23F61CD3C();
      v28 = sub_23F61CD60();
      v29 = -1 << *(_BYTE *)(v7 + 32);
      v30 = v28 & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) == 0)
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v29) >> 6;
        v14 = v23;
        while (++v31 != v34 || (v33 & 1) == 0)
        {
          v35 = v31 == v34;
          if (v31 == v34)
            v31 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v12 + 8 * v31);
          if (v36 != -1)
          {
            v32 = __clz(__rbit64(~v36)) + (v31 << 6);
            goto LABEL_35;
          }
        }
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        return;
      }
      v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      v14 = v23;
LABEL_35:
      *(_QWORD *)(v12 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
      sub_23F36262C((uint64_t)v4, *(_QWORD *)(v7 + 48) + v32 * v21, v14);
      ++*(_QWORD *)(v7 + 16);
      v5 = v20;
      if (v11)
        goto LABEL_6;
LABEL_7:
      v17 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_43;
      if (v17 >= v39)
        goto LABEL_37;
      v18 = v40[v17];
      ++v13;
      if (!v18)
      {
        v13 = v17 + 1;
        if (v17 + 1 >= v39)
          goto LABEL_37;
        v18 = v40[v13];
        if (!v18)
        {
          v13 = v17 + 2;
          if (v17 + 2 >= v39)
            goto LABEL_37;
          v18 = v40[v13];
          if (!v18)
          {
            v19 = v17 + 3;
            if (v19 >= v39)
            {
LABEL_37:
              swift_release();
              v1 = v38;
              v37 = 1 << *(_BYTE *)(v5 + 32);
              if (v37 > 63)
                sub_23F51394C(0, (unint64_t)(v37 + 63) >> 6, v40);
              else
                *v40 = -1 << v37;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v40[v19];
            if (!v18)
            {
              while (1)
              {
                v13 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_44;
                if (v13 >= v39)
                  goto LABEL_37;
                v18 = v40[v13];
                ++v19;
                if (v18)
                  goto LABEL_20;
              }
            }
            v13 = v19;
          }
        }
      }
LABEL_20:
      v11 = (v18 - 1) & v18;
    }
  }
  swift_release();
  *v1 = v7;
}

void sub_23F47576C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_23F482190();
  a29 = v33;
  a30 = v34;
  v36 = v35;
  sub_23F4824E8(v37, v38);
  v39 = sub_23F482538();
  if (v31[2])
  {
    sub_23F384958();
    v40 = v31 + 7;
    sub_23F4825FC();
    sub_23F482D50();
    v41 = 0;
    if (!v32)
      goto LABEL_4;
LABEL_3:
    sub_23F48242C();
    while (1)
    {
      v45 = *(_QWORD *)(v31[6] + 8 * v42);
      sub_23F3F9B00();
      v36(&a10, v45);
      v46 = sub_23F362C10();
      sub_23F482DF4(v46, *(_BYTE *)(v39 + 32));
      sub_23F61C874();
      sub_23F482C64();
      *(_QWORD *)(v39 + 56 + v47) |= v48;
      *(_QWORD *)(*(_QWORD *)(v39 + 48) + 8 * v49) = v45;
      ++*(_QWORD *)(v39 + 16);
      if (v32)
        goto LABEL_3;
LABEL_4:
      v43 = v41 + 1;
      if (__OFADD__(v41, 1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
        return;
      }
      if (v43 >= (uint64_t)v30)
        goto LABEL_20;
      ++v41;
      if (!v40[v43])
      {
        v41 = v43 + 1;
        if (v43 + 1 >= (uint64_t)v30)
          goto LABEL_20;
        if (!v40[v41])
        {
          v41 = v43 + 2;
          if (v43 + 2 >= (uint64_t)v30)
            goto LABEL_20;
          if (!v40[v41])
          {
            v44 = v43 + 3;
            if (v44 >= (uint64_t)v30)
            {
LABEL_20:
              sub_23F3D9AF4();
              sub_23F482874();
              if (v51 ^ v52 | v50)
              {
                sub_23F482560();
                *v40 = v53;
              }
              else
              {
                v54 = sub_23F482954();
                sub_23F51394C(v54, v55, v31 + 7);
              }
              v31[2] = 0;
              break;
            }
            if (!v40[v44])
            {
              while (1)
              {
                v41 = v44 + 1;
                if (__OFADD__(v44, 1))
                  goto LABEL_26;
                if (v41 >= (uint64_t)v30)
                  goto LABEL_20;
                ++v44;
                if (v40[v41])
                  goto LABEL_17;
              }
            }
            v41 = v44;
          }
        }
      }
LABEL_17:
      sub_23F4823AC();
    }
  }
  sub_23F3D9AF4();
  *v30 = v39;
  sub_23F482174();
}

uint64_t sub_23F4758F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;
  __int128 v33;

  v1 = v0;
  v2 = *v0;
  sub_23F35D2E8(&qword_256E74DE0);
  v3 = sub_23F61C8A4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      v16 = v2;
      v17 = *(_QWORD *)(v2 + 48) + 40 * i;
      v18 = *(_QWORD *)v17;
      v19 = *(_QWORD *)(v17 + 8);
      v20 = *(_QWORD *)(v17 + 16);
      v33 = *(_OWORD *)(v17 + 24);
      sub_23F61CD30();
      sub_23F617BA0();
      sub_23F61C22C();
      swift_bridgeObjectRelease();
      sub_23F617BA0();
      sub_23F61C22C();
      swift_bridgeObjectRelease();
      result = sub_23F61CD60();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6))) == 0)
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v21) >> 6;
        while (++v23 != v26 || (v25 & 1) == 0)
        {
          v27 = v23 == v26;
          if (v23 == v26)
            v23 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v8 + 8 * v23);
          if (v28 != -1)
          {
            v24 = __clz(__rbit64(~v28)) + (v23 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v8 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      v29 = *(_QWORD *)(v4 + 48) + 40 * v24;
      *(_QWORD *)v29 = v18;
      *(_QWORD *)(v29 + 8) = v19;
      *(_QWORD *)(v29 + 16) = v20;
      *(_OWORD *)(v29 + 24) = v33;
      ++*(_QWORD *)(v4 + 16);
      v2 = v16;
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v13 >= v31)
        goto LABEL_32;
      v14 = v32[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v31)
          goto LABEL_32;
        v14 = v32[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v31)
            goto LABEL_32;
          v14 = v32[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v31)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v30 = 1 << *(_BYTE *)(v2 + 32);
              if (v30 > 63)
                sub_23F51394C(0, (unint64_t)(v30 + 63) >> 6, v32);
              else
                *v32 = -1 << v30;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v32[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_39;
                if (v10 >= v31)
                  goto LABEL_32;
                v14 = v32[v10];
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_23F475C44()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_23F362ABC();
  v44 = v1;
  v45 = v2;
  v4 = v3;
  v5 = v0;
  v8 = sub_23F482AAC(v6, v7);
  v43 = *(_QWORD *)(v8 - 8);
  sub_23F482740();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v39 - v10;
  v12 = (_QWORD *)*v0;
  sub_23F35D2E8(v4);
  v13 = sub_23F482538();
  if (v12[2])
  {
    sub_23F384958();
    v42 = v12 + 7;
    sub_23F482C44();
    v16 = v15 & v14;
    v40 = v0;
    v41 = (unint64_t)(v17 + 63) >> 6;
    v18 = v13 + 56;
    swift_retain();
    v19 = 0;
    if (!v16)
      goto LABEL_4;
LABEL_3:
    sub_23F48240C();
    while (1)
    {
      v25 = v12;
      v26 = v12[6];
      v27 = *(_QWORD *)(v43 + 72);
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
      v28(v11, v26 + v27 * v20, v8);
      sub_23F482C10();
      sub_23F3F9CD0();
      sub_23F61C040();
      sub_23F482248();
      sub_23F4828AC();
      if (v29)
      {
        sub_23F482220();
        while (1)
        {
          sub_23F482858();
          if (v29)
          {
            if ((v31 & 1) != 0)
              break;
          }
          if (v32 == v33)
            v32 = 0;
          if (*(_QWORD *)(v18 + 8 * v32) != -1)
          {
            sub_23F48220C();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      sub_23F482234();
LABEL_28:
      *(_QWORD *)(v18 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
      v28((char *)(*(_QWORD *)(v13 + 48) + v30 * v27), (uint64_t)v11, v8);
      ++*(_QWORD *)(v13 + 16);
      v12 = v25;
      if (v16)
        goto LABEL_3;
LABEL_4:
      if (__OFADD__(v19, 1))
        goto LABEL_36;
      if (v19 + 1 >= v41)
        goto LABEL_30;
      sub_23F482C58();
      v19 = v21;
      if (!v22)
      {
        v19 = v21 + 1;
        if (v21 + 1 >= v41)
          goto LABEL_30;
        if (!v42[v19])
        {
          v19 = v21 + 2;
          if (v21 + 2 >= v41)
            goto LABEL_30;
          if (!v42[v19])
          {
            if (v21 + 3 >= v41)
            {
LABEL_30:
              swift_release();
              v5 = v40;
              sub_23F482874();
              if (v34 ^ v35 | v29)
              {
                sub_23F482560();
                *v42 = v36;
              }
              else
              {
                v37 = sub_23F482954();
                sub_23F51394C(v37, v38, v42);
              }
              v12[2] = 0;
              break;
            }
            sub_23F482C58();
            if (!v24)
            {
              while (1)
              {
                v19 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_37;
                if (v19 >= v41)
                  goto LABEL_30;
                ++v23;
                if (v42[v19])
                  goto LABEL_17;
              }
            }
            v19 = v23;
          }
        }
      }
LABEL_17:
      sub_23F4823C4();
    }
  }
  swift_release();
  *v5 = v13;
  sub_23F362948();
}

void sub_23F475ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  sub_23F61CD30();
  sub_23F61B92C();
  sub_23F3B121C(&qword_256E6FE60, (void (*)(uint64_t))MEMORY[0x24BEB9A18]);
  sub_23F61C04C();
  v4 = _s14TypedCandidateVMa();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F61CD60();
  v5 = sub_23F61C874();
  *(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v5;
  sub_23F36262C(a1, *(_QWORD *)(a2 + 48) + *(_QWORD *)(*(_QWORD *)(v4 - 8) + 72) * v5, (uint64_t (*)(_QWORD))_s14TypedCandidateVMa);
  ++*(_QWORD *)(a2 + 16);
}

void sub_23F476030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t DecorationTuple;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v13[4];

  v4 = sub_23F618BB4();
  v5 = (void (*)(uint64_t))MEMORY[0x24BE57570];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61CD30();
  sub_23F618BCC();
  sub_23F3B121C(&qword_256E70F20, v5);
  sub_23F61C04C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  DecorationTuple = type metadata accessor for QueryDecorationTuple(0);
  v10 = *(_QWORD *)(a1 + *(int *)(DecorationTuple + 20));
  sub_23F617BA0();
  sub_23F55BF30(v13, v10);
  swift_bridgeObjectRelease();
  sub_23F61CD60();
  v11 = sub_23F61C874();
  *(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
  sub_23F36262C(a1, *(_QWORD *)(a2 + 48) + *(_QWORD *)(*(_QWORD *)(DecorationTuple - 8) + 72) * v11, type metadata accessor for QueryDecorationTuple);
  ++*(_QWORD *)(a2 + 16);
}

void sub_23F4761A8(unint64_t a1)
{
  uint64_t *v1;
  char v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  sub_23F482884();
  if (!(!v7 & v6) || (v3 & 1) == 0)
  {
    if ((v3 & 1) != 0)
    {
      sub_23F473680();
      goto LABEL_9;
    }
    if (v5 <= v4)
    {
      sub_23F47A558();
LABEL_9:
      v8 = *v1;
      sub_23F3F9B00();
      sub_23F61CD3C();
      sub_23F362C10();
      sub_23F482560();
      a1 = v9 & ~v10;
      if (((*(_QWORD *)(v8 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
        goto LABEL_13;
      goto LABEL_10;
    }
    sub_23F479620();
  }
LABEL_10:
  v11 = *v1;
  *(_QWORD *)(*v1 + 8 * (a1 >> 6) + 56) |= 1 << a1;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v11 + 16) = v14;
    return;
  }
  __break(1u);
LABEL_13:
  sub_23F61CC88();
  __break(1u);
}

void sub_23F476290()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_23F362ABC();
  v4 = v3;
  v6 = v5;
  v35 = v7;
  v30 = _s14TypedCandidateVMa();
  v8 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  sub_23F362930();
  sub_23F482884();
  v29 = v8;
  if (!v22 & v11 && (v4 & 1) != 0)
    goto LABEL_24;
  if ((v4 & 1) != 0)
  {
    sub_23F475134();
  }
  else
  {
    if (v10 > v9)
    {
      sub_23F479FC4();
      goto LABEL_24;
    }
    sub_23F47C004();
  }
  sub_23F482B68();
  sub_23F61B92C();
  sub_23F3B121C(&qword_256E6FE60, (void (*)(uint64_t))MEMORY[0x24BEB9A18]);
  sub_23F61C04C();
  v12 = (_QWORD *)(v35 + *(int *)(v30 + 20));
  sub_23F617BA0();
  sub_23F61C22C();
  sub_23F362D08();
  sub_23F617BA0();
  sub_23F61C22C();
  sub_23F384120();
  sub_23F482E08();
  sub_23F482560();
  v6 = v14 & ~v13;
  v33 = v2 + 56;
  v34 = v2;
  if (((*(_QWORD *)(v2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v32 = ~v13;
    v31 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_23F482424(*(_QWORD *)(v34 + 48) + v31 * v6, v1);
      if ((sub_23F61B920() & 1) != 0)
      {
        v15 = (_QWORD *)(v1 + *(int *)(v30 + 20));
        v16 = v15[2];
        v17 = v15[3];
        v18 = v15[4];
        v19 = v12[2];
        v20 = v12[3];
        v21 = v12[4];
        v22 = *v15 == *v12 && v15[1] == v12[1];
        if (v22 || (sub_23F3C8510() & 1) != 0)
        {
          v23 = v16 == v19 && v17 == v20;
          if (v23 || (sub_23F3C8510() & 1) != 0)
          {
            sub_23F4903B0(v18, v21);
            if ((v24 & 1) != 0)
              goto LABEL_27;
          }
        }
      }
      sub_23F482558(v1);
      v6 = (v6 + 1) & v32;
    }
    while (((*(_QWORD *)(v33 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
LABEL_24:
  v25 = *v0;
  *(_QWORD *)(*v0 + 8 * (v6 >> 6) + 56) |= 1 << v6;
  sub_23F36262C(v35, *(_QWORD *)(v25 + 48) + *(_QWORD *)(v29 + 72) * v6, (uint64_t (*)(_QWORD))_s14TypedCandidateVMa);
  v26 = *(_QWORD *)(v25 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v25 + 16) = v28;
    sub_23F362948();
    return;
  }
  __break(1u);
LABEL_27:
  sub_23F3663AC(v1, (uint64_t (*)(_QWORD))_s14TypedCandidateVMa);
  sub_23F61CC88();
  __break(1u);
}

void sub_23F476560(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t *v25;

  v7 = type metadata accessor for ActionResolver.Parameter(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
  {
LABEL_13:
    v13 = v8;
    goto LABEL_14;
  }
  if ((a3 & 1) != 0)
  {
    sub_23F4738F0();
    goto LABEL_8;
  }
  if (v12 <= v11)
  {
    sub_23F47A794();
LABEL_8:
    v14 = *v3;
    sub_23F61CD30();
    sub_23F61A1D4();
    sub_23F3B121C(&qword_256E6FA98, (void (*)(uint64_t))MEMORY[0x24BE55070]);
    sub_23F61C04C();
    v15 = sub_23F61CD60();
    v16 = -1 << *(_BYTE *)(v14 + 32);
    a2 = v15 & ~v16;
    if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v24[1] = v7;
      v17 = ~v16;
      v13 = v8;
      v18 = *(_QWORD *)(v8 + 72);
      while (1)
      {
        sub_23F362600(*(_QWORD *)(v14 + 48) + v18 * a2, (uint64_t)v10, type metadata accessor for ActionResolver.Parameter);
        v19 = sub_23F61A1B0();
        sub_23F3663AC((uint64_t)v10, type metadata accessor for ActionResolver.Parameter);
        if ((v19 & 1) != 0)
          goto LABEL_17;
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          goto LABEL_14;
      }
    }
    goto LABEL_13;
  }
  v13 = v8;
  sub_23F479FC4();
LABEL_14:
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  sub_23F36262C(a1, *(_QWORD *)(v20 + 48) + *(_QWORD *)(v13 + 72) * a2, type metadata accessor for ActionResolver.Parameter);
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (!v22)
  {
    *(_QWORD *)(v20 + 16) = v23;
    return;
  }
  __break(1u);
LABEL_17:
  sub_23F61CC88();
  __break(1u);
}

void sub_23F476780(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_23F473C74();
  }
  else
  {
    if (v10 > v9)
    {
      sub_23F479780();
      goto LABEL_22;
    }
    sub_23F47AAD8();
  }
  v11 = *v4;
  sub_23F61CD30();
  sub_23F61C22C();
  v12 = sub_23F61CD60();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  a3 = v12 & ~v13;
  v14 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v15 = *(_QWORD *)(v11 + 48);
    v16 = (_QWORD *)(v15 + 16 * a3);
    v17 = *v16 == a1 && v16[1] == a2;
    if (v17 || (sub_23F61CC64() & 1) != 0)
    {
LABEL_21:
      sub_23F61CC88();
      __break(1u);
    }
    else
    {
      v18 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v18;
        if (((*(_QWORD *)(v14 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v19 = (_QWORD *)(v15 + 16 * a3);
        v20 = *v19 == a1 && v19[1] == a2;
        if (v20 || (sub_23F61CC64() & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v21 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v22 = (_QWORD *)(*(_QWORD *)(v21 + 48) + 16 * a3);
  *v22 = a1;
  v22[1] = a2;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v25;
}

uint64_t sub_23F476918(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F61B92C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F475C44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F47A404();
      goto LABEL_12;
    }
    sub_23F47C914();
  }
  v12 = *v3;
  sub_23F3B121C(&qword_256E6FE60, (void (*)(uint64_t))MEMORY[0x24BEB9A18]);
  v13 = sub_23F61C040();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3B121C(&qword_256E6FE68, (void (*)(uint64_t))MEMORY[0x24BEB9A18]);
      v18 = sub_23F61C0A0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F61CC88();
  __break(1u);
  return result;
}

uint64_t sub_23F476B6C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F61A1D4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F475C44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F47A404();
      goto LABEL_12;
    }
    sub_23F47C914();
  }
  v12 = *v3;
  sub_23F3B121C(&qword_256E6FA98, (void (*)(uint64_t))MEMORY[0x24BE55070]);
  v13 = sub_23F61C040();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3B121C(&qword_256E70328, (void (*)(uint64_t))MEMORY[0x24BE55070]);
      v18 = sub_23F61C0A0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F61CC88();
  __break(1u);
  return result;
}

uint64_t sub_23F476DC0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F61B404();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F475C44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F47A404();
      goto LABEL_12;
    }
    sub_23F47C914();
  }
  v12 = *v3;
  sub_23F3B121C(&qword_256E703B0, (void (*)(uint64_t))MEMORY[0x24BE56EB0]);
  v13 = sub_23F61C040();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3B121C(&qword_256E74F30, (void (*)(uint64_t))MEMORY[0x24BE56EB0]);
      v18 = sub_23F61C0A0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F61CC88();
  __break(1u);
  return result;
}

uint64_t sub_23F477014(uint64_t result, unint64_t a2, unsigned __int8 a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v8 = result;
  v9 = a3;
  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0)
    goto LABEL_18;
  if ((a5 & 1) != 0)
  {
    sub_23F473F4C();
  }
  else
  {
    if (v11 > v10)
    {
      result = (uint64_t)sub_23F479894();
      goto LABEL_18;
    }
    sub_23F47AD80();
  }
  v12 = *v5;
  sub_23F61CD30();
  sub_23F61CD54();
  sub_23F61CD54();
  sub_23F61CD3C();
  result = sub_23F61CD60();
  v13 = -1 << *(_BYTE *)(v12 + 32);
  a4 = result & ~v13;
  if (((*(_QWORD *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v14 = ~v13;
    do
    {
      v15 = *(_QWORD *)(v12 + 48) + 24 * a4;
      v16 = *(_QWORD *)v15;
      v17 = *(_QWORD *)(v15 + 8);
      v18 = *(unsigned __int8 *)(v15 + 16);
      v19 = v17 >> 14;
      v20 = v8 >> 14 == v16 >> 14 && v19 == a2 >> 14;
      if (v20 && v18 == v9)
        goto LABEL_21;
      a4 = (a4 + 1) & v14;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_18:
  v22 = *v5;
  *(_QWORD *)(*v5 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v23 = *(_QWORD *)(v22 + 48) + 24 * a4;
  *(_QWORD *)v23 = v8;
  *(_QWORD *)(v23 + 8) = a2;
  *(_BYTE *)(v23 + 16) = v9;
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_21:
  result = sub_23F61CC88();
  __break(1u);
  return result;
}

uint64_t sub_23F4771B0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F61B9EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F475C44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F47A404();
      goto LABEL_12;
    }
    sub_23F47C914();
  }
  v12 = *v3;
  sub_23F3B121C(&qword_256E6FDB0, (void (*)(uint64_t))MEMORY[0x24BEB9D20]);
  v13 = sub_23F61C040();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3B121C(&qword_256E70168, (void (*)(uint64_t))MEMORY[0x24BEB9D20]);
      v18 = sub_23F61C0A0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F61CC88();
  __break(1u);
  return result;
}

void sub_23F477404(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v7 = sub_23F61B5D8();
  v43 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(&qword_256E71A60);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F35D2E8(&qword_256E70238);
  v40 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v35 - v17;
  v19 = *(_QWORD *)(*v3 + 16);
  v20 = *(_QWORD *)(*v3 + 24);
  v37 = v3;
  if (v20 <= v19 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      v36 = v16;
      sub_23F474250();
    }
    else
    {
      if (v20 > v19)
      {
        sub_23F479A3C();
        goto LABEL_18;
      }
      v36 = v16;
      sub_23F47B050();
    }
    v21 = *v3;
    sub_23F61CD30();
    sub_23F3E4100();
    v22 = sub_23F61CD60();
    v23 = -1 << *(_BYTE *)(v21 + 32);
    a2 = v22 & ~v23;
    v46 = v21 + 56;
    if (((*(_QWORD *)(v21 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v45 = ~v23;
      v44 = *(_QWORD *)(v40 + 72);
      v38 = v21;
      v39 = v9;
      do
      {
        sub_23F382EF8(*(_QWORD *)(v21 + 48) + v44 * a2, (uint64_t)v18, &qword_256E70238);
        v24 = (uint64_t)&v11[*(int *)(v9 + 48)];
        sub_23F382EF8((uint64_t)v18, (uint64_t)v11, &qword_256E70238);
        sub_23F382EF8(a1, v24, &qword_256E70238);
        if (sub_23F36195C((uint64_t)v11, 1, v7) == 1)
        {
          if (sub_23F36195C(v24, 1, v7) == 1)
            goto LABEL_21;
        }
        else
        {
          sub_23F382EF8((uint64_t)v11, (uint64_t)v15, &qword_256E70238);
          if (sub_23F36195C(v24, 1, v7) != 1)
          {
            v25 = v43;
            v26 = v41;
            (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v41, v24, v7);
            sub_23F3B121C(&qword_256E71170, (void (*)(uint64_t))MEMORY[0x24BEB8FE0]);
            v42 = sub_23F61C0A0();
            v27 = a1;
            v28 = *(void (**)(char *, uint64_t))(v25 + 8);
            v29 = v26;
            v21 = v38;
            v9 = v39;
            v28(v29, v7);
            v28(v15, v7);
            a1 = v27;
            sub_23F481698((uint64_t)v11, &qword_256E70238);
            sub_23F481698((uint64_t)v18, &qword_256E70238);
            if ((v42 & 1) != 0)
              goto LABEL_22;
            goto LABEL_17;
          }
          (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v7);
        }
        sub_23F481698((uint64_t)v11, &qword_256E71A60);
        sub_23F481698((uint64_t)v18, &qword_256E70238);
LABEL_17:
        a2 = (a2 + 1) & v45;
      }
      while (((*(_QWORD *)(v46 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_18:
  v30 = a1;
  v31 = *v37;
  *(_QWORD *)(*v37 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  sub_23F383004(v30, *(_QWORD *)(v31 + 48) + *(_QWORD *)(v40 + 72) * a2, &qword_256E70238);
  v32 = *(_QWORD *)(v31 + 16);
  v33 = __OFADD__(v32, 1);
  v34 = v32 + 1;
  if (v33)
  {
    __break(1u);
LABEL_21:
    sub_23F481698((uint64_t)v11, &qword_256E70238);
    sub_23F481698((uint64_t)v18, &qword_256E70238);
LABEL_22:
    sub_23F61CC88();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v31 + 16) = v34;
  }
}

uint64_t sub_23F4777F0(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t i, char a6)
{
  uint64_t *v6;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  BOOL v20;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v10 = result;
  v11 = *(_QWORD *)(*v6 + 16);
  v12 = *(_QWORD *)(*v6 + 24);
  if (v12 > v11 && (a6 & 1) != 0)
    goto LABEL_23;
  if ((a6 & 1) != 0)
  {
    sub_23F4746D0();
  }
  else
  {
    if (v12 > v11)
    {
      result = (uint64_t)sub_23F479C64();
      goto LABEL_23;
    }
    sub_23F47B4A8();
  }
  v13 = *v6;
  result = sub_23F61C040();
  v14 = -1 << *(_BYTE *)(v13 + 32);
  i = result & ~v14;
  v15 = v13 + 56;
  if (((*(_QWORD *)(v13 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v16 = *(_QWORD *)(v13 + 48);
    result = sub_23F5AA1B8(*(_QWORD *)(v16 + 32 * i), *(_QWORD *)(v16 + 32 * i + 8), *(_QWORD *)(v16 + 32 * i + 16), *(_QWORD *)(v16 + 32 * i + 24), v10, a2, a3, a4);
    if ((result & 1) != 0)
      goto LABEL_26;
    v17 = ~v14;
    for (i = (i + 1) & v17; ((*(_QWORD *)(v15 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v17)
    {
      v18 = (_QWORD *)(v16 + 32 * i);
      v19 = v18[2] == a3 && v18[3] == a4;
      v20 = v19 && *v18 >> 16 == v10 >> 16;
      if (v20 && v18[1] >> 16 == a2 >> 16)
        goto LABEL_26;
      result = sub_23F61CC10();
      if ((result & 1) != 0)
        goto LABEL_26;
    }
  }
LABEL_23:
  v22 = *v6;
  *(_QWORD *)(*v6 + 8 * (i >> 6) + 56) |= 1 << i;
  v23 = (unint64_t *)(*(_QWORD *)(v22 + 48) + 32 * i);
  *v23 = v10;
  v23[1] = a2;
  v23[2] = a3;
  v23[3] = a4;
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_26:
  result = sub_23F61CC88();
  __break(1u);
  return result;
}

uint64_t sub_23F4779E8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F61BCE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F475C44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F47A404();
      goto LABEL_12;
    }
    sub_23F47C914();
  }
  v12 = *v3;
  sub_23F3B121C(&qword_256E6FEB8, (void (*)(uint64_t))MEMORY[0x24BEBA5E0]);
  v13 = sub_23F61C040();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3B121C(&qword_256E6FEC0, (void (*)(uint64_t))MEMORY[0x24BEBA5E0]);
      v18 = sub_23F61C0A0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F61CC88();
  __break(1u);
  return result;
}

uint64_t sub_23F477C3C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F617D08();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F475C44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F47A404();
      goto LABEL_12;
    }
    sub_23F47C914();
  }
  v12 = *v3;
  sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
  v13 = sub_23F61C040();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3B121C(&qword_256E701E8, (void (*)(uint64_t))MEMORY[0x24BE52140]);
      v18 = sub_23F61C0A0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F61CC88();
  __break(1u);
  return result;
}

void sub_23F477E90(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  _BYTE *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  BOOL v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;

  v42 = (uint64_t *)a1;
  v37 = type metadata accessor for DependencyId(0);
  v6 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(*v3 + 16);
  v10 = *(_QWORD *)(*v3 + 24);
  v34 = v6;
  v35 = v3;
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_37;
  if ((a3 & 1) != 0)
  {
    sub_23F4749D4();
  }
  else
  {
    if (v10 > v9)
    {
      sub_23F479FC4();
      goto LABEL_37;
    }
    sub_23F47B78C();
  }
  v11 = *v3;
  sub_23F61CD30();
  v12 = (uint64_t)v42;
  sub_23F617BA0();
  sub_23F3C7954();
  swift_bridgeObjectRelease();
  v13 = v12 + *(int *)(v37 + 20);
  sub_23F617D08();
  sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
  v36 = v13;
  sub_23F61C04C();
  v14 = sub_23F61CD60();
  v15 = -1 << *(_BYTE *)(v11 + 32);
  a2 = v14 & ~v15;
  v40 = v11 + 56;
  v41 = v11;
  if (((*(_QWORD *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v39 = ~v15;
    v38 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_23F362600(*(_QWORD *)(v41 + 48) + v38 * a2, (uint64_t)v8, type metadata accessor for DependencyId);
      v16 = *(_QWORD *)v8;
      v17 = *v42;
      v18 = *(_QWORD *)(*(_QWORD *)v8 + 16);
      if (v18 == *(_QWORD *)(*v42 + 16))
      {
        if (v18)
          v19 = v16 == v17;
        else
          v19 = 1;
        if (!v19)
        {
          v20 = (_BYTE *)(v16 + 56);
          v21 = (unsigned __int8 *)(v17 + 56);
          do
          {
            v22 = *((_QWORD *)v20 - 2);
            v23 = *((_QWORD *)v20 - 1);
            v24 = *v20;
            v25 = *((_QWORD *)v21 - 2);
            v26 = *((_QWORD *)v21 - 1);
            v27 = *v21;
            if (v22)
            {
              if (!v25)
                goto LABEL_17;
              v28 = *((_QWORD *)v20 - 3) == *((_QWORD *)v21 - 3) && v22 == v25;
              if (!v28 && (sub_23F61CC64() & 1) == 0)
                goto LABEL_17;
            }
            else if (v25)
            {
              goto LABEL_17;
            }
            if ((v24 & 1) != 0)
            {
              if (!v27)
                goto LABEL_17;
            }
            else
            {
              if (v23 == v26)
                v29 = v27;
              else
                v29 = 1;
              if ((v29 & 1) != 0)
                goto LABEL_17;
            }
            v21 += 32;
            v20 += 32;
            --v18;
          }
          while (v18);
        }
        if ((sub_23F617CD8() & 1) != 0)
          goto LABEL_40;
      }
LABEL_17:
      sub_23F3663AC((uint64_t)v8, type metadata accessor for DependencyId);
      a2 = (a2 + 1) & v39;
    }
    while (((*(_QWORD *)(v40 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_37:
  v30 = *v35;
  *(_QWORD *)(*v35 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  sub_23F36262C((uint64_t)v42, *(_QWORD *)(v30 + 48) + *(_QWORD *)(v34 + 72) * a2, type metadata accessor for DependencyId);
  v31 = *(_QWORD *)(v30 + 16);
  v32 = __OFADD__(v31, 1);
  v33 = v31 + 1;
  if (!v32)
  {
    *(_QWORD *)(v30 + 16) = v33;
    return;
  }
  __break(1u);
LABEL_40:
  sub_23F3663AC((uint64_t)v8, type metadata accessor for DependencyId);
  sub_23F61CC88();
  __break(1u);
}

uint64_t sub_23F47819C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_23F474E28();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_23F479E1C();
LABEL_22:
      v25 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * a2) = v6;
      v26 = *(_QWORD *)(v25 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (!v27)
      {
        *(_QWORD *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_23F47BD2C();
  }
  v9 = *v3;
  sub_23F61C10C();
  sub_23F61CD30();
  sub_23F61C22C();
  v10 = sub_23F61CD60();
  result = swift_bridgeObjectRelease();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v12 = sub_23F61C10C();
  v14 = v13;
  if (v12 == sub_23F61C10C() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v17 = sub_23F61CC64();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v19 = sub_23F61C10C();
      v21 = v20;
      if (v19 == sub_23F61C10C() && v21 == v22)
        goto LABEL_25;
      v24 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for NLLanguage(0);
  result = sub_23F61CC88();
  __break(1u);
  return result;
}

void sub_23F4783C8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t DecorationTuple;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  __int128 v30[4];

  DecorationTuple = type metadata accessor for QueryDecorationTuple(0);
  v29 = *(_QWORD *)(DecorationTuple - 8);
  MEMORY[0x24BDAC7A8](DecorationTuple);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F618BB4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(*v3 + 16);
  v15 = *(_QWORD *)(*v3 + 24);
  v28 = v3;
  if (v15 > v14 && (a3 & 1) != 0)
    goto LABEL_13;
  if ((a3 & 1) != 0)
  {
    sub_23F475134();
  }
  else
  {
    if (v15 > v14)
    {
      sub_23F479FC4();
      goto LABEL_13;
    }
    sub_23F47C004();
  }
  v16 = *v3;
  sub_23F61CD30();
  sub_23F618BCC();
  sub_23F3B121C(&qword_256E70F20, (void (*)(uint64_t))MEMORY[0x24BE57570]);
  sub_23F61C04C();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v17 = *(_QWORD *)(a1 + *(int *)(DecorationTuple + 20));
  sub_23F617BA0();
  sub_23F55BF30(v30, v17);
  swift_bridgeObjectRelease();
  v18 = sub_23F61CD60();
  v19 = -1 << *(_BYTE *)(v16 + 32);
  a2 = v18 & ~v19;
  if (((*(_QWORD *)(v16 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v20 = ~v19;
    v21 = *(_QWORD *)(v29 + 72);
    do
    {
      sub_23F362600(*(_QWORD *)(v16 + 48) + v21 * a2, (uint64_t)v9, type metadata accessor for QueryDecorationTuple);
      if ((sub_23F618BF0() & 1) != 0)
      {
        sub_23F35D4F4();
        if ((v22 & 1) != 0)
          goto LABEL_16;
      }
      sub_23F3663AC((uint64_t)v9, type metadata accessor for QueryDecorationTuple);
      a2 = (a2 + 1) & v20;
    }
    while (((*(_QWORD *)(v16 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_13:
  v23 = *v28;
  *(_QWORD *)(*v28 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  sub_23F36262C(a1, *(_QWORD *)(v23 + 48) + *(_QWORD *)(v29 + 72) * a2, type metadata accessor for QueryDecorationTuple);
  v24 = *(_QWORD *)(v23 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v23 + 16) = v26;
    return;
  }
  __break(1u);
LABEL_16:
  sub_23F3663AC((uint64_t)v9, type metadata accessor for QueryDecorationTuple);
  sub_23F61CC88();
  __break(1u);
}

void sub_23F47869C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t DecorationTupleParameter;
  uint64_t DecorationEntityValue;
  uint64_t v64;
  uint64_t v65;

  v65 = a1;
  v6 = sub_23F618D28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F618D88();
  v11 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  v58 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
  v14 = MEMORY[0x24BDAC7A8](DecorationEntityValue);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v56 = (uint64_t)&v50 - v17;
  v61 = sub_23F35D2E8(&qword_256E6F7F8);
  MEMORY[0x24BDAC7A8](v61);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationTupleParameter = type metadata accessor for QueryDecorationTupleParameter(0);
  v60 = *(_QWORD *)(DecorationTupleParameter - 8);
  MEMORY[0x24BDAC7A8](DecorationTupleParameter);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(*v3 + 16);
  v23 = *(_QWORD *)(*v3 + 24);
  v59 = v3;
  if (v23 <= v22 || (a3 & 1) == 0)
  {
    v54 = v16;
    if ((a3 & 1) != 0)
    {
      v51 = v13;
      sub_23F4752B8();
    }
    else
    {
      if (v23 > v22)
      {
        sub_23F479FC4();
        goto LABEL_25;
      }
      v51 = v13;
      sub_23F47C178();
    }
    v24 = *v3;
    sub_23F61CD30();
    QueryDecorationTupleParameter.hash(into:)();
    v25 = sub_23F61CD60();
    v26 = -1 << *(_BYTE *)(v24 + 32);
    a2 = v25 & ~v26;
    v64 = v24;
    v27 = v24 + 56;
    if (((*(_QWORD *)(v24 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v50 = v9;
      v55 = v7;
      v53 = v6;
      v28 = ~v26;
      v29 = *(_QWORD *)(v60 + 72);
      do
      {
        sub_23F362600(*(_QWORD *)(v64 + 48) + v29 * a2, (uint64_t)v21, type metadata accessor for QueryDecorationTupleParameter);
        if ((sub_23F61BB6C() & 1) != 0)
        {
          v30 = *(int *)(DecorationTupleParameter + 20);
          v31 = &v21[v30];
          v32 = v65 + v30;
          if (*(_QWORD *)&v21[v30] == *(_QWORD *)(v65 + v30))
          {
            v33 = *(int *)(type metadata accessor for QueryDecorationEntity(0) + 20);
            v34 = (uint64_t)&v31[v33];
            v35 = v32 + v33;
            v36 = (uint64_t)&v19[*(int *)(v61 + 48)];
            sub_23F362600(v34, (uint64_t)v19, type metadata accessor for QueryDecorationEntityValue);
            sub_23F362600(v35, v36, type metadata accessor for QueryDecorationEntityValue);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload)
            {
              if (EnumCaseMultiPayload == 1)
              {
                v38 = (uint64_t)v54;
                sub_23F362600((uint64_t)v19, (uint64_t)v54, type metadata accessor for QueryDecorationEntityValue);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  v39 = v50;
                  v40 = v36;
                  v41 = v53;
                  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v50, v40, v53);
                  v52 = sub_23F618CEC();
                  v42 = v55;
                  goto LABEL_23;
                }
                (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v38, v53);
              }
              else if (swift_getEnumCaseMultiPayload() == 2)
              {
                goto LABEL_28;
              }
            }
            else
            {
              v38 = v56;
              sub_23F362600((uint64_t)v19, v56, type metadata accessor for QueryDecorationEntityValue);
              if (!swift_getEnumCaseMultiPayload())
              {
                v39 = v51;
                v43 = v36;
                v41 = v57;
                (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v51, v43, v57);
                v52 = sub_23F618D7C();
                v42 = v58;
LABEL_23:
                v44 = v39;
                v45 = *(void (**)(char *, uint64_t))(v42 + 8);
                v45(v44, v41);
                v45((char *)v38, v41);
                sub_23F3663AC((uint64_t)v19, type metadata accessor for QueryDecorationEntityValue);
                if ((v52 & 1) != 0)
                  goto LABEL_29;
                goto LABEL_24;
              }
              (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v38, v57);
            }
            sub_23F481698((uint64_t)v19, &qword_256E6F7F8);
          }
        }
LABEL_24:
        sub_23F3663AC((uint64_t)v21, type metadata accessor for QueryDecorationTupleParameter);
        a2 = (a2 + 1) & v28;
      }
      while (((*(_QWORD *)(v27 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_25:
  v46 = *v59;
  *(_QWORD *)(*v59 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  sub_23F36262C(v65, *(_QWORD *)(v46 + 48) + *(_QWORD *)(v60 + 72) * a2, type metadata accessor for QueryDecorationTupleParameter);
  v47 = *(_QWORD *)(v46 + 16);
  v48 = __OFADD__(v47, 1);
  v49 = v47 + 1;
  if (v48)
  {
    __break(1u);
LABEL_28:
    sub_23F3663AC((uint64_t)v19, type metadata accessor for QueryDecorationEntityValue);
LABEL_29:
    sub_23F3663AC((uint64_t)v21, type metadata accessor for QueryDecorationTupleParameter);
    sub_23F61CC88();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v46 + 16) = v49;
  }
}

#error "23F478C24: call analysis failed (funcsize=85)"

void sub_23F478D08(_QWORD *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  BOOL v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v34;
  uint64_t v35;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_23F4758F4();
  }
  else
  {
    if (v7 > v6)
    {
      sub_23F47A21C();
      goto LABEL_22;
    }
    sub_23F47C5EC();
  }
  v8 = *v3;
  sub_23F61CD30();
  v9 = *a1;
  v10 = a1[1];
  v11 = a1[2];
  v12 = a1[3];
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  v35 = v11;
  sub_23F61C22C();
  v13 = v12;
  swift_bridgeObjectRelease();
  v14 = sub_23F61CD60();
  v15 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v14 & ~v15;
  v16 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = v8;
    v18 = ~v15;
    v34 = a1[4];
    do
    {
      v19 = (_QWORD *)(*(_QWORD *)(v17 + 48) + 40 * a2);
      v21 = v19[2];
      v20 = v19[3];
      v22 = v19[4];
      v23 = *v19 == v9 && v19[1] == v10;
      if (v23 || (sub_23F61CC64() & 1) != 0)
      {
        v24 = v21 == v35 && v20 == v13;
        if (v24 || (sub_23F61CC64() & 1) != 0)
        {
          sub_23F4903B0(v22, v34);
          if ((v25 & 1) != 0)
            goto LABEL_25;
        }
      }
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_22:
  v26 = *v32;
  *(_QWORD *)(*v32 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v27 = *(_QWORD *)(v26 + 48) + 40 * a2;
  v28 = *((_OWORD *)a1 + 1);
  *(_OWORD *)v27 = *(_OWORD *)a1;
  *(_OWORD *)(v27 + 16) = v28;
  *(_QWORD *)(v27 + 32) = a1[4];
  v29 = *(_QWORD *)(v26 + 16);
  v30 = __OFADD__(v29, 1);
  v31 = v29 + 1;
  if (!v30)
  {
    *(_QWORD *)(v26 + 16) = v31;
    return;
  }
  __break(1u);
LABEL_25:
  sub_23F61CC88();
  __break(1u);
}

uint64_t sub_23F478F24(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F618ED8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F475C44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F47A404();
      goto LABEL_12;
    }
    sub_23F47C914();
  }
  v12 = *v3;
  sub_23F3B121C(&qword_256E70148, (void (*)(uint64_t))MEMORY[0x24BE57C08]);
  v13 = sub_23F61C040();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3B121C(&qword_256E74E18, (void (*)(uint64_t))MEMORY[0x24BE57C08]);
      v18 = sub_23F61C0A0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F61CC88();
  __break(1u);
  return result;
}

uint64_t sub_23F479178(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F618C20();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F475C44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F47A404();
      goto LABEL_12;
    }
    sub_23F47C914();
  }
  v12 = *v3;
  sub_23F3B121C(&qword_256E70090, (void (*)(uint64_t))MEMORY[0x24BE57608]);
  v13 = sub_23F61C040();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3B121C(&qword_256E70F30, (void (*)(uint64_t))MEMORY[0x24BE57608]);
      v18 = sub_23F61C0A0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F61CC88();
  __break(1u);
  return result;
}

uint64_t sub_23F4793CC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23F61B5D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23F475C44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23F47A404();
      goto LABEL_12;
    }
    sub_23F47C914();
  }
  v12 = *v3;
  sub_23F3B121C(&qword_256E70528, (void (*)(uint64_t))MEMORY[0x24BEB8FE0]);
  v13 = sub_23F61C040();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23F3B121C(&qword_256E71170, (void (*)(uint64_t))MEMORY[0x24BEB8FE0]);
      v18 = sub_23F61C0A0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23F61CC88();
  __break(1u);
  return result;
}

void *sub_23F479620()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;

  v1 = v0;
  sub_23F35D2E8(&qword_256E71A40);
  v2 = *v0;
  v3 = sub_23F61C898();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (v12)
    goto LABEL_24;
  while (1)
  {
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v13)
      goto LABEL_26;
    v12 = *(_QWORD *)(v6 + 8 * v14);
    ++v9;
    if (!v12)
    {
      v9 = v14 + 1;
      if (v14 + 1 >= v13)
        goto LABEL_26;
      v12 = *(_QWORD *)(v6 + 8 * v9);
      if (!v12)
      {
        v9 = v14 + 2;
        if (v14 + 2 >= v13)
          goto LABEL_26;
        v12 = *(_QWORD *)(v6 + 8 * v9);
        if (!v12)
          break;
      }
    }
    do
LABEL_24:
      v12 &= v12 - 1;
    while (v12);
  }
  v15 = v14 + 3;
  if (v15 >= v13)
    goto LABEL_26;
  v12 = *(_QWORD *)(v6 + 8 * v15);
  if (v12)
  {
    v9 = v15;
    goto LABEL_24;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v12 = *(_QWORD *)(v6 + 8 * v9);
    ++v15;
    if (v12)
      goto LABEL_24;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_23F479780()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;

  v6 = v0;
  sub_23F35D2E8(&qword_256E71A50);
  v7 = sub_23F482ABC();
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    sub_23F3D9AF4();
    *v6 = v7;
    sub_23F383568();
    return;
  }
  v8 = (void *)sub_23F4823E4();
  if (v11)
    v12 = (unint64_t)v8 >= v10;
  else
    v12 = 1;
  if (v12)
    sub_23F482BBC(v8, v9);
  sub_23F4820FC();
  if (!v5)
    goto LABEL_10;
LABEL_9:
  sub_23F48240C();
  while (1)
  {
    v16 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v13);
    v17 = v16[1];
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v13);
    *v18 = *v16;
    v18[1] = v17;
    sub_23F617BA0();
    if (v5)
      goto LABEL_9;
LABEL_10:
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v3)
      goto LABEL_26;
    ++v4;
    if (!*(_QWORD *)(v2 + 8 * v14))
    {
      v4 = v14 + 1;
      if (v14 + 1 >= v3)
        goto LABEL_26;
      if (!*(_QWORD *)(v2 + 8 * v4))
      {
        v4 = v14 + 2;
        if (v14 + 2 >= v3)
          goto LABEL_26;
        if (!*(_QWORD *)(v2 + 8 * v4))
          break;
      }
    }
LABEL_23:
    sub_23F4823C4();
  }
  v15 = v14 + 3;
  if (v15 >= v3)
    goto LABEL_26;
  if (*(_QWORD *)(v2 + 8 * v15))
  {
    v4 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v3)
      goto LABEL_26;
    ++v15;
    if (*(_QWORD *)(v2 + 8 * v4))
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

void *sub_23F479894()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v1 = v0;
  sub_23F35D2E8(&qword_256E74DD0);
  v2 = *v0;
  v3 = sub_23F61C898();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    v19 = 3 * i;
    v20 = *(_QWORD *)(v2 + 48) + 8 * v19;
    v21 = *(_BYTE *)(v20 + 16);
    v22 = *(_QWORD *)(v4 + 48) + 8 * v19;
    *(_OWORD *)v22 = *(_OWORD *)v20;
    *(_BYTE *)(v22 + 16) = v21;
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_23F479A3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_23F35D2E8(&qword_256E70238);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E74F60);
  v6 = *v0;
  v7 = sub_23F61C898();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release();
LABEL_30:
    *v1 = v8;
    return;
  }
  v25 = v1;
  v9 = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 56 + 8 * v11)
    memmove(v9, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  if (!v16)
    goto LABEL_12;
LABEL_11:
  v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v18 | (v13 << 6); ; i = __clz(__rbit64(v21)) + (v13 << 6))
  {
    v23 = *(_QWORD *)(v3 + 72) * i;
    sub_23F382EF8(*(_QWORD *)(v6 + 48) + v23, (uint64_t)v5, &qword_256E70238);
    sub_23F383004((uint64_t)v5, *(_QWORD *)(v8 + 48) + v23, &qword_256E70238);
    if (v16)
      goto LABEL_11;
LABEL_12:
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v20 >= v17)
      goto LABEL_28;
    v21 = *(_QWORD *)(v10 + 8 * v20);
    ++v13;
    if (!v21)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v17)
        goto LABEL_28;
      v21 = *(_QWORD *)(v10 + 8 * v13);
      if (!v21)
      {
        v13 = v20 + 2;
        if (v20 + 2 >= v17)
          goto LABEL_28;
        v21 = *(_QWORD *)(v10 + 8 * v13);
        if (!v21)
          break;
      }
    }
LABEL_25:
    v16 = (v21 - 1) & v21;
  }
  v22 = v20 + 3;
  if (v22 >= v17)
  {
LABEL_28:
    swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v21 = *(_QWORD *)(v10 + 8 * v22);
  if (v21)
  {
    v13 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v21 = *(_QWORD *)(v10 + 8 * v13);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_32:
  __break(1u);
}

void *sub_23F479C64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  sub_23F35D2E8(&qword_256E74F50);
  v2 = *v0;
  v3 = sub_23F61C898();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = *(_QWORD *)(v2 + 48) + 32 * i;
    v22 = *(_QWORD *)(v20 + 16);
    v21 = *(_QWORD *)(v20 + 24);
    v23 = *(_QWORD *)(v4 + 48) + 32 * i;
    *(_OWORD *)v23 = *(_OWORD *)v20;
    *(_QWORD *)(v23 + 16) = v22;
    *(_QWORD *)(v23 + 24) = v21;
    result = (void *)sub_23F617BA0();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23F479E1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;

  v1 = v0;
  sub_23F35D2E8(&qword_256E74E10);
  v2 = *v0;
  v3 = sub_23F61C898();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = v20;
    result = v20;
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_23F479FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F362ABC();
  v6 = v5;
  v8 = v7;
  v9 = *(_QWORD *)(v7(0) - 8);
  sub_23F482740();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F4827F8();
  v11 = sub_23F482ACC();
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_26:
    sub_23F38496C();
    sub_23F482CD0();
    sub_23F362948();
    return;
  }
  v12 = (void *)sub_23F48234C();
  if (v15)
    v16 = (unint64_t)v12 >= v14;
  else
    v16 = 1;
  if (v16)
    sub_23F482BB0(v12, v13);
  sub_23F482138();
  if (!v4)
    goto LABEL_10;
LABEL_9:
  sub_23F48242C();
  while (1)
  {
    v20 = *(_QWORD *)(v9 + 72) * v17;
    sub_23F362600(*(_QWORD *)(v6 + 48) + v20, v0, v8);
    sub_23F36262C(v0, *(_QWORD *)(v11 + 48) + v20, v8);
    if (v4)
      goto LABEL_9;
LABEL_10:
    v18 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v2)
      goto LABEL_26;
    ++v3;
    if (!*(_QWORD *)(v1 + 8 * v18))
    {
      v3 = v18 + 1;
      if (v18 + 1 >= v2)
        goto LABEL_26;
      if (!*(_QWORD *)(v1 + 8 * v3))
      {
        v3 = v18 + 2;
        if (v18 + 2 >= v2)
          goto LABEL_26;
        if (!*(_QWORD *)(v1 + 8 * v3))
          break;
      }
    }
LABEL_23:
    sub_23F4823AC();
  }
  v19 = v18 + 3;
  if (v19 >= v2)
    goto LABEL_26;
  if (*(_QWORD *)(v1 + 8 * v19))
  {
    v3 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    v3 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v3 >= v2)
      goto LABEL_26;
    ++v19;
    if (*(_QWORD *)(v1 + 8 * v3))
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

void sub_23F47A118(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = v1;
  sub_23F35D2E8(a1);
  v8 = sub_23F482ABC();
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    sub_23F3D9AF4();
    *v7 = v8;
    sub_23F383568();
    return;
  }
  v9 = (void *)sub_23F4823E4();
  if (v12)
    v13 = (unint64_t)v9 >= v11;
  else
    v13 = 1;
  if (v13)
    sub_23F482BBC(v9, v10);
  sub_23F4820FC();
  if (!v6)
    goto LABEL_10;
LABEL_9:
  sub_23F48240C();
  while (1)
  {
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_23F617BA0();
    if (v6)
      goto LABEL_9;
LABEL_10:
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v4)
      goto LABEL_26;
    ++v5;
    if (!*(_QWORD *)(v3 + 8 * v15))
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v4)
        goto LABEL_26;
      if (!*(_QWORD *)(v3 + 8 * v5))
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v4)
          goto LABEL_26;
        if (!*(_QWORD *)(v3 + 8 * v5))
          break;
      }
    }
LABEL_23:
    sub_23F4823C4();
  }
  v16 = v15 + 3;
  if (v16 >= v4)
    goto LABEL_26;
  if (*(_QWORD *)(v3 + 8 * v16))
  {
    v5 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v4)
      goto LABEL_26;
    ++v16;
    if (*(_QWORD *)(v3 + 8 * v5))
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

void *sub_23F47A21C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v1 = v0;
  sub_23F35D2E8(&qword_256E74DE0);
  v2 = *v0;
  v3 = sub_23F61C898();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 5 * i;
    v21 = *(_QWORD *)(v2 + 48) + 8 * v20;
    v22 = *(_QWORD *)(v21 + 8);
    v23 = *(_QWORD *)(v21 + 16);
    v24 = *(_OWORD *)(v21 + 24);
    v25 = *(_QWORD *)(v4 + 48) + 8 * v20;
    *(_QWORD *)v25 = *(_QWORD *)v21;
    *(_QWORD *)(v25 + 8) = v22;
    *(_QWORD *)(v25 + 16) = v23;
    *(_OWORD *)(v25 + 24) = v24;
    sub_23F617BA0();
    sub_23F617BA0();
    result = (void *)sub_23F617BA0();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_23F47A404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F362ABC();
  v6 = v5;
  v8 = *(_QWORD *)(v7(0) - 8);
  sub_23F482740();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F4827F8();
  v10 = sub_23F482ACC();
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_26:
    sub_23F38496C();
    sub_23F482CD0();
    sub_23F362948();
    return;
  }
  v11 = (void *)sub_23F48234C();
  if (v14)
    v15 = (unint64_t)v11 >= v13;
  else
    v15 = 1;
  if (v15)
    sub_23F482BB0(v11, v12);
  sub_23F482138();
  if (!v4)
    goto LABEL_10;
LABEL_9:
  sub_23F48242C();
  while (1)
  {
    v19 = *(_QWORD *)(v8 + 72) * v16;
    sub_23F362D94(v0, *(_QWORD *)(v6 + 48) + v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
    sub_23F482084(*(_QWORD *)(v10 + 48) + v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
    if (v4)
      goto LABEL_9;
LABEL_10:
    v17 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v2)
      goto LABEL_26;
    ++v3;
    if (!*(_QWORD *)(v1 + 8 * v17))
    {
      v3 = v17 + 1;
      if (v17 + 1 >= v2)
        goto LABEL_26;
      if (!*(_QWORD *)(v1 + 8 * v3))
      {
        v3 = v17 + 2;
        if (v17 + 2 >= v2)
          goto LABEL_26;
        if (!*(_QWORD *)(v1 + 8 * v3))
          break;
      }
    }
LABEL_23:
    sub_23F4823AC();
  }
  v18 = v17 + 3;
  if (v18 >= v2)
    goto LABEL_26;
  if (*(_QWORD *)(v1 + 8 * v18))
  {
    v3 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v3 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v3 >= v2)
      goto LABEL_26;
    ++v18;
    if (*(_QWORD *)(v1 + 8 * v3))
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_23F47A558()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;

  v1 = v0;
  v2 = *v0;
  sub_23F35D2E8(&qword_256E71A40);
  result = sub_23F61C8A4();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_32;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (v9)
  {
LABEL_19:
    while (1)
    {
      sub_23F61CD30();
      sub_23F61CD3C();
      result = sub_23F61CD60();
      v14 = -1 << *(_BYTE *)(v4 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) == 0)
        break;
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
LABEL_28:
      v9 &= v9 - 1;
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      ++*(_QWORD *)(v4 + 16);
      if (!v9)
        goto LABEL_6;
    }
    v18 = 0;
    v19 = (unint64_t)(63 - v14) >> 6;
    while (++v16 != v19 || (v18 & 1) == 0)
    {
      v20 = v16 == v19;
      if (v16 == v19)
        v16 = 0;
      v18 |= v20;
      v21 = *(_QWORD *)(v11 + 8 * v16);
      if (v21 != -1)
      {
        v17 = __clz(__rbit64(~v21)) + (v16 << 6);
        goto LABEL_28;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_6:
    v12 = v5 + 1;
    if (!__OFADD__(v5, 1))
    {
      if (v12 < v10)
      {
        v9 = *(_QWORD *)(v6 + 8 * v12);
        ++v5;
        if (v9)
          goto LABEL_19;
        v5 = v12 + 1;
        if (v12 + 1 < v10)
        {
          v9 = *(_QWORD *)(v6 + 8 * v5);
          if (v9)
            goto LABEL_19;
          v5 = v12 + 2;
          if (v12 + 2 < v10)
          {
            v9 = *(_QWORD *)(v6 + 8 * v5);
            if (v9)
              goto LABEL_19;
            v13 = v12 + 3;
            if (v13 < v10)
            {
              v9 = *(_QWORD *)(v6 + 8 * v13);
              if (v9)
              {
                v5 = v13;
                goto LABEL_19;
              }
              while (1)
              {
                v5 = v13 + 1;
                if (__OFADD__(v13, 1))
                  goto LABEL_35;
                if (v5 >= v10)
                  break;
                v9 = *(_QWORD *)(v6 + 8 * v5);
                ++v13;
                if (v9)
                  goto LABEL_19;
              }
            }
          }
        }
      }
      result = swift_release();
      v1 = v0;
LABEL_32:
      *v1 = v4;
      return result;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

void sub_23F47A794()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;

  v1 = v0;
  v2 = type metadata accessor for ActionResolver.Parameter(0);
  v33 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_23F35D2E8(&qword_256E74F28);
  v6 = sub_23F61C8A4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release();
LABEL_34:
    *v1 = v7;
    return;
  }
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = *(_QWORD *)(v5 + 56);
  v30 = v0;
  v31 = v5 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & v9;
  v32 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 56;
  swift_retain();
  v13 = 0;
  if (!v11)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = *(_QWORD *)(v33 + 72);
    sub_23F362600(*(_QWORD *)(v5 + 48) + v19 * i, (uint64_t)v4, type metadata accessor for ActionResolver.Parameter);
    sub_23F61CD30();
    sub_23F61A1D4();
    sub_23F3B121C(&qword_256E6FA98, (void (*)(uint64_t))MEMORY[0x24BE55070]);
    sub_23F61C04C();
    v20 = sub_23F61CD60();
    v21 = -1 << *(_BYTE *)(v7 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) == 0)
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      while (++v23 != v26 || (v25 & 1) == 0)
      {
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v23);
        if (v28 != -1)
        {
          v24 = __clz(__rbit64(~v28)) + (v23 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    sub_23F36262C((uint64_t)v4, *(_QWORD *)(v7 + 48) + v24 * v19, type metadata accessor for ActionResolver.Parameter);
    ++*(_QWORD *)(v7 + 16);
    if (v11)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_36;
    if (v16 >= v32)
      goto LABEL_32;
    v17 = *(_QWORD *)(v31 + 8 * v16);
    ++v13;
    if (!v17)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v32)
        goto LABEL_32;
      v17 = *(_QWORD *)(v31 + 8 * v13);
      if (!v17)
      {
        v13 = v16 + 2;
        if (v16 + 2 >= v32)
          goto LABEL_32;
        v17 = *(_QWORD *)(v31 + 8 * v13);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v11 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v32)
  {
LABEL_32:
    swift_release_n();
    v1 = v30;
    goto LABEL_34;
  }
  v17 = *(_QWORD *)(v31 + 8 * v18);
  if (v17)
  {
    v13 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v32)
      goto LABEL_32;
    v17 = *(_QWORD *)(v31 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
}

uint64_t sub_23F47AAD8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_23F35D2E8(&qword_256E71A50);
  v3 = sub_23F61C8A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_23F61CD30();
    sub_23F617BA0();
    sub_23F61C22C();
    result = sub_23F61CD60();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23F47AD80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  v1 = *v0;
  sub_23F35D2E8(&qword_256E74DD0);
  result = sub_23F61C8A4();
  v3 = result;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_32:
    result = swift_release();
    *v0 = v3;
    return result;
  }
  v4 = 0;
  v5 = *(_QWORD *)(v1 + 56);
  v28 = v1 + 56;
  v6 = 1 << *(_BYTE *)(v1 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & v5;
  v29 = (unint64_t)(v6 + 63) >> 6;
  v9 = result + 56;
  if ((v7 & v5) == 0)
    goto LABEL_7;
LABEL_6:
  v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v10 | (v4 << 6); ; i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    v15 = *(_QWORD *)(v1 + 48) + 24 * i;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(_BYTE *)(v15 + 16);
    sub_23F61CD30();
    sub_23F61CD54();
    sub_23F61CD54();
    sub_23F61CD3C();
    result = sub_23F61CD60();
    v19 = -1 << *(_BYTE *)(v3 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v9 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v27 = *(_QWORD *)(v3 + 48) + 24 * v22;
    *(_QWORD *)v27 = v16;
    *(_QWORD *)(v27 + 8) = v17;
    *(_BYTE *)(v27 + 16) = v18;
    ++*(_QWORD *)(v3 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_34;
    if (v12 >= v29)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v29)
        goto LABEL_32;
      v13 = *(_QWORD *)(v28 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v29)
          goto LABEL_32;
        v13 = *(_QWORD *)(v28 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_20:
    v8 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v29)
    goto LABEL_32;
  v13 = *(_QWORD *)(v28 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v29)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_35:
  __break(1u);
  return result;
}

void sub_23F47B050()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;

  v1 = v0;
  v2 = sub_23F61B5D8();
  v49 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v48 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F35D2E8(&qword_256E70238);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v46 - v9;
  v11 = *v0;
  sub_23F35D2E8(&qword_256E74F60);
  v12 = sub_23F61C8A4();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
  {
    swift_release();
LABEL_37:
    *v1 = v13;
    return;
  }
  v47 = v0;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 56);
  v50 = v11 + 56;
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v51 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 56;
  swift_retain();
  v19 = v17;
  v20 = 0;
  if (!v17)
    goto LABEL_7;
LABEL_6:
  v53 = (v19 - 1) & v19;
  v54 = v20;
  for (i = __clz(__rbit64(v19)) | (v20 << 6); ; i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    v26 = *(_QWORD *)(v11 + 48);
    v52 = *(_QWORD *)(v5 + 72);
    sub_23F382EF8(v26 + v52 * i, (uint64_t)v10, &qword_256E70238);
    sub_23F61CD30();
    sub_23F382EF8((uint64_t)v10, (uint64_t)v8, &qword_256E70238);
    if (sub_23F36195C((uint64_t)v8, 1, v2) == 1)
    {
      sub_23F61CD48();
    }
    else
    {
      v27 = v10;
      v28 = v13;
      v29 = v8;
      v30 = v49;
      v31 = v11;
      v32 = v5;
      v33 = v2;
      v34 = v48;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v48, v29, v33);
      sub_23F61CD48();
      sub_23F3B121C(&qword_256E70528, (void (*)(uint64_t))MEMORY[0x24BEB8FE0]);
      sub_23F61C04C();
      v35 = *(void (**)(char *, uint64_t))(v30 + 8);
      v8 = v29;
      v13 = v28;
      v10 = v27;
      v36 = v34;
      v2 = v33;
      v5 = v32;
      v11 = v31;
      v35(v36, v2);
    }
    v37 = sub_23F61CD60();
    v38 = -1 << *(_BYTE *)(v13 + 32);
    v39 = v37 & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v18 + 8 * (v39 >> 6))) == 0)
    {
      v42 = 0;
      v43 = (unint64_t)(63 - v38) >> 6;
      while (++v40 != v43 || (v42 & 1) == 0)
      {
        v44 = v40 == v43;
        if (v40 == v43)
          v40 = 0;
        v42 |= v44;
        v45 = *(_QWORD *)(v18 + 8 * v40);
        if (v45 != -1)
        {
          v41 = __clz(__rbit64(~v45)) + (v40 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v41 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v18 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v18 + ((v41 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v41;
    sub_23F383004((uint64_t)v10, *(_QWORD *)(v13 + 48) + v41 * v52, &qword_256E70238);
    ++*(_QWORD *)(v13 + 16);
    v19 = v53;
    v20 = v54;
    if (v53)
      goto LABEL_6;
LABEL_7:
    v22 = v20 + 1;
    if (__OFADD__(v20, 1))
      goto LABEL_39;
    if (v22 >= v51)
      goto LABEL_35;
    v23 = *(_QWORD *)(v50 + 8 * v22);
    v24 = v20 + 1;
    if (!v23)
    {
      v24 = v20 + 2;
      if (v20 + 2 >= v51)
        goto LABEL_35;
      v23 = *(_QWORD *)(v50 + 8 * v24);
      if (!v23)
      {
        v24 = v20 + 3;
        if (v20 + 3 >= v51)
          goto LABEL_35;
        v23 = *(_QWORD *)(v50 + 8 * v24);
        if (!v23)
          break;
      }
    }
LABEL_20:
    v53 = (v23 - 1) & v23;
    v54 = v24;
  }
  v25 = v20 + 4;
  if (v20 + 4 >= v51)
  {
LABEL_35:
    swift_release_n();
    v1 = v47;
    goto LABEL_37;
  }
  v23 = *(_QWORD *)(v50 + 8 * v25);
  if (v23)
  {
    v24 = v20 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v51)
      goto LABEL_35;
    v23 = *(_QWORD *)(v50 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_20;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_23F47B4A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;

  v1 = v0;
  v2 = *v0;
  sub_23F35D2E8(&qword_256E74F50);
  v3 = sub_23F61C8A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v32 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v33 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v34 = v10;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v15 << 6))
  {
    v17 = v2;
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * i);
    v20 = *v18;
    v19 = v18[1];
    v21 = v18[2];
    v22 = v18[3];
    sub_23F617BA0();
    result = sub_23F61C040();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) == 0)
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      while (++v25 != v28 || (v27 & 1) == 0)
      {
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v8 + 8 * v25);
        if (v30 != -1)
        {
          v26 = __clz(__rbit64(~v30)) + (v25 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v8 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    v31 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v26);
    *v31 = v20;
    v31[1] = v19;
    v31[2] = v21;
    v31[3] = v22;
    ++*(_QWORD *)(v4 + 16);
    v2 = v17;
    v10 = v34;
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_36;
    if (v13 >= v33)
      goto LABEL_32;
    v14 = *(_QWORD *)(v32 + 8 * v13);
    v15 = v10 + 1;
    if (!v14)
    {
      v15 = v10 + 2;
      if (v10 + 2 >= v33)
        goto LABEL_32;
      v14 = *(_QWORD *)(v32 + 8 * v15);
      if (!v14)
      {
        v15 = v10 + 3;
        if (v10 + 3 >= v33)
          goto LABEL_32;
        v14 = *(_QWORD *)(v32 + 8 * v15);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v7 = (v14 - 1) & v14;
    v34 = v15;
  }
  v16 = v10 + 4;
  if (v10 + 4 >= v33)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v32 + 8 * v16);
  if (v14)
  {
    v15 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v33)
      goto LABEL_32;
    v14 = *(_QWORD *)(v32 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_23F47B78C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;

  v1 = v0;
  v2 = type metadata accessor for DependencyId(0);
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t **)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *v0;
  sub_23F35D2E8(&qword_256E74E58);
  v6 = sub_23F61C8A4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release();
    goto LABEL_43;
  }
  v34 = v0;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = *(_QWORD *)(v5 + 56);
  v38 = v5 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & v9;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 56;
  swift_retain();
  v13 = 0;
  v36 = v5;
  v37 = v7;
  v35 = v4;
  if (!v11)
    goto LABEL_7;
  do
  {
    v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v43 = v13;
    v15 = v14 | (v13 << 6);
LABEL_21:
    v20 = *(_QWORD *)(v5 + 48);
    v42 = *(_QWORD *)(v40 + 72);
    sub_23F362600(v20 + v42 * v15, (uint64_t)v4, type metadata accessor for DependencyId);
    sub_23F61CD30();
    v21 = *v4;
    sub_23F61CD3C();
    v22 = *(_QWORD *)(v21 + 16);
    if (!v22)
      goto LABEL_30;
    sub_23F617BA0();
    v23 = (unsigned __int8 *)(v21 + 56);
    do
    {
      v24 = *v23;
      if (*((_QWORD *)v23 - 2))
      {
        sub_23F61CD48();
        sub_23F617BA0();
        sub_23F61C22C();
        if (v24)
          goto LABEL_25;
      }
      else
      {
        sub_23F61CD48();
        if (v24)
        {
LABEL_25:
          sub_23F61CD48();
          goto LABEL_28;
        }
      }
      sub_23F61CD48();
      sub_23F61CD3C();
LABEL_28:
      swift_bridgeObjectRelease();
      v23 += 32;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    v5 = v36;
    v7 = v37;
    v4 = v35;
LABEL_30:
    sub_23F617D08();
    sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
    sub_23F61C04C();
    v25 = sub_23F61CD60();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = v25 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) == 0)
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      while (++v28 != v31 || (v30 & 1) == 0)
      {
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v12 + 8 * v28);
        if (v33 != -1)
        {
          v29 = __clz(__rbit64(~v33)) + (v28 << 6);
          goto LABEL_39;
        }
      }
      __break(1u);
      goto LABEL_45;
    }
    v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_39:
    *(_QWORD *)(v12 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    sub_23F36262C((uint64_t)v4, *(_QWORD *)(v7 + 48) + v29 * v42, type metadata accessor for DependencyId);
    ++*(_QWORD *)(v7 + 16);
    v13 = v43;
  }
  while (v11);
LABEL_7:
  v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v16 >= v39)
    goto LABEL_41;
  v17 = *(_QWORD *)(v38 + 8 * v16);
  v18 = v13 + 1;
  if (v17)
    goto LABEL_20;
  v18 = v13 + 2;
  if (v13 + 2 >= v39)
    goto LABEL_41;
  v17 = *(_QWORD *)(v38 + 8 * v18);
  if (v17)
    goto LABEL_20;
  v18 = v13 + 3;
  if (v13 + 3 >= v39)
    goto LABEL_41;
  v17 = *(_QWORD *)(v38 + 8 * v18);
  if (v17)
    goto LABEL_20;
  v19 = v13 + 4;
  if (v13 + 4 >= v39)
  {
LABEL_41:
    swift_release_n();
    v1 = v34;
LABEL_43:
    *v1 = v7;
    return;
  }
  v17 = *(_QWORD *)(v38 + 8 * v19);
  if (v17)
  {
    v18 = v13 + 4;
LABEL_20:
    v11 = (v17 - 1) & v17;
    v43 = v18;
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
    goto LABEL_21;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v39)
      goto LABEL_41;
    v17 = *(_QWORD *)(v38 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_20;
  }
LABEL_46:
  __break(1u);
}

void sub_23F47BBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t i;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  sub_23F482190();
  a29 = v33;
  a30 = v34;
  v36 = v35;
  sub_23F4824E8(v37, v38);
  v39 = sub_23F482548();
  if (!*(_QWORD *)(v31 + 16))
  {
LABEL_21:
    sub_23F3D9AF4();
    *v30 = v39;
    sub_23F482174();
    return;
  }
  sub_23F384958();
  v40 = v31 + 56;
  sub_23F4825FC();
  sub_23F482D50();
  v41 = 0;
  if (!v32)
    goto LABEL_4;
LABEL_3:
  v42 = __clz(__rbit64(v32));
  v32 &= v32 - 1;
  for (i = v42 | (v41 << 6); ; i = __clz(__rbit64(v45)) + (v41 << 6))
  {
    v47 = *(_QWORD *)(*(_QWORD *)(v31 + 48) + 8 * i);
    sub_23F3F9B00();
    sub_23F384324();
    v36(&a10, v47);
    v48 = sub_23F362C10();
    sub_23F482DF4(v48, *(_BYTE *)(v39 + 32));
    sub_23F61C874();
    sub_23F482C64();
    *(_QWORD *)(v39 + 56 + v49) |= v50;
    *(_QWORD *)(*(_QWORD *)(v39 + 48) + 8 * v51) = v47;
    ++*(_QWORD *)(v39 + 16);
    if (v32)
      goto LABEL_3;
LABEL_4:
    v44 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v44 >= (uint64_t)v30)
      goto LABEL_20;
    v45 = *(_QWORD *)(v40 + 8 * v44);
    ++v41;
    if (!v45)
    {
      v41 = v44 + 1;
      if (v44 + 1 >= (uint64_t)v30)
        goto LABEL_20;
      v45 = *(_QWORD *)(v40 + 8 * v41);
      if (!v45)
      {
        v41 = v44 + 2;
        if (v44 + 2 >= (uint64_t)v30)
          goto LABEL_20;
        v45 = *(_QWORD *)(v40 + 8 * v41);
        if (!v45)
          break;
      }
    }
LABEL_17:
    v32 = (v45 - 1) & v45;
  }
  v46 = v44 + 3;
  if (v46 >= (uint64_t)v30)
  {
LABEL_20:
    sub_23F3D9AF4();
    goto LABEL_21;
  }
  v45 = *(_QWORD *)(v40 + 8 * v46);
  if (v45)
  {
    v41 = v46;
    goto LABEL_17;
  }
  while (1)
  {
    v41 = v46 + 1;
    if (__OFADD__(v46, 1))
      break;
    if (v41 >= (uint64_t)v30)
      goto LABEL_20;
    v45 = *(_QWORD *)(v40 + 8 * v41);
    ++v46;
    if (v45)
      goto LABEL_17;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_23F47BD2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_23F35D2E8(&qword_256E74E10);
  v3 = sub_23F61C8A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v27 = v0;
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_23F61C10C();
    sub_23F61CD30();
    v17 = v16;
    sub_23F61C22C();
    v18 = sub_23F61CD60();
    result = swift_bridgeObjectRelease();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = v18 & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v8 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_36;
    if (v13 >= v29)
      goto LABEL_32;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v29)
        goto LABEL_32;
      v14 = *(_QWORD *)(v28 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v29)
          goto LABEL_32;
        v14 = *(_QWORD *)(v28 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v28 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v29)
      goto LABEL_32;
    v14 = *(_QWORD *)(v28 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_23F47C004()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  sub_23F362ABC();
  v3 = v2;
  v5 = *(_QWORD *)(sub_23F4829FC(v4, v2) - 8);
  sub_23F482740();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v14 - v7;
  v9 = *v0;
  sub_23F4829C4();
  sub_23F482548();
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release();
LABEL_22:
    sub_23F482CD0();
    sub_23F362948();
    return;
  }
  v14[1] = v0;
  sub_23F384958();
  sub_23F4824C4();
  swift_retain();
  v10 = 0;
  if (!v0)
    goto LABEL_4;
LABEL_3:
  sub_23F482894();
  while (1)
  {
    sub_23F362600(*(_QWORD *)(v9 + 48) + *(_QWORD *)(v5 + 72) * v11, (uint64_t)v8, v3);
    sub_23F482DCC((uint64_t)v8);
    if (v0)
      goto LABEL_3;
LABEL_4:
    v12 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v12 >= v1)
      goto LABEL_20;
    ++v10;
    if (!*(_QWORD *)(v9 + 8 * v12))
    {
      v10 = v12 + 1;
      if (v12 + 1 >= v1)
        goto LABEL_20;
      if (!*(_QWORD *)(v9 + 8 * v10))
      {
        v10 = v12 + 2;
        if (v12 + 2 >= v1)
          goto LABEL_20;
        if (!*(_QWORD *)(v9 + 8 * v10))
          break;
      }
    }
LABEL_17:
    sub_23F482840();
  }
  v13 = v12 + 3;
  if (v13 >= v1)
  {
LABEL_20:
    swift_release_n();
    goto LABEL_22;
  }
  if (*(_QWORD *)(v9 + 8 * v13))
  {
    v10 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    v10 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v10 >= v1)
      goto LABEL_20;
    ++v13;
    if (*(_QWORD *)(v9 + 8 * v10))
      goto LABEL_17;
  }
LABEL_24:
  __break(1u);
}

void sub_23F47C178()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t (*v14)(uint64_t);
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  char *v24;
  uint64_t DecorationEntity;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t DecorationTupleParameter;
  uint64_t DecorationEntityValue;
  uint64_t v43;

  v1 = v0;
  DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
  MEMORY[0x24BDAC7A8](DecorationEntityValue);
  v43 = (uint64_t)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationTupleParameter = type metadata accessor for QueryDecorationTupleParameter(0);
  v40 = *(_QWORD *)(DecorationTupleParameter - 8);
  MEMORY[0x24BDAC7A8](DecorationTupleParameter);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_23F35D2E8(&qword_256E74E00);
  v6 = sub_23F61C8A4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release();
LABEL_39:
    *v1 = v7;
    return;
  }
  v37 = v0;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = *(_QWORD *)(v5 + 56);
  v38 = v5 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & v9;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 56;
  swift_retain();
  v13 = 0;
  v14 = type metadata accessor for QueryDecorationTupleParameter;
  if (!v11)
    goto LABEL_7;
LABEL_6:
  v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v15 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = v5;
    v21 = *(_QWORD *)(v40 + 72);
    v22 = *(_QWORD *)(v5 + 48) + v21 * i;
    v23 = v14;
    sub_23F362600(v22, (uint64_t)v4, v14);
    sub_23F61CD30();
    sub_23F61BB78();
    sub_23F61C22C();
    swift_bridgeObjectRelease();
    v24 = &v4[*(int *)(DecorationTupleParameter + 20)];
    sub_23F61CD3C();
    DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
    sub_23F362600((uint64_t)&v24[*(int *)(DecorationEntity + 20)], v43, type metadata accessor for QueryDecorationEntityValue);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
        goto LABEL_26;
      v27 = sub_23F618D28();
    }
    else
    {
      v27 = sub_23F618D88();
    }
    (*(void (**)(uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v43);
LABEL_26:
    sub_23F61CD30();
    sub_23F61CD3C();
    sub_23F61CD60();
    sub_23F61CD3C();
    v28 = sub_23F61CD60();
    v29 = -1 << *(_BYTE *)(v7 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) == 0)
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v29) >> 6;
      v14 = v23;
      while (++v31 != v34 || (v33 & 1) == 0)
      {
        v35 = v31 == v34;
        if (v31 == v34)
          v31 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v12 + 8 * v31);
        if (v36 != -1)
        {
          v32 = __clz(__rbit64(~v36)) + (v31 << 6);
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    v14 = v23;
LABEL_35:
    *(_QWORD *)(v12 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    sub_23F36262C((uint64_t)v4, *(_QWORD *)(v7 + 48) + v32 * v21, v14);
    ++*(_QWORD *)(v7 + 16);
    v5 = v20;
    if (v11)
      goto LABEL_6;
LABEL_7:
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v17 >= v39)
      goto LABEL_37;
    v18 = *(_QWORD *)(v38 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v39)
        goto LABEL_37;
      v18 = *(_QWORD *)(v38 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v39)
          goto LABEL_37;
        v18 = *(_QWORD *)(v38 + 8 * v13);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v11 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v39)
  {
LABEL_37:
    swift_release_n();
    v1 = v37;
    goto LABEL_39;
  }
  v18 = *(_QWORD *)(v38 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v39)
      goto LABEL_37;
    v18 = *(_QWORD *)(v38 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_23F47C5EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  __int128 v30;

  v1 = *v0;
  sub_23F35D2E8(&qword_256E74DE0);
  v2 = sub_23F61C8A4();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_34:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v28 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v29 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  if (!v6)
    goto LABEL_7;
LABEL_6:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = *(_QWORD *)(v1 + 48) + 40 * i;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(_QWORD *)(v15 + 16);
    v30 = *(_OWORD *)(v15 + 24);
    sub_23F61CD30();
    swift_bridgeObjectRetain_n();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F61C22C();
    swift_bridgeObjectRelease();
    sub_23F617BA0();
    sub_23F61C22C();
    swift_bridgeObjectRelease();
    result = sub_23F61CD60();
    v19 = -1 << *(_BYTE *)(v3 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v7 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v7 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v7 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v7 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v27 = *(_QWORD *)(v3 + 48) + 40 * v22;
    *(_QWORD *)v27 = v16;
    *(_QWORD *)(v27 + 8) = v17;
    *(_QWORD *)(v27 + 16) = v18;
    *(_OWORD *)(v27 + 24) = v30;
    ++*(_QWORD *)(v3 + 16);
    if (v6)
      goto LABEL_6;
LABEL_7:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_36;
    if (v12 >= v29)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v29)
        goto LABEL_32;
      v13 = *(_QWORD *)(v28 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v29)
          goto LABEL_32;
        v13 = *(_QWORD *)(v28 + 8 * v9);
        if (!v13)
          break;
      }
    }
LABEL_20:
    v6 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    goto LABEL_34;
  }
  v13 = *(_QWORD *)(v28 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v29)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_23F47C914()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_23F362ABC();
  v36 = v1;
  v37 = v2;
  v4 = v3;
  v5 = v0;
  v8 = *(_QWORD *)(sub_23F482AAC(v6, v7) - 8);
  sub_23F482740();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - v10;
  v12 = *v0;
  sub_23F35D2E8(v4);
  v13 = sub_23F482548();
  if (!*(_QWORD *)(v12 + 16))
  {
    swift_release();
LABEL_32:
    *v5 = v13;
    sub_23F362948();
    return;
  }
  sub_23F384958();
  v33 = v0;
  v34 = v12 + 56;
  sub_23F482C44();
  v16 = v15 & v14;
  v35 = (unint64_t)(v17 + 63) >> 6;
  v18 = v13 + 56;
  swift_retain();
  v19 = 0;
  if (!v16)
    goto LABEL_4;
LABEL_3:
  sub_23F482B88();
  while (1)
  {
    v25 = *(_QWORD *)(v8 + 72);
    sub_23F4244A8((uint64_t)v11, *(_QWORD *)(v12 + 48) + v25 * v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
    sub_23F482C10();
    sub_23F3F9CD0();
    sub_23F61C040();
    sub_23F482248();
    sub_23F4828AC();
    if (v26)
    {
      sub_23F482220();
      while (1)
      {
        sub_23F482858();
        if (v26)
        {
          if ((v27 & 1) != 0)
            break;
        }
        if (v28 == v29)
          v28 = 0;
        if (*(_QWORD *)(v18 + 8 * v28) != -1)
        {
          sub_23F48220C();
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    sub_23F482234();
LABEL_28:
    sub_23F482330();
    *(_QWORD *)(v18 + v30) |= v31;
    sub_23F4244A8(*(_QWORD *)(v13 + 48) + v32 * v25, (uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
    ++*(_QWORD *)(v13 + 16);
    if (v16)
      goto LABEL_3;
LABEL_4:
    if (__OFADD__(v19, 1))
      goto LABEL_34;
    if (v19 + 1 >= v35)
      goto LABEL_30;
    sub_23F482C58();
    v19 = v21;
    if (!v22)
    {
      v19 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_30;
      if (!*(_QWORD *)(v34 + 8 * v19))
      {
        v19 = v21 + 2;
        if (v21 + 2 >= v35)
          goto LABEL_30;
        if (!*(_QWORD *)(v34 + 8 * v19))
          break;
      }
    }
LABEL_17:
    sub_23F482828();
  }
  if (v21 + 3 >= v35)
  {
LABEL_30:
    swift_release_n();
    v5 = v33;
    goto LABEL_32;
  }
  sub_23F482C58();
  if (v24)
  {
    v19 = v23;
    goto LABEL_17;
  }
  while (1)
  {
    v19 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v19 >= v35)
      goto LABEL_30;
    ++v23;
    if (*(_QWORD *)(v34 + 8 * v19))
      goto LABEL_17;
  }
LABEL_35:
  __break(1u);
}

void sub_23F47CB64(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for DependencyId(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F3BCFA4();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_23F47D978(v6);
  *a1 = v3;
}

void sub_23F47CBE4(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_23F5F83DC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for Interpreter(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23F61B32C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    v10 = *(int *)(a3 + 24);
    v11 = (uint64_t *)((char *)a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for Interpreter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + *(int *)(a2 + 20));
  return swift_release();
}

uint64_t initializeWithCopy for Interpreter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  v9 = *(int *)(a3 + 24);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Interpreter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  sub_23F361AD0((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for Interpreter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for Interpreter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Interpreter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F47CF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F384B34();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_23F3B1A44(a1, a2, v6);
  }
  else
  {
    sub_23F3F9B80(*(_QWORD *)(a1 + *(int *)(a3 + 20) + 24));
    sub_23F362B80();
  }
}

uint64_t storeEnumTagSinglePayload for Interpreter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F47CF90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_23F384B34();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23F38370C(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
    sub_23F362B80();
  }
}

uint64_t sub_23F47CFF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23F47D074(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23F617D08();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    sub_23F617BA0();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_23F47D10C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23F617D08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_23F47D154(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23F617D08();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  sub_23F617BA0();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *sub_23F47D1C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F617D08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_23F47D238(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23F617D08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_23F47D294(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F617D08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_23F47D300()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F47D30C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F3F9B80(*a1);
    sub_23F362B80();
  }
  else
  {
    v6 = sub_23F384040();
    sub_23F3B1A44((uint64_t)a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_23F47D360()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F47D36C(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    sub_23F362B80();
  }
  else
  {
    v7 = sub_23F384040();
    sub_23F38370C((uint64_t)a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t sub_23F47D3C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F617D08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23F47D43C()
{
  sub_23F3B121C(&qword_256E74DC8, (void (*)(uint64_t))type metadata accessor for DependencyId);
}

void sub_23F47D468(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(sub_23F35D2E8(&qword_256E70288) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F3BCFB4();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_23F47E2E8((int64_t)v6);
  *a1 = v3;
}

uint64_t sub_23F47D4EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(sub_23F35D2E8(&qword_256E6FAF8) + 48);
  v5 = a2 + *(int *)(sub_23F35D2E8(&qword_256E70390) + 48);
  return sub_23F5E1AE4(a2, v5, a1, v4);
}

uint64_t sub_23F47D548@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_23F35D2E8(&qword_256E74E90);
  sub_23F35D2E8(&qword_256E74E98);
  result = sub_23F5E1C98();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23F47D5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *a4;
  *a4 = 0x8000000000000000;
  sub_23F47D630(a1, a2, a3, isUniquelyReferenced_nonNull_native, &v10);
  *a4 = v10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F47D630(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t result;
  _QWORD v38[3];
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t *v43;

  v43 = a5;
  v9 = sub_23F6184F4();
  v40 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v39 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v38 - v12;
  v14 = sub_23F35D2E8(&qword_256E74EA0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (_QWORD *)((char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F5E2968(&v42, a1, a2, a3);
  v38[2] = a1;
  sub_23F617BA0();
  v38[1] = a3;
  swift_retain();
  sub_23F5E3390();
  v17 = sub_23F35D2E8(&qword_256E74E98);
  if (sub_23F36195C((uint64_t)v16, 1, v17) == 1)
  {
LABEL_15:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23F382E18();
    return swift_release();
  }
  v41 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  while (1)
  {
    v18 = (char *)v16 + *(int *)(v17 + 48);
    v19 = *v16;
    v20 = v16[1];
    v21 = v13;
    v41(v13, v18, v9);
    v22 = *v43;
    v24 = sub_23F3754D4(v19, v20);
    v25 = *(_QWORD *)(v22 + 16);
    v26 = (v23 & 1) == 0;
    if (__OFADD__(v25, v26))
      break;
    v27 = v23;
    if (*(_QWORD *)(v22 + 24) >= v25 + v26)
    {
      if ((a4 & 1) != 0)
      {
        if ((v23 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        sub_23F35D2E8(&qword_256E70270);
        sub_23F61CA24();
        if ((v27 & 1) != 0)
          goto LABEL_10;
      }
    }
    else
    {
      sub_23F514FD8();
      v28 = sub_23F3754D4(v19, v20);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_18;
      v24 = v28;
      if ((v27 & 1) != 0)
      {
LABEL_10:
        v31 = v39;
        v30 = v40;
        v13 = v21;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v39, v21, v9);
        (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v9);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, char *, uint64_t))(v30 + 40))(*(_QWORD *)(*v43 + 56) + *(_QWORD *)(v30 + 72) * v24, v31, v9);
        goto LABEL_14;
      }
    }
    v32 = (_QWORD *)*v43;
    *(_QWORD *)(*v43 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v33 = (uint64_t *)(v32[6] + 16 * v24);
    *v33 = v19;
    v33[1] = v20;
    v13 = v21;
    v41((char *)(v32[7] + *(_QWORD *)(v40 + 72) * v24), v21, v9);
    v34 = v32[2];
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
      goto LABEL_17;
    v32[2] = v36;
LABEL_14:
    sub_23F5E3390();
    v17 = sub_23F35D2E8(&qword_256E74E98);
    a4 = 1;
    if (sub_23F36195C((uint64_t)v16, 1, v17) == 1)
      goto LABEL_15;
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

void sub_23F47D978(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v137 = type metadata accessor for DependencyId(0);
  v3 = *(_QWORD *)(v137 - 8);
  v4 = MEMORY[0x24BDAC7A8](v137);
  v128 = (uint64_t)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v138 = (uint64_t)&v121 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v135 = (uint64_t)&v121 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v134 = (uint64_t)&v121 - v10;
  v11 = a1[1];
  v12 = sub_23F61CC04();
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_142;
    if (v11)
      sub_23F47EC6C(0, v11, 1, a1);
    return;
  }
  v13 = v12;
  v131 = v1;
  v136 = a1;
  sub_23F38800C(v11 / 2);
  v123 = v14;
  v124 = v11;
  v129 = v15;
  v130 = v3;
  if (v11 <= 0)
    goto LABEL_105;
  v122 = v13;
  v16 = 0;
  v17 = (char *)MEMORY[0x24BEE4AF8];
  v18 = v11;
  while (1)
  {
    v19 = v16;
    v20 = v16 + 1;
    v126 = v17;
    if (v16 + 1 >= v18)
    {
      ++v16;
LABEL_29:
      v40 = v136;
      goto LABEL_30;
    }
    v21 = *v136;
    v22 = *(_QWORD *)(v3 + 72);
    v23 = v134;
    sub_23F362600(*v136 + v22 * v20, v134, type metadata accessor for DependencyId);
    v24 = v21 + v22 * v16;
    v25 = v135;
    sub_23F362600(v24, v135, type metadata accessor for DependencyId);
    LODWORD(v133) = sub_23F617CCC();
    sub_23F3663AC(v25, type metadata accessor for DependencyId);
    sub_23F3663AC(v23, type metadata accessor for DependencyId);
    v16 = v19 + 2;
    v132 = v21;
    v139 = v22;
    if (v19 + 2 < v18)
    {
      v127 = v19;
      v26 = v22 * v20;
      v27 = v21;
      v28 = v22 * v16;
      while (1)
      {
        v29 = v18;
        v30 = v16;
        v31 = v134;
        sub_23F362600(v27 + v28, v134, type metadata accessor for DependencyId);
        v32 = v135;
        sub_23F362600(v27 + v26, v135, type metadata accessor for DependencyId);
        v33 = sub_23F617CCC();
        sub_23F3663AC(v32, type metadata accessor for DependencyId);
        sub_23F3663AC(v31, type metadata accessor for DependencyId);
        if (((v133 ^ v33) & 1) != 0)
          break;
        v16 = v30 + 1;
        v22 = v139;
        v27 += v139;
        v18 = v29;
        if (v16 >= v29)
        {
          v16 = v29;
          v3 = v130;
          v19 = v127;
          goto LABEL_12;
        }
      }
      v3 = v130;
      v16 = v30;
      v19 = v127;
      v18 = v29;
      v22 = v139;
    }
LABEL_12:
    if ((v133 & 1) == 0)
      goto LABEL_29;
    if (v16 < v19)
      goto LABEL_143;
    if (v19 >= v16)
      goto LABEL_29;
    v133 = v18;
    v34 = 0;
    v35 = v19;
    v36 = v22 * (v16 - 1);
    v37 = v16 * v22;
    v38 = v35;
    v127 = v35;
    v39 = v35 * v22;
    v40 = v136;
    do
    {
      if (v38 != v16 + v34 - 1)
      {
        v41 = v132;
        if (!v132)
          goto LABEL_149;
        v42 = v132 + v39;
        v43 = v132 + v36;
        sub_23F36262C(v132 + v39, v128, type metadata accessor for DependencyId);
        if (v39 < v36 || v42 >= v41 + v37)
        {
          swift_arrayInitWithTakeFrontToBack();
          v22 = v139;
        }
        else
        {
          v22 = v139;
          if (v39 != v36)
            swift_arrayInitWithTakeBackToFront();
        }
        sub_23F36262C(v128, v43, type metadata accessor for DependencyId);
        v40 = v136;
      }
      ++v38;
      --v34;
      v36 -= v22;
      v37 -= v22;
      v39 += v22;
    }
    while (v38 < v16 + v34);
    v3 = v130;
    v18 = v133;
    v19 = v127;
LABEL_30:
    if (v16 >= v18)
      goto LABEL_39;
    if (__OFSUB__(v16, v19))
      goto LABEL_141;
    if (v16 - v19 >= v122)
      goto LABEL_39;
    if (__OFADD__(v19, v122))
      goto LABEL_144;
    if (v19 + v122 >= v18)
      v45 = v18;
    else
      v45 = v19 + v122;
    if (v45 < v19)
    {
LABEL_145:
      __break(1u);
      goto LABEL_146;
    }
    if (v16 == v45)
    {
LABEL_39:
      v46 = v131;
    }
    else
    {
      v100 = *(_QWORD *)(v3 + 72);
      v139 = v100 * (v16 - 1);
      v132 = v100;
      v101 = v16 * v100;
      v127 = v19;
      v125 = v45;
      do
      {
        v102 = 0;
        v103 = v19;
        v133 = v16;
        while (1)
        {
          v104 = *v40;
          v105 = v101;
          v106 = v101 + v102 + *v40;
          v107 = v134;
          v108 = v40;
          sub_23F362600(v106, v134, type metadata accessor for DependencyId);
          v109 = v135;
          sub_23F362600(v139 + v102 + v104, v135, type metadata accessor for DependencyId);
          LOBYTE(v104) = sub_23F617CCC();
          sub_23F3663AC(v109, type metadata accessor for DependencyId);
          sub_23F3663AC(v107, type metadata accessor for DependencyId);
          if ((v104 & 1) == 0)
            break;
          v110 = *v108;
          if (!*v108)
            goto LABEL_147;
          v101 = v105;
          v111 = v110 + v139 + v102;
          sub_23F36262C(v110 + v105 + v102, v138, type metadata accessor for DependencyId);
          swift_arrayInitWithTakeFrontToBack();
          sub_23F36262C(v138, v111, type metadata accessor for DependencyId);
          v112 = v133;
          v102 -= v132;
          ++v103;
          v40 = v136;
          if (v133 == v103)
            goto LABEL_97;
        }
        v112 = v133;
        v101 = v105;
        v40 = v108;
LABEL_97:
        v16 = v112 + 1;
        v139 += v132;
        v101 += v132;
        v19 = v127;
      }
      while (v16 != v125);
      v16 = v125;
      v46 = v131;
    }
    if (v16 < v19)
      goto LABEL_140;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v17 = v126;
    else
      v17 = sub_23F3BC8F8(0, *((_QWORD *)v126 + 2) + 1, 1, v126);
    v48 = *((_QWORD *)v17 + 2);
    v47 = *((_QWORD *)v17 + 3);
    v49 = v48 + 1;
    if (v48 >= v47 >> 1)
      v17 = sub_23F3BC8F8((char *)(v47 > 1), v48 + 1, 1, v17);
    v131 = v46;
    *((_QWORD *)v17 + 2) = v49;
    v50 = v17 + 32;
    v51 = &v17[16 * v48 + 32];
    *(_QWORD *)v51 = v19;
    *((_QWORD *)v51 + 1) = v16;
    if (v48)
      break;
    v49 = 1;
LABEL_88:
    v18 = v136[1];
    v3 = v130;
    if (v16 >= v18)
      goto LABEL_106;
  }
  while (1)
  {
    v52 = v49 - 1;
    if (v49 >= 4)
    {
      v57 = &v50[16 * v49];
      v58 = *((_QWORD *)v57 - 8);
      v59 = *((_QWORD *)v57 - 7);
      v63 = __OFSUB__(v59, v58);
      v60 = v59 - v58;
      if (v63)
        goto LABEL_125;
      v62 = *((_QWORD *)v57 - 6);
      v61 = *((_QWORD *)v57 - 5);
      v63 = __OFSUB__(v61, v62);
      v55 = v61 - v62;
      v56 = v63;
      if (v63)
        goto LABEL_126;
      v64 = v49 - 2;
      v65 = &v50[16 * v49 - 32];
      v67 = *(_QWORD *)v65;
      v66 = *((_QWORD *)v65 + 1);
      v63 = __OFSUB__(v66, v67);
      v68 = v66 - v67;
      if (v63)
        goto LABEL_127;
      v63 = __OFADD__(v55, v68);
      v69 = v55 + v68;
      if (v63)
        goto LABEL_129;
      if (v69 >= v60)
      {
        v87 = &v50[16 * v52];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v63 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v63)
          goto LABEL_135;
        v80 = v55 < v90;
        goto LABEL_77;
      }
    }
    else
    {
      if (v49 != 3)
      {
        v81 = *((_QWORD *)v17 + 4);
        v82 = *((_QWORD *)v17 + 5);
        v63 = __OFSUB__(v82, v81);
        v74 = v82 - v81;
        v75 = v63;
        goto LABEL_71;
      }
      v54 = *((_QWORD *)v17 + 4);
      v53 = *((_QWORD *)v17 + 5);
      v63 = __OFSUB__(v53, v54);
      v55 = v53 - v54;
      v56 = v63;
    }
    if ((v56 & 1) != 0)
      goto LABEL_128;
    v64 = v49 - 2;
    v70 = &v50[16 * v49 - 32];
    v72 = *(_QWORD *)v70;
    v71 = *((_QWORD *)v70 + 1);
    v73 = __OFSUB__(v71, v72);
    v74 = v71 - v72;
    v75 = v73;
    if (v73)
      goto LABEL_130;
    v76 = &v50[16 * v52];
    v78 = *(_QWORD *)v76;
    v77 = *((_QWORD *)v76 + 1);
    v63 = __OFSUB__(v77, v78);
    v79 = v77 - v78;
    if (v63)
      goto LABEL_132;
    if (__OFADD__(v74, v79))
      goto LABEL_134;
    if (v74 + v79 >= v55)
    {
      v80 = v55 < v79;
LABEL_77:
      if (v80)
        v52 = v64;
      goto LABEL_79;
    }
LABEL_71:
    if ((v75 & 1) != 0)
      goto LABEL_131;
    v83 = &v50[16 * v52];
    v85 = *(_QWORD *)v83;
    v84 = *((_QWORD *)v83 + 1);
    v63 = __OFSUB__(v84, v85);
    v86 = v84 - v85;
    if (v63)
      goto LABEL_133;
    if (v86 < v74)
      goto LABEL_88;
LABEL_79:
    v91 = v16;
    v92 = v52 - 1;
    if (v52 - 1 >= v49)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    if (!*v136)
      goto LABEL_148;
    v93 = v17;
    v94 = &v50[16 * v92];
    v95 = *(_QWORD *)v94;
    v96 = &v50[16 * v52];
    v97 = *((_QWORD *)v96 + 1);
    v98 = v131;
    sub_23F47F0CC(*v136 + *(_QWORD *)(v130 + 72) * *(_QWORD *)v94, *v136 + *(_QWORD *)(v130 + 72) * *(_QWORD *)v96, *v136 + *(_QWORD *)(v130 + 72) * v97, v129);
    v131 = v98;
    if (v98)
      break;
    if (v97 < v95)
      goto LABEL_122;
    if (v52 > *((_QWORD *)v93 + 2))
      goto LABEL_123;
    *(_QWORD *)v94 = v95;
    *(_QWORD *)&v50[16 * v92 + 8] = v97;
    v99 = *((_QWORD *)v93 + 2);
    if (v52 >= v99)
      goto LABEL_124;
    v49 = v99 - 1;
    memmove(&v50[16 * v52], v96 + 16, 16 * (v99 - 1 - v52));
    v17 = v93;
    *((_QWORD *)v93 + 2) = v99 - 1;
    v80 = v99 > 2;
    v16 = v91;
    if (!v80)
      goto LABEL_88;
  }
LABEL_103:
  swift_bridgeObjectRelease();
  if (v124 >= -1)
    goto LABEL_118;
  __break(1u);
LABEL_105:
  v17 = (char *)MEMORY[0x24BEE4AF8];
  v49 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_106:
  if (v49 >= 2)
  {
    v113 = *v136;
    v114 = v131;
    while (1)
    {
      v115 = v49 - 2;
      if (v49 < 2)
        break;
      if (!v113)
        goto LABEL_150;
      v116 = v17;
      v117 = *(_QWORD *)&v17[16 * v115 + 32];
      v118 = *(_QWORD *)&v17[16 * v49 + 24];
      sub_23F47F0CC(v113 + *(_QWORD *)(v130 + 72) * v117, v113 + *(_QWORD *)(v130 + 72) * *(_QWORD *)&v17[16 * v49 + 16], v113 + *(_QWORD *)(v130 + 72) * v118, v129);
      if (v114)
        goto LABEL_103;
      if (v118 < v117)
        goto LABEL_137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v116 = sub_23F3BC9E8();
      if (v115 >= *((_QWORD *)v116 + 2))
        goto LABEL_138;
      v119 = &v116[16 * v115 + 32];
      *(_QWORD *)v119 = v117;
      *((_QWORD *)v119 + 1) = v118;
      v120 = *((_QWORD *)v116 + 2);
      if (v49 > v120)
        goto LABEL_139;
      memmove(&v116[16 * v49 + 16], &v116[16 * v49 + 32], 16 * (v120 - v49));
      v17 = v116;
      *((_QWORD *)v116 + 2) = v120 - 1;
      v49 = v120 - 1;
      if (v120 <= 2)
        goto LABEL_117;
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
    goto LABEL_145;
  }
LABEL_117:
  swift_bridgeObjectRelease();
  if (v124 >= -1)
  {
LABEL_118:
    *(_QWORD *)(v123 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
}

void sub_23F47E2E8(int64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t *v29;
  uint64_t *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t **v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  v2 = v1;
  v129 = sub_23F35D2E8(&qword_256E70288);
  v4 = *(_QWORD *)(v129 - 8);
  v5 = MEMORY[0x24BDAC7A8](v129);
  v125 = (uint64_t)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v135 = (uint64_t)&v119 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v132 = (uint64_t *)((char *)&v119 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v131 = (uint64_t *)((char *)&v119 - v11);
  v12 = *(_QWORD *)(a1 + 8);
  v13 = sub_23F61CC04();
  if (v13 >= v12)
  {
    if (v12 < 0)
      goto LABEL_142;
    if (v12)
      sub_23F47EE98(0, v12, 1, (uint64_t *)a1);
    return;
  }
  v122 = v13;
  sub_23F388098(v12 / 2);
  v120 = v14;
  v121 = v12;
  v127 = v15;
  v128 = v4;
  if (v12 <= 0)
    goto LABEL_105;
  v16 = 0;
  v17 = (char *)MEMORY[0x24BEE4AF8];
  v134 = (uint64_t *)a1;
  while (1)
  {
    v18 = v16;
    v19 = v16 + 1;
    v124 = v17;
    v126 = v16;
    if (v16 + 1 >= v12)
    {
      v24 = v16 + 1;
    }
    else
    {
      v20 = *(_QWORD *)a1;
      v21 = *(_QWORD *)(v4 + 72);
      v22 = v131;
      sub_23F382EF8(v20 + v21 * v19, (uint64_t)v131, &qword_256E70288);
      v23 = v132;
      sub_23F382EF8(v20 + v21 * v18, (uint64_t)v132, &qword_256E70288);
      v136 = *v22;
      v133 = *v23;
      sub_23F481698((uint64_t)v23, &qword_256E70288);
      sub_23F481698((uint64_t)v22, &qword_256E70288);
      v24 = v18 + 2;
      v123 = v20;
      v137 = v21;
      if (v18 + 2 < v12)
      {
        v119 = v2;
        v130 = v21 * v19;
        v25 = v20;
        v26 = v18 + 2;
        v27 = v21 * (v18 + 2);
        while (1)
        {
          v28 = v136 < v133;
          v29 = v131;
          sub_23F382EF8(v25 + v27, (uint64_t)v131, &qword_256E70288);
          v30 = v132;
          sub_23F382EF8(v25 + v130, (uint64_t)v132, &qword_256E70288);
          v31 = *v29 >= *v30;
          sub_23F481698((uint64_t)v30, &qword_256E70288);
          sub_23F481698((uint64_t)v29, &qword_256E70288);
          if (v28 == v31)
            break;
          v25 += v137;
          if (++v26 >= v12)
          {
            v24 = v12;
            v4 = v128;
            goto LABEL_12;
          }
        }
        v4 = v128;
        v24 = v26;
LABEL_12:
        v2 = v119;
        v18 = v126;
      }
      if (v136 >= v133)
        goto LABEL_30;
      if (v24 < v18)
        goto LABEL_143;
      if (v18 >= v24)
      {
LABEL_30:
        a1 = (int64_t)v134;
      }
      else
      {
        v133 = v12;
        v32 = 0;
        v33 = v137;
        v34 = v137 * (v24 - 1);
        v35 = v18;
        v36 = v24 * v137;
        v37 = v35;
        v38 = v35 * v137;
        do
        {
          if (v37 != v24 + v32 - 1)
          {
            v39 = v2;
            v40 = v123;
            if (!v123)
              goto LABEL_149;
            v41 = v123 + v38;
            v136 = v123 + v34;
            sub_23F383004(v123 + v38, v125, &qword_256E70288);
            if (v38 < v34 || v41 >= v40 + v36)
            {
              v43 = v136;
              swift_arrayInitWithTakeFrontToBack();
              v2 = v39;
              v44 = v43;
            }
            else
            {
              v2 = v39;
              v44 = v136;
              if (v38 != v34)
                swift_arrayInitWithTakeBackToFront();
            }
            sub_23F383004(v125, v44, &qword_256E70288);
            v33 = v137;
          }
          ++v37;
          --v32;
          v34 -= v33;
          v36 -= v33;
          v38 += v33;
        }
        while (v37 < v24 + v32);
        v4 = v128;
        v12 = v133;
        a1 = (int64_t)v134;
        v18 = v126;
      }
    }
    if (v24 < v12)
    {
      if (__OFSUB__(v24, v18))
        goto LABEL_141;
      if (v24 - v18 < v122)
      {
        if (__OFADD__(v18, v122))
          goto LABEL_144;
        if (v18 + v122 >= v12)
          v45 = v12;
        else
          v45 = v18 + v122;
        if (v45 < v18)
        {
LABEL_145:
          __break(1u);
          goto LABEL_146;
        }
        if (v24 != v45)
        {
          v119 = v2;
          v46 = *(_QWORD *)(v4 + 72);
          v137 = v46 * (v24 - 1);
          v130 = v46;
          v47 = v24 * v46;
          v123 = v45;
          do
          {
            v48 = 0;
            v49 = v126;
            v133 = v24;
            while (1)
            {
              v50 = v134;
              v51 = *v134;
              v52 = v47;
              v53 = v47 + v48 + *v134;
              v54 = v131;
              sub_23F382EF8(v53, (uint64_t)v131, &qword_256E70288);
              v55 = v132;
              sub_23F382EF8(v137 + v48 + v51, (uint64_t)v132, &qword_256E70288);
              v136 = *v54;
              v56 = *v55;
              sub_23F481698((uint64_t)v55, &qword_256E70288);
              sub_23F481698((uint64_t)v54, &qword_256E70288);
              if (v136 >= v56)
                break;
              v57 = *v50;
              if (!*v50)
                goto LABEL_147;
              v47 = v52;
              v58 = v57 + v137 + v48;
              sub_23F383004(v57 + v52 + v48, v135, &qword_256E70288);
              swift_arrayInitWithTakeFrontToBack();
              sub_23F383004(v135, v58, &qword_256E70288);
              v48 -= v130;
              ++v49;
              v59 = v133;
              if (v133 == v49)
                goto LABEL_47;
            }
            v59 = v133;
            v47 = v52;
LABEL_47:
            v24 = v59 + 1;
            v137 += v130;
            v47 += v130;
          }
          while (v24 != v123);
          v24 = v123;
          v2 = v119;
          a1 = (int64_t)v134;
          v18 = v126;
        }
      }
    }
    if (v24 < v18)
      goto LABEL_140;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v133 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v17 = v124;
    else
      v17 = sub_23F3BC8F8(0, *((_QWORD *)v124 + 2) + 1, 1, v124);
    v62 = *((_QWORD *)v17 + 2);
    v61 = *((_QWORD *)v17 + 3);
    v63 = v62 + 1;
    if (v62 >= v61 >> 1)
      v17 = sub_23F3BC8F8((char *)(v61 > 1), v62 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v63;
    v64 = v17 + 32;
    v65 = &v17[16 * v62 + 32];
    v66 = v133;
    *(_QWORD *)v65 = v126;
    *((_QWORD *)v65 + 1) = v66;
    if (v62)
      break;
    v63 = 1;
LABEL_97:
    v12 = *(_QWORD *)(a1 + 8);
    v16 = v133;
    v4 = v128;
    if (v133 >= v12)
      goto LABEL_106;
  }
  while (1)
  {
    v67 = v63 - 1;
    if (v63 >= 4)
    {
      v72 = &v64[16 * v63];
      v73 = *((_QWORD *)v72 - 8);
      v74 = *((_QWORD *)v72 - 7);
      v78 = __OFSUB__(v74, v73);
      v75 = v74 - v73;
      if (v78)
        goto LABEL_125;
      v77 = *((_QWORD *)v72 - 6);
      v76 = *((_QWORD *)v72 - 5);
      v78 = __OFSUB__(v76, v77);
      v70 = v76 - v77;
      v71 = v78;
      if (v78)
        goto LABEL_126;
      v79 = v63 - 2;
      v80 = &v64[16 * v63 - 32];
      v82 = *(_QWORD *)v80;
      v81 = *((_QWORD *)v80 + 1);
      v78 = __OFSUB__(v81, v82);
      v83 = v81 - v82;
      if (v78)
        goto LABEL_127;
      v78 = __OFADD__(v70, v83);
      v84 = v70 + v83;
      if (v78)
        goto LABEL_129;
      if (v84 >= v75)
      {
        v102 = &v64[16 * v67];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v78 = __OFSUB__(v103, v104);
        v105 = v103 - v104;
        if (v78)
          goto LABEL_135;
        v95 = v70 < v105;
        goto LABEL_86;
      }
    }
    else
    {
      if (v63 != 3)
      {
        v96 = *((_QWORD *)v17 + 4);
        v97 = *((_QWORD *)v17 + 5);
        v78 = __OFSUB__(v97, v96);
        v89 = v97 - v96;
        v90 = v78;
        goto LABEL_80;
      }
      v69 = *((_QWORD *)v17 + 4);
      v68 = *((_QWORD *)v17 + 5);
      v78 = __OFSUB__(v68, v69);
      v70 = v68 - v69;
      v71 = v78;
    }
    if ((v71 & 1) != 0)
      goto LABEL_128;
    v79 = v63 - 2;
    v85 = &v64[16 * v63 - 32];
    v87 = *(_QWORD *)v85;
    v86 = *((_QWORD *)v85 + 1);
    v88 = __OFSUB__(v86, v87);
    v89 = v86 - v87;
    v90 = v88;
    if (v88)
      goto LABEL_130;
    v91 = &v64[16 * v67];
    v93 = *(_QWORD *)v91;
    v92 = *((_QWORD *)v91 + 1);
    v78 = __OFSUB__(v92, v93);
    v94 = v92 - v93;
    if (v78)
      goto LABEL_132;
    if (__OFADD__(v89, v94))
      goto LABEL_134;
    if (v89 + v94 >= v70)
    {
      v95 = v70 < v94;
LABEL_86:
      if (v95)
        v67 = v79;
      goto LABEL_88;
    }
LABEL_80:
    if ((v90 & 1) != 0)
      goto LABEL_131;
    v98 = &v64[16 * v67];
    v100 = *(_QWORD *)v98;
    v99 = *((_QWORD *)v98 + 1);
    v78 = __OFSUB__(v99, v100);
    v101 = v99 - v100;
    if (v78)
      goto LABEL_133;
    if (v101 < v89)
      goto LABEL_97;
LABEL_88:
    v106 = v67 - 1;
    if (v67 - 1 >= v63)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    v107 = *(_QWORD *)a1;
    if (!*(_QWORD *)a1)
      goto LABEL_148;
    v108 = v17;
    v109 = (uint64_t **)&v64[16 * v106];
    a1 = (int64_t)*v109;
    v110 = &v64[16 * v67];
    v111 = *((_QWORD *)v110 + 1);
    sub_23F47F4A4(v107 + *(_QWORD *)(v128 + 72) * (_QWORD)*v109, v107 + *(_QWORD *)(v128 + 72) * *(_QWORD *)v110, v107 + *(_QWORD *)(v128 + 72) * v111, v127);
    if (v2)
      break;
    if (v111 < a1)
      goto LABEL_122;
    if (v67 > *((_QWORD *)v108 + 2))
      goto LABEL_123;
    *v109 = (uint64_t *)a1;
    *(_QWORD *)&v64[16 * v106 + 8] = v111;
    v112 = *((_QWORD *)v108 + 2);
    if (v67 >= v112)
      goto LABEL_124;
    v63 = v112 - 1;
    memmove(&v64[16 * v67], v110 + 16, 16 * (v112 - 1 - v67));
    v17 = v108;
    *((_QWORD *)v108 + 2) = v112 - 1;
    a1 = (int64_t)v134;
    if (v112 <= 2)
      goto LABEL_97;
  }
LABEL_103:
  swift_bridgeObjectRelease();
  if (v121 >= -1)
    goto LABEL_118;
  __break(1u);
LABEL_105:
  v17 = (char *)MEMORY[0x24BEE4AF8];
  v63 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_106:
  if (v63 >= 2)
  {
    v113 = *(_QWORD *)a1;
    while (1)
    {
      a1 = v63 - 2;
      if (v63 < 2)
        break;
      if (!v113)
        goto LABEL_150;
      v114 = v17;
      v115 = *(_QWORD *)&v17[16 * a1 + 32];
      v116 = *(_QWORD *)&v17[16 * v63 + 24];
      sub_23F47F4A4(v113 + *(_QWORD *)(v128 + 72) * v115, v113 + *(_QWORD *)(v128 + 72) * *(_QWORD *)&v17[16 * v63 + 16], v113 + *(_QWORD *)(v128 + 72) * v116, v127);
      if (v2)
        goto LABEL_103;
      if (v116 < v115)
        goto LABEL_137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v114 = sub_23F3BC9E8();
      if ((unint64_t)a1 >= *((_QWORD *)v114 + 2))
        goto LABEL_138;
      v117 = &v114[16 * a1 + 32];
      *(_QWORD *)v117 = v115;
      *((_QWORD *)v117 + 1) = v116;
      v118 = *((_QWORD *)v114 + 2);
      if (v63 > v118)
        goto LABEL_139;
      memmove(&v114[16 * v63 + 16], &v114[16 * v63 + 32], 16 * (v118 - v63));
      v17 = v114;
      *((_QWORD *)v114 + 2) = v118 - 1;
      v63 = v118 - 1;
      if (v118 <= 2)
        goto LABEL_117;
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
    goto LABEL_145;
  }
LABEL_117:
  swift_bridgeObjectRelease();
  if (v121 >= -1)
  {
LABEL_118:
    *(_QWORD *)(v120 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
}

void sub_23F47EC6C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v24 = a1;
  v28 = type metadata accessor for DependencyId(0);
  v7 = MEMORY[0x24BDAC7A8](v28);
  v29 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v25 = (uint64_t)&v22 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - v12;
  v27 = a3;
  v23 = a2;
  if (a3 != a2)
  {
    v14 = *(_QWORD *)(v11 + 72);
    v31 = v14 * (v27 - 1);
    v26 = v14;
    v30 = v14 * v27;
    while (2)
    {
      v15 = 0;
      v16 = v24;
      do
      {
        v17 = *a4;
        sub_23F362600(v30 + v15 + *a4, (uint64_t)v13, type metadata accessor for DependencyId);
        v18 = v25;
        sub_23F362600(v31 + v15 + v17, v25, type metadata accessor for DependencyId);
        LOBYTE(v17) = sub_23F617CCC();
        sub_23F3663AC(v18, type metadata accessor for DependencyId);
        sub_23F3663AC((uint64_t)v13, type metadata accessor for DependencyId);
        if ((v17 & 1) == 0)
          break;
        v19 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v20 = a4;
        v21 = v19 + v31 + v15;
        sub_23F36262C(v19 + v30 + v15, v29, type metadata accessor for DependencyId);
        swift_arrayInitWithTakeFrontToBack();
        sub_23F36262C(v29, v21, type metadata accessor for DependencyId);
        v15 -= v26;
        ++v16;
        a4 = v20;
      }
      while (v27 != v16);
      v31 += v26;
      v30 += v26;
      if (++v27 != v23)
        continue;
      break;
    }
  }
}

void sub_23F47EE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;

  v35 = a1;
  v36 = sub_23F35D2E8(&qword_256E70288);
  v7 = MEMORY[0x24BDAC7A8](v36);
  v42 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v38 = (uint64_t *)((char *)&v33 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v37 = (uint64_t *)((char *)&v33 - v12);
  v41 = a3;
  v34 = a2;
  if (a3 != a2)
  {
    v13 = *(_QWORD *)(v11 + 72);
    v14 = v13 * (v41 - 1);
    v39 = v13;
    v15 = v13 * v41;
    v16 = &qword_256E70288;
    v44 = a4;
    while (2)
    {
      v17 = 0;
      v18 = v35;
      v40 = v15;
      do
      {
        v19 = *v44;
        v20 = v15 + v17 + *v44;
        v21 = v37;
        sub_23F382EF8(v20, (uint64_t)v37, v16);
        v22 = v14 + v17 + v19;
        v23 = v14;
        v24 = v38;
        sub_23F382EF8(v22, (uint64_t)v38, v16);
        v43 = *v21;
        v25 = v16;
        v26 = *v24;
        v27 = (uint64_t)v24;
        v14 = v23;
        sub_23F481698(v27, v25);
        v28 = (uint64_t)v21;
        v15 = v40;
        sub_23F481698(v28, v25);
        v29 = v43 < v26;
        v16 = v25;
        if (!v29)
          break;
        v30 = *v44;
        if (!*v44)
        {
          __break(1u);
          return;
        }
        v31 = v30 + v23 + v17;
        sub_23F383004(v30 + v15 + v17, v42, v25);
        swift_arrayInitWithTakeFrontToBack();
        v32 = v31;
        v16 = v25;
        sub_23F383004(v42, v32, v25);
        v17 -= v39;
        ++v18;
      }
      while (v41 != v18);
      v14 = v23 + v39;
      v15 += v39;
      if (++v41 != v34)
        continue;
      break;
    }
  }
}

void sub_23F47F0CC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v26;
  BOOL v28;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  int64_t v42;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v51 = type metadata accessor for DependencyId(0);
  v8 = MEMORY[0x24BDAC7A8](v51);
  v50 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v44 - v11;
  v13 = *(_QWORD *)(v10 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_75;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_76;
  v18 = v14 / v13;
  v19 = v16 / v13;
  v45 = *(_QWORD *)(v10 + 72);
  if (v14 / v13 >= v16 / v13)
  {
    sub_23F37AA9C(a2, v16 / v13);
    v20 = a4 + v19 * v13;
    if (v19 * v13 >= 1 && a1 < a2)
    {
      v47 = a4;
      v48 = -v13;
      v46 = a1;
      do
      {
        v30 = a3;
        v31 = v48;
        a3 += v48;
        v49 = v20 + v48;
        v32 = v20;
        sub_23F362600(v20 + v48, (uint64_t)v12, type metadata accessor for DependencyId);
        v33 = a2 + v31;
        v34 = a2 + v31;
        v35 = (uint64_t)v12;
        v36 = v50;
        sub_23F362600(v34, v50, type metadata accessor for DependencyId);
        v37 = sub_23F617CCC();
        v38 = v36;
        v12 = (char *)v35;
        sub_23F3663AC(v38, type metadata accessor for DependencyId);
        sub_23F3663AC(v35, type metadata accessor for DependencyId);
        if ((v37 & 1) != 0)
        {
          if (v30 < a2 || a3 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v30 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 = v33;
          a4 = v47;
          v20 = v32;
        }
        else
        {
          if (v30 < v32 || a3 >= v32)
          {
            v20 = v49;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            v20 = v49;
            if (v30 != v32)
              swift_arrayInitWithTakeBackToFront();
          }
          a4 = v47;
        }
      }
      while (v20 > a4 && a2 > v46);
      v13 = v45;
    }
  }
  else
  {
    sub_23F37AA9C(a1, v14 / v13);
    v20 = a4 + v18 * v13;
    v49 = a3;
    if (v18 * v13 >= 1 && a2 < a3)
    {
      v22 = v50;
      do
      {
        sub_23F362600(a2, (uint64_t)v12, type metadata accessor for DependencyId);
        sub_23F362600(a4, v22, type metadata accessor for DependencyId);
        v23 = sub_23F617CCC();
        sub_23F3663AC(v22, type metadata accessor for DependencyId);
        sub_23F3663AC((uint64_t)v12, type metadata accessor for DependencyId);
        if ((v23 & 1) != 0)
        {
          v24 = a2 + v13;
          if (a1 < a2 || a1 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (a1 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v26 = a4 + v13;
          if (a1 < a4 || a1 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (a1 != a4)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v24 = a2;
          a4 = v26;
          v13 = v45;
        }
        a1 += v13;
        v28 = a4 >= v20 || v24 >= v49;
        a2 = v24;
      }
      while (!v28);
    }
  }
  v42 = v20 - a4;
  if (v13 != -1 || v42 != 0x8000000000000000)
  {
    sub_23F37AA9C(a4, v42 / v13);
    return;
  }
LABEL_77:
  __break(1u);
}

void sub_23F47F4A4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v32;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  BOOL v41;
  int64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;

  v52 = sub_23F35D2E8(&qword_256E70288);
  v9 = MEMORY[0x24BDAC7A8](v52);
  v54 = (uint64_t *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v53 = (uint64_t *)((char *)&v44 - v11);
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_77;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_78;
  v18 = v14 / v13;
  v19 = v16 / v13;
  if (v14 / v13 >= v16 / v13)
  {
    sub_23F37AAA8(a2, v16 / v13);
    v21 = a4 + v19 * v13;
    if (v19 * v13 < 1 || a1 >= a2)
      goto LABEL_71;
    v45 = v4;
    v46 = v13;
    v48 = a4;
    v49 = -v13;
    v47 = a1;
    while (1)
    {
      v24 = a3;
      v25 = v49;
      a3 += v49;
      v51 = v21 + v49;
      v26 = v53;
      sub_23F382EF8(v21 + v49, (uint64_t)v53, &qword_256E70288);
      v50 = a2 + v25;
      v27 = v54;
      sub_23F382EF8(a2 + v25, (uint64_t)v54, &qword_256E70288);
      v28 = *v26;
      v29 = *v27;
      sub_23F481698((uint64_t)v27, &qword_256E70288);
      sub_23F481698((uint64_t)v26, &qword_256E70288);
      if (v28 >= v29)
      {
        if (v24 >= v21 && a3 < v21)
        {
          v32 = v47;
          a4 = v48;
          if (v24 == v21)
          {
            v21 = v51;
            goto LABEL_43;
          }
          v21 = v51;
LABEL_40:
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_43;
        }
        v21 = v51;
      }
      else
      {
        if (v24 >= a2 && a3 < a2)
        {
          v32 = v47;
          a4 = v48;
          if (v24 == a2)
          {
            a2 = v50;
            goto LABEL_43;
          }
          a2 = v50;
          goto LABEL_40;
        }
        a2 = v50;
      }
      swift_arrayInitWithTakeFrontToBack();
      v32 = v47;
      a4 = v48;
LABEL_43:
      v13 = v46;
      if (v21 <= a4 || a2 <= v32)
        goto LABEL_71;
    }
  }
  sub_23F37AAA8(a1, v14 / v13);
  v20 = v18 * v13;
  v21 = a4 + v18 * v13;
  v51 = a3;
  if (v20 >= 1 && a2 < a3)
  {
    v45 = v4;
    v50 = v21;
    v34 = v53;
    v35 = v54;
    do
    {
      sub_23F382EF8(a2, (uint64_t)v34, &qword_256E70288);
      sub_23F382EF8(a4, (uint64_t)v35, &qword_256E70288);
      v36 = *v34;
      v37 = *v35;
      sub_23F481698((uint64_t)v35, &qword_256E70288);
      sub_23F481698((uint64_t)v34, &qword_256E70288);
      if (v36 >= v37)
      {
        if (a1 < a4 || a1 >= a4 + v13)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v38 = a2;
        a4 += v13;
      }
      else
      {
        v38 = a2 + v13;
        if (a1 < a2 || a1 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      v21 = v50;
      a1 += v13;
      v41 = a4 >= v50 || v38 >= v51;
      a2 = v38;
    }
    while (!v41);
  }
LABEL_71:
  v42 = v21 - a4;
  if (v13 != -1 || v42 != 0x8000000000000000)
  {
    sub_23F37AAA8(a4, v42 / v13);
    return;
  }
LABEL_79:
  __break(1u);
}

uint64_t sub_23F47F860(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;

  v2 = sub_23F6184F4();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F617D08();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E74EA8);
  result = sub_23F61CA78();
  v7 = result;
  v8 = 0;
  v46 = a1;
  v11 = *(_QWORD *)(a1 + 64);
  v10 = a1 + 64;
  v9 = v11;
  v12 = 1 << *(_BYTE *)(v10 - 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v9;
  v35 = v10;
  v36 = (unint64_t)(v12 + 63) >> 6;
  v38 = *MEMORY[0x24BE54A38];
  v37 = result + 64;
  v39 = result;
  v15 = v40;
  v16 = v42;
  v17 = v43;
  v18 = v44;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v47 = (v14 - 1) & v14;
  v48 = v8;
  for (i = __clz(__rbit64(v14)) | (v8 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v46 + 48) + 16 * i);
    v25 = *v24;
    v26 = v24[1];
    v27 = v41;
    v28 = *(void (**)(char *, unint64_t, uint64_t))(v41 + 16);
    v28(v15, *(_QWORD *)(v46 + 56) + *(_QWORD *)(v41 + 72) * i, v16);
    v28(v17, (unint64_t)v15, v16);
    v29 = v45;
    (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v17, v38, v45);
    sub_23F617BA0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v16);
    *(_QWORD *)(v37 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v7 = v39;
    v30 = (_QWORD *)(*(_QWORD *)(v39 + 48) + 16 * i);
    *v30 = v25;
    v30[1] = v26;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v18 + 32))(*(_QWORD *)(v7 + 56) + *(_QWORD *)(v18 + 72) * i, v17, v29);
    v31 = *(_QWORD *)(v7 + 16);
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *(_QWORD *)(v7 + 16) = v33;
    v8 = v48;
    v14 = v47;
    if (v47)
      goto LABEL_4;
LABEL_5:
    v20 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_24;
    if (v20 >= v36)
      return v7;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v8 + 1;
    if (!v21)
    {
      v22 = v8 + 2;
      if (v8 + 2 >= v36)
        return v7;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v8 + 3;
        if (v8 + 3 >= v36)
          return v7;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
          break;
      }
    }
LABEL_18:
    v47 = (v21 - 1) & v21;
    v48 = v22;
  }
  v23 = v8 + 4;
  if (v8 + 4 >= v36)
    return v7;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v8 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return v7;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

char *sub_23F47FB6C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t isStackAllocationSafe;
  unint64_t *v11;
  char *v12;
  unint64_t *v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v11 = (_QWORD *)((char *)v15 - ((8 * v9 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_23F51394C(0, v9, v11);
    sub_23F617BA0();
    v12 = sub_23F47FD3C(v11, v9, (_QWORD *)a1, (uint64_t)a2, a3);
    if (v3)
      swift_willThrow();
    else
      a2 = v12;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = (unint64_t *)swift_slowAlloc();
    sub_23F51394C(0, v9, v13);
    sub_23F617BA0();
    a2 = sub_23F47FD3C(v13, v9, (_QWORD *)a1, (uint64_t)a2, a3);
    MEMORY[0x242670B70](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return a2;
}

char *sub_23F47FD3C(unint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *result;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  BOOL v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  void (*v29)(void);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  char v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  _QWORD *v61;
  int64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;

  v58 = a2;
  v73 = a5;
  v71 = a4;
  v59 = a1;
  v70 = sub_23F35D2E8(&qword_256E6FAF8);
  v6 = MEMORY[0x24BDAC7A8](v70);
  v69 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v66 = (char *)&v57 - v8;
  v67 = sub_23F61B404();
  v77 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_23F61A1D4();
  v76 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  result = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0;
  v72 = a3;
  v17 = a3[8];
  v16 = a3 + 8;
  v15 = v17;
  v18 = 1 << *((_BYTE *)v16 - 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v15;
  v61 = v16;
  v62 = (unint64_t)(v18 + 63) >> 6;
  v64 = v10;
  v65 = result;
  v21 = v67;
LABEL_4:
  v60 = v13;
  while (v20)
  {
    v74 = (v20 - 1) & v20;
    v75 = v14;
    v22 = __clz(__rbit64(v20)) | (v14 << 6);
    v23 = v77;
LABEL_18:
    v28 = v72;
    v29 = *(void (**)(void))(v76 + 16);
    v30 = result;
    v31 = v68;
    v29();
    v32 = v28[7];
    v33 = *(_QWORD *)(v23 + 72);
    v63 = v22;
    v34 = v32 + v33 * v22;
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v35(v10, v34, v21);
    v36 = v70;
    v37 = v66;
    v38 = &v66[*(int *)(v70 + 48)];
    ((void (*)(char *, char *, uint64_t))v29)(v66, v30, v31);
    v35(v38, (uint64_t)v10, v21);
    v39 = (uint64_t)v37;
    v40 = v69;
    v41 = &v69[*(int *)(v36 + 48)];
    ((void (*)(char *, uint64_t, uint64_t))v29)(v69, v39, v31);
    v35(v41, (uint64_t)v38, v21);
    v42 = sub_23F61A1C8();
    v44 = v43;
    v45 = *(void (**)(char *, uint64_t))(v76 + 8);
    v46 = v40;
    v47 = v31;
    v45(v46, v31);
    if (v42 == v71 && v44 == v73)
    {
      swift_bridgeObjectRelease();
      sub_23F481698(v39, &qword_256E6FAF8);
      v52 = *(void (**)(char *, uint64_t))(v77 + 8);
      v52(v41, v21);
      v10 = v64;
      v52(v64, v21);
      v53 = v65;
      v45(v65, v47);
      result = v53;
      v20 = v74;
      v14 = v75;
    }
    else
    {
      v49 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      sub_23F481698(v39, &qword_256E6FAF8);
      v50 = *(void (**)(char *, uint64_t))(v77 + 8);
      v50(v41, v21);
      v10 = v64;
      v50(v64, v21);
      v51 = v65;
      v45(v65, v47);
      result = v51;
      v20 = v74;
      v14 = v75;
      if ((v49 & 1) == 0)
      {
        v54 = v60;
        *(unint64_t *)((char *)v59 + ((v63 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v63;
        v24 = __OFADD__(v54, 1);
        v13 = v54 + 1;
        if (!v24)
          goto LABEL_4;
        __break(1u);
LABEL_32:
        sub_23F575780(v59, v58, v60, v72);
        v56 = v55;
        swift_bridgeObjectRelease();
        return (char *)v56;
      }
    }
  }
  v24 = __OFADD__(v14, 1);
  v25 = v14 + 1;
  v23 = v77;
  if (v24)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v25 >= v62)
    goto LABEL_32;
  v26 = v61[v25];
  if (v26)
  {
LABEL_17:
    v74 = (v26 - 1) & v26;
    v75 = v25;
    v22 = __clz(__rbit64(v26)) + (v25 << 6);
    goto LABEL_18;
  }
  v27 = v25 + 1;
  if (v25 + 1 >= v62)
    goto LABEL_32;
  v26 = v61[v27];
  if (v26)
    goto LABEL_16;
  v27 = v25 + 2;
  if (v25 + 2 >= v62)
    goto LABEL_32;
  v26 = v61[v27];
  if (v26)
    goto LABEL_16;
  v27 = v25 + 3;
  if (v25 + 3 >= v62)
    goto LABEL_32;
  v26 = v61[v27];
  if (v26)
  {
LABEL_16:
    v25 = v27;
    goto LABEL_17;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v62)
      goto LABEL_32;
    v26 = v61[v25];
    ++v27;
    if (v26)
      goto LABEL_17;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23F48019C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t isStackAllocationSafe;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v13 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_23F51394C(0, v7, v9);
    sub_23F617BA0();
    v10 = sub_23F480368((uint64_t)v9, v7, a1, a2);
    swift_release();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (_QWORD *)swift_slowAlloc();
    sub_23F51394C(0, v7, v11);
    sub_23F617BA0();
    v10 = sub_23F480368((uint64_t)v11, v7, a1, a2);
    swift_release();
    MEMORY[0x242670B70](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23F480368(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  char v15;
  char v16;
  unint64_t v17;
  unint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;

  v19 = (unint64_t *)result;
  v6 = 0;
  v20 = 0;
  v21 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v22 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_17;
    }
    v12 = __OFADD__(v6++, 1);
    if (v12)
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v6 >= v22)
      goto LABEL_25;
    v13 = *(_QWORD *)(v21 + 8 * v6);
    if (!v13)
      break;
LABEL_16:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_17:
    MEMORY[0x24BDAC7A8](result);
    sub_23F617BA0();
    sub_23F4534CC(a4, (uint64_t (*)(char *, char *))sub_23F48136C);
    v16 = v15;
    result = swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      *(unint64_t *)((char *)v19 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = __OFADD__(v20++, 1);
      if (v12)
        goto LABEL_28;
    }
  }
  v14 = v6 + 1;
  if (v6 + 1 >= v22)
    goto LABEL_25;
  v13 = *(_QWORD *)(v21 + 8 * v14);
  if (v13)
    goto LABEL_15;
  v14 = v6 + 2;
  if (v6 + 2 >= v22)
    goto LABEL_25;
  v13 = *(_QWORD *)(v21 + 8 * v14);
  if (v13)
    goto LABEL_15;
  v14 = v6 + 3;
  if (v6 + 3 >= v22)
  {
LABEL_25:
    swift_retain();
    v17 = sub_23F480A30(v19, a2, v20, a3);
    swift_bridgeObjectRelease();
    return v17;
  }
  v13 = *(_QWORD *)(v21 + 8 * v14);
  if (v13)
  {
LABEL_15:
    v6 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    v6 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v6 >= v22)
      goto LABEL_25;
    v13 = *(_QWORD *)(v21 + 8 * v6);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void sub_23F4805A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  if (!a3)
  {
LABEL_36:
    sub_23F3668FC();
    return;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return;
  sub_23F35D2E8(&qword_256E74DD0);
  v6 = sub_23F4827B4();
  v7 = v6;
  v30 = a2;
  if (a2 < 1)
    v8 = 0;
  else
    v8 = *a1;
  v9 = 0;
  v10 = v6 + 56;
  v11 = 24;
  while (1)
  {
    if (v8)
    {
      sub_23F482E24();
      v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_40;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v9;
    if (!v15)
    {
      v9 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v9];
      if (!v15)
      {
        v9 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v9];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    v17 = *(_QWORD *)(a4 + 48) + v13 * v11;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    sub_23F61CD30();
    sub_23F61CD54();
    sub_23F61CD54();
    sub_23F61CD3C();
    sub_23F61CD60();
    sub_23F482248();
    sub_23F4828AC();
    if (v21)
    {
      sub_23F482220();
      while (1)
      {
        sub_23F482858();
        if (v21)
        {
          if ((v22 & 1) != 0)
            break;
        }
        if (v23 == v24)
          v23 = 0;
        if (*(_QWORD *)(v10 + 8 * v23) != -1)
        {
          sub_23F48220C();
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_23F482234();
LABEL_34:
    sub_23F482330();
    *(_QWORD *)(v10 + v25) |= v26;
    v28 = *(_QWORD *)(v7 + 48) + 24 * v27;
    *(_QWORD *)v28 = v18;
    *(_QWORD *)(v28 + 8) = v19;
    *(_BYTE *)(v28 + 16) = v20;
    sub_23F482C1C();
    if (v29)
      goto LABEL_39;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v9 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v9 >= v30)
      goto LABEL_36;
    v15 = a1[v9];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_41:
  __break(1u);
}

void sub_23F4807E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v4 = a4;
  if (!a3)
  {
LABEL_37:
    sub_23F3D9AF4();
    return;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    sub_23F35D2E8(&qword_256E74F50);
    v7 = sub_23F4827B4();
    v8 = v7;
    v33 = a2;
    if (a2 < 1)
      v9 = 0;
    else
      v9 = *a1;
    v10 = 0;
    v11 = v7 + 56;
    v35 = v4;
    while (1)
    {
      if (v9)
      {
        sub_23F482E24();
        v36 = v12;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
          goto LABEL_40;
        if (v15 >= v33)
          goto LABEL_37;
        v16 = a1[v15];
        v17 = v10 + 1;
        if (!v16)
        {
          v17 = v10 + 2;
          if (v10 + 2 >= v33)
            goto LABEL_37;
          v16 = a1[v17];
          if (!v16)
          {
            v17 = v10 + 3;
            if (v10 + 3 >= v33)
              goto LABEL_37;
            v16 = a1[v17];
            if (!v16)
            {
              v18 = v10 + 4;
              if (v10 + 4 >= v33)
                goto LABEL_37;
              v16 = a1[v18];
              if (!v16)
              {
                while (1)
                {
                  v17 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    break;
                  if (v17 >= v33)
                    goto LABEL_37;
                  v16 = a1[v17];
                  ++v18;
                  if (v16)
                    goto LABEL_24;
                }
LABEL_41:
                __break(1u);
                return;
              }
              v17 = v10 + 4;
            }
          }
        }
LABEL_24:
        v9 = (v16 - 1) & v16;
        v36 = v17;
        v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * v14);
      v21 = *v19;
      v20 = v19[1];
      v22 = v19[2];
      v23 = v19[3];
      sub_23F384A00();
      sub_23F61C040();
      sub_23F482248();
      sub_23F4828AC();
      if (v24)
      {
        sub_23F482220();
        while (1)
        {
          sub_23F482858();
          if (v24)
          {
            if ((v25 & 1) != 0)
              break;
          }
          if (v26 == v27)
            v26 = 0;
          if (*(_QWORD *)(v11 + 8 * v26) != -1)
          {
            sub_23F48220C();
            goto LABEL_35;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      sub_23F482234();
LABEL_35:
      sub_23F482330();
      *(_QWORD *)(v11 + v28) |= v29;
      v31 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 32 * v30);
      *v31 = v21;
      v31[1] = v20;
      v31[2] = v22;
      v31[3] = v23;
      ++*(_QWORD *)(v8 + 16);
      if (__OFSUB__(v5--, 1))
        goto LABEL_39;
      v4 = v35;
      v10 = v36;
      if (!v5)
        goto LABEL_37;
    }
  }
}

unint64_t sub_23F480A30(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (!a3)
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  sub_23F35D2E8(&qword_256E71A20);
  result = sub_23F61C8B0();
  v6 = result;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_30;
      if (v15 >= a2)
      {
LABEL_27:
        swift_release();
        return v6;
      }
      v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          goto LABEL_27;
        v16 = a1[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            goto LABEL_27;
          v16 = a1[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              goto LABEL_27;
            v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_31;
                if (v11 >= a2)
                  goto LABEL_27;
                v16 = a1[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v14);
    sub_23F61CD30();
    sub_23F617BA0();
    sub_23F481120();
    sub_23F61CD60();
    result = sub_23F61C874();
    *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * result) = v18;
    ++*(_QWORD *)(v6 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      goto LABEL_27;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void sub_23F480C30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;

  sub_23F362ABC();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_23F482C84();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3845CC();
  if (!v5)
  {
LABEL_37:
    sub_23F3668FC();
LABEL_38:
    sub_23F362948();
    return;
  }
  if (*(_QWORD *)(v3 + 16) == v5)
    goto LABEL_38;
  v32 = v9;
  sub_23F35D2E8(&qword_256E74F58);
  v10 = sub_23F4827B4();
  v11 = v10;
  v30 = v0;
  v31 = v7;
  if (v7 < 1)
    v12 = 0;
  else
    v12 = *v0;
  v13 = 0;
  v14 = v10 + 56;
  v15 = v32;
  while (1)
  {
    if (v12)
    {
      sub_23F482B88();
      goto LABEL_25;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v17 >= v31)
      goto LABEL_37;
    ++v13;
    if (!v30[v17])
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v31)
        goto LABEL_37;
      if (!v30[v13])
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v31)
          goto LABEL_37;
        if (!v30[v13])
          break;
      }
    }
LABEL_24:
    sub_23F482828();
LABEL_25:
    v19 = v3;
    v20 = *(_QWORD *)(v3 + 48);
    v21 = *(_QWORD *)(v15 + 72);
    sub_23F384840(v1, v20 + v21 * v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
    sub_23F3B121C(&qword_256E70528, (void (*)(uint64_t))MEMORY[0x24BEB8FE0]);
    sub_23F3F9CD0();
    sub_23F61C040();
    sub_23F482248();
    sub_23F4828AC();
    if (v22)
    {
      sub_23F482220();
      v15 = v32;
      while (1)
      {
        sub_23F482858();
        if (v22)
        {
          if ((v23 & 1) != 0)
            break;
        }
        if (v24 == v25)
          v24 = 0;
        if (*(_QWORD *)(v14 + 8 * v24) != -1)
        {
          sub_23F48220C();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    sub_23F482234();
    v15 = v32;
LABEL_35:
    sub_23F482330();
    *(_QWORD *)(v14 + v26) |= v27;
    sub_23F384840(*(_QWORD *)(v11 + 48) + v28 * v21, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32));
    sub_23F482C1C();
    if (v29)
      goto LABEL_40;
    v3 = v19;
  }
  v18 = v17 + 3;
  if (v18 >= v31)
    goto LABEL_37;
  if (v30[v18])
  {
    v13 = v18;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v31)
      goto LABEL_37;
    ++v18;
    if (v30[v13])
      goto LABEL_24;
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_23F480E68(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_contactIdentifier);

  if (!v2)
    return 0;
  v3 = sub_23F61C10C();

  return v3;
}

void sub_23F480ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23F362ABC();
  v40 = sub_23F482864(v5);
  v42 = *(_QWORD *)(v40 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  v36 = (uint64_t)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v39 = sub_23F61A1D4();
  v41 = *(_QWORD *)(v39 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F48280C(v9, v34[0]);
  sub_23F35D2E8(&qword_256E6FB68);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F4822F8();
  v12 = MEMORY[0x24BDAC7A8](v11);
  sub_23F482004(v12, v13, v14, v15, v16, v17, v18, v19, v34[0]);
  v20 = 0;
  v38 = 0;
  v21 = v42;
  if (!v1)
    goto LABEL_4;
LABEL_2:
  sub_23F4826E8();
LABEL_3:
  sub_23F482378();
  v22 = sub_23F482648();
  sub_23F48257C(v22);
  sub_23F48278C();
  while (1)
  {
    sub_23F383004(v4, v3, &qword_256E6FB68);
    v30 = sub_23F3C87F8();
    sub_23F383740(v3, 1, v30);
    if (v31)
    {
      swift_release();
      sub_23F482DDC();
      sub_23F362948();
      return;
    }
    sub_23F482268();
    v32 = v36;
    v33 = v2;
    v2 = v40;
    sub_23F4244A8(v36, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 32));
    sub_23F4825C8();
    sub_23F3B121C(&qword_256E6FA98, (void (*)(uint64_t))MEMORY[0x24BE55070]);
    sub_23F482AFC();
    sub_23F3B1CC8(v30, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    sub_23F3B121C(&qword_256E703B0, (void (*)(uint64_t))MEMORY[0x24BE56EB0]);
    sub_23F4827C0();
    sub_23F3D98EC(v32, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    v20 = sub_23F4826E0() ^ v0;
    if (v1)
      goto LABEL_2;
LABEL_4:
    v3 = v37;
    if (__OFADD__(v38, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    sub_23F482D90();
    if (v24 != v25)
    {
      if (*(_QWORD *)(v35 + 8 * v23))
        goto LABEL_8;
      sub_23F482E10(v23);
      if (v24 != v25)
      {
        if (*(_QWORD *)(v35 + 8 * v26))
        {
          v23 = v26;
LABEL_8:
          sub_23F482758(v23);
          goto LABEL_3;
        }
        sub_23F482D64();
        if (v24 != v25)
          break;
      }
    }
LABEL_22:
    v29 = sub_23F3C87F8();
    sub_23F482CDC(v29);
  }
  if (*(_QWORD *)(v35 + 8 * v27))
  {
    v23 = v27;
    goto LABEL_8;
  }
  while (!__OFADD__(v27, 1))
  {
    sub_23F482D90();
    if (v24 == v25)
    {
      v38 = v34[1];
      goto LABEL_22;
    }
    v27 = v28 + 1;
    if (*(_QWORD *)(v35 + 8 * v23))
      goto LABEL_8;
  }
LABEL_28:
  __break(1u);
}

void sub_23F481120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23F362ABC();
  v40 = sub_23F482864(v5);
  v42 = *(_QWORD *)(v40 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  v36 = (uint64_t)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23F384040();
  v41 = *(_QWORD *)(v39 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F48280C(v9, v34[0]);
  sub_23F35D2E8(&qword_256E74E38);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F4822F8();
  v12 = MEMORY[0x24BDAC7A8](v11);
  sub_23F482004(v12, v13, v14, v15, v16, v17, v18, v19, v34[0]);
  v20 = 0;
  v38 = 0;
  v21 = v42;
  if (!v1)
    goto LABEL_4;
LABEL_2:
  sub_23F4826E8();
LABEL_3:
  sub_23F482378();
  v22 = sub_23F482648();
  sub_23F48257C(v22);
  sub_23F48278C();
  while (1)
  {
    sub_23F383004(v4, v3, &qword_256E74E38);
    v30 = sub_23F3C87F8();
    sub_23F383740(v3, 1, v30);
    if (v31)
    {
      swift_release();
      sub_23F482DDC();
      sub_23F362948();
      return;
    }
    sub_23F482268();
    v32 = v36;
    v33 = v2;
    v2 = v40;
    sub_23F4244A8(v36, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 32));
    sub_23F4825C8();
    sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
    sub_23F482AFC();
    sub_23F3B1CC8(v30, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    sub_23F3B121C(&qword_256E703B0, (void (*)(uint64_t))MEMORY[0x24BE56EB0]);
    sub_23F4827C0();
    sub_23F3D98EC(v32, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    v20 = sub_23F4826E0() ^ v0;
    if (v1)
      goto LABEL_2;
LABEL_4:
    v3 = v37;
    if (__OFADD__(v38, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    sub_23F482D90();
    if (v24 != v25)
    {
      if (*(_QWORD *)(v35 + 8 * v23))
        goto LABEL_8;
      sub_23F482E10(v23);
      if (v24 != v25)
      {
        if (*(_QWORD *)(v35 + 8 * v26))
        {
          v23 = v26;
LABEL_8:
          sub_23F482758(v23);
          goto LABEL_3;
        }
        sub_23F482D64();
        if (v24 != v25)
          break;
      }
    }
LABEL_22:
    v29 = sub_23F3C87F8();
    sub_23F482CDC(v29);
  }
  if (*(_QWORD *)(v35 + 8 * v27))
  {
    v23 = v27;
    goto LABEL_8;
  }
  while (!__OFADD__(v27, 1))
  {
    sub_23F482D90();
    if (v24 == v25)
    {
      v38 = v34[1];
      goto LABEL_22;
    }
    v27 = v28 + 1;
    if (*(_QWORD *)(v35 + 8 * v23))
      goto LABEL_8;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_23F48136C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F4666E8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23F481374@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_23F47045C(*(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_23F48138C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E74E88;
  if (!qword_256E74E88)
  {
    v1 = sub_23F35EB74(&qword_256E74E80);
    sub_23F3B121C(&qword_256E703B0, (void (*)(uint64_t))MEMORY[0x24BE56EB0]);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE04C8], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E74E88);
  }
  return result;
}

void sub_23F481408(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_23F468DD0(a1, *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_23F481424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23F4695A4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23F48143C@<X0>(uint64_t *a1@<X8>)
{
  return sub_23F46F660(a1);
}

uint64_t sub_23F481458(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;

  return sub_23F46A6DC(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_23F481474(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;

  return sub_23F46B6C8(a1, a2, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_23F481490(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;

  return sub_23F46B138(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t initializeWithCopy for DependencyPath(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for DependencyPath(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 initializeWithTake for DependencyPath(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DependencyPath(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DependencyPath(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DependencyPath(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DependencyPath()
{
  return &type metadata for DependencyPath;
}

unint64_t sub_23F48165C()
{
  unint64_t result;

  result = qword_256E74F48;
  if (!qword_256E74F48)
  {
    result = MEMORY[0x242670A44](&unk_23F623440, &type metadata for DependencyPath);
    atomic_store(result, (unint64_t *)&qword_256E74F48);
  }
  return result;
}

void sub_23F481698(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_23F4827AC(a1, a2);
  sub_23F362B6C(v2);
  sub_23F362928();
}

uint64_t sub_23F4816BC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v2 - 88) = a1;
  v3 = v1[55];
  *(_QWORD *)(v2 - 256) = v1[58];
  *(_QWORD *)(v2 - 248) = v3;
  v4 = v1[51];
  *(_QWORD *)(v2 - 240) = v1[54];
  *(_QWORD *)(v2 - 232) = v4;
  v5 = v1[47];
  *(_QWORD *)(v2 - 224) = v1[48];
  *(_QWORD *)(v2 - 216) = v5;
  v6 = v1[43];
  *(_QWORD *)(v2 - 208) = v1[44];
  *(_QWORD *)(v2 - 200) = v6;
  v7 = v1[41];
  *(_QWORD *)(v2 - 192) = v1[42];
  *(_QWORD *)(v2 - 184) = v7;
  v8 = v1[37];
  *(_QWORD *)(v2 - 176) = v1[40];
  *(_QWORD *)(v2 - 168) = v8;
  v9 = v1[33];
  *(_QWORD *)(v2 - 160) = v1[36];
  *(_QWORD *)(v2 - 152) = v9;
  v10 = v1[27];
  *(_QWORD *)(v2 - 144) = v1[30];
  *(_QWORD *)(v2 - 136) = v10;
  v11 = v1[21];
  *(_QWORD *)(v2 - 128) = v1[24];
  *(_QWORD *)(v2 - 120) = v11;
  v12 = v1[15];
  *(_QWORD *)(v2 - 112) = v1[18];
  *(_QWORD *)(v2 - 104) = v12;
  *(_QWORD *)(v2 - 96) = v1[12];
  return swift_task_dealloc();
}

uint64_t sub_23F4818BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v0[58];
  *(_QWORD *)(v1 - 256) = v0[60];
  *(_QWORD *)(v1 - 248) = v2;
  v3 = v0[54];
  *(_QWORD *)(v1 - 240) = v0[55];
  *(_QWORD *)(v1 - 232) = v3;
  v4 = v0[48];
  *(_QWORD *)(v1 - 224) = v0[51];
  *(_QWORD *)(v1 - 216) = v4;
  v5 = v0[44];
  *(_QWORD *)(v1 - 208) = v0[47];
  *(_QWORD *)(v1 - 200) = v5;
  v6 = v0[42];
  *(_QWORD *)(v1 - 192) = v0[43];
  *(_QWORD *)(v1 - 184) = v6;
  v7 = v0[40];
  *(_QWORD *)(v1 - 176) = v0[41];
  *(_QWORD *)(v1 - 168) = v7;
  v8 = v0[36];
  *(_QWORD *)(v1 - 160) = v0[37];
  *(_QWORD *)(v1 - 152) = v8;
  v9 = v0[30];
  *(_QWORD *)(v1 - 144) = v0[33];
  *(_QWORD *)(v1 - 136) = v9;
  v10 = v0[24];
  *(_QWORD *)(v1 - 128) = v0[27];
  *(_QWORD *)(v1 - 120) = v10;
  v11 = v0[18];
  *(_QWORD *)(v1 - 112) = v0[21];
  *(_QWORD *)(v1 - 104) = v11;
  v12 = v0[12];
  *(_QWORD *)(v1 - 96) = v0[15];
  *(_QWORD *)(v1 - 88) = v12;
  return swift_task_dealloc();
}

uint64_t sub_23F481AB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v0[54];
  *(_QWORD *)(v1 - 256) = v0[55];
  *(_QWORD *)(v1 - 248) = v2;
  v3 = v0[48];
  *(_QWORD *)(v1 - 240) = v0[51];
  *(_QWORD *)(v1 - 232) = v3;
  v4 = v0[44];
  *(_QWORD *)(v1 - 224) = v0[47];
  *(_QWORD *)(v1 - 216) = v4;
  v5 = v0[42];
  *(_QWORD *)(v1 - 208) = v0[43];
  *(_QWORD *)(v1 - 200) = v5;
  v6 = v0[40];
  *(_QWORD *)(v1 - 192) = v0[41];
  *(_QWORD *)(v1 - 184) = v6;
  v7 = v0[36];
  *(_QWORD *)(v1 - 176) = v0[37];
  *(_QWORD *)(v1 - 168) = v7;
  v8 = v0[30];
  *(_QWORD *)(v1 - 160) = v0[33];
  *(_QWORD *)(v1 - 152) = v8;
  v9 = v0[24];
  *(_QWORD *)(v1 - 144) = v0[27];
  *(_QWORD *)(v1 - 136) = v9;
  v10 = v0[18];
  *(_QWORD *)(v1 - 128) = v0[21];
  *(_QWORD *)(v1 - 120) = v10;
  v11 = v0[12];
  *(_QWORD *)(v1 - 112) = v0[15];
  *(_QWORD *)(v1 - 104) = v11;
  return swift_task_dealloc();
}

uint64_t sub_23F481CB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[51];
  *(_QWORD *)(v1 - 256) = v0[54];
  *(_QWORD *)(v1 - 248) = v2;
  v3 = v0[47];
  *(_QWORD *)(v1 - 240) = v0[48];
  *(_QWORD *)(v1 - 232) = v3;
  v4 = v0[43];
  *(_QWORD *)(v1 - 224) = v0[44];
  *(_QWORD *)(v1 - 216) = v4;
  v5 = v0[41];
  *(_QWORD *)(v1 - 208) = v0[42];
  *(_QWORD *)(v1 - 200) = v5;
  v6 = v0[37];
  *(_QWORD *)(v1 - 192) = v0[40];
  *(_QWORD *)(v1 - 184) = v6;
  v7 = v0[33];
  *(_QWORD *)(v1 - 176) = v0[36];
  *(_QWORD *)(v1 - 168) = v7;
  v8 = v0[27];
  *(_QWORD *)(v1 - 160) = v0[30];
  *(_QWORD *)(v1 - 152) = v8;
  v9 = v0[21];
  *(_QWORD *)(v1 - 144) = v0[24];
  *(_QWORD *)(v1 - 136) = v9;
  v10 = v0[15];
  *(_QWORD *)(v1 - 128) = v0[18];
  *(_QWORD *)(v1 - 120) = v10;
  *(_QWORD *)(v1 - 112) = v0[12];
  return swift_task_dealloc();
}

uint64_t sub_23F481E88()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F481EB4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F481EDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v2(v4, *(_QWORD *)(a1 + 48) + v1 * v5, v3);
}

uint64_t sub_23F481EFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = *v1;
  *v1 = 0x8000000000000000;
  return v0;
}

uint64_t sub_23F481F40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t, uint64_t);
  uint64_t v3;

  return v2(*(_QWORD *)(v3 - 120), *(_QWORD *)(**(_QWORD **)(v3 - 128) + 48) + v1, v0);
}

uint64_t sub_23F481F58()
{
  return sub_23F61C0A0();
}

uint64_t sub_23F481F70()
{
  uint64_t (*v0)(uint64_t, _QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, *(_QWORD *)(v3 - 96), v1);
}

uint64_t sub_23F481F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
}

uint64_t sub_23F481FA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  return sub_23F61C040();
}

uint64_t sub_23F481FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
}

void sub_23F481FC8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 128) = v3;
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = ~a1;
  *(_QWORD *)(v4 - 104) = v2;
}

uint64_t sub_23F481FE0()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 - 88);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F481FF0()
{
  return 0;
}

uint64_t sub_23F482004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  *(_QWORD *)(v11 - 208) = (char *)&a9 - v9;
  *(_QWORD *)(v11 - 256) = v10 + 64;
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  *(_QWORD *)(v11 - 248) = v12;
  *(_QWORD *)(v11 - 264) = v12 - 1;
  *(_QWORD *)(v11 - 240) = v10;
  return sub_23F617BA0();
}

uint64_t sub_23F482064()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 504) + 8))(*(_QWORD *)(v0 - 464), *(_QWORD *)(v0 - 496));
}

uint64_t sub_23F482084@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_23F482090(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F482098()
{
  return sub_23F617BA0();
}

uint64_t sub_23F4820A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v1 - 128) = *(_QWORD *)(v0 + 64);
  return swift_bridgeObjectRelease();
}

void sub_23F4820BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F481698(v2, a2);
}

void sub_23F4820C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 568);
  *(_QWORD *)(v1 - 112) = *(_QWORD *)(v0 + 544);
  *(_QWORD *)(v1 - 104) = v2;
}

uint64_t sub_23F4820E8()
{
  return sub_23F61AC0C();
}

void sub_23F4820FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
}

void sub_23F482138()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
}

uint64_t sub_23F4821AC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F4821B4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F4821BC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F4821C4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F4821CC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F4821D4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F4821DC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F4821E4()
{
  return swift_task_dealloc();
}

void sub_23F4821EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v1 - 104) = *(_QWORD *)(v0 + 320);
}

uint64_t sub_23F48225C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F482268()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 - 176) + 32))(*(_QWORD *)(v1 - 232), v0, *(_QWORD *)(v1 - 192));
}

uint64_t sub_23F482294(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F48229C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;

  return (*(uint64_t (**)(_QWORD, _QWORD))(a24 + 8))(*(_QWORD *)(v24 - 96), *(_QWORD *)(v24 - 104));
}

uint64_t sub_23F4822AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 120))(v0, v1);
}

uint64_t sub_23F4822BC@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v1, v3);
}

uint64_t sub_23F4822CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

uint64_t sub_23F4822DC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F482344()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F48234C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = v0;
  return v1 + 56;
}

uint64_t sub_23F482378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 - 176) + 16))(v1, *(_QWORD *)(*(_QWORD *)(v2 - 240) + 48) + *(_QWORD *)(*(_QWORD *)(v2 - 176) + 72) * v0, *(_QWORD *)(v2 - 192));
}

uint64_t sub_23F48239C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F4823A4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F4823DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 120))();
}

uint64_t sub_23F4823E4()
{
  uint64_t v0;

  return v0 + 56;
}

void sub_23F482424(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F362600(a1, a2, v2);
}

uint64_t sub_23F48245C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 392) + 8))(*(_QWORD *)(v0 - 520), *(_QWORD *)(v0 - 400));
}

uint64_t sub_23F48247C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[71];
  *(_QWORD *)(v1 - 96) = v0[68];
  *(_QWORD *)(v1 - 88) = v2;
  return v0[12];
}

uint64_t sub_23F4824A4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23F4824B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F4824BC()
{
  return type metadata accessor for StepResolution();
}

uint64_t sub_23F4824E8(uint64_t a1, uint64_t *a2)
{
  return sub_23F35D2E8(a2);
}

uint64_t sub_23F482504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F482514()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t sub_23F482520@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F48252C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F482538()
{
  return sub_23F61C8A4();
}

uint64_t sub_23F482548()
{
  return sub_23F61C8A4();
}

void sub_23F482558(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F3663AC(a1, v1);
}

uint64_t sub_23F48256C()
{
  return sub_23F61B128();
}

uint64_t sub_23F48257C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 16))(v3 + *(int *)(a1 + 48), v1, *(_QWORD *)(v4 - 184));
}

uint64_t sub_23F482598()
{
  return sub_23F61AC24();
}

uint64_t sub_23F4825A0()
{
  return swift_allocObject();
}

__n128 sub_23F4825C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __n128 result;
  __int128 v5;

  v1 = *(_QWORD *)(v0 - 216);
  v2 = *(_QWORD *)(v1 + 64);
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 - 160) = *(_OWORD *)v1;
  *(_OWORD *)(v0 - 144) = v3;
  result = *(__n128 *)(v1 + 32);
  v5 = *(_OWORD *)(v1 + 48);
  *(__n128 *)(v0 - 128) = result;
  *(_OWORD *)(v0 - 112) = v5;
  *(_QWORD *)(v0 - 96) = v2;
  return result;
}

uint64_t sub_23F482628()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 336);
}

uint64_t sub_23F482648()
{
  uint64_t *v0;

  return sub_23F35D2E8(v0);
}

uint64_t sub_23F482670()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23F4826A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = *v0;
  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_23F4826BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 200));
}

uint64_t sub_23F4826E0()
{
  return sub_23F61CD60();
}

uint64_t sub_23F482704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23F482718()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3F1328(v0, v1);
}

void sub_23F482724(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  os_log_type_t v5;
  NSObject *v6;

  _os_log_impl(a1, v6, v5, a4, v4, 2u);
}

uint64_t sub_23F482738()
{
  return sub_23F61A660();
}

uint64_t sub_23F48274C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void sub_23F482758(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 200) = a1;
}

uint64_t sub_23F482774@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  uint64_t v1;

  return a1(v1);
}

uint64_t sub_23F48277C()
{
  return swift_bridgeObjectRelease();
}

void sub_23F482784(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F481698(v2, a2);
}

uint64_t sub_23F48278C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36196C(v1, 0, 1, v0);
}

uint64_t sub_23F4827A0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4827AC(uint64_t a1, uint64_t *a2)
{
  return sub_23F35D2E8(a2);
}

uint64_t sub_23F4827B4()
{
  return sub_23F61C8B0();
}

uint64_t sub_23F4827C0()
{
  return sub_23F61C04C();
}

uint64_t sub_23F4827D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 96))(v1);
}

uint64_t sub_23F4827EC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F4827F8()
{
  uint64_t *v0;

  return sub_23F35D2E8(v0);
}

void sub_23F48280C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F482864(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 216) = a1;
  return sub_23F61B404();
}

uint64_t sub_23F4828B8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 1264))(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 416));
}

uint64_t sub_23F4828C8(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(char *, uint64_t, uint64_t, uint64_t);
  va_list va;

  va_start(va, a3);
  return v5(va, a2, v3, v4);
}

void sub_23F4828D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F382EF8(a1, a2, v2);
}

void sub_23F4828F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v0, v1, (uint64_t *)(v2 - 88));
}

uint64_t sub_23F482900()
{
  return sub_23F61CD30();
}

BOOL sub_23F482920(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F48294C()
{
  return sub_23F61B2CC();
}

uint64_t sub_23F482954()
{
  return 0;
}

uint64_t sub_23F482964()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 160) + 8))(*(_QWORD *)(v0 - 168), *(_QWORD *)(v0 - 152));
}

uint64_t sub_23F482974()
{
  return sub_23F382E18();
}

uint64_t sub_23F48299C()
{
  return sub_23F382E18();
}

uint64_t sub_23F4829C4()
{
  uint64_t *v0;

  return sub_23F35D2E8(v0);
}

uint64_t sub_23F4829D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F4829DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void sub_23F4829E4(uint64_t a1)
{
  uint64_t *v1;

  sub_23F481698(a1, v1);
}

uint64_t sub_23F4829EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 128) + 8))(*(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 112));
}

uint64_t sub_23F4829FC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t sub_23F482A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 128));
}

uint64_t sub_23F482A1C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F482A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23F482A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23F482A60@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v3, v1);
}

uint64_t sub_23F482A70()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F482A7C()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
  return sub_23F617BA0();
}

uint64_t sub_23F482A9C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F482AAC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = a2;
  return a2(0);
}

uint64_t sub_23F482ABC()
{
  return sub_23F61C898();
}

uint64_t sub_23F482ACC()
{
  return sub_23F61C898();
}

uint64_t sub_23F482AFC()
{
  return sub_23F61C04C();
}

uint64_t sub_23F482B34()
{
  return sub_23F61B14C();
}

uint64_t sub_23F482B68()
{
  return sub_23F61CD30();
}

void sub_23F482B78(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * (a1 / v3);
}

uint64_t sub_23F482BA0()
{
  return sub_23F61C10C();
}

void *sub_23F482BB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;

  return memmove(a1, v2, 8 * a2);
}

void *sub_23F482BBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;

  return memmove(a1, v2, 8 * a2);
}

uint64_t sub_23F482BC8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F482BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return *(_QWORD *)(v0 + 56) + *(_QWORD *)(*(_QWORD *)(v2 - 216) + 72) * v1;
}

uint64_t sub_23F482BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return *(_QWORD *)(v0 + 56) + *(_QWORD *)(*(_QWORD *)(v2 - 216) + 72) * v1;
}

void sub_23F482C10()
{
  uint64_t v0;

  sub_23F3B121C(*(_QWORD **)(v0 - 96), *(void (**)(uint64_t))(v0 - 104));
}

void sub_23F482C1C()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

void sub_23F482C30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 272) = (unint64_t)(v0 + 63) >> 6;
}

uint64_t sub_23F482C78()
{
  return sub_23F61C790();
}

uint64_t sub_23F482C84()
{
  return sub_23F61B5D8();
}

void sub_23F482C90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 96));
}

size_t sub_23F482CAC(const void *a1)
{
  return j__malloc_size(a1);
}

void sub_23F482CD0()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
}

uint64_t sub_23F482CDC(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(v1, 1, 1, a1);
}

uint64_t sub_23F482D00()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 88), *(_QWORD *)(v1 - 96));
}

void sub_23F482D0C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F362600(a1, a2, v2);
}

uint64_t sub_23F482D14()
{
  return sub_23F61BFEC();
}

uint64_t sub_23F482D20()
{
  return sub_23F61A660();
}

uint64_t sub_23F482D28()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t sub_23F482D34()
{
  return sub_23F61B128();
}

uint64_t sub_23F482D3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 104))();
}

uint64_t sub_23F482D44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_23F482D50()
{
  return swift_retain();
}

void sub_23F482D58(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F37AE00(v4, v3, a3);
}

void sub_23F482D64()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 200) = v0;
}

uint64_t sub_23F482D78(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, v1);
}

uint64_t sub_23F482D84()
{
  uint64_t v0;

  return v0;
}

void sub_23F482D9C()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23F481698(v0, v1);
}

uint64_t sub_23F482DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F482DB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 32))(v1);
}

uint64_t sub_23F482DCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F482DD4()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F482DDC()
{
  return sub_23F61CD3C();
}

void sub_23F482DE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 344) = v0;
}

uint64_t sub_23F482DF4@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  return a1 & ~(-1 << a2);
}

uint64_t sub_23F482E08()
{
  return sub_23F61CD60();
}

void sub_23F482E10(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 200) = a1;
}

uint64_t sub_23F482E38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 96))(v1);
}

uint64_t sub_23F482E5C()
{
  return sub_23F61C22C();
}

uint64_t sub_23F482E68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F482E74()
{
  uint64_t (*v0)(_QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(*(_QWORD *)(v2 - 136), v1);
}

uint64_t sub_23F482E80()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3F1328(v0, v1);
}

uint64_t sub_23F482E8C()
{
  return sub_23F61C10C();
}

void sub_23F482E98(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F36262C(a1, v2, v1);
}

uint64_t sub_23F482EA4()
{
  return sub_23F61C22C();
}

uint64_t sub_23F482EC4()
{
  return type metadata accessor for Interpreter(0);
}

uint64_t sub_23F482ECC()
{
  return sub_23F61A570();
}

uint64_t sub_23F482EEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x706E496C65646F6DLL && a2 == 0xEA00000000007475;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x74754F6C65646F6DLL && a2 == 0xEB00000000747570;
    if (v6 || (sub_23F61CC64() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7265566C65646F6DLL && a2 == 0xEC0000006E6F6973)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F483074(char a1)
{
  if (!a1)
    return 0x706E496C65646F6DLL;
  if (a1 == 1)
    return 0x74754F6C65646F6DLL;
  return 0x7265566C65646F6DLL;
}

uint64_t sub_23F4830E0()
{
  char *v0;

  return sub_23F483074(*v0);
}

uint64_t sub_23F4830E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F482EEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F48310C()
{
  sub_23F4832C4();
  return sub_23F61CDC0();
}

uint64_t sub_23F483134()
{
  sub_23F4832C4();
  return sub_23F61CDCC();
}

uint64_t JointResolution.JointResolverCurareEvent.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];
  uint64_t v14;
  char v15;
  uint64_t v16;

  v13[1] = a5;
  v14 = a3;
  v8 = sub_23F35D2E8(&qword_256E74F68);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35EA9C(a1, a1[3]);
  sub_23F4832C4();
  sub_23F61CD90();
  v16 = a2;
  v15 = 0;
  sub_23F35D2E8(&qword_256E74F78);
  sub_23F4834D8((unint64_t *)&qword_256E74F80, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
  sub_23F483914();
  if (!v5)
  {
    v16 = v14;
    v15 = 1;
    sub_23F483914();
    LOBYTE(v16) = 2;
    sub_23F61CBB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_23F4832C4()
{
  unint64_t result;

  result = qword_256E74F70;
  if (!qword_256E74F70)
  {
    result = MEMORY[0x242670A44](&unk_23F6235EC, &_s24JointResolverCurareEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E74F70);
  }
  return result;
}

uint64_t JointResolution.JointResolverCurareEvent.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = sub_23F35D2E8(&qword_256E74F88);
  MEMORY[0x24BDAC7A8](v3);
  v4 = a1[3];
  sub_23F35EA9C(a1, v4);
  sub_23F4832C4();
  sub_23F61CD84();
  if (v1)
  {
    sub_23F44D4A0();
  }
  else
  {
    sub_23F35D2E8(&qword_256E74F78);
    sub_23F4834D8(&qword_256E74F90, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_23F4838F0();
    v4 = v6;
    sub_23F617BA0();
    sub_23F4838F0();
    sub_23F617BA0();
    sub_23F61CB14();
    sub_23F4838E0();
    sub_23F617BA0();
    sub_23F44D4A0();
    swift_bridgeObjectRelease();
    sub_23F384364();
    sub_23F384120();
  }
  return v4;
}

uint64_t sub_23F4834D8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = sub_23F35EB74(&qword_256E74F78);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x242670A44](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F483538@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = JointResolution.JointResolverCurareEvent.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_23F483564(_QWORD *a1)
{
  uint64_t *v1;

  return JointResolution.JointResolverCurareEvent.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t _s24JointResolverCurareEventVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s24JointResolverCurareEventVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

_QWORD *_s24JointResolverCurareEventVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s24JointResolverCurareEventVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s24JointResolverCurareEventVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s24JointResolverCurareEventVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JointResolution.JointResolverCurareEvent()
{
  return &type metadata for JointResolution.JointResolverCurareEvent;
}

uint64_t _s24JointResolverCurareEventV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F4837A0 + 4 * byte_23F6234B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F4837D4 + 4 * byte_23F6234B0[v4]))();
}

uint64_t sub_23F4837D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4837DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F4837E4);
  return result;
}

uint64_t sub_23F4837F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F4837F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F4837FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F483804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s24JointResolverCurareEventV10CodingKeysOMa()
{
  return &_s24JointResolverCurareEventV10CodingKeysON;
}

unint64_t sub_23F483824()
{
  unint64_t result;

  result = qword_256E74F98;
  if (!qword_256E74F98)
  {
    result = MEMORY[0x242670A44](&unk_23F6235C4, &_s24JointResolverCurareEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E74F98);
  }
  return result;
}

unint64_t sub_23F483864()
{
  unint64_t result;

  result = qword_256E74FA0;
  if (!qword_256E74FA0)
  {
    result = MEMORY[0x242670A44](&unk_23F623534, &_s24JointResolverCurareEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E74FA0);
  }
  return result;
}

unint64_t sub_23F4838A4()
{
  unint64_t result;

  result = qword_256E74FA8;
  if (!qword_256E74FA8)
  {
    result = MEMORY[0x242670A44](&unk_23F62355C, &_s24JointResolverCurareEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E74FA8);
  }
  return result;
}

uint64_t sub_23F4838E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F4838F0()
{
  return sub_23F61CB44();
}

uint64_t sub_23F483914()
{
  return sub_23F61CBE0();
}

void sub_23F483934(int a1, unint64_t a2, unint64_t a3)
{
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  if ((a3 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a3) & 0xF;
  else
    v4 = a2 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return;
  v7 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v7) = 1;
  v8 = 4 << v7;
  v17 = a3 & 0xFFFFFFFFFFFFFFLL;
  v15 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v9 = 15;
  while (1)
  {
    v10 = v9;
    if ((v9 & 0xC) == v8)
      sub_23F3BBECC(v9, a2, a3);
    v11 = v10 >> 16;
    if (v10 >> 16 >= v4)
      break;
    if ((a3 & 0x1000000000000000) != 0)
    {
      v13 = sub_23F61C2E0();
    }
    else if ((a3 & 0x2000000000000000) != 0)
    {
      v16[0] = a2;
      v16[1] = v17;
      v13 = *((_BYTE *)v16 + v11);
    }
    else
    {
      v12 = v15;
      if ((a2 & 0x1000000000000000) == 0)
        v12 = sub_23F61C934();
      v13 = *(_BYTE *)(v12 + v11);
    }
    if ((v9 & 0xC) == v8)
    {
      sub_23F3BBECC(v9, a2, a3);
      v9 = v14;
      if ((a3 & 0x1000000000000000) == 0)
      {
LABEL_19:
        v9 = (v9 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_24;
      }
    }
    else if ((a3 & 0x1000000000000000) == 0)
    {
      goto LABEL_19;
    }
    if (v4 <= v9 >> 16)
      goto LABEL_27;
    v9 = sub_23F61C2BC();
LABEL_24:
    a1 = 33 * a1 + v13;
    if (4 * v4 == v9 >> 14)
      return;
  }
  __break(1u);
LABEL_27:
  __break(1u);
}

__n128 JointResolution.DeviceContext.init(timestamp:location:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;
  __n128 v10;
  __int128 v11;
  __int128 v12;

  v11 = a2[1];
  v12 = *a2;
  v10 = (__n128)a2[2];
  v5 = *((_QWORD *)a2 + 6);
  v6 = *((_BYTE *)a2 + 56);
  v7 = sub_23F40EBD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a3, a1, v7);
  v8 = a3 + *(int *)(sub_23F484888() + 20);
  *(_OWORD *)v8 = v12;
  *(_OWORD *)(v8 + 16) = v11;
  result = v10;
  *(__n128 *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 48) = v5;
  *(_BYTE *)(v8 + 56) = v6;
  return result;
}

uint64_t type metadata accessor for JointResolution.DeviceContext()
{
  uint64_t result;

  result = qword_256E75008;
  if (!qword_256E75008)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t JointResolution.DeviceContext.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23F40EBD4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t JointResolution.DeviceContext.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v1 + *(int *)(sub_23F484888() + 20);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(v3 + 56);
  return sub_23F483C08(v4, v5);
}

uint64_t sub_23F483C08(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    sub_23F617BA0();
    return sub_23F617BA0();
  }
  return result;
}

void *sub_23F483C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  char v6;
  __n128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  double v16;
  uint64_t v17;
  void *v18;
  void *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __n128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  void *v33;
  void *v34;
  __n128 *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  void *v44;
  void *v45;
  __n128 *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  void *v55;
  void *v56;

  v2 = v0;
  sub_23F35D2E8(&qword_256E70E48);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23F623640;
  sub_23F484800();
  *(_QWORD *)(v3 + 32) = sub_23F48484C();
  sub_23F484854();
  v4 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
  v5 = (void *)sub_23F4880E8(v3, 65552);
  if (!v1)
  {
    v6 = sub_23F616F70();
    v7 = (__n128 *)sub_23F48483C();
    sub_23F48487C(v7, v8, v9, v10, v11, v12, v13, v14, v15);
    v7[2].n128_u64[0] = sub_23F48484C();
    sub_23F484854();
    if ((v6 & 1) != 0)
    {
      sub_23F616F04();
      log(fabs(v16));
      v17 = sub_23F61C4E4();
    }
    else
    {
      v17 = sub_23F48484C();
    }
    v18 = (void *)v17;
    v19 = (void *)sub_23F48485C();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setObject_forKeyedSubscript_, v18, v19, 1, 3);

    v20 = (unint64_t *)(v2 + *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20));
    v21 = v20[1];
    v22 = v20[2];
    v23 = v20[3];
    if (v21)
    {
      if (v21 == 1)
      {
LABEL_10:
        v24 = (__n128 *)sub_23F48483C();
        sub_23F48487C(v24, v25, v26, v27, v28, v29, v30, v31, v32);
        v24[2].n128_u64[0] = sub_23F48484C();
        sub_23F484854();
        v33 = (void *)sub_23F61CCF4();
        v34 = (void *)sub_23F48485C();
        swift_bridgeObjectRelease();
        objc_msgSend(v5, sel_setObject_forKeyedSubscript_, v33, v34);

        v35 = (__n128 *)sub_23F48483C();
        sub_23F48487C(v35, v36, v37, v38, v39, v40, v41, v42, v43);
        v35[2].n128_u64[0] = sub_23F48484C();
        sub_23F484854();
        v44 = (void *)sub_23F61CCF4();
        v45 = (void *)sub_23F48485C();
        swift_bridgeObjectRelease();
        objc_msgSend(v5, sel_setObject_forKeyedSubscript_, v44, v45);

        v46 = (__n128 *)sub_23F48483C();
        sub_23F48487C(v46, v47, v48, v49, v50, v51, v52, v53, v54);
        v46[2].n128_u64[0] = sub_23F48484C();
        sub_23F484854();
        v55 = (void *)sub_23F48484C();
        v56 = (void *)sub_23F48485C();
        swift_bridgeObjectRelease();
        objc_msgSend(v5, sel_setObject_forKeyedSubscript_, v55, v56);

        return v5;
      }
      sub_23F483934(5381, *v20, v21);
    }
    if (v23)
      sub_23F483934(5381, v22, v23);
    goto LABEL_10;
  }
  return v5;
}

BOOL static JointResolution.DeviceContext.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  _QWORD v23[5];
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27[15];
  char v28;

  if ((sub_23F616F88() & 1) == 0)
    return 0;
  v4 = *(int *)(sub_23F484888() + 20);
  v6 = *(_QWORD *)(a1 + v4);
  v5 = *(_QWORD *)(a1 + v4 + 8);
  v7 = (uint64_t *)(a2 + v4);
  v9 = *v7;
  v8 = v7[1];
  v10 = v7[2];
  if (v5 == 1)
  {
    if (v8 == 1)
      return 1;
    goto LABEL_7;
  }
  sub_23F484864();
  if (v8 == 1)
  {
    sub_23F483C08(v6, v5);
LABEL_7:
    sub_23F484864();
    v27[8] = v9;
    v27[9] = v8;
    v27[10] = v10;
    v27[11] = v16;
    v27[12] = v17;
    v27[13] = v18;
    v27[14] = v19;
    v28 = v20;
    sub_23F483C08(v9, v8);
    sub_23F4840CC(v27);
    return 0;
  }
  v23[0] = v9;
  v23[1] = v8;
  v23[2] = v10;
  v23[3] = v11;
  v23[4] = v12;
  v24 = v13 & 1;
  v25 = v14;
  v26 = v15 & 1;
  v21 = static JointResolverLocationSignal.== infix(_:_:)((uint64_t)v27, (uint64_t)v23);
  sub_23F617BA0();
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v21 & 1) != 0;
}

uint64_t *sub_23F4840CC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[8];
  v3 = a1[9];
  sub_23F48415C(*a1, a1[1]);
  sub_23F48415C(v2, v3);
  return a1;
}

uint64_t sub_23F48415C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *_s13DeviceContextVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F616FC4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 == 1)
    {
      v12 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v12;
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *(_OWORD *)(v9 + 41) = *(_OWORD *)(v10 + 41);
    }
    else
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v11;
      v14 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v14;
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      v9[40] = v10[40];
      *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
      v9[56] = v10[56];
      sub_23F617BA0();
      sub_23F617BA0();
    }
  }
  return a1;
}

uint64_t _s13DeviceContextVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13DeviceContextVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  if (v10 == 1)
  {
    v11 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v11;
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 41) = *(_OWORD *)(v9 + 41);
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    v12 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v12;
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
    *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
    *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
    sub_23F617BA0();
    sub_23F617BA0();
  }
  return a1;
}

uint64_t _s13DeviceContextVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *((_QWORD *)v9 + 1);
  if (v10 == 1)
  {
    if (v11 == 1)
    {
      v12 = *v9;
      v13 = v9[1];
      v14 = v9[2];
      *(_OWORD *)(v8 + 41) = *(__int128 *)((char *)v9 + 41);
      *(_OWORD *)(v8 + 16) = v13;
      *(_OWORD *)(v8 + 32) = v14;
      *(_OWORD *)v8 = v12;
    }
    else
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
      *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
      v18 = *((_QWORD *)v9 + 4);
      *(_BYTE *)(v8 + 40) = *((_BYTE *)v9 + 40);
      *(_QWORD *)(v8 + 32) = v18;
      v19 = *((_QWORD *)v9 + 6);
      *(_BYTE *)(v8 + 56) = *((_BYTE *)v9 + 56);
      *(_QWORD *)(v8 + 48) = v19;
      sub_23F617BA0();
      sub_23F617BA0();
    }
  }
  else if (v11 == 1)
  {
    sub_23F48450C(v8);
    v16 = v9[1];
    v15 = v9[2];
    v17 = *v9;
    *(_OWORD *)(v8 + 41) = *(__int128 *)((char *)v9 + 41);
    *(_OWORD *)(v8 + 16) = v16;
    *(_OWORD *)(v8 + 32) = v15;
    *(_OWORD *)v8 = v17;
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
    sub_23F617BA0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
    *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
    sub_23F617BA0();
    swift_bridgeObjectRelease();
    v20 = *((_QWORD *)v9 + 4);
    *(_BYTE *)(v8 + 40) = *((_BYTE *)v9 + 40);
    *(_QWORD *)(v8 + 32) = v20;
    v21 = *((_QWORD *)v9 + 6);
    *(_BYTE *)(v8 + 56) = *((_BYTE *)v9 + 56);
    *(_QWORD *)(v8 + 48) = v21;
  }
  return a1;
}

uint64_t sub_23F48450C(uint64_t a1)
{
  destroy for JointResolverLocationSignal();
  return a1;
}

uint64_t _s13DeviceContextVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  *(_OWORD *)((char *)v8 + 41) = *(_OWORD *)((char *)v9 + 41);
  return a1;
}

uint64_t _s13DeviceContextVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 8) != 1)
  {
    v10 = *(_QWORD *)(v9 + 8);
    if (v10 != 1)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = v10;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v12;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
      *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      return a1;
    }
    sub_23F48450C(v8);
  }
  v11 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v11;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 41) = *(_OWORD *)(v9 + 41);
  return a1;
}

uint64_t _s13DeviceContextVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F484694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F40EBD4();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return ((_DWORD)v8 - 1) & ~(((int)v8 - 1) >> 31);
}

uint64_t _s13DeviceContextVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F48471C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23F40EBD4();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 + 1);
  return result;
}

uint64_t sub_23F484790()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F616FC4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23F484800()
{
  unint64_t result;

  result = qword_256E75040;
  if (!qword_256E75040)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E75040);
  }
  return result;
}

uint64_t sub_23F48483C()
{
  return swift_allocObject();
}

uint64_t sub_23F48484C()
{
  return sub_23F61C6C4();
}

uint64_t sub_23F484854()
{
  return sub_23F61C3F4();
}

uint64_t sub_23F48485C()
{
  return sub_23F61C3D0();
}

__n128 sub_23F48487C(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  __n128 result;

  result = a9;
  a1[1] = a9;
  return result;
}

uint64_t sub_23F484888()
{
  return type metadata accessor for JointResolution.DeviceContext();
}

uint64_t sub_23F484890(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16[5];

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = a1[4];
  sub_23F3664B0();
  v8 = sub_23F61BFEC();
  if (v4)
    v9 = 0;
  else
    v9 = v3 == 0xE000000000000000;
  if (!v9 && (sub_23F3B1DD8() & 1) == 0
    || (!v6 ? (v10 = v5 == 0xE000000000000000) : (v10 = 0), !v10 && (sub_23F3B1DD8() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    sub_23F484ADC();
    goto LABEL_14;
  }
  sub_23F4903B0(v7, v8);
  v12 = v11;
  swift_bridgeObjectRelease();
  sub_23F484ADC();
  if ((v12 & 1) == 0)
  {
LABEL_14:
    sub_23F617BA0();
    sub_23F617BA0();
    v16[0] = v4;
    v16[1] = v3;
    v16[2] = v6;
    v16[3] = v5;
    v16[4] = sub_23F61BFEC();
    os_unfair_lock_lock((os_unfair_lock_t)(a2 + 24));
    sub_23F484A10((uint64_t *)(a2 + 16), v16, &v15);
    os_unfair_lock_unlock((os_unfair_lock_t)(a2 + 24));
    v13 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v13;
  }
  return -1;
}

uint64_t sub_23F484A10@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t result;
  uint64_t v14;

  v5 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    sub_23F382BDC((uint64_t)a2);
    v6 = sub_23F3754E8(a2);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
LABEL_10:
      result = sub_23F382D8C((uint64_t)a2);
      *a3 = v8;
      return result;
    }
    sub_23F382D8C((uint64_t)a2);
  }
  v9 = sub_23F617BA0();
  v10 = sub_23F385B6C(v9);
  v12 = v11;
  result = swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    v14 = 0;
  else
    v14 = v10;
  v8 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    sub_23F382BDC((uint64_t)a2);
    sub_23F37E2E4();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23F484ADC()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F484AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_23F37B580();
    v5 = v12;
    v6 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v6;
      sub_23F617BA0();
      swift_retain();
      sub_23F484DC0(v7, a2);
      v9 = v8;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v12 + 16);
      if (v10 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_23F37B580();
      *(_QWORD *)(v12 + 16) = v10 + 1;
      *(_QWORD *)(v12 + 8 * v10 + 32) = v9;
      ++v6;
      --v3;
    }
    while (v3);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t sub_23F484C08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_23F37B5B4();
    v5 = v13;
    v6 = (uint64_t *)(a1 + 32);
    v7 = *(_QWORD *)(a2 + 8);
    while (1)
    {
      v8 = *v6;
      if (v7 < 0 || v7 >= *(_QWORD *)(v8 + 16))
        break;
      v9 = *(_DWORD *)(v8 + 4 * v7 + 32);
      v10 = *(_QWORD *)(v13 + 16);
      if (v10 >= *(_QWORD *)(v13 + 24) >> 1)
        sub_23F37B5B4();
      *(_QWORD *)(v13 + 16) = v10 + 1;
      *(_DWORD *)(v13 + 4 * v10 + 32) = v9;
      ++v6;
      if (!--v3)
      {
        sub_23F4890C4();
        return v5;
      }
    }
    sub_23F617BA0();
    sub_23F61C8E0();
    swift_bridgeObjectRelease();
    sub_23F61CC1C();
    sub_23F61C280();
    sub_23F3837B0();
    sub_23F366414();
    sub_23F362D64();
    *v11 = 0xD000000000000022;
    v11[1] = 0x800000023F636AE0;
    sub_23F488E9C();
    swift_release();
    swift_bridgeObjectRelease();
    sub_23F4890C4();
  }
  else
  {
    sub_23F4890C4();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

void sub_23F484DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  os_unfair_lock_s *lock;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[5];
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_release();
    return;
  }
  v25 = MEMORY[0x24BEE4AF8];
  sub_23F37B5B4();
  v6 = v25;
  v19 = (uint64_t *)(a2 + 16);
  lock = (os_unfair_lock_s *)(a2 + 24);
  sub_23F3664B0();
  for (i = (uint64_t *)(a1 + 64); ; i += 5)
  {
    v8 = *(i - 4);
    v9 = *(i - 3);
    v10 = *(i - 1);
    v22 = *(i - 2);
    v11 = *i;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    v12 = sub_23F61BFEC();
    v13 = !v8 && v9 == 0xE000000000000000;
    v21 = v8;
    if (!v13 && (sub_23F61CC64() & 1) == 0)
      break;
    if ((v22 || v10 != 0xE000000000000000) && (sub_23F61CC64() & 1) == 0)
      break;
    sub_23F4903B0(v11, v12);
    v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if ((v15 & 1) == 0)
      goto LABEL_14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = -1;
LABEL_16:
    v25 = v6;
    v18 = *(_QWORD *)(v6 + 16);
    if (v18 >= *(_QWORD *)(v6 + 24) >> 1)
    {
      sub_23F37B5B4();
      v6 = v25;
    }
    *(_QWORD *)(v6 + 16) = v18 + 1;
    *(float *)(v6 + 4 * v18 + 32) = (float)v16;
    if (!--v4)
    {
      swift_release();
      return;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_14:
  sub_23F617BA0();
  sub_23F617BA0();
  v17 = sub_23F61BFEC();
  v24[0] = v21;
  v24[1] = v9;
  v24[2] = v22;
  v24[3] = v10;
  v24[4] = v17;
  os_unfair_lock_lock(lock);
  sub_23F484A10(v19, v24, &v23);
  if (!v2)
  {
    os_unfair_lock_unlock(lock);
    v16 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  os_unfair_lock_unlock(lock);
  __break(1u);
}

uint64_t sub_23F4850B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  float v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  float v13;
  unint64_t v14;
  float *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v2 = v0[1];
  v3 = v2;
  switch(*v0)
  {
    case 1:
      return v3;
    case 2:
      return v2;
    case 3:
      v5 = v0[2];
      if (!*(_QWORD *)(v5 + 16))
      {
        sub_23F61C8E0();
        swift_bridgeObjectRelease();
        v30 = 0xD000000000000011;
        v31 = 0x800000023F636AC0;
        sub_23F61CC1C();
        sub_23F4890FC();
        sub_23F362D18();
        goto LABEL_37;
      }
      v6 = *(float *)(v5 + 32);
      v3 = v0[4];
      sub_23F485A6C((uint64_t)v0);
      v7 = sub_23F362CDC();
      v8 = sub_23F48911C(v7);
      sub_23F362C60();
      if (v1)
        return v3;
      v3 = sub_23F4854FC(v8, v6);
      v10 = v9;
      sub_23F362984();
      if ((v10 & 1) == 0)
        return v3;
      goto LABEL_36;
    case 4:
      sub_23F485A6C((uint64_t)v0);
      v11 = sub_23F383E5C();
      v3 = sub_23F48911C(v11);
      sub_23F3837B0();
      if (v1)
        return v3;
      v12 = v0[2];
      v32 = v12;
      v29 = *(_QWORD *)(v12 + 16);
      if (!v29)
      {
        sub_23F362C60();
        return v2;
      }
      v13 = *(float *)(v12 + 32);
      v28 = v12 + 32;
      v14 = *(_QWORD *)(v3 + 16);
      if (v14)
      {
        v15 = (float *)(v3 + 32);
        sub_23F617BA0();
        v16 = MEMORY[0x24BEE4AF8];
        v17 = 1;
        v18 = v14;
        v27 = v3;
        while (1)
        {
          if (*v15 == v13)
          {
            v19 = 0;
            if ((sub_23F4890A8() & 1) != 0)
              goto LABEL_26;
          }
          else
          {
            if (v14 == 1)
              goto LABEL_35;
            if (v18 < 2)
              goto LABEL_44;
            if (*(float *)(v3 + 36) != v13)
            {
              v20 = 1;
              while (1)
              {
                v19 = v20 + 1;
                if (__OFADD__(v20, 1))
                  break;
                if (v19 == v14)
                  goto LABEL_35;
                if (v19 >= v18)
                  goto LABEL_42;
                ++v20;
                if (v15[v19] == v13)
                {
                  if ((sub_23F4890A8() & 1) != 0)
                    goto LABEL_26;
                  goto LABEL_31;
                }
              }
              __break(1u);
LABEL_42:
              __break(1u);
LABEL_43:
              __break(1u);
LABEL_44:
              __break(1u);
              JUMPOUT(0x23F4854ECLL);
            }
            v19 = 1;
            if ((sub_23F4890A8() & 1) != 0)
            {
              v19 = 1;
              goto LABEL_26;
            }
          }
LABEL_31:
          sub_23F377218();
          v16 = v23;
LABEL_26:
          v22 = *(_QWORD *)(v16 + 16);
          v21 = *(_QWORD *)(v16 + 24);
          if (v22 >= v21 >> 1)
          {
            sub_23F389FB0(v21);
            sub_23F377218();
            v16 = v24;
          }
          *(_QWORD *)(v16 + 16) = v22 + 1;
          *(_QWORD *)(v16 + 8 * v22 + 32) = v19;
          if (v17 == v29)
            break;
          v3 = v27;
          v13 = *(float *)(v28 + 4 * v17++);
          v18 = *(_QWORD *)(v27 + 16);
          if (!v18)
            goto LABEL_43;
        }
        sub_23F39B968((uint64_t)&v32);
        swift_bridgeObjectRelease();
        return v2;
      }
      sub_23F617BA0();
LABEL_35:
      sub_23F362C60();
      sub_23F39B968((uint64_t)&v32);
      sub_23F3837B0();
LABEL_36:
      v30 = 0;
      v31 = 0xE000000000000000;
      sub_23F61C8E0();
      sub_23F48900C();
      sub_23F61C520();
      sub_23F48900C();
      sub_23F61CC1C();
      sub_23F4890FC();
      sub_23F362D18();
LABEL_37:
      sub_23F61C280();
      v3 = v31;
      sub_23F366414();
      sub_23F362D64();
      *v25 = v30;
      v25[1] = v31;
LABEL_38:
      sub_23F488E9C();
      return v3;
    default:
      sub_23F366414();
      sub_23F362D64();
      *v4 = 0xD000000000000021;
      v4[1] = 0x800000023F636A30;
      goto LABEL_38;
  }
}

uint64_t sub_23F4854FC(uint64_t a1, float a2)
{
  uint64_t v2;
  float v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  float v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v4 = *(float *)(a1 + 32);
  result = 0;
  if (v4 != a2)
  {
    v6 = v2 - 1;
    v7 = a1 + 36;
    while (v6 != result)
    {
      v8 = *(float *)(v7 + 4 * result++);
      if (v8 == a2)
        return result;
    }
    return 0;
  }
  return result;
}

void sub_23F48555C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v4 = *(_QWORD *)(sub_23F61B5D8() - 8);
    v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    sub_23F488CD4();
    for (i = 0; i != v2; ++i)
    {
      if ((sub_23F61C0A0() & 1) != 0)
        break;
      v5 += v6;
    }
  }
  sub_23F383568();
}

void sub_23F485600(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = a3[2];
  if (v3)
  {
    v7 = a3[4] == a1 && a3[5] == a2;
    if (!v7 && (sub_23F489044() & 1) == 0)
    {
      v8 = 0;
      v9 = a3 + 7;
      v10 = 1;
      do
      {
        if (v3 == v10)
          break;
        ++v8;
        if (*(v9 - 1) == a1 && *v9 == a2)
          break;
        ++v10;
        v9 += 2;
      }
      while ((sub_23F489044() & 1) == 0);
    }
  }
  sub_23F383568();
}

void sub_23F4856BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  __int128 v33;
  uint64_t v34;
  _OWORD *v35;
  id v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;

  v3 = v1;
  v5 = _s10ModelInputVMa();
  v6 = sub_23F489128();
  sub_23F48E970(v6, v7, v8, v9);
  if (!v2)
  {
    v13 = v10;
    v14 = v11;
    v15 = v12;
    sub_23F489C78(v3, a1, *(_QWORD *)(v3 + *(int *)(v5 + 24)), *(_QWORD *)(v3 + *(int *)(v5 + 24) + 8));
    v17 = v16;
    v19 = v18;
    v40 = v20;
    v21 = sub_23F489128();
    v39 = sub_23F48BB58(v21, v22);
    v23 = sub_23F483C3C();
    v37 = sub_23F48F058(*(_QWORD *)(v3 + *(int *)(v5 + 32)), *(_QWORD *)(v3 + *(int *)(v5 + 32) + 8));
    v38 = (uint64_t)v23;
    sub_23F35D2E8(&qword_256E70E48);
    v35 = (_OWORD *)sub_23F488EB4();
    v35[1] = xmmword_23F623640;
    sub_23F489080();
    v24 = sub_23F61C6C4();
    sub_23F488FD4(v24, (uint64_t)v35);
    v25 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
    v36 = (id)sub_23F488EEC();
    v26 = (void *)sub_23F61C508();
    objc_msgSend(v36, sel_setObject_atIndexedSubscript_, v26, 0);

    v27 = (void *)sub_23F61C508();
    objc_msgSend(v36, sel_setObject_atIndexedSubscript_, v27, 1);

    v28 = (void *)sub_23F61C574();
    objc_msgSend(v36, sel_setObject_atIndexedSubscript_, v28, 2);

    v34 = sub_23F488EB4();
    *(_OWORD *)(v34 + 16) = xmmword_23F623640;
    v29 = sub_23F61C6C4();
    sub_23F488FD4(v29, v34);
    v30 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
    v31 = (void *)sub_23F488EEC();
    v32 = (void *)sub_23F61C574();
    objc_msgSend(v31, sel_setObject_atIndexedSubscript_, v32, 0);

    type metadata accessor for PlanResolutionModelInput();
    sub_23F36682C();
    *((_QWORD *)&v33 + 1) = v15;
    *(_QWORD *)&v33 = v14;
    sub_23F614F9C(v13, v38, v40, v17, v19, (uint64_t)v39, (uint64_t)v37, (uint64_t)v36, v33, (uint64_t)v31);
  }
}

uint64_t sub_23F485A48(unint64_t a1)
{
  if (a1 >= 5)
    return 4;
  else
    return (0x302010004uLL >> (8 * a1));
}

uint64_t sub_23F485A6C(uint64_t a1)
{
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

void sub_23F485ACC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __objc2_ivar *v35;
  os_unfair_lock_s *v36;
  uint64_t os_unfair_lock_opaque;
  void *v38;
  void *v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  __objc2_ivar *v50;
  uint64_t v51;
  int64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  unint64_t v76;
  void *v77;
  id v78;
  void *v79;
  id v80;
  char v81;
  void *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  void *v86;
  id v87;
  unint64_t v88;
  id v89;
  id v90;
  void *v91;
  void *v92;
  uint64_t v93;
  void *v94;
  id v95;
  uint64_t v96;
  unsigned __int8 v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char *v101;
  NSObject *v102;
  os_log_type_t v103;
  _BOOL4 v104;
  uint64_t v105;
  uint8_t *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  void (*v110)(int64_t);
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  void *v117;
  unint64_t v118;
  id v119;
  uint64_t v120;
  void *v121;
  unint64_t v122;
  id v123;
  id v124;
  unint64_t v125;
  char *v126;
  unint64_t v127;
  void *v128;
  void *v129;
  uint64_t v130;
  void *v131;
  id v132;
  int v133;
  int v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  void *v139;
  os_log_type_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t);
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  void *v149;
  id v150;
  uint64_t v151;
  id v152;
  os_unfair_lock_s *v153;
  unint64_t v154;
  uint64_t v155;
  __n128 *v156;
  uint64_t v157;
  id v158;
  char *v159;
  __n128 *v160;
  uint64_t v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  BOOL v182;
  char v183;
  char v184;
  __objc2_ivar *v185;
  uint64_t v186;
  unint64_t v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  char v201;
  uint64_t v202;
  uint64_t (*v203)(uint64_t);
  unint64_t v204;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  void *v208;
  os_log_type_t v209;
  uint64_t v210;
  uint64_t v211;
  void (*v212)(char *);
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  char *v221;
  _QWORD *v222;
  uint64_t v223;
  void *v224;
  os_log_type_t v225;
  uint64_t v226;
  uint64_t v227;
  void (*v228)(char *);
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  NSObject *v232;
  os_log_type_t v233;
  uint64_t v234;
  uint8_t *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  _QWORD *v244;
  _QWORD v245[2];
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  os_unfair_lock_s *v251;
  __int128 v252;
  id v253;
  unint64_t v254;
  uint64_t *v255;
  void *v256;
  uint64_t v257;
  unint64_t v258;
  __int128 v259;
  uint64_t v260;
  char *v261;
  os_unfair_lock_t v262;
  char *v263;
  char *v264;
  __objc2_ivar *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  _QWORD *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  int64_t v278;
  uint64_t v279;
  uint64_t v280;
  unint64_t v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285[5];
  uint64_t v286;
  uint64_t v287[5];

  v284 = a3;
  v269 = a4;
  sub_23F35D2E8(&qword_256E75048);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3834D0();
  v274 = v7;
  MEMORY[0x24BDAC7A8](v8);
  v275 = (uint64_t)v245 - v9;
  v273 = type metadata accessor for JointResolution.CandidateInteraction(0);
  v268 = *(_QWORD *)(v273 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  v277 = v11;
  sub_23F35D2E8(&qword_256E75050);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3834D0();
  v271 = v13;
  MEMORY[0x24BDAC7A8](v14);
  v272 = (uint64_t)v245 - v15;
  v270 = type metadata accessor for JointResolution.TupleInteraction(0);
  v267 = *(_QWORD *)(v270 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  v276 = v17;
  v18 = sub_23F619E98();
  v279 = *(_QWORD *)(v18 - 8);
  v280 = v18;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3834D0();
  v278 = v20;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v245 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)v245 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)v245 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)v245 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v35 = (__objc2_ivar *)((char *)v245 - v34);
  v36 = (os_unfair_lock_s *)_s10ModelInputVMa();
  os_unfair_lock_opaque = (int)v36[5]._os_unfair_lock_opaque;
  v283 = a2;
  v281 = *(_QWORD *)(a2 + os_unfair_lock_opaque);
  sub_23F61509C();
  v39 = v38;
  v40 = v282;
  sub_23F4874B4(v38);
  if (v40)
  {

    swift_release();
    swift_release();
    v51 = v283;
LABEL_4:
    sub_23F3663AC(v51, (uint64_t (*)(_QWORD))_s10ModelInputVMa);
    return;
  }
  v265 = v35;
  v282 = v33;
  v262 = v36;
  v264 = v24;
  v261 = v27;
  v263 = v30;
  v266 = a1;
  v42 = v41;

  v43 = v284;
  swift_retain();
  v44 = sub_23F383E5C();
  v45 = sub_23F484AE8(v44, v43);
  sub_23F3837B0();
  v46 = *(void **)(v42 + 16);
  v47 = *(void **)(v45 + 16);
  v48 = sub_23F487CC4(v42);
  v49 = sub_23F487CC4(v45);
  v50 = 0;
  if (v46 != v47 || v48 != v49)
  {
    v53 = v278;
    sub_23F6190DC();
    sub_23F362CDC();
    sub_23F3668F4();
    v54 = sub_23F619E8C();
    v55 = sub_23F61C61C();
    v56 = v55;
    if (os_log_type_enabled(v54, v55))
    {
      v57 = sub_23F366668();
      LODWORD(v282) = v56;
      v58 = v57;
      v281 = sub_23F366668();
      v285[0] = v281;
      *(_DWORD *)v58 = 136315394;
      sub_23F362CDC();
      v59 = sub_23F35D2E8(&qword_256E70048);
      v60 = MEMORY[0x24266F8F8](v42, v59);
      v62 = v61;
      sub_23F362C60();
      sub_23F37AE00(v60, v62, v285);
      v286 = v63;
      sub_23F48901C();
      sub_23F384A80();
      swift_bridgeObjectRelease();
      *(_WORD *)(v58 + 12) = 2080;
      v64 = sub_23F3668F4();
      v65 = MEMORY[0x24266F8F8](v64, v59);
      v67 = v66;
      sub_23F362D18();
      sub_23F37AE00(v65, v67, v285);
      v286 = v68;
      sub_23F48901C();
      sub_23F384A80();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F35A000, v54, (os_log_type_t)v282, "Wrong ModeOutput initializer: rankingsMatrix: %s, tuplesMatrix: %s", (uint8_t *)v58, 0x16u);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F384A80();
    sub_23F384A80();
    sub_23F4890F0();
    v110(v53);
    v111 = v283;
    sub_23F366414();
    sub_23F362D64();
    sub_23F488E8C();
    sub_23F488E78(v113, v112 + 5);
    swift_release();
    sub_23F384AF8();
    v51 = v111;
    goto LABEL_4;
  }
  v278 = v48;
  v281 = (unint64_t)v46;
  sub_23F362CDC();
  sub_23F3668F4();
  sub_23F489054();
  sub_23F489088();
  v70 = sub_23F488FF4(v69);
  sub_23F488FFC();
  v71 = sub_23F489080();
  v72 = sub_23F48909C();

  if (v72 >> 62)
  {
    sub_23F488F90();
    v73 = sub_23F488FAC();
    sub_23F362984();
  }
  else
  {
    v73 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_23F362984();
  if (v73 != 1)
    goto LABEL_29;
  sub_23F489088();
  v75 = sub_23F488FF4(v74);
  sub_23F488FFC();
  v76 = sub_23F48909C();

  if (v76 >> 62)
  {
    sub_23F488F90();
    v77 = (void *)sub_23F488FAC();
    sub_23F362984();
    if (!v77)
      goto LABEL_19;
  }
  else
  {
    v77 = *(void **)((v76 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v77)
      goto LABEL_19;
  }
  sub_23F3753DC(0, (v76 & 0xC000000000000001) == 0, v76);
  if ((v76 & 0xC000000000000001) != 0)
    v78 = (id)MEMORY[0x24266FE14](0, v76);
  else
    v78 = *(id *)(v76 + 32);
  v77 = v78;
LABEL_19:
  sub_23F362984();
  v79 = (void *)sub_23F61C6C4();
  if (!v77)
  {
    sub_23F362C60();
    sub_23F362D18();

    goto LABEL_32;
  }
  v80 = v77;
  v81 = sub_23F61C6D0();

  if ((v81 & 1) == 0)
  {
LABEL_29:
    sub_23F362C60();
    sub_23F362D18();
LABEL_32:
    sub_23F366414();
    sub_23F362D64();
    sub_23F488E8C();
    sub_23F488E78(v115, v114 + 6);
LABEL_33:
    swift_release();
    v116 = sub_23F384AF8();
    sub_23F488FA4(v116, (uint64_t (*)(_QWORD))_s10ModelInputVMa);
    goto LABEL_34;
  }
  sub_23F489088();
  v83 = v82;
  v260 = sub_23F35D2E8(&qword_256E70E48);
  v84 = sub_23F488EB4();
  v259 = xmmword_23F623640;
  *(_OWORD *)(v84 + 16) = xmmword_23F623640;
  *(_QWORD *)(v84 + 32) = sub_23F61C6C4();
  v285[0] = v84;
  sub_23F488F7C();
  v85 = (void *)sub_23F61C3D0();
  sub_23F362984();
  v86 = v83;
  v87 = objc_msgSend(v83, sel_objectForKeyedSubscript_, v85);
  v88 = v71;
  v89 = v87;

  v90 = objc_msgSend(v89, sel_integerValue);
  sub_23F615070();
  v92 = v91;
  v93 = sub_23F488EB4();
  *(_OWORD *)(v93 + 16) = v259;
  *(_QWORD *)(v93 + 32) = sub_23F61C6C4();
  v285[0] = v93;
  sub_23F488F7C();
  v258 = v88;
  v94 = (void *)sub_23F61C3D0();
  sub_23F362984();
  v95 = objc_msgSend(v92, sel_objectForKeyedSubscript_, v94);

  objc_msgSend(v95, sel_integerValue);
  sub_23F488FFC();
  v96 = (uint64_t)v94 - 1;
  if (__OFSUB__(v94, 1))
  {
    __break(1u);
    goto LABEL_131;
  }
  v97 = sub_23F485A48((unint64_t)v90);
  v98 = v280;
  v99 = 0x1F268F000;
  if (v97 < 2u)
  {
    if (v96 < 0 || v96 >= v281)
    {
      sub_23F362C60();
      sub_23F362D18();
      sub_23F489090();
      v139 = (void *)sub_23F619E8C();
      v140 = sub_23F61C61C();
      if (sub_23F40B304(v140))
      {
        *(_DWORD *)sub_23F488EC0() = 134217984;
        v285[0] = v96;
        sub_23F488EA4();
        sub_23F488ECC(&dword_23F35A000, v141, v142, "Wrong index in model output: %ld");
        sub_23F366530();
      }

      sub_23F4890F0();
      v143(0x1F268F000);
      sub_23F366414();
      sub_23F362D64();
      sub_23F488E8C();
      sub_23F488E78(v145, v144 | 4);
      sub_23F488EE0();
      v146 = sub_23F384AF8();
      sub_23F488FA4(v146, (uint64_t (*)(_QWORD))_s10ModelInputVMa);
      goto LABEL_34;
    }
  }
  else
  {
    if (v97 - 2 >= 2)
    {
      sub_23F362C60();
      sub_23F362D18();
      sub_23F366414();
      sub_23F362D64();
      sub_23F488E8C();
LABEL_140:
      sub_23F488E78(v147, v148);
      goto LABEL_33;
    }
    if (v96 < 0 || v96 >= v278)
    {
      v100 = v96;
      v281 = v42;
      sub_23F362C60();
      sub_23F362D18();
      v101 = v282;
      sub_23F6190DC();
      v102 = sub_23F619E8C();
      v103 = sub_23F61C61C();
      v104 = os_log_type_enabled(v102, v103);
      v105 = v279;
      if (v104)
      {
        v106 = (uint8_t *)sub_23F488EC0();
        *(_DWORD *)v106 = 134217984;
        v285[0] = v100;
        sub_23F488EA4();
        _os_log_impl(&dword_23F35A000, v102, v103, "Wrong index in model output: %ld", v106, 0xCu);
        sub_23F366530();
      }

      (*(void (**)(char *, uint64_t))(v105 + 8))(v101, v98);
      sub_23F366414();
      sub_23F362D64();
      sub_23F488E8C();
      sub_23F488E78(v108, v107 + 7);
      sub_23F488EE0();
      v109 = sub_23F384AF8();
      sub_23F488FA4(v109, (uint64_t (*)(_QWORD))_s10ModelInputVMa);
      goto LABEL_34;
    }
  }
  v257 = v96;
  v282 = (char *)v45;
  sub_23F489134();
  v118 = (unint64_t)v117;
  v119 = sub_23F488FF4(v117);
  sub_23F489114();
  sub_23F488FC8();
  sub_23F488F74();
  if (v118 >> 62)
  {
    sub_23F3668F4();
    v120 = sub_23F488FAC();
    sub_23F362D18();
  }
  else
  {
    v120 = *(_QWORD *)((v118 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_23F362D18();
  if (v120 != 1)
  {
    sub_23F362C60();
LABEL_139:
    swift_bridgeObjectRelease();
    sub_23F366414();
    sub_23F362D64();
    sub_23F488E8C();
    v148 = v231 + 14;
    goto LABEL_140;
  }
  sub_23F489134();
  v122 = (unint64_t)v121;
  v123 = sub_23F488FF4(v121);
  sub_23F489114();
  sub_23F488FC8();
  sub_23F488F74();
  if (!(v122 >> 62))
  {
    if (*(_QWORD *)((v122 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_42;
    goto LABEL_138;
  }
  sub_23F3668F4();
  v230 = sub_23F488FAC();
  sub_23F362D18();
  if (!v230)
  {
LABEL_138:
    sub_23F362C60();
    sub_23F362984();
    goto LABEL_139;
  }
LABEL_42:
  sub_23F488FE4();
  if ((v122 & 0xC000000000000001) != 0)
    sub_23F489074();
  v124 = *(id *)(v122 + 32);
  sub_23F362D18();
  v125 = (unint64_t)objc_msgSend(v124, sel_integerValue);

  if ((v125 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_143:
    sub_23F3668F4();
    v151 = sub_23F488FAC();
    sub_23F362D18();
    if ((v151 & 0x8000000000000000) == 0)
      goto LABEL_149;
    __break(1u);
LABEL_145:
    sub_23F489074();
  }
  v253 = v90;
  if (v125)
  {
    v126 = 0;
    sub_23F489054();
    do
    {
      v122 = v127;
      sub_23F615084();
      v129 = v128;
      v130 = sub_23F488EB4();
      *(_OWORD *)(v130 + 16) = v259;
      *(_QWORD *)(v130 + 32) = sub_23F61C574();
      v285[0] = v130;
      sub_23F488F7C();
      v131 = (void *)sub_23F61C3D0();
      sub_23F362984();
      v132 = objc_msgSend(v129, sel_objectForKeyedSubscript_, v131);

      objc_msgSend(v132, sel_floatValue);
      v134 = v133;

      v135 = v122;
      if ((sub_23F3F5E54() & 1) == 0)
      {
        sub_23F488F5C();
        v135 = v137;
      }
      v127 = v135;
      v99 = *(_QWORD *)(v135 + 16);
      v136 = *(_QWORD *)(v135 + 24);
      if (v99 >= v136 >> 1)
      {
        sub_23F389FB0(v136);
        sub_23F3770E0();
        v127 = v138;
      }
      ++v126;
      *(_QWORD *)(v127 + 16) = v99 + 1;
      *(_DWORD *)(v127 + 4 * v99 + 32) = v134;
    }
    while ((char *)v125 != v126);
  }
  else
  {
    sub_23F489054();
  }
  *(_QWORD *)&v259 = v127;
  swift_bridgeObjectRetain_n();
  sub_23F6150E4();
  v256 = v149;
  v150 = objc_msgSend(v149, sel_shape);
  sub_23F488FC8();
  sub_23F488F74();
  if (v122 >> 62)
    goto LABEL_143;
  v151 = *(_QWORD *)((v122 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v151)
  {
LABEL_150:
    sub_23F488F54();
    sub_23F384A80();
    sub_23F362C60();
    sub_23F489090();
    sub_23F3668F4();
    v232 = sub_23F619E8C();
    v233 = sub_23F61C61C();
    if (os_log_type_enabled(v232, v233))
    {
      v234 = sub_23F488EC0();
      v281 = v42;
      v235 = (uint8_t *)v234;
      v285[0] = sub_23F366668();
      *(_DWORD *)v235 = 136315138;
      v278 = (int64_t)(v235 + 4);
      v236 = sub_23F3668F4();
      MEMORY[0x24266F8F8](v236, v258);
      v238 = v237;
      sub_23F362D18();
      sub_23F489054();
      sub_23F37AE00(v239, v238, v240);
      v286 = v241;
      sub_23F61C790();
      sub_23F384A80();
      sub_23F38458C();
      _os_log_impl(&dword_23F35A000, v232, v233, "userHistory shape is incorrect: %s", v235, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F384A80();
    (*(void (**)(unint64_t, uint64_t))(v279 + 8))(v99, v280);
    v242 = v283;
    sub_23F366414();
    sub_23F362D64();
    sub_23F488E8C();
    sub_23F488E78(v244, v243 + 9);
    sub_23F488F84();
    swift_release();
    sub_23F384AF8();
    sub_23F3663AC(v242, (uint64_t (*)(_QWORD))_s10ModelInputVMa);
    goto LABEL_153;
  }
  while (1)
  {
    v99 = v122 & 0xC000000000000001;
    sub_23F488FE4();
    if ((v122 & 0xC000000000000001) != 0)
      goto LABEL_145;
    v152 = *(id *)(v122 + 32);
    v254 = (unint64_t)objc_msgSend(v152, sel_integerValue);

    if ((unint64_t)v151 < 2)
      goto LABEL_150;
    sub_23F3753DC(1uLL, 1, v122);
    objc_msgSend(*(id *)(v122 + 40), sel_integerValue);
    sub_23F488FFC();
    if (v152 != (id)2)
      goto LABEL_150;
    v265 = v50;
    v281 = v42;
    sub_23F362D18();
    v122 = sub_23F35D2E8(qword_256E75058);
    v151 = MEMORY[0x24BEE4AF8];
    v99 = MEMORY[0x24BEE1778];
    v249 = sub_23F488FB4();
    v153 = (os_unfair_lock_s *)sub_23F488FB4();
    v251 = v153;
    v154 = v254;
    if ((v254 & 0x8000000000000000) == 0)
      break;
LABEL_147:
    __break(1u);
LABEL_148:
    os_unfair_lock_unlock(v153);
    __break(1u);
LABEL_149:
    sub_23F489054();
    if (!v151)
      goto LABEL_150;
  }
  if (!v254)
  {
LABEL_123:
    swift_release();
    sub_23F488F84();
    v217 = v259;
    sub_23F362C60();
    v218 = sub_23F488EE0();
    sub_23F488FA4(v218, (uint64_t (*)(_QWORD))_s10ModelInputVMa);
    sub_23F362CDC();
    v219 = v281;
    sub_23F3668F4();
    v220 = v249;
    sub_23F383E5C();
    swift_bridgeObjectRelease();
    v221 = v282;
    sub_23F362984();
    sub_23F384A80();
    sub_23F384A80();
    v222 = v269;
    v223 = v257;
    *v269 = v253;
    v222[1] = v223;
    v222[2] = v217;
    v222[3] = v219;
    v222[4] = v221;
    v222[5] = v220;
    v222[6] = v251;
    return;
  }
  v155 = 0;
  v246 = (_QWORD *)(v283 + (int)v262[6]._os_unfair_lock_opaque);
  v247 = *(_QWORD *)(v246[1] + 16);
  v255 = (uint64_t *)(v284 + 16);
  v262 = (os_unfair_lock_t)(v284 + 24);
  v252 = xmmword_23F61F1B0;
  while (1)
  {
    if (v155 == v154)
    {
      __break(1u);
      goto LABEL_147;
    }
    v99 = v260;
    v156 = (__n128 *)sub_23F36682C();
    sub_23F489060(v156);
    *(_QWORD *)(v122 + 32) = sub_23F61C574();
    v42 = v258;
    *(_QWORD *)(v122 + 40) = sub_23F61C6C4();
    v285[0] = v122;
    sub_23F488F7C();
    sub_23F489034();
    v157 = sub_23F362D18();
    v50 = &stru_250FE6000;
    v158 = sub_23F4890B0(v157, sel_objectForKeyedSubscript_);
    sub_23F488F74();
    v159 = (char *)sub_23F489108();

    v160 = (__n128 *)sub_23F36682C();
    sub_23F489060(v160);
    v250 = v155;
    *(_QWORD *)(v122 + 32) = sub_23F61C574();
    *(_QWORD *)(v122 + 40) = sub_23F61C6C4();
    v285[0] = v122;
    sub_23F488F7C();
    v151 = sub_23F489034();
    v161 = sub_23F362D18();
    v162 = sub_23F4890B0(v161, sel_objectForKeyedSubscript_);
    sub_23F488F74();
    sub_23F489108();
    sub_23F489114();
    v264 = v159;
    if (v159 != (char *)-1)
      break;
LABEL_116:
    v155 = v250 + 1;
    v154 = v254;
    if (v250 + 1 == v254)
      goto LABEL_123;
  }
  v163 = v151 - v247;
  if (v151 < v247)
  {
    v164 = 1;
    v248 = v151;
    if (v151 < 0)
    {
      v166 = v271;
    }
    else
    {
      v165 = v246[1];
      v166 = v271;
      if (v248 < *(_QWORD *)(v165 + 16))
      {
        sub_23F488248(v165+ ((*(unsigned __int8 *)(v267 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v267 + 80))+ *(_QWORD *)(v267 + 72) * v248, v271, type metadata accessor for JointResolution.TupleInteraction);
        v164 = 0;
      }
    }
    v170 = v270;
    sub_23F36196C(v166, v164, 1, v270);
    v171 = v166;
    v172 = v272;
    sub_23F4881FC(v171, v272, &qword_256E75050);
    if (sub_23F36195C(v172, 1, v170) == 1)
    {
      sub_23F48902C();
      sub_23F488F54();
      sub_23F384A80();
      sub_23F3625D8(v172, &qword_256E75050);
LABEL_119:
      sub_23F4890D8();
      v208 = (void *)sub_23F619E8C();
      v209 = sub_23F61C628();
      if (sub_23F40B304(v209))
      {
        *(_DWORD *)sub_23F488EC0() = 134217984;
        v285[0] = v248;
        sub_23F488EA4();
        sub_23F488ECC(&dword_23F35A000, v210, v211, "Interaction index %ld doesn't exist in tuple interactions");
        sub_23F366530();
      }

      sub_23F4890F0();
      v212(v263);
      sub_23F366414();
      sub_23F362D64();
      sub_23F488E8C();
      v215 = v214 + 27;
      goto LABEL_122;
    }
    v173 = v172;
    v174 = v276;
    sub_23F488228(v173, v276, type metadata accessor for JointResolution.TupleInteraction);
    v175 = *(_QWORD *)(v174 + *(int *)(v170 + 20));
    v176 = *(_QWORD *)(v175 + 16);
    if (v176)
    {
      swift_bridgeObjectRetain_n();
      v278 = sub_23F3664B0();
      v245[1] = v175;
      v122 = v175 + 64;
      while (1)
      {
        v177 = *(_QWORD *)(v122 - 32);
        v178 = *(_QWORD *)(v122 - 24);
        v179 = *(_QWORD *)(v122 - 16);
        v99 = *(_QWORD *)(v122 - 8);
        v180 = *(_QWORD *)v122;
        sub_23F383E5C();
        sub_23F617BA0();
        sub_23F617BA0();
        v181 = sub_23F61BFEC();
        v182 = !v177 && v178 == 0xE000000000000000;
        if (!v182 && (sub_23F3B1DD8() & 1) == 0 || (v179 || v99 != 0xE000000000000000) && (sub_23F3B1DD8() & 1) == 0)
          break;
        v50 = (__objc2_ivar *)v180;
        sub_23F4903B0(v180, v181);
        v184 = v183;
        sub_23F362984();
        sub_23F384A80();
        if ((v184 & 1) == 0)
          goto LABEL_90;
        sub_23F38458C();
        swift_bridgeObjectRelease();
        sub_23F3837B0();
LABEL_92:
        v122 += 40;
        if (!--v176)
        {
          sub_23F488F54();
          sub_23F488F08();
          sub_23F384A80();
          goto LABEL_118;
        }
      }
      v50 = (__objc2_ivar *)v180;
      sub_23F362984();
      sub_23F384A80();
LABEL_90:
      sub_23F383E5C();
      sub_23F617BA0();
      v151 = sub_23F61BFEC();
      v287[0] = v177;
      v287[1] = v178;
      v287[2] = v179;
      v287[3] = v99;
      v287[4] = v151;
      v42 = (unint64_t)v262;
      os_unfair_lock_lock(v262);
      v185 = v265;
      sub_23F484A10(v255, v287, v285);
      v265 = v185;
      v153 = (os_unfair_lock_s *)v42;
      if (v185)
        goto LABEL_148;
      os_unfair_lock_unlock((os_unfair_lock_t)v42);
      v186 = v285[0];
      sub_23F38458C();
      sub_23F362984();
      sub_23F384A80();
      sub_23F384A80();
      if ((char *)v186 == v264)
      {
        sub_23F384A80();
        if (*(_QWORD *)(v249 + 16))
        {
          v187 = sub_23F37556C((uint64_t)v264);
          v122 = MEMORY[0x24BEE4AF8];
          if ((v188 & 1) != 0)
          {
            v122 = *(_QWORD *)(*(_QWORD *)(v249 + 56) + 8 * v187);
            sub_23F3668F4();
          }
        }
        else
        {
          v122 = MEMORY[0x24BEE4AF8];
        }
        if ((sub_23F3F5E54() & 1) == 0)
        {
          sub_23F488F14();
          v122 = v206;
        }
        v42 = *(_QWORD *)(v122 + 16);
        v151 = v42 + 1;
        if (v42 >= *(_QWORD *)(v122 + 24) >> 1)
        {
          sub_23F488F14();
          v122 = v207;
        }
        *(_QWORD *)(v122 + 16) = v151;
        *(_QWORD *)(v122 + 8 * v42 + 32) = v248;
        sub_23F4890E4();
        sub_23F488F20();
        sub_23F4890CC(v285[0]);
        v202 = v276;
        v203 = type metadata accessor for JointResolution.TupleInteraction;
        goto LABEL_115;
      }
      goto LABEL_92;
    }
LABEL_131:
    sub_23F488F54();
    sub_23F488F08();
LABEL_118:
    sub_23F48902C();
    sub_23F3663AC(v276, type metadata accessor for JointResolution.TupleInteraction);
    sub_23F488F08();
    goto LABEL_119;
  }
  v167 = v151;
  v168 = 1;
  if (v163 < 0)
  {
    v169 = v274;
  }
  else
  {
    v169 = v274;
    if (v163 < *(_QWORD *)(*v246 + 16))
    {
      sub_23F488248(*v246+ ((*(unsigned __int8 *)(v268 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v268 + 80))+ *(_QWORD *)(v268 + 72) * v163, v274, type metadata accessor for JointResolution.CandidateInteraction);
      v168 = 0;
    }
  }
  v189 = v273;
  sub_23F36196C(v169, v168, 1, v273);
  v190 = v169;
  v191 = v275;
  sub_23F4881FC(v190, v275, &qword_256E75048);
  if (sub_23F36195C(v191, 1, v189) == 1)
  {
    sub_23F48902C();
    sub_23F488F54();
    sub_23F384A80();
    sub_23F3625D8(v191, &qword_256E75048);
    goto LABEL_133;
  }
  v192 = v191;
  v193 = v277;
  sub_23F488228(v192, v277, type metadata accessor for JointResolution.CandidateInteraction);
  v194 = (uint64_t *)(v193 + *(int *)(v189 + 20));
  v195 = v194[1];
  v196 = v194[2];
  v197 = v194[3];
  v198 = v194[4];
  v285[0] = *v194;
  v285[1] = v195;
  v285[2] = v196;
  v285[3] = v197;
  v285[4] = v198;
  sub_23F3668F4();
  sub_23F617BA0();
  sub_23F362CDC();
  v199 = sub_23F484890(v285, v284);
  sub_23F362C60();
  sub_23F362984();
  sub_23F362D18();
  if ((char *)v199 == v264)
  {
    if (*(_QWORD *)&v251[4]._os_unfair_lock_opaque)
    {
      v200 = sub_23F37556C((uint64_t)v264);
      v122 = MEMORY[0x24BEE4AF8];
      if ((v201 & 1) != 0)
      {
        v122 = *(_QWORD *)(*(_QWORD *)&v251[14]._os_unfair_lock_opaque + 8 * v200);
        sub_23F3668F4();
      }
    }
    else
    {
      v122 = MEMORY[0x24BEE4AF8];
    }
    if ((sub_23F3F5E54() & 1) == 0)
    {
      sub_23F488F14();
      v122 = v204;
    }
    v42 = *(_QWORD *)(v122 + 16);
    v151 = v42 + 1;
    if (v42 >= *(_QWORD *)(v122 + 24) >> 1)
    {
      sub_23F488F14();
      v122 = v205;
    }
    *(_QWORD *)(v122 + 16) = v151;
    *(_QWORD *)(v122 + 8 * v42 + 32) = v167;
    sub_23F4890E4();
    sub_23F488F20();
    sub_23F4890CC(v285[0]);
    v202 = v277;
    v203 = type metadata accessor for JointResolution.CandidateInteraction;
LABEL_115:
    sub_23F3663AC(v202, v203);
    goto LABEL_116;
  }
  sub_23F48902C();
  sub_23F488F54();
  sub_23F362D18();
  sub_23F3663AC(v277, type metadata accessor for JointResolution.CandidateInteraction);
  sub_23F362D18();
LABEL_133:
  sub_23F4890D8();
  v224 = (void *)sub_23F619E8C();
  v225 = sub_23F61C628();
  if (sub_23F40B304(v225))
  {
    *(_DWORD *)sub_23F488EC0() = 134217984;
    v285[0] = v167;
    sub_23F488EA4();
    sub_23F488ECC(&dword_23F35A000, v226, v227, "Interaction index %ld doesn't exist in candidate interactions");
    sub_23F366530();
  }

  sub_23F4890F0();
  v228(v261);
  sub_23F366414();
  sub_23F362D64();
  sub_23F488E8C();
  v215 = v229 + 31;
LABEL_122:
  sub_23F488E78(v213, v215);
  sub_23F488F84();
  sub_23F488EE0();
  v216 = swift_release();
  sub_23F488FA4(v216, (uint64_t (*)(_QWORD))_s10ModelInputVMa);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_153:
  sub_23F488F08();
LABEL_34:
  sub_23F362D18();
  sub_23F362C60();
}

void sub_23F4874B4(void *a1)
{
  uint64_t v1;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  _QWORD *v14;
  uint8_t *v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  void *v37;
  uint8_t *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  int v46;
  int v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint8_t *v67;
  uint8_t *v68;
  void (*v69)(char *, uint8_t *);
  uint64_t v70;
  char *v71;
  uint8_t *v72;
  uint64_t v73;
  __int128 v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;

  v3 = (uint8_t *)sub_23F619E98();
  *(_QWORD *)&v74 = *((_QWORD *)v3 - 1);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v71 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v68 - v6;
  v75 = a1;
  v8 = objc_msgSend(a1, sel_shape);
  v9 = sub_23F484800();
  v10 = sub_23F61C3DC();

  sub_23F6190DC();
  swift_bridgeObjectRetain_n();
  v11 = sub_23F619E8C();
  v12 = sub_23F61C61C();
  v13 = os_log_type_enabled(v11, v12);
  v14 = &unk_23F61E000;
  v70 = v1;
  if (v13)
  {
    v15 = v3;
    v16 = (uint8_t *)swift_slowAlloc();
    v73 = swift_slowAlloc();
    v78 = v73;
    v72 = v16;
    *(_DWORD *)v16 = 136315138;
    v69 = (void (*)(char *, uint8_t *))(v16 + 4);
    v17 = sub_23F617BA0();
    v18 = MEMORY[0x24266F8F8](v17, v9);
    v20 = v19;
    swift_bridgeObjectRelease();
    v21 = v18;
    v14 = (_QWORD *)&unk_23F61E000;
    sub_23F37AE00(v21, v20, &v78);
    v77 = v22;
    v3 = v15;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v23 = v72;
    _os_log_impl(&dword_23F35A000, v11, v12, "mlMultiArray.shape: %s", v72, 0xCu);
    v24 = v73;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v24, -1, -1);
    MEMORY[0x242670B70](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v69 = *(void (**)(char *, uint8_t *))(v74 + 8);
  v69(v7, v3);
  if (v10 >> 62)
    goto LABEL_46;
  v25 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v25 != 3)
      goto LABEL_16;
    v26 = v10 & 0xC000000000000001;
    sub_23F3753DC(1uLL, (v10 & 0xC000000000000001) == 0, v10);
    v27 = (v10 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24266FE14](1, v10) : *(id *)(v10 + 40);
    v28 = v27;
    v29 = (uint64_t)objc_msgSend(v27, sel_integerValue, v68);

    if (v29 < 1
      || ((sub_23F3753DC(2uLL, v26 == 0, v10), !v26)
        ? (v30 = *(id *)(v10 + 48))
        : (v30 = (id)MEMORY[0x24266FE14](2, v10)),
          v31 = v30,
          v32 = (uint64_t)objc_msgSend(v30, sel_integerValue),
          v31,
          v32 < 1))
    {
LABEL_16:
      v78 = 0;
      v79 = 0xE000000000000000;
      sub_23F61C8E0();
      swift_bridgeObjectRelease();
      v78 = 0xD000000000000020;
      v79 = 0x800000023F636CF0;
      MEMORY[0x24266F8F8](v10, v9);
      sub_23F61C280();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = v78;
      v35 = v79;
      sub_23F366414();
      swift_allocError();
      *v36 = v34;
      v36[1] = v35;
      swift_willThrow();
      return;
    }
    if (v26)
      v33 = (id)MEMORY[0x24266FE14](1, v10);
    else
      v33 = *(id *)(v10 + 40);
    v37 = v33;
    v38 = (uint8_t *)objc_msgSend(v33, sel_integerValue);

    if (v26)
      v39 = (id)MEMORY[0x24266FE14](2, v10);
    else
      v39 = *(id *)(v10 + 48);
    v40 = v39;
    swift_bridgeObjectRelease();
    v10 = (unint64_t)objc_msgSend(v40, sel_integerValue);

    v80 = MEMORY[0x24BEE4AF8];
    if (((unint64_t)v38 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_49:
      __break(1u);
      return;
    }
    v68 = v3;
    if (!v38)
      break;
    if ((v10 & 0x8000000000000000) != 0)
      goto LABEL_49;
    v3 = 0;
    v74 = xmmword_23F6236B0;
    v72 = v38;
    v73 = MEMORY[0x24BEE4AF8];
    while (v3 != v38)
    {
      if (v10)
      {
        v41 = 0;
        v42 = MEMORY[0x24BEE4AF8];
        do
        {
          sub_23F35D2E8(&qword_256E70E48);
          v43 = swift_allocObject();
          *(_OWORD *)(v43 + 16) = v74;
          *(_QWORD *)(v43 + 32) = sub_23F61C6C4();
          *(_QWORD *)(v43 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v3);
          *(_QWORD *)(v43 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v41);
          v78 = v43;
          sub_23F61C3F4();
          v44 = (void *)sub_23F61C3D0();
          swift_bridgeObjectRelease();
          v45 = objc_msgSend(v75, sel_objectForKeyedSubscript_, v44);

          sub_23F61C4FC();
          v47 = v46;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F3770E0();
            v42 = v49;
          }
          v48 = *(_QWORD *)(v42 + 16);
          if (v48 >= *(_QWORD *)(v42 + 24) >> 1)
          {
            sub_23F3770E0();
            v42 = v50;
          }
          ++v41;
          *(_QWORD *)(v42 + 16) = v48 + 1;
          *(_DWORD *)(v42 + 4 * v48 + 32) = v47;
        }
        while (v10 != v41);
      }
      else
      {
        v42 = MEMORY[0x24BEE4AF8];
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377204();
        v73 = v53;
      }
      v14 = &unk_23F61E000;
      v51 = *(_QWORD *)(v73 + 16);
      if (v51 >= *(_QWORD *)(v73 + 24) >> 1)
      {
        sub_23F377204();
        v73 = v54;
      }
      ++v3;
      v52 = v73;
      *(_QWORD *)(v73 + 16) = v51 + 1;
      *(_QWORD *)(v52 + 8 * v51 + 32) = v42;
      v38 = v72;
      if (v3 == v72)
      {
        v80 = v73;
        v3 = v68;
        goto LABEL_41;
      }
    }
    __break(1u);
LABEL_46:
    sub_23F617BA0();
    v25 = sub_23F61CA6C();
    swift_bridgeObjectRelease();
  }
LABEL_41:
  v55 = v71;
  sub_23F6190DC();
  v56 = sub_23F619E8C();
  v57 = sub_23F61C61C();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc();
    v59 = swift_slowAlloc();
    v78 = v59;
    *(_DWORD *)v58 = v14[250];
    swift_beginAccess();
    v60 = v80;
    sub_23F617BA0();
    v61 = sub_23F35D2E8(&qword_256E70048);
    v62 = MEMORY[0x24266F8F8](v60, v61);
    v64 = v63;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v62, v64, &v78);
    v76 = v65;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F35A000, v56, v57, "Matrix: %s", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v59, -1, -1);
    MEMORY[0x242670B70](v58, -1, -1);

    v66 = v71;
    v67 = v68;
  }
  else
  {

    v66 = v55;
    v67 = v3;
  }
  v69(v66, v67);
  swift_beginAccess();
}

uint64_t sub_23F487CB0(uint64_t a1)
{
  return sub_23F487CC4(a1);
}

uint64_t sub_23F487CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _QWORD *v4;

  result = sub_23F487F60(a1);
  if (!v1)
  {
    if ((result & 1) != 0 && *(_QWORD *)(a1 + 16))
    {
      return *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
    }
    else
    {
      sub_23F366414();
      sub_23F362D64();
      return sub_23F488E78(v4, 0xD000000000000029);
    }
  }
  return result;
}

void sub_23F487D34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;

  v3 = *(_QWORD *)(v1 + 24);
  v19 = v3;
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
    goto LABEL_16;
  if (a1 < 0 || (v5 = *(_QWORD *)(v3 + 32), v6 = *(_QWORD *)(v5 + 16), v6 <= a1))
  {
LABEL_15:
    sub_23F61C8E0();
    v15 = sub_23F61CC1C();
    v17 = v16;
    sub_23F362D18();
    sub_23F61C280();
    sub_23F366414();
    sub_23F362D64();
    *v18 = v15;
    v18[1] = v17;
    sub_23F488E9C();
LABEL_16:
    sub_23F489128();
    return;
  }
  v7 = (uint64_t *)(sub_23F617BA0() + 40);
  v8 = v4 - 1;
  v9 = MEMORY[0x24BEE4AF8];
  while (v6 > a1)
  {
    v10 = *(_DWORD *)(v5 + 4 * a1 + 32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F488F5C();
      v9 = v13;
    }
    v11 = *(_QWORD *)(v9 + 16);
    if (v11 >= *(_QWORD *)(v9 + 24) >> 1)
    {
      sub_23F3770E0();
      v9 = v14;
    }
    *(_QWORD *)(v9 + 16) = v11 + 1;
    *(_DWORD *)(v9 + 4 * v11 + 32) = v10;
    if (!v8)
    {
      sub_23F39B968((uint64_t)&v19);
      goto LABEL_16;
    }
    v12 = *v7++;
    v5 = v12;
    v6 = *(_QWORD *)(v12 + 16);
    --v8;
    if (v6 <= a1)
    {
      sub_23F39B968((uint64_t)&v19);
      sub_23F362984();
      goto LABEL_15;
    }
  }
  __break(1u);
}

unint64_t sub_23F487EE8(unint64_t result)
{
  if (result >= 3)
    return 3;
  return result;
}

uint64_t sub_23F487EF8()
{
  unsigned __int8 *v0;

  return sub_23F3F6098(*v0);
}

void sub_23F487F00()
{
  sub_23F4E6D38();
}

uint64_t sub_23F487F08(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_23F3F6444(a1, *v1);
}

unint64_t sub_23F487F10@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_23F487EE8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_23F487F38@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = sub_23F445C70(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_23F487F60(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t result;
  BOOL v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23F37B4B0();
    v3 = v16;
    v4 = a1 + 32;
    v5 = v16[2];
    v6 = v2;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
      if (v5 >= v16[3] >> 1)
        sub_23F37B4B0();
      v16[2] = v5 + 1;
      v16[v5 + 4] = v7;
      v4 += 8;
      ++v5;
      --v6;
    }
    while (v6);
  }
  v8 = sub_23F385B28(v3);
  v10 = v9;
  result = sub_23F362984();
  if ((v10 & 1) != 0 || !v8)
  {
    sub_23F366414();
    sub_23F362D64();
    sub_23F488E78(v13, 0xD000000000000019);
    return v12;
  }
  if (!v2)
    return 1;
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16) != v8)
    return 0;
  if (v2 == 1)
    return 1;
  v14 = 5;
  while (1)
  {
    v15 = v14 - 3;
    if (__OFADD__(v14 - 4, 1))
      break;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 8 * v14) + 16) == v8;
    if (*(_QWORD *)(*(_QWORD *)(a1 + 8 * v14) + 16) == v8)
    {
      ++v14;
      if (v15 != v2)
        continue;
    }
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_23F4880E8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_23F489080();
  v4 = (void *)sub_23F61C3D0();
  sub_23F3837B0();
  v9[0] = 0;
  v5 = objc_msgSend(v2, sel_initWithShape_dataType_error_, v4, a2, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_23F616D9C();

    swift_willThrow();
  }
  return sub_23F489128();
}

uint64_t _s10ModelInputVMa()
{
  uint64_t result;

  result = qword_256E750B8;
  if (!qword_256E750B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23F4881FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F35D2E8(a3);
  sub_23F488F3C(v3);
  sub_23F362928();
}

void sub_23F488228(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F362BC4(a1, a2, a3);
  sub_23F488F3C(v3);
  sub_23F362928();
}

void sub_23F488248(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23F362BC4(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  sub_23F362928();
}

_QWORD *sub_23F48827C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F616FC4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 == 1)
    {
      v12 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v12;
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *(_OWORD *)(v9 + 41) = *(_OWORD *)(v10 + 41);
    }
    else
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v11;
      v14 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v14;
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      v9[40] = v10[40];
      *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
      v9[56] = v10[56];
      sub_23F617BA0();
      sub_23F617BA0();
    }
    v15 = a3[5];
    v16 = a3[6];
    v17 = (_QWORD *)((char *)a1 + v15);
    v18 = (_QWORD *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v17[2] = v18[2];
    v20 = (_QWORD *)((char *)a1 + v16);
    v21 = (_QWORD *)((char *)a2 + v16);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v27 = *v25;
    v26 = v25[1];
    *v24 = v27;
    v24[1] = v26;
    v28 = a3[10];
    *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
    *((_BYTE *)a1 + v28) = *((_BYTE *)a2 + v28);
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
  }
  return a1;
}

uint64_t sub_23F488418(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20) + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4884D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  if (v10 == 1)
  {
    v11 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v11;
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 41) = *(_OWORD *)(v9 + 41);
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    v12 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v12;
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
    *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
    *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
    sub_23F617BA0();
    sub_23F617BA0();
  }
  v13 = a3[5];
  v14 = a3[6];
  v15 = (_QWORD *)(a1 + v13);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v15[2] = v16[2];
  v18 = (_QWORD *)(a1 + v14);
  v19 = (_QWORD *)(a2 + v14);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  v26 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F488640(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  if (v10 == 1)
  {
    if (v11 == 1)
    {
      v12 = *v9;
      v13 = v9[1];
      v14 = v9[2];
      *(_OWORD *)(v8 + 41) = *(__int128 *)((char *)v9 + 41);
      *(_OWORD *)(v8 + 16) = v13;
      *(_OWORD *)(v8 + 32) = v14;
      *(_OWORD *)v8 = v12;
    }
    else
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
      *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
      v18 = *((_QWORD *)v9 + 4);
      *(_BYTE *)(v8 + 40) = *((_BYTE *)v9 + 40);
      *(_QWORD *)(v8 + 32) = v18;
      v19 = *((_QWORD *)v9 + 6);
      *(_BYTE *)(v8 + 56) = *((_BYTE *)v9 + 56);
      *(_QWORD *)(v8 + 48) = v19;
      sub_23F617BA0();
      sub_23F617BA0();
    }
  }
  else if (v11 == 1)
  {
    sub_23F48450C(v8);
    v16 = v9[1];
    v15 = v9[2];
    v17 = *v9;
    *(_OWORD *)(v8 + 41) = *(__int128 *)((char *)v9 + 41);
    *(_OWORD *)(v8 + 16) = v16;
    *(_OWORD *)(v8 + 32) = v15;
    *(_OWORD *)v8 = v17;
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
    sub_23F617BA0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
    *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
    sub_23F617BA0();
    swift_bridgeObjectRelease();
    v20 = *((_QWORD *)v9 + 4);
    *(_BYTE *)(v8 + 40) = *((_BYTE *)v9 + 40);
    *(_QWORD *)(v8 + 32) = v20;
    v21 = *((_QWORD *)v9 + 6);
    *(_BYTE *)(v8 + 56) = *((_BYTE *)v9 + 56);
    *(_QWORD *)(v8 + 48) = v21;
  }
  v22 = a3[5];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v25 = a3[6];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v28 = a3[8];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_DWORD *)v32 = *(_DWORD *)v33;
  *(_DWORD *)(v32 + 4) = *(_DWORD *)(v33 + 4);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_23F4888C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  *(_OWORD *)((char *)v8 + 41) = *(_OWORD *)((char *)v9 + 41);
  v11 = a3[5];
  v12 = a3[6];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v15 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  v16 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  return a1;
}

uint64_t sub_23F488988(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 8) != 1)
  {
    v10 = *(_QWORD *)(v9 + 8);
    if (v10 != 1)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = v10;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v12;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
      *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      goto LABEL_6;
    }
    sub_23F48450C(v8);
  }
  v11 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v11;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 41) = *(_OWORD *)(v9 + 41);
LABEL_6:
  v13 = a3[5];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRelease();
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  v22 = a3[9];
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v22);
  v25 = (_QWORD *)(a2 + v22);
  *v24 = *v25;
  v24[1] = v25[1];
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  return a1;
}

uint64_t sub_23F488B30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F488B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for JointResolution.DeviceContext();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F488BB4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F488BC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for JointResolution.DeviceContext();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23F488C34()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for JointResolution.DeviceContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23F488CD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E71170;
  if (!qword_256E71170)
  {
    v1 = sub_23F61B5D8();
    result = MEMORY[0x242670A44](MEMORY[0x24BEB9000], v1);
    atomic_store(result, (unint64_t *)&qword_256E71170);
  }
  return result;
}

uint64_t _s13ExecutionModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F488D60 + 4 * byte_23F6236C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F488D94 + 4 * byte_23F6236C0[v4]))();
}

uint64_t sub_23F488D94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F488D9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F488DA4);
  return result;
}

uint64_t sub_23F488DB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F488DB8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F488DBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F488DC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ExecutionModeOMa()
{
  return &_s13ExecutionModeON;
}

uint64_t _s16ForcedPromptRateVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s16ForcedPromptRateVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *_s16ForcedPromptRateVMa()
{
  return &_s16ForcedPromptRateVN;
}

unint64_t sub_23F488E3C()
{
  unint64_t result;

  result = qword_256E75108;
  if (!qword_256E75108)
  {
    result = MEMORY[0x242670A44](&unk_23F6237DC, &_s13ExecutionModeON);
    atomic_store(result, (unint64_t *)&qword_256E75108);
  }
  return result;
}

uint64_t sub_23F488E78@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  return swift_willThrow();
}

uint64_t sub_23F488E9C()
{
  return swift_willThrow();
}

uint64_t sub_23F488EA4()
{
  return sub_23F61C790();
}

uint64_t sub_23F488EB4()
{
  return swift_allocObject();
}

uint64_t sub_23F488EC0()
{
  return swift_slowAlloc();
}

void sub_23F488ECC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t sub_23F488EE0()
{
  return swift_release();
}

uint64_t sub_23F488EEC()
{
  uint64_t v0;

  return sub_23F4880E8(v0, 65552);
}

uint64_t sub_23F488F08()
{
  return swift_bridgeObjectRelease();
}

void sub_23F488F14()
{
  sub_23F377218();
}

void sub_23F488F20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = v0;
  sub_23F37E678();
}

uint64_t sub_23F488F3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t sub_23F488F54()
{
  return swift_bridgeObjectRelease();
}

void sub_23F488F5C()
{
  sub_23F3770E0();
}

void sub_23F488F74()
{
  void *v0;

}

uint64_t sub_23F488F7C()
{
  return sub_23F61C3F4();
}

void sub_23F488F84()
{
  uint64_t v0;

}

uint64_t sub_23F488F90()
{
  return sub_23F617BA0();
}

void sub_23F488FA4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F3663AC(*(_QWORD *)(v2 - 200), a2);
}

uint64_t sub_23F488FAC()
{
  return sub_23F61CA6C();
}

uint64_t sub_23F488FB4()
{
  return sub_23F61BFEC();
}

uint64_t sub_23F488FC8()
{
  return sub_23F61C3DC();
}

uint64_t sub_23F488FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a2 + 32) = a1;
  *(_QWORD *)(v2 - 72) = a2;
  return sub_23F61C3F4();
}

unint64_t sub_23F488FE4()
{
  char v0;
  uint64_t v1;
  char v2;

  if (v0)
    v2 = 1;
  else
    v2 = 0;
  return sub_23F3753DC(0, v2, v1);
}

id sub_23F488FF4(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 3272));
}

void sub_23F488FFC()
{
  void *v0;

}

void sub_23F489004()
{
  uint64_t v0;

}

uint64_t sub_23F48900C()
{
  return sub_23F61C280();
}

uint64_t sub_23F48901C()
{
  return sub_23F61C790();
}

uint64_t sub_23F48902C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F489034()
{
  return sub_23F61C3D0();
}

uint64_t sub_23F489044()
{
  return sub_23F61CC64();
}

__n128 sub_23F489060(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 464);
  a1[1] = result;
  return result;
}

void sub_23F489074()
{
  JUMPOUT(0x24266FE14);
}

unint64_t sub_23F489080()
{
  return sub_23F484800();
}

void sub_23F489088()
{
  sub_23F615070();
}

uint64_t sub_23F489090()
{
  return sub_23F6190DC();
}

uint64_t sub_23F48909C()
{
  return sub_23F61C3DC();
}

uint64_t sub_23F4890A8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

id sub_23F4890B0(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

void sub_23F4890BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{

}

uint64_t sub_23F4890C4()
{
  uint64_t v0;

  return sub_23F366450(v0);
}

uint64_t sub_23F4890CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4890D8()
{
  return sub_23F6190DC();
}

uint64_t sub_23F4890E4()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F4890FC()
{
  return sub_23F61C280();
}

id sub_23F489108()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 840));
}

void sub_23F489114()
{
  void *v0;

}

uint64_t sub_23F48911C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F484C08(a1, v1);
}

uint64_t sub_23F489128()
{
  uint64_t v0;

  return v0;
}

void sub_23F489134()
{
  sub_23F615084();
}

void sub_23F489144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_23F61C10C();
  v2 = v1;
  if (v0 == sub_23F61C10C() && v2 == v3)
    sub_23F48DFD8();
  else
    sub_23F48DEB8();
  sub_23F362D18();
  sub_23F362984();
  sub_23F362B80();
}

uint64_t sub_23F4891A8(uint64_t a1, uint64_t a2)
{
  return sub_23F489B94(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BE57320], &qword_256E71188, MEMORY[0x24BE57348]);
}

void sub_23F4891C4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000011;
  else
    v3 = 0x747865546E616C70;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0x800000023F633CF0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000011;
  else
    v5 = 0x747865546E616C70;
  if ((a2 & 1) != 0)
    v6 = 0x800000023F633CF0;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    sub_23F48DFD8();
  else
    sub_23F48DEB8();
  sub_23F362D18();
  sub_23F362984();
  sub_23F362B80();
}

void sub_23F489248(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0xD000000000000016;
  v3 = 0x800000023F633C80;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000016;
    else
      v5 = 0xD000000000000017;
    if (v4 == 1)
      v6 = 0x800000023F633CA0;
    else
      v6 = 0x800000023F633CC0;
  }
  else
  {
    v5 = 0xD000000000000016;
    v6 = 0x800000023F633C80;
  }
  if (a2)
  {
    if (a2 == 1)
    {
      v3 = 0x800000023F633CA0;
    }
    else
    {
      v2 = 0xD000000000000017;
      v3 = 0x800000023F633CC0;
    }
  }
  if (v5 != v2 || v6 != v3)
    sub_23F3C8510();
  sub_23F362984();
  sub_23F362D18();
  sub_23F362B80();
}

void sub_23F489314(char a1)
{
  __asm { BR              X15 }
}

uint64_t sub_23F48938C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_23F4893EC + 4 * byte_23F623816[a2]))(v2 - 2);
}

void sub_23F4893EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (a1 == v1 - 2 && v3 == ((v2 - 32) | 0x8000000000000000))
    sub_23F48DFD8();
  else
    sub_23F48DEB8();
  sub_23F362D18();
  sub_23F362984();
  sub_23F362B80();
}

BOOL sub_23F48945C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

uint64_t sub_23F489468(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 3157558;
  else
    v2 = 3157557;
  if ((a2 & 1) != 0)
    v3 = 3157558;
  else
    v3 = 3157557;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_23F3C8510();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void sub_23F4894C8(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000012;
  else
    v3 = 0x696C43796C6C7566;
  if (v2)
    v4 = 0xEB00000000746E65;
  else
    v4 = 0x800000023F633920;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000012;
  else
    v5 = 0x696C43796C6C7566;
  if ((a2 & 1) != 0)
    v6 = 0x800000023F633920;
  else
    v6 = 0xEB00000000746E65;
  if (v3 == v5 && v4 == v6)
    sub_23F48DFD8();
  else
    sub_23F48DEB8();
  sub_23F362D18();
  sub_23F362984();
  sub_23F362B80();
}

void sub_23F489554(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23F48959C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23F4895F4 + 4 * byte_23F623820[a2]))(0x6E61747369737361);
}

void sub_23F4895F4(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x6E61747369737361 && v1 == 0xE900000000000074)
    sub_23F48DFD8();
  else
    sub_23F48DEB8();
  sub_23F362D18();
  sub_23F362984();
  sub_23F362B80();
}

void sub_23F48965C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000022;
  else
    v3 = 0xD00000000000001DLL;
  if (v2)
    v4 = 0x800000023F633B30;
  else
    v4 = 0x800000023F633B50;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000022;
  else
    v5 = 0xD00000000000001DLL;
  if ((a2 & 1) != 0)
    v6 = 0x800000023F633B50;
  else
    v6 = 0x800000023F633B30;
  if (v3 == v5 && v4 == v6)
    sub_23F48DFD8();
  else
    sub_23F48DEB8();
  sub_23F362D18();
  sub_23F362984();
  sub_23F362B80();
}

BOOL sub_23F4896E0(char a1, char a2)
{
  return dbl_23F623B38[a1] == dbl_23F623B38[a2];
}

void sub_23F489704(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23F48974C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23F489804 + 4 * byte_23F62382D[a2]))(4473168);
}

void sub_23F489804(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 4473168 && v1 == 0xE300000000000000)
    sub_23F48DFD8();
  else
    sub_23F48DEB8();
  sub_23F362D18();
  sub_23F362984();
  sub_23F362B80();
}

void sub_23F4898CC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23F48991C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23F48998C + 4 * byte_23F62383B[a2]))(0x4449746E65746E69);
}

void sub_23F48998C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0x4449746E65746E69 && v1 == v2)
    sub_23F48DFD8();
  else
    sub_23F48DEB8();
  sub_23F362D18();
  sub_23F362984();
  sub_23F362B80();
}

void sub_23F489A0C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23F489A60(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23F489AE4 + 4 * byte_23F623845[a2]))(0x656E6F69746E656DLL);
}

void sub_23F489AE4(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x656E6F69746E656DLL && v1 == 0xED00007370704164)
    sub_23F48DFD8();
  else
    sub_23F48DEB8();
  sub_23F362D18();
  sub_23F362984();
  sub_23F362B80();
}

uint64_t sub_23F489B78(uint64_t a1, uint64_t a2)
{
  return sub_23F489B94(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9408], &qword_256E75298, MEMORY[0x24BEB9410]);
}

uint64_t sub_23F489B94(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t (*v7)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = a3;
  a3(0);
  sub_23F3612C0(a4, v7, a5);
  sub_23F48E1FC();
  sub_23F48E1FC();
  if (v12 == v10 && v13 == v11)
    sub_23F48DFD8();
  else
    LOBYTE(v7) = sub_23F48DEB8();
  sub_23F362D18();
  sub_23F362984();
  return v7 & 1;
}

uint64_t sub_23F489C40(uint64_t a1, uint64_t a2)
{
  return sub_23F489B94(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BE56E78], &qword_256E75290, MEMORY[0x24BE56E98]);
}

uint64_t sub_23F489C5C(uint64_t a1, uint64_t a2)
{
  return sub_23F489B94(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BEB91C0], &qword_256E75288, MEMORY[0x24BEB91C8]);
}

void sub_23F489C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __objc2_ivar *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  unint64_t v40;
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void *v78;
  id v79;
  __n128 *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  __objc2_ivar *v87;
  double v88;
  void *v89;
  __n128 *v90;
  uint64_t v91;
  void *v92;
  void *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  void *v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  unint64_t v112;
  char v113;
  __int128 v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  __objc2_ivar *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *type;
  uint64_t v147;
  char v148;
  char v149;
  uint64_t v150;
  __n128 *v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  void *v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __n128 *v160;
  char *v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  id v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  void *v171;
  void *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  void *v176;
  __objc2_ivar *v177;
  __n128 *v178;
  uint64_t v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  id v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  int v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  int v206;
  unint64_t v207;
  int v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  int v217;
  int v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  unint64_t v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  int v226;
  unint64_t v227;
  unint64_t v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  int v236;
  unint64_t *v237;
  uint64_t *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  __n128 *v242;
  uint64_t v243;
  char v244;
  char v245;
  uint64_t v246;
  os_unfair_lock_s *v247;
  void *v248;
  void *v249;
  SEL v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char v256;
  char v257;
  uint64_t v258;
  os_unfair_lock_s *v259;
  void *v260;
  void *v261;
  void *v262;
  SEL v263;
  uint64_t v264;
  __objc2_ivar *v265;
  void *v266;
  uint64_t v267;
  char v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  double v272;
  __objc2_ivar *v273;
  void *v274;
  id v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  void *v279;
  void *v280;
  uint64_t v281;
  uint64_t v282;
  void *v283;
  void *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  void *v290;
  void *v291;
  os_unfair_lock_s *v292;
  int v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  id v300;
  void *v301;
  uint64_t v302;
  void *v303;
  uint64_t v304;
  void *v305;
  uint64_t v306;
  void *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  int v312;
  unint64_t v313;
  uint64_t v314;
  uint64_t v315;
  int v316;
  uint64_t v317;
  _QWORD *v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  __int128 v322;
  unint64_t v323;
  __int128 v324;
  uint64_t v325;
  unint64_t *v326;
  os_unfair_lock_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  id v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  __int128 v335;
  __int128 v336;
  uint64_t v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  unint64_t v341;
  char v342;
  __objc2_ivar *v343;
  uint64_t v344;
  __int128 v345;
  uint64_t v346;
  char v347;
  os_unfair_lock_t v348;
  char v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353[5];
  uint64_t v354[6];

  v320 = a4;
  *((_QWORD *)&v324 + 1) = a2;
  v328 = a1;
  sub_23F35D2E8(&qword_256E75260);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v7);
  v319 = (char *)&v309 - v8;
  v330 = type metadata accessor for JointResolution.TupleInteraction(0);
  v318 = *(_QWORD **)(v330 - 8);
  MEMORY[0x24BDAC7A8](v330);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v9);
  v329 = (uint64_t)&v309 - v10;
  *(_QWORD *)&v324 = type metadata accessor for JointResolution.CandidateInteraction(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v309 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E75268);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v309 - v16);
  v18 = *(_QWORD *)(a3 + 16);
  v19 = sub_23F35D2E8(&qword_256E70E48);
  v20 = sub_23F48DE6C();
  v21 = v20;
  v336 = xmmword_23F61F1B0;
  *(_OWORD *)(v20 + 16) = xmmword_23F61F1B0;
  v22 = &stru_250FE6000;
  if (!v18)
  {
    v115 = (void *)sub_23F48E09C(v20, (unint64_t *)&qword_256E75040);
    v116 = sub_23F48484C();
    *(_QWORD *)(v21 + 40) = sub_23F48E264(v116);
    v343 = (__objc2_ivar *)v21;
    sub_23F48DE78();
    sub_23F48E258();
    v117 = sub_23F48DF98();
    if (v4)
      return;
    v25 = (id)v117;
    sub_23F48E0F4();
    v118 = sub_23F48DE6C();
    *(_QWORD *)(v21 + 32) = sub_23F48DE80(v118);
    *(_QWORD *)(v21 + 40) = sub_23F48E058();
    v343 = (__objc2_ivar *)v21;
    sub_23F48DE78();
    v119 = (uint64_t)v343;
    sub_23F48DE9C();
    v120 = (void *)sub_23F48DEA8();
    sub_23F362C60();
    sub_23F48DF34();

    v121 = sub_23F48DE6C();
    *(_QWORD *)(v119 + 32) = sub_23F48DE80(v121);
    *(_QWORD *)(v119 + 40) = sub_23F48E024();
    v343 = (__objc2_ivar *)v119;
    sub_23F48DE78();
    v122 = (uint64_t)v343;
    v123 = v115;
    sub_23F61C6B8();
    v124 = (void *)sub_23F48DEA8();
    sub_23F362C60();
    sub_23F48DF34();

    v125 = sub_23F48DE6C();
    *(_QWORD *)(v122 + 32) = sub_23F48DE80(v125);
    *(_QWORD *)(v122 + 40) = sub_23F48E074();
    v343 = (__objc2_ivar *)v122;
    sub_23F48DE78();
    v126 = (uint64_t)v343;
    sub_23F48DE9C();
    v127 = (void *)sub_23F48DEA8();
    sub_23F362C60();
    sub_23F48DF34();

    v128 = sub_23F48DE6C();
    v129 = sub_23F48DE80(v128);
    *(_QWORD *)(v126 + 40) = sub_23F48E100(v129);
    v343 = (__objc2_ivar *)v126;
    sub_23F48DE78();
    v130 = (uint64_t)v343;
    sub_23F48DE9C();
    v131 = (void *)sub_23F48DEA8();
    sub_23F362C60();
    sub_23F48DF34();

    v132 = sub_23F48DE6C();
    *(_QWORD *)(v130 + 32) = sub_23F48DE80(v132);
    *(_QWORD *)(v130 + 40) = sub_23F61C6C4();
    v343 = (__objc2_ivar *)v130;
    sub_23F48DE78();
    v133 = (uint64_t)v343;
    sub_23F48DE9C();
    v134 = (void *)sub_23F48DEA8();
    sub_23F362C60();
    sub_23F48DF34();

    v135 = sub_23F48DE6C();
    *(_QWORD *)(v133 + 32) = sub_23F48DE80(v135);
    *(_QWORD *)(v133 + 40) = sub_23F61C6C4();
    v343 = (__objc2_ivar *)v133;
    sub_23F48DE78();
    sub_23F48DE9C();
    v136 = (void *)sub_23F48DEA8();
    sub_23F362C60();
    sub_23F48E018(v25, sel_setObject_forKeyedSubscript_);

    goto LABEL_73;
  }
  v23 = sub_23F61C574();
  *(_QWORD *)(v21 + 40) = sub_23F48E264(v23);
  v343 = (__objc2_ivar *)v21;
  sub_23F48DE78();
  sub_23F48E258();
  v24 = sub_23F48DF98();
  if (v4)
    return;
  v25 = (id)v24;
  sub_23F48E0F4();
  v351 = 0;
  v352 = 0;
  v350 = a3;
  sub_23F617BA0();
  sub_23F48E0E0();
  sub_23F4881FC(a3, (uint64_t)v17, &qword_256E75268);
  v26 = sub_23F35D2E8(&qword_256E75270);
  sub_23F3C84F4((uint64_t)v17);
  if (v42)
  {
LABEL_70:
    swift_bridgeObjectRelease();
LABEL_73:
    v137 = *(_QWORD *)(v320 + 16);
    v138 = (__objc2_ivar *)MEMORY[0x24BEE4AF8];
    v331 = v25;
    if (v137)
    {
      v343 = (__objc2_ivar *)MEMORY[0x24BEE4AF8];
      v139 = v320;
      sub_23F617BA0();
      sub_23F37B4B0();
      v140 = v139 + ((*((unsigned __int8 *)v318 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v318 + 80));
      v141 = v318[9];
      v138 = v343;
      v142 = v137;
      do
      {
        v143 = v329;
        sub_23F488248(v140, v329, type metadata accessor for JointResolution.TupleInteraction);
        sub_23F48E2B8();
        v145 = *(_QWORD *)(*(_QWORD *)(v143 + v144) + 16);
        sub_23F42432C(v143, type metadata accessor for JointResolution.TupleInteraction);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37B4B0();
          v138 = v343;
        }
        type = v138->type;
        if ((unint64_t)type >= *(_QWORD *)&v138->align >> 1)
        {
          sub_23F37B4B0();
          v138 = v343;
        }
        v138->type = type + 1;
        *((_QWORD *)&v138[1].offs + (_QWORD)type) = v145;
        v140 += v141;
        --v142;
      }
      while (v142);
      swift_bridgeObjectRelease();
      v22 = &stru_250FE6000;
    }
    v147 = sub_23F385B28(v138);
    v149 = v148;
    sub_23F362984();
    v150 = sub_23F35D2E8(&qword_256E70E48);
    v151 = (__n128 *)sub_23F48DE6C();
    sub_23F48DFEC(v151);
    v334 = v150;
    if ((v149 & 1) != 0)
    {
      v155 = (void *)sub_23F48E09C(v152, (unint64_t *)&qword_256E75040);
      v151[2].n128_u64[0] = sub_23F48DF58();
      v151[2].n128_u64[1] = sub_23F48E074();
      v343 = (__objc2_ivar *)v151;
      sub_23F48DE78();
      v156 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
      v157 = sub_23F48E060();
      sub_23F48E24C(v157, v158);
      v166 = sub_23F48DE6C();
      v167 = sub_23F48E07C(v166);
      *(_QWORD *)(v150 + 32) = sub_23F48DF58();
      *(_QWORD *)(v150 + 40) = sub_23F48E058();
      v343 = (__objc2_ivar *)v150;
      sub_23F48DE78();
      sub_23F3664B0();
      v168 = sub_23F61BFEC();
      v169 = (uint64_t *)sub_23F48E1B8(v168);
      v170 = *((_QWORD *)&v324 + 1);
      sub_23F484890(v169, *((uint64_t *)&v324 + 1));
      sub_23F38458C();
      sub_23F484ADC();
      v171 = (void *)sub_23F48DFB4();
      v172 = (void *)sub_23F48E2C4();
      sub_23F362984();
      objc_msgSend(v167, sel_setObject_forKeyedSubscript_, v171, v172);

      v173 = sub_23F48DE6C();
      *(_QWORD *)(v173 + 32) = sub_23F48DEF4(v173);
      *(_QWORD *)(v173 + 40) = sub_23F48E024();
      v343 = (__objc2_ivar *)v173;
      sub_23F48DE78();
      v174 = sub_23F61BFEC();
      v175 = (uint64_t *)sub_23F48E1B8(v174);
      sub_23F484890(v175, v170);
      sub_23F362D18();
      sub_23F484ADC();
      v176 = (void *)sub_23F48E208();
      v177 = (__objc2_ivar *)sub_23F48E2C4();
      sub_23F362984();
      sub_23F48DFE4(v167, sel_setObject_forKeyedSubscript_, (uint64_t)v176);

      v178 = (__n128 *)sub_23F48DE6C();
      sub_23F48DFEC(v178);
      v179 = sub_23F48DF58();
      v178[2].n128_u64[1] = sub_23F48E10C(v179);
      v343 = (__objc2_ivar *)v178;
      sub_23F48DE78();
      v180 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
      v181 = sub_23F48E060();
      sub_23F4880E8(v181, v182);
      sub_23F48E0F4();
      v299 = sub_23F48DE6C();
      v300 = sub_23F48E07C(v299);
      v177[1].offs = (int32_t *)sub_23F48DF58();
      v177[1].name = (char *)sub_23F48E058();
      v343 = v177;
      sub_23F48DE78();
      sub_23F61C6B8();
      v301 = (void *)sub_23F48DF68();
      sub_23F362D18();
      sub_23F48DF84();

      v302 = sub_23F48DE6C();
      *(_QWORD *)(v302 + 32) = sub_23F48DEF4(v302);
      *(_QWORD *)(v302 + 40) = sub_23F48E024();
      v343 = (__objc2_ivar *)v302;
      sub_23F48DE78();
      sub_23F48DF58();
      v303 = (void *)sub_23F48DF68();
      sub_23F362D18();
      sub_23F48DF84();

      v304 = sub_23F48DE6C();
      *(_QWORD *)(v304 + 32) = sub_23F48DEF4(v304);
      *(_QWORD *)(v304 + 40) = sub_23F48E074();
      v343 = (__objc2_ivar *)v304;
      sub_23F48DE78();
      sub_23F48DF58();
      v305 = (void *)sub_23F48DF68();
      sub_23F362D18();
      sub_23F48DF84();

      v306 = sub_23F48DE6C();
      *(_QWORD *)(v306 + 32) = sub_23F48DEF4(v306);
      *(_QWORD *)(v306 + 40) = sub_23F61C6C4();
      v343 = (__objc2_ivar *)v306;
      sub_23F48DE78();
      sub_23F48DF58();
      v307 = (void *)sub_23F48DF68();
      sub_23F362D18();
      sub_23F48DF84();

      v308 = sub_23F48DE6C();
      *(_QWORD *)(v308 + 32) = sub_23F48DEF4(v308);
      *(_QWORD *)(v308 + 40) = sub_23F61C6C4();
      v343 = (__objc2_ivar *)v308;
      sub_23F48DE78();
      sub_23F48DF58();
      sub_23F48DF68();
      sub_23F48DF78();
      sub_23F48DF18(v300, sel_setObject_forKeyedSubscript_);

      return;
    }
    v151[2].n128_u64[0] = sub_23F48E1B0();
    v151[2].n128_u64[1] = sub_23F48DFB4();
    v343 = (__objc2_ivar *)v151;
    sub_23F48DE78();
    v153 = (uint64_t)v343;
    v154 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
    v159 = sub_23F48E24C(v153, 65552);
    v325 = v147;
    v160 = (__n128 *)sub_23F48DE6C();
    sub_23F48DFEC(v160);
    v161 = (char *)(id)v159;
    v160[2].n128_u64[0] = sub_23F48E1B0();
    v160[2].n128_u64[1] = sub_23F61C574();
    v343 = (__objc2_ivar *)v160;
    sub_23F48DE78();
    v162 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
    v163 = sub_23F48E060();
    sub_23F4880E8(v163, v164);
    sub_23F48E0F4();
    v183 = v165;
    v332 = v161;
    v351 = 0;
    v352 = 0;
    v350 = v320;
    sub_23F617BA0();
    v184 = v183;
    sub_23F48E0CC();
    v185 = sub_23F48E290();
    sub_23F4881FC(v185, v186, v187);
    v188 = sub_23F35D2E8(&qword_256E75278);
    sub_23F3C84F4(v159);
    if (v42)
    {
LABEL_173:

      sub_23F362D18();
      return;
    }
    v329 = *((_QWORD *)&v324 + 1) + 16;
    v327 = (os_unfair_lock_t)(*((_QWORD *)&v324 + 1) + 24);
    v31 = MEMORY[0x24BEE4AF8];
    v189 = v321;
    v318 = v184;
    while (1)
    {
      v333 = *(_QWORD *)v159;
      sub_23F488228(v159 + *(int *)(v188 + 48), v189, type metadata accessor for JointResolution.TupleInteraction);
      v190 = type metadata accessor for JointResolution.DeviceContext();
      v191 = v189 + *(int *)(v190 + 20);
      v193 = *(_QWORD *)v191;
      v192 = *(_QWORD *)(v191 + 8);
      *(_QWORD *)&v322 = *(_QWORD *)(v191 + 16);
      v323 = *(_QWORD *)(v191 + 24);
      v194 = *(_QWORD *)(v191 + 32);
      v195 = *(_QWORD *)(v191 + 40);
      v196 = *(_QWORD *)(v191 + 48);
      LODWORD(v191) = *(unsigned __int8 *)(v191 + 56);
      LODWORD(v320) = 0xFFFF;
      *((_QWORD *)&v324 + 1) = v192;
      *(_QWORD *)&v324 = v193;
      v315 = v194;
      v314 = v195;
      v313 = v196;
      v312 = v191;
      v317 = v190;
      if (v192)
      {
        if (v192 == 1)
          goto LABEL_143;
        if ((v192 & 0x2000000000000000) != 0)
          v198 = HIBYTE(v192) & 0xF;
        else
          v198 = v193 & 0xFFFFFFFFFFFFLL;
        if (v198)
        {
          v199 = (v193 >> 59) & 1;
          if ((v192 & 0x1000000000000000) == 0)
            LOBYTE(v199) = 1;
          v31 = 4 << v199;
          v200 = v192 & 0xFFFFFFFFFFFFFFLL;
          v201 = (v192 & 0xFFFFFFFFFFFFFFFLL) + 32;
          v197 = 5381;
          v202 = 15;
          while (1)
          {
            v203 = v202;
            if ((v202 & 0xC) == v31)
            {
              v207 = sub_23F48E1A0();
              v209 = v208;
              sub_23F3BBECC(v207, v210, v211);
              v197 = v209;
              v192 = *((_QWORD *)&v324 + 1);
            }
            v204 = v203 >> 16;
            if (v203 >> 16 >= v198)
              goto LABEL_179;
            if ((v192 & 0x1000000000000000) != 0)
            {
              v159 = sub_23F61C2E0();
            }
            else if ((v192 & 0x2000000000000000) != 0)
            {
              v343 = (__objc2_ivar *)v324;
              v344 = v200;
              v159 = *((unsigned __int8 *)&v343 + v204);
            }
            else
            {
              v205 = v201;
              if ((v324 & 0x1000000000000000) == 0)
              {
                LODWORD(v320) = v197;
                v205 = sub_23F61C934();
              }
              v159 = *(unsigned __int8 *)(v205 + v204);
            }
            if ((v202 & 0xC) == v31)
            {
              v212 = sub_23F48E1A0();
              v213 = *((_QWORD *)&v324 + 1);
              sub_23F3BBECC(v212, v214, *((uint64_t *)&v324 + 1));
              v215 = v213;
              v202 = v216;
              v22 = &stru_250FE6000;
              if ((v215 & 0x1000000000000000) != 0)
              {
LABEL_112:
                if (v198 <= v202 >> 16)
                  goto LABEL_180;
                sub_23F48E1A0();
                v218 = v217;
                v219 = sub_23F61C2BC();
                v206 = v218;
                v202 = v219;
                goto LABEL_114;
              }
            }
            else
            {
              v22 = &stru_250FE6000;
              if ((*((_QWORD *)&v324 + 1) & 0x1000000000000000) != 0)
                goto LABEL_112;
            }
            sub_23F48E148();
LABEL_114:
            v197 = 33 * v206 + v159;
            v192 = *((_QWORD *)&v324 + 1);
            if (4 * v198 == v202 >> 14)
              goto LABEL_117;
          }
        }
        v197 = 5381;
      }
      else
      {
        v197 = 0xFFFF;
      }
LABEL_117:
      LODWORD(v320) = v197;
      v220 = v323;
      if (v323)
      {
        v221 = v322;
        v222 = (v323 & 0x2000000000000000) != 0 ? HIBYTE(v323) & 0xF : v322 & 0xFFFFFFFFFFFFLL;
        if (v222)
        {
          v223 = ((unint64_t)v322 >> 59) & 1;
          if ((v323 & 0x1000000000000000) == 0)
            LOBYTE(v223) = 1;
          v31 = 4 << v223;
          v224 = v323 & 0xFFFFFFFFFFFFFFLL;
          v225 = (v323 & 0xFFFFFFFFFFFFFFFLL) + 32;
          v226 = 5381;
          do
          {
            v227 = 15;
            if (v31 == 12)
            {
              sub_23F3BBECC(0xFuLL, v221, v323);
              sub_23F48E044();
            }
            v228 = v227 >> 16;
            if (v227 >> 16 >= v222)
              goto LABEL_178;
            if ((v220 & 0x1000000000000000) != 0)
            {
              sub_23F61C2E0();
              sub_23F48E044();
              v159 = v231;
            }
            else if ((v220 & 0x2000000000000000) != 0)
            {
              v343 = (__objc2_ivar *)v221;
              v344 = v224;
              v159 = *((unsigned __int8 *)&v343 + v228);
            }
            else
            {
              v229 = v225;
              if ((v221 & 0x1000000000000000) == 0)
              {
                v316 = v226;
                sub_23F61C934();
                sub_23F48E044();
              }
              v159 = *(unsigned __int8 *)(v229 + v228);
            }
            if (v31 == 12)
            {
              v232 = sub_23F48E2A4();
              sub_23F3BBECC(v232, v233, v234);
              sub_23F48E12C();
            }
            v22 = &stru_250FE6000;
            if ((v220 & 0x1000000000000000) != 0)
            {
              sub_23F48E2A4();
              sub_23F61C2BC();
              sub_23F48E12C();
            }
            else
            {
              sub_23F48E148();
            }
            v226 = 33 * v230 + v159;
          }
          while (4 * v222);
        }
      }
      v189 = v321;
      v31 = MEMORY[0x24BEE4AF8];
LABEL_143:
      sub_23F48E2B8();
      v326 = *(unint64_t **)(*(_QWORD *)(v189 + v235) + 16);
      v316 = v236;
      if (v326)
      {
        v311 = v235;
        v237 = 0;
        v310 = sub_23F617BA0();
        v238 = (uint64_t *)(v310 + 64);
        while (1)
        {
          v239 = *(v238 - 4);
          v240 = *(v238 - 3);
          v22 = (__objc2_ivar *)*(v238 - 1);
          v337 = *(v238 - 2);
          v241 = *v238;
          v242 = (__n128 *)sub_23F48DE6C();
          sub_23F48DFEC(v242);
          sub_23F384B00();
          sub_23F384A00();
          sub_23F3B1EA4();
          v242[2].n128_u64[0] = sub_23F61C574();
          v242[2].n128_u64[1] = sub_23F48E1B0();
          v343 = (__objc2_ivar *)v242;
          sub_23F48DE78();
          *(_QWORD *)&v335 = v343;
          sub_23F3664B0();
          v243 = sub_23F61BFEC();
          if ((v239 || v240 != 0xE000000000000000) && (sub_23F3B1DD8() & 1) == 0)
            break;
          if ((v337 || v22 != (__objc2_ivar *)0xE000000000000000) && (sub_23F3B1DD8() & 1) == 0)
            break;
          sub_23F4903B0(v241, v243);
          v245 = v244;
          sub_23F384120();
          sub_23F484ADC();
          if ((v245 & 1) == 0)
            goto LABEL_154;
          sub_23F3B5F04();
          sub_23F38458C();
          sub_23F384364();
LABEL_155:
          v31 = MEMORY[0x24BEE4AF8];
          v237 = (unint64_t *)((char *)v237 + 1);
          v159 = sub_23F61C574();
          sub_23F3C2EA0(0, (unint64_t *)&qword_256E75040);
          v248 = (void *)sub_23F61C3D0();
          sub_23F38432C();
          v249 = (void *)sub_23F48E270();
          sub_23F48DF18(v249, v250);

          v238 += 5;
          if (v326 == v237)
          {
            swift_bridgeObjectRelease();
            v251 = *(_QWORD *)(*(_QWORD *)(v321 + v311) + 16);
            goto LABEL_158;
          }
        }
        sub_23F384120();
        sub_23F484ADC();
LABEL_154:
        sub_23F384B00();
        sub_23F384A00();
        v246 = sub_23F61BFEC();
        v354[0] = v239;
        v354[1] = v240;
        v354[2] = v337;
        v354[3] = (uint64_t)v22;
        v354[4] = v246;
        v247 = v327;
        os_unfair_lock_lock(v327);
        sub_23F48E118(v354, (uint64_t *)&v343);
        sub_23F48E0F4();
        os_unfair_lock_unlock(v247);
        sub_23F3B5F04();
        sub_23F384120();
        sub_23F384A80();
        sub_23F384A80();
        goto LABEL_155;
      }
      v251 = 0;
LABEL_158:
      v252 = MEMORY[0x24BEE14E8];
      if (v325 < v251)
        goto LABEL_181;
      if (v251 != v325)
      {
        if (v251 >= (unint64_t)v325)
          goto LABEL_182;
        do
        {
          v253 = sub_23F48DE6C();
          *(_QWORD *)(v159 + 32) = sub_23F48DFFC(v253);
          *(_QWORD *)(v159 + 40) = sub_23F48E1B0();
          v343 = (__objc2_ivar *)v159;
          sub_23F48DE78();
          v22 = v343;
          sub_23F3664B0();
          v254 = sub_23F48E0B8();
          v255 = sub_23F48E0B8();
          sub_23F4903B0(v254, v255);
          v159 = v252;
          v257 = v256;
          sub_23F384120();
          sub_23F484ADC();
          if ((v257 & 1) != 0)
          {
            sub_23F362C60();
            sub_23F484ADC();
          }
          else
          {
            v258 = sub_23F61BFEC();
            v353[0] = 0;
            v353[1] = 0xE000000000000000;
            v353[2] = 0;
            v353[3] = 0xE000000000000000;
            v353[4] = v258;
            v259 = v327;
            os_unfair_lock_lock(v327);
            sub_23F48E118(v353, (uint64_t *)&v343);
            sub_23F48E0F4();
            os_unfair_lock_unlock(v259);
            sub_23F362C60();
            sub_23F3837B0();
            swift_bridgeObjectRelease_n();
          }
          ++v251;
          v260 = (void *)sub_23F48E208();
          sub_23F3C2EA0(0, (unint64_t *)&qword_256E75040);
          v261 = (void *)sub_23F61C3D0();
          sub_23F38458C();
          v262 = (void *)sub_23F48E270();
          sub_23F48DFBC(v262, v263, (uint64_t)v260);

        }
        while (v325 != v251);
      }
      v264 = sub_23F48DE6C();
      *(_OWORD *)(v264 + 16) = v336;
      *(_QWORD *)(v264 + 32) = sub_23F48DFB4();
      *(_QWORD *)(v264 + 40) = sub_23F61C574();
      v343 = (__objc2_ivar *)v264;
      sub_23F48DE78();
      v265 = (__objc2_ivar *)sub_23F3C2EA0(0, (unint64_t *)&qword_256E75040);
      sub_23F61C6B8();
      v266 = (void *)sub_23F48DEA8();
      sub_23F362C60();
      sub_23F48DFBC(v318, v22[24].type, (uint64_t)v265);

      v267 = v328;
      v268 = sub_23F616F88();
      v269 = sub_23F48DE6C();
      v270 = sub_23F48DEC8(v269);
      v265[1].name = (char *)sub_23F48E228(v270);
      v343 = v265;
      sub_23F48DE78();
      if ((v268 & 1) != 0)
      {
        v271 = sub_23F48DE9C();
      }
      else
      {
        sub_23F616F04();
        log(fabs(v272));
        v271 = sub_23F61C4E4();
      }
      v273 = (__objc2_ivar *)v271;
      v274 = (void *)sub_23F48485C();
      sub_23F3837B0();
      v275 = v318;
      sub_23F48DF18(v318, v22[24].type);

      v276 = sub_23F48DE6C();
      v277 = sub_23F48DEC8(v276);
      v273[1].name = (char *)sub_23F48E21C(v277);
      v343 = v273;
      sub_23F48DE78();
      v278 = (uint64_t)v343;
      v279 = (void *)sub_23F61CCF4();
      v280 = (void *)sub_23F48485C();
      sub_23F362984();
      sub_23F48DFBC(v275, v22[24].type, (uint64_t)v279);

      v281 = sub_23F48DE6C();
      v282 = sub_23F48DEC8(v281);
      *(_QWORD *)(v278 + 40) = sub_23F48E234(v282);
      v343 = (__objc2_ivar *)v278;
      sub_23F48DE78();
      v159 = (uint64_t)v343;
      v283 = (void *)sub_23F61CCF4();
      v284 = (void *)sub_23F48485C();
      sub_23F362984();
      sub_23F48DFBC(v275, v22[24].type, (uint64_t)v283);

      sub_23F48E2B8();
      v286 = v267 + v285;
      v287 = *(_QWORD *)(v286 + 8);
      if (v287 == 1)
      {
        v288 = sub_23F48DE6C();
        v289 = sub_23F48DEC8(v288);
        *(_QWORD *)(v159 + 40) = sub_23F48E090(v289);
        v343 = (__objc2_ivar *)v159;
        sub_23F48DE78();
        sub_23F48484C();
        v290 = (void *)sub_23F48DEA8();
        sub_23F362C60();
        sub_23F48E018(v275, v22[24].type);
        v184 = v275;
      }
      else
      {
        LODWORD(v337) = *(unsigned __int8 *)(v286 + 56);
        v291 = v275;
        v292 = *(os_unfair_lock_s **)(v286 + 48);
        v293 = *(_DWORD *)(v286 + 40);
        v294 = *(_QWORD *)(v286 + 32);
        v335 = *(_OWORD *)(v286 + 16);
        v295 = *(_QWORD *)v286;
        v159 = sub_23F48DE6C();
        sub_23F48DFEC((__n128 *)v159);
        v296 = sub_23F61C574();
        *(_QWORD *)(v159 + 40) = sub_23F48E090(v296);
        v343 = (__objc2_ivar *)v159;
        sub_23F48DE78();
        v343 = (__objc2_ivar *)v295;
        v344 = v287;
        v345 = v335;
        v346 = v294;
        v22 = &stru_250FE6000;
        v347 = v293 & 1;
        v348 = v292;
        v349 = v337 & 1;
        v338 = v324;
        *(_QWORD *)&v339 = v322;
        *((_QWORD *)&v339 + 1) = v323;
        *(_QWORD *)&v340 = v315;
        *((_QWORD *)&v340 + 1) = v314;
        v341 = v313;
        v342 = v312;
        sub_23F49BA48((uint64_t)&v338);
        sub_23F61C4E4();
        v290 = (void *)sub_23F48DEA8();
        sub_23F362C60();
        sub_23F48E018(v291, sel_setObject_forKeyedSubscript_);
        v184 = v291;
      }

      v189 = v321;
      sub_23F42432C(v321, type metadata accessor for JointResolution.TupleInteraction);
      sub_23F48E0CC();
      v297 = sub_23F48E290();
      sub_23F4881FC(v297, v298, &qword_256E75260);
      v188 = sub_23F35D2E8(&qword_256E75278);
      sub_23F3C84F4(v159);
      v31 = MEMORY[0x24BEE4AF8];
      if (v42)
        goto LABEL_173;
    }
  }
  v331 = v25;
  v337 = v19;
  v332 = v13;
  v323 = (unint64_t)v17;
  while (1)
  {
    v333 = *v17;
    sub_23F488228((uint64_t)v17 + *(int *)(v26 + 48), (uint64_t)v13, type metadata accessor for JointResolution.CandidateInteraction);
    v327 = (os_unfair_lock_t)type metadata accessor for JointResolution.DeviceContext();
    v27 = (unint64_t *)&v13[v327[5]._os_unfair_lock_opaque];
    v28 = v27[1];
    v326 = v27;
    if (v28 >= 2)
    {
      v29 = *v27;
      v30 = (v28 & 0x2000000000000000) != 0 ? HIBYTE(v28) & 0xF : *v27 & 0xFFFFFFFFFFFFLL;
      if (v30)
        break;
    }
LABEL_31:
    v41 = v27[3];
    v42 = v28 == 1 || v41 == 0;
    if (!v42)
    {
      v43 = v27[2];
      v31 = (v41 & 0x2000000000000000) != 0 ? HIBYTE(v41) & 0xF : v43 & 0xFFFFFFFFFFFFLL;
      if (v31)
      {
        v44 = 4 * v31;
        v45 = (v43 >> 59) & 1;
        if ((v41 & 0x1000000000000000) == 0)
          LOBYTE(v45) = 1;
        v46 = 4 << v45;
        *(_QWORD *)&v335 = v41 & 0xFFFFFFFFFFFFFFLL;
        v334 = (v41 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v47 = 5381;
        v48 = 15;
        do
        {
          v49 = v48;
          if ((v48 & 0xC) == v46)
          {
            v56 = sub_23F48E180();
            v58 = v57;
            sub_23F3BBECC(v56, v59, v60);
            v44 = v58;
          }
          v50 = v49 >> 16;
          if (v49 >> 16 >= v31)
            goto LABEL_175;
          if ((v41 & 0x1000000000000000) != 0)
          {
            v61 = v44;
            v62 = sub_23F61C2E0();
            v44 = v61;
            v52 = v62;
          }
          else if ((v41 & 0x2000000000000000) != 0)
          {
            v343 = (__objc2_ivar *)v43;
            v344 = v335;
            v52 = *((_BYTE *)&v343 + v50);
          }
          else
          {
            v51 = v334;
            if ((v43 & 0x1000000000000000) == 0)
            {
              *(_QWORD *)&v322 = v44;
              v51 = sub_23F61C934();
              v44 = v322;
            }
            v52 = *(_BYTE *)(v51 + v50);
          }
          if ((v48 & 0xC) == v46)
          {
            v63 = sub_23F48E180();
            v65 = v64;
            sub_23F3BBECC(v63, v66, v67);
            v44 = v65;
            v48 = v68;
          }
          if ((v41 & 0x1000000000000000) != 0)
          {
            if (v31 <= v48 >> 16)
              goto LABEL_177;
            sub_23F48E180();
            v54 = v53;
            v55 = sub_23F61C2BC();
            v44 = v54;
            v48 = v55;
          }
          else
          {
            v48 = (v48 & 0xFFFFFFFFFFFF0000) + 65540;
          }
          v47 = 33 * v47 + v52;
        }
        while (v44 != v48 >> 14);
      }
    }
    v69 = sub_23F48DE6C();
    *(_QWORD *)(v41 + 32) = sub_23F48DFFC(v69);
    *(_QWORD *)(v41 + 40) = sub_23F61C574();
    v343 = (__objc2_ivar *)v41;
    sub_23F48DE78();
    v70 = (uint64_t)v343;
    v71 = (uint64_t *)&v332[*(int *)(v324 + 20)];
    v72 = v71[1];
    v73 = v71[2];
    v74 = v71[3];
    v75 = v71[4];
    v343 = (__objc2_ivar *)*v71;
    v344 = v72;
    *(_QWORD *)&v345 = v73;
    *((_QWORD *)&v345 + 1) = v74;
    v346 = v75;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F384A00();
    sub_23F484890((uint64_t *)&v343, *((uint64_t *)&v324 + 1));
    sub_23F38458C();
    sub_23F3837B0();
    sub_23F362C60();
    v76 = (void *)sub_23F48E208();
    v77 = sub_23F3C2EA0(0, (unint64_t *)&qword_256E75040);
    v78 = (void *)sub_23F61C3D0();
    sub_23F362984();
    v79 = v331;
    sub_23F48DFE4(v331, sel_setObject_forKeyedSubscript_, (uint64_t)v76);

    v80 = (__n128 *)sub_23F48DE6C();
    sub_23F48E160(v80);
    v81 = sub_23F48DFB4();
    *(_QWORD *)(v70 + 40) = sub_23F48E228(v81);
    v343 = (__objc2_ivar *)v70;
    sub_23F48DE78();
    v82 = (uint64_t)v343;
    v83 = sub_23F61C4E4();
    *(_QWORD *)&v335 = v77;
    v84 = (void *)sub_23F61C3D0();
    sub_23F362984();
    sub_23F48DFE4(v79, sel_setObject_forKeyedSubscript_, v83);

    LOBYTE(v83) = sub_23F616F88();
    v85 = sub_23F48DE6C();
    v86 = sub_23F48DEC8(v85);
    *(_QWORD *)(v82 + 40) = sub_23F48E21C(v86);
    v343 = (__objc2_ivar *)v82;
    sub_23F48DE78();
    if ((v83 & 1) != 0)
    {
      v87 = (__objc2_ivar *)sub_23F48DF58();
    }
    else
    {
      sub_23F616F04();
      log(fabs(v88));
      v87 = (__objc2_ivar *)sub_23F61C4E4();
    }
    v89 = (void *)sub_23F61C3D0();
    sub_23F384120();
    sub_23F48DF18(v331, sel_setObject_forKeyedSubscript_);

    v90 = (__n128 *)sub_23F48DE6C();
    sub_23F48E160(v90);
    v91 = sub_23F61C574();
    v87[1].name = (char *)sub_23F48E234(v91);
    v343 = v87;
    sub_23F48DE78();
    v92 = (void *)sub_23F61CCF4();
    v93 = (void *)sub_23F61C3D0();
    sub_23F362984();
    v22 = &stru_250FE6000;
    v94 = v331;
    sub_23F48DFE4(v331, sel_setObject_forKeyedSubscript_, (uint64_t)v92);

    v95 = sub_23F48DE6C();
    v96 = sub_23F48DFC4(v95);
    *(_QWORD *)(v95 + 40) = sub_23F48E090(v96);
    v343 = (__objc2_ivar *)v95;
    sub_23F48DE78();
    v97 = (void *)sub_23F61CCF4();
    v98 = (void *)sub_23F61C3D0();
    sub_23F362984();
    objc_msgSend(v94, sel_setObject_forKeyedSubscript_, v97, v98);

    sub_23F48E2B8();
    v100 = v328 + v99;
    v101 = *(_QWORD *)(v100 + 8);
    if (v101 == 1)
    {
      v102 = sub_23F48DE6C();
      v103 = sub_23F48DFC4(v102);
      *(_QWORD *)(v102 + 40) = sub_23F48E10C(v103);
      v343 = (__objc2_ivar *)v102;
      sub_23F48DE78();
      v104 = (void *)sub_23F61C6C4();
      v105 = (void *)sub_23F61C3D0();
      sub_23F362C60();
      sub_23F48E210(v94, sel_setObject_forKeyedSubscript_);
      v25 = v94;
    }
    else
    {
      LODWORD(v334) = *(unsigned __int8 *)(v100 + 56);
      v327 = *(os_unfair_lock_t *)(v100 + 48);
      v106 = *(_DWORD *)(v100 + 40);
      v107 = *(_QWORD *)(v100 + 32);
      v322 = *(_OWORD *)(v100 + 16);
      v108 = *(_QWORD *)v100;
      v109 = sub_23F48DE6C();
      v110 = sub_23F48DFC4(v109);
      *(_QWORD *)(v109 + 40) = sub_23F48E10C(v110);
      v343 = (__objc2_ivar *)v109;
      sub_23F48DE78();
      v343 = (__objc2_ivar *)v108;
      v344 = v101;
      v345 = v322;
      v346 = v107;
      v111 = v106 & 1;
      v22 = &stru_250FE6000;
      v347 = v111;
      v348 = v327;
      v25 = v331;
      v349 = v334 & 1;
      v112 = v326[6];
      v113 = *((_BYTE *)v326 + 56);
      v114 = *((_OWORD *)v326 + 1);
      v338 = *(_OWORD *)v326;
      v339 = v114;
      v340 = *((_OWORD *)v326 + 2);
      v341 = v112;
      v342 = v113;
      sub_23F49BA48((uint64_t)&v338);
      v104 = (void *)sub_23F61C4E4();
      v105 = (void *)sub_23F61C3D0();
      sub_23F362C60();
      sub_23F48E210(v25, sel_setObject_forKeyedSubscript_);
    }

    v13 = v332;
    sub_23F42432C((uint64_t)v332, type metadata accessor for JointResolution.CandidateInteraction);
    sub_23F48E0E0();
    v17 = (uint64_t *)v323;
    sub_23F4881FC((uint64_t)v104, v323, &qword_256E75268);
    v26 = sub_23F35D2E8(&qword_256E75270);
    sub_23F3C84F4((uint64_t)v17);
    if (v42)
      goto LABEL_70;
  }
  v31 = 4 * v30;
  v32 = (v29 >> 59) & 1;
  if ((v28 & 0x1000000000000000) == 0)
    LOBYTE(v32) = 1;
  v33 = 4 << v32;
  *(_QWORD *)&v335 = v28 & 0xFFFFFFFFFFFFFFLL;
  v334 = (v28 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v34 = 5381;
  v35 = 15;
  while (1)
  {
    v36 = v35;
    if ((v35 & 0xC) == v33)
      sub_23F48E1E0();
    v37 = v36 >> 16;
    if (v36 >> 16 >= v30)
      break;
    if ((v28 & 0x1000000000000000) != 0)
    {
      v39 = sub_23F61C2E0();
    }
    else if ((v28 & 0x2000000000000000) != 0)
    {
      v343 = (__objc2_ivar *)v29;
      v344 = v335;
      v39 = *((_BYTE *)&v343 + v37);
    }
    else
    {
      v38 = v334;
      if ((v29 & 0x1000000000000000) == 0)
        v38 = sub_23F61C934();
      v39 = *(_BYTE *)(v38 + v37);
    }
    if ((v35 & 0xC) == v33)
    {
      sub_23F48E1E0();
      v35 = v40;
      if ((v28 & 0x1000000000000000) != 0)
      {
LABEL_27:
        if (v30 <= v35 >> 16)
          goto LABEL_176;
        v35 = sub_23F61C2BC();
        goto LABEL_29;
      }
    }
    else if ((v28 & 0x1000000000000000) != 0)
    {
      goto LABEL_27;
    }
    v35 = (v35 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_29:
    v34 = 33 * v34 + v39;
    if (v31 == v35 >> 14)
    {
      v27 = v326;
      v28 = v326[1];
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  __break(1u);
LABEL_182:
  __break(1u);
  os_unfair_lock_unlock((os_unfair_lock_t)v31);
  __break(1u);
}

id sub_23F48BB58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v35;
  uint64_t v37;
  uint64_t v38;
  void *v39;

  v4 = *(_QWORD *)(a2 + 16);
  sub_23F35D2E8(&qword_256E70E48);
  v5 = (_OWORD *)sub_23F48DE6C();
  v5[1] = xmmword_23F61F1B0;
  sub_23F48E09C((uint64_t)v5, (unint64_t *)&qword_256E75040);
  if (v4)
  {
    v6 = sub_23F48DF0C();
    v7 = sub_23F48E100(v6);
    sub_23F48E190(v7);
    v8 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
    v9 = sub_23F488EEC();
    if (!v2)
    {
      v10 = (void *)v9;
      sub_23F48E09C(v9, &qword_256E75258);
      swift_bridgeObjectRetain_n();
      v11 = v10;
      v12 = 0;
      v35 = v11;
      do
      {
        v37 = v12;
        v38 = v4;
        v13 = *(_QWORD *)(a2 + v12 + 32);
        v14 = v11;
        v15 = sub_23F48DE6C();
        *(_OWORD *)(v15 + 16) = xmmword_23F61F1B0;
        *(_QWORD *)(v15 + 32) = v14;
        sub_23F617BA0();
        sub_23F384B00();
        sub_23F617BA0();
        sub_23F3B1EA4();
        sub_23F384A00();
        sub_23F383738();
        v16 = v14;
        v17 = sub_23F48C298();
        sub_23F48DF24((uint64_t)v17);
        v11 = sub_23F48C528(v13, 0, 65552);

        sub_23F362C60();
        sub_23F38458C();
        sub_23F3B5F04();
        sub_23F38432C();
        sub_23F384364();
        sub_23F384120();
        v12 = v37 + 88;
        v4 = v38 - 1;
      }
      while (v38 != 1);

      sub_23F384A80();
      return v11;
    }
  }
  else
  {
    v18 = sub_23F48DF60();
    v19 = sub_23F48E100(v18);
    sub_23F48E190(v19);
    v20 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
    v21 = sub_23F488EEC();
    if (!v2)
    {
      v3 = v21;
      v22 = sub_23F48DE6C();
      *(_OWORD *)(v22 + 16) = xmmword_23F61F1B0;
      *(_QWORD *)(v22 + 32) = sub_23F48DF0C();
      v23 = sub_23F48E058();
      sub_23F48DF24(v23);
      sub_23F48DF0C();
      sub_23F48DF48();
      sub_23F48DF78();
      sub_23F48DEE0();

      v24 = sub_23F48DE6C();
      *(_OWORD *)(v24 + 16) = xmmword_23F61F1B0;
      *(_QWORD *)(v24 + 32) = sub_23F48DF0C();
      v25 = sub_23F48E024();
      sub_23F48DF24(v25);
      sub_23F48DF0C();
      sub_23F48DF48();
      sub_23F48DF78();
      sub_23F48DEE0();

      v26 = sub_23F48DE6C();
      *(_OWORD *)(v26 + 16) = xmmword_23F61F1B0;
      *(_QWORD *)(v26 + 32) = sub_23F48DF0C();
      v27 = sub_23F48E074();
      sub_23F48DF24(v27);
      sub_23F48DF0C();
      sub_23F48DF48();
      sub_23F48DF78();
      sub_23F48DEE0();

      v28 = sub_23F48DE6C();
      *(_OWORD *)(v28 + 16) = xmmword_23F61F1B0;
      *(_QWORD *)(v28 + 32) = sub_23F48DF60();
      v29 = sub_23F48E058();
      sub_23F48DF24(v29);
      sub_23F48DF0C();
      sub_23F48DF48();
      sub_23F48DF78();
      sub_23F48DEE0();

      v30 = sub_23F48DE6C();
      *(_OWORD *)(v30 + 16) = xmmword_23F61F1B0;
      *(_QWORD *)(v30 + 32) = sub_23F48DF60();
      v31 = sub_23F48E024();
      sub_23F48DF24(v31);
      sub_23F48DF0C();
      sub_23F48DF48();
      sub_23F48DF78();
      sub_23F48DEE0();

      v32 = sub_23F48DE6C();
      *(_OWORD *)(v32 + 16) = xmmword_23F61F1B0;
      *(_QWORD *)(v32 + 32) = sub_23F48DF60();
      v33 = sub_23F48E074();
      sub_23F48DF24(v33);
      sub_23F48DF0C();
      sub_23F48DF48();
      sub_23F48DF78();
      sub_23F48DEE0();

    }
  }
  return (id)v3;
}

double JointResolution.UserAlignment.rawValue.getter()
{
  char *v0;

  return dbl_23F623B38[*v0];
}

uint64_t JointResolution.CandidateInteraction.candidate.getter()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (_QWORD *)(v1 + *(int *)(sub_23F48E1F0() + 20));
  v3 = v2[1];
  v4 = v2[2];
  v5 = v2[3];
  v6 = v2[4];
  *v0 = *v2;
  v0[1] = v3;
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v6;
  sub_23F617BA0();
  sub_23F383738();
  return sub_23F617BA0();
}

uint64_t type metadata accessor for JointResolution.CandidateInteraction(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E75180);
}

void JointResolution.CandidateInteraction.userAlignment.getter()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = *(_BYTE *)(v1 + *(int *)(sub_23F48E1F0() + 24));
  sub_23F362928();
}

__n128 JointResolution.CandidateInteraction.init(deviceContext:candidate:userAlignment:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __n128 result;
  __int128 v11;

  v11 = *a2;
  v6 = *((_QWORD *)a2 + 2);
  v7 = *a3;
  sub_23F488228(a1, a4, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
  v8 = type metadata accessor for JointResolution.CandidateInteraction(0);
  v9 = a4 + *(int *)(v8 + 20);
  *(_OWORD *)v9 = v11;
  *(_QWORD *)(v9 + 16) = v6;
  result = *(__n128 *)((char *)a2 + 24);
  *(__n128 *)(v9 + 24) = result;
  *(_BYTE *)(a4 + *(int *)(v8 + 24)) = v7;
  return result;
}

BOOL static JointResolution.CandidateInteraction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  char v17;

  if (!sub_23F48E2D0(a1, a2))
    return 0;
  v4 = type metadata accessor for JointResolution.CandidateInteraction(0);
  v5 = *(int *)(v4 + 20);
  v6 = *(_QWORD *)(v2 + v5);
  v7 = *(_QWORD *)(v2 + v5 + 8);
  v8 = *(_QWORD *)(v2 + v5 + 16);
  v9 = *(_QWORD *)(v2 + v5 + 24);
  v10 = *(_QWORD *)(v2 + v5 + 32);
  v11 = (_QWORD *)(v3 + v5);
  v12 = v11[2];
  v13 = v11[3];
  v14 = v11[4];
  v15 = v6 == *v11 && v7 == v11[1];
  if ((v15 || (sub_23F3C8510() & 1) != 0)
    && (v8 == v12 ? (v16 = v9 == v13) : (v16 = 0),
        (v16 || (sub_23F3C8510() & 1) != 0) && (sub_23F4903B0(v10, v14), (v17 & 1) != 0)))
  {
    return sub_23F4896E0(*(_BYTE *)(v2 + *(int *)(v4 + 24)), *(_BYTE *)(v3 + *(int *)(v4 + 24)));
  }
  else
  {
    return 0;
  }
}

void JointResolution.TupleInteraction.deviceContext.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F488248(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
}

uint64_t JointResolution.TupleInteraction.candidates.getter()
{
  type metadata accessor for JointResolution.TupleInteraction(0);
  return sub_23F617BA0();
}

void JointResolution.TupleInteraction.userAlignment.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for JointResolution.TupleInteraction(0) + 24));
  sub_23F362928();
}

void JointResolution.TupleInteraction.init(deviceContext:candidates:userAlignment:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;

  v6 = *a3;
  sub_23F488228(a1, a4, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
  v7 = type metadata accessor for JointResolution.TupleInteraction(0);
  *(_QWORD *)(a4 + *(int *)(v7 + 20)) = a2;
  *(_BYTE *)(a4 + *(int *)(v7 + 24)) = v6;
  sub_23F362B80();
}

void static JointResolution.TupleInteraction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (sub_23F48E2D0(a1, a2)
    && (v4 = type metadata accessor for JointResolution.TupleInteraction(0), sub_23F3C5414(), (v5 & 1) != 0))
  {
    sub_23F4896E0(*(_BYTE *)(v2 + *(int *)(v4 + 24)), *(_BYTE *)(v3 + *(int *)(v4 + 24)));
  }
  else
  {
    sub_23F362B80();
  }
}

void *sub_23F48C298()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = v0[2];
  v39 = *v0;
  v2 = v0[6];
  sub_23F35D2E8(&qword_256E70E48);
  v3 = sub_23F48DE6C();
  *(_OWORD *)(v3 + 16) = xmmword_23F61F1B0;
  v4 = sub_23F48E09C(v3, (unint64_t *)&qword_256E75040);
  *(_QWORD *)(v3 + 32) = sub_23F48484C();
  *(_QWORD *)(v3 + 40) = sub_23F61C6C4();
  sub_23F48E178();
  v5 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
  v6 = (void *)sub_23F48DF98();
  if (!v1)
  {
    v35 = v2;
    v7 = sub_23F48DE6C();
    *(_OWORD *)(v7 + 16) = xmmword_23F61F1B0;
    *(_QWORD *)(v7 + 32) = sub_23F48DE9C();
    *(_QWORD *)(v7 + 40) = sub_23F48E058();
    sub_23F48E178();
    sub_23F384B00();
    sub_23F617BA0();
    v8 = sub_23F384A00();
    sub_23F48E240(v8, v9, v10, v11, v12, v13, v14, v15, v35, v37, v39);
    sub_23F38458C();
    sub_23F38432C();
    sub_23F384364();
    v16 = (void *)sub_23F48DFB4();
    v17 = (void *)sub_23F48485C();
    v18 = sub_23F362984();
    sub_23F48E1D0(v18, sel_setObject_forKeyedSubscript_);

    v19 = sub_23F48DE6C();
    *(_OWORD *)(v19 + 16) = xmmword_23F61F1B0;
    *(_QWORD *)(v19 + 32) = sub_23F48DE9C();
    *(_QWORD *)(v19 + 40) = sub_23F48E024();
    sub_23F48E178();
    sub_23F384A00();
    sub_23F384B00();
    v20 = sub_23F3B1EA4();
    sub_23F48E240(v20, v21, v22, v23, v24, v25, v26, v27, v36, v38, v40);
    sub_23F3B5F04();
    sub_23F384364();
    sub_23F38458C();
    v28 = (void *)sub_23F61C574();
    v29 = (void *)sub_23F48485C();
    v30 = sub_23F362984();
    sub_23F48E1D0(v30, sel_setObject_forKeyedSubscript_);

    v31 = sub_23F48DE6C();
    *(_OWORD *)(v31 + 16) = xmmword_23F61F1B0;
    *(_QWORD *)(v31 + 32) = sub_23F48DE9C();
    *(_QWORD *)(v31 + 40) = sub_23F48E074();
    sub_23F48E178();
    v32 = (void *)v4;
    sub_23F61C6B8();
    v33 = (void *)sub_23F48DEA8();
    sub_23F362C60();
    sub_23F48E018(v6, sel_setObject_forKeyedSubscript_);

  }
  return v6;
}

id sub_23F48C528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;

  sub_23F3C2EA0(0, &qword_256E75258);
  v5 = (void *)sub_23F61C3D0();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v5, a2, a3);

  return v6;
}

uint64_t sub_23F48C5C4(_QWORD *a1, _QWORD *a2)
{
  return sub_23F48C5C0(*a1, *a2);
}

void sub_23F48C5D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  BOOL v15;
  BOOL v16;
  char v17;
  BOOL v18;
  char v19;
  BOOL v20;
  char v21;
  char v22;
  BOOL v23;
  char v24;
  BOOL v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v33 = a1[5];
  v34 = a1[4];
  v28 = a1[8];
  v29 = a1[7];
  v27 = a1[9];
  v6 = *a2;
  v7 = a2[1];
  v35 = a2[3];
  v36 = a2[2];
  v8 = a2[5];
  v31 = a2[4];
  v32 = a1[6];
  v9 = a2[6];
  v10 = a2[7];
  v11 = *a1 == *a2 && v3 == v7;
  v12 = a2[8];
  v30 = a2[9];
  if (!v11 && (sub_23F3C8510() & 1) == 0
    || (v4 == v36 ? (v13 = v5 == v35) : (v13 = 0),
        !v13 && (sub_23F3C8510() & 1) == 0
     || (sub_23F4903B0(v34, v31), (v14 & 1) == 0)
     || (v33 == v8 ? (v15 = v32 == v9) : (v15 = 0),
         !v15 && (sub_23F3C8510() & 1) == 0
      || (v29 == v10 ? (v16 = v28 == v12) : (v16 = 0),
          !v16 && (sub_23F3C8510() & 1) == 0 || (sub_23F4903B0(v27, v30), (v17 & 1) == 0)))))
  {
    v18 = v2 == v8 && v3 == v9;
    if (v18 || (sub_23F3C8510(), sub_23F48E284(), (v19 & 1) != 0))
    {
      v20 = v4 == v10 && v5 == v12;
      if (v20 || (sub_23F3C8510(), sub_23F48E284(), (v21 & 1) != 0))
      {
        sub_23F4903B0(v34, v30);
        if ((v22 & 1) != 0)
        {
          v23 = v33 == v6 && v32 == v7;
          if (v23 || (sub_23F3C8510(), sub_23F48E284(), (v24 & 1) != 0))
          {
            v25 = v29 == v36 && v28 == v35;
            if (v25 || (sub_23F3C8510(), sub_23F48E284(), (v26 & 1) != 0))
              sub_23F4903B0(v27, v31);
          }
        }
      }
    }
  }
}

void JointResolution.UserAlignment.init(for:)(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;

  v4 = sub_23F618860();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(a1, v4);
  if (v6 != *MEMORY[0x24BE58120])
  {
    if (v6 == *MEMORY[0x24BE58100])
    {
      v7 = 0;
      goto LABEL_17;
    }
    if (v6 == *MEMORY[0x24BE58110])
    {
      v7 = 2;
      goto LABEL_17;
    }
    if (v6 == *MEMORY[0x24BE58128])
    {
      v7 = 4;
      goto LABEL_17;
    }
    if (v6 == *MEMORY[0x24BE58108])
    {
      v7 = 3;
      goto LABEL_17;
    }
    if (v6 == *MEMORY[0x24BE580F8])
    {
      v7 = 1;
      goto LABEL_17;
    }
    if (v6 == *MEMORY[0x24BE58118])
    {
      v7 = 6;
      goto LABEL_17;
    }
    if (v6 == *MEMORY[0x24BE580F0])
    {
      v7 = 7;
      goto LABEL_17;
    }
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  v7 = 5;
LABEL_17:
  *a2 = v7;
  sub_23F362B80();
}

void JointResolution.UserAlignment.init(rawValue:)(char *a1@<X8>, double a2@<D0>)
{
  char v2;

  if (a2 == 0.0)
  {
    v2 = 0;
  }
  else if (a2 == 1.0)
  {
    v2 = 1;
  }
  else if (a2 == 0.1)
  {
    v2 = 2;
  }
  else if (a2 == 0.9)
  {
    v2 = 3;
  }
  else if (a2 == 0.55)
  {
    v2 = 4;
  }
  else if (a2 == 0.5)
  {
    v2 = 5;
  }
  else if (a2 == 0.45)
  {
    v2 = 6;
  }
  else if (a2 == 0.48)
  {
    v2 = 7;
  }
  else
  {
    v2 = 8;
  }
  *a1 = v2;
}

void *static JointResolution.UserAlignment.allCases.getter()
{
  return &unk_250FD1008;
}

void sub_23F48CA08()
{
  sub_23F3F609C();
}

void sub_23F48CA10()
{
  sub_23F4E6D0C();
}

void sub_23F48CA18()
{
  sub_23F3F656C();
}

void sub_23F48CA20(double *a1@<X0>, char *a2@<X8>)
{
  JointResolution.UserAlignment.init(rawValue:)(a2, *a1);
}

void sub_23F48CA28(double *a1@<X8>)
{
  *a1 = JointResolution.UserAlignment.rawValue.getter();
  sub_23F362928();
}

BOOL sub_23F48CA48(char *a1, char *a2)
{
  return sub_23F4896E0(*a1, *a2);
}

uint64_t sub_23F48CA54()
{
  sub_23F48DAF0();
  return sub_23F61C3B8();
}

uint64_t sub_23F48CAB0()
{
  sub_23F48DAF0();
  return sub_23F61C3A0();
}

void sub_23F48CAFC(_QWORD *a1@<X8>)
{
  *a1 = &unk_250FD1008;
}

uint64_t type metadata accessor for JointResolution.TupleInteraction(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E75218);
}

unint64_t sub_23F48CB24()
{
  unint64_t result;

  result = qword_256E75110;
  if (!qword_256E75110)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for JointResolution.UserAlignment, &type metadata for JointResolution.UserAlignment);
    atomic_store(result, (unint64_t *)&qword_256E75110);
  }
  return result;
}

unint64_t sub_23F48CB64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E75118;
  if (!qword_256E75118)
  {
    v1 = sub_23F35EB74(&qword_256E75120);
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256E75118);
  }
  return result;
}

_QWORD *_s20CandidateInteractionVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F616FC4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 == 1)
    {
      v12 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v12;
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *(_OWORD *)(v9 + 41) = *(_OWORD *)(v10 + 41);
    }
    else
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v11;
      v14 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v14;
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      v9[40] = v10[40];
      *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
      v9[56] = v10[56];
      sub_23F617BA0();
      sub_23F617BA0();
    }
    v15 = *(int *)(a3 + 20);
    v16 = *(int *)(a3 + 24);
    v17 = (_QWORD *)((char *)a1 + v15);
    v18 = (_QWORD *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v18[3];
    v17[2] = v18[2];
    v17[3] = v20;
    v17[4] = v18[4];
    *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
  }
  return a1;
}

uint64_t _s20CandidateInteractionVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20) + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s20CandidateInteractionVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  if (v10 == 1)
  {
    v11 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v11;
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 41) = *(_OWORD *)(v9 + 41);
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    v12 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v12;
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
    *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
    *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
    sub_23F617BA0();
    sub_23F617BA0();
  }
  v13 = *(int *)(a3 + 20);
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)(a1 + v13);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v16[3];
  v15[2] = v16[2];
  v15[3] = v18;
  v15[4] = v16[4];
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t _s20CandidateInteractionVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  if (v10 == 1)
  {
    if (v11 == 1)
    {
      v12 = *v9;
      v13 = v9[1];
      v14 = v9[2];
      *(_OWORD *)(v8 + 41) = *(__int128 *)((char *)v9 + 41);
      *(_OWORD *)(v8 + 16) = v13;
      *(_OWORD *)(v8 + 32) = v14;
      *(_OWORD *)v8 = v12;
    }
    else
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
      *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
      v18 = *((_QWORD *)v9 + 4);
      *(_BYTE *)(v8 + 40) = *((_BYTE *)v9 + 40);
      *(_QWORD *)(v8 + 32) = v18;
      v19 = *((_QWORD *)v9 + 6);
      *(_BYTE *)(v8 + 56) = *((_BYTE *)v9 + 56);
      *(_QWORD *)(v8 + 48) = v19;
      sub_23F617BA0();
      sub_23F617BA0();
    }
  }
  else if (v11 == 1)
  {
    sub_23F48450C(v8);
    v16 = v9[1];
    v15 = v9[2];
    v17 = *v9;
    *(_OWORD *)(v8 + 41) = *(__int128 *)((char *)v9 + 41);
    *(_OWORD *)(v8 + 16) = v16;
    *(_OWORD *)(v8 + 32) = v15;
    *(_OWORD *)v8 = v17;
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
    sub_23F617BA0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
    *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
    sub_23F617BA0();
    swift_bridgeObjectRelease();
    v20 = *((_QWORD *)v9 + 4);
    *(_BYTE *)(v8 + 40) = *((_BYTE *)v9 + 40);
    *(_QWORD *)(v8 + 32) = v20;
    v21 = *((_QWORD *)v9 + 6);
    *(_BYTE *)(v8 + 56) = *((_BYTE *)v9 + 56);
    *(_QWORD *)(v8 + 48) = v21;
  }
  v22 = *(int *)(a3 + 20);
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *(_QWORD *)(a2 + v22);
  v23[1] = *(_QWORD *)(a2 + v22 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v23[2] = v24[2];
  v23[3] = v24[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v23[4] = v24[4];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s20CandidateInteractionVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  *(_OWORD *)((char *)v8 + 41) = *(_OWORD *)((char *)v9 + 41);
  v11 = *(int *)(a3 + 20);
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t _s20CandidateInteractionVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 8) != 1)
  {
    v10 = *(_QWORD *)(v9 + 8);
    if (v10 != 1)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = v10;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v12;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
      *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      goto LABEL_6;
    }
    sub_23F48450C(v8);
  }
  v11 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v11;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 41) = *(_OWORD *)(v9 + 41);
LABEL_6:
  v13 = *(int *)(a3 + 20);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = *(_QWORD *)(a2 + v13 + 8);
  *v14 = *(_QWORD *)(a2 + v13);
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v17 = v15[3];
  v14[2] = v15[2];
  v14[3] = v17;
  swift_bridgeObjectRelease();
  v14[4] = v15[4];
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s20CandidateInteractionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F48D22C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23F48E0A4();
  if (*(_DWORD *)(*(_QWORD *)(v3 - 8) + 84) == (_DWORD)v1)
  {
    sub_23F3B1A44(v0, v1, v3);
  }
  else
  {
    sub_23F3F9B80(*(_QWORD *)(v0 + *(int *)(v2 + 20) + 8));
    sub_23F362B80();
  }
}

uint64_t _s20CandidateInteractionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F48D288()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_DWORD *)(*(_QWORD *)(sub_23F48E02C() - 8) + 84) == v3)
  {
    v4 = sub_23F44D4D4();
    sub_23F38370C(v4, v5, v6, v7);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 20) + 8) = (v0 - 1);
    sub_23F362B80();
  }
}

uint64_t sub_23F48D2D0()
{
  return sub_23F48D928();
}

_QWORD *_s16TupleInteractionVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F616FC4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 == 1)
    {
      v12 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v12;
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *(_OWORD *)(v9 + 41) = *(_OWORD *)(v10 + 41);
    }
    else
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v11;
      v14 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v14;
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      v9[40] = v10[40];
      *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
      v9[56] = v10[56];
      sub_23F617BA0();
      sub_23F617BA0();
    }
    v15 = *(int *)(a3 + 24);
    *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
    sub_23F617BA0();
  }
  return a1;
}

uint64_t _s16TupleInteractionVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20) + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t _s16TupleInteractionVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  if (v10 == 1)
  {
    v11 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v11;
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 41) = *(_OWORD *)(v9 + 41);
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    v12 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v12;
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
    *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
    *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
    sub_23F617BA0();
    sub_23F617BA0();
  }
  v13 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  sub_23F617BA0();
  return a1;
}

uint64_t _s16TupleInteractionVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  if (v10 == 1)
  {
    if (v11 == 1)
    {
      v12 = *v9;
      v13 = v9[1];
      v14 = v9[2];
      *(_OWORD *)(v8 + 41) = *(__int128 *)((char *)v9 + 41);
      *(_OWORD *)(v8 + 16) = v13;
      *(_OWORD *)(v8 + 32) = v14;
      *(_OWORD *)v8 = v12;
    }
    else
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
      *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
      v18 = *((_QWORD *)v9 + 4);
      *(_BYTE *)(v8 + 40) = *((_BYTE *)v9 + 40);
      *(_QWORD *)(v8 + 32) = v18;
      v19 = *((_QWORD *)v9 + 6);
      *(_BYTE *)(v8 + 56) = *((_BYTE *)v9 + 56);
      *(_QWORD *)(v8 + 48) = v19;
      sub_23F617BA0();
      sub_23F617BA0();
    }
  }
  else if (v11 == 1)
  {
    sub_23F48450C(v8);
    v16 = v9[1];
    v15 = v9[2];
    v17 = *v9;
    *(_OWORD *)(v8 + 41) = *(__int128 *)((char *)v9 + 41);
    *(_OWORD *)(v8 + 16) = v16;
    *(_OWORD *)(v8 + 32) = v15;
    *(_OWORD *)v8 = v17;
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
    sub_23F617BA0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
    *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
    sub_23F617BA0();
    swift_bridgeObjectRelease();
    v20 = *((_QWORD *)v9 + 4);
    *(_BYTE *)(v8 + 40) = *((_BYTE *)v9 + 40);
    *(_QWORD *)(v8 + 32) = v20;
    v21 = *((_QWORD *)v9 + 6);
    *(_BYTE *)(v8 + 56) = *((_BYTE *)v9 + 56);
    *(_QWORD *)(v8 + 48) = v21;
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s16TupleInteractionVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  *(_OWORD *)((char *)v8 + 41) = *(_OWORD *)((char *)v9 + 41);
  v11 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

uint64_t _s16TupleInteractionVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v6 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for JointResolution.DeviceContext() + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 8) != 1)
  {
    v10 = *(_QWORD *)(v9 + 8);
    if (v10 != 1)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = v10;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v12;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      *(_BYTE *)(v8 + 40) = *(_BYTE *)(v9 + 40);
      *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      goto LABEL_6;
    }
    sub_23F48450C(v8);
  }
  v11 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v11;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 41) = *(_OWORD *)(v9 + 41);
LABEL_6:
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s16TupleInteractionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F48D87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23F48E0A4();
  if (*(_DWORD *)(*(_QWORD *)(v3 - 8) + 84) == (_DWORD)v1)
  {
    sub_23F3B1A44(v0, v1, v3);
  }
  else
  {
    sub_23F3F9B80(*(_QWORD *)(v0 + *(int *)(v2 + 20)));
    sub_23F362B80();
  }
}

uint64_t _s16TupleInteractionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F48D8D4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_DWORD *)(*(_QWORD *)(sub_23F48E02C() - 8) + 84) == v3)
  {
    v4 = sub_23F44D4D4();
    sub_23F38370C(v4, v5, v6, v7);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
    sub_23F362B80();
  }
}

uint64_t sub_23F48D918()
{
  return sub_23F48D928();
}

uint64_t sub_23F48D928()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for JointResolution.DeviceContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s13UserAlignmentOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s13UserAlignmentOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23F48DA74 + 4 * byte_23F62384F[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23F48DAA8 + 4 * byte_23F62384A[v4]))();
}

uint64_t sub_23F48DAA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F48DAB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F48DAB8);
  return result;
}

uint64_t sub_23F48DAC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F48DACCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23F48DAD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F48DAD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for JointResolution.UserAlignment()
{
  sub_23F362C18();
}

unint64_t sub_23F48DAF0()
{
  unint64_t result;

  result = qword_256E75280;
  if (!qword_256E75280)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for JointResolution.UserAlignment, &type metadata for JointResolution.UserAlignment);
    atomic_store(result, (unint64_t *)&qword_256E75280);
  }
  return result;
}

uint64_t sub_23F48DB2C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23F48DB74(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

_QWORD *sub_23F48DC00(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  return a1;
}

void *initializeWithTake for HybridGrammarGenerator(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t sub_23F48DCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t sub_23F48DD78(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23F48DDB8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void _s24CandidateSimilarityScoreVMa()
{
  sub_23F362C18();
}

void _s25CandidateSimilarityScoresVMa()
{
  sub_23F362C18();
}

void sub_23F48DE28(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  sub_23F617BA0();
  sub_23F383738();
  sub_23F362928();
}

void _s12InteractionsVMa()
{
  sub_23F362C18();
}

uint64_t sub_23F48DE6C()
{
  return swift_allocObject();
}

uint64_t sub_23F48DE78()
{
  return sub_23F61C3F4();
}

uint64_t sub_23F48DE80(uint64_t a1)
{
  uint64_t v1;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 352);
  return sub_23F61C6C4();
}

uint64_t sub_23F48DE9C()
{
  return sub_23F61C6C4();
}

uint64_t sub_23F48DEA8()
{
  return sub_23F61C3D0();
}

uint64_t sub_23F48DEB8()
{
  return sub_23F61CC64();
}

uint64_t sub_23F48DEC8(uint64_t a1)
{
  uint64_t v1;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 352);
  return sub_23F61C574();
}

id sub_23F48DEE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, (SEL)(v2 + 2632), v0, v1);
}

uint64_t sub_23F48DEF4(uint64_t a1)
{
  uint64_t v1;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 352);
  return sub_23F61C6C4();
}

uint64_t sub_23F48DF0C()
{
  return sub_23F61C6C4();
}

id sub_23F48DF18(id a1, SEL a2)
{
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(a1, a2, v2, v3);
}

uint64_t sub_23F48DF24(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return sub_23F61C3F4();
}

id sub_23F48DF34()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, (SEL)(v3 + 2632), v0, v1);
}

uint64_t sub_23F48DF48()
{
  return sub_23F61C3D0();
}

uint64_t sub_23F48DF58()
{
  return sub_23F61C6C4();
}

uint64_t sub_23F48DF60()
{
  return sub_23F61C6C4();
}

uint64_t sub_23F48DF68()
{
  return sub_23F61C3D0();
}

uint64_t sub_23F48DF78()
{
  return swift_bridgeObjectRelease();
}

id sub_23F48DF84()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(v1, (SEL)(v3 + 2632), v0, v2);
}

uint64_t sub_23F48DF98()
{
  uint64_t v0;

  return sub_23F4880E8(v0, 65552);
}

uint64_t sub_23F48DFB4()
{
  return sub_23F61C574();
}

id sub_23F48DFBC(id a1, SEL a2, uint64_t a3)
{
  uint64_t v3;

  return objc_msgSend(a1, a2, a3, v3);
}

uint64_t sub_23F48DFC4(uint64_t a1)
{
  uint64_t v1;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 352);
  return sub_23F61C574();
}

id sub_23F48DFE4(id a1, SEL a2, uint64_t a3)
{
  uint64_t v3;

  return objc_msgSend(a1, a2, a3, v3);
}

__n128 sub_23F48DFEC(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 352);
  a1[1] = result;
  return result;
}

uint64_t sub_23F48DFFC(uint64_t a1)
{
  uint64_t v1;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 352);
  return sub_23F61C574();
}

id sub_23F48E018(id a1, SEL a2)
{
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(a1, a2, v3, v2);
}

uint64_t sub_23F48E024()
{
  return sub_23F61C6C4();
}

uint64_t sub_23F48E02C()
{
  return type metadata accessor for JointResolution.DeviceContext();
}

uint64_t sub_23F48E058()
{
  return sub_23F61C6C4();
}

uint64_t sub_23F48E060()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F48E074()
{
  return sub_23F61C6C4();
}

id sub_23F48E07C(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 - 352);
  return v1;
}

uint64_t sub_23F48E090(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_23F61C574();
}

uint64_t sub_23F48E09C(uint64_t a1, unint64_t *a2)
{
  return sub_23F3C2EA0(0, a2);
}

uint64_t sub_23F48E0A4()
{
  return type metadata accessor for JointResolution.DeviceContext();
}

uint64_t sub_23F48E0B8()
{
  return sub_23F61BFEC();
}

void sub_23F48E0CC()
{
  uint64_t v0;

  sub_23F5355E8(*(_QWORD **)(v0 - 536));
}

void sub_23F48E0E0()
{
  uint64_t v0;

  sub_23F5355D4(*(_QWORD **)(v0 - 464));
}

void sub_23F48E0F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 360) = v0;
}

uint64_t sub_23F48E100(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_23F61C6C4();
}

uint64_t sub_23F48E10C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_23F61C574();
}

uint64_t sub_23F48E118@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23F484A10(*(uint64_t **)(v2 - 432), a1, a2);
}

__n128 sub_23F48E160(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 352);
  a1[1] = result;
  return result;
}

uint64_t sub_23F48E178()
{
  return sub_23F61C3F4();
}

uint64_t sub_23F48E180()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F48E190(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return sub_23F61C3F4();
}

uint64_t sub_23F48E1A0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F48E1B0()
{
  return sub_23F61C574();
}

uint64_t sub_23F48E1B8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = 0;
  *(_QWORD *)(v1 - 248) = 0xE000000000000000;
  *(_QWORD *)(v1 - 240) = 0;
  *(_QWORD *)(v1 - 232) = 0xE000000000000000;
  *(_QWORD *)(v1 - 224) = a1;
  return v1 - 256;
}

id sub_23F48E1D0(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(v2, a2, v3, v4);
}

void sub_23F48E1E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  sub_23F3BBECC(v2, v1, v0);
}

uint64_t sub_23F48E1F0()
{
  return type metadata accessor for JointResolution.CandidateInteraction(0);
}

uint64_t sub_23F48E1FC()
{
  return sub_23F61C388();
}

uint64_t sub_23F48E208()
{
  return sub_23F61C574();
}

id sub_23F48E210(id a1, SEL a2)
{
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(a1, a2, v2, v3);
}

uint64_t sub_23F48E21C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_23F61C574();
}

uint64_t sub_23F48E228(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_23F61C574();
}

uint64_t sub_23F48E234(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_23F61C574();
}

uint64_t sub_23F48E240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  return sub_23F484890((uint64_t *)va, a8);
}

uint64_t sub_23F48E24C(uint64_t a1, uint64_t a2)
{
  return sub_23F4880E8(a1, a2);
}

id sub_23F48E258()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 4080));
}

uint64_t sub_23F48E264(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_23F61C574();
}

uint64_t sub_23F48E270()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 408);
}

uint64_t sub_23F48E284()
{
  return 0;
}

uint64_t sub_23F48E290()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F48E2A4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F48E2C4()
{
  return sub_23F61C3D0();
}

BOOL sub_23F48E2D0(uint64_t a1, uint64_t a2)
{
  return static JointResolution.DeviceContext.== infix(_:_:)(a1, a2);
}

double JointResolution.Candidate.init(typedValue:signals:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_23F61B92C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3B1F34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v4, a1, v8);
  JointResolution.CandidateIdentifier.init(typedValue:)(v4, (uint64_t *)&v13);
  sub_23F4933B0();
  if (v3)
  {
    sub_23F362D18();
  }
  else
  {
    result = *(double *)&v13;
    v11 = v14;
    v12 = v15;
    *(_OWORD *)a3 = v13;
    *(_QWORD *)(a3 + 16) = v11;
    *(_QWORD *)(a3 + 24) = v12;
    *(_QWORD *)(a3 + 32) = a2;
  }
  return result;
}

uint64_t sub_23F48E3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  const char *v16;
  unint64_t v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v43;

  v6 = *(_QWORD *)(a1 + 16);
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v43 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23F617BA0();
    sub_23F37B4B0();
    v8 = a1;
    v9 = 0;
    v7 = v43;
    v10 = v43[2];
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v8 + 8 * v9 + 32) + 16);
      if (v10 >= v43[3] >> 1)
      {
        sub_23F37B4B0();
        v8 = a1;
      }
      ++v9;
      v43[2] = v10 + 1;
      v43[v10++ + 4] = v3;
    }
    while (v6 != v9);
    swift_bridgeObjectRelease();
  }
  v11 = sub_23F385B28(v7);
  v13 = v12;
  sub_23F362984();
  if ((v13 & 1) != 0)
  {
    sub_23F3B5F04();
    sub_23F38458C();
    sub_23F493474();
    sub_23F366414();
    sub_23F362D64();
    *v15 = 0x692073656C707554;
    v17 = 0xEF7974706D652073;
LABEL_14:
    v15[1] = v17;
    swift_willThrow();
    return v3;
  }
  v14 = *(_QWORD *)(a2 + 16);
  if (v11 < v14)
  {
    sub_23F3B5F04();
    sub_23F38458C();
    sub_23F493474();
    sub_23F366414();
    sub_23F362D64();
    *v15 = 0xD00000000000002DLL;
    v16 = "Size of columnType is greater than the matrix";
LABEL_13:
    v17 = (unint64_t)(v16 - 32) | 0x8000000000000000;
    goto LABEL_14;
  }
  if ((unint64_t)v11 < *(_QWORD *)(a3 + 16))
  {
    sub_23F3B5F04();
    sub_23F38458C();
    sub_23F493474();
    sub_23F366414();
    sub_23F362D64();
    *v15 = 0xD000000000000032;
    v16 = "Size of alreadyPrompted is greater than the matrix";
    goto LABEL_13;
  }
  v40 = *(_QWORD *)(a3 + 16);
  v41 = *(_QWORD *)(a1 + 16);
  if (v41)
  {
    v38 = *(_QWORD *)(a2 + 16);
    v39 = a2;
    v19 = sub_23F617BA0();
    v20 = 0;
    v3 = v19;
    while (v20 < *(_QWORD *)(v19 + 16))
    {
      v21 = *(_QWORD *)(a1 + 32 + 8 * v20);
      v22 = *(_QWORD *)(v21 + 16);
      v7 = (_QWORD *)(v11 - v22);
      if (v11 - v22 < 0)
        goto LABEL_54;
      if (v11 == v22)
      {
        sub_23F3668F4();
      }
      else
      {
        sub_23F3664B0();
        sub_23F3668F4();
        do
        {
          v23 = sub_23F61BFEC();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F3C0670();
            sub_23F376E0C();
            v21 = v26;
          }
          v24 = *(_QWORD *)(v21 + 16);
          if (v24 >= *(_QWORD *)(v21 + 24) >> 1)
          {
            sub_23F376E0C();
            v21 = v27;
          }
          *(_QWORD *)(v21 + 16) = v24 + 1;
          v25 = (_QWORD *)(v21 + 40 * v24);
          v25[4] = 0;
          v25[5] = 0xE000000000000000;
          v25[6] = 0;
          v25[7] = 0xE000000000000000;
          v25[8] = v23;
          v7 = (_QWORD *)((char *)v7 - 1);
        }
        while (v7);
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F492474();
        v3 = v28;
      }
      if (v20 >= *(_QWORD *)(v3 + 16))
        goto LABEL_55;
      *(_QWORD *)(v3 + 8 * v20 + 32) = v21;
      swift_bridgeObjectRelease();
      v7 = (_QWORD *)++v20;
      v19 = a1;
      if (v20 == v41)
      {
        swift_bridgeObjectRelease();
        a2 = v39;
        v14 = v38;
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v3 = a1;
LABEL_35:
  v7 = (_QWORD *)(v11 - v14);
  if (v11 - v14 < 0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v11 != v14)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23F3C0670();
      sub_23F376D64();
      a2 = v37;
    }
    v33 = *(_QWORD *)(a2 + 16);
    do
    {
      v34 = *(_QWORD *)(a2 + 24);
      if (v33 >= v34 >> 1)
      {
        sub_23F493460(v34);
        sub_23F376D64();
        a2 = v35;
      }
      *(_QWORD *)(a2 + 16) = v33 + 1;
      *(_BYTE *)(a2 + v33++ + 32) = 6;
      v7 = (_QWORD *)((char *)v7 - 1);
    }
    while (v7);
  }
  v7 = (_QWORD *)(v11 - v40);
  if (v11 - v40 >= 0)
  {
    if (v11 == v40)
      return v3;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_41;
    goto LABEL_58;
  }
LABEL_57:
  __break(1u);
LABEL_58:
  sub_23F3C0670();
  sub_23F376CC0();
  a3 = v36;
LABEL_41:
  v29 = *(_QWORD *)(a3 + 16);
  do
  {
    v30 = *(_QWORD *)(a3 + 24);
    if (v29 >= v30 >> 1)
    {
      sub_23F493460(v30);
      sub_23F376CC0();
      a3 = v31;
    }
    *(_QWORD *)(a3 + 16) = v29 + 1;
    *(_BYTE *)(a3 + v29++ + 32) = 0;
    v7 = (_QWORD *)((char *)v7 - 1);
  }
  while (v7);
  return v3;
}

unint64_t sub_23F48E834(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

void static JointResolution.Candidate.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  sub_23F4934CC();
  v7 = v7 && v5 == v6;
  if ((v7 || (sub_23F3C8510() & 1) != 0) && (v3 == v1 ? (v8 = v4 == v2) : (v8 = 0), v8 || (sub_23F4932D8() & 1) != 0))
  {
    v9 = sub_23F3C85C0();
    sub_23F4903B0(v9, v10);
  }
  else
  {
    sub_23F383488();
  }
}

void JointResolution.Candidate.id.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void JointResolution.Candidate.bundleId.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

uint64_t JointResolution.CandidateIdentifier.init(id:bundleId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

__n128 JointResolution.Candidate.init(candidateId:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  sub_23F3664B0();
  v5 = sub_23F61BFEC();
  result = v7;
  *a2 = v7;
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  a2[2].n128_u64[0] = v5;
  return result;
}

void sub_23F48E970(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t i;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  os_unfair_lock_s *lock;
  _QWORD *v81;
  _QWORD *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95[6];

  v9 = *(_QWORD *)(a2 + 16);
  sub_23F487CB0(a2);
  if (v4)
    return;
  v76 = a2;
  v10 = sub_23F35D2E8(&qword_256E70E48);
  v11 = sub_23F36682C();
  v92 = xmmword_23F6236B0;
  *(_OWORD *)(v11 + 16) = xmmword_23F6236B0;
  *(_QWORD *)(v11 + 32) = sub_23F61C574();
  *(_QWORD *)(v11 + 40) = sub_23F61C574();
  *(_QWORD *)(v11 + 48) = sub_23F61C574();
  v94 = v11;
  sub_23F49329C();
  sub_23F49347C();
  v12 = sub_23F493280();
  v13 = 0;
  v14 = v9;
  v15 = (_QWORD *)v12;
  v78 = v14;
  if (!v14)
  {
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  v74 = a3;
  v75 = (uint64_t)a4;
  v77 = v76 + 32;
  v79 = (uint64_t *)(a1 + 16);
  lock = (os_unfair_lock_s *)(a1 + 24);
  sub_23F617BA0();
  v16 = 0;
  v91 = v10;
  v81 = v15;
  do
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v77 + 8 * v16) + 16);
    v18 = sub_23F617BA0();
    if (v17)
    {
      v19 = 0;
      v84 = v18 + 32;
      v85 = v18;
      *(_QWORD *)&v93 = v16;
      do
      {
        if (v19 >= v17)
        {
          __break(1u);
          goto LABEL_36;
        }
        v89 = v13;
        v20 = (uint64_t *)(v84 + 40 * v19);
        v21 = *v20;
        v22 = v20[1];
        v24 = v20[2];
        v23 = v20[3];
        v25 = v20[4];
        v26 = sub_23F36682C();
        *(_OWORD *)(v26 + 16) = xmmword_23F6236B0;
        sub_23F384B00();
        v90 = v23;
        sub_23F383E5C();
        sub_23F3668F4();
        *(_QWORD *)(v26 + 32) = sub_23F61C574();
        v27 = sub_23F493304();
        *(_QWORD *)(v26 + 48) = sub_23F493410(v27);
        v94 = v26;
        sub_23F49329C();
        v86 = v94;
        sub_23F3664B0();
        sub_23F61BFEC();
        if (v21)
          v28 = 0;
        else
          v28 = v22 == 0xE000000000000000;
        v87 = v22;
        if ((v28 || (sub_23F3B1DD8() & 1) != 0)
          && (!v24 ? (v29 = v23 == 0xE000000000000000) : (v29 = 0), v29 || (sub_23F3B1DD8() & 1) != 0))
        {
          v30 = sub_23F3C85C0();
          sub_23F4903B0(v30, v31);
          v33 = v32;
          sub_23F362984();
          sub_23F484ADC();
          if ((v33 & 1) != 0)
          {
            v34 = v89;
            goto LABEL_21;
          }
        }
        else
        {
          sub_23F362984();
          sub_23F484ADC();
        }
        sub_23F384B00();
        sub_23F617BA0();
        v35 = sub_23F61BFEC();
        v95[0] = v21;
        v95[1] = v22;
        v95[2] = v24;
        v95[3] = v90;
        v95[4] = v35;
        os_unfair_lock_lock(lock);
        sub_23F484A10(v79, v95, &v94);
        v34 = 0;
        os_unfair_lock_unlock(lock);
        sub_23F362984();
        sub_23F3B5F04();
        sub_23F384364();
LABEL_21:
        v36 = (void *)sub_23F493304();
        sub_23F489080();
        v37 = (void *)sub_23F493428();
        swift_bridgeObjectRelease();
        a4 = v81;
        objc_msgSend(v81, sel_setObject_forKeyedSubscript_, v36, v37);

        v88 = v34;
        sub_23F617BA0();
        v38 = 0;
        do
        {
          v39 = *((_BYTE *)&unk_250FD0800 + v38++ + 32);
          v40 = sub_23F36682C();
          *(_OWORD *)(v40 + 16) = xmmword_23F6236B0;
          *(_QWORD *)(v40 + 32) = sub_23F493304();
          v41 = sub_23F61C574();
          *(_QWORD *)(v40 + 48) = sub_23F493410(v41);
          v94 = v40;
          sub_23F49329C();
          if (*(_QWORD *)(v25 + 16))
            sub_23F375488(v39);
          v42 = (void *)sub_23F61C508();
          v43 = (void *)sub_23F493428();
          swift_bridgeObjectRelease();
          objc_msgSend(v81, sel_setObject_forKeyedSubscript_, v42, v43);

        }
        while (v38 != 5);
        sub_23F362D18();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = v88;
        ++v19;
        v18 = v85;
        v17 = *(_QWORD *)(v85 + 16);
        v15 = v81;
        v16 = v93;
      }
      while (v19 != v17);
    }
    ++v16;
    swift_bridgeObjectRelease();
  }
  while (v16 != v78);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a3 = v74;
  a4 = (_QWORD *)v75;
LABEL_29:
  v44 = sub_23F36682C();
  v93 = xmmword_23F623640;
  *(_OWORD *)(v44 + 16) = xmmword_23F623640;
  v45 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(v44 + 32) = sub_23F493304();
  v94 = v44;
  sub_23F49329C();
  v46 = v94;
  sub_23F49347C();
  v47 = (void *)sub_23F4880E8(v46, 65552);
  if (v45)
  {
    v82 = v15;
    v75 = (uint64_t)a4;
    v88 = 0;
    sub_23F617BA0();
    for (i = 0; i != v45; ++i)
    {
      v49 = sub_23F36682C();
      *(_QWORD *)(v49 + 32) = sub_23F49334C(v49, v50, v51, v52, v53, v54, v55, v56, v73, v74, v75, v76, v77, v78, (uint64_t)v79, (uint64_t)lock, (uint64_t)v82, v84, v85,
                                v86,
                                v87,
                                v88,
                                v90,
                                v91,
                                v92,
                                *((uint64_t *)&v92 + 1),
                                v93);
      v94 = v49;
      sub_23F49329C();
      v57 = (void *)sub_23F493484();
      sub_23F489080();
      v58 = (void *)sub_23F49343C();
      sub_23F362984();
      objc_msgSend(v47, sel_setObject_forKeyedSubscript_, v57, v58);

    }
    sub_23F384364();
    a4 = (_QWORD *)v75;
    v15 = v82;
  }
  v59 = sub_23F36682C();
  *(_OWORD *)(v59 + 16) = v93;
  v16 = a4[2];
  *(_QWORD *)(v59 + 32) = sub_23F493304();
  v94 = v59;
  sub_23F49329C();
  sub_23F49347C();
  v18 = sub_23F493280();
LABEL_36:
  v60 = (void *)v18;
  if (v16)
  {
    v83 = v15;
    sub_23F384B00();
    v61 = 0;
    *(_QWORD *)&v92 = v16;
    do
    {
      v62 = a4;
      v63 = sub_23F36682C();
      *(_QWORD *)(v63 + 32) = sub_23F49334C(v63, v64, v65, v66, v67, v68, v69, v70, v73, v74, v75, v76, v77, v78, (uint64_t)v79, (uint64_t)lock, (uint64_t)v83, v84, v85,
                                v86,
                                v87,
                                v88,
                                v90,
                                v91,
                                v92,
                                *((uint64_t *)&v92 + 1),
                                v93);
      v94 = v63;
      sub_23F49329C();
      v71 = (void *)sub_23F493484();
      sub_23F489080();
      v72 = (void *)sub_23F49343C();
      sub_23F362984();
      objc_msgSend(v60, sel_setObject_forKeyedSubscript_, v71, v72);

      a4 = v62;
      ++v61;
    }
    while ((_QWORD)v92 != v61);
    sub_23F384364();
  }
}

void *sub_23F48F058(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  void *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t i;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  _QWORD v64[4];

  if (a2)
  {
    v6 = sub_23F35D2E8(&qword_256E70E48);
    v7 = sub_23F36682C();
    v62 = xmmword_23F61F1B0;
    *(_OWORD *)(v7 + 16) = xmmword_23F61F1B0;
    *(_QWORD *)(v7 + 32) = sub_23F61C574();
    v8 = sub_23F489080();
    *(_QWORD *)(v7 + 40) = sub_23F61C6C4();
    v64[0] = v7;
    sub_23F61C3F4();
    v9 = objc_allocWithZone(MEMORY[0x24BDBFFF0]);
    v10 = sub_23F4880E8(v7, 65552);
    if (!v2)
    {
      v3 = (void *)v10;
      v11 = *(_QWORD *)(a1 + 16);
      if (v11 == a2)
      {
        v51 = 0;
        sub_23F362CDC();
        v57 = a2;
        v59 = (uint64_t)v3;
        v12 = 0;
        v49 = a1;
        v13 = (unsigned __int8 *)(a1 + 33);
        v53 = v8;
        v55 = v6;
        v14 = (void *)v59;
        do
        {
          v15 = *v13;
          v13 += 2;
          v16 = sub_23F36682C();
          v9[4] = sub_23F4932F0(v16, v17, v18, v19, v20, v21, v22, v23, v47, v49, v51, v53, v55, v57, v59, v15, v62);
          v24 = sub_23F61C574();
          sub_23F493324(v24);
          v25 = (void *)sub_23F61C574();
          v26 = (void *)sub_23F493454();
          sub_23F362984();
          objc_msgSend(v14, sel_setObject_forKeyedSubscript_, v25, v26);

          v27 = sub_23F36682C();
          *(_QWORD *)(v64[0] + 32) = sub_23F4932F0(v27, v28, v29, v30, v31, v32, v33, v34, v48, v50, v52, v54, v56, v58, v60, v61, v63);
          v35 = sub_23F61C574();
          sub_23F493324(v35);
          v9 = (_QWORD *)v64[0];
          v36 = (void *)sub_23F61C574();
          v37 = (void *)sub_23F493454();
          sub_23F362984();
          objc_msgSend(v14, sel_setObject_forKeyedSubscript_, v36, v37);

          ++v12;
        }
        while (v57 != v12);
        swift_bridgeObjectRelease();
        return (void *)v59;
      }
      else if (a2 < 1 || v11)
      {
        v64[0] = 0;
        v64[1] = 0xE000000000000000;
        sub_23F61C8E0();
        sub_23F4934C4();
        sub_23F49335C();
        sub_23F4934C4();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v64[3] = a2;
        sub_23F49335C();
        sub_23F4934C4();
        swift_bridgeObjectRelease();
        sub_23F366414();
        v45 = sub_23F362D64();
        sub_23F4933D0(v45, v46);

      }
      else
      {
        sub_23F470E08(0, a2);
        v41 = v40;
        v42 = *(_QWORD *)(v40 + 16);
        if (v42)
        {
          for (i = 0; i != v42; ++i)
          {
            v44 = *(_QWORD *)(v41 + 8 * i + 32);
            v64[0] = v44;
            sub_23F491930((uint64_t)v64, v3);
          }
        }
        swift_release();
      }
    }
  }
  else
  {
    sub_23F366414();
    sub_23F362D64();
    *v38 = 0xD000000000000011;
    v38[1] = 0x800000023F636E00;
    swift_willThrow();
  }
  return v3;
}

BOOL static JointResolution.CandidateSignalType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void JointResolution.CandidateSignalType.hash(into:)()
{
  sub_23F61CD3C();
  sub_23F362928();
}

void *static JointResolution.CandidateSignalType.allCases.getter()
{
  return &unk_250FD0800;
}

void JointResolution.CandidateSignalType.hashValue.getter()
{
  sub_23F362CB0();
  sub_23F493448();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F48F438()
{
  sub_23F3F9B00();
  sub_23F493448();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F48F460(_QWORD *a1@<X8>)
{
  *a1 = &unk_250FD0800;
}

void JointResolution.CandidateIdentifier.id.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void JointResolution.CandidateIdentifier.bundleId.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void JointResolution.CandidateIdentifier.description.getter()
{
  sub_23F61C8E0();
  swift_bridgeObjectRelease();
  sub_23F389CDC();
  sub_23F3C886C();
  sub_23F362D08();
  sub_23F493214();
  sub_23F383E5C();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F493334();
  sub_23F3B16F4();
}

void JointResolution.CandidateIdentifier.init(typedValue:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23F61B92C();
  sub_23F3B19A8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v10 = v9 - v8;
  sub_23F35D2E8(&qword_256E6FAB8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3B164C();
  v12 = sub_23F6188C0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F38F964();
  v16 = v15 - v14;
  v24 = v2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v10, a1, v6);
  sub_23F4A4BAC(v10, v3);
  if (sub_23F36195C(v3, 1, v12) == 1)
  {
    sub_23F491ECC(v3);
    sub_23F61C8E0();
    sub_23F61C280();
    sub_23F61CA00();
    sub_23F61C280();
    sub_23F366414();
    v17 = sub_23F362D64();
    sub_23F4933D0(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(a1, v6);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v16, v3, v12);
    sub_23F6188A8();
    sub_23F49341C();
    v19 = sub_23F6188B4();
    v20 = a1;
    v21 = v19;
    v23 = v22;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v20, v6);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
    *a2 = v3;
    a2[1] = v10;
    a2[2] = v21;
    a2[3] = v23;
  }
  sub_23F362870();
}

void JointResolution.CandidateIdentifier.getSaltedLoggingIDData(loggingScope:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F362ABC();
  v4 = v3;
  v5 = sub_23F618380();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B17A4();
  v7 = sub_23F6182A8();
  sub_23F3B19A8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F383EC4();
  sub_23F617BA0();
  sub_23F61C280();
  sub_23F617BA0();
  sub_23F61C280();
  sub_23F38458C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v4, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v1, *MEMORY[0x24BE53B00], v5);
  sub_23F618374();
  sub_23F49330C(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_23F618260();
  sub_23F362948();
}

void static JointResolution.CandidateIdentifier.nilCandidate.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
}

void static JointResolution.CandidateIdentifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if ((v6 || (sub_23F3C8510() & 1) != 0) && (v2 == v4 ? (v7 = v3 == v5) : (v7 = 0), !v7))
    sub_23F61CC64();
  else
    sub_23F362B80();
}

uint64_t JointResolution.CandidateIdentifier.hash(into:)()
{
  sub_23F362CDC();
  sub_23F4932CC();
  sub_23F362C60();
  sub_23F383738();
  sub_23F4932C4();
  return sub_23F493204();
}

uint64_t sub_23F48F934(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F48FA08(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6449656C646E7562;
  else
    return 25705;
}

uint64_t sub_23F48FA34()
{
  char *v0;

  return sub_23F48FA08(*v0);
}

uint64_t sub_23F48FA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F48F934(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F48FA60()
{
  sub_23F491F0C();
  return sub_23F61CDC0();
}

uint64_t sub_23F48FA88()
{
  sub_23F491F0C();
  return sub_23F61CDCC();
}

void JointResolution.CandidateIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23F35D2E8(&qword_256E752A0);
  v6 = *(_QWORD *)(v4 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B17A4();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F491F0C();
  sub_23F61CD90();
  sub_23F49336C();
  if (!v1)
    sub_23F49336C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
  sub_23F362870();
}

void JointResolution.CandidateIdentifier.hashValue.getter()
{
  sub_23F362CB0();
  sub_23F389CDC();
  sub_23F4932A4();
  sub_23F362D08();
  sub_23F383738();
  sub_23F4932B4();
  sub_23F362984();
  sub_23F362C10();
  sub_23F4931F4();
}

void JointResolution.CandidateIdentifier.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  v5 = sub_23F35D2E8(&qword_256E752B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B1F34();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F491F0C();
  sub_23F61CD84();
  if (v2)
  {
    sub_23F44D4A0();
  }
  else
  {
    v7 = sub_23F4933E0();
    v9 = v8;
    sub_23F617BA0();
    v10 = sub_23F4933E0();
    v12 = v11;
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v14 = v10;
    sub_23F493318(v13);
    *a2 = v7;
    a2[1] = v9;
    a2[2] = v14;
    a2[3] = v12;
    sub_23F383738();
    sub_23F44D4A0();
    sub_23F362984();
    sub_23F384364();
  }
  sub_23F362870();
}

void sub_23F48FD18(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  JointResolution.CandidateIdentifier.init(from:)(a1, a2);
}

void sub_23F48FD2C(_QWORD *a1)
{
  JointResolution.CandidateIdentifier.encode(to:)(a1);
}

uint64_t sub_23F48FD4C()
{
  sub_23F61CD30();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  return sub_23F61CD60();
}

uint64_t JointResolution.Candidate.candidateId.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  sub_23F617BA0();
  return sub_23F617BA0();
}

uint64_t JointResolution.Candidate.signals.getter()
{
  return sub_23F617BA0();
}

void JointResolution.Candidate.description.getter()
{
  sub_23F61C8E0();
  swift_bridgeObjectRelease();
  sub_23F362CDC();
  sub_23F61C280();
  sub_23F362C60();
  sub_23F493214();
  sub_23F617BA0();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  sub_23F3664B0();
  sub_23F3668F4();
  sub_23F61BFC8();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F362D08();
  sub_23F493334();
  sub_23F3B16F4();
}

uint64_t JointResolution.Candidate.combinedId.getter()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  sub_23F617BA0();
  sub_23F61C280();
  sub_23F389CDC();
  sub_23F3C886C();
  sub_23F362D08();
  return v2;
}

__n128 JointResolution.Candidate.init(candidateId:signals:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  __n128 result;
  unint64_t v4;
  unint64_t v5;

  result = *a1;
  v4 = a1[1].n128_u64[0];
  v5 = a1[1].n128_u64[1];
  *a3 = *a1;
  a3[1].n128_u64[0] = v4;
  a3[1].n128_u64[1] = v5;
  a3[2].n128_u64[0] = a2;
  return result;
}

uint64_t JointResolution.Candidate.init(id:bundleId:signals:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t JointResolution.Candidate.hash(into:)()
{
  sub_23F362CDC();
  sub_23F4932CC();
  sub_23F362C60();
  sub_23F383738();
  sub_23F4932C4();
  return sub_23F493204();
}

void sub_23F48FFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int v39;
  char *v40;
  char *v41;
  void (*v42)(uint64_t);
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v65 = sub_23F6184B8();
  v4 = *(_QWORD **)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  sub_23F3834D0();
  v60 = v5;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v55 - v8;
  MEMORY[0x24BDAC7A8](v7);
  sub_23F383780();
  v61 = v10;
  sub_23F35D2E8(&qword_256E753A0);
  sub_23F3834C0();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v55 - v15;
  if (v3 == v1)
  {
    v63 = 1;
LABEL_36:
    sub_23F362948();
    return;
  }
  sub_23F4934B8();
  if (!v38)
  {
LABEL_35:
    v63 = 0;
    goto LABEL_36;
  }
  v62 = 0;
  v58 = v3;
  v59 = v1;
  sub_23F3839E4();
  sub_23F4933F8();
  while (1)
  {
    if (v17)
    {
      v64 = (v17 - 1) & v17;
      v18 = __clz(__rbit64(v17)) | (v62 << 6);
LABEL_7:
      v19 = v58;
      v20 = v4[9] * v18;
      v21 = (void (*)(char *, unint64_t, uint64_t))v4[2];
      v22 = v65;
      v21(v14, *(_QWORD *)(v58 + 48) + v20, v65);
      v23 = *(_QWORD *)(v19 + 56) + v20;
      v24 = sub_23F384980();
      v21(&v14[*(int *)(v24 + 48)], v23, v22);
      sub_23F36196C((uint64_t)v14, 0, 1, v24);
      goto LABEL_26;
    }
    if (__OFADD__(v62, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_23F493490();
    if (v26 != v27)
    {
      if (*(_QWORD *)(v56 + 8 * v25))
        goto LABEL_12;
      v62 = v25;
      if (v25 + 1 < v57)
      {
        if (*(_QWORD *)(v56 + 8 * (v25 + 1)))
          goto LABEL_12;
        v62 = v25 + 1;
        if (v25 + 2 < v57)
        {
          if (*(_QWORD *)(v56 + 8 * (v25 + 2)))
            goto LABEL_12;
          v32 = v25 + 3;
          v62 = v25 + 2;
          if (v25 + 3 < v57)
            break;
        }
      }
    }
LABEL_25:
    v34 = sub_23F384980();
    sub_23F3838D8((uint64_t)v14, v35, v36, v34);
    v64 = 0;
LABEL_26:
    sub_23F4881FC((uint64_t)v14, (uint64_t)v16, &qword_256E753A0);
    v37 = sub_23F384980();
    sub_23F493394((uint64_t)v16);
    if (v38)
      v39 = 1;
    else
      v39 = 0;
    v63 = v39;
    if (v38)
      goto LABEL_36;
    v40 = v14;
    v41 = &v16[*(int *)(v37 + 48)];
    v42 = (void (*)(uint64_t))v4[4];
    v43 = v16;
    v44 = v4;
    v45 = v61;
    v46 = v43;
    v47 = v65;
    v42(v61);
    ((void (*)(char *, char *, uint64_t))v42)(v9, v41, v47);
    v48 = v59;
    sub_23F375424();
    v49 = (uint64_t)v9;
    v51 = v50;
    LOBYTE(v42) = v52;
    sub_23F4933F0(v45);
    if ((v42 & 1) == 0)
    {
      sub_23F4933F0(v49);
      goto LABEL_35;
    }
    v53 = v60;
    ((void (*)(uint64_t, uint64_t, uint64_t))v44[2])(v60, *(_QWORD *)(v48 + 56) + v44[9] * v51, v47);
    sub_23F3612C0(&qword_256E6FCF8, (uint64_t (*)(uint64_t))MEMORY[0x24BE549B8], MEMORY[0x24BE549D0]);
    v54 = sub_23F61C0A0();
    sub_23F4933F0(v53);
    sub_23F4933F0(v49);
    v9 = (char *)v49;
    v14 = v40;
    v4 = v44;
    v16 = v46;
    v17 = v64;
    if ((v54 & 1) == 0)
      goto LABEL_36;
  }
  if (*(_QWORD *)(v56 + 8 * v32))
  {
LABEL_12:
    sub_23F493238();
    v64 = v29 & v28;
    v18 = v31 + (v30 << 6);
    v62 = v30;
    goto LABEL_7;
  }
  while (!__OFADD__(v32, 1))
  {
    sub_23F493490();
    if (v26 == v27)
    {
      v62 = v55[1];
      goto LABEL_25;
    }
    sub_23F389EA0();
    if (v33)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_23F4903B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  float v17;
  unint64_t v18;
  char v19;

  if (a1 == a2)
    return;
  sub_23F49337C();
  if (!v4)
    return;
  v5 = 0;
  v6 = v2 + 64;
  sub_23F3839E4();
  v9 = v8 & v7;
  v11 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_21;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      return;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v11)
        return;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v11)
          return;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_21:
    v17 = *(float *)(*(_QWORD *)(v2 + 56) + 4 * v13);
    v18 = sub_23F375488(*(_BYTE *)(*(_QWORD *)(v2 + 48) + v13));
    if ((v19 & 1) == 0 || *(float *)(*(_QWORD *)(v3 + 56) + 4 * v18) != v17)
      return;
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    return;
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v11)
      return;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

void sub_23F4904F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;

  sub_23F362ABC();
  v4 = v3;
  v6 = v5;
  v53 = type metadata accessor for ParameterPromptMap(0);
  v7 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  sub_23F3C05DC();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v46 - v9;
  sub_23F35D2E8(&qword_256E753B0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F482314();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F383780();
  v55 = v13;
  if (v6 == v4 || (sub_23F4934B8(), !v14))
  {
LABEL_33:
    sub_23F362948();
    return;
  }
  v54 = 0;
  v50 = v6;
  v51 = v7;
  sub_23F493248();
  v47 = v6 + 64;
  v48 = v15;
  v46 = v15 - 1;
  v49 = v0;
  v52 = v10;
  v16 = (uint64_t)v10;
  while (1)
  {
    if (v2)
    {
      sub_23F49349C();
      v17 = v55;
      v19 = v18 | (v54 << 6);
LABEL_7:
      v20 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v19);
      v21 = *v20;
      v22 = v20[1];
      v23 = *(_QWORD *)(v50 + 56) + *(_QWORD *)(v7 + 72) * v19;
      v24 = sub_23F493344();
      sub_23F488248(v23, (uint64_t)v1 + *(int *)(v24 + 48), type metadata accessor for ParameterPromptMap);
      *v1 = v21;
      v1[1] = v22;
      v25 = sub_23F4933C0();
      sub_23F36196C(v25, v26, v27, v24);
      sub_23F384B00();
      v0 = v49;
      goto LABEL_25;
    }
    v17 = v55;
    v28 = v54 + 1;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v28 < v48)
    {
      if (*(_QWORD *)(v47 + 8 * v28))
        goto LABEL_11;
      v33 = v54 + 2;
      ++v54;
      if (v28 + 1 < v48)
      {
        if (*(_QWORD *)(v47 + 8 * v33))
          goto LABEL_11;
        v54 = v28 + 1;
        if (v28 + 2 < v48)
        {
          if (*(_QWORD *)(v47 + 8 * (v28 + 2)))
            goto LABEL_11;
          v34 = v28 + 3;
          v54 = v28 + 2;
          if (v28 + 3 < v48)
            break;
        }
      }
    }
LABEL_24:
    v36 = sub_23F35D2E8(&qword_256E708C8);
    sub_23F3838D8((uint64_t)v1, v37, v38, v36);
    v2 = 0;
LABEL_25:
    sub_23F4881FC((uint64_t)v1, (uint64_t)v17, &qword_256E753B0);
    v39 = sub_23F35D2E8(&qword_256E708C8);
    if (sub_23F36195C((uint64_t)v17, 1, v39) == 1)
      goto LABEL_33;
    v41 = *v17;
    v40 = v17[1];
    sub_23F488228((uint64_t)v17 + *(int *)(v39 + 48), v16, type metadata accessor for ParameterPromptMap);
    v42 = sub_23F3754D4(v41, v40);
    LOBYTE(v41) = v43;
    swift_bridgeObjectRelease();
    if ((v41 & 1) == 0)
      goto LABEL_32;
    v7 = v51;
    sub_23F488248(*(_QWORD *)(v4 + 56) + *(_QWORD *)(v51 + 72) * v42, v0, type metadata accessor for ParameterPromptMap);
    if ((sub_23F61BB6C() & 1) == 0)
    {
      sub_23F42432C(v0, type metadata accessor for ParameterPromptMap);
LABEL_32:
      sub_23F42432C(v16, type metadata accessor for ParameterPromptMap);
      goto LABEL_33;
    }
    sub_23F48FFE8();
    v45 = v44;
    sub_23F42432C(v0, type metadata accessor for ParameterPromptMap);
    sub_23F42432C(v16, type metadata accessor for ParameterPromptMap);
    if ((v45 & 1) == 0)
      goto LABEL_33;
  }
  if (*(_QWORD *)(v47 + 8 * v34))
  {
LABEL_11:
    sub_23F493238();
    v2 = v30 & v29;
    v19 = v32 + (v31 << 6);
    v54 = v31;
    goto LABEL_7;
  }
  while (!__OFADD__(v34, 1))
  {
    if (v34 + 1 >= v48)
    {
      v54 = v46;
      goto LABEL_24;
    }
    sub_23F389EA0();
    if (v35)
      goto LABEL_11;
  }
LABEL_35:
  __break(1u);
}

void sub_23F490854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  int64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v5 = type metadata accessor for ToolPromptMap(0);
  v56 = *(_QWORD *)(v5 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3C05DC();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v49 - v8;
  sub_23F35D2E8(&qword_256E753D8);
  sub_23F3834C0();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (int64_t *)((char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = (int64_t *)((char *)&v49 - v14);
  if (v4 == v2 || (sub_23F4934B8(), !v16))
  {
LABEL_34:
    sub_23F362948();
    return;
  }
  v54 = v5;
  v55 = 0;
  v52 = v4;
  v53 = v0;
  v50 = v4 + 64;
  sub_23F3839E4();
  v19 = v18 & v17;
  v51 = (unint64_t)(v20 + 63) >> 6;
  v49 = v51 - 1;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v55 << 6);
LABEL_7:
      v23 = (uint64_t *)(*(_QWORD *)(v52 + 48) + 16 * v22);
      v25 = *v23;
      v24 = v23[1];
      v26 = *(_QWORD *)(v52 + 56) + *(_QWORD *)(v56 + 72) * v22;
      v27 = sub_23F384838();
      sub_23F488248(v26, (uint64_t)v13 + *(int *)(v27 + 48), type metadata accessor for ToolPromptMap);
      *v13 = v25;
      v13[1] = v24;
      sub_23F36196C((uint64_t)v13, 0, 1, v27);
      sub_23F384B00();
      goto LABEL_25;
    }
    v28 = v55 + 1;
    if (__OFADD__(v55, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v28 < v51)
    {
      if (*(_QWORD *)(v50 + 8 * v28))
        goto LABEL_11;
      v33 = v55 + 2;
      ++v55;
      if (v28 + 1 < v51)
      {
        if (*(_QWORD *)(v50 + 8 * v33))
          goto LABEL_11;
        v55 = v28 + 1;
        if (v28 + 2 < v51)
        {
          if (*(_QWORD *)(v50 + 8 * (v28 + 2)))
            goto LABEL_11;
          v34 = v28 + 3;
          v55 = v28 + 2;
          if (v28 + 3 < v51)
            break;
        }
      }
    }
LABEL_24:
    v36 = sub_23F384838();
    sub_23F3838D8((uint64_t)v13, v37, v38, v36);
    v19 = 0;
LABEL_25:
    sub_23F4881FC((uint64_t)v13, (uint64_t)v15, &qword_256E753D8);
    v39 = sub_23F384838();
    if (sub_23F36195C((uint64_t)v15, 1, v39) == 1)
      goto LABEL_34;
    v40 = *v15;
    v41 = v15[1];
    sub_23F488228((uint64_t)v15 + *(int *)(v39 + 48), (uint64_t)v9, type metadata accessor for ToolPromptMap);
    v42 = sub_23F3754D4(v40, v41);
    LOBYTE(v40) = v43;
    sub_23F38458C();
    if ((v40 & 1) == 0)
      goto LABEL_33;
    v44 = *(_QWORD *)(v2 + 56) + *(_QWORD *)(v56 + 72) * v42;
    v45 = v53;
    sub_23F488248(v44, v53, type metadata accessor for ToolPromptMap);
    if ((sub_23F5E6578(v45, (uint64_t)v9) & 1) == 0 || (sub_23F4904F4(), (v46 & 1) == 0))
    {
      sub_23F42432C(v45, type metadata accessor for ToolPromptMap);
LABEL_33:
      sub_23F42432C((uint64_t)v9, type metadata accessor for ToolPromptMap);
      goto LABEL_34;
    }
    sub_23F48FFE8();
    v48 = v47;
    sub_23F42432C(v45, type metadata accessor for ToolPromptMap);
    sub_23F42432C((uint64_t)v9, type metadata accessor for ToolPromptMap);
    if ((v48 & 1) == 0)
      goto LABEL_34;
  }
  if (*(_QWORD *)(v50 + 8 * v34))
  {
LABEL_11:
    sub_23F493238();
    v19 = v30 & v29;
    v22 = v32 + (v31 << 6);
    v55 = v31;
    goto LABEL_7;
  }
  while (!__OFADD__(v34, 1))
  {
    if (v34 + 1 >= v51)
    {
      v55 = v49;
      goto LABEL_24;
    }
    sub_23F389EA0();
    if (v35)
      goto LABEL_11;
  }
LABEL_36:
  __break(1u);
}

void sub_23F490BF0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char v44;
  int v45;
  unint64_t v46;
  void *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  void (*v62)(uint64_t, uint64_t);
  _QWORD v63[2];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  int v72;
  uint64_t v73;

  sub_23F362ABC();
  v3 = v2;
  v5 = v4;
  v6 = sub_23F61B5D8();
  sub_23F3B19A8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3834D0();
  v69 = v8;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v63 - v10;
  sub_23F35D2E8(&qword_256E753C8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F482314();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F383780();
  v70 = (uint64_t *)v14;
  if (v5 == v3)
  {
    v72 = 1;
LABEL_36:
    sub_23F362948();
    return;
  }
  sub_23F4934B8();
  if (!v44)
  {
LABEL_35:
    v72 = 0;
    goto LABEL_36;
  }
  v71 = 0;
  v66 = v5;
  v67 = v0;
  sub_23F3839E4();
  v17 = v16 & v15;
  sub_23F4933F8();
  v18 = &unk_256E753D0;
  v68 = v3;
  v73 = v6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v20 = (v17 - 1) & v17;
      v21 = v19 | (v71 << 6);
LABEL_7:
      v22 = (uint64_t *)(*(_QWORD *)(v66 + 48) + 16 * v21);
      v24 = *v22;
      v23 = v22[1];
      v25 = *(_QWORD *)(v66 + 56) + *(_QWORD *)(v0 + 72) * v21;
      v26 = sub_23F493434();
      (*(void (**)(char *, unint64_t, uint64_t))(v0 + 16))(&v1[*(int *)(v26 + 48)], v25, v73);
      *(_QWORD *)v1 = v24;
      *((_QWORD *)v1 + 1) = v23;
      v27 = sub_23F4933C0();
      sub_23F36196C(v27, v28, v29, v26);
      sub_23F383738();
      goto LABEL_26;
    }
    if (__OFADD__(v71, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_23F493490();
    if (v31 != v32)
    {
      if (*(_QWORD *)(v64 + 8 * v30))
        goto LABEL_12;
      v71 = v30;
      if (v30 + 1 < v65)
      {
        if (*(_QWORD *)(v64 + 8 * (v30 + 1)))
          goto LABEL_12;
        v71 = v30 + 1;
        if (v30 + 2 < v65)
        {
          if (*(_QWORD *)(v64 + 8 * (v30 + 2)))
            goto LABEL_12;
          v37 = v30 + 3;
          v71 = v30 + 2;
          if (v30 + 3 < v65)
            break;
        }
      }
    }
LABEL_25:
    v39 = sub_23F493434();
    sub_23F3838D8((uint64_t)v1, v40, v41, v39);
    v20 = 0;
LABEL_26:
    v42 = v70;
    sub_23F4881FC((uint64_t)v1, (uint64_t)v70, &qword_256E753C8);
    v43 = sub_23F493434();
    sub_23F493394((uint64_t)v42);
    if (v44)
      v45 = 1;
    else
      v45 = 0;
    v72 = v45;
    if (v44)
      goto LABEL_36;
    v46 = v20;
    v47 = v18;
    v48 = v1;
    v49 = (char *)v42 + *(int *)(v43 + 48);
    v50 = *v42;
    v51 = v42[1];
    v0 = v67;
    v52 = v73;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v11, v49, v73);
    v53 = v50;
    v54 = v68;
    v55 = v11;
    v56 = sub_23F3754D4(v53, v51);
    v58 = v57;
    sub_23F38458C();
    if ((v58 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v0 + 8))(v55, v52);
      goto LABEL_35;
    }
    v59 = *(_QWORD *)(v54 + 56) + *(_QWORD *)(v0 + 72) * v56;
    v60 = v69;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v69, v59, v52);
    sub_23F3612C0((unint64_t *)&qword_256E71170, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8FE0], MEMORY[0x24BEB9000]);
    v61 = sub_23F61C0A0();
    v62 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
    v62(v60, v52);
    v62((uint64_t)v55, v52);
    v11 = v55;
    v1 = v48;
    v18 = v47;
    v17 = v46;
    if ((v61 & 1) == 0)
      goto LABEL_36;
  }
  if (*(_QWORD *)(v64 + 8 * v37))
  {
LABEL_12:
    sub_23F493238();
    v20 = v34 & v33;
    v21 = v36 + (v35 << 6);
    v71 = v35;
    goto LABEL_7;
  }
  while (!__OFADD__(v37, 1))
  {
    sub_23F493490();
    if (v31 == v32)
    {
      v71 = v63[1];
      goto LABEL_25;
    }
    sub_23F389EA0();
    if (v38)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_23F490F64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  _QWORD *v22;
  BOOL v23;
  char v24;
  uint64_t v25;

  if (a1 == a2)
    return;
  sub_23F49337C();
  if (!v23)
    return;
  v5 = 0;
  v6 = v2 + 64;
  sub_23F493248();
  v25 = v7;
  while (1)
  {
    if (v4)
    {
      sub_23F49349C();
      v9 = v8 | (v5 << 6);
      goto LABEL_21;
    }
    v10 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v10 >= v25)
      return;
    v11 = *(_QWORD *)(v6 + 8 * v10);
    ++v5;
    if (!v11)
    {
      v5 = v10 + 1;
      if (v10 + 1 >= v25)
        return;
      v11 = *(_QWORD *)(v6 + 8 * v5);
      if (!v11)
      {
        v5 = v10 + 2;
        if (v10 + 2 >= v25)
          return;
        v11 = *(_QWORD *)(v6 + 8 * v5);
        if (!v11)
          break;
      }
    }
LABEL_20:
    v4 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v5 << 6);
LABEL_21:
    v13 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v9);
    v14 = *v13;
    v15 = v13[1];
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 56) + 16 * v9);
    v18 = *v16;
    v17 = v16[1];
    sub_23F617BA0();
    sub_23F389CDC();
    v19 = sub_23F3754D4(v14, v15);
    v21 = v20;
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      sub_23F362D08();
      return;
    }
    v22 = (_QWORD *)(*(_QWORD *)(v3 + 56) + 16 * v19);
    v23 = *v22 == v18 && v22[1] == v17;
    if (v23)
    {
      sub_23F362D08();
    }
    else
    {
      v24 = sub_23F3C8510();
      sub_23F362D08();
      if ((v24 & 1) == 0)
        return;
    }
  }
  v12 = v10 + 3;
  if (v12 >= v25)
    return;
  v11 = *(_QWORD *)(v6 + 8 * v12);
  if (v11)
  {
    v5 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v5 >= v25)
      return;
    v11 = *(_QWORD *)(v6 + 8 * v5);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_32:
  __break(1u);
}

void sub_23F491114()
{
  sub_23F49115C();
}

void sub_23F491138()
{
  sub_23F49115C();
}

void sub_23F49115C()
{
  uint64_t v0;
  uint64_t (*v1)(char *);
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  int64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  void (*v64)(uint64_t, uint64_t);
  int64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t (*v73)(char *);
  uint64_t *v74;
  uint64_t v75;
  int64_t v76;
  int v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;

  sub_23F362ABC();
  v73 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = sub_23F61B404();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3834D0();
  v71 = v14;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v65 - v16;
  v18 = v7(0);
  v79 = *(_QWORD *)(v18 - 8);
  v80 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v72 = (char *)&v65 - v19;
  v74 = v5;
  sub_23F35D2E8(v5);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F482314();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F383780();
  v75 = v22;
  if (v11 == v9)
  {
    v77 = 1;
LABEL_36:
    sub_23F362948();
    return;
  }
  if (*(_QWORD *)(v11 + 16) != *(_QWORD *)(v9 + 16))
  {
LABEL_35:
    v77 = 0;
    goto LABEL_36;
  }
  v69 = v0;
  v70 = v9;
  v76 = 0;
  v68 = v11;
  sub_23F3839E4();
  v25 = v24 & v23;
  v66 = v11 + 64;
  v67 = (unint64_t)(v26 + 63) >> 6;
  v65 = v67 - 1;
  while (1)
  {
    if (v25)
    {
      v27 = __clz(__rbit64(v25));
      v28 = (v25 - 1) & v25;
      v29 = v75;
      v30 = v27 | (v76 << 6);
LABEL_6:
      v31 = v68;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v79 + 16))(v0, *(_QWORD *)(v68 + 48) + *(_QWORD *)(v79 + 72) * v30, v80);
      v32 = *(_QWORD *)(v31 + 56) + *(_QWORD *)(v13 + 72) * v30;
      v33 = sub_23F493344();
      sub_23F384918(v0 + *(int *)(v33 + 48), v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
      v34 = sub_23F4933C0();
      sub_23F36196C(v34, v35, v36, v33);
      goto LABEL_26;
    }
    v29 = v75;
    v37 = v76 + 1;
    if (__OFADD__(v76, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v37 < v67)
    {
      if (*(_QWORD *)(v66 + 8 * v37))
        goto LABEL_10;
      v42 = v76 + 2;
      ++v76;
      if (v37 + 1 < v67)
      {
        if (*(_QWORD *)(v66 + 8 * v42))
          goto LABEL_10;
        v76 = v37 + 1;
        if (v37 + 2 < v67)
        {
          if (*(_QWORD *)(v66 + 8 * (v37 + 2)))
            goto LABEL_10;
          v76 = v37 + 2;
          if (v37 + 3 < v67)
          {
            if (*(_QWORD *)(v66 + 8 * (v37 + 3)))
              goto LABEL_10;
            v43 = v37 + 4;
            v76 = v37 + 3;
            if (v37 + 4 < v67)
              break;
          }
        }
      }
    }
LABEL_25:
    v45 = sub_23F493344();
    sub_23F3838D8(v0, v46, v47, v45);
    v28 = 0;
LABEL_26:
    sub_23F4881FC(v0, v29, v74);
    v48 = sub_23F493344();
    sub_23F493394(v29);
    if (v49)
      v50 = 1;
    else
      v50 = 0;
    v77 = v50;
    if (v49)
      goto LABEL_36;
    v78 = v28;
    v51 = v3;
    v52 = v29 + *(int *)(v48 + 48);
    v54 = v79;
    v53 = v80;
    v55 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v72, v29, v80);
    sub_23F384918((uint64_t)v17, v52, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
    v56 = v70;
    v57 = v17;
    v58 = v73(v55);
    v60 = v59;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v53);
    if ((v60 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v57, v12);
      goto LABEL_35;
    }
    v61 = *(_QWORD *)(v56 + 56) + *(_QWORD *)(v13 + 72) * v58;
    v62 = v71;
    sub_23F384918(v71, v61, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
    sub_23F3612C0(&qword_256E74F30, (uint64_t (*)(uint64_t))MEMORY[0x24BE56EB0], MEMORY[0x24BE56EC8]);
    v63 = sub_23F61C0A0();
    v64 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v64(v62, v12);
    v64((uint64_t)v57, v12);
    v3 = v51;
    v17 = v57;
    v0 = v69;
    v25 = v78;
    if ((v63 & 1) == 0)
      goto LABEL_36;
  }
  if (*(_QWORD *)(v66 + 8 * v43))
  {
LABEL_10:
    sub_23F493238();
    v28 = v39 & v38;
    v30 = v41 + (v40 << 6);
    v76 = v40;
    goto LABEL_6;
  }
  while (!__OFADD__(v43, 1))
  {
    if (v43 + 1 >= v67)
    {
      v76 = v65;
      goto LABEL_25;
    }
    sub_23F389EA0();
    if (v44)
      goto LABEL_10;
  }
LABEL_38:
  __break(1u);
}

void JointResolution.Candidate.hashValue.getter()
{
  sub_23F362CB0();
  sub_23F389CDC();
  sub_23F4932A4();
  sub_23F362D08();
  sub_23F383738();
  sub_23F4932B4();
  sub_23F362984();
  sub_23F362C10();
  sub_23F4931F4();
}

uint64_t sub_23F4915B0()
{
  sub_23F384048();
  sub_23F3612C0(&qword_256E6FE60, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A30]);
  sub_23F61C04C();
  sub_23F4934B0();
  sub_23F389CDC();
  sub_23F61C22C();
  sub_23F362D08();
  sub_23F383E5C();
  sub_23F61C22C();
  return sub_23F493204();
}

void sub_23F491648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;

  if ((sub_23F61B920() & 1) != 0)
  {
    v4 = *(int *)(sub_23F4934B0() + 20);
    v5 = *(_QWORD *)(a1 + v4 + 16);
    v6 = *(_QWORD *)(a1 + v4 + 24);
    sub_23F4934CC();
    v9 = v9 && v7 == v8;
    if (v9 || (sub_23F3C8510() & 1) != 0)
    {
      v10 = v5 == v1 && v6 == v2;
      if (v10 || (sub_23F4932D8() & 1) != 0)
      {
        v11 = sub_23F3C85C0();
        sub_23F4903B0(v11, v12);
      }
    }
  }
  sub_23F383488();
}

void sub_23F4916D0()
{
  sub_23F362CB0();
  sub_23F384048();
  sub_23F3612C0(&qword_256E6FE60, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A30]);
  sub_23F61C04C();
  sub_23F4934B0();
  sub_23F383738();
  sub_23F4932C4();
  sub_23F362984();
  sub_23F362CDC();
  sub_23F4932CC();
  sub_23F362C60();
  sub_23F362C10();
  sub_23F4931F4();
}

void sub_23F49176C()
{
  sub_23F3F9B00();
  sub_23F389CDC();
  sub_23F4932A4();
  sub_23F362D08();
  sub_23F383738();
  sub_23F4932B4();
  sub_23F362984();
  sub_23F362C10();
  sub_23F4931F4();
}

void sub_23F4917BC()
{
  sub_23F3F9B00();
  sub_23F384048();
  sub_23F3612C0(&qword_256E6FE60, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A30]);
  sub_23F61C04C();
  sub_23F383738();
  sub_23F4932C4();
  sub_23F362984();
  sub_23F362CDC();
  sub_23F4932CC();
  sub_23F362C60();
  sub_23F362C10();
  sub_23F4931F4();
}

unint64_t sub_23F491850(unint64_t result)
{
  if (result >= 7)
    return 7;
  return result;
}

uint64_t sub_23F491860(uint64_t a1)
{
  unsigned int v1;

  if (a1 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (a1)
    return v1;
  else
    return 0;
}

uint64_t sub_23F491878(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_23F4F23D8(a1, *v1);
}

unint64_t sub_23F491880@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_23F491850(*a1);
  *a2 = result;
  return result;
}

void sub_23F4918A8(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = sub_23F445C70(*v1);
  sub_23F362928();
}

uint64_t sub_23F4918CC()
{
  unsigned __int8 *v0;

  return sub_23F3F60A8(*v0);
}

void sub_23F4918D4()
{
  sub_23F4E6D58();
}

uint64_t sub_23F4918DC(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_23F3F6568(a1, *v1);
}

uint64_t sub_23F4918E4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_23F491860(*a1);
  *a2 = result;
  return result;
}

void sub_23F49190C(uint64_t *a1@<X8>)
{
  char *v1;

  *a1 = sub_23F3C1674(*v1);
  sub_23F362928();
}

void sub_23F491930(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  sub_23F35D2E8(&qword_256E70E48);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23F61F1B0;
  *(_QWORD *)(v3 + 32) = sub_23F61C574();
  *(_QWORD *)(v3 + 40) = sub_23F61C574();
  sub_23F61C3F4();
  v4 = (void *)sub_23F61C574();
  sub_23F484800();
  v5 = (void *)sub_23F61C3D0();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setObject_forKeyedSubscript_, v4, v5);

  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23F61F1B0;
  *(_QWORD *)(v6 + 32) = sub_23F61C574();
  *(_QWORD *)(v6 + 40) = sub_23F61C574();
  sub_23F61C3F4();
  v7 = (void *)sub_23F61C574();
  v8 = (void *)sub_23F61C3D0();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setObject_forKeyedSubscript_, v7, v8);

}

unint64_t sub_23F491AAC@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_23F48E834(*a1);
  *a2 = result;
  return result;
}

BOOL sub_23F491AD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23F48DE64(*a1, *a2);
}

uint64_t sub_23F491AE0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_23F4F23D0(a1, *v1);
}

uint64_t ToolDefinition.toCandidateIdentifier()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v2 = sub_23F61BB3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3B17A4();
  v4 = sub_23F61B5A8();
  v6 = v5;
  sub_23F61B548();
  v7 = sub_23F61BB18();
  v9 = v8;
  result = sub_23F49330C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v9;
  return result;
}

void AssistantSchemaIdentifier.toCandidateIdentifier()(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_23F61BCD4();
  a1[1] = v2;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  sub_23F362928();
}

void UIControlTool.toCandidateIdentifier()(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F618C2C();
  v4 = v3;
  v5 = sub_23F618C44();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_23F362B80();
}

uint64_t RetrievedTool.toCandidateIdentifier()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F618BB4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  sub_23F3B17A4();
  sub_23F618BCC();
  RetrievedTool.Definition.toCandidateIdentifier()();
  return sub_23F49330C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
}

void RetrievedTool.Definition.toCandidateIdentifier()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  sub_23F362ABC();
  v34 = v1;
  v35 = v4;
  v5 = sub_23F618C68();
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F38F964();
  v29 = v8 - v7;
  v9 = sub_23F61BCE0();
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F38F964();
  v13 = v12 - v11;
  v14 = sub_23F61BB3C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  sub_23F383EC4();
  v16 = sub_23F618BB4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3B164C();
  v18 = sub_23F61B5D8();
  sub_23F3B19A8();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F38F964();
  v22 = v21 - v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v3, v34, v16);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 88))(v3, v16);
  if (v23 == *MEMORY[0x24BE57550])
  {
LABEL_2:
    sub_23F493270();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v22, v3, v18);
    sub_23F61B5A8();
    sub_23F49341C();
    sub_23F61B548();
    v24 = sub_23F61BB18();
    v26 = v25;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v14);
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v22, v18);
    goto LABEL_6;
  }
  if (v23 == *MEMORY[0x24BE57558])
  {
    sub_23F493270();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v13, v3, v33);
    sub_23F61BCD4();
    sub_23F49341C();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v13, v33);
    v24 = 0;
    v26 = 0xE000000000000000;
LABEL_6:
    *v35 = v3;
    v35[1] = v16;
    v35[2] = v24;
    v35[3] = v26;
    sub_23F362948();
    return;
  }
  if (v23 == *MEMORY[0x24BE57548] || v23 == *MEMORY[0x24BE57540])
    goto LABEL_2;
  if (v23 == *MEMORY[0x24BE57568])
  {
    sub_23F493270();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v29, v3, v31);
    sub_23F618C2C();
    sub_23F49341C();
    v24 = sub_23F618C44();
    v26 = v28;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    goto LABEL_6;
  }
  sub_23F61CC58();
  __break(1u);
}

uint64_t sub_23F491ECC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E6FAB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23F491F0C()
{
  unint64_t result;

  result = qword_256E752A8;
  if (!qword_256E752A8)
  {
    result = MEMORY[0x242670A44](&unk_23F623F34, &_s19CandidateIdentifierV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E752A8);
  }
  return result;
}

unint64_t sub_23F491F4C()
{
  unint64_t result;

  result = qword_256E752B8;
  if (!qword_256E752B8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for JointResolution.CandidateSignalType, &type metadata for JointResolution.CandidateSignalType);
    atomic_store(result, (unint64_t *)&qword_256E752B8);
  }
  return result;
}

unint64_t sub_23F491F8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E752C0;
  if (!qword_256E752C0)
  {
    v1 = sub_23F35EB74(&qword_256E752C8);
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256E752C0);
  }
  return result;
}

unint64_t sub_23F491FD4()
{
  unint64_t result;

  result = qword_256E752D0;
  if (!qword_256E752D0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for JointResolution.CandidateIdentifier, &type metadata for JointResolution.CandidateIdentifier);
    atomic_store(result, (unint64_t *)&qword_256E752D0);
  }
  return result;
}

unint64_t sub_23F492014()
{
  unint64_t result;

  result = qword_256E752D8;
  if (!qword_256E752D8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for JointResolution.Candidate, &type metadata for JointResolution.Candidate);
    atomic_store(result, (unint64_t *)&qword_256E752D8);
  }
  return result;
}

uint64_t _s19CandidateSignalTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s19CandidateSignalTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23F492124 + 4 * byte_23F623BA5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23F492158 + 4 * byte_23F623BA0[v4]))();
}

uint64_t sub_23F492158(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F492160(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F492168);
  return result;
}

uint64_t sub_23F492174(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F49217CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23F492180(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F492188(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for JointResolution.CandidateSignalType()
{
  sub_23F362C18();
}

void type metadata accessor for JointResolution.CandidateIdentifier()
{
  sub_23F362C18();
}

uint64_t _s9CandidateVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9CandidateVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

_QWORD *_s9CandidateVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9CandidateVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9CandidateVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9CandidateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for JointResolution.Candidate()
{
  sub_23F362C18();
}

ValueMetadata *_s19CandidateIdentifierV10CodingKeysOMa()
{
  return &_s19CandidateIdentifierV10CodingKeysON;
}

unint64_t sub_23F4923B8()
{
  unint64_t result;

  result = qword_256E752E0;
  if (!qword_256E752E0)
  {
    result = MEMORY[0x242670A44](&unk_23F623F0C, &_s19CandidateIdentifierV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E752E0);
  }
  return result;
}

unint64_t sub_23F4923F8()
{
  unint64_t result;

  result = qword_256E752E8;
  if (!qword_256E752E8)
  {
    result = MEMORY[0x242670A44](&unk_23F623E7C, &_s19CandidateIdentifierV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E752E8);
  }
  return result;
}

unint64_t sub_23F492438()
{
  unint64_t result;

  result = qword_256E752F0;
  if (!qword_256E752F0)
  {
    result = MEMORY[0x242670A44](&unk_23F623EA4, &_s19CandidateIdentifierV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256E752F0);
  }
  return result;
}

void sub_23F492474()
{
  sub_23F376E28();
}

void sub_23F492488()
{
  sub_23F3C0584();
  sub_23F377800();
}

void sub_23F492498()
{
  sub_23F3C0584();
  sub_23F377B14();
}

void sub_23F4924A8()
{
  sub_23F3C0584();
  sub_23F377B60();
}

void sub_23F4924B8()
{
  sub_23F3C0584();
  sub_23F377314();
}

void sub_23F4924C8()
{
  sub_23F3C0584();
  sub_23F377CA4();
}

void sub_23F4924D8()
{
  sub_23F3C0584();
  sub_23F377CB8();
}

void sub_23F4924E8()
{
  sub_23F3C0584();
  sub_23F377C90();
}

void sub_23F4924F8()
{
  sub_23F3C0584();
  sub_23F377E1C();
}

void sub_23F492508()
{
  sub_23F3C0584();
  sub_23F3777D8();
}

void sub_23F492518()
{
  sub_23F3C0584();
  sub_23F377E30();
}

void sub_23F492528()
{
  sub_23F3C0584();
  sub_23F376C88();
}

void sub_23F492538()
{
  sub_23F3C0584();
  sub_23F37816C();
}

void sub_23F492548()
{
  sub_23F3C0584();
  sub_23F378178();
}

void sub_23F492558()
{
  sub_23F3C0584();
  sub_23F376CA4();
}

void sub_23F492568()
{
  sub_23F3C0584();
  sub_23F37818C();
}

void sub_23F492578()
{
  sub_23F3C0584();
  sub_23F378204();
}

uint64_t _s14TypedCandidateVMa()
{
  uint64_t result;

  result = qword_256E75350;
  if (!qword_256E75350)
    return swift_getSingletonMetadata();
  return result;
}

_WORD *sub_23F4925C0(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_23F4925CC(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 65281 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65281 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 65282;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_23F492658(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F4926A4 + 4 * byte_23F623BAF[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_23F4926D8 + 4 * byte_23F623BAA[v4]))();
}

uint64_t sub_23F4926D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23F4926E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23F4926E8);
  return result;
}

uint64_t sub_23F4926F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23F4926FCLL);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_23F492700(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23F492708(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

void _s14TupleRiskLevelVMa()
{
  sub_23F362C18();
}

uint64_t *sub_23F492720(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B92C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v10[3];
    v9[2] = v10[2];
    v9[3] = v12;
    v9[4] = v10[4];
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
  }
  return a1;
}

uint64_t sub_23F4927D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F49282C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  v8[4] = v9[4];
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F4928B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  v8[3] = v9[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F492968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  return a1;
}

uint64_t sub_23F4929D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F492A60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F492A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F384048();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    sub_23F36195C(a1, a2, v4);
  else
    sub_23F362B80();
}

uint64_t sub_23F492ADC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F492AE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_23F384048();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23F36196C(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
    sub_23F362B80();
  }
}

uint64_t sub_23F492B54()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B92C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PlannerHTTPClient.Options.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_23F492C4C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23F492C98 + 4 * byte_23F623BB9[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23F492CCC + 4 * byte_23F623BB4[v4]))();
}

uint64_t sub_23F492CCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F492CD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F492CDCLL);
  return result;
}

uint64_t sub_23F492CE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F492CF0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23F492CF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F492CFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void _s13ParameterTypeOMa()
{
  sub_23F362C18();
}

void _s12PromptStatusOMa()
{
  sub_23F362C18();
}

unint64_t sub_23F492D24()
{
  unint64_t result;

  result = qword_256E75388;
  if (!qword_256E75388)
  {
    result = MEMORY[0x242670A44](&unk_23F624054, &unk_250FD7FB8);
    atomic_store(result, (unint64_t *)&qword_256E75388);
  }
  return result;
}

unint64_t sub_23F492D64()
{
  unint64_t result;

  result = qword_256E75390;
  if (!qword_256E75390)
  {
    result = MEMORY[0x242670A44](&unk_23F6240F4, &unk_250FD7F28);
    atomic_store(result, (unint64_t *)&qword_256E75390);
  }
  return result;
}

void sub_23F492DA0()
{
  sub_23F3612C0(&qword_256E75398, (uint64_t (*)(uint64_t))_s14TypedCandidateVMa, (uint64_t)&unk_23F62411C);
}

uint64_t _s19CandidateIdentifierV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F492E18 + 4 * byte_23F623BC3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F492E4C + 4 * byte_23F623BBE[v4]))();
}

uint64_t sub_23F492E4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F492E54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F492E5CLL);
  return result;
}

uint64_t sub_23F492E68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F492E70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F492E74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F492E7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void _s9TupleModeOMa()
{
  sub_23F362C18();
}

uint64_t sub_23F492E94(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F492EE0 + 4 * byte_23F623BCD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F492F14 + 4 * byte_23F623BC8[v4]))();
}

uint64_t sub_23F492F14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F492F1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F492F24);
  return result;
}

uint64_t sub_23F492F30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F492F38);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23F492F3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F492F44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void _s9TupleRiskOMa()
{
  sub_23F362C18();
}

_QWORD *sub_23F492F5C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_23F617BA0();
  return a1;
}

_QWORD *sub_23F492F88(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *sub_23F492FD4(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void _s15TuplesRiskLevelVMa()
{
  sub_23F362C18();
}

uint64_t destroy for QueryDecorationRankerService.RankedListsOutput()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23F493050(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_23F617BA0();
  sub_23F383738();
  sub_23F389CDC();
  return a1;
}

_QWORD *assignWithCopy for QueryDecorationRankerService.RankedListsOutput(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for QueryDecorationRankerService.RankedListsOutput(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

void _s6TuplesVMa()
{
  sub_23F362C18();
}

unint64_t sub_23F493164()
{
  unint64_t result;

  result = qword_256E753B8;
  if (!qword_256E753B8)
  {
    result = MEMORY[0x242670A44](&unk_23F624228, &unk_250FD80D8);
    atomic_store(result, (unint64_t *)&qword_256E753B8);
  }
  return result;
}

unint64_t sub_23F4931A4()
{
  unint64_t result;

  result = qword_256E753C0;
  if (!qword_256E753C0)
  {
    result = MEMORY[0x242670A44](&unk_23F6242C8, &unk_250FD8048);
    atomic_store(result, (unint64_t *)&qword_256E753C0);
  }
  return result;
}

uint64_t sub_23F493204()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F493214()
{
  return sub_23F61C280();
}

uint64_t sub_23F493270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

uint64_t sub_23F493280()
{
  uint64_t v0;

  return sub_23F4880E8(v0, 65552);
}

uint64_t sub_23F49329C()
{
  return sub_23F61C3F4();
}

uint64_t sub_23F4932A4()
{
  return sub_23F61C22C();
}

uint64_t sub_23F4932B4()
{
  return sub_23F61C22C();
}

uint64_t sub_23F4932C4()
{
  return sub_23F61C22C();
}

uint64_t sub_23F4932CC()
{
  return sub_23F61C22C();
}

uint64_t sub_23F4932D8()
{
  return sub_23F61CC64();
}

uint64_t sub_23F4932F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int128 a17)
{
  *(_OWORD *)(a1 + 16) = a17;
  return sub_23F61C574();
}

uint64_t sub_23F493304()
{
  return sub_23F61C574();
}

uint64_t sub_23F49330C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F493318@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F493324(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return sub_23F61C3F4();
}

uint64_t sub_23F493334()
{
  return sub_23F61C280();
}

uint64_t sub_23F493344()
{
  uint64_t *v0;

  return sub_23F35D2E8(v0);
}

uint64_t sub_23F49334C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,__int128 a27)
{
  *(_OWORD *)(a1 + 16) = a27;
  return sub_23F61C574();
}

uint64_t sub_23F49335C()
{
  return sub_23F61CC1C();
}

uint64_t sub_23F49336C()
{
  return sub_23F61CBB0();
}

uint64_t sub_23F493394(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, v1);
}

uint64_t sub_23F4933B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F4933C0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4933D0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

uint64_t sub_23F4933E0()
{
  return sub_23F61CB14();
}

uint64_t sub_23F4933F0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_23F4933F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = (unint64_t)(v0 + 63) >> 6;
  *(_QWORD *)(v2 - 160) = v1;
  *(_QWORD *)(v2 - 152) = v3;
  *(_QWORD *)(v2 - 168) = v3 - 1;
}

uint64_t sub_23F493410(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return sub_23F61C574();
}

uint64_t sub_23F493428()
{
  return sub_23F61C3D0();
}

uint64_t sub_23F493434()
{
  uint64_t *v0;

  return sub_23F35D2E8(v0);
}

uint64_t sub_23F49343C()
{
  return sub_23F61C3D0();
}

uint64_t sub_23F493448()
{
  return sub_23F61CD3C();
}

uint64_t sub_23F493454()
{
  return sub_23F61C3D0();
}

BOOL sub_23F493460@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_23F493474()
{
  return swift_bridgeObjectRelease();
}

id sub_23F49347C()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 4080));
}

uint64_t sub_23F493484()
{
  return sub_23F61C574();
}

uint64_t sub_23F4934B0()
{
  return _s14TypedCandidateVMa();
}

uint64_t sub_23F4934C4()
{
  return sub_23F61C280();
}

ValueMetadata *type metadata accessor for JointResolution()
{
  return &type metadata for JointResolution;
}

uint64_t sub_23F4934F0()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[5];

  v0 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 336);
  type metadata accessor for TrialManager();
  v1 = swift_allocObject();
  v4[3] = &type metadata for JointResolverBiomeLogger;
  v4[4] = &off_250FD83A8;
  v4[0] = sub_23F50BC04((uint64_t)v0, 0xD000000000000021, 0x800000023F634490, v1);
  type metadata accessor for JointResolver();
  v2 = swift_allocObject();
  sub_23F493A14((uint64_t)v4);
  return v2;
}

void sub_23F4935B0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    v3 = 0;
    while (v2 != v3)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v4 = (id)MEMORY[0x24266FE14](v3, a1);
      else
        v4 = *(id *)(a1 + 8 * v3 + 32);
      v5 = v4;
      v6 = objc_msgSend(v4, sel_description);
      v7 = sub_23F61C10C();
      v9 = v8;

      v10 = *(_QWORD *)(v12 + 16);
      if (v10 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_23F37B47C();
      ++v3;
      *(_QWORD *)(v12 + 16) = v10 + 1;
      v11 = v12 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v9;
      if (v2 == v3)
        return;
    }
    __break(1u);
LABEL_15:
    sub_23F617BA0();
    v2 = sub_23F61CA6C();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23F493728(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  void *v39;
  id v40;
  uint64_t v41;
  int64_t v42;

  v41 = a2 + 56;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 56);
  v42 = (unint64_t)(v6 + 63) >> 6;
  sub_23F617BA0();
  v9 = 0;
  v39 = a3;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v9 << 6);
LABEL_26:
    v21 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v11);
    v23 = *v21;
    v22 = v21[1];
    sub_23F384324();
    v24 = (void *)sub_23F61C0E8();
    v25 = objc_msgSend(a3, sel_featureValueForName_, v24);

    if (v25)
    {
      sub_23F384324();
      v40 = v25;
      swift_isUniquelyReferenced_nonNull_native();
      v26 = sub_23F496BF4();
      if (__OFADD__(*(_QWORD *)(a1 + 16), (v27 & 1) == 0))
        goto LABEL_40;
      v28 = v26;
      v29 = v27;
      sub_23F35D2E8(&qword_256E754D8);
      a3 = v39;
      if ((sub_23F61CA18() & 1) != 0)
      {
        v30 = sub_23F496BF4();
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_42;
        v28 = v30;
      }
      if ((v29 & 1) != 0)
      {
        v32 = *(_QWORD *)(a1 + 56);

        v33 = v40;
        *(_QWORD *)(v32 + 8 * v28) = v40;
      }
      else
      {
        sub_23F384B78(a1 + 8 * (v28 >> 6));
        v35 = (_QWORD *)(v34 + 16 * v28);
        *v35 = v23;
        v35[1] = v22;
        v33 = v40;
        *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v28) = v40;
        v36 = *(_QWORD *)(a1 + 16);
        v15 = __OFADD__(v36, 1);
        v37 = v36 + 1;
        if (v15)
          goto LABEL_41;
        *(_QWORD *)(a1 + 16) = v37;
        sub_23F384324();
      }

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v12 >= v42)
    goto LABEL_37;
  v13 = *(_QWORD *)(v41 + 8 * v12);
  ++v9;
  if (v13)
    goto LABEL_25;
  v9 = v12 + 1;
  sub_23F496C38();
  if (v14 == v15)
    goto LABEL_37;
  sub_23F496C2C();
  if (v13)
    goto LABEL_25;
  v9 = v16 + 2;
  sub_23F496C38();
  if (v14 == v15)
    goto LABEL_37;
  sub_23F496C2C();
  if (v13)
    goto LABEL_25;
  v9 = v17 + 3;
  sub_23F496C38();
  if (v14 == v15)
    goto LABEL_37;
  sub_23F496C2C();
  if (v13)
  {
LABEL_25:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_26;
  }
  v19 = v18 + 4;
  if (v19 >= v42)
  {
LABEL_37:
    swift_release();
    swift_release();
    return a1;
  }
  v13 = *(_QWORD *)(v41 + 8 * v19);
  if (v13)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    sub_23F496C38();
    if (v14 == v15)
      goto LABEL_37;
    sub_23F496C2C();
    v19 = v20 + 1;
    if (v13)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F493A14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_signpost_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint8_t *v16;
  os_signpost_id_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[4];

  v2 = v1;
  v4 = sub_23F619E20();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v22 - v9;
  if (qword_256E6F080 != -1)
    swift_once();
  v11 = sub_23F619E44();
  sub_23F361498(v11, (uint64_t)qword_256E80338);
  sub_23F619E38();
  sub_23F619DFC();
  v12 = sub_23F619E38();
  v13 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v22[0] = v1;
    v15 = a1;
    v16 = v14;
    *(_WORD *)v14 = 0;
    v17 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v12, v13, v17, "JointResolver.init", "", v16, 2u);
    v18 = v16;
    a1 = v15;
    v2 = v22[0];
    MEMORY[0x242670B70](v18, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  sub_23F619E74();
  swift_allocObject();
  v19 = sub_23F619E68();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  sub_23F619FD0();
  sub_23F619FC4();
  type metadata accessor for PlanResolutionCachableModel();
  sub_23F4969E0();
  v20 = v22[1];
  sub_23F619FB8();
  swift_release();
  if (v20)
  {
    sub_23F4952B0(v19, "JointResolver.init");
    swift_release();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
    type metadata accessor for JointResolver();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v22[3];
    sub_23F361418(a1, v2 + 24);
    sub_23F4952B0(v19, "JointResolver.init");
    swift_release();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  }
  return v2;
}

uint64_t sub_23F493CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 1120) = v7;
  *(_QWORD *)(v8 + 1112) = a7;
  *(_QWORD *)(v8 + 1104) = a6;
  *(_BYTE *)(v8 + 932) = a5;
  *(_QWORD *)(v8 + 1096) = a4;
  *(_QWORD *)(v8 + 1088) = a3;
  *(_QWORD *)(v8 + 1080) = a2;
  *(_QWORD *)(v8 + 1072) = a1;
  *(_QWORD *)(v8 + 1128) = _s10ModelInputVMa();
  *(_QWORD *)(v8 + 1136) = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FB20);
  *(_QWORD *)(v8 + 1144) = sub_23F366654();
  *(_QWORD *)(v8 + 1152) = sub_23F3666CC();
  v9 = sub_23F617000();
  *(_QWORD *)(v8 + 1160) = v9;
  *(_QWORD *)(v8 + 1168) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 1176) = sub_23F366654();
  *(_QWORD *)(v8 + 1184) = sub_23F3666CC();
  *(_QWORD *)(v8 + 1192) = sub_23F3666CC();
  *(_QWORD *)(v8 + 1200) = sub_23F3666CC();
  *(_QWORD *)(v8 + 1208) = sub_23F3666CC();
  v10 = sub_23F619E98();
  *(_QWORD *)(v8 + 1216) = v10;
  *(_QWORD *)(v8 + 1224) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 1232) = sub_23F366654();
  *(_QWORD *)(v8 + 1240) = sub_23F3666CC();
  *(_QWORD *)(v8 + 1248) = sub_23F3666CC();
  v11 = sub_23F619E20();
  *(_QWORD *)(v8 + 1256) = v11;
  *(_QWORD *)(v8 + 1264) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 1272) = sub_23F366654();
  *(_QWORD *)(v8 + 1280) = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F493DC4()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint8_t *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(void);

  if (qword_256E6F080 != -1)
    swift_once();
  v1 = sub_23F619E44();
  sub_23F361498(v1, (uint64_t)qword_256E80338);
  sub_23F619E38();
  sub_23F619DFC();
  v2 = sub_23F619E38();
  v3 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v4 = (uint8_t *)sub_23F366668();
    *(_WORD *)v4 = 0;
    v5 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v2, v3, v5, "JointResolver.resolve", "", v4, 2u);
    sub_23F366530();
  }
  v6 = v0[160];
  v7 = v0[159];
  v8 = v0[158];
  v9 = v0[157];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v6, v9);
  sub_23F619E74();
  sub_23F3668A0();
  v0[161] = sub_23F619E68();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v9);
  sub_23F35D2E8(&qword_256E754E0);
  inited = swift_initStackObject();
  v0[162] = inited;
  *(_DWORD *)(inited + 24) = 0;
  *(_QWORD *)(inited + 16) = MEMORY[0x24BEE4B00];
  sub_23F4856BC(inited);
  v0[163] = v11;
  v0[164] = 0;
  v14 = (uint64_t (*)(void))((char *)&dword_256E754E8 + dword_256E754E8);
  v12 = (_QWORD *)swift_task_alloc();
  v0[165] = v12;
  *v12 = v0;
  v12[1] = sub_23F494058;
  return v14();
}

uint64_t sub_23F494058()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23F3B1998();
  v1[125] = v0;
  v1[126] = v2;
  v1[127] = v3;
  *v4 = *v0;
  v1[166] = v3;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

void sub_23F4940A4()
{
  _QWORD *v0;
  os_log_type_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  _QWORD *v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  void *v26;
  uint8_t *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t *v54;
  os_unfair_lock_s *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(_QWORD);
  unint64_t v69;
  char v70;
  BOOL v71;
  unint64_t v72;
  char v73;
  char v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103[2];

  v2 = v0[166];
  sub_23F496C4C();
  sub_23F617BA0();
  sub_23F496C44();
  v3 = sub_23F3B1A04();
  v102 = v0;
  if (sub_23F366874(v3))
  {
    v4 = (uint8_t *)sub_23F366668();
    v103[0] = sub_23F366668();
    v5 = sub_23F496B58(4.8149e-34);
    sub_23F496C00(v5, v6, v103);
    v0[133] = v7;
    sub_23F496BB8();
    sub_23F496BE8();
    sub_23F38485C(&dword_23F35A000, v2, v1, "[MODEL_INPUT]:\n%s", v4);
    sub_23F496AF8();
    sub_23F366530();
  }
  v8 = v0[156];
  v9 = v0[153];
  v10 = v0[152];

  sub_23F384A80();
  v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v11(v8, v10);
  v0[167] = v11;
  v12 = (void *)v0[164];
  v13 = v0[151];
  v14 = v0[150];
  v15 = v0[149];
  v16 = v0[146];
  v17 = v0[145];
  v18 = v0[140];
  v19 = v0[138];
  LOBYTE(v10) = *((_BYTE *)v0 + 932) & 1;
  sub_23F616FF4();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v20(v14, v13, v17);
  v20(v15, v19, v17);
  type metadata accessor for JointResolverTelemetry();
  sub_23F3668A0();
  v0[168] = sub_23F49CF5C(v14, v15);
  sub_23F49D6BC();
  sub_23F49CFE4();
  v21 = sub_23F35EA9C((_QWORD *)(v18 + 24), *(_QWORD *)(v18 + 48));
  sub_23F496D3C(v10, v13, (_QWORD *)*v21);
  if (v12)
  {
    sub_23F49D370();
    sub_23F496C4C();
    v22 = v12;
    v23 = v12;
    v24 = sub_23F496C44();
    v25 = sub_23F61C628();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = v12;
      v27 = (uint8_t *)sub_23F366668();
      v28 = (_QWORD *)sub_23F366668();
      *(_DWORD *)v27 = 138412290;
      v29 = v26;
      v30 = _swift_stdlib_bridgeErrorToNSError();
      v0[131] = v30;
      sub_23F61C790();
      *v28 = v30;

      sub_23F38485C(&dword_23F35A000, v24, v25, "JointResolver error in JR inference call %@", v27);
      sub_23F35D2E8(&qword_256E6FAB0);
      sub_23F3B17D4();
      sub_23F366530();
    }

    v83 = v24;
    v84 = (void (*)(uint64_t, uint64_t))v0[167];
    v85 = v0[154];
    v86 = v0[152];
    v87 = v0[151];
    v88 = v0[146];
    v89 = v0[145];

    v84(v85, v86);
    swift_willThrow();
    sub_23F3667A8();
    sub_23F3DDBDC();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v89);
    sub_23F4952B0(v0[161], "JointResolver.resolve");
    swift_release();
    sub_23F496BC8();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666C4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23F366810();
    __asm { BR              X0 }
  }
  v31 = v0[163];
  v32 = v0[141];
  v33 = v0[140];
  v34 = v0[135];
  v35 = sub_23F3ECBD8();
  *(_QWORD *)(v35 + 16) = v33;
  *(_QWORD *)(v35 + 24) = v31;
  v36 = sub_23F3ECBD8();
  v0[169] = v36;
  *(_QWORD *)(v36 + 16) = &unk_256E754F8;
  *(_QWORD *)(v36 + 24) = v35;
  swift_retain();
  sub_23F3D9E08();
  swift_retain();
  sub_23F35EB74(&qword_256E75510);
  swift_asyncLet_begin();
  v37 = *(_QWORD *)(v34 + *(int *)(v32 + 20));
  v92 = *(_QWORD *)(v37 + 16);
  if (!v92)
  {
    v40 = MEMORY[0x24BEE4B00];
    goto LABEL_43;
  }
  v96 = v0[146];
  v94 = v37 + 32;
  v95 = v0 + 99;
  v93 = *(_QWORD *)(v34 + *(int *)(v32 + 20));
  sub_23F617BA0();
  v38 = v93;
  v39 = 0;
  v40 = MEMORY[0x24BEE4B00];
  v97 = v20;
  while (1)
  {
    if (v39 >= *(_QWORD *)(v38 + 16))
      goto LABEL_47;
    v41 = *(_QWORD *)(*(_QWORD *)(v94 + 8 * v39) + 16);
    if (v41)
      break;
LABEL_39:
    if (++v39 == v92)
    {
      swift_bridgeObjectRelease();
LABEL_43:
      v0[170] = v40;
      sub_23F366810();
      swift_asyncLet_get_throwing();
      return;
    }
  }
  v91 = v39;
  v42 = *(_QWORD *)(v94 + 8 * v39);
  sub_23F3664B0();
  sub_23F617BA0();
  v43 = (uint64_t *)(v42 + 64);
  while (1)
  {
    v100 = v41;
    v101 = v40;
    v44 = *(v43 - 4);
    v45 = *(v43 - 3);
    v46 = *(v43 - 2);
    v47 = *(v43 - 1);
    v99 = v43;
    v48 = *v43;
    sub_23F384A00();
    sub_23F3B1EA4();
    sub_23F617BA0();
    v49 = sub_23F61BFEC();
    v50 = !v44 && v45 == 0xE000000000000000;
    if ((v50 || (sub_23F3B1DD8() & 1) != 0) && (!v46 && v47 == 0xE000000000000000 || (sub_23F3B1DD8() & 1) != 0))
    {
      sub_23F4903B0(v48, v49);
      v52 = v51;
      sub_23F362D08();
      sub_23F384A80();
      if ((v52 & 1) != 0)
      {
        v98 = -1;
        goto LABEL_23;
      }
    }
    else
    {
      sub_23F362D08();
      sub_23F384A80();
    }
    v53 = v102[162];
    v54 = (uint64_t *)(v53 + 16);
    v55 = (os_unfair_lock_s *)(v53 + 24);
    sub_23F384A00();
    sub_23F3B1EA4();
    v56 = sub_23F61BFEC();
    v102[99] = v44;
    v102[100] = v45;
    v102[101] = v46;
    v102[102] = v47;
    v102[103] = v56;
    v57 = swift_task_alloc();
    *(_QWORD *)(v57 + 16) = v95;
    os_unfair_lock_lock(v55);
    sub_23F484A10(v54, *(uint64_t **)(v57 + 16), v103);
    os_unfair_lock_unlock(v55);
    v98 = v103[0];
    sub_23F362D18();
    sub_23F3B5F04();
    swift_bridgeObjectRelease();
    sub_23F366708();
LABEL_23:
    v0 = v102;
    v58 = v102[148];
    v59 = v102[145];
    v60 = v102[144];
    v102[109] = v44;
    v102[110] = v45;
    v102[111] = v46;
    v102[112] = v47;
    sub_23F496920();
    sub_23F384A00();
    sub_23F3B1EA4();
    sub_23F6183F8();
    sub_23F3837B0();
    sub_23F384A80();
    sub_23F384A80();
    v97(v60, v58, v59);
    sub_23F36196C(v60, 0, 1, v59);
    if (sub_23F36195C(v60, 1, v59) == 1)
    {
      sub_23F49695C(v102[144]);
      v40 = v101;
      v61 = sub_23F37556C(v98);
      if ((v62 & 1) != 0)
      {
        v63 = v61;
        v64 = v102[145];
        v65 = v102[143];
        swift_isUniquelyReferenced_nonNull_native();
        v103[0] = v101;
        sub_23F35D2E8(&qword_256E75528);
        sub_23F61CA18();
        v40 = v103[0];
        v66 = v96;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v96 + 32))(v65, *(_QWORD *)(v103[0] + 56) + *(_QWORD *)(v96 + 72) * v63, v64);
        sub_23F3C85C0();
        sub_23F61CA30();
        sub_23F384450();
        v67 = 0;
      }
      else
      {
        v67 = 1;
        v66 = v96;
      }
      v77 = v100;
      v78 = v99;
      v79 = v102[143];
      sub_23F36196C(v79, v67, 1, v102[145]);
      sub_23F49695C(v79);
      goto LABEL_37;
    }
    v66 = v96;
    v68 = *(void (**)(_QWORD))(v96 + 32);
    ((void (*)(_QWORD, _QWORD, _QWORD))v68)(v102[147], v102[144], v102[145]);
    swift_isUniquelyReferenced_nonNull_native();
    v103[0] = v101;
    sub_23F37556C(v98);
    sub_23F496BA8();
    if (v71)
      break;
    v72 = v69;
    v73 = v70;
    sub_23F35D2E8(&qword_256E75528);
    v74 = sub_23F496BE0();
    v40 = v103[0];
    if ((v74 & 1) != 0)
    {
      v75 = sub_23F37556C(v98);
      if ((v73 & 1) != (v76 & 1))
      {
        sub_23F366810();
        sub_23F61CC94();
        return;
      }
      v72 = v75;
    }
    if ((v73 & 1) != 0)
    {
      (*(void (**)(unint64_t, _QWORD, _QWORD))(v96 + 40))(*(_QWORD *)(v40 + 56) + *(_QWORD *)(v96 + 72) * v72, v102[147], v102[145]);
    }
    else
    {
      sub_23F384B78(v40 + 8 * (v72 >> 6));
      *(_QWORD *)(v80 + 8 * v72) = v98;
      v68(*(_QWORD *)(v40 + 56) + *(_QWORD *)(v96 + 72) * v72);
      v81 = *(_QWORD *)(v40 + 16);
      v71 = __OFADD__(v81, 1);
      v82 = v81 + 1;
      if (v71)
        goto LABEL_46;
      *(_QWORD *)(v40 + 16) = v82;
    }
    sub_23F384450();
    v77 = v100;
    v78 = v99;
LABEL_37:
    (*(void (**)(_QWORD, _QWORD))(v66 + 8))(v102[148], v102[145]);
    v43 = v78 + 5;
    v41 = v77 - 1;
    if (!v41)
    {
      swift_bridgeObjectRelease();
      v38 = v93;
      v39 = v91;
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
}

uint64_t sub_23F494A68()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v3;
  uint64_t (__cdecl *v4)();

  v1[171] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_23F36679C();
    return swift_task_switch();
  }
  else
  {
    v1[172] = v1[117];
    v1[173] = v1[118];
    v1[174] = v1[119];
    v4 = (uint64_t (__cdecl *)())((char *)&dword_256E75520 + dword_256E75520);
    sub_23F3D9E08();
    sub_23F617BA0();
    v3 = (_QWORD *)swift_task_alloc();
    v1[175] = v3;
    *v3 = v1;
    v3[1] = sub_23F494B20;
    return v4();
  }
}

uint64_t sub_23F494B20()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23F3B1998();
  v1[128] = v0;
  v1[129] = v2;
  v1[130] = v3;
  *v4 = *v0;
  v1[176] = v3;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F494B6C()
{
  _QWORD *v0;
  os_log_type_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[8];

  v2 = v0[176];
  sub_23F496C4C();
  sub_23F617BA0();
  sub_23F496C44();
  v3 = sub_23F3B1A04();
  if (sub_23F366874(v3))
  {
    v4 = (uint8_t *)sub_23F366668();
    v20[0] = sub_23F366668();
    v5 = sub_23F496B58(4.8149e-34);
    sub_23F496C00(v5, v6, v20);
    v0[132] = v7;
    sub_23F496BB8();
    sub_23F496BE8();
    sub_23F38485C(&dword_23F35A000, v2, v1, "[MODEL_OUTPUT]:\n%s", v4);
    sub_23F496AF8();
    sub_23F366530();
  }
  v8 = (void (*)(uint64_t, uint64_t))v0[167];
  v9 = v0[155];
  v10 = v0[152];
  sub_23F384A80();

  v8(v9, v10);
  sub_23F49D008(v0[163], v0[172], v0[173], v0[174], v0[170], v11, v12, v13, v16, v17, v18, v19, v20[0], v20[1], v20[2], v20[3], v20[4], v20[5], v20[6],
    v20[7]);
  sub_23F362D18();
  v14 = (_QWORD *)swift_task_alloc();
  v0[177] = v14;
  *v14 = v0;
  v14[1] = sub_23F494D0C;
  return sub_23F495AD4(v0[163], v0[172], v0[136], v0[137], v0[173], v0[174]);
}

uint64_t sub_23F494D0C()
{
  sub_23F3B1998();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F494D58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[172];
  v2 = v0[171];
  v3 = v0[162];
  v4 = v0[142];
  sub_23F49699C(v0[135], v4);
  swift_retain();
  sub_23F485ACC(v1, v4, v3, v0 + 87);
  v0[178] = v2;
  return swift_asyncLet_finish();
}

uint64_t sub_23F494E04()
{
  return sub_23F362A4C();
}

uint64_t sub_23F494E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 1288);
  v2 = *(_QWORD *)(v0 + 1208);
  v3 = *(_QWORD *)(v0 + 1168);
  v4 = *(_QWORD *)(v0 + 1160);
  v5 = *(_QWORD *)(v0 + 1072);
  swift_release();
  swift_release();
  sub_23F383EDC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_23F3DDBDC();
  sub_23F4952B0(v1, "JointResolver.resolve");
  swift_release();
  sub_23F3DDBDC();
  v6 = *(_OWORD *)(v0 + 696);
  v7 = *(_OWORD *)(v0 + 712);
  v8 = *(_OWORD *)(v0 + 728);
  *(_QWORD *)(v5 + 48) = *(_QWORD *)(v0 + 744);
  *(_OWORD *)(v5 + 16) = v7;
  *(_OWORD *)(v5 + 32) = v8;
  *(_OWORD *)v5 = v6;
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F3666D4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F494F78()
{
  return swift_asyncLet_finish();
}

uint64_t sub_23F494F90()
{
  return sub_23F362A4C();
}

uint64_t sub_23F494F9C()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;

  sub_23F3D9A84();
  swift_release();
  sub_23F496B6C();
  sub_23F6190DC();
  sub_23F441468();
  sub_23F441468();
  v3 = sub_23F619E8C();
  v4 = sub_23F61C628();
  if (sub_23F3B1E8C(v4))
  {
    v5 = (uint8_t *)sub_23F366668();
    v6 = (_QWORD *)sub_23F366668();
    *(_DWORD *)v5 = 138412290;
    sub_23F441468();
    v7 = _swift_stdlib_bridgeErrorToNSError();
    sub_23F496B08(v7);
    *v6 = 12;
    sub_23F3665E8();
    sub_23F3665E8();
    sub_23F38485C(&dword_23F35A000, v3, v2, "JointResolver error in JR inference call %@", v5);
    sub_23F35D2E8(&qword_256E6FAB0);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F3665E8();
  sub_23F3665E8();
  sub_23F496A70();
  sub_23F496BD4();
  swift_willThrow();
  sub_23F3667A8();
  sub_23F383EDC();
  sub_23F3DDBDC();
  sub_23F482A38();
  sub_23F496A28();
  sub_23F4952B0(v1, "JointResolver.resolve");
  sub_23F3667A8();
  sub_23F4967B8((uint64_t)&unk_256E75508);
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F366708();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F3666DC();
  return sub_23F3D995C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F495120()
{
  return sub_23F362A4C();
}

uint64_t sub_23F49512C()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;

  sub_23F3D9A84();
  swift_release();
  sub_23F496B6C();
  sub_23F6190DC();
  sub_23F441468();
  sub_23F441468();
  v3 = sub_23F619E8C();
  v4 = sub_23F61C628();
  if (sub_23F3B1E8C(v4))
  {
    v5 = (uint8_t *)sub_23F366668();
    v6 = (_QWORD *)sub_23F366668();
    *(_DWORD *)v5 = 138412290;
    sub_23F441468();
    v7 = _swift_stdlib_bridgeErrorToNSError();
    sub_23F496B08(v7);
    *v6 = 12;
    sub_23F3665E8();
    sub_23F3665E8();
    sub_23F38485C(&dword_23F35A000, v3, v2, "JointResolver error in JR inference call %@", v5);
    sub_23F35D2E8(&qword_256E6FAB0);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F3665E8();
  sub_23F3665E8();
  sub_23F496A70();
  sub_23F496BD4();
  swift_willThrow();
  sub_23F3667A8();
  sub_23F383EDC();
  sub_23F3DDBDC();
  sub_23F482A38();
  sub_23F496A28();
  sub_23F4952B0(v1, "JointResolver.resolve");
  sub_23F3667A8();
  sub_23F4967B8((uint64_t)&unk_256E75508);
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F366708();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F3666DC();
  return sub_23F3D995C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F4952B0(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  NSObject *v14;
  char v15;
  char v16;
  const char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_signpost_id_t v23;
  _BYTE v24[4];
  int v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a2;
  v2 = sub_23F619E50();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_23F619E20();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v24[-v11];
  if (qword_256E6F080 != -1)
    swift_once();
  v13 = sub_23F619E44();
  sub_23F361498(v13, (uint64_t)qword_256E80338);
  v14 = sub_23F619E38();
  sub_23F619E5C();
  v25 = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x24BEE7810])
    {
      v15 = 0;
      v16 = 0;
      v17 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
      v17 = "%s";
      v16 = 2;
      v15 = 1;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v12, v6);
    v19 = sub_23F366668();
    v28 = sub_23F366668();
    *(_BYTE *)v19 = v16;
    *(_BYTE *)(v19 + 1) = v15;
    *(_WORD *)(v19 + 2) = 2080;
    v20 = sub_23F61C8F8();
    sub_23F37AE00(v20, v21, &v28);
    v27 = v22;
    sub_23F61C790();
    sub_23F3837B0();
    v23 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v14, (os_signpost_type_t)v25, v23, v26, v17, (uint8_t *)v19, 0xCu);
    sub_23F496AF8();
    sub_23F366530();
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t sub_23F495568()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

void sub_23F495580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  BOOL v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v0 = sub_23F4962A0();
  v1 = 0;
  v21 = v0 + 64;
  v24 = v0;
  sub_23F496AC4();
  v22 = v2;
  if (!v3)
    goto LABEL_3;
LABEL_2:
  sub_23F496C6C();
  v25 = v4;
  for (i = v5 | (v1 << 6); ; i = __clz(__rbit64(v8)) + (v1 << 6))
  {
    v11 = *(void **)(*(_QWORD *)(v24 + 56) + 8 * i);
    sub_23F3B1EA4();
    v12 = v11;
    v13 = objc_msgSend(v12, sel_multiArrayValue);
    if (v13)
    {
      v14 = v13;
      v15 = objc_msgSend(v13, sel_shape);
      sub_23F3C2EA0(0, (unint64_t *)&qword_256E75040);
      v16 = sub_23F61C3DC();

      sub_23F4935B0(v16);
      v18 = v17;
      sub_23F362D18();
      *(_QWORD *)(v23 + 24) = v18;
      sub_23F35D2E8(&qword_256E70580);
      sub_23F3EC7C8();
      sub_23F61C088();
      sub_23F3837B0();
      sub_23F61C8E0();
      swift_bridgeObjectRelease();
      sub_23F496B34();
      sub_23F496368(v14);
      sub_23F61C280();
      sub_23F3837B0();
      sub_23F389B44();
      sub_23F61C280();
      sub_23F384120();
      sub_23F61C280();
      sub_23F496AE8();
      sub_23F362D18();
      sub_23F496430(v14, MEMORY[0x24BEE4AF8]);
      sub_23F61C280();
      sub_23F362D18();
      sub_23F496AE8();
      sub_23F362D18();
      sub_23F389B44();

    }
    else
    {
      sub_23F496B34();
      v19 = v12;
      v20 = objc_msgSend(v19, sel_description);
      sub_23F61C10C();

      sub_23F61C280();
      sub_23F384120();
      sub_23F496AE8();
      sub_23F362D18();
      sub_23F389B44();
    }

    if (v25)
      goto LABEL_2;
LABEL_3:
    v7 = __OFADD__(v1++, 1);
    if (v7)
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v1 >= v22)
      goto LABEL_29;
    v8 = *(_QWORD *)(v21 + 8 * v1);
    if (!v8)
      break;
LABEL_19:
    v25 = (v8 - 1) & v8;
  }
  sub_23F496C60();
  if (v9 == v7)
    goto LABEL_29;
  sub_23F496C54();
  if (v8)
    goto LABEL_18;
  sub_23F496C60();
  if (v9 == v7)
    goto LABEL_29;
  sub_23F496C54();
  if (v8)
    goto LABEL_18;
  sub_23F496C60();
  if (v9 == v7)
    goto LABEL_29;
  sub_23F496C54();
  if (v8)
    goto LABEL_18;
  sub_23F496C60();
  if (v9 == v7)
  {
LABEL_29:
    swift_release();
    (*(void (**)(_QWORD, unint64_t))(v23 + 8))(0, 0xE000000000000000);
    return;
  }
  sub_23F496C54();
  if (v8)
  {
LABEL_18:
    v1 = v10;
    goto LABEL_19;
  }
  while (1)
  {
    v1 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v1 >= v22)
      goto LABEL_29;
    v8 = *(_QWORD *)(v21 + 8 * v1);
    ++v10;
    if (v8)
      goto LABEL_19;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_23F495914()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_23F49592C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23F495944()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  swift_retain();
  return sub_23F3B15DC();
}

uint64_t sub_23F495980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  sub_23F61530C(*(_QWORD *)(v0 + 24));
  sub_23F49CBB4();
  sub_23F3667A8();
  v1 = sub_23F3C85C0();
  return v2(v1);
}

uint64_t sub_23F495A14(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_23F495A6C;
  return v5();
}

uint64_t sub_23F495A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v8 = *v4;
  v9 = *v4;
  swift_task_dealloc();
  if (!v3)
  {
    v10 = *(_QWORD **)(v8 + 16);
    *v10 = a1;
    v10[1] = a2;
    v10[2] = a3;
  }
  return sub_23F496B4C(*(uint64_t (**)(void))(v9 + 8));
}

uint64_t sub_23F495AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v7 = sub_23F619E98();
  v6[12] = v7;
  v6[13] = *(_QWORD *)(v7 - 8);
  v6[14] = sub_23F366654();
  v6[15] = sub_23F3666CC();
  v8 = sub_23F618B90();
  v6[16] = v8;
  v6[17] = *(_QWORD *)(v8 - 8);
  v6[18] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F495B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  void *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BE57488], v3);
  v4 = sub_23F618B84();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) != 0)
  {
    sub_23F496C0C((uint64_t)&unk_256E754B0);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v5;
    *v5 = v0;
    v5[1] = sub_23F495C5C;
    return sub_23F496B4C(v11);
  }
  else
  {
    v7 = *(void **)(v0 + 112);
    sub_23F6190DC();
    sub_23F619E8C();
    v8 = sub_23F3B1A04();
    if (sub_23F3F0E3C(v8))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F3F0DF0(&dword_23F35A000, v9, v10, "jointResolverCurareLogging feature flag is disabled.");
      sub_23F366530();
    }

    sub_23F43A30C();
    sub_23F496C20();
    sub_23F362CC8();
    sub_23F3666DC();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23F495C5C(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);
  uint64_t v5;

  v5 = *v1;
  *(_QWORD *)(v5 + 160) = a1;
  swift_task_dealloc();
  v4 = (uint64_t (*)(void))((char *)&dword_256E754B8 + dword_256E754B8);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 168) = v2;
  *v2 = v5;
  v2[1] = sub_23F495CD8;
  return sub_23F362888(v4);
}

uint64_t sub_23F495CD8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = a1;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F495D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 160);
  v9 = *(void **)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  sub_23F61724C();
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 32) = v3;
  *(_QWORD *)(v0 + 40) = v4;
  sub_23F496740();
  sub_23F49677C();
  sub_23F617BA0();
  sub_23F617240();
  sub_23F362D08();
  sub_23F362D18();
  sub_23F384120();
  sub_23F6190DC();
  sub_23F619E8C();
  v5 = sub_23F3B1A04();
  if (sub_23F3F0E3C(v5))
  {
    *(_WORD *)sub_23F366668() = 0;
    sub_23F3F0DF0(&dword_23F35A000, v6, v7, "successfully logged JointResolverCurareEvent in FS.");
    sub_23F366530();
  }

  sub_23F43A30C();
  sub_23F496C20();
  sub_23F362CC8();
  sub_23F3666DC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F495E4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

void sub_23F495E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t i;
  uint64_t v8;
  unint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;

  sub_23F3D9A84();
  v54 = v0;
  v1 = sub_23F4962A0();
  v58 = 0;
  v52 = v1 + 64;
  v55 = v1;
  sub_23F496AC4();
  v53 = v2;
  v3 = MEMORY[0x24BEE4B00];
  if (!v4)
    goto LABEL_3;
LABEL_2:
  sub_23F496C6C();
  v57 = v5;
  for (i = v6 | (v58 << 6); ; i = __clz(__rbit64(v9)) + (v58 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(v55 + 48) + 16 * i);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(void **)(*(_QWORD *)(v55 + 56) + 8 * i);
    sub_23F617BA0();
    v19 = v18;
    v20 = objc_msgSend(v19, sel_multiArrayValue);
    if (v20)
    {
      v56 = v20;
      sub_23F496430(v20, MEMORY[0x24BEE4AF8]);
      v22 = v21;
      v24 = v23;
      swift_isUniquelyReferenced_nonNull_native();
      v25 = v16;
      v26 = v17;
      sub_23F496BA0(v16, v17);
      sub_23F496BA8();
      if (v11)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      v29 = v27;
      v30 = v28;
      sub_23F35D2E8(&qword_256E6FCB0);
      if ((sub_23F496BE0() & 1) != 0)
      {
        v31 = sub_23F496BA0(v25, v26);
        if ((v30 & 1) != (v32 & 1))
          goto LABEL_44;
        v29 = v31;
      }
      if ((v30 & 1) != 0)
      {
        sub_23F496B80();
      }
      else
      {
        sub_23F496A9C();
        *v44 = v25;
        v44[1] = v26;
        v45 = (_QWORD *)(*(_QWORD *)(v3 + 56) + 16 * v29);
        *v45 = v22;
        v45[1] = v24;
        v46 = *(_QWORD *)(v3 + 16);
        v11 = __OFADD__(v46, 1);
        v47 = v46 + 1;
        if (v11)
          goto LABEL_48;
        *(_QWORD *)(v3 + 16) = v47;
        sub_23F3B1EA4();
      }
      sub_23F384450();
      sub_23F3B5F04();

    }
    else
    {
      v19 = v19;
      v33 = objc_msgSend(v19, sel_description);
      v34 = sub_23F61C10C();
      v36 = v35;

      swift_isUniquelyReferenced_nonNull_native();
      v37 = v16;
      sub_23F496BA0(v16, v17);
      sub_23F496BA8();
      if (v11)
        goto LABEL_47;
      v40 = v38;
      v41 = v39;
      sub_23F35D2E8(&qword_256E6FCB0);
      if ((sub_23F496BE0() & 1) != 0)
      {
        v42 = sub_23F496BA0(v37, v17);
        if ((v41 & 1) != (v43 & 1))
        {
LABEL_44:
          sub_23F61CC94();
          return;
        }
        v40 = v42;
      }
      if ((v41 & 1) != 0)
      {
        sub_23F496B80();
      }
      else
      {
        sub_23F496A9C();
        *v48 = v37;
        v48[1] = v17;
        v49 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v40);
        *v49 = v34;
        v49[1] = v36;
        v50 = *(_QWORD *)(v3 + 16);
        v11 = __OFADD__(v50, 1);
        v51 = v50 + 1;
        if (v11)
          goto LABEL_49;
        *(_QWORD *)(v3 + 16) = v51;
        sub_23F617BA0();
      }
      sub_23F384450();
      swift_bridgeObjectRelease();
    }

    if (v57)
      goto LABEL_2;
LABEL_3:
    v8 = v58 + 1;
    if (__OFADD__(v58, 1))
      goto LABEL_46;
    if (v8 >= v53)
      goto LABEL_43;
    v9 = *(_QWORD *)(v52 + 8 * v8);
    ++v58;
    if (!v9)
    {
      sub_23F496B90();
      if (v10 == v11)
        goto LABEL_43;
      sub_23F496B24();
      if (!v9)
      {
        sub_23F496B90();
        if (v10 == v11)
          goto LABEL_43;
        sub_23F496B24();
        if (!v9)
        {
          sub_23F496B90();
          if (v10 == v11)
            goto LABEL_43;
          sub_23F496B24();
          if (!v9)
            break;
        }
      }
    }
LABEL_21:
    v57 = (v9 - 1) & v9;
  }
  v13 = v12 + 4;
  if (v13 >= v53)
  {
LABEL_43:
    swift_release();
    (*(void (**)(uint64_t))(v54 + 8))(v3);
    return;
  }
  v9 = *(_QWORD *)(v52 + 8 * v13);
  if (v9)
  {
    v58 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v58 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v58 >= v53)
      goto LABEL_43;
    sub_23F496B24();
    v13 = v14 + 1;
    if (v9)
      goto LABEL_21;
  }
LABEL_50:
  __break(1u);
}

uint64_t sub_23F49623C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23F496254()
{
  uint64_t v0;

  swift_release();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for JointResolver()
{
  return objc_opt_self();
}

uint64_t sub_23F4962A0()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_featureNames);
  v2 = sub_23F61C538();

  sub_23F3C2EA0(0, &qword_256E754D0);
  v3 = sub_23F61BFEC();
  sub_23F3D9E08();
  v4 = sub_23F493728(v3, v2, v0);
  sub_23F3837B0();
  return v4;
}

uint64_t sub_23F496368(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(a1, sel_dataType);
  if (v1 == (id)131104)
    return 0x3233746E49;
  if (v1 == (id)65568)
    return 0x323374616F6C46;
  v2 = 0x6E776F6E6B6E553CLL;
  if (v1 == (id)65552)
    v2 = 0x363174616F6C46;
  if (v1 == (id)65600)
    return 0x656C62756F44;
  else
    return v2;
}

void sub_23F496430(void *a1, unint64_t a2)
{
  sub_23F49643C(a1, a2, (void (*)(void *, unint64_t))sub_23F496430);
}

void sub_23F49643C(void *a1, unint64_t a2, void (*a3)(void *, unint64_t))
{
  id v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;

  v5 = objc_msgSend(a1, sel_shape);
  sub_23F3C2EA0(0, (unint64_t *)&qword_256E75040);
  v6 = sub_23F61C3DC();

  if (v6 >> 62)
  {
    sub_23F617BA0();
    v7 = sub_23F61CA6C();
    sub_23F384120();
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_23F384120();
  if (a2 >> 62)
  {
    sub_23F617BA0();
    v8 = sub_23F61CA6C();
    sub_23F362D08();
  }
  else
  {
    v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v7 == v8)
  {
    v9 = (void *)sub_23F61C3D0();
    v10 = objc_msgSend(a1, sel_objectForKeyedSubscript_, v9);

    v11 = objc_msgSend(v10, sel_description);
    sub_23F61C10C();

LABEL_18:
    sub_23F3C85C0();
    return;
  }
  v12 = objc_msgSend(a1, sel_shape);
  v13 = sub_23F61C3DC();

  sub_23F3753DC(v8, (v13 & 0xC000000000000001) == 0, v13);
  if ((v13 & 0xC000000000000001) != 0)
    v14 = (id)MEMORY[0x24266FE14](v8, v13);
  else
    v14 = *(id *)(v13 + 8 * v8 + 32);
  v15 = v14;
  swift_bridgeObjectRelease();
  v16 = sub_23F61C568();

  if ((v16 & 0x8000000000000000) == 0)
  {
    if (v16)
    {
      v17 = 0;
      do
      {
        v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v17);
        sub_23F617BA0();
        v19 = v18;
        MEMORY[0x24266F8D4]();
        if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23F61C400();
        ++v17;
        sub_23F61C424();
        sub_23F61C3F4();

        a3(a1, a2);
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F3B5F04();
        if (v17 < v16)
          sub_23F389B44();
      }
      while (v16 != v17);
    }
    sub_23F389B44();
    goto LABEL_18;
  }
  __break(1u);
}

unint64_t sub_23F496740()
{
  unint64_t result;

  result = qword_256E754C0;
  if (!qword_256E754C0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for JointResolution.JointResolverCurareEvent, &type metadata for JointResolution.JointResolverCurareEvent);
    atomic_store(result, (unint64_t *)&qword_256E754C0);
  }
  return result;
}

unint64_t sub_23F49677C()
{
  unint64_t result;

  result = qword_256E754C8;
  if (!qword_256E754C8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for JointResolution.JointResolverCurareEvent, &type metadata for JointResolution.JointResolverCurareEvent);
    atomic_store(result, (unint64_t *)&qword_256E754C8);
  }
  return result;
}

uint64_t sub_23F4967B8(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_23F4967C8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F4967F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23F496840;
  v2 = sub_23F3C85C0();
  return sub_23F49592C(v2, v3);
}

uint64_t sub_23F496840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_23F3629E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(a1, a2, a3);
}

uint64_t sub_23F49688C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F4968B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23F362820;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256E75500 + dword_256E75500))(a1, v4);
}

unint64_t sub_23F496920()
{
  unint64_t result;

  result = qword_256E75518;
  if (!qword_256E75518)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for JointResolution.CandidateIdentifier, &type metadata for JointResolution.CandidateIdentifier);
    atomic_store(result, (unint64_t *)&qword_256E75518);
  }
  return result;
}

uint64_t sub_23F49695C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E6FB20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F49699C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s10ModelInputVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F4969E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E75530;
  if (!qword_256E75530)
  {
    v1 = type metadata accessor for PlanResolutionCachableModel();
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlanResolutionCachableModel, v1);
    atomic_store(result, (unint64_t *)&qword_256E75530);
  }
  return result;
}

void sub_23F496A70()
{
  void *v0;

}

void sub_23F496A9C()
{
  unint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
}

uint64_t sub_23F496AE8()
{
  return sub_23F61C280();
}

uint64_t sub_23F496AF8()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F496B08(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 1048) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F496B34()
{
  return sub_23F61C280();
}

uint64_t sub_23F496B4C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F496B58(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_23F617BA0();
}

void sub_23F496B6C()
{
  sub_23F49D370();
}

uint64_t sub_23F496B80()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F496BA0(uint64_t a1, uint64_t a2)
{
  return sub_23F3754D4(a1, a2);
}

uint64_t sub_23F496BB8()
{
  return sub_23F61C790();
}

uint64_t sub_23F496BC8()
{
  return sub_23F4967B8(0);
}

uint64_t sub_23F496BD4()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23F496BE0()
{
  return sub_23F61CA18();
}

uint64_t sub_23F496BE8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F496BF4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3754D4(v1, v0);
}

void sub_23F496C00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F37AE00(v4, v3, a3);
}

uint64_t sub_23F496C0C@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned int *)(a1 + 4);
}

uint64_t sub_23F496C20()
{
  return swift_task_dealloc();
}

uint64_t sub_23F496C44()
{
  return sub_23F619E8C();
}

uint64_t sub_23F496C4C()
{
  return sub_23F6190DC();
}

uint64_t sub_23F496C80()
{
  uint64_t v0;

  v0 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v0);
  sub_23F616FD0();
  swift_bridgeObjectRelease();
  return sub_23F619D54();
}

uint64_t sub_23F496D3C(char a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD v113[4];
  uint64_t v114[5];

  v94 = a2;
  v5 = sub_23F619E98();
  v110 = *(_QWORD *)(v5 - 8);
  v111 = v5;
  sub_23F362850();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v100 = (char *)&v81 - v10;
  sub_23F35D2E8(&qword_256E75538);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  v97 = v12;
  sub_23F35D2E8(&qword_256E75540);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v96 = v14;
  sub_23F35D2E8(&qword_256E75548);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F36285C();
  v95 = v16;
  v99 = sub_23F6198EC();
  v98 = *(_QWORD *)(v99 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F36285C();
  v102 = v18;
  v92 = sub_23F619568();
  v107 = *(_QWORD *)(v92 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F36285C();
  v101 = v20;
  v21 = sub_23F619700();
  v105 = *(_QWORD *)(v21 - 8);
  v106 = v21;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F36285C();
  v109 = v23;
  sub_23F35D2E8(&qword_256E75550);
  sub_23F362850();
  v25 = MEMORY[0x24BDAC7A8](v24);
  v93 = (char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v81 - v27;
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23F6196D0();
  v103 = *(_QWORD *)(v32 - 8);
  v104 = v32;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F36285C();
  v108 = v34;
  sub_23F5FC520(0x6874617065646F63, 0xEB00000000736469);
  if (!v35)
    goto LABEL_9;
  v36 = sub_23F497844(v35);
  if (!v37)
    goto LABEL_9;
  v38 = a1 & 1;
  v113[0] = v36;
  v113[1] = v37;
  v39 = (a1 & 1) != 0 ? 0x800000023F636EC0 : 0x800000023F636EF0;
  v114[0] = 0xD000000000000024;
  v114[1] = v39;
  sub_23F38813C();
  v40 = sub_23F61C7FC();
  v41 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v40 & 1) != 0)
  {
    v83 = v28;
    v84 = v38;
    v42 = a3[10];
    v43 = a3[11];
    v44 = a3[13];
    v91 = a3[12];
    v45 = a3[14];
    v90 = a3[15];
    v46 = a3[16];
    v47 = a3[17];
    sub_23F619D0C();
    v88 = v42;
    v86 = v43;
    v87 = v44;
    v85 = v46;
    v89 = v47;
    sub_23F4978B0(v42, v43);
    sub_23F4978F0();
    v48 = v112;
    sub_23F619D30();
    if (v48)
    {
      return sub_23F497A38(v88, v86);
    }
    else
    {
      v81 = v45;
      v82 = v41;
      sub_23F6196C4();
      sub_23F616FF4();
      v53 = sub_23F617000();
      sub_23F40B3E8((uint64_t)v31, v54, v55, v53);
      sub_23F6196B8();
      v56 = sub_23F619D6C();
      MEMORY[0x24BDAC7A8](v56);
      sub_23F4979DC();
      *(_QWORD *)(v57 - 16) = v94;
      v58 = (uint64_t)v83;
      sub_23F619DC0();
      v112 = 0;
      sub_23F36196C(v58, 0, 1, v56);
      sub_23F6196AC();
      sub_23F6196F4();
      v59 = v101;
      sub_23F61955C();
      v60 = v86;
      LOBYTE(v114[0]) = v86 == 1;
      sub_23F619550();
      sub_23F61952C();
      if (v60 == 1)
      {
        sub_23F619538();
      }
      else
      {
        v48 = v87;
        sub_23F617BA0();
        sub_23F619538();
        sub_23F617BA0();
      }
      v61 = v102;
      v62 = sub_23F619544();
      if (v60 == 1)
      {
        v63 = v92;
      }
      else
      {
        v48 = v60;
        v64 = v90;
        sub_23F617BA0();
        v65 = v81;
        v62 = sub_23F497A38(v88, v48);
        if (v64)
        {
          MEMORY[0x24BDAC7A8](v62);
          sub_23F4979DC();
          *(_QWORD *)(v66 - 16) = v65;
          *(_QWORD *)(v66 - 8) = v64;
          sub_23F4979C8();
          swift_bridgeObjectRelease();
          sub_23F497A14();
          v62 = sub_23F619520();
        }
        v63 = v92;
      }
      MEMORY[0x24BDAC7A8](v62);
      sub_23F4979DC();
      *(_BYTE *)(v67 - 16) = v84;
      sub_23F4979C8();
      v112 = v48;
      sub_23F497A14();
      v68 = v109;
      sub_23F6196E8();
      sub_23F35D2E8(&qword_256E75560);
      v69 = v107;
      v70 = (*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
      v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = xmmword_23F61E7E0;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v69 + 16))(v71 + v70, v59, v63);
      sub_23F6196DC();
      sub_23F6198E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v95, v108, v104);
      sub_23F4979EC();
      sub_23F6194B4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 16))(v96, v68, v106);
      sub_23F4979EC();
      sub_23F61973C();
      v72 = v97;
      sub_23F619D3C();
      v73 = sub_23F619D48();
      sub_23F40B3E8(v72, v74, v75, v73);
      sub_23F6198D4();
      v76 = v100;
      sub_23F6190DC();
      v77 = sub_23F619E8C();
      v78 = sub_23F61C61C();
      if (os_log_type_enabled(v77, v78))
      {
        v79 = (uint8_t *)sub_23F366668();
        v114[0] = sub_23F366668();
        *(_DWORD *)v79 = 136315138;
        sub_23F37AE00(0xD000000000000024, v82, v114);
        v114[4] = v80;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23F35A000, v77, v78, "Emitting triggered log for codepathid %s", v79, 0xCu);
        swift_arrayDestroy();
        sub_23F366530();
      }

      (*(void (**)(char *, uint64_t))(v110 + 8))(v76, v111);
      sub_23F35EA9C(v113, v113[3]);
      sub_23F619DB4();
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v61, v99);
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v59, v63);
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v109, v106);
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v108, v104);
      return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v113);
    }
  }
  else
  {
LABEL_9:
    sub_23F6190DC();
    v50 = sub_23F619E8C();
    v51 = sub_23F61C61C();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)sub_23F366668();
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_23F35A000, v50, v51, "Not emitting triggered log as the device is not enrolled in an experiment with the necessary codepathid", v52, 2u);
      sub_23F366530();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v9, v111);
  }
}

uint64_t sub_23F4976F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F617000();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, a2, v6);
  sub_23F36196C((uint64_t)v5, 0, 1, v6);
  return sub_23F619D54();
}

uint64_t sub_23F4977B0()
{
  uint64_t v0;

  v0 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v0);
  sub_23F616FD0();
  return sub_23F619D54();
}

uint64_t sub_23F497844(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_stringValue);

  if (!v2)
    return 0;
  v3 = sub_23F61C10C();

  return v3;
}

uint64_t sub_23F4978B0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    sub_23F617BA0();
    sub_23F617BA0();
    return sub_23F617BA0();
  }
  return result;
}

unint64_t sub_23F4978F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E75558;
  if (!qword_256E75558)
  {
    v1 = sub_23F619D0C();
    result = MEMORY[0x242670A44](MEMORY[0x24BE59800], v1);
    atomic_store(result, (unint64_t *)&qword_256E75558);
  }
  return result;
}

uint64_t sub_23F497930(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F497970(uint64_t a1)
{
  uint64_t v1;

  return sub_23F4976F8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23F497988()
{
  return sub_23F496C80();
}

uint64_t sub_23F4979A0()
{
  return sub_23F4977B0();
}

ValueMetadata *type metadata accessor for JointResolverBiomeLogger()
{
  return &type metadata for JointResolverBiomeLogger;
}

uint64_t sub_23F4979C8()
{
  return sub_23F619DC0();
}

uint64_t sub_23F4979EC()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F36196C(v1, 0, 1, v0);
  return v1;
}

uint64_t sub_23F497A14()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F36196C(v0, 0, 1, v1);
  return v0;
}

uint64_t sub_23F497A38(uint64_t a1, uint64_t a2)
{
  return sub_23F497930(a1, a2);
}

ValueMetadata *type metadata accessor for JointResolverError()
{
  return &type metadata for JointResolverError;
}

uint64_t sub_23F497A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_signpost_type_t v14;
  uint8_t *v15;
  os_signpost_id_t v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[5];
  uint64_t v21[5];

  v1 = v0;
  v2 = sub_23F3B1728();
  v20[2] = *(_QWORD *)(v2 - 8);
  v20[3] = v2;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F38F964();
  v4 = sub_23F3E27A8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F362AAC();
  v8 = v6 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v20 - v10;
  if (qword_256E6F080 != -1)
    swift_once();
  v12 = sub_23F3E27B0();
  sub_23F49B9D8(v12, (uint64_t)qword_256E80338);
  sub_23F619DFC();
  v13 = sub_23F619E38();
  v14 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v15 = (uint8_t *)sub_23F366668();
    *(_WORD *)v15 = 0;
    v16 = sub_23F619E08();
    sub_23F44D498(&dword_23F35A000, v13, v14, v16, "JointResolverFeaturizer.init", "", v15);
    sub_23F366530();
  }

  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v8, v11, v4);
  sub_23F49BA40();
  sub_23F3668A0();
  v17 = sub_23F619E68();
  sub_23F383E64((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23F6188F0();
  v18 = (void *)sub_23F6188E4();
  v21[3] = sub_23F6188CC();
  v21[4] = (uint64_t)&off_250FD8478;
  sub_23F36145C(v21);
  sub_23F6188D8();

  sub_23F49B97C((uint64_t)v21, v1 + 24, &qword_256E75650);
  type metadata accessor for CandidateSimilarityClient();
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_23F3E0280();
  sub_23F499E44(v17, "JointResolverFeaturizer.init");
  sub_23F3667A8();
  return v1;
}

uint64_t sub_23F497DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6[16] = a5;
  v6[17] = v5;
  v6[15] = a1;
  v7 = type metadata accessor for JointResolution.CandidateInteraction(0);
  v6[18] = v7;
  v6[19] = *(_QWORD *)(v7 - 8);
  v6[20] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75640);
  v6[21] = sub_23F366654();
  v6[22] = sub_23F3666CC();
  v8 = sub_23F3B1728();
  v6[23] = v8;
  v6[24] = *(_QWORD *)(v8 - 8);
  v6[25] = sub_23F366654();
  v6[26] = sub_23F3666CC();
  v9 = sub_23F618860();
  v6[27] = v9;
  v6[28] = *(_QWORD *)(v9 - 8);
  v6[29] = sub_23F366654();
  v6[30] = sub_23F3666CC();
  v6[31] = type metadata accessor for JointResolution.DeviceContext();
  v6[32] = sub_23F366654();
  v6[33] = sub_23F3666CC();
  v10 = type metadata accessor for JointResolution.TupleInteraction(0);
  v6[34] = v10;
  v6[35] = *(_QWORD *)(v10 - 8);
  v6[36] = sub_23F366578();
  v11 = sub_23F616FC4();
  v6[37] = v11;
  v6[38] = *(_QWORD *)(v11 - 8);
  v6[39] = sub_23F366578();
  v12 = sub_23F618854();
  v6[40] = v12;
  v6[41] = *(_QWORD *)(v12 - 8);
  v6[42] = sub_23F366654();
  v6[43] = sub_23F3666CC();
  type metadata accessor for JointResolverLocationSignalProvider();
  v6[44] = sub_23F366578();
  v13 = sub_23F618830();
  v6[45] = v13;
  v6[46] = *(_QWORD *)(v13 - 8);
  v6[47] = sub_23F366654();
  v6[48] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E75648);
  v6[49] = sub_23F366578();
  v14 = sub_23F618884();
  v6[50] = v14;
  v6[51] = *(_QWORD *)(v14 - 8);
  v6[52] = sub_23F366578();
  v15 = sub_23F3E27A8();
  v6[53] = v15;
  v6[54] = *(_QWORD *)(v15 - 8);
  v6[55] = sub_23F366654();
  v6[56] = sub_23F3666CC();
  return swift_task_switch();
}

uint64_t sub_23F497FA0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_signpost_type_t v5;
  uint8_t *v6;
  os_signpost_id_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  _DWORD *v62;
  _DWORD *v63;
  _DWORD *v64;
  _DWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t *v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  NSObject *v162;
  os_log_type_t v163;
  uint8_t *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void (*v208)(uint64_t, uint64_t, uint64_t);
  void (*v209)(uint64_t, uint64_t, _QWORD);
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  __int128 v220;
  uint64_t v221;
  uint64_t v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  _QWORD *v226;
  __int128 v227;
  uint64_t v228;
  __int128 v229;
  uint64_t v230;
  __int128 v231;
  uint64_t v232;
  uint64_t v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  uint64_t v237;
  char v238;

  v1 = v0;
  v2 = (uint64_t)(v0 + 7);
  if (qword_256E6F080 != -1)
    goto LABEL_147;
LABEL_2:
  v3 = sub_23F3E27B0();
  sub_23F49B9D8(v3, (uint64_t)qword_256E80338);
  sub_23F619DFC();
  v4 = sub_23F619E38();
  v5 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v6 = (uint8_t *)sub_23F366668();
    *(_WORD *)v6 = 0;
    v7 = sub_23F619E08();
    sub_23F44D498(&dword_23F35A000, v4, v5, v7, "JointResolverFeaturizer.fetchInteractions", "", v6);
    sub_23F366530();
  }
  v8 = v1[55];
  v9 = v1[56];
  v11 = v1[53];
  v10 = v1[54];
  v12 = v1[17];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v9, v11);
  sub_23F49BA40();
  sub_23F3668A0();
  v184 = sub_23F619E68();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  sub_23F49BA2C(v12 + 24, v13, &qword_256E75650);
  if (!v1[10])
  {
    sub_23F3625D8(v2, &qword_256E75650);
    sub_23F366414();
    sub_23F362D64();
    sub_23F49B9A4(v37, 0xD000000000000014);
LABEL_52:
    sub_23F499E44(v184, "JointResolverFeaturizer.fetchInteractions");
    sub_23F366748();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v1[1])();
  }
  v14 = v1[15];
  v181 = v1 + 2;
  sub_23F362678((__int128 *)v2, (uint64_t)(v1 + 2));
  v226 = v1;
  v193 = (uint64_t)(v1 + 15);
  v215 = *(_QWORD *)(v14 + 16);
  if (v215)
  {
    v212 = v1[15] + 32;
    sub_23F3E0254();
    v15 = 0;
    v16 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v218 = v16;
      v2 = *(_QWORD *)(v212 + 8 * v15);
      v17 = *(_QWORD *)(v2 + 16);
      if (v17)
        break;
      sub_23F3668F4();
      v19 = MEMORY[0x24BEE4AF8];
LABEL_28:
      v32 = *(_QWORD *)(v19 + 16);
      sub_23F362D18();
      v16 = v218;
      if (v32)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3C0670();
          sub_23F376E28();
          v16 = v35;
        }
        v34 = *(_QWORD *)(v16 + 16);
        v33 = *(_QWORD *)(v16 + 24);
        v2 = v34 + 1;
        if (v34 >= v33 >> 1)
        {
          sub_23F493460(v33);
          sub_23F376E28();
          v16 = v36;
        }
        *(_QWORD *)(v16 + 16) = v2;
        *(_QWORD *)(v16 + 8 * v34 + 32) = v19;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (++v15 == v215)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_39;
      }
    }
    sub_23F3664B0();
    sub_23F3E0254();
    v18 = (_OWORD *)(v2 + 56);
    v19 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v21 = *((_QWORD *)v18 - 3);
      v20 = *((_QWORD *)v18 - 2);
      v22 = *((_QWORD *)v18 - 1);
      v229 = *v18;
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F3668F4();
      v23 = sub_23F61BFEC();
      v24 = !v21 && v20 == 0xE000000000000000;
      if (!v24 && (sub_23F3B1DD8() & 1) == 0
        || (v22 || (_QWORD)v229 != 0xE000000000000000) && (sub_23F3B1DD8() & 1) == 0)
      {
        break;
      }
      sub_23F4903B0(*((uint64_t *)&v229 + 1), v23);
      v26 = v25;
      sub_23F484ADC();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        goto LABEL_20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23F362D18();
LABEL_25:
      v18 = (_OWORD *)((char *)v18 + 40);
      if (!--v17)
      {
        sub_23F362D18();
        v1 = v226;
        goto LABEL_28;
      }
    }
    sub_23F484ADC();
    swift_bridgeObjectRelease();
LABEL_20:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F3C0670();
      sub_23F376E0C();
      v19 = v30;
    }
    v28 = *(_QWORD *)(v19 + 16);
    v27 = *(_QWORD *)(v19 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_23F493460(v27);
      sub_23F376E0C();
      v19 = v31;
    }
    *(_QWORD *)(v19 + 16) = v28 + 1;
    v29 = v19 + 40 * v28;
    *(_QWORD *)(v29 + 32) = v21;
    *(_QWORD *)(v29 + 40) = v20;
    *(_QWORD *)(v29 + 48) = v22;
    *(_OWORD *)(v29 + 56) = v229;
    goto LABEL_25;
  }
  v16 = MEMORY[0x24BEE4AF8];
LABEL_39:
  v38 = *(_QWORD *)(v16 + 16);
  v39 = MEMORY[0x24BEE4AF8];
  v219 = v16;
  if (v38)
  {
    v40 = v16;
    v41 = v1[46];
    v233 = MEMORY[0x24BEE4AF8];
    sub_23F37B4E4();
    v42 = 0;
    v221 = v40 + 32;
    v216 = v38;
    do
    {
      v43 = *(_QWORD *)(v221 + 8 * v42);
      v44 = *(_QWORD *)(v43 + 16);
      if (v44)
      {
        *(_QWORD *)&v234 = v39;
        sub_23F617BA0();
        sub_23F37B518();
        v2 = v234;
        v45 = v43 + 56;
        do
        {
          sub_23F617BA0();
          sub_23F617BA0();
          sub_23F61880C();
          *(_QWORD *)&v234 = v2;
          v46 = *(_QWORD *)(v2 + 16);
          if (v46 >= *(_QWORD *)(v2 + 24) >> 1)
          {
            sub_23F37B518();
            v2 = v234;
          }
          v47 = v1[48];
          v48 = v1[45];
          *(_QWORD *)(v2 + 16) = v46 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v41 + 32))(v2+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v41 + 72) * v46, v47, v48);
          v45 += 40;
          --v44;
        }
        while (v44);
        swift_bridgeObjectRelease();
        v39 = MEMORY[0x24BEE4AF8];
        v38 = v216;
      }
      else
      {
        v2 = v39;
      }
      v49 = *(_QWORD *)(v233 + 16);
      if (v49 >= *(_QWORD *)(v233 + 24) >> 1)
        sub_23F37B4E4();
      ++v42;
      *(_QWORD *)(v233 + 16) = v49 + 1;
      *(_QWORD *)(v233 + 8 * v49 + 32) = v2;
    }
    while (v42 != v38);
  }
  sub_23F35EA9C(v181, v1[5]);
  sub_23F618890();
  v52 = v1[49];
  v51 = v1[50];
  sub_23F38432C();
  v53 = sub_23F36195C(v52, 1, v51);
  if (v53 == 1)
  {
    v54 = v1[49];
    v55 = v1[25];
    sub_23F49B9FC();
    sub_23F3625D8(v54, &qword_256E75648);
    sub_23F619100();
    sub_23F619E8C();
    v56 = sub_23F3B1A04();
    if (sub_23F3F0E3C(v56))
    {
      v57 = (uint8_t *)sub_23F366668();
      *(_WORD *)v57 = 0;
      sub_23F4114BC(&dword_23F35A000, v55, (os_log_type_t)v2, "No interactions fetched", v57);
      sub_23F366530();
    }
    v58 = v1[24];

    sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
    v230 = MEMORY[0x24BEE4AF8];
    v196 = MEMORY[0x24BEE4AF8];
    goto LABEL_142;
  }
  v59 = v1[16];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[51] + 32))(v1[52], v1[49], v1[50]);
  v1[12] = v59;
  v1[13] = 0;
  sub_23F617BA0();
  sub_23F35D2E8(&qword_256E75658);
  sub_23F49B90C();
  sub_23F61B374();
  v60 = sub_23F61886C();
  v61 = (int *)MEMORY[0x24BE58120];
  v62 = (_DWORD *)MEMORY[0x24BE58100];
  v63 = (_DWORD *)MEMORY[0x24BE58110];
  v64 = (_DWORD *)MEMORY[0x24BE58128];
  v65 = (_DWORD *)MEMORY[0x24BE58108];
  v2 = MEMORY[0x24BE580F8];
  v185 = *(_QWORD *)(v60 + 16);
  if (!v185)
  {
    swift_bridgeObjectRelease();
    sub_23F49B9FC();
    v217 = *v61;
    LODWORD(v195) = *v63;
    HIDWORD(v195) = *v62;
    LODWORD(v192) = *v65;
    HIDWORD(v192) = *v64;
    sub_23F49B9BC();
    v68 = MEMORY[0x24BEE4AF8];
    goto LABEL_89;
  }
  v213 = v1[41];
  v173 = v1 + 14;
  v202 = v1[35];
  v204 = v1[38];
  v198 = v1[31];
  v200 = v1[34];
  v206 = v1[28];
  v182 = v60 + 32;
  v176 = v219 + 32;
  v217 = *MEMORY[0x24BE58120];
  LODWORD(v195) = *MEMORY[0x24BE58110];
  HIDWORD(v195) = *MEMORY[0x24BE58100];
  LODWORD(v192) = *MEMORY[0x24BE58108];
  HIDWORD(v192) = *MEMORY[0x24BE58128];
  sub_23F49B9BC();
  v68 = MEMORY[0x24BEE4AF8];
  v179 = v67;
  do
  {
    if ((unint64_t)v66 >= *(_QWORD *)(v67 + 16))
    {
      __break(1u);
LABEL_147:
      swift_once();
      goto LABEL_2;
    }
    if (v66 >= *(_QWORD *)(v219 + 16))
    {
      v161 = v66;
      v162 = v1[26];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23F38432C();
      sub_23F619100();
      sub_23F619E8C();
      v163 = sub_23F3B1A04();
      if (sub_23F3F0E3C(v163))
      {
        v164 = (uint8_t *)sub_23F366668();
        *(_DWORD *)v164 = 134217984;
        *v173 = v161;
        sub_23F61C790();
        sub_23F38485C(&dword_23F35A000, v162, (os_log_type_t)v2, "Row index %ld is not present in filteredTupleArray", v164);
        sub_23F366530();
      }
      v166 = v1[51];
      v165 = v1[52];
      v167 = v1[50];
      v168 = v1[44];
      v169 = v1[26];
      v170 = v1[24];

      sub_23F383F80(v169, *(uint64_t (**)(uint64_t, uint64_t))(v170 + 8));
      sub_23F366414();
      sub_23F362D64();
      sub_23F49B9A4(v171, 0xD00000000000002FLL);
      sub_23F3663AC(v168, (uint64_t (*)(_QWORD))type metadata accessor for JointResolverLocationSignalProvider);
      (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v165, v167);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v181);
      goto LABEL_52;
    }
    v69 = *(_QWORD *)(v182 + 8 * v66);
    v70 = *(_QWORD *)(v69 + 16);
    if (v70)
    {
      v188 = *(_QWORD *)(v182 + 8 * v66);
      v190 = v66;
      v71 = *(_QWORD *)(v176 + 8 * v66);
      v72 = v69 + ((*(unsigned __int8 *)(v213 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v213 + 80));
      sub_23F617BA0();
      sub_23F617BA0();
      v208 = *(void (**)(uint64_t, uint64_t, uint64_t))(v213 + 16);
      v210 = *(_QWORD *)(v213 + 72);
      do
      {
        v222 = v70;
        v197 = v68;
        v73 = v1[43];
        v75 = v1[39];
        v74 = v1[40];
        v76 = v1[37];
        v77 = v71;
        v78 = v1[33];
        v79 = v1;
        v80 = v1[30];
        v81 = v79[27];
        v208(v73, v72, v74);
        sub_23F61883C();
        sub_23F49C5D8((uint64_t)&v234);
        (*(void (**)(uint64_t, uint64_t))(v204 + 8))(v75, v76);
        v227 = v235;
        v231 = v234;
        v224 = v236;
        v82 = v237;
        LOBYTE(v75) = v238;
        sub_23F61883C();
        v83 = v78 + *(int *)(v198 + 20);
        v71 = v77;
        *(_OWORD *)v83 = v231;
        *(_OWORD *)(v83 + 16) = v227;
        *(_OWORD *)(v83 + 32) = v224;
        *(_QWORD *)(v83 + 48) = v82;
        *(_BYTE *)(v83 + 56) = v75;
        sub_23F617BA0();
        sub_23F618848();
        v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v206 + 88))(v80, v81);
        if (v84 == v217)
        {
          v91 = 5;
          v1 = v226;
          v68 = v197;
          v92 = v222;
        }
        else
        {
          v1 = v226;
          v68 = v197;
          v92 = v222;
          if (v84 == HIDWORD(v195))
          {
            v91 = 0;
          }
          else if (v84 == (_DWORD)v195)
          {
            v91 = 2;
          }
          else if (v84 == HIDWORD(v192))
          {
            v91 = 4;
          }
          else if (v84 == (_DWORD)v192)
          {
            v91 = 3;
          }
          else if (v84 == HIDWORD(v187))
          {
            v91 = 1;
          }
          else if (v84 == HIDWORD(v178))
          {
            v91 = 6;
          }
          else if (v84 == HIDWORD(v175))
          {
            v91 = 7;
          }
          else
          {
            sub_23F49BA34(v226[30], v226[27], v85, v86, v87, v88, v89, v90, v172, (uint64_t)v173, v175, v176, v178, v179, (uint64_t)v181, v182, v184, v185, v187,
              v188,
              v190,
              v192,
              v193,
              v195,
              v197,
              v198,
              v200,
              v202,
              v204,
              v206);
            v91 = 5;
          }
        }
        v93 = v1[36];
        sub_23F49B950(v1[33], v93, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
        *(_QWORD *)(v93 + *(int *)(v200 + 20)) = v71;
        *(_BYTE *)(v93 + *(int *)(v200 + 24)) = v91;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3C0670();
          sub_23F376EFC();
          v68 = v99;
        }
        v95 = *(_QWORD *)(v68 + 16);
        v94 = *(_QWORD *)(v68 + 24);
        if (v95 >= v94 >> 1)
        {
          sub_23F389FB0(v94);
          sub_23F376EFC();
          v68 = v100;
        }
        v2 = v1[43];
        *(_QWORD *)(v68 + 16) = v95 + 1;
        sub_23F383E04();
        sub_23F49B950(v98, v68 + v96 + *(_QWORD *)(v97 + 72) * v95, type metadata accessor for JointResolution.TupleInteraction);
        sub_23F383E64(v2, *(uint64_t (**)(uint64_t, uint64_t))(v213 + 8));
        v72 += v210;
        v70 = v92 - 1;
      }
      while (v70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v66 = v190;
      v67 = v179;
    }
    ++v66;
  }
  while (v66 != v185);
  swift_bridgeObjectRelease();
  sub_23F49B9FC();
LABEL_89:
  v101 = v1[46];
  v214 = v1[41];
  v203 = v1[31];
  v205 = v1[38];
  v207 = v1[28];
  v199 = v1[18];
  v201 = v1[19];
  result = sub_23F618878();
  v191 = 0;
  v177 = result + 64;
  v186 = result;
  v102 = -1;
  v103 = -1 << *(_BYTE *)(result + 32);
  if (-v103 < 64)
    v102 = ~(-1 << -(char)v103);
  v104 = v102 & *(_QWORD *)(result + 64);
  v105 = MEMORY[0x24BEE4AF8];
  v180 = (unint64_t)(63 - v103) >> 6;
  v174 = v180 - 1;
  v196 = v68;
  v183 = v101;
  if (!v104)
    goto LABEL_94;
  while (2)
  {
    v194 = (v104 - 1) & v104;
    v106 = __clz(__rbit64(v104)) | (v191 << 6);
LABEL_93:
    v107 = v1[21];
    (*(void (**)(uint64_t, unint64_t, _QWORD))(v101 + 16))(v107, *(_QWORD *)(v186 + 48) + *(_QWORD *)(v101 + 72) * v106, v1[45]);
    v108 = *(_QWORD *)(v186 + 56);
    v109 = sub_23F49BA24();
    *(_QWORD *)(v107 + *(int *)(v109 + 48)) = *(_QWORD *)(v108 + 8 * v106);
    sub_23F36196C(v107, 0, 1, v109);
    sub_23F3668F4();
LABEL_112:
    v115 = v1[22];
    sub_23F49B97C(v1[21], v115, &qword_256E75640);
    v116 = sub_23F49BA24();
    if (sub_23F36195C(v115, 1, v116) == 1)
    {
      v158 = v1[51];
      v157 = v1[52];
      v159 = v1[50];
      v160 = v1[44];
      swift_release();
      sub_23F3663AC(v160, (uint64_t (*)(_QWORD))type metadata accessor for JointResolverLocationSignalProvider);
      (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v157, v159);
      v230 = v105;
LABEL_142:
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v181);
      sub_23F499E44(v184, "JointResolverFeaturizer.fetchInteractions");
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return ((uint64_t (*)(uint64_t, uint64_t))v1[1])(v230, v196);
    }
    v117 = *(_QWORD *)(v1[22] + *(int *)(v116 + 48));
    (*(void (**)(_QWORD))(v101 + 32))(v1[47]);
    if (*(_QWORD *)(v117 + 16))
    {
      sub_23F383E04();
      v189 = v117;
      v120 = v117 + v119;
      v209 = *(void (**)(uint64_t, uint64_t, _QWORD))(v121 + 16);
      v211 = *(_QWORD *)(v121 + 72);
      v122 = v105;
      do
      {
        v228 = v118;
        v232 = v122;
        v123 = v1[42];
        v124 = v1;
        v126 = v1 + 39;
        v125 = v1[39];
        v127 = v124[37];
        v128 = v124[32];
        v129 = v124[29];
        v130 = v124[27];
        v209(v123, v120, v126[1]);
        sub_23F61883C();
        sub_23F49C5D8((uint64_t)&v234);
        (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v125, v127);
        v225 = v234;
        v220 = v236;
        v223 = v235;
        v131 = v237;
        LOBYTE(v125) = v238;
        sub_23F61883C();
        v132 = v128 + *(int *)(v203 + 20);
        *(_OWORD *)v132 = v225;
        *(_OWORD *)(v132 + 16) = v223;
        *(_OWORD *)(v132 + 32) = v220;
        *(_QWORD *)(v132 + 48) = v131;
        *(_BYTE *)(v132 + 56) = v125;
        v133 = sub_23F618818();
        v135 = v134;
        v136 = sub_23F618824();
        v138 = v137;
        sub_23F3664B0();
        v139 = sub_23F61BFEC();
        sub_23F618848();
        v140 = (*(uint64_t (**)(uint64_t, uint64_t))(v207 + 88))(v129, v130);
        if (v140 == v217)
        {
          v147 = 5;
          v122 = v232;
        }
        else
        {
          v122 = v232;
          if (v140 == HIDWORD(v195))
          {
            v147 = 0;
          }
          else if (v140 == (_DWORD)v195)
          {
            v147 = 2;
          }
          else if (v140 == HIDWORD(v192))
          {
            v147 = 4;
          }
          else if (v140 == (_DWORD)v192)
          {
            v147 = 3;
          }
          else if (v140 == HIDWORD(v187))
          {
            v147 = 1;
          }
          else if (v140 == HIDWORD(v178))
          {
            v147 = 6;
          }
          else if (v140 == HIDWORD(v175))
          {
            v147 = 7;
          }
          else
          {
            sub_23F49BA34(v226[29], v226[27], v141, v142, v143, v144, v145, v146, v172, v174, v175, v177, v178, v180, (uint64_t)v181, v183, v184, v186, v187,
              v189,
              v191,
              v192,
              v194,
              v195,
              v196,
              v199,
              v201,
              v203,
              v205,
              v207);
            v147 = 5;
          }
        }
        v148 = v226[20];
        sub_23F49B950(v226[32], v148, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
        v149 = (uint64_t *)(v148 + *(int *)(v199 + 20));
        *v149 = v133;
        v149[1] = v135;
        v149[2] = v136;
        v149[3] = v138;
        v149[4] = v139;
        *(_BYTE *)(v148 + *(int *)(v199 + 24)) = v147;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3C0670();
          sub_23F376EE8();
          v122 = v155;
        }
        v151 = *(_QWORD *)(v122 + 16);
        v150 = *(_QWORD *)(v122 + 24);
        v1 = v226;
        if (v151 >= v150 >> 1)
        {
          sub_23F389FB0(v150);
          sub_23F376EE8();
          v122 = v156;
        }
        *(_QWORD *)(v122 + 16) = v151 + 1;
        sub_23F383E04();
        sub_23F49B950(v154, v122 + v152 + *(_QWORD *)(v153 + 72) * v151, type metadata accessor for JointResolution.CandidateInteraction);
        sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v214 + 8));
        v120 += v211;
        v118 = v228 - 1;
      }
      while (v228 != 1);
      v105 = v122;
      swift_bridgeObjectRelease();
      v101 = v183;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    result = (*(uint64_t (**)(_QWORD, _QWORD))(v101 + 8))(v1[47], v1[45]);
    v104 = v194;
    if (v194)
      continue;
    break;
  }
LABEL_94:
  v110 = v191 + 1;
  if (__OFADD__(v191, 1))
  {
    __break(1u);
    goto LABEL_149;
  }
  if (v110 >= v180)
    goto LABEL_111;
  v111 = *(_QWORD *)(v177 + 8 * v110);
  if (v111)
    goto LABEL_97;
  v112 = v191 + 2;
  ++v191;
  if (v110 + 1 >= v180)
    goto LABEL_111;
  v111 = *(_QWORD *)(v177 + 8 * v112);
  if (v111)
    goto LABEL_100;
  v191 = v110 + 1;
  if (v110 + 2 >= v180)
    goto LABEL_111;
  v111 = *(_QWORD *)(v177 + 8 * (v110 + 2));
  if (v111)
  {
    v110 += 2;
    goto LABEL_97;
  }
  v112 = v110 + 3;
  v191 = v110 + 2;
  if (v110 + 3 >= v180)
  {
LABEL_111:
    v113 = v1[21];
    v114 = sub_23F49BA24();
    sub_23F36196C(v113, 1, 1, v114);
    v194 = 0;
    goto LABEL_112;
  }
  v111 = *(_QWORD *)(v177 + 8 * v112);
  if (v111)
  {
LABEL_100:
    v110 = v112;
LABEL_97:
    v194 = (v111 - 1) & v111;
    v106 = __clz(__rbit64(v111)) + (v110 << 6);
    v191 = v110;
    goto LABEL_93;
  }
  while (1)
  {
    v110 = v112 + 1;
    if (__OFADD__(v112, 1))
      break;
    if (v110 >= v180)
    {
      v191 = v174;
      goto LABEL_111;
    }
    v111 = *(_QWORD *)(v177 + 8 * v110);
    ++v112;
    if (v111)
      goto LABEL_97;
  }
LABEL_149:
  __break(1u);
  return result;
}

uint64_t sub_23F499444(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23F49945C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_23F4994B0;
  return sub_23F3E0834(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23F4994B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_23F499504(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  NSObject *v45;
  os_signpost_type_t v46;
  char v47;
  uint64_t v48;
  uint8_t *v49;
  os_signpost_id_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  os_log_type_t v74;
  uint8_t *v75;
  void (*v76)(NSObject *, uint64_t);
  uint64_t v77;
  void *v78;
  void *v79;
  id v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t aBlock;
  uint64_t v109;
  uint64_t (*v110)();
  void *v111;
  void (*v112)(void *);
  uint64_t v113;

  v96 = a2;
  v94 = a1;
  v106 = sub_23F3B1728();
  v102 = *(_QWORD *)(v106 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F362AAC();
  v5 = v3 - v4;
  MEMORY[0x24BDAC7A8](v6);
  v103 = ((char *)&v85 - v7);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v8);
  v99 = ((char *)&v85 - v9);
  v10 = sub_23F616FC4();
  v100 = *(_QWORD *)(v10 - 8);
  v101 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3834D0();
  v104 = v12;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v13);
  v93 = (char *)&v85 - v14;
  v92 = sub_23F617144();
  v91 = *(_QWORD *)(v92 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F36285C();
  v90 = v16;
  v89 = sub_23F617150();
  v88 = *(_QWORD *)(v89 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F36285C();
  v87 = v18;
  sub_23F35D2E8(&qword_256E6FAA0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3834D0();
  v98 = v20;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v21);
  v97 = (uint64_t)&v85 - v22;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v23);
  v95 = (char *)&v85 - v24;
  sub_23F383588();
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v85 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v105 = (uint64_t)&v85 - v29;
  v30 = sub_23F3E27A8();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  sub_23F362AAC();
  v34 = v32 - v33;
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v85 - v36;
  v38 = sub_23F618B90();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  sub_23F38F964();
  v42 = v41 - v40;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 104))(v41 - v40, *MEMORY[0x24BE57490], v38);
  v43 = sub_23F618B84();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v38);
  if ((v43 & 1) != 0)
  {
    if (qword_256E6F080 != -1)
      swift_once();
    v44 = sub_23F3E27B0();
    sub_23F49B9D8(v44, (uint64_t)qword_256E80338);
    sub_23F619DFC();
    v45 = sub_23F619E38();
    v46 = sub_23F61C694();
    v47 = sub_23F61C718();
    v48 = v100;
    if ((v47 & 1) != 0)
    {
      v49 = (uint8_t *)sub_23F366668();
      *(_WORD *)v49 = 0;
      v50 = sub_23F619E08();
      sub_23F44D498(&dword_23F35A000, v45, v46, v50, "JointResolverFeaturizer.fetchLocationEvents", "", v49);
      sub_23F366530();
    }

    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v34, v37, v30);
    sub_23F49BA40();
    sub_23F3668A0();
    v86 = sub_23F619E68();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v30);
    sub_23F49B8D8(v94, (uint64_t)v28, &qword_256E6FAA0);
    v51 = v101;
    if (sub_23F36195C((uint64_t)v28, 1, v101) == 1)
    {
      v52 = v87;
      sub_23F61712C();
      v53 = v91;
      v54 = v90;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v91 + 104))(v90, *MEMORY[0x24BDCF220], v92);
      v55 = (uint64_t)v93;
      sub_23F616FB8();
      sub_23F617114();
      sub_23F383F80(v55, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
      sub_23F383E64(v54, *(uint64_t (**)(uint64_t, uint64_t))(v53 + 8));
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v52, v89);
      sub_23F3625D8((uint64_t)v28, &qword_256E6FAA0);
    }
    else
    {
      v61 = v105;
      sub_23F384840(v105, (uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 32));
      sub_23F49BA14(v61);
    }
    v62 = v104;
    v63 = v99;
    v64 = (uint64_t)v95;
    sub_23F49BA2C(v96, v56, &qword_256E6FAA0);
    if (sub_23F36195C(v64, 1, v51) == 1)
    {
      sub_23F616FB8();
      sub_23F3625D8(v64, &qword_256E6FAA0);
    }
    else
    {
      sub_23F384840(v62, v64, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 32));
    }
    v65 = objc_msgSend((id)BiomeLibrary(), sel_Location);
    swift_unknownObjectRelease();
    v66 = objc_msgSend(v65, sel_Visit);
    swift_unknownObjectRelease();
    v67 = v97;
    sub_23F384840(v97, v62, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 16));
    sub_23F49BA14(v67);
    v68 = v98;
    sub_23F49BA2C(v105, v69, &qword_256E6FAA0);
    v70 = objc_allocWithZone(MEMORY[0x24BE0CC98]);
    v71 = sub_23F49A76C(v67, v68, 300, 0, 1);
    v72 = objc_msgSend(v66, sel_publisherWithOptions_, v71);

    v73 = swift_allocObject();
    *(_QWORD *)(v73 + 16) = MEMORY[0x24BEE4AF8];
    sub_23F619100();
    sub_23F619E8C();
    v74 = sub_23F3B1A04();
    if (sub_23F49BA04(v74))
    {
      v75 = (uint8_t *)sub_23F366668();
      *(_WORD *)v75 = 0;
      sub_23F4114BC(&dword_23F35A000, v63, (os_log_type_t)v62, "Fetching location events from Location visits biome stream", v75);
      sub_23F366530();
    }

    v76 = *(void (**)(NSObject *, uint64_t))(v102 + 8);
    v76(v63, v106);
    v112 = (void (*)(void *))nullsub_1;
    v113 = 0;
    v77 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v109 = 1107296256;
    v110 = sub_23F49A0E4;
    v111 = &unk_250FD84B0;
    v78 = _Block_copy(&aBlock);
    v112 = sub_23F49A8A8;
    v113 = v73;
    aBlock = v77;
    v109 = 1107296256;
    v110 = sub_23F49A0E4;
    v111 = &unk_250FD84D8;
    v79 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v80 = objc_msgSend(v72, sel_sinkWithCompletion_receiveInput_, v78, v79);
    _Block_release(v79);
    _Block_release(v78);

    v81 = v103;
    sub_23F619100();
    swift_retain();
    sub_23F619E8C();
    v82 = sub_23F3B1A04();
    if (sub_23F49BA04(v82))
    {
      v83 = (uint8_t *)sub_23F366668();
      *(_DWORD *)v83 = 134217984;
      sub_23F49B9EC();
      aBlock = *(_QWORD *)(*(_QWORD *)(v73 + 16) + 16);
      sub_23F61C790();
      sub_23F3667A8();
      sub_23F38485C(&dword_23F35A000, v81, (os_log_type_t)v79, "Fetched %ld biome location events", v83);
      sub_23F366530();
    }

    sub_23F3667A8();
    v76(v103, v106);
    sub_23F49B9EC();
    v107 = *(_QWORD *)(v73 + 16);
    sub_23F3E0254();
    sub_23F49A8B0(&v107);
    swift_bridgeObjectRelease();

    v60 = v107;
    sub_23F383F80(v104, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
    sub_23F3625D8(v105, &qword_256E6FAA0);
    sub_23F3667A8();
    sub_23F499E44(v86, "JointResolverFeaturizer.fetchLocationEvents");
    sub_23F366748();
  }
  else
  {
    sub_23F619100();
    v57 = sub_23F619E8C();
    v58 = sub_23F61C61C();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)sub_23F366668();
      *(_WORD *)v59 = 0;
      sub_23F4114BC(&dword_23F35A000, v57, v58, "Joint resolver location signal feature is off. Do not fetch location biome events", v59);
      sub_23F366530();
    }

    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v5, v106);
    return MEMORY[0x24BEE4AF8];
  }
  return v60;
}

uint64_t sub_23F499E44(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  char v17;
  char v18;
  const char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_signpost_id_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a2;
  v2 = sub_23F619E50();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  v6 = v5 - v4;
  v7 = sub_23F3E27A8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F362AAC();
  v11 = v9 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  if (qword_256E6F080 != -1)
    swift_once();
  v15 = sub_23F3E27B0();
  v16 = sub_23F49B9D8(v15, (uint64_t)qword_256E80338);
  sub_23F619E5C();
  HIDWORD(v26) = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v6, v2) == *MEMORY[0x24BEE7810])
    {
      v17 = 0;
      v18 = 0;
      v19 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
      v19 = "%s";
      v18 = 2;
      v17 = 1;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v11, v14, v7);
    v21 = sub_23F366668();
    v29 = sub_23F366668();
    *(_BYTE *)v21 = v18;
    *(_BYTE *)(v21 + 1) = v17;
    *(_WORD *)(v21 + 2) = 2080;
    v22 = sub_23F61C8F8();
    sub_23F37AE00(v22, v23, &v29);
    v28 = v24;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v25 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v16, BYTE4(v26), v25, v27, v19, (uint8_t *)v21, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }

  return sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
}

void sub_23F49A0E8(void *a1, uint64_t a2)
{
  uint64_t *v3;
  void *v4;

  v3 = (uint64_t *)(a2 + 16);
  v4 = (void *)MEMORY[0x2426704A4]();
  sub_23F49A134(a1, v3);
  objc_autoreleasePoolPop(v4);
}

void sub_23F49A134(void *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  id v34;
  void *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;

  v72 = a2;
  v69 = type metadata accessor for LocationEvent();
  v71 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v70 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F35D2E8(&qword_256E6FAA0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v65 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v65 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v65 - v15;
  v17 = sub_23F616FC4();
  v76 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v74 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v65 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v75 = (char *)&v65 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v65 - v25;
  v27 = objc_msgSend(a1, sel_eventBody);
  if (!v27)
  {
    sub_23F36196C((uint64_t)v16, 1, 1, v17);
LABEL_8:
    sub_23F3625D8((uint64_t)v16, &qword_256E6FAA0);
    return;
  }
  v28 = v27;
  v73 = v2;
  v29 = objc_msgSend(v27, sel_entryDate);
  if (v29)
  {
    v30 = v29;
    sub_23F616F94();

    v31 = 0;
  }
  else
  {
    v31 = 1;
  }
  sub_23F36196C((uint64_t)v14, v31, 1, v17);
  sub_23F49B97C((uint64_t)v14, (uint64_t)v16, &qword_256E6FAA0);
  if (sub_23F36195C((uint64_t)v16, 1, v17) == 1)
  {

    goto LABEL_8;
  }
  v32 = v76;
  v33 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
  v33(v26, v16, v17);
  v34 = objc_msgSend(v28, sel_exitDate);
  if (v34)
  {
    v35 = v34;
    sub_23F616F94();

    v36 = 0;
  }
  else
  {
    v36 = 1;
  }
  sub_23F36196C((uint64_t)v8, v36, 1, v17);
  sub_23F49B97C((uint64_t)v8, (uint64_t)v11, &qword_256E6FAA0);
  if (sub_23F36195C((uint64_t)v11, 1, v17) == 1)
  {

    (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v17);
    sub_23F3625D8((uint64_t)v11, &qword_256E6FAA0);
  }
  else
  {
    v37 = v75;
    v33(v75, v11, v17);
    v38 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
    v38(v22, v26, v17);
    v38(v74, v37, v17);
    v39 = objc_msgSend(v28, sel_placeInference);
    if (v39
      && (v40 = v39, v41 = objc_msgSend(v39, sel_mapItem), v40, v41))
    {
      v42 = sub_23F49B870(v41, (SEL *)&selRef_name);
      v67 = v43;
      v68 = v42;
    }
    else
    {
      v67 = 0;
      v68 = 0;
    }
    v44 = objc_msgSend(v28, sel_placeInference);
    if (v44
      && (v45 = v44, v46 = objc_msgSend(v44, sel_mapItem), v45, v46))
    {
      v66 = sub_23F49B870(v46, (SEL *)&selRef_category);
      v48 = v47;
    }
    else
    {
      v66 = 0;
      v48 = 0;
    }
    v49 = objc_msgSend(v28, sel_location);
    v50 = v49;
    v51 = 0;
    v52 = 0;
    if (v49)
    {
      objc_msgSend(v49, sel_latitude);
      v52 = v53;

    }
    v54 = objc_msgSend(v28, sel_location);
    v55 = v54;
    if (v54)
    {
      objc_msgSend(v54, sel_longitude);
      v51 = v56;

    }
    v57 = (uint64_t)v70;
    v33(v70, v22, v17);
    v58 = v69;
    v33((char *)(v57 + *(int *)(v69 + 20)), v74, v17);
    v59 = v57 + *(int *)(v58 + 24);
    v60 = v67;
    *(_QWORD *)v59 = v68;
    *(_QWORD *)(v59 + 8) = v60;
    *(_QWORD *)(v59 + 16) = v66;
    *(_QWORD *)(v59 + 24) = v48;
    *(_QWORD *)(v59 + 32) = v52;
    *(_BYTE *)(v59 + 40) = v50 == 0;
    *(_QWORD *)(v59 + 48) = v51;
    *(_BYTE *)(v59 + 56) = v55 == 0;
    v61 = v72;
    swift_beginAccess();
    sub_23F3769E0();
    v62 = *(_QWORD *)(*v61 + 16);
    sub_23F376B84(v62);
    v63 = *v61;
    *(_QWORD *)(v63 + 16) = v62 + 1;
    sub_23F49B950(v57, v63+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(_QWORD *)(v71 + 72) * v62, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
    swift_endAccess();

    v64 = *(void (**)(char *, uint64_t))(v76 + 8);
    v64(v75, v17);
    v64(v26, v17);
  }
}

void sub_23F49A6CC(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  sub_23F366748();

}

uint64_t sub_23F49A718()
{
  uint64_t v0;

  swift_release();
  sub_23F3625D8(v0 + 24, &qword_256E75650);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for JointResolverFeaturizer()
{
  return objc_opt_self();
}

id sub_23F49A76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void *v5;
  void *v6;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  v6 = v5;
  v12 = sub_23F616FC4();
  v13 = 0;
  if (sub_23F36195C(a1, 1, v12) != 1)
  {
    v13 = (void *)sub_23F616F58();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  }
  if (sub_23F36195C(a2, 1, v12) == 1)
  {
    v14 = 0;
  }
  else
  {
    v14 = (void *)sub_23F616F58();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a2, v12);
  }
  v15 = objc_msgSend(v6, sel_initWithStartDate_endDate_maxEvents_lastN_reversed_, v13, v14, a3, a4, a5 & 1);

  return v15;
}

uint64_t sub_23F49A86C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F49A890(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23F49A8A0()
{
  return swift_release();
}

void sub_23F49A8A8(void *a1)
{
  uint64_t v1;

  sub_23F49A0E8(a1, v1);
}

void sub_23F49A8B0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for LocationEvent() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F3BCEF0();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_23F49A930((char *)v6);
  *a1 = v3;
}

void sub_23F49A930(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v2 = v1;
  v131 = type metadata accessor for LocationEvent();
  v4 = *(_QWORD *)(v131 - 8);
  v5 = MEMORY[0x24BDAC7A8](v131);
  v128 = (uint64_t)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v137 = (uint64_t)&v121 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v134 = (uint64_t)&v121 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v133 = (uint64_t)&v121 - v11;
  v12 = *((_QWORD *)a1 + 1);
  v13 = sub_23F61CC04();
  if (v13 >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12)
        sub_23F49B268(0, v12, 1, a1);
      return;
    }
    goto LABEL_141;
  }
  v14 = v13;
  sub_23F387EE4(v12 / 2);
  v123 = v15;
  v124 = v12;
  v129 = v16;
  v130 = v4;
  if (v12 <= 0)
  {
LABEL_105:
    v18 = (char *)MEMORY[0x24BEE4AF8];
    v63 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_106:
    if (v63 < 2)
    {
LABEL_117:
      swift_bridgeObjectRelease();
      if (v124 >= -1)
        goto LABEL_118;
      goto LABEL_145;
    }
    v114 = *(_QWORD *)a1;
    while (1)
    {
      v115 = v63 - 2;
      if (v63 < 2)
        break;
      if (!v114)
        goto LABEL_149;
      v116 = v18;
      v117 = *(_QWORD *)&v18[16 * v115 + 32];
      v118 = *(_QWORD *)&v18[16 * v63 + 24];
      sub_23F49B48C(v114 + *(_QWORD *)(v130 + 72) * v117, v114 + *(_QWORD *)(v130 + 72) * *(_QWORD *)&v18[16 * v63 + 16], v114 + *(_QWORD *)(v130 + 72) * v118, v129);
      if (v2)
        goto LABEL_103;
      if (v118 < v117)
        goto LABEL_136;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v116 = sub_23F3BC9E8();
      if (v115 >= *((_QWORD *)v116 + 2))
        goto LABEL_137;
      v119 = &v116[16 * v115 + 32];
      *(_QWORD *)v119 = v117;
      *((_QWORD *)v119 + 1) = v118;
      v120 = *((_QWORD *)v116 + 2);
      if (v63 > v120)
        goto LABEL_138;
      memmove(&v116[16 * v63 + 16], &v116[16 * v63 + 32], 16 * (v120 - v63));
      *((_QWORD *)v116 + 2) = v120 - 1;
      v63 = v120 - 1;
      v18 = v116;
      if (v120 <= 2)
        goto LABEL_117;
    }
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
    return;
  }
  v122 = v14;
  v17 = 0;
  v18 = (char *)MEMORY[0x24BEE4AF8];
  v19 = v12;
  v135 = a1;
  while (1)
  {
    v20 = v17;
    v21 = v17 + 1;
    if (v17 + 1 >= v19)
    {
      v33 = v17 + 1;
      goto LABEL_31;
    }
    v125 = v2;
    v22 = *(_QWORD *)a1;
    v23 = *(_QWORD *)(v4 + 72);
    v24 = v133;
    sub_23F49B82C(*(_QWORD *)a1 + v23 * v21, v133);
    v138 = v19;
    v25 = v134;
    sub_23F49B82C(v22 + v23 * v20, v134);
    v26 = sub_23F616F64();
    sub_23F3663AC(v25, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
    v19 = v138;
    sub_23F3663AC(v24, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
    v132 = v22;
    v139 = v23;
    v136 = v20 + 2;
    if (v20 + 2 >= v19)
    {
      v4 = v130;
      v2 = v125;
      if ((v26 & 1) == 0)
        goto LABEL_30;
    }
    else
    {
      v127 = v20;
      v27 = v23 * v21;
      v28 = v22;
      v29 = v23 * (v20 + 2);
      v2 = v125;
      do
      {
        v30 = v133;
        sub_23F49B82C(v28 + v29, v133);
        v31 = v134;
        sub_23F49B82C(v28 + v27, v134);
        v32 = sub_23F616F64();
        sub_23F3663AC(v31, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
        sub_23F3663AC(v30, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
        if (((v26 ^ v32) & 1) != 0)
        {
          v4 = v130;
          a1 = v135;
          v20 = v127;
          v19 = v138;
          if ((v26 & 1) == 0)
            goto LABEL_30;
          goto LABEL_13;
        }
        v28 += v139;
        ++v136;
        v19 = v138;
      }
      while (v136 < v138);
      v136 = v138;
      v4 = v130;
      a1 = v135;
      v20 = v127;
      if ((v26 & 1) == 0)
      {
LABEL_30:
        v33 = v136;
        goto LABEL_31;
      }
    }
LABEL_13:
    v33 = v136;
    if (v136 < v20)
      goto LABEL_142;
    if (v20 < v136)
    {
      v121 = v18;
      v125 = v2;
      v34 = 0;
      v35 = v139;
      v36 = v139 * (v136 - 1);
      v37 = v20;
      v38 = v136 * v139;
      v39 = v37;
      v40 = v37;
      v41 = v37 * v139;
      do
      {
        if (v39 != v33 + v34 - 1)
        {
          v42 = v132;
          if (!v132)
            goto LABEL_148;
          v43 = v132 + v41;
          v44 = v132 + v36;
          sub_23F49B950(v132 + v41, v128, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
          if (v41 < v36 || v43 >= v42 + v38)
          {
            swift_arrayInitWithTakeFrontToBack();
            v35 = v139;
          }
          else
          {
            v35 = v139;
            if (v41 != v36)
              swift_arrayInitWithTakeBackToFront();
          }
          sub_23F49B950(v128, v44, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
          a1 = v135;
          v33 = v136;
        }
        ++v39;
        --v34;
        v36 -= v35;
        v38 -= v35;
        v41 += v35;
      }
      while (v39 < v33 + v34);
      v2 = v125;
      v4 = v130;
      v18 = v121;
      v20 = v40;
      v19 = v138;
    }
LABEL_31:
    if (v33 < v19)
    {
      if (__OFSUB__(v33, v20))
        goto LABEL_140;
      if (v33 - v20 < v122)
      {
        if (__OFADD__(v20, v122))
          goto LABEL_143;
        if (v20 + v122 >= v19)
          v46 = v19;
        else
          v46 = v20 + v122;
        if (v46 < v20)
          goto LABEL_144;
        if (v33 != v46)
        {
          v126 = v46;
          v127 = v20;
          v121 = v18;
          v125 = v2;
          v47 = *(_QWORD *)(v4 + 72);
          v139 = v47 * (v33 - 1);
          v132 = v47;
          v48 = v33 * v47;
          do
          {
            v49 = 0;
            v50 = v127;
            v136 = v33;
            while (1)
            {
              v138 = v50;
              v51 = *(_QWORD *)a1;
              v52 = v48;
              v53 = v48 + v49 + *(_QWORD *)a1;
              v54 = a1;
              v55 = v133;
              sub_23F49B82C(v53, v133);
              v56 = v134;
              sub_23F49B82C(v139 + v49 + v51, v134);
              LOBYTE(v51) = sub_23F616F64();
              sub_23F3663AC(v56, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
              sub_23F3663AC(v55, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
              if ((v51 & 1) == 0)
                break;
              v57 = *(_QWORD *)v54;
              if (!*(_QWORD *)v54)
                goto LABEL_146;
              v48 = v52;
              v58 = v57 + v139 + v49;
              sub_23F49B950(v57 + v52 + v49, v137, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
              swift_arrayInitWithTakeFrontToBack();
              sub_23F49B950(v137, v58, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
              v49 -= v132;
              v50 = v138 + 1;
              a1 = v135;
              v59 = v136;
              if (v136 == v138 + 1)
                goto LABEL_47;
            }
            v59 = v136;
            a1 = v54;
            v48 = v52;
LABEL_47:
            v33 = v59 + 1;
            v139 += v132;
            v48 += v132;
          }
          while (v33 != v126);
          v33 = v126;
          v2 = v125;
          v18 = v121;
          v20 = v127;
        }
      }
    }
    if (v33 < v20)
      goto LABEL_139;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v136 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_23F3BC8F8(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v62 = *((_QWORD *)v18 + 2);
    v61 = *((_QWORD *)v18 + 3);
    v63 = v62 + 1;
    if (v62 >= v61 >> 1)
      v18 = sub_23F3BC8F8((char *)(v61 > 1), v62 + 1, 1, v18);
    v64 = v2;
    *((_QWORD *)v18 + 2) = v63;
    v65 = v18 + 32;
    v66 = &v18[16 * v62 + 32];
    v67 = v136;
    *(_QWORD *)v66 = v20;
    *((_QWORD *)v66 + 1) = v67;
    if (v62)
      break;
    v63 = 1;
LABEL_97:
    v19 = *((_QWORD *)a1 + 1);
    v17 = v136;
    v2 = v64;
    v4 = v130;
    if (v136 >= v19)
      goto LABEL_106;
  }
  while (1)
  {
    v68 = v63 - 1;
    if (v63 >= 4)
    {
      v73 = &v65[16 * v63];
      v74 = *((_QWORD *)v73 - 8);
      v75 = *((_QWORD *)v73 - 7);
      v79 = __OFSUB__(v75, v74);
      v76 = v75 - v74;
      if (v79)
        goto LABEL_124;
      v78 = *((_QWORD *)v73 - 6);
      v77 = *((_QWORD *)v73 - 5);
      v79 = __OFSUB__(v77, v78);
      v71 = v77 - v78;
      v72 = v79;
      if (v79)
        goto LABEL_125;
      v80 = v63 - 2;
      v81 = &v65[16 * v63 - 32];
      v83 = *(_QWORD *)v81;
      v82 = *((_QWORD *)v81 + 1);
      v79 = __OFSUB__(v82, v83);
      v84 = v82 - v83;
      if (v79)
        goto LABEL_126;
      v79 = __OFADD__(v71, v84);
      v85 = v71 + v84;
      if (v79)
        goto LABEL_128;
      if (v85 >= v76)
      {
        v103 = &v65[16 * v68];
        v105 = *(_QWORD *)v103;
        v104 = *((_QWORD *)v103 + 1);
        v79 = __OFSUB__(v104, v105);
        v106 = v104 - v105;
        if (v79)
          goto LABEL_134;
        v96 = v71 < v106;
        goto LABEL_86;
      }
    }
    else
    {
      if (v63 != 3)
      {
        v97 = *((_QWORD *)v18 + 4);
        v98 = *((_QWORD *)v18 + 5);
        v79 = __OFSUB__(v98, v97);
        v90 = v98 - v97;
        v91 = v79;
        goto LABEL_80;
      }
      v70 = *((_QWORD *)v18 + 4);
      v69 = *((_QWORD *)v18 + 5);
      v79 = __OFSUB__(v69, v70);
      v71 = v69 - v70;
      v72 = v79;
    }
    if ((v72 & 1) != 0)
      goto LABEL_127;
    v80 = v63 - 2;
    v86 = &v65[16 * v63 - 32];
    v88 = *(_QWORD *)v86;
    v87 = *((_QWORD *)v86 + 1);
    v89 = __OFSUB__(v87, v88);
    v90 = v87 - v88;
    v91 = v89;
    if (v89)
      goto LABEL_129;
    v92 = &v65[16 * v68];
    v94 = *(_QWORD *)v92;
    v93 = *((_QWORD *)v92 + 1);
    v79 = __OFSUB__(v93, v94);
    v95 = v93 - v94;
    if (v79)
      goto LABEL_131;
    if (__OFADD__(v90, v95))
      goto LABEL_133;
    if (v90 + v95 >= v71)
    {
      v96 = v71 < v95;
LABEL_86:
      if (v96)
        v68 = v80;
      goto LABEL_88;
    }
LABEL_80:
    if ((v91 & 1) != 0)
      goto LABEL_130;
    v99 = &v65[16 * v68];
    v101 = *(_QWORD *)v99;
    v100 = *((_QWORD *)v99 + 1);
    v79 = __OFSUB__(v100, v101);
    v102 = v100 - v101;
    if (v79)
      goto LABEL_132;
    if (v102 < v90)
      goto LABEL_97;
LABEL_88:
    v107 = v68 - 1;
    if (v68 - 1 >= v63)
    {
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    v108 = *(_QWORD *)a1;
    if (!*(_QWORD *)a1)
      goto LABEL_147;
    v109 = v18;
    v110 = &v65[16 * v107];
    v111 = *(_QWORD *)v110;
    a1 = &v65[16 * v68];
    v112 = *((_QWORD *)a1 + 1);
    sub_23F49B48C(v108 + *(_QWORD *)(v130 + 72) * *(_QWORD *)v110, v108 + *(_QWORD *)(v130 + 72) * *(_QWORD *)a1, v108 + *(_QWORD *)(v130 + 72) * v112, v129);
    if (v64)
      break;
    if (v112 < v111)
      goto LABEL_121;
    if (v68 > *((_QWORD *)v109 + 2))
      goto LABEL_122;
    *(_QWORD *)v110 = v111;
    *(_QWORD *)&v65[16 * v107 + 8] = v112;
    v113 = *((_QWORD *)v109 + 2);
    if (v68 >= v113)
      goto LABEL_123;
    v18 = v109;
    v63 = v113 - 1;
    memmove(&v65[16 * v68], a1 + 16, 16 * (v113 - 1 - v68));
    *((_QWORD *)v109 + 2) = v113 - 1;
    a1 = v135;
    if (v113 <= 2)
      goto LABEL_97;
  }
  v2 = v64;
LABEL_103:
  swift_bridgeObjectRelease();
  if (v124 < -1)
  {
    __break(1u);
    goto LABEL_105;
  }
LABEL_118:
  *(_QWORD *)(v123 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_23F49B268(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)();
  _QWORD *v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27 = a1;
  v28 = type metadata accessor for LocationEvent();
  v7 = MEMORY[0x24BDAC7A8](v28);
  v32 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v29 = (uint64_t)&v25 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - v12;
  v31 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v14 = *(_QWORD *)(v11 + 72);
    v34 = v14 * (v31 - 1);
    v30 = v14;
    v33 = v14 * v31;
    v15 = type metadata accessor for LocationEvent;
    while (2)
    {
      v16 = 0;
      v17 = v27;
      do
      {
        v18 = *a4;
        sub_23F49B82C(v33 + v16 + *a4, (uint64_t)v13);
        v19 = v29;
        sub_23F49B82C(v34 + v16 + v18, v29);
        LOBYTE(v18) = sub_23F616F64();
        sub_23F3663AC(v19, (uint64_t (*)(_QWORD))v15);
        sub_23F3663AC((uint64_t)v13, (uint64_t (*)(_QWORD))v15);
        if ((v18 & 1) == 0)
          break;
        v20 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v21 = v15;
        v22 = a4;
        v23 = v20 + v34 + v16;
        v24 = v21;
        sub_23F49B950(v20 + v33 + v16, v32, (uint64_t (*)(_QWORD))v21);
        swift_arrayInitWithTakeFrontToBack();
        sub_23F49B950(v32, v23, (uint64_t (*)(_QWORD))v24);
        v16 -= v30;
        ++v17;
        a4 = v22;
        v15 = v24;
      }
      while (v31 != v17);
      v34 += v30;
      v33 += v30;
      if (++v31 != v26)
        continue;
      break;
    }
  }
}

void sub_23F49B48C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v26;
  BOOL v28;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v42;
  int64_t v44;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v51 = type metadata accessor for LocationEvent();
  v8 = MEMORY[0x24BDAC7A8](v51);
  v52 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v46 - v11;
  v13 = *(_QWORD *)(v10 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_75;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_76;
  v18 = v14 / v13;
  v19 = v16 / v13;
  v47 = *(_QWORD *)(v10 + 72);
  if (v14 / v13 >= v16 / v13)
  {
    sub_23F37A4F4(a2, v16 / v13);
    v20 = a4 + v19 * v13;
    if (v19 * v13 < 1 || a1 >= a2)
      goto LABEL_69;
    v49 = a1;
    v50 = -v13;
    v48 = a4;
    while (1)
    {
      v30 = a3;
      v31 = v50;
      a3 += v50;
      v32 = v20 + v50;
      v33 = v20;
      sub_23F49B82C(v20 + v50, (uint64_t)v12);
      v34 = a2 + v31;
      v35 = a2 + v31;
      v36 = (uint64_t)v12;
      v37 = v52;
      sub_23F49B82C(v35, v52);
      v38 = sub_23F616F64();
      v39 = v37;
      v12 = (char *)v36;
      sub_23F3663AC(v39, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
      sub_23F3663AC(v36, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
      if ((v38 & 1) != 0)
      {
        v20 = v33;
        if (v30 >= a2 && a3 < a2)
        {
          v42 = v49;
          if (v30 != a2)
            swift_arrayInitWithTakeBackToFront();
          a2 = v34;
          a4 = v48;
          goto LABEL_64;
        }
        swift_arrayInitWithTakeFrontToBack();
        a2 = v34;
      }
      else
      {
        if (v30 < v33 || a3 >= v33)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v30 != v33)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v20 = v32;
      }
      a4 = v48;
      v42 = v49;
LABEL_64:
      if (v20 <= a4 || a2 <= v42)
      {
        v13 = v47;
        goto LABEL_69;
      }
    }
  }
  sub_23F37A4F4(a1, v14 / v13);
  v20 = a4 + v18 * v13;
  if (v18 * v13 >= 1 && a2 < a3)
  {
    do
    {
      sub_23F49B82C(a2, (uint64_t)v12);
      v22 = v52;
      sub_23F49B82C(a4, v52);
      v23 = sub_23F616F64();
      sub_23F3663AC(v22, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
      sub_23F3663AC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for LocationEvent);
      if ((v23 & 1) != 0)
      {
        v24 = a2 + v13;
        if (a1 < a2 || a1 >= v24)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        v26 = a4 + v13;
        if (a1 < a4 || a1 >= v26)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v24 = a2;
        a4 = v26;
        v13 = v47;
      }
      a1 += v13;
      v28 = a4 >= v20 || v24 >= a3;
      a2 = v24;
    }
    while (!v28);
  }
LABEL_69:
  v44 = v20 - a4;
  if (v13 != -1 || v44 != 0x8000000000000000)
  {
    sub_23F37A4F4(a4, v44 / v13);
    return;
  }
LABEL_77:
  __break(1u);
}

uint64_t sub_23F49B82C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F49B870(void *a1, SEL *a2)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(a1, *a2);

  if (!v3)
    return 0;
  v4 = sub_23F61C10C();

  return v4;
}

void sub_23F49B8D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23F384504(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  sub_23F362928();
}

unint64_t sub_23F49B90C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E75660;
  if (!qword_256E75660)
  {
    v1 = sub_23F35EB74(&qword_256E75658);
    result = MEMORY[0x242670A44](MEMORY[0x24BEE2C18], v1);
    atomic_store(result, (unint64_t *)&qword_256E75660);
  }
  return result;
}

void sub_23F49B950(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_23F488F3C(v3);
  sub_23F362928();
}

void sub_23F49B97C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F384504(a1, a2, a3);
  sub_23F488F3C(v3);
  sub_23F362928();
}

uint64_t sub_23F49B9A4@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  return swift_willThrow();
}

uint64_t sub_23F49B9D8(uint64_t a1, uint64_t a2)
{
  sub_23F361498(a1, a2);
  return sub_23F619E38();
}

uint64_t sub_23F49B9EC()
{
  return swift_beginAccess();
}

uint64_t sub_23F49B9FC()
{
  return swift_bridgeObjectRelease();
}

BOOL sub_23F49BA04(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F49BA14(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(a1, 0, 1, v1);
}

uint64_t sub_23F49BA24()
{
  uint64_t *v0;

  return sub_23F35D2E8(v0);
}

void sub_23F49BA2C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F49B8D8(a1, v3, a3);
}

uint64_t sub_23F49BA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  return (*(uint64_t (**)(void))(a30 + 8))();
}

uint64_t sub_23F49BA40()
{
  return sub_23F619E74();
}

void sub_23F49BA48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  double v5;
  char v6;
  id v7;
  void *v10;
  id v11;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(double *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(double *)(a1 + 48);
  v6 = *(_BYTE *)(a1 + 56);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0 || (*(_BYTE *)(v1 + 56) & 1) != 0)
    v7 = 0;
  else
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_initWithLatitude_longitude_, *(double *)(v1 + 32), *(double *)(v1 + 48));
  if (v2 != 1 && (v4 & 1) == 0 && (v6 & 1) == 0)
  {
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_initWithLatitude_longitude_, v3, v5);
    v10 = v11;
    if (!v7)
      goto LABEL_18;
    if (v11)
    {
      objc_msgSend(v7, sel_distanceFromLocation_, v11);

      return;
    }
LABEL_17:

    return;
  }
  if (v7)
    goto LABEL_17;
  v10 = 0;
LABEL_18:

}

uint64_t JointResolverLocationSignal.locationName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23F617BA0();
  return v1;
}

void JointResolverLocationSignal.locationName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  sub_23F362B80();
}

uint64_t (*JointResolverLocationSignal.locationName.modify())()
{
  return nullsub_1;
}

uint64_t JointResolverLocationSignal.locationType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_23F617BA0();
  return v1;
}

void JointResolverLocationSignal.locationType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  sub_23F362B80();
}

uint64_t (*JointResolverLocationSignal.locationType.modify())()
{
  return nullsub_1;
}

uint64_t JointResolverLocationSignal.locationLatitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t JointResolverLocationSignal.locationLatitude.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*JointResolverLocationSignal.locationLatitude.modify())()
{
  return nullsub_1;
}

uint64_t JointResolverLocationSignal.locationLongitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t JointResolverLocationSignal.locationLongitude.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*JointResolverLocationSignal.locationLongitude.modify())()
{
  return nullsub_1;
}

uint64_t static JointResolverLocationSignal.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  char v7;
  double v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  int v14;
  double v15;
  char v16;
  BOOL v17;
  char v18;
  uint64_t result;
  char v21;
  char v22;
  char v23;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(double *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 40);
  v8 = *(double *)(a1 + 48);
  v9 = *(_BYTE *)(a1 + 56);
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(double *)(a2 + 32);
  v14 = *(unsigned __int8 *)(a2 + 40);
  v15 = *(double *)(a2 + 48);
  v16 = *(_BYTE *)(a2 + 56);
  if (!v3)
  {
    if (v10)
      return 0;
    goto LABEL_10;
  }
  if (!v10)
    return 0;
  v17 = *(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v10;
  if (v17 || (v18 = sub_23F61CC64(), result = 0, (v18 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v12)
      {
        if (v4 != v11 || v5 != v12)
        {
          v21 = sub_23F61CC64();
          result = 0;
          if ((v21 & 1) == 0)
            return result;
        }
LABEL_19:
        if ((v7 & 1) != 0)
        {
          if (!v14)
            return 0;
        }
        else
        {
          if (v6 == v13)
            v22 = v14;
          else
            v22 = 1;
          if ((v22 & 1) != 0)
            return 0;
        }
        if ((v9 & 1) != 0)
        {
          if ((v16 & 1) == 0)
            return 0;
        }
        else
        {
          if (v8 == v15)
            v23 = v16;
          else
            v23 = 1;
          if ((v23 & 1) != 0)
            return 0;
        }
        return 1;
      }
    }
    else if (!v12)
    {
      goto LABEL_19;
    }
    return 0;
  }
  return result;
}

uint64_t initializeWithCopy for JointResolverLocationSignal(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for JointResolverLocationSignal(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  return a1;
}

__n128 initializeWithTake for JointResolverLocationSignal(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for JointResolverLocationSignal(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for JointResolverLocationSignal(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 57))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JointResolverLocationSignal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for JointResolverLocationSignal()
{
  return &type metadata for JointResolverLocationSignal;
}

uint64_t *sub_23F49BFE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F616FC4();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v13;
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    v10[40] = v11[40];
    *((_QWORD *)v10 + 6) = *((_QWORD *)v11 + 6);
    v10[56] = v11[56];
    sub_23F617BA0();
    sub_23F617BA0();
  }
  return a1;
}

uint64_t sub_23F49C0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_23F616FC4();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F49C138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23F616FC4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 40) = *(_BYTE *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(v10 + 48);
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F49C1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23F616FC4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 40) = *(_BYTE *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = v11;
  v12 = *(_QWORD *)(v10 + 48);
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  *(_QWORD *)(v9 + 48) = v12;
  return a1;
}

uint64_t sub_23F49C2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;

  v6 = sub_23F616FC4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  *(_OWORD *)((char *)v9 + 41) = *(_OWORD *)((char *)v10 + 41);
  return a1;
}

uint64_t sub_23F49C360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23F616FC4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 40) = *(_BYTE *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(v10 + 48);
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  return a1;
}

uint64_t sub_23F49C41C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F49C428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = sub_23F616FC4();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_23F49C4B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F49C4BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_23F616FC4();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23F36196C(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
    sub_23F362B80();
  }
}

uint64_t type metadata accessor for LocationEvent()
{
  uint64_t result;

  result = qword_256E756C8;
  if (!qword_256E756C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F49C564()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F616FC4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F49C5D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v2 = sub_23F35D2E8(&qword_256E75708);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v21 - v6;
  v8 = type metadata accessor for LocationEvent();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E75710);
  sub_23F49CBA0();
  if (sub_23F36195C((uint64_t)v7, 1, v8) == 1)
  {
LABEL_4:
    result = sub_23F49C7B8((uint64_t)v7);
LABEL_5:
    *(_OWORD *)a1 = xmmword_23F620FD0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 41) = 0u;
    return result;
  }
  while (1)
  {
    sub_23F49C7F8((uint64_t)v7, (uint64_t)v10);
    if ((sub_23F616F64() & 1) == 0)
      break;
    sub_23F61B350();
    sub_23F49C7B8((uint64_t)v5);
    sub_23F49CBAC();
    sub_23F35D2E8(&qword_256E75710);
    sub_23F49CBA0();
    if (sub_23F36195C((uint64_t)v7, 1, v8) == 1)
      goto LABEL_4;
  }
  if ((sub_23F616F70() & 1) != 0)
  {
    result = sub_23F49CBAC();
    goto LABEL_5;
  }
  v12 = &v10[*(int *)(v8 + 24)];
  v14 = *(_QWORD *)v12;
  v13 = *((_QWORD *)v12 + 1);
  v16 = *((_QWORD *)v12 + 2);
  v15 = *((_QWORD *)v12 + 3);
  v17 = *((_QWORD *)v12 + 4);
  v18 = v12[40];
  v19 = *((_QWORD *)v12 + 6);
  v20 = v12[56];
  sub_23F617BA0();
  sub_23F617BA0();
  result = sub_23F49CBAC();
  *(_QWORD *)a1 = v14;
  *(_QWORD *)(a1 + 8) = v13;
  *(_QWORD *)(a1 + 16) = v16;
  *(_QWORD *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 32) = v17;
  *(_QWORD *)(a1 + 40) = v18;
  *(_QWORD *)(a1 + 48) = v19;
  *(_BYTE *)(a1 + 56) = v20;
  return result;
}

uint64_t sub_23F49C7B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E75708);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F49C7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F49C83C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LocationEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F49C878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E75710);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_23F49C8B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E75710);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23F49C8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E75710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F49C938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E75710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F49C980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E75710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F49C9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E75710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F49CA10()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F49CA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E75710);
  return sub_23F36195C(a1, a2, v4);
}

uint64_t sub_23F49CA54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F49CA60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E75710);
  return sub_23F36196C(a1, a2, a2, v4);
}

uint64_t type metadata accessor for JointResolverLocationSignalProvider()
{
  uint64_t result;

  result = qword_256E75770;
  if (!qword_256E75770)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23F49CAD4()
{
  unint64_t v0;

  sub_23F49CB3C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23F49CB3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E75780)
  {
    sub_23F35EB74(&qword_256E75658);
    sub_23F49B90C();
    v0 = sub_23F61B368();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256E75780);
  }
}

uint64_t sub_23F49CBA0()
{
  return sub_23F61B35C();
}

uint64_t sub_23F49CBAC()
{
  uint64_t v0;

  return sub_23F49C83C(v0);
}

unint64_t sub_23F49CBB4()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_modelDescription);
  v2 = objc_msgSend(v1, sel_metadata);

  type metadata accessor for MLModelMetadataKey(0);
  sub_23F49CCC8();
  v3 = sub_23F61BFBC();

  v4 = (id)*MEMORY[0x24BDBFF40];
  sub_23F3686B0((uint64_t)v4, v3, &v7);

  swift_bridgeObjectRelease();
  if (v8)
  {
    if (swift_dynamicCast())
      return v6;
  }
  else
  {
    sub_23F49CD08((uint64_t)&v7);
  }
  return 0xD000000000000022;
}

unint64_t sub_23F49CCC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E6F850;
  if (!qword_256E6F850)
  {
    type metadata accessor for MLModelMetadataKey(255);
    result = MEMORY[0x242670A44](&unk_23F61E66C, v1);
    atomic_store(result, (unint64_t *)&qword_256E6F850);
  }
  return result;
}

uint64_t sub_23F49CD08(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E6FC98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F49CD48()
{
  uint64_t v0;

  v0 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F619D0C();
  sub_23F4978F0();
  return sub_23F619D30();
}

uint64_t sub_23F49CF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  sub_23F49CD48();
  v5 = v2 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_jointResolverId;
  v6 = sub_23F3846E4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(v5, a1, v6);
  v7(v2 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_contextId, a2, v6);
  return v2;
}

void sub_23F49CFE4()
{
  sub_23F49D394();
}

void sub_23F49D008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[6];

  sub_23F362ABC();
  a19 = v24;
  a20 = v25;
  v76 = v26;
  v77 = v27;
  sub_23F4A1300(v28, v29, v30);
  v75 = v31;
  sub_23F35D2E8(&qword_256E75538);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F3B17BC();
  sub_23F35D2E8(&qword_256E75960);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v33);
  v79 = (char *)&v70 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E75548);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F362838();
  v36 = sub_23F6198EC();
  v81 = *(_QWORD *)(v36 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F36285C();
  v74 = v38;
  sub_23F39C56C();
  v78 = sub_23F619604();
  v80 = *(_QWORD *)(v78 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F3845CC();
  v40 = sub_23F6195C8();
  v41 = *(_QWORD *)(v40 - 8);
  v83 = v40;
  v84 = v41;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F4A0EEC(v43, v70);
  sub_23F35D2E8(&qword_256E75550);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F3E2718();
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v45);
  v46 = sub_23F4A0FB4();
  sub_23F383E7C(v46, (uint64_t)&a14);
  v48 = v47;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F3B1F34();
  v50 = v21 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_stream;
  if (*(_QWORD *)(v21 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_stream + 24))
    sub_23F4A12B0(v50);
  else
    sub_23F4A1060(v50);
  if (v85)
  {
    sub_23F4A1278();
    sub_23F616FF4();
    v51 = sub_23F3846E4();
    sub_23F4A1018(v51);
    sub_23F4A10DC();
    v72 = v36;
    sub_23F4A1384();
    sub_23F4A10E4();
    v52 = v82;
    sub_23F4A0110();
    v53 = v83;
    v54 = swift_allocBox();
    v56 = sub_23F4A13A0(v54, v55);
    v57(v56, v52, v53);
    *v23 = v21;
    v58 = v80;
    v59 = v78;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v80 + 104))(v23, *MEMORY[0x24BE59020], v78);
    v60 = v74;
    sub_23F6198E0();
    v71 = v48;
    v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 16);
    v62 = v73;
    sub_23F383C64(v20, v22, v61);
    v63 = sub_23F4A11CC();
    sub_23F36196C(v63, v64, v65, v62);
    sub_23F6194B4();
    (*(void (**)(char *, _QWORD *, uint64_t))(v58 + 16))(v79, v23, v59);
    v66 = sub_23F4A11CC();
    sub_23F36196C(v66, v67, v68, v59);
    sub_23F6196A0();
    sub_23F619D3C();
    v69 = sub_23F4A134C();
    sub_23F4A110C(v69);
    sub_23F35EA9C(v86, v86[3]);
    sub_23F619DB4();
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v60, v72);
    (*(void (**)(_QWORD *, uint64_t))(v58 + 8))(v23, v59);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v82, v83);
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v22, v62);
    sub_23F4A12E4();
  }
  sub_23F362948();
}

void sub_23F49D370()
{
  sub_23F49D394();
}

void sub_23F49D394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, char *, uint64_t);
  uint64_t v36;
  unsigned int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(uint64_t);
  uint64_t *v48;
  unsigned int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_23F362ABC();
  v49 = v4;
  sub_23F4A1300(v5, v6, v7);
  v9 = v8;
  sub_23F35D2E8(&qword_256E75538);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F4A0EEC(v11, v45);
  sub_23F35D2E8(&qword_256E75960);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v50 = v13;
  sub_23F35D2E8(&qword_256E75548);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3B17A4();
  v15 = sub_23F6198EC();
  v52 = *(_QWORD *)(v15 - 8);
  v53 = v15;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F4A0F08();
  v17 = sub_23F619604();
  v51 = *(_QWORD *)(v17 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  v48 = (uint64_t *)((char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_23F39C56C();
  v21 = v9(v20);
  v56 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v45 - v22;
  sub_23F35D2E8(&qword_256E75550);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3E2718();
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v25);
  v26 = sub_23F4A0FB4();
  v55 = *(_QWORD *)(v26 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F3B1F34();
  v28 = v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_stream;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_stream + 24))
    sub_23F4A12B0(v28);
  else
    sub_23F4A1060(v28);
  if (v57)
  {
    sub_23F4A1278();
    sub_23F616FF4();
    v29 = sub_23F3846E4();
    sub_23F4A1018(v29);
    v30 = sub_23F4A10DC();
    sub_23F4A1384();
    v31 = sub_23F4A10E4();
    v46 = v23;
    v47(v31);
    v32 = swift_allocBox();
    v34 = sub_23F4A13A0(v32, v33);
    v35(v34, v23, v21);
    v36 = v26;
    v38 = (uint64_t)v48;
    v37 = v49;
    *v48 = v30;
    v39 = v51;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v51 + 104))(v38, *v37, v17);
    sub_23F6198E0();
    sub_23F4244A8(v1, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 16));
    sub_23F36196C(v1, 0, 1, v36);
    sub_23F6194B4();
    sub_23F38431C(v50, v38, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 16));
    v40 = sub_23F4A109C();
    sub_23F4A1158(v40, v41, v42, v17);
    sub_23F6196A0();
    v43 = v54;
    sub_23F619D3C();
    v44 = sub_23F4A134C();
    sub_23F4A1158(v43, 0, 1, v44);
    sub_23F6198D4();
    sub_23F4A0FD0();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v2, v53);
    sub_23F383D74(v38, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
    (*(void (**)(char *, uint64_t))(v56 + 8))(v46, v21);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v3, v36);
    sub_23F4A12E4();
  }
  sub_23F362948();
}

void sub_23F49D6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;

  sub_23F362ABC();
  sub_23F35D2E8(&qword_256E75538);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3B17BC();
  sub_23F35D2E8(&qword_256E75958);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F4A0EEC(v8, v34);
  sub_23F35D2E8(&qword_256E75548);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v9);
  v37 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v11 = sub_23F6198EC();
  v39 = *(_QWORD *)(v11 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F4A0F08();
  v13 = sub_23F61946C();
  v41 = *(_QWORD *)(v13 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3845CC();
  sub_23F35D2E8(&qword_256E75550);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3E2718();
  v38 = sub_23F6196D0();
  v36 = *(_QWORD *)(v38 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F362838();
  v18 = v1;
  v19 = v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_stream;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_stream + 24))
    sub_23F4A12B0(v19);
  else
    sub_23F4A1060(v19);
  if (v44)
  {
    sub_23F362678(&v43, (uint64_t)&v45);
    sub_23F6196C4();
    sub_23F616FF4();
    v20 = sub_23F3846E4();
    v42 = v13;
    v21 = v20;
    sub_23F4A1360();
    v35 = v11;
    sub_23F6196B8();
    v22 = sub_23F4A10DC();
    sub_23F4A1384();
    sub_23F36196C(v3, 0, 1, v22);
    sub_23F6196AC();
    sub_23F619460();
    sub_23F384840(v5, v18 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_contextId, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16));
    sub_23F4A1360();
    sub_23F619454();
    sub_23F6198E0();
    v23 = v36;
    v24 = v38;
    sub_23F384840(v37, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16));
    v25 = sub_23F4A109C();
    sub_23F4A1158(v25, v26, v27, v24);
    sub_23F6194B4();
    v28 = v41;
    v29 = v42;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v40, v4, v42);
    v30 = sub_23F4A109C();
    sub_23F4A1158(v30, v31, v32, v29);
    sub_23F619478();
    sub_23F619D3C();
    v33 = sub_23F4A134C();
    sub_23F4A110C(v33);
    sub_23F4A0FD0();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v2, v35);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v4, v42);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0, v24);
    sub_23F4A12E4();
  }
  sub_23F362948();
}

uint64_t sub_23F49D988(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F362930();
  v5 = a2 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_jointResolverId;
  v6 = sub_23F3846E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v2, v5, v6);
  sub_23F36196C(v2, 0, 1, v6);
  return sub_23F4A1354();
}

void sub_23F49DA28()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  int v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F61949C();
  sub_23F619490();
  sub_23F615070();
  v1 = v0;
  v2 = objc_msgSend(v0, sel_shape);

  sub_23F489080();
  v3 = sub_23F4A12D0();

  sub_23F4A1180();
  if ((v3 & 0xC000000000000001) != 0)
    sub_23F4A12EC();
  v4 = *(id *)(v3 + 32);
  swift_bridgeObjectRelease();
  v5 = sub_23F61C568();

  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v5)
    {
      v6 = 0;
      do
      {
        sub_23F615070();
        v8 = v7;
        v9 = sub_23F4A1204(v7, sel_objectAtIndexedSubscript_);

        v10 = sub_23F61CD78();
        sub_23F619874();
        v12 = v11;
        v13 = *v11;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v12 = v13;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F3C0670();
          sub_23F3770FC();
          v13 = v16;
          *v12 = v16;
        }
        v15 = *(_QWORD *)(v13 + 16);
        if (v15 >= *(_QWORD *)(v13 + 24) >> 1)
        {
          sub_23F3770FC();
          v13 = v17;
          *v12 = v17;
        }
        ++v6;
        *(_QWORD *)(v13 + 16) = v15 + 1;
        *(_DWORD *)(v13 + 4 * v15 + 32) = v10;
        sub_23F4A0F24((uint64_t)&v18);
      }
      while (v5 != v6);
    }
    sub_23F4A0FFC();
  }
}

void sub_23F49DBC4()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id *v12;
  id *v13;
  id v14;
  id v15;
  id *v16;
  id *v17;
  id *v18;
  id v19;
  uint64_t v20;
  id **v21;
  id **v22;
  char v23;
  unint64_t v24;
  id *v25;
  id *v26;
  id *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id *v31;
  uint64_t v32;

  sub_23F362ABC();
  v31 = v0;
  v2 = v1;
  v4 = v3;
  v5 = sub_23F4A10DC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v27 - v10;
  sub_23F61949C();
  v29 = v4;
  sub_23F619490();
  v30 = v2;
  sub_23F615084();
  v13 = v12;
  v14 = objc_msgSend(v12, sel_shape);
  sub_23F489114();
  sub_23F489080();
  sub_23F61C3DC();
  sub_23F488F74();
  sub_23F4A113C(0, ((unint64_t)v13 & 0xC000000000000001) == 0);
  if (((unint64_t)v13 & 0xC000000000000001) != 0)
    sub_23F4A1150();
  v15 = v13[4];
  sub_23F4A0F5C();
  sub_23F4A11DC();
  sub_23F488F74();
  if (((unint64_t)v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if (v13)
    {
      v16 = 0;
      v27 = v13;
      v28 = v9;
      do
      {
        sub_23F615084();
        v18 = v17;
        v19 = objc_msgSend(v17, sel_objectAtIndexedSubscript_, v16);
        sub_23F489114();
        sub_23F4A11DC();
        sub_23F488F74();
        MEMORY[0x24BDAC7A8](v20);
        *(&v27 - 2) = v31;
        *(&v27 - 1) = v18;
        sub_23F619DC0();
        sub_23F38431C((uint64_t)v9, (uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
        sub_23F619748();
        v22 = v21;
        v23 = sub_23F4A1314();
        *v22 = v18;
        if ((v23 & 1) == 0)
        {
          sub_23F4A0FA8();
          v18 = v25;
          *v22 = v25;
        }
        v24 = (unint64_t)v18[2];
        if (v24 >= (unint64_t)v18[3] >> 1)
        {
          sub_23F4A0FA8();
          v18 = v26;
          *v22 = v26;
        }
        v16 = (id *)((char *)v16 + 1);
        v18[2] = (id)(v24 + 1);
        v9 = v28;
        sub_23F38431C((uint64_t)v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v24, (uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
        sub_23F4A0F24((uint64_t)&v32);
        sub_23F383D74((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      }
      while (v27 != v16);
    }
    sub_23F362948();
  }
}

void sub_23F49DE2C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  int v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F4A1190();
  sub_23F61949C();
  sub_23F6150B0();
  v1 = v0;
  v2 = objc_msgSend(v0, sel_shape);

  sub_23F489080();
  v3 = sub_23F4A12D0();

  sub_23F3753DC(0, (v3 & 0xC000000000000001) == 0, v3);
  if ((v3 & 0xC000000000000001) != 0)
    v4 = (id)MEMORY[0x24266FE14](0, v3);
  else
    v4 = *(id *)(v3 + 32);
  v5 = v4;
  sub_23F362D08();
  v6 = sub_23F61C568();

  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v6)
    {
      v7 = 0;
      v8 = MEMORY[0x24BEE4AF8];
      do
      {
        sub_23F6150B0();
        v10 = v9;
        v11 = sub_23F4A1204(v9, sel_objectAtIndexedSubscript_);

        objc_msgSend(v11, sel_floatValue);
        v13 = v12;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F4A0EC0();
          sub_23F3770E0();
          v8 = v16;
        }
        v15 = *(_QWORD *)(v8 + 16);
        v14 = *(_QWORD *)(v8 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_23F4A0F90(v14);
          sub_23F3770E0();
          v8 = v17;
        }
        ++v7;
        *(_QWORD *)(v8 + 16) = v15 + 1;
        *(_DWORD *)(v8 + 4 * v15 + 32) = v13;
      }
      while (v6 != v7);
    }
    sub_23F619490();
    sub_23F4A0EA4();
  }
}

uint64_t sub_23F49DF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id *v30;
  id *v31;
  id v32;
  id v33;
  id *v34;
  id *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t result;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81[8];
  uint64_t v82;
  uint64_t v83;

  v73 = a2;
  v62 = a3;
  sub_23F35D2E8(&qword_256E75948);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v56 = v6;
  sub_23F39C56C();
  v7 = sub_23F619D6C();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3834D0();
  v76 = v8;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F383780();
  v75 = v10;
  sub_23F39C56C();
  v11 = sub_23F619730();
  sub_23F383E7C(v11, (uint64_t)&v83);
  v66 = v12;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3834D0();
  v65 = v14;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F383780();
  v74 = v16;
  sub_23F39C56C();
  v17 = sub_23F61979C();
  sub_23F383E7C(v17, (uint64_t)v81);
  v54 = v18;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F36285C();
  v63 = v20;
  sub_23F35D2E8(&qword_256E75950);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F4A0F08();
  v22 = sub_23F6195F8();
  v72 = *(_QWORD *)(v22 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3834D0();
  v71 = v24;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v25);
  v26 = sub_23F619694();
  sub_23F383E7C(v26, (uint64_t)&v82);
  v60 = v27;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v28);
  v68 = (uint64_t)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = a1;
  sub_23F61509C();
  v31 = v30;
  v32 = objc_msgSend(v30, sel_shape);
  sub_23F489114();
  v77 = sub_23F489080();
  sub_23F61C3DC();
  sub_23F488F74();
  sub_23F4A113C(1uLL, ((unint64_t)v31 & 0xC000000000000001) == 0);
  v59 = v3;
  if (((unint64_t)v31 & 0xC000000000000001) != 0)
    sub_23F4A1150();
  v33 = v31[5];
  sub_23F4A0F5C();
  sub_23F61C568();
  sub_23F488FFC();
  sub_23F4A1320();
  v35 = v34;
  v36 = objc_msgSend(v34, sel_shape);
  sub_23F489114();
  sub_23F61C3DC();
  sub_23F488F74();
  sub_23F4A113C(2uLL, ((unint64_t)v35 & 0xC000000000000001) == 0);
  if (((unint64_t)v35 & 0xC000000000000001) != 0)
    sub_23F4A1150();
  v37 = v35[6];
  sub_23F4A0F5C();
  v79 = sub_23F61C568();

  sub_23F61985C();
  sub_23F61949C();
  sub_23F619490();
  v58 = sub_23F35D2E8(&qword_256E70E48);
  v38 = sub_23F488EB4();
  v57 = xmmword_23F623640;
  *(_OWORD *)(v38 + 16) = xmmword_23F623640;
  result = sub_23F4A11BC((uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 0));
  if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    v67 = v80;
    v69 = v3;
    if (!v3)
    {
      swift_bridgeObjectRelease();
      v43 = v61;
      sub_23F38426C(v59, v68, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 16));
      v44 = sub_23F4A109C();
      sub_23F36196C(v44, v45, v46, v43);
      sub_23F619844();
      sub_23F61949C();
      sub_23F619490();
      *(_OWORD *)(sub_23F488EB4() + 16) = v57;
      sub_23F4A11BC((uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 1));
      v71 = v80;
      swift_bridgeObjectRelease();
      v47 = v54;
      v48 = v63;
      v49 = v55;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v56, v63, v55);
      v50 = sub_23F4A11CC();
      sub_23F36196C(v50, v51, v52, v49);
      sub_23F619850();
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v49);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v68, v61);
    }
    if ((v79 & 0x8000000000000000) == 0)
    {
      v64 = v22;
      v40 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
      v70 = 0;
      v41 = objc_msgSend(v40, sel_initWithInteger_, 0);
      v80 = v67;
      sub_23F617BA0();
      v42 = v41;
      sub_23F4A11B4();
    }
  }
  __break(1u);
  __break(1u);
  return result;
}

void sub_23F49EAA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  id *v6;
  id v7;
  id v8;
  uint64_t v9;
  id *v10;
  id *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F4A1190();
  v0 = sub_23F4A10DC();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F4A1074(v1, v19);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F383780();
  sub_23F39C56C();
  sub_23F619838();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3834D0();
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F383780();
  sub_23F61949C();
  sub_23F619490();
  sub_23F6150CC();
  v6 = v5;
  v7 = sub_23F4A1178(v5);
  sub_23F489114();
  sub_23F489080();
  sub_23F61C3DC();
  sub_23F488F74();
  sub_23F4A113C(0, ((unint64_t)v6 & 0xC000000000000001) == 0);
  if (((unint64_t)v6 & 0xC000000000000001) != 0)
    sub_23F4A1150();
  v8 = v6[4];
  sub_23F4A0F5C();
  v9 = sub_23F4A11DC();

  sub_23F4A1170();
  v11 = v10;
  v12 = sub_23F4A1178(v10);
  sub_23F489114();
  sub_23F61C3DC();
  sub_23F488F74();
  sub_23F4A113C(1uLL, ((unint64_t)v11 & 0xC000000000000001) == 0);
  if (((unint64_t)v11 & 0xC000000000000001) != 0)
    sub_23F4A1150();
  v13 = v11[5];
  sub_23F4A0F5C();
  sub_23F4A11DC();
  sub_23F488F74();
  if (v9 < 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v9)
  {
    v20 = (uint64_t)v11 - 2;
    if (!__OFSUB__(v11, 2))
    {
      sub_23F35D2E8(&qword_256E70E48);
      v14 = sub_23F488EB4();
      *(_OWORD *)(v14 + 16) = xmmword_23F623640;
      *(_QWORD *)(v14 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 0);
      sub_23F61C3F4();
      sub_23F61982C();
      sub_23F619808();
      if (v20 >= 1)
      {
        v15 = sub_23F4A11FC(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_);
        sub_23F4A1224();
        v16 = v15;
        sub_23F4A1294();
      }
      v17 = sub_23F4A11FC(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_);
      sub_23F4A1224();
      v18 = v17;
      sub_23F4A1294();
    }
LABEL_13:
    __break(1u);
    JUMPOUT(0x23F49F138);
  }
  sub_23F4A0EA4();
}

uint64_t sub_23F49F15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F362930();
  if (*(_QWORD *)(a2 + 16) && (v7 = sub_23F37556C(a3), (v8 & 1) != 0))
  {
    v9 = v7;
    v10 = *(_QWORD *)(a2 + 56);
    v11 = sub_23F3846E4();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v9, v11);
    v12 = v3;
    v13 = 0;
    v14 = v11;
  }
  else
  {
    v14 = sub_23F3846E4();
    v12 = v3;
    v13 = 1;
  }
  sub_23F36196C(v12, v13, 1, v14);
  return sub_23F4A1354();
}

uint64_t sub_23F49F22C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  sub_23F35D2E8(&qword_256E75920);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E75928);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F362930();
  sub_23F35D2E8(&qword_256E75930);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E75938);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B1F34();
  sub_23F35D2E8(&qword_256E75940);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3845CC();
  sub_23F619508();
  sub_23F49DE2C();
  v9 = sub_23F6197C0();
  sub_23F40B3E8(v1, v10, v11, v9);
  sub_23F6194D8();
  sub_23F49DA28();
  v12 = sub_23F619898();
  sub_23F4A1254(v12);
  sub_23F6194F0();
  sub_23F4A1340();
  sub_23F49DBC4();
  v13 = sub_23F61976C();
  sub_23F40B3E8(v0, v14, v15, v13);
  sub_23F6194C0();
  sub_23F49F3E4();
  sub_23F6194CC();
  v16 = sub_23F4A1340();
  sub_23F49DF90(v16, v17, v18);
  v19 = sub_23F619868();
  sub_23F4A1230(v19);
  sub_23F6194FC();
  sub_23F4A1340();
  sub_23F49EAA8();
  v20 = sub_23F6197F0();
  sub_23F40B3E8((uint64_t)v4, v21, v22, v20);
  return sub_23F6194E4();
}

uint64_t sub_23F49F3E4()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  char v4;

  sub_23F489080();
  sub_23F615104();
  v1 = v0;
  v2 = objc_msgSend(v0, sel_objectAtIndexedSubscript_, 0);

  v3 = (void *)sub_23F61C6C4();
  v4 = sub_23F61C6D0();

  return v4 & 1;
}

uint64_t sub_23F49F464(id *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v6;
  id v7;
  uint64_t v8;
  char v9;
  char v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  unint64_t v31;
  int v32;
  unint64_t v33;
  uint64_t result;
  void *v35;

  sub_23F619658();
  v6 = objc_msgSend(a1[2], sel_shape);
  sub_23F489080();
  sub_23F61C3DC();
  sub_23F488FFC();
  if (v1 >> 62)
    goto LABEL_33;
  sub_23F4A1218();
  while (v2)
  {
    sub_23F4A0E48();
    if (v2 < 0)
    {
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    sub_23F4A0F68();
    while (v2 != v3)
    {
      if (a1)
        sub_23F4A0F2C();
      v7 = sub_23F4A0F44();
      if (((unint64_t)sub_23F4A0F38(v7) & 0x8000000000000000) != 0)
        goto LABEL_110;
      sub_23F4A120C();
      if (v8)
        goto LABEL_110;

      sub_23F4A0ED8();
      if (v9)
      {
        sub_23F4A0E60();
        v6 = v35;
      }
      sub_23F4A0E8C();
      if (v10)
      {
        sub_23F3837B0();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    sub_23F4A0E78();
    v2 = sub_23F4A1094();
    sub_23F3837B0();
  }
  sub_23F3837B0();
  v6 = (id)MEMORY[0x24BEE4AF8];
LABEL_17:
  sub_23F4A1144();
  sub_23F61961C();
  v11 = objc_msgSend(a1[3], sel_shape);
  sub_23F4A0F50();
  sub_23F488FFC();
  if (!(v1 >> 62))
  {
    sub_23F4A1218();
    if (!v2)
      goto LABEL_35;
    goto LABEL_19;
  }
  sub_23F4A0E78();
  v2 = sub_23F4A1094();
  sub_23F3837B0();
  if (v2)
  {
LABEL_19:
    sub_23F4A0E48();
    if (v2 < 0)
      goto LABEL_105;
    sub_23F4A0F68();
    while (v2 != v3)
    {
      if (a1)
        sub_23F4A0F2C();
      v12 = sub_23F4A0F44();
      if (((unint64_t)sub_23F4A0F38(v12) & 0x8000000000000000) != 0)
        goto LABEL_110;
      sub_23F4A120C();
      if (v13)
        goto LABEL_110;

      sub_23F4A0ED8();
      if (v9)
      {
        sub_23F4A0E60();
        v6 = v35;
      }
      sub_23F4A0E8C();
      if (v10)
      {
        sub_23F3837B0();
        goto LABEL_36;
      }
    }
    goto LABEL_32;
  }
LABEL_35:
  sub_23F3837B0();
  v6 = (id)MEMORY[0x24BEE4AF8];
LABEL_36:
  sub_23F4A1144();
  sub_23F619610();
  v14 = objc_msgSend(a1[4], sel_shape);
  sub_23F4A0F50();
  sub_23F488FFC();
  if (v1 >> 62)
    goto LABEL_51;
  sub_23F4A1218();
  while (v2)
  {
    sub_23F4A0E48();
    if (v2 < 0)
      goto LABEL_106;
    sub_23F4A0F68();
    while (v2 != v3)
    {
      if (a1)
        sub_23F4A0F2C();
      v15 = sub_23F4A0F44();
      if (((unint64_t)sub_23F4A0F38(v15) & 0x8000000000000000) != 0)
        goto LABEL_110;
      sub_23F4A120C();
      if (v16)
        goto LABEL_110;

      sub_23F4A0ED8();
      if (v9)
      {
        sub_23F4A0E60();
        v6 = v35;
      }
      sub_23F4A0E8C();
      if (v10)
      {
        sub_23F3837B0();
        goto LABEL_53;
      }
    }
    __break(1u);
LABEL_51:
    sub_23F4A0E78();
    v2 = sub_23F4A1094();
    sub_23F3837B0();
  }
  sub_23F3837B0();
  v6 = (id)MEMORY[0x24BEE4AF8];
LABEL_53:
  sub_23F4A1144();
  sub_23F619634();
  v17 = objc_msgSend(a1[5], sel_shape);
  sub_23F4A0F50();
  sub_23F488FFC();
  if (v1 >> 62)
    goto LABEL_68;
  sub_23F4A1218();
  while (v2)
  {
    sub_23F4A0E48();
    if (v2 < 0)
      goto LABEL_107;
    sub_23F4A0F68();
    while (v2 != v3)
    {
      if (a1)
        sub_23F4A0F2C();
      v18 = sub_23F4A0F44();
      if (((unint64_t)sub_23F4A0F38(v18) & 0x8000000000000000) != 0)
        goto LABEL_110;
      sub_23F4A120C();
      if (v19)
        goto LABEL_110;

      sub_23F4A0ED8();
      if (v9)
      {
        sub_23F4A0E60();
        v6 = v35;
      }
      sub_23F4A0E8C();
      if (v10)
      {
        sub_23F3837B0();
        goto LABEL_70;
      }
    }
    __break(1u);
LABEL_68:
    sub_23F4A0E78();
    v2 = sub_23F4A1094();
    sub_23F3837B0();
  }
  sub_23F3837B0();
  v6 = (id)MEMORY[0x24BEE4AF8];
LABEL_70:
  sub_23F4A1144();
  sub_23F61964C();
  v20 = objc_msgSend(a1[6], sel_shape);
  sub_23F4A0F50();
  sub_23F488FFC();
  if (v1 >> 62)
    goto LABEL_85;
  sub_23F4A1218();
  while (v2)
  {
    sub_23F4A0E48();
    if (v2 < 0)
      goto LABEL_108;
    sub_23F4A0F68();
    while (v2 != v3)
    {
      if (a1)
        sub_23F4A0F2C();
      v21 = sub_23F4A0F44();
      if (((unint64_t)sub_23F4A0F38(v21) & 0x8000000000000000) != 0)
        goto LABEL_110;
      sub_23F4A120C();
      if (v22)
        goto LABEL_110;

      sub_23F4A0ED8();
      if (v9)
      {
        sub_23F4A0E60();
        v6 = v35;
      }
      sub_23F4A0E8C();
      if (v10)
      {
        sub_23F3837B0();
        goto LABEL_87;
      }
    }
    __break(1u);
LABEL_85:
    sub_23F4A0E78();
    v2 = sub_23F4A1094();
    sub_23F3837B0();
  }
  sub_23F3837B0();
  v6 = (id)MEMORY[0x24BEE4AF8];
LABEL_87:
  sub_23F4A1144();
  sub_23F619640();
  v23 = objc_msgSend(a1[7], sel_shape);
  v24 = sub_23F4A0F50();

  v25 = MEMORY[0x24BEE4AF8];
  if (v24 >> 62)
    goto LABEL_102;
  v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v26)
  {
LABEL_103:
    sub_23F362D08();
    sub_23F4A1144();
    return sub_23F619628();
  }
  while (1)
  {
    sub_23F37B54C();
    if (v26 < 0)
      break;
    v27 = 0;
    v28 = v25;
    v25 = v24 & 0xC000000000000001;
    while (v26 != v27)
    {
      if (v25)
        v29 = (id)MEMORY[0x24266FE14](v27, v24);
      else
        v29 = *(id *)(v24 + 8 * v27 + 32);
      v30 = v29;
      v31 = (unint64_t)objc_msgSend(v29, sel_integerValue);
      if ((v31 & 0x8000000000000000) != 0)
        goto LABEL_110;
      v32 = v31;
      if (HIDWORD(v31))
        goto LABEL_110;

      v33 = *(_QWORD *)(v28 + 16);
      if (v33 >= *(_QWORD *)(v28 + 24) >> 1)
        sub_23F37B54C();
      ++v27;
      *(_QWORD *)(v28 + 16) = v33 + 1;
      *(_DWORD *)(v28 + 4 * v33 + 32) = v32;
      if (v26 == v27)
        goto LABEL_103;
    }
    __break(1u);
LABEL_102:
    sub_23F617BA0();
    v26 = sub_23F4A1094();
    sub_23F362D08();
    if (!v26)
      goto LABEL_103;
  }
LABEL_109:
  __break(1u);
LABEL_110:
  sub_23F3833BC();
  result = sub_23F4A12C4();
  __break(1u);
  return result;
}

void sub_23F49FA74()
{
  _QWORD *v0;
  unint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F38813C();
  v2 = (_QWORD *)sub_23F61C808();
  if (v2[2] < 3uLL)
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v3 = (uint64_t)v2;
  v0 = v2 + 4;
  v4 = v2[4];
  v5 = v2[5];
  sub_23F384324();
  sub_23F510CB4(1, v4, v5);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  if ((swift_isUniquelyReferenced_nonNull() & 1) != 0)
  {
    v14 = 0;
    v1 = 3;
  }
  else
  {
    sub_23F4A07E8(v3, (uint64_t)v0, 0, 7uLL);
    v0 = v15;
    v14 = v16 > 0;
    v1 = v17 >> 1;
  }
  if (v14 || !v1)
    goto LABEL_26;
  *v0 = v7;
  v0[1] = v9;
  v0[2] = v11;
  v0[3] = v13;
  swift_bridgeObjectRelease();
  sub_23F619D9C();
  if ((v0[1] ^ *v0) < 0x4000)
  {
LABEL_27:
    v20 = 0;
    goto LABEL_12;
  }
  sub_23F4A10C4();
  v19 = v18;
  if ((v18 & 0x10000000000) != 0)
  {
    sub_23F384324();
    sub_23F4A10AC();
    sub_23F4A1334();
  }
  v20 = v19;
  if ((v19 & 0x100000000) != 0)
    v20 = 0;
LABEL_12:
  sub_23F4A0F78(v20);
  sub_23F619D78();
  if (v1 < 2)
  {
    __break(1u);
    goto LABEL_29;
  }
  if ((v0[5] ^ v0[4]) < 0x4000)
  {
LABEL_29:
    v23 = 0;
    goto LABEL_18;
  }
  sub_23F4A10C4();
  v22 = v21;
  if ((v21 & 0x10000000000) != 0)
  {
    sub_23F384324();
    sub_23F4A10AC();
    sub_23F4A1334();
  }
  v23 = v22;
  if ((v22 & 0x100000000) != 0)
    v23 = 0;
LABEL_18:
  sub_23F4A0F78(v23);
  sub_23F619D84();
  if (v1 < 3)
  {
    __break(1u);
    goto LABEL_31;
  }
  if ((v0[9] ^ v0[8]) < 0x4000)
  {
LABEL_31:
    v36 = 0;
    goto LABEL_24;
  }
  v24 = sub_23F4A11E4();
  sub_23F4A08A8(v24, v25, v26, v27, v28);
  v30 = v29;
  if ((v29 & 0x10000000000) != 0)
  {
    sub_23F617BA0();
    v31 = sub_23F4A11E4();
    v30 = sub_23F4A0478(v31, v32, v33, v34, v35);
    sub_23F3837B0();
  }
  v36 = v30;
  if ((v30 & 0x100000000) != 0)
    v36 = 0;
LABEL_24:
  sub_23F4A0F78(v36);
  sub_23F619D90();
  swift_unknownObjectRelease();
  sub_23F4A0FFC();
}

void sub_23F49FCA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  _QWORD *v25;
  id v26;
  unsigned int v27;
  _QWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD v58[4];

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v4 = sub_23F6198C8();
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F4A1074(v6, v48);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v48 - v8;
  sub_23F61949C();
  v51 = v3;
  sub_23F619490();
  v57 = v1;
  v10 = sub_23F4A1178(*(void **)(v1 + 64));
  v56 = sub_23F489080();
  sub_23F61C3DC();
  sub_23F489114();
  sub_23F4A1180();
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_26;
  v11 = *(id *)(v3 + 32);
  sub_23F4A12B8();
  v12 = sub_23F61C568();

  v13 = sub_23F4A1178(*(void **)(v57 + 64));
  sub_23F61C3DC();
  sub_23F489114();
  sub_23F3753DC(1uLL, (v3 & 0xC000000000000001) == 0, v3);
  v14 = *(id *)(v3 + 40);
  sub_23F4A12B8();
  v15 = sub_23F61C568();

  if (v12 < 0)
  {
    __break(1u);
  }
  else
  {
    if (!v12)
    {
LABEL_23:
      sub_23F362948();
      return;
    }
    if ((v15 & 0x8000000000000000) == 0)
    {
      v16 = 0;
      v50 = xmmword_23F623640;
      v49 = v12;
      while (1)
      {
        if (v16 == v12)
          goto LABEL_25;
        sub_23F61949C();
        sub_23F619490();
        sub_23F35D2E8(&qword_256E70E48);
        v17 = sub_23F488EB4();
        *(_OWORD *)(v17 + 16) = v50;
        v18 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
        v52 = v16;
        *(_QWORD *)(v17 + 32) = objc_msgSend(v18, sel_initWithInteger_, v16);
        v58[0] = v17;
        sub_23F61C3F4();
        v19 = v58[0];
        if (v15)
          break;
LABEL_18:
        sub_23F362D08();
        (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v53, v9, v55);
        sub_23F619484();
        v36 = v35;
        v37 = *v35;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v36 = v37;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F3C0670();
          sub_23F3771F0();
          v37 = v46;
          *v36 = v46;
        }
        v40 = *(_QWORD *)(v37 + 16);
        v39 = *(_QWORD *)(v37 + 24);
        if (v40 >= v39 >> 1)
        {
          sub_23F493460(v39);
          sub_23F3771F0();
          v37 = v47;
          *v36 = v47;
        }
        v41 = v53;
        v42 = v52 + 1;
        *(_QWORD *)(v37 + 16) = v40 + 1;
        v44 = v54;
        v43 = v55;
        v45 = v37 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
        v16 = v42;
        sub_23F38426C(v45 + *(_QWORD *)(v54 + 72) * v40, v41, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 32));
        sub_23F4A0F24((uint64_t)v58);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v43);
        v12 = v49;
        if (v16 == v49)
          goto LABEL_23;
      }
      v20 = 0;
      while (v15 != v20)
      {
        v21 = sub_23F4A1204(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_);
        v58[0] = v19;
        sub_23F617BA0();
        v22 = v21;
        MEMORY[0x24266F8D4]();
        if (*(_QWORD *)((v58[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v58[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23F4A0E38();
        sub_23F61C424();
        sub_23F61C3F4();
        v23 = (void *)v58[0];

        v24 = *(id *)(v57 + 64);
        v25 = (_QWORD *)sub_23F61C3D0();
        swift_bridgeObjectRelease();
        v26 = sub_23F4A11FC(v24, sel_objectForKeyedSubscript_);
        sub_23F488F74();

        v27 = objc_msgSend(v23, sel_intValue);
        if ((v27 & 0x80000000) != 0)
          goto LABEL_29;
        sub_23F6198A4();
        v29 = v28;
        v30 = sub_23F4A1130();
        *v29 = v25;
        if ((v30 & 1) == 0)
        {
          sub_23F4A0EC0();
          sub_23F3770FC();
          v25 = v33;
          *v29 = v33;
        }
        v32 = v25[2];
        v31 = v25[3];
        if (v32 >= v31 >> 1)
        {
          sub_23F493460(v31);
          sub_23F3770FC();
          v25 = v34;
          *v29 = v34;
        }
        ++v20;
        v25[2] = v32 + 1;
        *((_DWORD *)v25 + v32 + 8) = v27;
        sub_23F4A0F24((uint64_t)v58);
        if (v15 == v20)
          goto LABEL_18;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      sub_23F4A12EC();
    }
  }
  __break(1u);
LABEL_29:
  sub_23F3833BC();
  sub_23F4A12C4();
  __break(1u);
}

void sub_23F4A0110()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  float v10;
  float v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  sub_23F4A1190();
  v18 = v1;
  v3 = v2;
  sub_23F35D2E8(&qword_256E75900);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B17A4();
  sub_23F35D2E8(&qword_256E75908);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B1F34();
  sub_23F35D2E8(&qword_256E75910);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F362930();
  sub_23F35D2E8(&qword_256E75918);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F4A02C4((uint64_t)v3);
  v11 = sub_23F4A02CC((uint64_t)v3);
  sub_23F6195BC();
  sub_23F49F464(v3);
  v12 = sub_23F619664();
  sub_23F36196C((uint64_t)v9, 0, 1, v12);
  sub_23F61958C();
  sub_23F49F22C();
  v13 = sub_23F619514();
  sub_23F4A1230(v13);
  sub_23F619580();
  sub_23F49FA74();
  v14 = sub_23F619DA8();
  sub_23F4A1254(v14);
  sub_23F6195B0();
  v20 = 0;
  sub_23F4A1328(LODWORD(v10));
  sub_23F6195A4();
  v19 = 0;
  sub_23F4A1328(LODWORD(v11));
  sub_23F619598();
  sub_23F49FCA4();
  v15 = sub_23F6194A8();
  sub_23F40B3E8(v0, v16, v17, v15);
  sub_23F619574();
  sub_23F4A0EA4();
}

float sub_23F4A02C4(uint64_t a1)
{
  return sub_23F4A02D4(a1, 0);
}

float sub_23F4A02CC(uint64_t a1)
{
  return sub_23F4A02D4(a1, 1);
}

float sub_23F4A02D4(uint64_t a1, uint64_t a2)
{
  id v2;
  float v3;
  float v4;

  v2 = objc_msgSend(*(id *)(a1 + 72), sel_objectAtIndexedSubscript_, a2);
  sub_23F61C4FC();
  v4 = v3;

  return v4;
}

uint64_t sub_23F4A0324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_jointResolverId;
  v2 = sub_23F3846E4();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_contextId, v2);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_stream + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22JointResolverTelemetry_stream);
  return v0;
}

uint64_t sub_23F4A039C()
{
  sub_23F4A0324();
  return swift_deallocClassInstance();
}

uint64_t sub_23F4A03C0()
{
  return type metadata accessor for JointResolverTelemetry();
}

uint64_t type metadata accessor for JointResolverTelemetry()
{
  uint64_t result;

  result = qword_256E757E0;
  if (!qword_256E757E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F4A0400()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F617000();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23F4A0478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_23F3F0DA4();
  sub_23F617BA0();
  v7 = sub_23F61C340();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_23F505B3C();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_23F61C934();
  }
LABEL_7:
  v13 = sub_23F4A0568(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13 | ((((unint64_t)v13 >> 32) & 1) << 32);
}

unsigned __int8 *sub_23F4A0568(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__CFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__CFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (v14 < v15)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_23F4A07E8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  size_t v8;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else
  {
    if (v5)
    {
      sub_23F35D2E8(&qword_256E70138);
      v7 = (_QWORD *)swift_allocObject();
      v8 = j__malloc_size(v7);
      v7[2] = v5;
      v7[3] = 2 * ((uint64_t)(v8 - 32) / 32);
    }
    else
    {
      v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    swift_unknownObjectRelease();
    if (v4 >= a3)
    {
      swift_arrayInitWithCopy();
      sub_23F4A0DB0((uint64_t)v7, a3);
      return;
    }
  }
  __break(1u);
}

void sub_23F4A08A8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
  {
    v15 = 0;
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v12 = HIBYTE(a4) & 0xF;
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      v11 = v14;
    }
    else if ((a3 & 0x1000000000000000) != 0)
    {
      v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
      v12 = a3 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      v11 = (_QWORD *)sub_23F61C934();
    }
    sub_23F4A0980((uint64_t)v11, v12, a1, a2, a3, a4, a5);
    if (!v5)
      v15 = v13 & 1;
  }
}

void sub_23F4A0980(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7)
{
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  int v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned int v34;
  unsigned __int8 *v35;
  uint64_t v36;
  unsigned int v37;
  char v38;
  unint64_t v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unsigned int v44;
  unsigned __int8 *v45;
  uint64_t v46;
  unsigned int v47;
  char v48;
  unint64_t v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  unsigned __int8 v52;
  unsigned __int8 v53;
  unsigned int v54;
  unsigned int v55;
  char v56;
  unint64_t v57;
  unsigned __int8 v58;

  v11 = a3;
  v13 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0)
    LOBYTE(v13) = 1;
  v14 = 4 << v13;
  v15 = a3 & 0xC;
  v16 = a3;
  if (v15 == 4 << v13)
  {
    sub_23F3BBECC(a3, a5, a6);
    v16 = v20;
  }
  v17 = HIBYTE(a6) & 0xF;
  if ((a6 & 0x1000000000000000) != 0)
  {
    v21 = a5 & 0xFFFFFFFFFFFFLL;
    if ((a6 & 0x2000000000000000) != 0)
      v21 = HIBYTE(a6) & 0xF;
    if (v21 < v16 >> 16)
      goto LABEL_104;
    v18 = sub_23F61C2D4();
    v17 = HIBYTE(a6) & 0xF;
  }
  else
  {
    v18 = v16 >> 16;
  }
  if (v15 == v14)
  {
    v22 = v17;
    sub_23F3BBECC(v11, a5, a6);
    v17 = v22;
    v11 = v23;
  }
  if ((a4 & 0xC) == v14)
  {
    v24 = a4;
    v25 = v17;
    sub_23F3BBECC(v24, a5, a6);
    v17 = v25;
    a4 = v26;
    if ((a6 & 0x1000000000000000) == 0)
      goto LABEL_11;
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
LABEL_11:
    v19 = (a4 >> 16) - (v11 >> 16);
    goto LABEL_22;
  }
  v27 = a5 & 0xFFFFFFFFFFFFLL;
  if ((a6 & 0x2000000000000000) != 0)
    v27 = v17;
  if (v27 < v11 >> 16)
    goto LABEL_100;
  if (v27 < a4 >> 16)
  {
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  v19 = sub_23F61C2D4();
LABEL_22:
  v28 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_99;
  }
  if (v28 < v18)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  v29 = (unsigned __int8 *)(a1 + v18);
  if (!a1)
    v29 = 0;
  v30 = *v29;
  if (v30 == 43)
  {
    if (v19 < 1)
    {
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      return;
    }
    if (v19 != 1)
    {
      v41 = a7 + 87;
      if (a7 > 10)
      {
        v42 = a7 + 55;
      }
      else
      {
        v41 = 97;
        v42 = 65;
      }
      v43 = a7 <= 10 ? a7 + 48 : 58;
      if (v29)
      {
        v44 = 0;
        v45 = v29 + 1;
        v46 = v19 - 1;
        while (1)
        {
          v47 = *v45;
          if (v47 < 0x30 || v47 >= v43)
          {
            if (v47 < 0x41 || v47 >= v42)
            {
              if (v47 < 0x61 || v47 >= v41)
                return;
              v48 = -87;
            }
            else
            {
              v48 = -55;
            }
          }
          else
          {
            v48 = -48;
          }
          v49 = v44 * (unint64_t)a7;
          if ((v49 & 0xFFFFFFFF00000000) == 0)
          {
            v50 = v47 + v48;
            v44 = v49 + v50;
            if (!__CFADD__((_DWORD)v49, v50))
            {
              ++v45;
              if (--v46)
                continue;
            }
          }
          return;
        }
      }
    }
  }
  else
  {
    if (v30 == 45)
    {
      if (v19 >= 1)
      {
        if (v19 != 1)
        {
          v31 = a7 + 87;
          if (a7 > 10)
          {
            v32 = a7 + 55;
          }
          else
          {
            v31 = 97;
            v32 = 65;
          }
          v33 = a7 <= 10 ? a7 + 48 : 58;
          if (v29)
          {
            v34 = 0;
            v35 = v29 + 1;
            v36 = v19 - 1;
            while (1)
            {
              v37 = *v35;
              if (v37 < 0x30 || v37 >= v33)
              {
                if (v37 < 0x41 || v37 >= v32)
                {
                  if (v37 < 0x61 || v37 >= v31)
                    return;
                  v38 = -87;
                }
                else
                {
                  v38 = -55;
                }
              }
              else
              {
                v38 = -48;
              }
              v39 = v34 * (unint64_t)a7;
              if ((v39 & 0xFFFFFFFF00000000) == 0)
              {
                v40 = v37 + v38;
                v34 = v39 - v40;
                if (v39 >= v40)
                {
                  ++v35;
                  if (--v36)
                    continue;
                }
              }
              return;
            }
          }
        }
        return;
      }
      goto LABEL_102;
    }
    if (v28 != v18)
    {
      v51 = a7 + 87;
      if (a7 > 10)
      {
        v52 = a7 + 55;
      }
      else
      {
        v51 = 97;
        v52 = 65;
      }
      v53 = a7 <= 10 ? a7 + 48 : 58;
      if (v29)
      {
        v54 = 0;
        while (1)
        {
          v55 = *v29;
          if (v55 < 0x30 || v55 >= v53)
          {
            if (v55 < 0x41 || v55 >= v52)
            {
              if (v55 < 0x61 || v55 >= v51)
                return;
              v56 = -87;
            }
            else
            {
              v56 = -55;
            }
          }
          else
          {
            v56 = -48;
          }
          v57 = v54 * (unint64_t)a7;
          if ((v57 & 0xFFFFFFFF00000000) == 0)
          {
            v58 = v55 + v56;
            v54 = v57 + v58;
            if (!__CFADD__((_DWORD)v57, v58))
            {
              ++v29;
              if (--v19)
                continue;
            }
          }
          return;
        }
      }
    }
  }
}

uint64_t sub_23F4A0DB0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  if (__OFSUB__(0, a2))
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(result + 16);
  v3 = __OFADD__(a2, v2);
  v4 = a2 + v2;
  if (v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v4 < a2)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
LABEL_9:
    __break(1u);
  return result;
}

uint64_t sub_23F4A0DF8(uint64_t a1)
{
  uint64_t v1;

  return sub_23F49F15C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23F4A0E10(uint64_t a1)
{
  return sub_23F4A11AC(a1);
}

uint64_t sub_23F4A0E24(uint64_t a1)
{
  return sub_23F4A0DF8(a1);
}

uint64_t sub_23F4A0E38()
{
  return sub_23F61C400();
}

void sub_23F4A0E48()
{
  sub_23F37B54C();
}

void sub_23F4A0E60()
{
  sub_23F37B54C();
}

uint64_t sub_23F4A0E78()
{
  return sub_23F617BA0();
}

void sub_23F4A0E8C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v3;
  *(_DWORD *)(v0 + 4 * v1 + 32) = v2;
}

uint64_t sub_23F4A0EC0()
{
  return 0;
}

void sub_23F4A0EEC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F4A0F08()
{
  return 0;
}

uint64_t sub_23F4A0F24(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);

  return v1(a1, 0);
}

void sub_23F4A0F2C()
{
  JUMPOUT(0x24266FE14);
}

id sub_23F4A0F38(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 840));
}

id sub_23F4A0F44()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v0 + 8 * v1 + 32);
}

uint64_t sub_23F4A0F50()
{
  return sub_23F61C3DC();
}

uint64_t sub_23F4A0F5C()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_23F4A0F78@<X0>(uint64_t a1@<X8>)
{
  char v1;

  return a1 | ((unint64_t)(v1 & 1) << 32);
}

BOOL sub_23F4A0F90@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_23F4A0FA8()
{
  sub_23F3771B4();
}

uint64_t sub_23F4A0FB4()
{
  return sub_23F6196D0();
}

uint64_t sub_23F4A0FD0()
{
  uint64_t v0;

  sub_23F35EA9C((_QWORD *)(v0 - 128), *(_QWORD *)(v0 - 104));
  return sub_23F619DB4();
}

uint64_t sub_23F4A1018(uint64_t a1)
{
  uint64_t v1;

  sub_23F36196C(v1, 0, 1, a1);
  return sub_23F6196B8();
}

unint64_t sub_23F4A1040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return v1
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(_QWORD *)(v2 + 72) * v0;
}

__n128 sub_23F4A1060(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 - 176) = *(_OWORD *)a1;
  *(_OWORD *)(v1 - 160) = v3;
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(a1 + 32);
  return result;
}

void sub_23F4A1074(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F4A1094()
{
  return sub_23F61CA6C();
}

uint64_t sub_23F4A109C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4A10AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23F4A0478(v0, v1, v3, v2, 10);
}

void sub_23F4A10C4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23F4A08A8(v0, v1, v3, v2, 10);
}

uint64_t sub_23F4A10DC()
{
  return sub_23F619D6C();
}

uint64_t sub_23F4A10E4()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F36196C(v1, 0, 1, v0);
  return sub_23F6196AC();
}

uint64_t sub_23F4A110C(uint64_t a1)
{
  uint64_t v1;

  sub_23F36196C(v1, 0, 1, a1);
  return sub_23F6198D4();
}

uint64_t sub_23F4A1130()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

unint64_t sub_23F4A113C(unint64_t a1, char a2)
{
  uint64_t v2;

  return sub_23F3753DC(a1, a2, v2);
}

uint64_t sub_23F4A1144()
{
  uint64_t v0;

  return v0;
}

void sub_23F4A1150()
{
  JUMPOUT(0x24266FE14);
}

uint64_t sub_23F4A1158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_23F36196C(a1, a2, a3, a4);
  return v4;
}

void sub_23F4A1170()
{
  sub_23F6150CC();
}

id sub_23F4A1178(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 3272));
}

unint64_t sub_23F4A1180()
{
  char v0;
  uint64_t v1;
  char v2;

  if (v0)
    v2 = 1;
  else
    v2 = 0;
  return sub_23F3753DC(0, v2, v1);
}

uint64_t sub_23F4A11AC(uint64_t a1)
{
  uint64_t v1;

  return sub_23F49D988(a1, v1);
}

void sub_23F4A11B4()
{
  JUMPOUT(0x24266F8D4);
}

uint64_t sub_23F4A11BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 32) = a1;
  *(_QWORD *)(v2 - 152) = v1;
  return sub_23F61C3F4();
}

uint64_t sub_23F4A11CC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4A11DC()
{
  return sub_23F61C568();
}

uint64_t sub_23F4A11E4()
{
  uint64_t v0;

  return v0;
}

id sub_23F4A11FC(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

id sub_23F4A1204(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t sub_23F4A1224()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 136) = *(_QWORD *)(v0 - 176);
  return sub_23F617BA0();
}

uint64_t sub_23F4A1230(uint64_t a1)
{
  uint64_t v1;

  sub_23F36196C(v1, 0, 1, a1);
  return v1;
}

uint64_t sub_23F4A1254(uint64_t a1)
{
  uint64_t v1;

  sub_23F36196C(v1, 0, 1, a1);
  return v1;
}

uint64_t sub_23F4A1278()
{
  uint64_t v0;

  sub_23F362678((__int128 *)(v0 - 176), v0 - 128);
  return sub_23F6196C4();
}

void sub_23F4A1294()
{
  JUMPOUT(0x24266F8D4);
}

uint64_t sub_23F4A12A8()
{
  return sub_23F61C3D0();
}

uint64_t sub_23F4A12B0(uint64_t a1)
{
  uint64_t v1;

  return sub_23F361418(a1, v1 - 176);
}

uint64_t sub_23F4A12B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4A12C4()
{
  return sub_23F61CA54();
}

uint64_t sub_23F4A12D0()
{
  return sub_23F61C3DC();
}

uint64_t sub_23F4A12DC()
{
  return sub_23F61C424();
}

uint64_t sub_23F4A12E4()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 - 128);
}

void sub_23F4A12EC()
{
  JUMPOUT(0x24266FE14);
}

uint64_t sub_23F4A12F4(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

void sub_23F4A1300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 - 264) = a3;
  *(_QWORD *)(v3 - 272) = a2;
}

uint64_t sub_23F4A1314()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_23F4A1320()
{
  sub_23F61509C();
}

uint64_t sub_23F4A1328@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_23F4A1334()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4A1340()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4A134C()
{
  return sub_23F619D48();
}

uint64_t sub_23F4A1354()
{
  return sub_23F619D54();
}

uint64_t sub_23F4A1360()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F36196C(v1, 0, 1, v0);
  return v1;
}

uint64_t sub_23F4A1384()
{
  return sub_23F619DC0();
}

BOOL sub_23F4A138C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_23F4A13A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23F4A13B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  sub_23F3B1450();
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v5 + 16);
  sub_23F617BA0();
  if (v6 && (v7 = sub_23F3754D4(a1, a2), (v8 & 1) != 0))
    v9 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v7);
  else
    v9 = 0;
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v9;
}

_QWORD *sub_23F4A1448(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_signpost_type_t v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  uint64_t v17;

  v3 = sub_23F619E20();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - v8;
  v10 = MEMORY[0x24BEE4B00];
  v1[4] = 0;
  v1[5] = 0;
  v1[3] = v10;
  if (qword_256E6F080 != -1)
    swift_once();
  v11 = sub_23F619E44();
  sub_23F361498(v11, (uint64_t)qword_256E80338);
  sub_23F619E38();
  sub_23F619DFC();
  v12 = sub_23F619E38();
  v13 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v14 = (uint8_t *)sub_23F366668();
    *(_WORD *)v14 = 0;
    v15 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v12, v13, v15, "JointResolverTrialConfigProvider.init", "", v14, 2u);
    sub_23F366530();
  }

  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_23F619E74();
  sub_23F3668A0();
  sub_23F619E68();
  sub_23F362A28((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v1[2] = a1;
  swift_retain();
  sub_23F4A18F8();
  sub_23F4A1618();
  sub_23F3DDBDC();
  swift_release();
  return v1;
}

uint64_t sub_23F4A1618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  NSObject *v12;
  char v13;
  char v14;
  const char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_signpost_id_t v22;
  void (*v23)(_BYTE *, uint64_t);
  _BYTE v24[12];
  int v25;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_23F619E50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_23F619E20();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v24[-v9];
  if (qword_256E6F080 != -1)
    swift_once();
  v11 = sub_23F619E44();
  sub_23F361498(v11, (uint64_t)qword_256E80338);
  v12 = sub_23F619E38();
  sub_23F619E5C();
  v25 = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v1 + 88))(v3, v0) == *MEMORY[0x24BEE7810])
    {
      v13 = 0;
      v14 = 0;
      v15 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
      v15 = "%s";
      v14 = 2;
      v13 = 1;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v8, v10, v4);
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v27 = v18;
    *(_BYTE *)v17 = v14;
    *(_BYTE *)(v17 + 1) = v13;
    *(_WORD *)(v17 + 2) = 2080;
    v19 = sub_23F61C8F8();
    sub_23F37AE00(v19, v20, &v27);
    v26 = v21;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v22 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v12, (os_signpost_type_t)v25, v22, "JointResolverTrialConfigProvider.init", v15, (uint8_t *)v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v18, -1, -1);
    MEMORY[0x242670B70](v17, -1, -1);

    v23 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v23(v10, v4);
    return ((uint64_t (*)(_BYTE *, uint64_t))v23)(v8, v4);
  }
  else
  {

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
  }
}

uint64_t sub_23F4A18F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t result;
  void (*v29)(char *, uint64_t);
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t (*v46)(NSObject *, uint64_t);
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  char **v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  NSObject *v75;
  _QWORD v76[3];
  uint64_t v77;
  NSObject *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;

  v77 = sub_23F616E68();
  MEMORY[0x24BDAC7A8](v77);
  v1 = sub_23F619E98();
  v83 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v81 = (char *)v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v76 - v5;
  v7 = MEMORY[0x24BDAC7A8](v4);
  v78 = ((char *)v76 - v8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = ((char *)v76 - v10);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v76 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v76 - v15;
  v80 = v0;
  v17 = *(void **)(v0 + 16);
  if (!v17)
  {
    sub_23F6190DC();
    v25 = sub_23F619E8C();
    v26 = sub_23F61C628();
    if (os_log_type_enabled(v25, v26))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F4A2C64(&dword_23F35A000, v25, v27, "JointResolverTrialConfigProvider no trialManager instance provided");
      sub_23F366530();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v6, v1);
  }
  v79 = v1;
  swift_retain();
  v82 = v17;
  sub_23F5FC520(0xD000000000000024, 0x800000023F637270);
  if (v18)
  {
    sub_23F4A2CAC(v18);
    v20 = v19;

    v21 = v80;
    *(_QWORD *)(v80 + 32) = v20;
    sub_23F6190DC();
    swift_retain();
    sub_23F619E8C();
    v22 = sub_23F3B1A04();
    if (sub_23F3F0E3C(v22))
    {
      *(_DWORD *)sub_23F366668() = 134217984;
      sub_23F4A2C20(*(double *)(v21 + 32));
      swift_release();
      sub_23F4A2C34(&dword_23F35A000, v23, v24, "JointResolverTrialConfigProvider forceConfirmPromptRate %f");
      sub_23F366530();
    }

    swift_release();
    sub_23F4A2C48();
    v29(v16, v79);
  }
  sub_23F5FC520(0xD000000000000026, 0x800000023F6372A0);
  v31 = v79;
  v32 = v80;
  if (v30)
  {
    sub_23F4A2CAC(v30);
    v34 = v33;

    *(_QWORD *)(v32 + 40) = v34;
    sub_23F6190DC();
    swift_retain();
    sub_23F619E8C();
    v35 = sub_23F3B1A04();
    if (sub_23F3F0E3C(v35))
    {
      *(_DWORD *)sub_23F366668() = 134217984;
      sub_23F4A2C20(*(double *)(v32 + 40));
      sub_23F3DDBDC();
      sub_23F4A2C34(&dword_23F35A000, v36, v37, "JointResolverTrialConfigProvider forceDisambigPromptRate %f");
      sub_23F366530();
    }

    sub_23F3DDBDC();
    sub_23F4A2C48();
    sub_23F362A28((uint64_t)v14, v38);
  }
  sub_23F5FC520(0xD00000000000001DLL, 0x800000023F6372D0);
  if (!v39)
  {
    sub_23F6190DC();
    v43 = sub_23F619E8C();
    v44 = sub_23F61C628();
    if (sub_23F3F0E3C(v44))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F4A2C64(&dword_23F35A000, v43, v45, "JointResolverTrialConfigProvider error fetching trialRiskFactorMapURL");
      sub_23F366530();
    }

    sub_23F4A2C80();
    sub_23F4A2C48();
    v47 = v11;
    return v46(v47, v31);
  }
  v40 = v39;
  v41 = objc_msgSend(v39, sel_fileValue);
  if (v41)
  {
    sub_23F4A2EA4(v41);
    if (!v42)
      goto LABEL_40;
    sub_23F616DE4();
    swift_bridgeObjectRelease();
    v48 = sub_23F616E98();
    v50 = v49;
    sub_23F4A2C54();
    sub_23F616ACC();
    sub_23F3668A0();
    sub_23F616AC0();
    sub_23F4A26FC();
    sub_23F616AB4();
    swift_release();
    v57 = v85;
    v58 = *(_QWORD *)(v85 + 16);
    if (v58)
    {
      v76[1] = v48;
      v76[2] = v50;
      v77 = (uint64_t)v40;
      v59 = (uint64_t *)(v32 + 24);
      sub_23F617BA0();
      v76[0] = v57;
      v60 = (char **)(v57 + 48);
      while (1)
      {
        v62 = (uint64_t)*(v60 - 2);
        v61 = (uint64_t)*(v60 - 1);
        v81 = *v60;
        sub_23F3B1450();
        sub_23F617BA0();
        swift_isUniquelyReferenced_nonNull_native();
        v86 = (_QWORD *)*v59;
        v63 = (uint64_t)v86;
        *v59 = 0x8000000000000000;
        v64 = sub_23F4A2CA0();
        if (__OFADD__(*(_QWORD *)(v63 + 16), (v65 & 1) == 0))
          break;
        v66 = v64;
        v67 = v65;
        sub_23F35D2E8(&qword_256E75A30);
        if ((sub_23F61CA18() & 1) != 0)
        {
          v68 = sub_23F4A2CA0();
          if ((v67 & 1) != (v69 & 1))
            goto LABEL_41;
          v66 = v68;
        }
        v70 = v86;
        if ((v67 & 1) != 0)
        {
          *(_QWORD *)(v86[7] + 8 * v66) = v81;
        }
        else
        {
          v86[(v66 >> 6) + 8] |= 1 << v66;
          v71 = (_QWORD *)(v70[6] + 16 * v66);
          *v71 = v62;
          v71[1] = v61;
          *(_QWORD *)(v70[7] + 8 * v66) = v81;
          v72 = v70[2];
          v73 = __OFADD__(v72, 1);
          v74 = v72 + 1;
          if (v73)
            goto LABEL_38;
          v70[2] = v74;
          sub_23F617BA0();
        }
        v60 += 3;
        *v59 = (uint64_t)v70;
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_bridgeObjectRelease();
        if (!--v58)
        {
          swift_bridgeObjectRelease();
          v31 = v79;
          v40 = (void *)v77;
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
LABEL_36:
    sub_23F4A2C94();

    swift_bridgeObjectRelease();
    v75 = v78;
    sub_23F6190DC();
    swift_retain_n();
    sub_23F619E8C();
    v51 = sub_23F3B1A04();
    if (os_log_type_enabled(v75, v51))
    {
      v52 = (uint8_t *)sub_23F366668();
      v86 = (_QWORD *)sub_23F366668();
      *(_DWORD *)v52 = 136315138;
      sub_23F3B1450();
      sub_23F617BA0();
      v53 = sub_23F61BFC8();
      v55 = v54;
      swift_bridgeObjectRelease();
      sub_23F37AE00(v53, v55, (uint64_t *)&v86);
      v84 = v56;
      sub_23F61C790();
      sub_23F4A2C88();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F35A000, v75, v51, "JointResolverTrialConfigProvider toolRiskMap %s", v52, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F4A2C88();
    sub_23F4A2C80();
    v46 = *(uint64_t (**)(NSObject *, uint64_t))(v83 + 8);
    v47 = v75;
    return v46(v47, v31);
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

_QWORD *sub_23F4A21F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = sub_23F35D2E8(&qword_256E75A38);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35EA9C(a1, a1[3]);
  sub_23F4A2748();
  sub_23F4A2C74();
  if (v1)
  {
    sub_23F44D4A0();
  }
  else
  {
    sub_23F35D2E8(&qword_256E75A48);
    sub_23F4A2784();
    sub_23F61CB44();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    sub_23F44D4A0();
  }
  return v7;
}

uint64_t sub_23F4A2314(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6576654C6B736972 && a2 == 0xE90000000000006CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F4A23F4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6576654C6B736972;
  else
    return 25705;
}

uint64_t sub_23F4A2424(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23F35D2E8(&qword_256E75A78);
  MEMORY[0x24BDAC7A8](v3);
  v4 = a1[4];
  sub_23F35EA9C(a1, a1[3]);
  sub_23F4A2A58();
  sub_23F4A2C74();
  if (v1)
  {
    sub_23F44D4A0();
  }
  else
  {
    v4 = sub_23F61CB14();
    sub_23F617BA0();
    sub_23F61CB38();
    sub_23F40EBB8();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
    sub_23F38432C();
  }
  return v4;
}

uint64_t sub_23F4A2578()
{
  sub_23F4A2748();
  return sub_23F61CDC0();
}

uint64_t sub_23F4A25A0()
{
  sub_23F4A2748();
  return sub_23F61CDCC();
}

_QWORD *sub_23F4A25C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_23F4A21F8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23F4A25F0()
{
  char *v0;

  return sub_23F4A23F4(*v0);
}

uint64_t sub_23F4A25F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4A2314(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F4A261C()
{
  sub_23F4A2A58();
  return sub_23F61CDC0();
}

uint64_t sub_23F4A2644()
{
  sub_23F4A2A58();
  return sub_23F61CDCC();
}

uint64_t sub_23F4A266C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_23F4A2424(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_23F4A2698()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23F4A26BC()
{
  sub_23F4A2698();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for JointResolverTrialConfigProvider()
{
  return objc_opt_self();
}

unint64_t sub_23F4A26FC()
{
  unint64_t result;

  result = qword_256E75A28;
  if (!qword_256E75A28)
  {
    result = MEMORY[0x242670A44](&unk_23F62463C, &type metadata for JointResolverTrialConfigProvider.RiskData);
    atomic_store(result, (unint64_t *)&qword_256E75A28);
  }
  return result;
}

ValueMetadata *type metadata accessor for JointResolverTrialConfigProvider.RiskData()
{
  return &type metadata for JointResolverTrialConfigProvider.RiskData;
}

unint64_t sub_23F4A2748()
{
  unint64_t result;

  result = qword_256E75A40;
  if (!qword_256E75A40)
  {
    result = MEMORY[0x242670A44](&unk_23F624758, &type metadata for JointResolverTrialConfigProvider.RiskData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E75A40);
  }
  return result;
}

unint64_t sub_23F4A2784()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256E75A50;
  if (!qword_256E75A50)
  {
    v1 = sub_23F35EB74(&qword_256E75A48);
    v2 = sub_23F4A27E8();
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256E75A50);
  }
  return result;
}

unint64_t sub_23F4A27E8()
{
  unint64_t result;

  result = qword_256E75A58;
  if (!qword_256E75A58)
  {
    result = MEMORY[0x242670A44](&unk_23F624730, &type metadata for JointResolverTrialConfigProvider.ToolRisk);
    atomic_store(result, (unint64_t *)&qword_256E75A58);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JointResolverTrialConfigProvider.RiskData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F4A2864 + 4 * byte_23F6245D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F4A2884 + 4 * byte_23F6245D5[v4]))();
}

_BYTE *sub_23F4A2864(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F4A2884(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F4A288C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F4A2894(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F4A289C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F4A28A4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for JointResolverTrialConfigProvider.RiskData.CodingKeys()
{
  return &type metadata for JointResolverTrialConfigProvider.RiskData.CodingKeys;
}

_QWORD *sub_23F4A28C4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_23F617BA0();
  return a1;
}

_QWORD *assignWithCopy for JointResolverTrialConfigProvider.ToolRisk(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for JointResolverTrialConfigProvider.ToolRisk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for JointResolverTrialConfigProvider.ToolRisk()
{
  return &type metadata for JointResolverTrialConfigProvider.ToolRisk;
}

unint64_t sub_23F4A299C()
{
  unint64_t result;

  result = qword_256E75A60;
  if (!qword_256E75A60)
  {
    result = MEMORY[0x242670A44](&unk_23F624708, &type metadata for JointResolverTrialConfigProvider.RiskData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E75A60);
  }
  return result;
}

unint64_t sub_23F4A29DC()
{
  unint64_t result;

  result = qword_256E75A68;
  if (!qword_256E75A68)
  {
    result = MEMORY[0x242670A44](&unk_23F624678, &type metadata for JointResolverTrialConfigProvider.RiskData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E75A68);
  }
  return result;
}

unint64_t sub_23F4A2A1C()
{
  unint64_t result;

  result = qword_256E75A70;
  if (!qword_256E75A70)
  {
    result = MEMORY[0x242670A44](&unk_23F6246A0, &type metadata for JointResolverTrialConfigProvider.RiskData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E75A70);
  }
  return result;
}

unint64_t sub_23F4A2A58()
{
  unint64_t result;

  result = qword_256E75A80;
  if (!qword_256E75A80)
  {
    result = MEMORY[0x242670A44](&unk_23F624860, &type metadata for JointResolverTrialConfigProvider.ToolRisk.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E75A80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JointResolverTrialConfigProvider.ToolRisk.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F4A2AE0 + 4 * byte_23F6245DF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F4A2B14 + 4 * byte_23F6245DA[v4]))();
}

uint64_t sub_23F4A2B14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4A2B1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F4A2B24);
  return result;
}

uint64_t sub_23F4A2B30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F4A2B38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F4A2B3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4A2B44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JointResolverTrialConfigProvider.ToolRisk.CodingKeys()
{
  return &type metadata for JointResolverTrialConfigProvider.ToolRisk.CodingKeys;
}

unint64_t sub_23F4A2B64()
{
  unint64_t result;

  result = qword_256E75A88;
  if (!qword_256E75A88)
  {
    result = MEMORY[0x242670A44](&unk_23F624838, &type metadata for JointResolverTrialConfigProvider.ToolRisk.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E75A88);
  }
  return result;
}

unint64_t sub_23F4A2BA4()
{
  unint64_t result;

  result = qword_256E75A90;
  if (!qword_256E75A90)
  {
    result = MEMORY[0x242670A44](&unk_23F6247A8, &type metadata for JointResolverTrialConfigProvider.ToolRisk.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E75A90);
  }
  return result;
}

unint64_t sub_23F4A2BE4()
{
  unint64_t result;

  result = qword_256E75A98;
  if (!qword_256E75A98)
  {
    result = MEMORY[0x242670A44](&unk_23F6247D0, &type metadata for JointResolverTrialConfigProvider.ToolRisk.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E75A98);
  }
  return result;
}

uint64_t sub_23F4A2C20(double a1)
{
  uint64_t v1;

  *(double *)(v1 - 136) = a1;
  return sub_23F61C790();
}

void sub_23F4A2C34(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  NSObject *v5;
  uint8_t *v6;

  _os_log_impl(a1, v5, v4, a4, v6, 0xCu);
}

uint64_t sub_23F4A2C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 200));
}

void sub_23F4A2C64(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  uint8_t *v5;

  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

uint64_t sub_23F4A2C74()
{
  return sub_23F61CD84();
}

uint64_t sub_23F4A2C80()
{
  return swift_release();
}

uint64_t sub_23F4A2C88()
{
  return swift_release_n();
}

uint64_t sub_23F4A2C94()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F3F3D0C(v1, v0);
}

uint64_t sub_23F4A2CA0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3754D4(v1, v0);
}

id sub_23F4A2CAC(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 3144));
}

id sub_23F4A2CB8()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFFD8]), sel_init);
  objc_msgSend(v0, sel_setComputeUnits_, 0);
  return v0;
}

id sub_23F4A2D00@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = sub_23F619E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v2, sel_directoryValue);
  if (result)
  {
    v9 = sub_23F4A2EA4(result);
    if (v10)
    {
      v11 = HIBYTE(v10) & 0xF;
      if ((v10 & 0x2000000000000000) == 0)
        v11 = v9 & 0xFFFFFFFFFFFFLL;
      if (v11)
      {
        sub_23F616DE4();
        swift_bridgeObjectRelease();
        v12 = sub_23F616E68();
        return (id)sub_23F36196C(a1, 0, 1, v12);
      }
      swift_bridgeObjectRelease();
    }
    sub_23F6190DC();
    v13 = sub_23F619E8C();
    v14 = sub_23F61C61C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_23F35A000, v13, v14, "TRILevel#directoryURL: Invoked on TRILevel that is not a directory", v15, 2u);
      MEMORY[0x242670B70](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v16 = sub_23F616E68();
    return (id)sub_23F36196C(a1, 1, 1, v16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23F4A2EA4(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_path);

  if (!v2)
    return 0;
  v3 = sub_23F61C10C();

  return v3;
}

uint64_t sub_23F4A2F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4[5] = a3;
  v4[6] = a4;
  v4[4] = a2;
  sub_23F617D08();
  v4[7] = sub_23F366578();
  v5 = sub_23F61B3A4();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = sub_23F366578();
  v6 = sub_23F61B3EC();
  v4[11] = v6;
  v4[12] = *(_QWORD *)(v6 - 8);
  v4[13] = sub_23F366578();
  v7 = sub_23F61B92C();
  v4[14] = v7;
  v4[15] = *(_QWORD *)(v7 - 8);
  v4[16] = sub_23F366578();
  v8 = sub_23F61B404();
  v4[17] = v8;
  v4[18] = *(_QWORD *)(v8 - 8);
  v4[19] = sub_23F366578();
  v9 = sub_23F35D2E8(&qword_256E75B70);
  v4[20] = v9;
  v4[21] = *(_QWORD *)(v9 - 8);
  v4[22] = sub_23F366654();
  v4[23] = sub_23F3666CC();
  v4[24] = sub_23F35D2E8(&qword_256E75B78);
  v4[25] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75B80);
  v4[26] = sub_23F366654();
  v4[27] = sub_23F3666CC();
  v10 = sub_23F619E98();
  v4[28] = v10;
  v4[29] = *(_QWORD *)(v10 - 8);
  v4[30] = sub_23F366654();
  v4[31] = sub_23F3666CC();
  v4[32] = sub_23F3666CC();
  v4[33] = sub_23F3666CC();
  v4[34] = sub_23F3666CC();
  v11 = sub_23F617780();
  v4[35] = v11;
  v4[36] = *(_QWORD *)(v11 - 8);
  v4[37] = sub_23F366578();
  sub_23F617198();
  v4[38] = sub_23F366578();
  sub_23F6170CC();
  v4[39] = sub_23F366654();
  v4[40] = sub_23F3666CC();
  v4[41] = sub_23F3666CC();
  v12 = sub_23F6177C8();
  v4[42] = v12;
  v4[43] = *(_QWORD *)(v12 - 8);
  v4[44] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75B88);
  v4[45] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75B90);
  v4[46] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75B98);
  v4[47] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75BA0);
  v4[48] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75BA8);
  v4[49] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75BB0);
  v4[50] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75BB8);
  v4[51] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75BC0);
  v4[52] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75BC8);
  v4[53] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75BD0);
  v4[54] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75BD8);
  v4[55] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75BE0);
  v4[56] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75BE8);
  v4[57] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75BF0);
  v4[58] = sub_23F366578();
  v13 = sub_23F61790C();
  v4[59] = v13;
  v4[60] = *(_QWORD *)(v13 - 8);
  v4[61] = sub_23F366654();
  v4[62] = sub_23F3666CC();
  v4[63] = sub_23F3666CC();
  v14 = sub_23F617708();
  v4[64] = v14;
  v4[65] = *(_QWORD *)(v14 - 8);
  v4[66] = sub_23F366578();
  sub_23F35D2E8(&qword_256E70F08);
  v4[67] = sub_23F366578();
  return swift_task_switch();
}

void sub_23F4A3290()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  _QWORD *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v64;
  _BOOL4 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(_QWORD, _QWORD);
  uint64_t v106;
  void *v107;
  NSObject *v108;
  id v109;
  NSObject *v110;
  os_log_type_t v111;
  _BOOL4 v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  void *v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  unsigned int v205;
  uint64_t v206;
  unsigned int v207;
  uint64_t v208;
  unsigned int v209;
  unsigned int v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t i;
  unint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  uint64_t v233[3];

  sub_23F4A4720(v0[6], v0[67]);
  v1 = sub_23F61AAD4();
  v2 = sub_23F4A485C();
  v3 = v0[67];
  if (v2 == 1)
  {
    sub_23F4A4768(v0[67]);
    v204 = 0;
  }
  else
  {
    v204 = (id)sub_23F61AA80();
    sub_23F383E88(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8));
  }
  v221 = v0[4];
  v229 = v0;
  v202 = (uint64_t)(v0 + 3);
  v219 = v0[58];
  v216 = v0[57];
  v5 = v0[55];
  v4 = v0[56];
  v6 = v0[53];
  v7 = v0[54];
  v9 = v0[51];
  v8 = v0[52];
  v203 = v0[50];
  v206 = v0[49];
  v208 = v0[48];
  v211 = v0[47];
  v10 = v0[45];
  v214 = v0[46];
  sub_23F6176FC();
  v11 = sub_23F617810();
  sub_23F4A47F0(v219, v12, v13, v11);
  v14 = sub_23F61784C();
  sub_23F4A47F0(v216, v15, v16, v14);
  v17 = sub_23F617858();
  sub_23F4A47F0(v4, v18, v19, v17);
  v20 = sub_23F6177F8();
  sub_23F4A47F0(v5, v21, v22, v20);
  v23 = sub_23F6177D4();
  sub_23F4A47F0(v7, v24, v25, v23);
  v26 = sub_23F617864();
  sub_23F4A47F0(v6, v27, v28, v26);
  v29 = sub_23F6177EC();
  sub_23F4A47F0(v8, v30, v31, v29);
  v32 = sub_23F617918();
  sub_23F4A47F0(v9, v33, v34, v32);
  v35 = sub_23F6178E8();
  sub_23F4A47F0(v203, v36, v37, v35);
  v38 = sub_23F6176A8();
  sub_23F4A47F0(v206, v39, v40, v38);
  v41 = sub_23F61769C();
  sub_23F4A47F0(v208, v42, v43, v41);
  v44 = sub_23F6176C0();
  sub_23F4A47F0(v211, v45, v46, v44);
  v47 = sub_23F617684();
  sub_23F4A47F0(v214, v48, v49, v47);
  v50 = sub_23F617804();
  sub_23F3838D8(v10, v51, v52, v50);
  v175 = 0;
  v176 = 0;
  v173 = sub_23F617BA0();
  v174 = v10;
  v171 = v214;
  v172 = v221;
  v169 = v208;
  v170 = v211;
  v167 = v203;
  v168 = v206;
  v165 = 0;
  v166 = v9;
  sub_23F617900();
  sub_23F61709C();
  sub_23F61709C();
  sub_23F61709C();
  sub_23F61718C();
  if (v204)
  {
    v53 = objc_msgSend(v204, sel_location, 0, v9, v203, v206, v208, v211, v214, v221, v173, v10, 0, 0);
    v54 = v53;
    if (v53)
    {
      objc_msgSend(v53, sel_coordinate);

    }
    v55 = v0;
    v56 = objc_msgSend(v204, sel_location);
    if (v56)
    {
      v57 = v56;
      objc_msgSend(v56, sel_coordinate);

    }
  }
  else
  {
    v55 = v0;
  }
  v59 = v55[62];
  v58 = v55[63];
  v61 = v55[59];
  v60 = v55[60];
  v62 = v55[34];
  sub_23F6177BC();
  sub_23F617774();
  sub_23F619148();
  v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16);
  v63(v59, v58, v61);
  sub_23F619E8C();
  v64 = sub_23F3B1A04();
  v65 = sub_23F3B1E8C(v64);
  v66 = v55[62];
  if (v65)
  {
    v67 = v55[60];
    v68 = v55[61];
    v69 = v229[59];
    v224 = v67;
    v70 = (uint8_t *)sub_23F366668();
    v233[0] = sub_23F366668();
    *(_DWORD *)v70 = 136315138;
    v63(v68, v66, v69);
    v71 = sub_23F61C16C();
    sub_23F37AE00(v71, v72, v233);
    v229[3] = v73;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v66, v69);
    sub_23F38485C(&dword_23F35A000, v62, (os_log_type_t)v59, "Running location search with input: %s", v70);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v74 = v55[34];
  v75 = v55[28];
  v76 = v55[29];
  (*(void (**)(_QWORD, _QWORD))(v55[60] + 8))(v55[62], v55[59]);

  v77 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v77(v74, v75);
  v78 = sub_23F6176F0();
  v79 = v55[33];
  sub_23F3E0278();
  sub_23F617BA0();
  sub_23F619E8C();
  v80 = sub_23F3B1A04();
  if (sub_23F3F0E3C(v80))
  {
    v81 = (uint8_t *)sub_23F366668();
    *(_DWORD *)v81 = 134217984;
    v55[2] = *(_QWORD *)(v78 + 16);
    sub_23F61C790();
    sub_23F384364();
    sub_23F38485C(&dword_23F35A000, v79, (os_log_type_t)v74, "Got %ld location search results", v81);
    sub_23F366530();
  }
  sub_23F384364();

  v227 = v55[24];
  v230 = v55[21];
  v77(v55[33], v55[28]);
  v84 = 0;
  v232 = MEMORY[0x24BEE4AF8];
  v85 = *(_QWORD *)(v78 + 16);
  for (i = v85; ; v85 = i)
  {
    if (v84 == v85)
    {
      sub_23F3838D8(v55[26], v82, v83, v55[24]);
      v84 = v85;
    }
    else
    {
      if (v84 >= *(_QWORD *)(v78 + 16))
      {
        __break(1u);
        goto LABEL_44;
      }
      v86 = (unint64_t *)v55[26];
      v87 = v55[24];
      v88 = v55[20];
      v89 = v55[25] + *(int *)(v227 + 48);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v230 + 16))(v89, v78+ ((*(unsigned __int8 *)(v230 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v230 + 80))+ *(_QWORD *)(v230 + 72) * v84, v88);
      v90 = (char *)v86 + *(int *)(v227 + 48);
      *v86 = v84;
      (*(void (**)(char *, uint64_t, uint64_t))(v230 + 32))(v90, v89, v88);
      sub_23F36196C((uint64_t)v86, 0, 1, v87);
      ++v84;
    }
    sub_23F4A47A8(v55[26], v55[27]);
    if (sub_23F4A485C() == 1)
      break;
    v91 = (char *)v55[27];
    v93 = v55[22];
    v92 = v55[23];
    v94 = v55[20];
    v76 = *(_QWORD *)v91;
    (*(void (**)(uint64_t, char *, uint64_t))(v230 + 32))(v92, &v91[*(int *)(v227 + 48)], v94);
    sub_23F3E0278();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v230 + 16))(v93, v92, v94);
    v95 = sub_23F619E8C();
    v96 = sub_23F61C61C();
    v225 = v76;
    if (os_log_type_enabled(v95, v96))
    {
      v97 = v229[22];
      v98 = v229[20];
      v99 = sub_23F366668();
      v233[0] = sub_23F366668();
      *(_DWORD *)v99 = 134218242;
      *(_QWORD *)(v99 + 4) = v76;
      *(_WORD *)(v99 + 12) = 2080;
      sub_23F6177E0();
      v100 = sub_23F61C16C();
      sub_23F37AE00(v100, v101, v233);
      *(_QWORD *)(v99 + 14) = v102;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v97, v98);
      _os_log_impl(&dword_23F35A000, v95, v96, "Location search result [%ld]: %s", (uint8_t *)v99, 0x16u);
      swift_arrayDestroy();
      sub_23F366530();
    }
    v103 = v55[32];
    v104 = v55[28];
    v105 = *(void (**)(_QWORD, _QWORD))(v230 + 8);
    v105(v55[22], v55[20]);

    v77(v103, v104);
    v106 = v55[61];
    sub_23F6177E0();
    v107 = (void *)sub_23F6178F4();
    sub_23F4A486C();
    if (v107)
    {
      v108 = v55[31];
      sub_23F619148();
      v109 = v107;
      v110 = v108;
      sub_23F619E8C();
      v111 = sub_23F3B1A04();
      v112 = sub_23F3B1E8C(v111);
      v76 = v55[31];
      v113 = v55[28];
      if (v112)
      {
        v114 = sub_23F366668();
        v233[0] = sub_23F366668();
        *(_DWORD *)v114 = 134218242;
        *(_QWORD *)(v114 + 4) = v225;
        *(_WORD *)(v114 + 12) = 2080;
        v115 = v109;
        v116 = objc_msgSend(v115, sel_description);
        v117 = sub_23F61C10C();
        v119 = v118;

        sub_23F37AE00(v117, v119, v233);
        *(_QWORD *)(v114 + 14) = v120;
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23F35A000, v110, (os_log_type_t)v94, "Location as placemark [%ld]: %s", (uint8_t *)v114, 0x16u);
        swift_arrayDestroy();
        sub_23F366530();
      }

      v77(v76, v113);
      v126 = v109;
      MEMORY[0x24266F8D4]();
      if (*(_QWORD *)((v232 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v232 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23F61C400();
      sub_23F61C424();
      sub_23F61C3F4();

    }
    else
    {
      v121 = v55[30];
      sub_23F3E0278();
      sub_23F619E8C();
      v122 = sub_23F3B1A04();
      if (sub_23F3F0E3C(v122))
      {
        v123 = sub_23F366668();
        *(_DWORD *)v123 = 134217984;
        *(_QWORD *)(v123 + 4) = v76;
        sub_23F38485C(&dword_23F35A000, v121, (os_log_type_t)v106, "Skipping location result [%ld] - not convertible to CLPlacemark", (uint8_t *)v123);
        sub_23F366530();
      }
      v124 = v55[30];
      v125 = v55[28];

      v77(v124, v125);
    }
    v105(v55[23], v55[20]);
  }
  sub_23F384364();
  v76 = v232;
  if (!(v232 >> 62))
  {
    v127 = *(_QWORD *)((v232 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_23F617BA0();
    if (v127)
      goto LABEL_34;
LABEL_45:
    v152 = swift_bridgeObjectRelease();
    sub_23F4A4880(v152, v153, v154, v155, v156, v157, v158, v159, v165, v166, v167, v168, v169, v170, v171, v172, v173, v174, v175,
      v176,
      v177,
      v178,
      v179,
      v181,
      v183,
      v184,
      v185,
      v186,
      v187,
      v188,
      v189,
      v190,
      v191,
      v192,
      v193,
      v194,
      v195,
      v196,
      v197,
      v198,
      v199,
      v200,
      v201,
      v202,
      v203,
      v204);
    v231 = MEMORY[0x24BEE4AF8];
LABEL_46:
    v160 = v55[66];
    v180 = v55[65];
    v182 = v55[64];
    v161 = v55[43];
    v162 = v55[37];
    v163 = v55;
    v164 = v55[36];
    sub_23F4A480C();
    swift_bridgeObjectRelease();
    sub_23F383E88(v162, *(uint64_t (**)(uint64_t, uint64_t))(v164 + 8));
    sub_23F4A4874(*(uint64_t (**)(uint64_t, uint64_t))(v161 + 8));
    sub_23F4A486C();
    (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v160, v182);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23F3E0218(v231, (uint64_t (*)(void))v163[1]);
    return;
  }
LABEL_44:
  sub_23F617BA0();
  v127 = sub_23F61CA6C();
  if (!v127)
    goto LABEL_45;
LABEL_34:
  v233[0] = MEMORY[0x24BEE4AF8];
  sub_23F37BDF4();
  if ((v127 & 0x8000000000000000) == 0)
  {
    v128 = 0;
    v217 = v55[15];
    v218 = v55[18];
    v213 = v55[9];
    v215 = v55[12];
    v231 = v233[0];
    v212 = v76 & 0xC000000000000001;
    v210 = *MEMORY[0x24BEB9968];
    v209 = *MEMORY[0x24BEB9A00];
    v207 = *MEMORY[0x24BE56E48];
    v205 = *MEMORY[0x24BE56E00];
    v220 = v127;
    v223 = v76;
    do
    {
      if (v212)
        v129 = (id)MEMORY[0x24266FE14](v128, v76);
      else
        v129 = *(id *)(v76 + 8 * v128 + 32);
      v130 = v129;
      v131 = (uint64_t *)v55[16];
      v133 = v55[13];
      v132 = v55[14];
      v134 = v55[10];
      v226 = v55[11];
      v228 = v55[8];
      v135 = sub_23F61B8A8();
      v136 = swift_allocBox();
      v138 = v137;
      v139 = v130;
      sub_23F61B884();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v135 - 8) + 104))(v138, v210, v135);
      *v131 = v136;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v217 + 104))(v131, v209, v132);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v215 + 104))(v133, v207, v226);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v213 + 104))(v134, v205, v228);
      sub_23F617CC0();
      sub_23F61B3D4();

      v140 = v231;
      v233[0] = v231;
      v141 = *(_QWORD *)(v231 + 16);
      if (v141 >= *(_QWORD *)(v231 + 24) >> 1)
      {
        sub_23F37BDF4();
        v140 = v233[0];
      }
      v55 = v229;
      v142 = v229[19];
      v143 = v229[17];
      ++v128;
      *(_QWORD *)(v140 + 16) = v141 + 1;
      v231 = v140;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v218 + 32))(v140+ ((*(unsigned __int8 *)(v218 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v218 + 80))+ *(_QWORD *)(v218 + 72) * v141, v142, v143);
      v76 = v223;
    }
    while (v220 != v128);
    v144 = swift_bridgeObjectRelease();
    sub_23F4A4880(v144, v145, v146, v147, v148, v149, v150, v151, v165, v166, v167, v168, v169, v170, v171, v172, v173, v174, v175,
      v176,
      v177,
      v178,
      v179,
      v181,
      v183,
      v184,
      v185,
      v186,
      v187,
      v188,
      v189,
      v190,
      v191,
      v192,
      v193,
      v194,
      v195,
      v196,
      v197,
      v198,
      v199,
      v200,
      v201,
      v202,
      v203,
      v204);
    goto LABEL_46;
  }
  __break(1u);
}

BOOL sub_23F4A4490(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v14;

  v2 = sub_23F61B9EC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v14 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v14 - v7, a1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v8, v2) == *MEMORY[0x24BEB9D18])
  {
    v9(v6, (uint64_t)v8, v2);
    sub_23F383E88((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 96));
    v10 = sub_23F61B9BC();
    v11 = swift_projectBox();
    v12 = (*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 88))(v11, v10) == *MEMORY[0x24BEB9CD0];
    swift_release();
  }
  else
  {
    v12 = 0;
  }
  sub_23F383E88((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  return v12;
}

uint64_t sub_23F4A45C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime26LocationCandidateGenerator_parameter;
  v2 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23F4A4614()
{
  return type metadata accessor for LocationCandidateGenerator();
}

uint64_t type metadata accessor for LocationCandidateGenerator()
{
  uint64_t result;

  result = qword_256E75AC8;
  if (!qword_256E75AC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F4A4654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23F4A46B8;
  return sub_23F4A2F10((uint64_t)v8, a2, a3, a4);
}

uint64_t sub_23F4A46B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = swift_task_dealloc();
  if (!v1)
    v4 = a1;
  return sub_23F3E0218(v4, *(uint64_t (**)(void))(v6 + 8));
}

BOOL sub_23F4A4708(uint64_t a1)
{
  return sub_23F4A4490(a1);
}

uint64_t sub_23F4A4720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70F08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F4A4768(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E70F08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F4A47A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E75B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F4A47F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F36196C(a1, 1, 1, a4);
  return 0;
}

void sub_23F4A480C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[30];
  *(_QWORD *)(v1 - 256) = v0[31];
  *(_QWORD *)(v1 - 248) = v2;
  *(_QWORD *)(v1 - 240) = v0[27];
  v3 = v0[25];
  *(_QWORD *)(v1 - 216) = v0[26];
  *(_QWORD *)(v1 - 208) = v3;
  v4 = v0[22];
  *(_QWORD *)(v1 - 192) = v0[23];
  *(_QWORD *)(v1 - 184) = v4;
  v5 = v0[16];
  *(_QWORD *)(v1 - 176) = v0[19];
  *(_QWORD *)(v1 - 168) = v5;
  v6 = v0[10];
  *(_QWORD *)(v1 - 152) = v0[13];
  *(_QWORD *)(v1 - 144) = v6;
  *(_QWORD *)(v1 - 136) = v0[7];
}

uint64_t sub_23F4A485C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36195C(v1, 1, v0);
}

uint64_t sub_23F4A486C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 160))();
}

uint64_t sub_23F4A4874@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void sub_23F4A4880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46)
{

}

void sub_23F4A4888(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v2 = sub_23F61BE9C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3CFCEC(&qword_256E75C00, v6, MEMORY[0x24BDC6300]);
  v7 = sub_23F61C370();
  v35 = MEMORY[0x24BEE4AF8];
  sub_23F37B47C();
  v8 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_23F61C364();
  if ((v7 & 0x8000000000000000) == 0)
  {
    v9 = v34;
    if (v7)
    {
      v10 = *(_QWORD *)(v33 + 16);
      v31 = v33;
      *(_QWORD *)&v32 = v10;
      v30 = v33 + 32;
      v29 = xmmword_23F61E7E0;
      v11 = v34;
      while ((_QWORD)v32 != v11)
      {
        if ((v9 & 0x8000000000000000) != 0)
          goto LABEL_21;
        if (v11 >= *(_QWORD *)(v31 + 16))
          goto LABEL_22;
        v12 = *(_BYTE *)(v30 + v11);
        sub_23F35D2E8(&qword_256E70590);
        v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = v29;
        *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE4260];
        *(_QWORD *)(v13 + 64) = MEMORY[0x24BEE42B0];
        *(_BYTE *)(v13 + 32) = v12;
        v14 = sub_23F61C130();
        v16 = v15;
        v35 = v8;
        v17 = *(_QWORD *)(v8 + 16);
        if (v17 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_23F37B47C();
          v8 = v35;
        }
        *(_QWORD *)(v8 + 16) = v17 + 1;
        v18 = v8 + 16 * v17;
        *(_QWORD *)(v18 + 32) = v14;
        *(_QWORD *)(v18 + 40) = v16;
        ++v11;
        if (!--v7)
        {
          v34 = v11;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      v11 = v34;
LABEL_12:
      v19 = v33;
      v20 = *(_QWORD *)(v33 + 16);
      if (v11 == v20)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return;
      }
      v32 = xmmword_23F61E7E0;
      while (v11 < v20)
      {
        v21 = *(_BYTE *)(v19 + 32 + v11);
        v34 = v11 + 1;
        sub_23F35D2E8(&qword_256E70590);
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = v32;
        *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE4260];
        *(_QWORD *)(v22 + 64) = MEMORY[0x24BEE42B0];
        *(_BYTE *)(v22 + 32) = v21;
        v23 = sub_23F61C130();
        v25 = v24;
        v35 = v8;
        v26 = *(_QWORD *)(v8 + 16);
        if (v26 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_23F37B47C();
          v8 = v35;
        }
        *(_QWORD *)(v8 + 16) = v26 + 1;
        v27 = v8 + 16 * v26;
        *(_QWORD *)(v27 + 32) = v23;
        *(_QWORD *)(v27 + 40) = v25;
        v11 = v34;
        v20 = *(_QWORD *)(v19 + 16);
        if (v34 == v20)
          goto LABEL_13;
      }
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_23F4A4BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, _QWORD);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, _QWORD);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, _QWORD);
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  unint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(uint64_t, _QWORD);
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v140 = a2;
  v3 = sub_23F61B8A8();
  v142 = *(_QWORD *)(v3 - 8);
  v143 = v3;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F36285C();
  v138 = v5;
  sub_23F35D2E8(&qword_256E6FAB8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61B6E0();
  sub_23F383E7C(v9, (uint64_t)&v151);
  v127 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  sub_23F3B13F0(v12);
  v13 = sub_23F61B710();
  v131 = *(_QWORD *)(v13 - 8);
  v132 = (char *)v13;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  sub_23F3B13F0(v15);
  v16 = sub_23F61BE9C();
  sub_23F383E7C(v16, (uint64_t)&v150);
  v125 = v17;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F36285C();
  sub_23F3B13F0(v19);
  v20 = sub_23F61B740();
  sub_23F383E7C(v20, (uint64_t)&v149);
  v123 = v21;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F36285C();
  sub_23F3B13F0(v23);
  v136 = sub_23F61B9EC();
  v134 = *(_QWORD *)(v136 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F36285C();
  v135 = v25;
  v26 = sub_23F61B7AC();
  sub_23F383E7C(v26, (uint64_t)&v152);
  v129 = v27;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23F61B92C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v120 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)&v120 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v120 - v39;
  v41 = sub_23F6188C0();
  v42 = *(_QWORD *)(v41 - 8);
  v144 = v41;
  v145 = v42;
  sub_23F362850();
  v44 = MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)&v120 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v44);
  v141 = (uint64_t)&v120 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v133 = (uint64_t)&v120 - v50;
  MEMORY[0x24BDAC7A8](v49);
  v137 = (char *)&v120 - v51;
  v52 = *(_QWORD *)(v32 + 16);
  v139 = a1;
  sub_23F4A7658((uint64_t)v40, a1);
  v53 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v40, v31);
  if (v53 != *MEMORY[0x24BEB9A00])
  {
    v142 = v31;
    v143 = v32;
    if (v53 == *MEMORY[0x24BEB9990])
    {
      v59 = v143;
      sub_23F383F80((uint64_t)v40, *(uint64_t (**)(uint64_t, uint64_t))(v143 + 96));
      v60 = sub_23F4A75FC();
      v62 = v131;
      v61 = v132;
      v63 = v130;
      (*(void (**)(uint64_t, uint64_t, char *))(v131 + 16))(v130, v60, v132);
      sub_23F61B6EC();
      sub_23F4A761C();
      MEMORY[0x24266EC14]();
      sub_23F61B9A4();
      sub_23F4A75F4(v52, *(uint64_t (**)(uint64_t, _QWORD))(v134 + 8));
      v52 = (uint64_t)v137;
      sub_23F61889C();
      sub_23F383F80(v139, *(uint64_t (**)(uint64_t, uint64_t))(v59 + 8));
      (*(void (**)(uint64_t, char *))(v62 + 8))(v63, v61);
      goto LABEL_9;
    }
    if (v53 == *MEMORY[0x24BEB99E0])
    {
      v64 = v142;
      sub_23F383F80((uint64_t)v40, *(uint64_t (**)(uint64_t, uint64_t))(v143 + 96));
      v65 = sub_23F4A75E8();
      v66 = v129;
      sub_23F4A7644((uint64_t)v30, v65, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v129 + 16));
      sub_23F61B6EC();
      sub_23F4A761C();
      MEMORY[0x24266ECB0]();
      sub_23F61B9A4();
      sub_23F4A7660();
      sub_23F4A75F4(v52, v67);
      sub_23F4A75AC();
      (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v139, v64);
    }
    else
    {
      if (v53 == *MEMORY[0x24BEB9988])
      {
        v74 = v143;
        (*(void (**)(char *, uint64_t))(v143 + 96))(v40, v142);
        v75 = sub_23F4A75FC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 16))(v126, v75, v128);
        v131 = sub_23F61B6D4();
        v76 = *(_QWORD *)(v131 + 16);
        v68 = v140;
        if (v76)
        {
          v132 = v8;
          v77 = v131 + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80));
          v78 = *(_QWORD *)(v74 + 72);
          v138 = MEMORY[0x24BEE4AF8];
          v79 = v144;
          v121 = v35;
          do
          {
            sub_23F4A7658((uint64_t)v38, v77);
            sub_23F4A7658((uint64_t)v35, (uint64_t)v38);
            v80 = (uint64_t)v132;
            sub_23F4A4BAC(v35);
            sub_23F383F80((uint64_t)v38, *(uint64_t (**)(uint64_t, uint64_t))(v143 + 8));
            if (sub_23F36195C(v80, 1, v79) == 1)
            {
              sub_23F3CFCB0(v80, &qword_256E6FAB8);
            }
            else
            {
              v81 = v78;
              v82 = v133;
              sub_23F4A7650(v133, v80);
              sub_23F4A7650(v141, v82);
              v83 = v138;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_23F377300();
                v83 = v87;
              }
              v85 = *(_QWORD *)(v83 + 16);
              v84 = *(_QWORD *)(v83 + 24);
              v138 = v83;
              v78 = v81;
              if (v85 >= v84 >> 1)
              {
                sub_23F377300();
                v138 = v88;
              }
              v35 = v121;
              v86 = v138;
              *(_QWORD *)(v138 + 16) = v85 + 1;
              v79 = v144;
              sub_23F4A7650(v86+ ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80))+ *(_QWORD *)(v145 + 72) * v85, v141);
            }
            v77 += v78;
            --v76;
          }
          while (v76);
          swift_bridgeObjectRelease();
          v68 = v140;
          v97 = v138;
        }
        else
        {
          swift_bridgeObjectRelease();
          v97 = MEMORY[0x24BEE4AF8];
        }
        v100 = v139;
        v101 = *(_QWORD *)(v97 + 16);
        if (v101)
        {
          v148 = (_QWORD *)MEMORY[0x24BEE4AF8];
          v102 = v97;
          sub_23F37B47C();
          v103 = *(unsigned __int8 *)(v145 + 80);
          v138 = v102;
          v104 = v102 + ((v103 + 32) & ~v103);
          v141 = *(_QWORD *)(v145 + 72);
          v105 = *(void (**)(char *, uint64_t, uint64_t))(v145 + 16);
          v106 = v144;
          do
          {
            v105(v46, v104, v106);
            v146 = sub_23F6188B4();
            v147 = v107;
            sub_23F617BA0();
            sub_23F61C280();
            swift_bridgeObjectRelease();
            v109 = v146;
            v108 = v147;
            sub_23F6188A8();
            v146 = v109;
            v147 = v108;
            sub_23F617BA0();
            sub_23F61C280();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v110 = v146;
            v52 = v147;
            (*(void (**)(char *, uint64_t))(v145 + 8))(v46, v106);
            v111 = v148;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23F37B47C();
              v111 = v148;
            }
            v112 = v111[2];
            if (v112 >= v111[3] >> 1)
            {
              sub_23F37B47C();
              v111 = v148;
            }
            v111[2] = v112 + 1;
            v113 = &v111[2 * v112];
            v113[4] = v110;
            v113[5] = v52;
            v104 += v141;
            --v101;
          }
          while (v101);
          swift_bridgeObjectRelease();
          v100 = v139;
          v68 = v140;
        }
        else
        {
          swift_bridgeObjectRelease();
          v111 = (_QWORD *)MEMORY[0x24BEE4AF8];
        }
        v114 = v124;
        sub_23F4A586C(v111, v124);
        swift_bridgeObjectRelease();
        sub_23F4A4888(v114);
        v146 = v115;
        sub_23F35D2E8(&qword_256E70580);
        sub_23F3EC7C8();
        sub_23F4A75D0();
        sub_23F4A760C();
        v116 = sub_23F3841CC(v114, *(uint64_t (**)(uint64_t, _QWORD))(v125 + 8));
        v117 = v135;
        v118 = v126;
        MEMORY[0x24266EBD8](v116);
        sub_23F61B9A4();
        sub_23F4A7630();
        sub_23F4A75F4(v117, v119);
        sub_23F4A7588();
        (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v100, v142);
        sub_23F3841CC(v118, *(uint64_t (**)(uint64_t, _QWORD))(v127 + 8));
        goto LABEL_10;
      }
      if (v53 != *MEMORY[0x24BEB99B0])
      {
        v98 = v142;
        v99 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
        v99(v139, v142);
        v99((uint64_t)v40, v98);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v143 + 96))(v40, v142);
      v89 = sub_23F4A75E8();
      v66 = v123;
      v30 = v122;
      sub_23F4A7644((uint64_t)v122, v89, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v123 + 16));
      v90 = sub_23F61B6EC();
      v91 = v124;
      sub_23F4A565C(v90, v92);
      swift_bridgeObjectRelease();
      sub_23F4A4888(v91);
      v146 = v93;
      sub_23F35D2E8(&qword_256E70580);
      sub_23F3EC7C8();
      sub_23F4A75D0();
      sub_23F4A760C();
      v94 = sub_23F3841CC(v91, *(uint64_t (**)(uint64_t, _QWORD))(v125 + 8));
      v95 = v135;
      MEMORY[0x24266EC44](v94);
      sub_23F61B9A4();
      sub_23F4A7630();
      sub_23F4A75F4(v95, v96);
      sub_23F4A7588();
      (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v139, v142);
    }
    (*(void (**)(char *, char *))(v66 + 8))(v30, v38);
    goto LABEL_9;
  }
  sub_23F383F80((uint64_t)v40, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 96));
  v54 = sub_23F4A75E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v142 + 16))(v138, v54, v143);
  sub_23F4A5BC8();
  if (!v55)
  {
    sub_23F383F80(v139, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v138, v143);
    swift_release();
LABEL_12:
    v70 = v140;
    v71 = 1;
    v72 = v144;
    return sub_23F36196C(v70, v71, 1, v72);
  }
  v56 = v135;
  v57 = v139;
  sub_23F61B8CC();
  sub_23F61B9A4();
  sub_23F4A7660();
  sub_23F4A75F4(v56, v58);
  sub_23F4A75AC();
  sub_23F383F80(v57, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
  (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v138, v143);
LABEL_9:
  v68 = v140;
LABEL_10:
  swift_release();
  v69 = v144;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 32))(v68, v52, v144);
  v70 = v68;
  v71 = 0;
  v72 = v69;
  return sub_23F36196C(v70, v71, 1, v72);
}

void sub_23F4A565C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23F61BEB4();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8];
  MEMORY[0x24BDAC7A8](v4);
  sub_23F617BA0();
  sub_23F4E705C(a1, a2);
  v7 = v6;
  sub_23F3CFCEC(&qword_256E75BF8, v5, MEMORY[0x24BDC6AE8]);
  sub_23F61BE90();
  __asm { BR              X10 }
}

uint64_t sub_23F4A5730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_23F4A747C();
  sub_23F3F3D0C(v2, v3);
  sub_23F61BE84();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return sub_23F3F3D0C(v2, v3);
}

uint64_t sub_23F4A586C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v13;
  _QWORD v15[3];
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23F61BEB4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F3CFCEC(&qword_256E75BF8, v8, MEMORY[0x24BDC6AE8]);
  v16 = v7;
  sub_23F61BE90();
  if (a1[2])
  {
    v15[1] = v5;
    v15[2] = a2;
    sub_23F617BA0();
    v15[0] = a1;
    v17 = v9;
    v10 = a1[4];
    v11 = a1[5];
    sub_23F617BA0();
    sub_23F4E705C(v10, v11);
    __asm { BR              X9 }
  }
  v13 = v16;
  sub_23F61BE84();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v13, v4);
}

uint64_t sub_23F4A5BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  void *v98;
  id v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;

  v113 = sub_23F61B854();
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v111 = (char *)&v111 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_23F35D2E8(&qword_256E75C08);
  MEMORY[0x24BDAC7A8](v1);
  v120 = (uint64_t)&v111 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_23F616D24();
  v118 = *(_QWORD *)(v119 - 8);
  MEMORY[0x24BDAC7A8](v119);
  v117 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_23F616D48();
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123);
  v121 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_23F616E68();
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133);
  v131 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E6FAA0);
  MEMORY[0x24BDAC7A8](v6);
  v136 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_23F616D00();
  v138 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139);
  v137 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(&qword_256E72FA0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v130 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v147 = (char *)&v111 - v12;
  v13 = sub_23F617198();
  v158 = *(_QWORD *)(v13 - 8);
  v159 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v129 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v146 = (char *)&v111 - v16;
  v155 = sub_23F616F40();
  v154 = *(_QWORD *)(v155 - 8);
  v17 = MEMORY[0x24BDAC7A8](v155);
  v128 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v145 = (char *)&v111 - v19;
  v153 = sub_23F616F28();
  v152 = *(_QWORD *)(v153 - 8);
  v20 = MEMORY[0x24BDAC7A8](v153);
  v127 = (char *)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v144 = (char *)&v111 - v22;
  v151 = sub_23F616F10();
  v150 = *(_QWORD *)(v151 - 8);
  v23 = MEMORY[0x24BDAC7A8](v151);
  v126 = (char *)&v111 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v143 = (char *)&v111 - v25;
  v149 = sub_23F616F1C();
  v148 = *(_QWORD *)(v149 - 8);
  v26 = MEMORY[0x24BDAC7A8](v149);
  v124 = (char *)&v111 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v141 = (char *)&v111 - v28;
  v29 = sub_23F616F4C();
  v156 = *(_QWORD *)(v29 - 8);
  v157 = v29;
  v30 = MEMORY[0x24BDAC7A8](v29);
  v125 = (char *)&v111 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v142 = (char *)&v111 - v32;
  v160 = sub_23F616FC4();
  v166 = *(_QWORD *)(v160 - 8);
  v33 = MEMORY[0x24BDAC7A8](v160);
  v135 = (char *)&v111 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v140 = (char *)&v111 - v35;
  v163 = sub_23F61BEB4();
  v161 = *(_QWORD *)(v163 - 8);
  MEMORY[0x24BDAC7A8](v163);
  v36 = sub_23F61B83C();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)&v111 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23F61BE9C();
  v164 = *(_QWORD *)(v40 - 8);
  v165 = v40;
  v41 = MEMORY[0x24BDAC7A8](v40);
  v162 = (char *)&v111 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v134 = (char *)&v111 - v43;
  v116 = sub_23F61B878();
  v115 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v114 = (char *)&v111 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_23F61B89C();
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v48 = (char *)&v111 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_23F61B8A8();
  v50 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v52 = (char *)&v111 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v52, v167, v49);
  v53 = (*(uint64_t (**)(char *, uint64_t))(v50 + 88))(v52, v49);
  if (v53 == *MEMORY[0x24BEB9928])
  {
    (*(void (**)(char *, uint64_t))(v50 + 96))(v52, v49);
    if (*v52)
      return 1702195828;
    else
      return 0x65736C6166;
  }
  if (v53 == *MEMORY[0x24BEB9948])
  {
    (*(void (**)(char *, uint64_t))(v50 + 96))(v52, v49);
    return sub_23F61C4F0();
  }
  if (v53 == *MEMORY[0x24BEB9958])
  {
    (*(void (**)(char *, uint64_t))(v50 + 96))(v52, v49);
    sub_23F4E705C(*(_QWORD *)v52, *((_QWORD *)v52 + 1));
    v56 = v55;
    sub_23F3CFCEC(&qword_256E75BF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
    sub_23F61BE90();
    __asm { BR              X10 }
  }
  if (v53 == *MEMORY[0x24BEB9930])
  {
    (*(void (**)(char *, uint64_t))(v50 + 96))(v52, v49);
    v57 = v140;
    v58 = v52;
    v59 = v160;
    (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v140, v58, v160);
    (*(void (**)(char *, _QWORD, uint64_t))(v148 + 104))(v141, *MEMORY[0x24BDCE368], v149);
    (*(void (**)(char *, _QWORD, uint64_t))(v150 + 104))(v143, *MEMORY[0x24BDCE348], v151);
    (*(void (**)(char *, _QWORD, uint64_t))(v152 + 104))(v144, *MEMORY[0x24BDCE388], v153);
    (*(void (**)(char *, _QWORD, uint64_t))(v154 + 104))(v145, *MEMORY[0x24BDCE3D0], v155);
    v60 = (uint64_t)v147;
    sub_23F617174();
    v61 = v159;
    if (sub_23F36195C(v60, 1, v159) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v158 + 32))(v146, v60, v61);
      v62 = v142;
      sub_23F616F34();
      sub_23F3CFCEC(&qword_256E75C10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE448], MEMORY[0x24BDCE430]);
      v63 = v157;
      sub_23F616FAC();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v62, v63);
      (*(void (**)(char *, uint64_t))(v166 + 8))(v57, v59);
      return v168;
    }
    __break(1u);
    goto LABEL_40;
  }
  if (v53 == *MEMORY[0x24BEB9900])
  {
    (*(void (**)(char *, uint64_t))(v50 + 96))(v52, v49);
    v64 = v138;
    v65 = v137;
    v36 = v139;
    (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v137, v52, v139);
    v66 = (uint64_t)v136;
    sub_23F616C58();
    v67 = v160;
    if (sub_23F36195C(v66, 1, v160) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v166 + 32))(v135, v66, v67);
      (*(void (**)(char *, _QWORD, uint64_t))(v148 + 104))(v124, *MEMORY[0x24BDCE368], v149);
      (*(void (**)(char *, _QWORD, uint64_t))(v150 + 104))(v126, *MEMORY[0x24BDCE348], v151);
      (*(void (**)(char *, _QWORD, uint64_t))(v152 + 104))(v127, *MEMORY[0x24BDCE388], v153);
      (*(void (**)(char *, _QWORD, uint64_t))(v154 + 104))(v128, *MEMORY[0x24BDCE3D0], v155);
      v76 = (uint64_t)v130;
      sub_23F617174();
      v77 = v159;
      if (sub_23F36195C(v76, 1, v159) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v158 + 32))(v129, v76, v77);
        v78 = v125;
        sub_23F616F34();
        sub_23F3CFCEC(&qword_256E75C10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE448], MEMORY[0x24BDCE430]);
        v79 = v157;
        v80 = v135;
        sub_23F616FAC();
        (*(void (**)(char *, uint64_t))(v156 + 8))(v78, v79);
        (*(void (**)(char *, uint64_t))(v166 + 8))(v80, v67);
        (*(void (**)(char *, uint64_t))(v138 + 8))(v65, v139);
        return v168;
      }
LABEL_40:
      __break(1u);
      JUMPOUT(0x23F4A6F58);
    }
    sub_23F3CFCB0(v66, &qword_256E6FAA0);
    v54 = sub_23F616C28();
    v68 = *(void (**)(char *, uint64_t))(v64 + 8);
    v69 = v65;
LABEL_15:
    v68(v69, v36);
    return v54;
  }
  if (v53 == *MEMORY[0x24BEB9920])
  {
    (*(void (**)(char *, uint64_t))(v50 + 96))(v52, v49);
    v70 = v132;
    v71 = v131;
    v72 = v133;
    (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v131, v52, v133);
    v73 = sub_23F616E5C();
    v74 = (uint64_t)v134;
    sub_23F4A565C(v73, v75);
    swift_bridgeObjectRelease();
LABEL_24:
    sub_23F4A4888(v74);
    v168 = v85;
    sub_23F35D2E8(&qword_256E70580);
    sub_23F3EC7C8();
    v54 = sub_23F61C088();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v74, v165);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    return v54;
  }
  if (v53 == *MEMORY[0x24BEB9908])
  {
    (*(void (**)(char *, uint64_t))(v50 + 96))(v52, v49);
    v70 = v122;
    v71 = v121;
    v72 = v123;
    (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v121, v52, v123);
    v82 = v117;
    sub_23F616D18();
    sub_23F601024(v120);
    (*(void (**)(char *, uint64_t))(v118 + 8))(v82, v119);
    v83 = sub_23F61C160();
    v74 = (uint64_t)v134;
    sub_23F4A565C(v83, v84);
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  if (v53 == *MEMORY[0x24BEB9968])
  {
    (*(void (**)(char *, uint64_t))(v50 + 96))(v52, v49);
    v86 = (*(uint64_t (**)(char *, char *, uint64_t))(v46 + 32))(v48, v52, v45);
    v87 = (void *)MEMORY[0x2426704A4](v86);
    sub_23F4A6F68(&v168);
    objc_autoreleasePoolPop(v87);
    v54 = v168;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v45);
    return v54;
  }
  if (v53 == *MEMORY[0x24BEB9950])
  {
    (*(void (**)(char *, uint64_t))(v50 + 96))(v52, v49);
    v88 = v115;
    v89 = v114;
    v90 = v116;
    (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v114, v52, v116);
    v91 = (void *)sub_23F61B86C();
    v92 = sub_23F4A7318(v91, (SEL *)&selRef_contactIdentifier);
    if (v93 || (v92 = sub_23F4A7318(v91, (SEL *)&selRef_customIdentifier), v94))
    {
      v54 = v92;
      (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v90);

    }
    else
    {
      v105 = objc_msgSend(v91, sel_displayName);
      sub_23F61C10C();

      v106 = sub_23F61C178();
      v108 = v107;
      swift_bridgeObjectRelease();
      v109 = (uint64_t)v134;
      sub_23F4A565C(v106, v108);
      swift_bridgeObjectRelease();
      sub_23F4A4888(v109);
      v168 = v110;
      sub_23F35D2E8(&qword_256E70580);
      sub_23F3EC7C8();
      v54 = sub_23F61C088();

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v109, v165);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v90);
    }
  }
  else
  {
    if (v53 == *MEMORY[0x24BEB9938])
    {
      (*(void (**)(char *, uint64_t))(v50 + 96))(v52, v49);
      v95 = v112;
      v96 = v111;
      v97 = v113;
      (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v111, v52, v113);
      v98 = (void *)sub_23F61B848();
      v99 = objc_msgSend(v98, sel_description);

      v100 = sub_23F61C10C();
      v102 = v101;

      v103 = (uint64_t)v134;
      sub_23F4A565C(v100, v102);
      swift_bridgeObjectRelease();
      sub_23F4A4888(v103);
      v168 = v104;
      sub_23F35D2E8(&qword_256E70580);
      sub_23F3EC7C8();
      v54 = sub_23F61C088();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v103, v165);
      (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v97);
      return v54;
    }
    if (v53 == *MEMORY[0x24BEB9910])
    {
      (*(void (**)(char *, uint64_t))(v50 + 96))(v52, v49);
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v39, v52, v36);
      v54 = sub_23F61B824();
      v68 = *(void (**)(char *, uint64_t))(v37 + 8);
      v69 = v39;
      goto LABEL_15;
    }
    if (v53 == *MEMORY[0x24BEB9940])
    {
      return 1701736302;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v49);
      return 0;
    }
  }
  return v54;
}

void sub_23F4A6F68(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_23F61BEB4();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23F61BE9C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = (void *)sub_23F61B890();
  v5 = objc_msgSend(v4, sel_location);

  if (v5)
  {
    v12[0] = 0;
    v6 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, v5, 1, v12);
    v7 = v12[0];
    if (v6)
    {
      sub_23F616EEC();
      v9 = v8;

      sub_23F3CFCEC(&qword_256E75BF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      sub_23F61BE90();
      __asm { BR              X10 }
    }
    v10 = v7;
    v11 = (void *)sub_23F616D9C();

    swift_willThrow();
  }
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_23F4A7318(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_23F61C10C();

  return v4;
}

uint64_t sub_23F4A7374(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23F616BC8();
  if (!result || (result = sub_23F616BE0(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_23F616BD4();
      sub_23F61BEB4();
      sub_23F3CFCEC(&qword_256E75BF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      return sub_23F61BE78();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23F4A7438(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_23F4A747C()
{
  sub_23F61BEB4();
  sub_23F3CFCEC(&qword_256E75BF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
  return sub_23F61BE78();
}

uint64_t sub_23F4A7588()
{
  return sub_23F61889C();
}

uint64_t sub_23F4A75AC()
{
  return sub_23F61889C();
}

uint64_t sub_23F4A75D0()
{
  return sub_23F61C088();
}

uint64_t sub_23F4A75E8()
{
  return swift_projectBox();
}

uint64_t sub_23F4A75F4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 216));
}

uint64_t sub_23F4A75FC()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 272) = *v0;
  return swift_projectBox();
}

uint64_t sub_23F4A760C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4A7644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t sub_23F4A7650(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F4A7658(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F4A7674(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;

  v5 = sub_23F35D2E8(&qword_256E702C0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v19 = v2;
    v23 = MEMORY[0x24BEE4AF8];
    sub_23F37C05C();
    v20 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v21 = v6;
    v13 = a1 + v20;
    v14 = *(_QWORD *)(v6 + 72);
    v22 = a2;
    do
    {
      sub_23F616B50();
      sub_23F4A7CF4();
      sub_23F616B5C();
      sub_23F616B74();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      v15 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37C05C();
        v15 = v23;
      }
      v16 = *(_QWORD *)(v15 + 16);
      if (v16 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_23F37C05C();
        v15 = v23;
      }
      *(_QWORD *)(v15 + 16) = v16 + 1;
      v17 = v15 + v20 + v16 * v14;
      v6 = v21;
      (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v17, v11, v5);
      v13 += v14;
      --v12;
    }
    while (v12);

  }
  else
  {

    return MEMORY[0x24BEE4AF8];
  }
  return v15;
}

uint64_t sub_23F4A7864(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t result;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  char *v39;
  uint64_t (*v40)(char *, uint64_t);
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  _QWORD v47[2];
  unint64_t *v48;
  uint64_t v49;
  id v50;
  char *v51;
  char *v52;
  _QWORD *v53;
  unint64_t v54;
  uint64_t v55;

  v50 = a2;
  v3 = sub_23F35D2E8(&qword_256E702C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E75C18);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v52 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (_QWORD *)((char *)v47 - v11);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v47 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v47 - v16;
  v18 = sub_23F35D2E8(&qword_256E75C20);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (_QWORD *)((char *)v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v48 = (_QWORD *)((char *)v47 - v22);
  v23 = v50;
  v49 = a1;
  v24 = (uint64_t)v51;
  v25 = (void *)sub_23F4A7674(a1, v23);
  v47[1] = v24;
  v54 = 0;
  v55 = 0;
  v50 = v25;
  v53 = v25;
  sub_23F5356EC(v21);
  if (sub_23F36195C((uint64_t)v21, 1, v7) == 1)
  {
    sub_23F617BA0();
    swift_bridgeObjectRelease();
    sub_23F3CFCB0((uint64_t)v21, &qword_256E75C20);
    v26 = 1;
    v27 = v48;
    v28 = v49;
  }
  else
  {
    v51 = v17;
    sub_23F4A7CAC((uint64_t)v21, (uint64_t)v17);
    v29 = v53;
    v30 = v54;
    v31 = v53[2];
    result = sub_23F617BA0();
    if (v30 != v31)
    {
      v33 = (uint64_t)v51;
      while (v30 < v31)
      {
        v34 = (unint64_t)v29
            + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
            + *(_QWORD *)(v4 + 72) * v30;
        v54 = v30 + 1;
        v35 = &v52[*(int *)(v7 + 48)];
        v36 = v55;
        result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v4 + 16))(v35, v34, v3);
        if (__OFADD__(v36, 1))
          goto LABEL_20;
        v55 = v36 + 1;
        v37 = (char *)v12 + *(int *)(v7 + 48);
        *v12 = v36;
        (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v37, v35, v3);
        sub_23F4A7CAC((uint64_t)v12, (uint64_t)v15);
        sub_23F4A7CF4();
        if ((sub_23F616B44() & 1) != 0)
        {
          sub_23F3CFCB0(v33, &qword_256E75C18);
          result = sub_23F4A7CAC((uint64_t)v15, v33);
        }
        else
        {
          result = sub_23F3CFCB0((uint64_t)v15, &qword_256E75C18);
        }
        v29 = v53;
        v30 = v54;
        v31 = v53[2];
        if (v54 == v31)
          goto LABEL_11;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    v27 = v48;
    sub_23F4A7CAC((uint64_t)v51, (uint64_t)v48);
    v26 = 0;
    v28 = v49;
  }
  sub_23F36196C((uint64_t)v27, v26, 1, v7);
  swift_bridgeObjectRelease();
  if (sub_23F36195C((uint64_t)v27, 1, v7) == 1)
  {
    sub_23F3CFCB0((uint64_t)v27, &qword_256E75C20);
    return 0;
  }
  v38 = *v27;
  v39 = (char *)v27 + *(int *)(v7 + 48);
  v40 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  result = v40(v39, v3);
  if ((v38 & 0x8000000000000000) != 0)
    goto LABEL_21;
  v41 = *(_QWORD *)(v28 + 16);
  if (v38 >= v41)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  v42 = v28 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v43 = *(_QWORD *)(v4 + 72);
  sub_23F616B50();
  sub_23F617BA0();
  v44 = 0.0;
  do
  {
    sub_23F616B74();
    sub_23F616B68();
    v46 = v45;
    v40(v6, v3);
    v44 = v44 + v46;
    v42 += v43;
    --v41;
  }
  while (v41);
  swift_bridgeObjectRelease();
  return *(_QWORD *)&v44;
}

uint64_t sub_23F4A7CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E75C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F4A7CF4()
{
  unint64_t result;

  result = qword_256E73648;
  if (!qword_256E73648)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E73648);
  }
  return result;
}

uint64_t sub_23F4A7D30()
{
  unint64_t v0;

  v0 = sub_23F61CAB4();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_23F4A7D78(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F4A7DA8 + 4 * byte_23F624900[a1]))(0x454E4F4850, 0xE500000000000000);
}

uint64_t sub_23F4A7DA8()
{
  return 4473168;
}

uint64_t sub_23F4A7DB8()
{
  return 0x4E414D4553524F48;
}

uint64_t sub_23F4A7DD0()
{
  return 1398097242;
}

uint64_t sub_23F4A7DE0()
{
  return 0x4F454D4143;
}

uint64_t sub_23F4A7DF0()
{
  return 0x4843544157;
}

uint64_t sub_23F4A7E00()
{
  return 5390659;
}

uint64_t sub_23F4A7E10()
{
  return 0x544952414752414DLL;
}

uint64_t sub_23F4A7E2C()
{
  return 0x6E776F6E6B6E75;
}

void sub_23F4A7E44(char *a1)
{
  sub_23F489704(*a1);
}

void sub_23F4A7E50()
{
  unsigned __int8 *v0;

  sub_23F3F60D4(*v0);
}

void sub_23F4A7E58(uint64_t a1)
{
  char *v1;

  sub_23F4E6DFC(a1, *v1);
}

void sub_23F4A7E60(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_23F3F65C8(a1, *v1);
}

uint64_t sub_23F4A7E68@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F4A7D30();
  *a1 = result;
  return result;
}

uint64_t sub_23F4A7E94@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23F4A7D78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_23F4A7EBC()
{
  _QWORD *v0;
  unint64_t v1;
  char v2;
  char v3;

  if (qword_256E6EEE0 != -1)
    swift_once();
  v0 = off_256E75C30;
  if (qword_256E6EED8 != -1)
    swift_once();
  if (v0[2] && (v1 = sub_23F375910(dword_256E75C28), (v2 & 1) != 0))
    v3 = *(_BYTE *)(v0[7] + v1);
  else
    v3 = 8;
  byte_256E7FF30 = v3;
}

void sub_23F4A7F5C()
{
  void *v0;
  int v1;

  v0 = (void *)sub_23F61C0E8();
  v1 = MGGetSInt32Answer();

  dword_256E75C28 = v1;
}

void *sub_23F4A7FAC()
{
  void *result;

  result = (void *)sub_23F61BFEC();
  off_256E75C30 = result;
  return result;
}

double sub_23F4A7FE8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  double result;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33[3];
  uint64_t v34[2];

  v34[1] = *MEMORY[0x24BDAC8D0];
  v6 = sub_23F619E98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v29 - v11;
  v32 = 0;
  v13 = (void *)sub_23F61C0E8();
  v14 = MGCopyAnswerWithError();

  if (v14)
  {
    *(_QWORD *)(a3 + 24) = swift_getObjectType();
    *(_QWORD *)a3 = v14;
  }
  else
  {
    if (v32)
    {
      sub_23F6190AC();
      swift_bridgeObjectRetain_n();
      v16 = sub_23F619E8C();
      v17 = sub_23F61C61C();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v30 = swift_slowAlloc();
        v33[0] = v30;
        *(_DWORD *)v18 = 136315138;
        v29[1] = v18 + 4;
        sub_23F617BA0();
        sub_23F37AE00(a1, a2, v33);
        v34[0] = v19;
        sub_23F61C790();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23F35A000, v16, v17, "MGCopyAnswerWithError found no answer for key: %s", v18, 0xCu);
        v20 = v30;
        swift_arrayDestroy();
        MEMORY[0x242670B70](v20, -1, -1);
        MEMORY[0x242670B70](v18, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    else
    {
      sub_23F6190AC();
      swift_bridgeObjectRetain_n();
      v21 = sub_23F619E8C();
      v22 = sub_23F61C61C();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v30 = swift_slowAlloc();
        v34[0] = v30;
        *(_DWORD *)v23 = 136315394;
        sub_23F617BA0();
        sub_23F37AE00(a1, a2, v34);
        v33[0] = v24;
        sub_23F61C790();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v23 + 12) = 2080;
        swift_beginAccess();
        LODWORD(v31) = v32;
        v25 = sub_23F61CC1C();
        sub_23F37AE00(v25, v26, v34);
        v31 = v27;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23F35A000, v21, v22, "MGCopyAnswerWithError error for key: %s -> %s", (uint8_t *)v23, 0x16u);
        v28 = v30;
        swift_arrayDestroy();
        MEMORY[0x242670B70](v28, -1, -1);
        MEMORY[0x242670B70](v23, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t static MobileGestalt.buildVersion.getter()
{
  return sub_23F4A8424(0x726556646C697542, 0xEC0000006E6F6973);
}

uint64_t static MobileGestalt.osVersion.getter()
{
  return sub_23F4A8424(0x56746375646F7250, 0xEE006E6F69737265);
}

uint64_t sub_23F4A8424(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v4[24];
  uint64_t v5;

  sub_23F4A7FE8(a1, a2, (uint64_t)v4);
  if (v5)
  {
    if (swift_dynamicCast())
      return v3;
  }
  else
  {
    sub_23F49CD08((uint64_t)v4);
  }
  return 0;
}

ValueMetadata *type metadata accessor for MobileGestalt()
{
  return &type metadata for MobileGestalt;
}

uint64_t getEnumTagSinglePayload for MobileGestalt.DeviceClass(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileGestalt.DeviceClass(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23F4A8570 + 4 * byte_23F62490E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23F4A85A4 + 4 * byte_23F624909[v4]))();
}

uint64_t sub_23F4A85A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4A85AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F4A85B4);
  return result;
}

uint64_t sub_23F4A85C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F4A85C8);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23F4A85CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4A85D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileGestalt.DeviceClass()
{
  return &type metadata for MobileGestalt.DeviceClass;
}

unint64_t sub_23F4A85F4()
{
  unint64_t result;

  result = qword_256E75C38;
  if (!qword_256E75C38)
  {
    result = MEMORY[0x242670A44](&unk_23F6249C4, &type metadata for MobileGestalt.DeviceClass);
    atomic_store(result, &qword_256E75C38);
  }
  return result;
}

uint64_t sub_23F4A8630@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_signpost_type_t v13;
  uint8_t *v14;
  uint8_t *v15;
  os_signpost_id_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a1;
  v2 = sub_23F619E98();
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v33 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F619E20();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - v9;
  if (qword_256E6F080 != -1)
    swift_once();
  v11 = sub_23F619E44();
  sub_23F361498(v11, (uint64_t)qword_256E80338);
  sub_23F619E38();
  sub_23F619DFC();
  v12 = sub_23F619E38();
  v13 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v14 = (uint8_t *)sub_23F366668();
    v30 = v1;
    v15 = v14;
    *(_WORD *)v14 = 0;
    v16 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v12, v13, v16, "NLDateResolver.resolveComponents", "", v15, 2u);
    sub_23F366530();
  }

  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  sub_23F619E74();
  swift_allocObject();
  v17 = 1;
  v18 = sub_23F619E68();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  if (sub_23F4AA3F4())
  {
    v19 = v33;
    sub_23F619094();
    swift_retain_n();
    v20 = sub_23F619E8C();
    v21 = sub_23F61C61C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = sub_23F366668();
      v30 = sub_23F366668();
      v36 = v30;
      *(_DWORD *)v22 = 136315394;
      sub_23F37AE00(0xD000000000000010, 0x800000023F637360, &v36);
      v35 = v23;
      sub_23F61C790();
      *(_WORD *)(v22 + 12) = 2080;
      v24 = sub_23F6178AC();
      sub_23F37AE00(v24, v25, &v36);
      v35 = v26;
      sub_23F61C790();
      sub_23F4AB768();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F35A000, v20, v21, "%s Resolved date time components = %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F4AB768();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v32);
    v27 = v34;
    sub_23F6178D0();
    swift_release();
    v17 = 0;
  }
  else
  {
    v27 = v34;
  }
  v28 = sub_23F616D00();
  sub_23F36196C(v27, v17, 1, v28);
  sub_23F4AA134(v18, "NLDateResolver.resolveComponents");
  return swift_release();
}

uint64_t sub_23F4A8A08(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[5] = a1;
  v2[6] = v1;
  v3 = sub_23F619E98();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = sub_23F3666CC();
  v2[10] = sub_23F3666CC();
  v2[11] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E72FC8);
  v2[12] = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FAA0);
  v2[13] = sub_23F366578();
  v4 = sub_23F40EBD4();
  v2[14] = v4;
  v2[15] = *(_QWORD *)(v4 - 8);
  v2[16] = sub_23F366578();
  sub_23F35D2E8(&qword_256E72FB8);
  v2[17] = sub_23F366578();
  v5 = sub_23F616D00();
  v2[18] = v5;
  v2[19] = *(_QWORD *)(v5 - 8);
  v2[20] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75C48);
  v2[21] = sub_23F366578();
  v6 = sub_23F61B95C();
  v2[22] = v6;
  v2[23] = *(_QWORD *)(v6 - 8);
  v2[24] = sub_23F366578();
  v7 = sub_23F61B9BC();
  v2[25] = v7;
  v2[26] = *(_QWORD *)(v7 - 8);
  v2[27] = sub_23F366578();
  v8 = sub_23F617150();
  v2[28] = v8;
  v2[29] = *(_QWORD *)(v8 - 8);
  v2[30] = sub_23F366578();
  v9 = sub_23F619E20();
  v2[31] = v9;
  v2[32] = *(_QWORD *)(v9 - 8);
  v2[33] = sub_23F3666CC();
  v2[34] = sub_23F3666CC();
  return swift_task_switch();
}

uint64_t sub_23F4A8B90()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint8_t *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  if (qword_256E6F080 != -1)
    swift_once();
  v1 = sub_23F619E44();
  sub_23F361498(v1, (uint64_t)qword_256E80338);
  sub_23F619E38();
  sub_23F619DFC();
  v2 = sub_23F619E38();
  v3 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v4 = (uint8_t *)sub_23F366668();
    *(_WORD *)v4 = 0;
    v5 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v2, v3, v5, "NLDateResolver.run", "", v4, 2u);
    sub_23F366530();
  }
  v68 = v0 + 24;
  v6 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 272);
  v9 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 192);
  v73 = *(_QWORD *)(v0 + 184);
  v11 = *(_QWORD *)(v0 + 168);
  v76 = *(_QWORD *)(v0 + 176);
  v81 = *(_QWORD *)(v0 + 200);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v7, v9);
  sub_23F619E74();
  swift_allocObject();
  v12 = sub_23F619E68();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  sub_23F4A9390();
  type metadata accessor for NLDateResolver();
  MEMORY[0x24266F0AC]();
  sub_23F40EBE4(v11);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v10, v76);
  if (sub_23F36195C(v11, 1, v81) != 1)
  {
    v23 = *(_QWORD *)(v0 + 136);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 32))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 200));
    sub_23F4A8630(v23);
    v25 = *(_QWORD *)(v0 + 136);
    v24 = *(_QWORD *)(v0 + 144);
    v72 = v12;
    if (sub_23F36195C(v25, 1, v24) == 1)
    {
      sub_23F3CFCB0(v25, &qword_256E72FB8);
      sub_23F384060();
      v26 = sub_23F619E8C();
      v27 = sub_23F61C628();
      v28 = os_log_type_enabled(v26, v27);
      v30 = *(_QWORD *)(v0 + 232);
      v29 = *(_QWORD *)(v0 + 240);
      v32 = *(_QWORD *)(v0 + 216);
      v31 = *(_QWORD *)(v0 + 224);
      v78 = *(_QWORD *)(v0 + 208);
      v82 = *(_QWORD *)(v0 + 200);
      if (v28)
      {
        v63 = *(_QWORD *)(v0 + 232);
        v33 = (uint8_t *)sub_23F366668();
        sub_23F366668();
        *(_DWORD *)v33 = 136315138;
        sub_23F4AB704((uint64_t)"[NLDateResolver]", v55, v56, v29, v31, v63, v32, v68, v12, v0 + 32, v78, v82);
        *v69 = v34;
        sub_23F61C790();
        sub_23F38485C(&dword_23F35A000, v26, v27, "%s Could not resolve components", v33);
        sub_23F3B17D4();
        sub_23F366530();
      }

      sub_23F4AB73C();
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v32, v82);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    }
    else
    {
      v37 = *(_QWORD *)(v0 + 104);
      v36 = *(_QWORD *)(v0 + 112);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 152) + 32))(*(_QWORD *)(v0 + 160), v25, v24);
      sub_23F6170FC();
      if (sub_23F36195C(v37, 1, v36) != 1)
      {
        v75 = *(_QWORD *)(v0 + 232);
        v46 = *(_QWORD *)(v0 + 216);
        v80 = *(_QWORD *)(v0 + 224);
        v84 = *(_QWORD *)(v0 + 240);
        v67 = *(_QWORD *)(v0 + 208);
        v71 = *(_QWORD *)(v0 + 200);
        v47 = *(_QWORD *)(v0 + 152);
        v61 = *(_QWORD *)(v0 + 144);
        v65 = *(_QWORD *)(v0 + 160);
        v49 = *(_QWORD *)(v0 + 120);
        v48 = *(_QWORD *)(v0 + 128);
        v50 = *(_QWORD *)(v0 + 112);
        v51 = *(_QWORD *)(v0 + 96);
        v52 = *(uint64_t **)(v0 + 40);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 32))(v48, *(_QWORD *)(v0 + 104), v50);
        sub_23F4A94B8(v51);
        sub_23F4A977C(v48, v46, v51, v52);
        sub_23F3CFCB0(v51, &qword_256E72FC8);
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v65, v61);
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v46, v71);
        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v84, v80);
LABEL_19:
        v12 = v72;
        goto LABEL_20;
      }
      sub_23F3CFCB0(*(_QWORD *)(v0 + 104), &qword_256E6FAA0);
      sub_23F384060();
      v38 = sub_23F619E8C();
      v39 = sub_23F61C628();
      v40 = os_log_type_enabled(v38, v39);
      v42 = *(_QWORD *)(v0 + 232);
      v41 = *(_QWORD *)(v0 + 240);
      v43 = *(_QWORD *)(v0 + 216);
      v79 = *(_QWORD *)(v0 + 200);
      v83 = *(_QWORD *)(v0 + 224);
      v66 = *(_QWORD *)(v0 + 160);
      v70 = *(_QWORD *)(v0 + 208);
      v60 = *(_QWORD *)(v0 + 152);
      v64 = *(_QWORD *)(v0 + 144);
      if (v40)
      {
        v58 = *(_QWORD *)(v0 + 216);
        v44 = (uint8_t *)sub_23F366668();
        sub_23F366668();
        *(_DWORD *)v44 = 136315138;
        sub_23F4AB704((uint64_t)"[NLDateResolver]", v41, v42, v58, v60, v64, v66, v70, v12, v0 + 32, v79, v83);
        *(_QWORD *)(v0 + 32) = v45;
        sub_23F61C790();
        sub_23F38485C(&dword_23F35A000, v38, v39, "%s Could not extract a valid date from date components", v44);
        sub_23F3B17D4();
        sub_23F366530();
      }

      sub_23F4AB74C();
      sub_23F4AB71C(v60, v55, v56, v57, v60, v64, v66);
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v43, v79);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v83);
    }
    v53 = sub_23F4AB75C();
    sub_23F4AB728(v53);
    goto LABEL_19;
  }
  sub_23F3CFCB0(*(_QWORD *)(v0 + 168), &qword_256E75C48);
  sub_23F384060();
  v13 = sub_23F619E8C();
  v14 = sub_23F61C61C();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 240);
  v18 = *(_QWORD *)(v0 + 224);
  v19 = *(_QWORD *)(v0 + 64);
  v20 = *(_QWORD *)(v0 + 72);
  if (v15)
  {
    v77 = *(_QWORD *)(v0 + 232);
    v74 = *(_QWORD *)(v0 + 240);
    v21 = (uint8_t *)sub_23F366668();
    sub_23F366668();
    *(_DWORD *)v21 = 136315138;
    sub_23F4AB704((uint64_t)"[NLDateResolver]", v55, v56, v57, v59, v62, v20, v68, v12, v74, v77, v18);
    *(_QWORD *)(v0 + 16) = v22;
    sub_23F61C790();
    sub_23F38485C(&dword_23F35A000, v13, v14, "%s Parameter is not type of Date or DateComponents, will not try to resolve", v21);
    sub_23F3B17D4();
    sub_23F366530();
  }

  sub_23F3D98EC(v20, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v35 = sub_23F4AB75C();
  sub_23F4AB728(v35);
LABEL_20:
  sub_23F4AA134(v12, "NLDateResolver.run");
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F4A9390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = sub_23F35D2E8(&qword_256E70A60);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F617198();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61712C();
  v8 = type metadata accessor for NLDateResolver();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v0 + *(int *)(v8 + 28), v4);
  sub_23F617138();
  v9 = v0 + *(int *)(v8 + 32);
  v10 = sub_23F6170CC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v3, v9, v10);
  sub_23F36196C((uint64_t)v3, 0, 1, v10);
  return sub_23F617120();
}

uint64_t sub_23F4A94B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a1;
  v1 = sub_23F61BADC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v32 - v6;
  v8 = sub_23F61B95C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24266F0AC](v10);
  v13 = sub_23F61B950();
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v15 = 0;
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v13 + 56;
  v19 = v17 & *(_QWORD *)(v13 + 56);
  v20 = (unint64_t)(v16 + 63) >> 6;
  v21 = *MEMORY[0x24BEB9F80];
  if (!v19)
    goto LABEL_5;
LABEL_4:
  v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v22 | (v15 << 6); ; i = __clz(__rbit64(v25)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v7, *(_QWORD *)(v13 + 48) + *(_QWORD *)(v2 + 72) * i, v1);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
    if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v5, v1) == v21)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v2 + 96))(v5, v1);
      v27 = sub_23F61BAC4();
      v28 = v33;
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v33, v5, v27);
      v29 = v28;
      v30 = 0;
      v31 = v27;
      return sub_23F36196C(v29, v30, 1, v31);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    if (v19)
      goto LABEL_4;
LABEL_5:
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v24 >= v20)
      goto LABEL_23;
    v25 = *(_QWORD *)(v18 + 8 * v24);
    ++v15;
    if (v25)
      goto LABEL_18;
    v15 = v24 + 1;
    if (v24 + 1 >= v20)
      goto LABEL_23;
    v25 = *(_QWORD *)(v18 + 8 * v15);
    if (v25)
      goto LABEL_18;
    v15 = v24 + 2;
    if (v24 + 2 >= v20)
      goto LABEL_23;
    v25 = *(_QWORD *)(v18 + 8 * v15);
    if (v25)
      goto LABEL_18;
    v26 = v24 + 3;
    if (v26 >= v20)
    {
LABEL_23:
      swift_release();
      v31 = sub_23F61BAC4();
      v29 = v33;
      v30 = 1;
      return sub_23F36196C(v29, v30, 1, v31);
    }
    v25 = *(_QWORD *)(v18 + 8 * v26);
    if (!v25)
    {
      while (1)
      {
        v15 = v26 + 1;
        if (__OFADD__(v26, 1))
          goto LABEL_26;
        if (v15 >= v20)
          goto LABEL_23;
        v25 = *(_QWORD *)(v18 + 8 * v15);
        ++v26;
        if (v25)
          goto LABEL_18;
      }
    }
    v15 = v26;
LABEL_18:
    v19 = (v25 - 1) & v25;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23F4A977C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  void (*v60)(unint64_t, _QWORD, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void (*v76)(unint64_t, _QWORD, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  void (*v87)(unint64_t, _QWORD, uint64_t);
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  void (*v96)(unint64_t, _QWORD, uint64_t);
  char *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;

  v111 = a3;
  v117 = a4;
  v118 = a2;
  v116 = a1;
  v4 = sub_23F35D2E8(&qword_256E72FC8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v106 = (uint64_t)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v113 = (uint64_t)&v105 - v7;
  v107 = sub_23F616D00();
  v114 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v112 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(&qword_256E70A60);
  MEMORY[0x24BDAC7A8](v9);
  v108 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_23F617198();
  v115 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109);
  v12 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F6170D8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F617150();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F61B9BC();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v118, v21);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v24, v21);
  if (v25 != *MEMORY[0x24BEB9C98])
  {
    v35 = v16;
    v36 = v13;
    v37 = v115;
    v105 = v18;
    if (v25 != *MEMORY[0x24BEB9C60])
    {
      v63 = sub_23F61B92C();
      sub_23F36196C((uint64_t)v117, 1, 1, v63);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    }
    v38 = v35;
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v35, *MEMORY[0x24BDCEF70], v36);
    v39 = v20;
    sub_23F6170E4();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v38, v36);
    v40 = type metadata accessor for NLDateResolver();
    v41 = v110;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v12, v110 + *(int *)(v40 + 28), v109);
    sub_23F617138();
    v42 = v41 + *(int *)(v40 + 32);
    v43 = sub_23F6170CC();
    v44 = (uint64_t)v108;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v108, v42, v43);
    sub_23F36196C(v44, 0, 1, v43);
    sub_23F617120();
    v45 = v113;
    sub_23F4AB408(v111, v113, &qword_256E72FC8);
    v46 = sub_23F61BAC4();
    v47 = sub_23F36195C(v45, 1, v46);
    v48 = v114;
    v49 = v112;
    v118 = v17;
    v50 = v105;
    if (v47 == 1)
      goto LABEL_5;
    v65 = v106;
    sub_23F4AB408(v45, v106, &qword_256E72FC8);
    v66 = *(_QWORD *)(v46 - 8);
    v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 88))(v65, v46);
    if (v67 == *MEMORY[0x24BEBA0D8])
    {
      sub_23F35D2E8(&qword_256E75C50);
      v68 = sub_23F617144();
      v69 = *(_QWORD *)(v68 - 8);
      v70 = v39;
      v71 = v50;
      v72 = *(_QWORD *)(v69 + 72);
      v73 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = xmmword_23F61EBC0;
      v75 = v74 + v73;
      v76 = *(void (**)(unint64_t, _QWORD, uint64_t))(v69 + 104);
      v76(v75, *MEMORY[0x24BDCF230], v68);
      v76(v75 + v72, *MEMORY[0x24BDCF258], v68);
      v76(v75 + 2 * v72, *MEMORY[0x24BDCF260], v68);
      sub_23F3E3CD4();
      sub_23F6170F0();
      swift_bridgeObjectRelease();
      v77 = v70;
      v62 = v114;
      (*(void (**)(char *, uint64_t))(v71 + 8))(v77, v118);
      v78 = v113;
    }
    else
    {
      if (v67 == *MEMORY[0x24BEBA0D0])
      {
        sub_23F35D2E8(&qword_256E75C50);
        v79 = sub_23F617144();
        v80 = v48;
        v81 = *(_QWORD *)(v79 - 8);
        v82 = v39;
        v83 = *(_QWORD *)(v81 + 72);
        v84 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
        v85 = swift_allocObject();
        *(_OWORD *)(v85 + 16) = xmmword_23F61EBC0;
        v86 = v85 + v84;
        v87 = *(void (**)(unint64_t, _QWORD, uint64_t))(v81 + 104);
        v62 = v80;
        v87(v86, *MEMORY[0x24BDCF240], v79);
        v87(v86 + v83, *MEMORY[0x24BDCF250], v79);
        v87(v86 + 2 * v83, *MEMORY[0x24BDCF220], v79);
        sub_23F3E3CD4();
        sub_23F6170F0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v105 + 8))(v82, v118);
      }
      else
      {
        if (v67 == *MEMORY[0x24BEBA0C8])
        {
LABEL_5:
          sub_23F3CFCB0(v45, &qword_256E72FC8);
          sub_23F35D2E8(&qword_256E75C50);
          v51 = sub_23F617144();
          v52 = v48;
          v53 = v39;
          v54 = v50;
          v55 = *(_QWORD *)(v51 - 8);
          v56 = *(_QWORD *)(v55 + 72);
          v57 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
          v58 = swift_allocObject();
          *(_OWORD *)(v58 + 16) = xmmword_23F61EC90;
          v59 = v58 + v57;
          v60 = *(void (**)(unint64_t, _QWORD, uint64_t))(v55 + 104);
          v60(v59, *MEMORY[0x24BDCF240], v51);
          v60(v59 + v56, *MEMORY[0x24BDCF250], v51);
          v60(v59 + 2 * v56, *MEMORY[0x24BDCF220], v51);
          v60(v59 + 3 * v56, *MEMORY[0x24BDCF230], v51);
          v60(v59 + 4 * v56, *MEMORY[0x24BDCF258], v51);
          v60(v59 + 5 * v56, *MEMORY[0x24BDCF260], v51);
          sub_23F3E3CD4();
          sub_23F6170F0();
          swift_bridgeObjectRelease();
          v61 = v53;
          v62 = v52;
          (*(void (**)(char *, uint64_t))(v54 + 8))(v61, v118);
LABEL_15:
          v98 = v117;
          v99 = v107;
          v100 = sub_23F61B8A8();
          v101 = swift_allocBox();
          v103 = v102;
          (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v102, v49, v99);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v100 - 8) + 104))(v103, *MEMORY[0x24BEB9900], v100);
          *v98 = v101;
          v104 = *MEMORY[0x24BEB9A00];
          v33 = sub_23F61B92C();
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v98, v104, v33);
          v34 = (uint64_t)v98;
          return sub_23F36196C(v34, 0, 1, v33);
        }
        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v106, v46);
        sub_23F35D2E8(&qword_256E75C50);
        v88 = sub_23F617144();
        v89 = v39;
        v90 = v50;
        v91 = *(_QWORD *)(v88 - 8);
        v92 = *(_QWORD *)(v91 + 72);
        v93 = (*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
        v94 = swift_allocObject();
        *(_OWORD *)(v94 + 16) = xmmword_23F61EC90;
        v95 = v94 + v93;
        v96 = *(void (**)(unint64_t, _QWORD, uint64_t))(v91 + 104);
        v96(v95, *MEMORY[0x24BDCF240], v88);
        v96(v95 + v92, *MEMORY[0x24BDCF250], v88);
        v96(v95 + 2 * v92, *MEMORY[0x24BDCF220], v88);
        v96(v95 + 3 * v92, *MEMORY[0x24BDCF230], v88);
        v96(v95 + 4 * v92, *MEMORY[0x24BDCF258], v88);
        v96(v95 + 5 * v92, *MEMORY[0x24BDCF260], v88);
        sub_23F3E3CD4();
        sub_23F6170F0();
        swift_bridgeObjectRelease();
        v97 = v89;
        v62 = v114;
        (*(void (**)(char *, uint64_t))(v90 + 8))(v97, v118);
      }
      v78 = v45;
    }
    sub_23F3CFCB0(v78, &qword_256E72FC8);
    goto LABEL_15;
  }
  v26 = sub_23F61B8A8();
  v27 = swift_allocBox();
  v29 = v28;
  v30 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v29, v116, v30);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v29, *MEMORY[0x24BEB9930], v26);
  v31 = v117;
  *v117 = v27;
  v32 = *MEMORY[0x24BEB9A00];
  v33 = sub_23F61B92C();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v31, v32, v33);
  v34 = (uint64_t)v31;
  return sub_23F36196C(v34, 0, 1, v33);
}

uint64_t sub_23F4AA134(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  NSObject *v14;
  char v15;
  char v16;
  const char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_signpost_id_t v23;
  _BYTE v24[4];
  int v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a2;
  v2 = sub_23F619E50();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_23F619E20();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v24[-v11];
  if (qword_256E6F080 != -1)
    swift_once();
  v13 = sub_23F619E44();
  sub_23F361498(v13, (uint64_t)qword_256E80338);
  v14 = sub_23F619E38();
  sub_23F619E5C();
  v25 = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x24BEE7810])
    {
      v15 = 0;
      v16 = 0;
      v17 = "[Error] Interval already ended";
    }
    else
    {
      sub_23F3D98EC((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      v17 = "%s";
      v16 = 2;
      v15 = 1;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v12, v6);
    v19 = sub_23F366668();
    v28 = sub_23F366668();
    *(_BYTE *)v19 = v16;
    *(_BYTE *)(v19 + 1) = v15;
    *(_WORD *)(v19 + 2) = 2080;
    v20 = sub_23F61C8F8();
    sub_23F37AE00(v20, v21, &v28);
    v27 = v22;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v23 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v14, (os_signpost_type_t)v25, v23, v26, v17, (uint8_t *)v19, 0xCu);
    sub_23F3B17D4();
    sub_23F366530();
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t sub_23F4AA3F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  int v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint8_t *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82[5];

  v1 = sub_23F619E98();
  v76 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v67 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v60 - v5;
  v7 = MEMORY[0x24BDAC7A8](v4);
  v66 = (char *)&v60 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v60 - v9;
  v72 = sub_23F617744();
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F617750();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F617768();
  v73 = *(uint8_t **)(v17 - 8);
  v74 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_23F35D2E8(&qword_256E75C58);
  v64 = *(_QWORD *)(v65 - 8);
  v20 = MEMORY[0x24BDAC7A8](v65);
  v62 = (uint64_t *)((char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v60 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v63 = (char *)&v60 - v25;
  v70 = sub_23F6176E4();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v75 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for NLDateResolver();
  sub_23F4AB408((uint64_t)v0 + *(int *)(v27 + 36), (uint64_t)&v80, &qword_256E72FC0);
  if (!v81)
  {
    sub_23F3CFCB0((uint64_t)&v80, &qword_256E72FC0);
    goto LABEL_7;
  }
  v68 = v1;
  sub_23F362678(&v80, (uint64_t)v82);
  v28 = (void **)sub_23F35EA9C(v82, v82[3]);
  v29 = sub_23F41057C(*v0, v0[1], *v28);
  sub_23F36FE64(v29, &v78);
  swift_bridgeObjectRelease();
  if (!v79)
  {
    sub_23F3CFCB0((uint64_t)&v78, &qword_256E6FC98);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v82);
    v1 = v68;
LABEL_7:
    sub_23F619094();
    v32 = sub_23F619E8C();
    v33 = sub_23F61C628();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = v1;
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v82[0] = v36;
      *(_DWORD *)v35 = 136315138;
      sub_23F37AE00(0xD000000000000010, 0x800000023F637360, v82);
      *(_QWORD *)&v80 = v37;
      sub_23F61C790();
      _os_log_impl(&dword_23F35A000, v32, v33, "%s DataDetectors did not find a USO DateTime", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v36, -1, -1);
      MEMORY[0x242670B70](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v76 + 8))(v6, v34);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v76 + 8))(v6, v1);
    }
    return 0;
  }
  v61 = v10;
  sub_23F382A70(&v78, &v80);
  v30 = sub_23F410A1C((uint64_t)&v80);
  if (!v30)
  {
    v38 = v66;
    sub_23F619094();
    v39 = sub_23F619E8C();
    v40 = sub_23F61C628();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      *(_QWORD *)&v78 = v42;
      *(_DWORD *)v41 = 136315138;
      sub_23F37AE00(0xD000000000000010, 0x800000023F637360, (uint64_t *)&v78);
      v77 = v43;
      sub_23F61C790();
      _os_log_impl(&dword_23F35A000, v39, v40, "%s USO entity could not be converted to DateTime", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v42, -1, -1);
      MEMORY[0x242670B70](v41, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v76 + 8))(v38, v68);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v80);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v82);
    return 0;
  }
  v31 = v30;
  sub_23F6176D8();
  v66 = (char *)sub_23F4AAFA0();
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BE93980], v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v12, *MEMORY[0x24BE93970], v72);
  sub_23F6178A0();
  sub_23F6178DC();
  sub_23F4AB44C();
  sub_23F61BFEC();
  sub_23F61775C();
  sub_23F6176CC();
  (*((void (**)(char *, uint64_t))v73 + 1))(v19, v74);
  swift_release();
  v44 = v64;
  v45 = v63;
  v46 = v24;
  v47 = v65;
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v63, v46, v65);
  v48 = v62;
  (*(void (**)(uint64_t *, char *, uint64_t))(v44 + 16))(v62, v45, v47);
  v49 = (*(uint64_t (**)(uint64_t *, uint64_t))(v44 + 88))(v48, v47);
  if (v49 != *MEMORY[0x24BE93670] && v49 != *MEMORY[0x24BE93658])
  {
    if (v49 != *MEMORY[0x24BE93660])
    {
      if (v49 == *MEMORY[0x24BE93668])
      {
        swift_release();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v47);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v75, v70);
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v80);
      }
      else
      {
        v53 = v61;
        sub_23F619094();
        v54 = sub_23F619E8C();
        v55 = sub_23F61C628();
        if (os_log_type_enabled(v54, v55))
        {
          v74 = v31;
          v56 = (uint8_t *)swift_slowAlloc();
          v57 = swift_slowAlloc();
          *(_QWORD *)&v78 = v57;
          *(_DWORD *)v56 = 136315138;
          v73 = v56 + 4;
          sub_23F37AE00(0xD000000000000010, 0x800000023F637360, (uint64_t *)&v78);
          v77 = v58;
          sub_23F61C790();
          _os_log_impl(&dword_23F35A000, v54, v55, "%s Unknown resolved recommendation", v56, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x242670B70](v57, -1, -1);
          MEMORY[0x242670B70](v56, -1, -1);
        }

        swift_release();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v53, v68);
        v59 = *(void (**)(char *, uint64_t))(v44 + 8);
        v59(v45, v47);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v75, v70);
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v80);
        v59((char *)v48, v47);
      }
      v50 = 0;
      goto LABEL_16;
    }
    (*(void (**)(uint64_t *, uint64_t))(v44 + 96))(v48, v47);
    v52 = *v48;
    if ((unint64_t)*v48 >> 62)
    {
      sub_23F617BA0();
      v50 = sub_23F61CA6C();
      swift_bridgeObjectRelease();
      if (v50)
      {
LABEL_22:
        sub_23F3753DC(0, (v52 & 0xC000000000000001) == 0, v52);
        if ((v52 & 0xC000000000000001) != 0)
        {
          v50 = MEMORY[0x24266FE14](0, v52);
        }
        else
        {
          v50 = *(_QWORD *)(v52 + 32);
          swift_retain();
        }
      }
    }
    else
    {
      v50 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v50)
        goto LABEL_22;
    }
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v47);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v75, v70);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v80);
    goto LABEL_16;
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v47);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v75, v70);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v80);
  (*(void (**)(uint64_t *, uint64_t))(v44 + 96))(v48, v47);
  v50 = *v48;
LABEL_16:
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v82);
  return v50;
}

uint64_t sub_23F4AAFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  int *v27;
  uint64_t v28;
  void *v29;
  unsigned int *v30;
  double v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;

  v1 = sub_23F616FC4();
  v54 = *(_QWORD *)(v1 - 8);
  v55 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v56 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F617150();
  MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F617198();
  v50 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v53 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F6170CC();
  v8 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  v46 = v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v52 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)&v41 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v58 = (char *)&v41 - v13;
  v14 = sub_23F619E98();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F617798();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v49 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v41 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v41 - v25;
  v27 = (int *)type metadata accessor for NLDateResolver();
  v28 = v27[10];
  v48 = v0;
  v29 = *(void **)(v0 + v28);
  v51 = v5;
  if (v29)
  {
    objc_msgSend(v29, sel_coordinate);
    v30 = (unsigned int *)MEMORY[0x24BE93A18];
    if (v31 >= 0.0)
      v30 = (unsigned int *)MEMORY[0x24BE93A10];
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v24, *v30, v18);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v26, v24, v18);
  }
  else
  {
    v41 = v15;
    v42 = v14;
    v43 = v26;
    v44 = v19;
    sub_23F619094();
    v32 = sub_23F619E8C();
    v33 = sub_23F61C628();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_23F35A000, v32, v33, "currentLocation missing in NLDateResolver, setting hemisphere as north", v34, 2u);
      MEMORY[0x242670B70](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v42);
    v26 = v43;
    v19 = v44;
    (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, *MEMORY[0x24BE93A10], v18);
  }
  v35 = v45;
  v36 = v48;
  v37 = v48 + v27[8];
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
  v38(v58, v37, v45);
  v38(v57, v37, v35);
  v38(v52, v37, v35);
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v53, v36 + v27[7], v51);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v49, v26, v18);
  sub_23F4A9390();
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v56, v36 + v27[6], v55);
  sub_23F6177B0();
  swift_allocObject();
  v39 = sub_23F6177A4();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v26, v18);
  return v39;
}

uint64_t type metadata accessor for NLDateResolver()
{
  uint64_t result;

  result = qword_256E75CC0;
  if (!qword_256E75CC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F4AB408(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23F35D2E8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_23F4AB44C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E75C60;
  if (!qword_256E75C60)
  {
    v1 = sub_23F6178A0();
    result = MEMORY[0x242670A44](MEMORY[0x24BE94120], v1);
    atomic_store(result, (unint64_t *)&qword_256E75C60);
  }
  return result;
}

uint64_t sub_23F4AB48C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4AB498(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_23F61BBA8();
    sub_23F3F9C58();
    if (v11)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      sub_23F40EBD4();
      sub_23F3F9C58();
      if (v11)
      {
        v9 = v12;
        v10 = a3[6];
      }
      else
      {
        sub_23F617198();
        sub_23F3F9C58();
        if (v13)
        {
          v9 = v14;
          v10 = a3[7];
        }
        else
        {
          v9 = sub_23F6170CC();
          v10 = a3[8];
        }
      }
    }
    return sub_23F36195C(a1 + v10, a2, v9);
  }
}

uint64_t sub_23F4AB55C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4AB568(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_23F61BBA8();
    sub_23F3F9C68();
    if (v10)
    {
      v8 = v7;
      v9 = a4[5];
    }
    else
    {
      sub_23F40EBD4();
      sub_23F3F9C68();
      if (v10)
      {
        v8 = v11;
        v9 = a4[6];
      }
      else
      {
        sub_23F617198();
        sub_23F3F9C68();
        if (v12)
        {
          v8 = v13;
          v9 = a4[7];
        }
        else
        {
          v8 = sub_23F6170CC();
          v9 = a4[8];
        }
      }
    }
    return sub_23F36196C(v5 + v9, a2, a2, v8);
  }
  return result;
}

uint64_t sub_23F4AB628()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = sub_23F61BBA8();
  if (v1 <= 0x3F)
  {
    result = sub_23F616FC4();
    if (v2 <= 0x3F)
    {
      result = sub_23F617198();
      if (v3 <= 0x3F)
      {
        result = sub_23F6170CC();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

void sub_23F4AB704(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_23F37AE00(0xD000000000000010, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t sub_23F4AB71C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(a7);
}

uint64_t sub_23F4AB728(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(v1, 1, 1, a1);
}

uint64_t sub_23F4AB73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F4AB74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23F4AB75C()
{
  return sub_23F61B92C();
}

uint64_t sub_23F4AB768()
{
  return swift_release_n();
}

Swift::Int __swiftcall NSHTTPURLResponse.statusCodeFixed()()
{
  void *v0;

  return (Swift::Int)objc_msgSend(v0, sel_statusCode);
}

uint64_t sub_23F4AB784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  sub_23F617D08();
  v3[9] = sub_23F366578();
  v4 = sub_23F61B3A4();
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = sub_23F366578();
  v5 = sub_23F61B3EC();
  v3[13] = v5;
  v3[14] = *(_QWORD *)(v5 - 8);
  v3[15] = sub_23F366578();
  v6 = sub_23F61B404();
  v3[16] = v6;
  v3[17] = *(_QWORD *)(v6 - 8);
  v3[18] = sub_23F366578();
  v7 = sub_23F61B9EC();
  v3[19] = v7;
  v3[20] = *(_QWORD *)(v7 - 8);
  v3[21] = sub_23F366578();
  v8 = sub_23F61B92C();
  v3[22] = v8;
  v3[23] = *(_QWORD *)(v8 - 8);
  v3[24] = sub_23F366654();
  v3[25] = sub_23F3666CC();
  v3[26] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E75DD0);
  v3[27] = sub_23F366578();
  sub_23F35D2E8(&qword_256E75DD8);
  v3[28] = sub_23F366578();
  v9 = sub_23F6171F8();
  v3[29] = v9;
  v3[30] = *(_QWORD *)(v9 - 8);
  v3[31] = sub_23F366654();
  v3[32] = sub_23F3666CC();
  v3[33] = sub_23F3666CC();
  v10 = sub_23F6171C8();
  v3[34] = v10;
  v3[35] = *(_QWORD *)(v10 - 8);
  v3[36] = sub_23F366654();
  v3[37] = sub_23F3666CC();
  v11 = sub_23F619E98();
  v3[38] = v11;
  v3[39] = *(_QWORD *)(v11 - 8);
  v3[40] = sub_23F366654();
  v3[41] = sub_23F3666CC();
  v3[42] = sub_23F3666CC();
  v3[43] = sub_23F3666CC();
  return swift_task_switch();
}

uint64_t sub_23F4AB924()
{
  _QWORD *v0;
  os_log_type_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v22)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v23;

  v2 = v0[43];
  sub_23F3E0278();
  sub_23F3E0254();
  sub_23F619E8C();
  v3 = sub_23F3B1A04();
  if (sub_23F3B1E8C(v3))
  {
    v5 = v0[7];
    v4 = v0[8];
    v6 = (uint8_t *)sub_23F4AC9BC();
    v23 = sub_23F366668();
    *(_DWORD *)v6 = 136315138;
    sub_23F617BA0();
    sub_23F37AE00(v5, v4, &v23);
    v0[5] = v7;
    sub_23F4AC9E0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23F35A000, v2, v1, "Running Omnisearch Candidate Generation with stringQuery: %s", v6, 0xCu);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v8 = v0[43];
  v9 = v0[38];
  v10 = v0[39];
  sub_23F384A80();

  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v0[44] = v11;
  v12 = v0[19];
  v13 = v0[20];
  v14 = v0[8];
  v15 = v0[6];
  sub_23F617210();
  v0[45] = sub_23F617204();
  sub_23F35D2E8(&qword_256E6FD58);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_23F61E7E0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16))(v17 + v16, v15, v12);
  sub_23F3E3BA0();
  v19 = v18;
  v0[46] = v18;
  v22 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))((int)*MEMORY[0x24BE6E178]
                                                                         + MEMORY[0x24BE6E178]);
  v20 = (_QWORD *)swift_task_alloc();
  v0[47] = v20;
  *v20 = v0;
  v20[1] = sub_23F4ABB3C;
  return v22(v0[7], v0[8], v0[7], v14, v19);
}

uint64_t sub_23F4ABB3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 384) = a1;
  *(_QWORD *)(v3 + 392) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23F4ABBB0()
{
  _QWORD *v0;
  NSObject *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD);
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  os_log_type_t v90;
  _BOOL4 v91;
  void (*v92)(uint64_t, uint64_t);
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _DWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  uint64_t v109;
  unsigned int v110;
  uint64_t v111;
  void (*v112)(uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;

  v1 = v0[42];
  sub_23F619148();
  sub_23F3E0254();
  v2 = v1;
  sub_23F619E8C();
  v3 = sub_23F3B1A04();
  v124 = v0;
  if (os_log_type_enabled(v1, v3))
  {
    v4 = v0[34];
    v5 = (uint8_t *)sub_23F4AC9BC();
    v125 = sub_23F366668();
    *(_DWORD *)v5 = 136315138;
    v6 = sub_23F617BA0();
    v7 = MEMORY[0x24266F8F8](v6, v4);
    v9 = v8;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v7, v9, &v125);
    v0[4] = v10;
    sub_23F4AC9E0();
    swift_bridgeObjectRelease();
    sub_23F384A80();
    _os_log_impl(&dword_23F35A000, v1, v3, "Search Results: %s", v5, 0xCu);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v11 = (void (*)(uint64_t, uint64_t))v0[44];
  v12 = v0[42];
  v13 = v0[38];
  sub_23F384A80();

  v11(v12, v13);
  v14 = *(_QWORD *)(v0[48] + 16);
  if (v14)
  {
    v15 = v0[30];
    sub_23F383EB8();
    v18 = v16 + v17;
    v120 = *(_QWORD *)(v19 + 72);
    v121 = v19;
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    sub_23F617BA0();
    v21 = MEMORY[0x24BEE4AF8];
    do
    {
      v22 = v0[36];
      v23 = v0[37];
      v24 = v0[34];
      v25 = v0[27];
      v20(v23, v18, v24);
      v20(v22, v23, v24);
      sub_23F6171B0();
      v26 = sub_23F6171BC();
      if (sub_23F36195C(v25, 1, v26) == 1)
      {
        v27 = v0[28];
        v28 = v0[29];
        sub_23F3B5A28(v0[27], &qword_256E75DD0);
        sub_23F36196C(v27, 1, 1, v28);
      }
      else
      {
        v29 = v0[27];
        sub_23F6171A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v29, v26);
      }
      v30 = v0[28];
      v31 = v0[29];
      (*(void (**)(_QWORD, _QWORD))(v121 + 8))(v0[37], v0[34]);
      if (sub_23F36195C(v30, 1, v31) == 1)
      {
        sub_23F3B5A28(v0[28], &qword_256E75DD8);
      }
      else
      {
        v32 = v0[32];
        v33 = v0[33];
        v34 = v0[29];
        v35 = *(void (**)(_QWORD))(v15 + 32);
        ((void (*)(uint64_t, _QWORD, uint64_t))v35)(v33, v0[28], v34);
        ((void (*)(uint64_t, uint64_t, uint64_t))v35)(v32, v33, v34);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F4ACA0C();
          v21 = v38;
        }
        v36 = *(_QWORD *)(v21 + 16);
        if (v36 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_23F4ACA0C();
          v21 = v39;
        }
        v0 = v124;
        *(_QWORD *)(v21 + 16) = v36 + 1;
        sub_23F383EB8();
        v35(v21 + v37 + *(_QWORD *)(v15 + 72) * v36);
      }
      v18 += v120;
      --v14;
    }
    while (v14);
    sub_23F384A80();
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
  }
  v40 = (void *)v0[41];
  sub_23F3E0278();
  sub_23F3E0254();
  sub_23F619E8C();
  v41 = sub_23F3B1A04();
  v42 = sub_23F3B1E8C(v41);
  v43 = (void (*)(uint64_t, uint64_t))v0[44];
  v44 = v0[41];
  v45 = v0[38];
  if (v42)
  {
    v46 = v124[29];
    v47 = (_DWORD *)sub_23F4AC9BC();
    v125 = sub_23F366668();
    *v47 = 136315138;
    v48 = sub_23F617BA0();
    v49 = MEMORY[0x24266F8F8](v48, v46);
    v51 = v50;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v49, v51, &v125);
    v124[3] = v52;
    sub_23F435C2C();
    swift_bridgeObjectRelease();
    sub_23F384A80();
    sub_23F4AC9CC(&dword_23F35A000, v53, v54, "Search AppEntity: %s");
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F384A80();

  v43(v44, v45);
  v55 = *(_QWORD *)(v21 + 16);
  if (v55)
  {
    v56 = v0[30];
    v57 = v0[23];
    v115 = v0[20];
    sub_23F4AC9F4();
    sub_23F37B78C();
    sub_23F383EB8();
    v59 = v21 + v58;
    v114 = *(_QWORD *)(v56 + 72);
    v117 = v56;
    v112 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
    v110 = *MEMORY[0x24BEB9CF8];
    v108 = *MEMORY[0x24BEB99E0];
    v60 = v125;
    do
    {
      v122 = v55;
      v61 = v0[31];
      v62 = v0[29];
      v63 = (uint64_t *)v0[26];
      v65 = (_QWORD *)v0[21];
      v64 = v0[22];
      v66 = v0[19];
      v112(v61, v59, v62);
      sub_23F61B7AC();
      v118 = swift_allocBox();
      v67 = v57;
      v68 = (_QWORD *)swift_allocObject();
      v68[2] = sub_23F6171EC();
      v68[3] = v69;
      v68[4] = sub_23F6171E0();
      v68[5] = v70;
      *v65 = v68;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v115 + 104))(v65, v110, v66);
      sub_23F6171D4();
      sub_23F61BFEC();
      v57 = v67;
      sub_23F61B794();
      *v63 = v118;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v67 + 104))(v63, v108, v64);
      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v61, v62);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F4ACA18();
        sub_23F37B78C();
        v60 = v125;
      }
      v71 = *(_QWORD *)(v60 + 16);
      if (v71 >= *(_QWORD *)(v60 + 24) >> 1)
      {
        sub_23F37B78C();
        v60 = v125;
      }
      v0 = v124;
      *(_QWORD *)(v60 + 16) = v71 + 1;
      sub_23F383EB8();
      (*(void (**)(unint64_t))(v57 + 32))(v60 + v72 + *(_QWORD *)(v57 + 72) * v71);
      v125 = v60;
      v59 += v114;
      v55 = v122 - 1;
    }
    while (v122 != 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v60 = MEMORY[0x24BEE4AF8];
  }
  v73 = *(_QWORD *)(v60 + 16);
  if (v73)
  {
    v74 = v0[23];
    v113 = v0[14];
    v111 = v0[11];
    sub_23F4AC9F4();
    sub_23F37BDF4();
    sub_23F383EB8();
    v76 = v60 + v75;
    v109 = *(_QWORD *)(v74 + 72);
    v116 = v74;
    v107 = *MEMORY[0x24BE56E48];
    v106 = *MEMORY[0x24BE56E00];
    v77 = v125;
    v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16);
    do
    {
      v123 = v77;
      v80 = v0[24];
      v79 = v0[25];
      v81 = v0[22];
      v119 = v73;
      v82 = v0[15];
      v83 = v0[12];
      v84 = v0[13];
      v85 = v0[10];
      v78(v79, v76, v81);
      v78(v80, v79, v81);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v113 + 104))(v82, v107, v84);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v111 + 104))(v83, v106, v85);
      sub_23F617CC0();
      v77 = v123;
      sub_23F61B3D4();
      (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v79, v81);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F4ACA18();
        sub_23F37BDF4();
        v77 = v125;
      }
      v86 = *(_QWORD *)(v77 + 16);
      v0 = v124;
      if (v86 >= *(_QWORD *)(v77 + 24) >> 1)
      {
        sub_23F37BDF4();
        v77 = v125;
      }
      *(_QWORD *)(v77 + 16) = v86 + 1;
      sub_23F383EB8();
      (*(void (**)(unint64_t))(v88 + 32))(v77 + v87 + *(_QWORD *)(v88 + 72) * v86);
      v125 = v77;
      v76 += v109;
      v73 = v119 - 1;
    }
    while (v119 != 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v77 = MEMORY[0x24BEE4AF8];
  }
  v89 = (void *)v0[40];
  sub_23F3E0278();
  sub_23F3E0254();
  sub_23F619E8C();
  v90 = sub_23F3B1A04();
  v91 = sub_23F3B1E8C(v90);
  v92 = (void (*)(uint64_t, uint64_t))v0[44];
  v93 = (void *)v0[45];
  v94 = v0[40];
  v95 = v0[38];
  if (v91)
  {
    v96 = v0[16];
    v97 = (_DWORD *)sub_23F4AC9BC();
    v125 = sub_23F366668();
    *v97 = 136315138;
    v98 = sub_23F617BA0();
    v99 = MEMORY[0x24266F8F8](v98, v96);
    v101 = v100;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v99, v101, &v125);
    v124[2] = v102;
    sub_23F435C2C();
    swift_bridgeObjectRelease();
    sub_23F384A80();
    sub_23F4AC9CC(&dword_23F35A000, v103, v104, "Found candidates for Omnisearch: %s");
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F384A80();

  v92(v94, v95);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(uint64_t))v0[1])(v77);
}

uint64_t sub_23F4AC6A4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 360);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_23F4AC7E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BOOL8 v6;
  uint64_t v8;

  v2 = sub_23F61B9EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x24BEB9CF8];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t sub_23F4AC894()
{
  uint64_t v0;

  v0 = sub_23F61BBA8();
  sub_23F362B6C(v0);
  return swift_deallocClassInstance();
}

uint64_t sub_23F4AC8D4()
{
  return type metadata accessor for OmniSearchCandidateGenerator();
}

uint64_t type metadata accessor for OmniSearchCandidateGenerator()
{
  uint64_t result;

  result = qword_256E75D38;
  if (!qword_256E75D38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F4AC914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F426140;
  return sub_23F4AB784(a1, a2, a3);
}

BOOL sub_23F4AC978(uint64_t a1)
{
  return sub_23F4AC7E8(a1);
}

uint64_t sub_23F4AC990()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F4AC9BC()
{
  return swift_slowAlloc();
}

void sub_23F4AC9CC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t sub_23F4AC9E0()
{
  return sub_23F61C790();
}

uint64_t sub_23F4AC9F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 80) = v0;
  return 0;
}

void sub_23F4ACA0C()
{
  sub_23F377AD8();
}

uint64_t sub_23F4ACA18()
{
  return 0;
}

_QWORD *sub_23F4ACA2C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int EnumCaseMultiPayload;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  void (*v81)(uint64_t, uint64_t, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 24) = a2[3];
    v8 = a3[7];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23F618974();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_23F617BA0();
    sub_23F617BA0();
    v12(v9, v10, v11);
    v13 = a3[8];
    v14 = a3[9];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (char *)v4 + v14;
    v19 = (char *)a2 + v14;
    v20 = (int *)type metadata accessor for ResponseGenerationOverrides_ContextPredicate(0);
    sub_23F617BA0();
    if (sub_23F36195C((uint64_t)v19, 1, (uint64_t)v20))
    {
      v21 = sub_23F35D2E8(&qword_256E75DE8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v12((uint64_t)v18, (uint64_t)v19, v11);
      v23 = v20[5];
      v24 = &v18[v23];
      v81 = v12;
      v25 = &v19[v23];
      v26 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
      if (sub_23F36195C((uint64_t)v25, 1, v26))
      {
        v27 = sub_23F35D2E8(&qword_256E75DE0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        v12 = v81;
      }
      else
      {
        *(_QWORD *)v24 = *(_QWORD *)v25;
        v24[8] = v25[8];
        v28 = *((_QWORD *)v25 + 3);
        *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
        *((_QWORD *)v24 + 3) = v28;
        v29 = *(int *)(v26 + 24);
        v78 = &v24[v29];
        v30 = &v25[v29];
        sub_23F617BA0();
        v31 = v30;
        v12 = v81;
        v81((uint64_t)v78, (uint64_t)v31, v11);
        sub_23F36196C((uint64_t)v24, 0, 1, v26);
      }
      v32 = v20[6];
      v33 = &v18[v32];
      v34 = &v19[v32];
      v35 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v35;
      v36 = v20[7];
      v37 = &v18[v36];
      v38 = &v19[v36];
      v39 = *((_QWORD *)v38 + 1);
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v39;
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F36196C((uint64_t)v18, 0, 1, (uint64_t)v20);
    }
    v40 = a3[10];
    v41 = (_QWORD *)((char *)v4 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog(0);
    if (sub_23F36195C((uint64_t)v42, 1, v43))
    {
      v44 = sub_23F35D2E8(qword_256E75DF8);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
LABEL_21:
      v66 = a3[11];
      v67 = a3[12];
      v68 = (_QWORD *)((char *)v4 + v66);
      v69 = (uint64_t *)((char *)a2 + v66);
      v70 = v69[1];
      *v68 = *v69;
      v68[1] = v70;
      v71 = (_QWORD *)((char *)v4 + v67);
      v72 = (uint64_t *)((char *)a2 + v67);
      v73 = v72[1];
      *v71 = *v72;
      v71[1] = v73;
      sub_23F617BA0();
      sub_23F617BA0();
      return v4;
    }
    v45 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
    if (sub_23F36195C((uint64_t)v42, 1, v45))
    {
      v46 = sub_23F35D2E8(&qword_256E75DF0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
LABEL_20:
      v12((uint64_t)v41 + *(int *)(v43 + 20), (uint64_t)v42 + *(int *)(v43 + 20), v11);
      sub_23F36196C((uint64_t)v41, 0, 1, v43);
      goto LABEL_21;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v62 = v42[1];
      *v41 = *v42;
      v41[1] = v62;
      v63 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
      v77 = (char *)v42 + v63;
      v80 = (char *)v41 + v63;
      sub_23F617BA0();
      v65 = v77;
      v64 = v80;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v48 = v42[1];
        *v41 = *v42;
        v41[1] = v48;
        v49 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
        v50 = v49[5];
        v75 = (char *)v42 + v50;
        v76 = (char *)v41 + v50;
        sub_23F617BA0();
        v12((uint64_t)v76, (uint64_t)v75, v11);
        v51 = v49[6];
        v52 = (_QWORD *)((char *)v41 + v51);
        v53 = (_QWORD *)((char *)v42 + v51);
        v54 = v53[1];
        *v52 = *v53;
        v52[1] = v54;
        v55 = v49[7];
        v56 = (_QWORD *)((char *)v41 + v55);
        v57 = (_QWORD *)((char *)v42 + v55);
        v79 = v57[1];
        *v56 = *v57;
        v56[1] = v79;
        v58 = v49[8];
        v59 = (_QWORD *)((char *)v41 + v58);
        v60 = (_QWORD *)((char *)v42 + v58);
        v61 = v60[1];
        *v59 = *v60;
        v59[1] = v61;
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F617BA0();
LABEL_19:
        swift_storeEnumTagMultiPayload();
        sub_23F36196C((uint64_t)v41, 0, 1, v45);
        goto LABEL_20;
      }
      v64 = v41;
      v65 = v42;
    }
    v12((uint64_t)v64, (uint64_t)v65, v11);
    goto LABEL_19;
  }
  v22 = *a2;
  *v4 = *a2;
  v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ContextPredicate(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E76220);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_StringPredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E76188);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_OverrideDialog(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E760F0);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E76060);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E75FA8);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E75F18);
}

uint64_t sub_23F4ACEF4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = sub_23F618974();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[9];
  v8 = type metadata accessor for ResponseGenerationOverrides_ContextPredicate(0);
  if (!sub_23F36195C(v7, 1, v8))
  {
    v6(v7, v5);
    v9 = v7 + *(int *)(v8 + 20);
    v10 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
    if (!sub_23F36195C(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      v6(v9 + *(int *)(v10 + 24), v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v11 = a1 + a2[10];
  v12 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog(0);
  if (!sub_23F36195C(v11, 1, v12))
  {
    v13 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
    if (!sub_23F36195C(v11, 1, v13))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 2:
          swift_bridgeObjectRelease();
          v15 = v11
              + *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
          goto LABEL_12;
        case 1:
          swift_bridgeObjectRelease();
          v16 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
          v6(v11 + *(int *)(v16 + 20), v5);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 0:
          v15 = v11;
LABEL_12:
          v6(v15, v5);
          break;
      }
    }
    v6(v11 + *(int *)(v12 + 20), v5);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4AD11C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int EnumCaseMultiPayload;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F618974();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_23F617BA0();
  sub_23F617BA0();
  v11(v8, v9, v10);
  v12 = a3[8];
  v13 = a3[9];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (char *)(a1 + v13);
  v18 = (char *)(a2 + v13);
  v19 = (int *)type metadata accessor for ResponseGenerationOverrides_ContextPredicate(0);
  sub_23F617BA0();
  if (sub_23F36195C((uint64_t)v18, 1, (uint64_t)v19))
  {
    v20 = sub_23F35D2E8(&qword_256E75DE8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v11((uint64_t)v17, (uint64_t)v18, v10);
    v21 = v19[5];
    v22 = &v17[v21];
    v79 = v11;
    v23 = &v18[v21];
    v24 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
    if (sub_23F36195C((uint64_t)v23, 1, v24))
    {
      v25 = sub_23F35D2E8(&qword_256E75DE0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      v11 = v79;
    }
    else
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      v22[8] = v23[8];
      v26 = *((_QWORD *)v23 + 3);
      *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
      *((_QWORD *)v22 + 3) = v26;
      v27 = *(int *)(v24 + 24);
      v76 = &v22[v27];
      v28 = &v23[v27];
      sub_23F617BA0();
      v29 = v28;
      v11 = v79;
      v79((uint64_t)v76, (uint64_t)v29, v10);
      sub_23F36196C((uint64_t)v22, 0, 1, v24);
    }
    v30 = v19[6];
    v31 = &v17[v30];
    v32 = &v18[v30];
    v33 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = v33;
    v34 = v19[7];
    v35 = &v17[v34];
    v36 = &v18[v34];
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F36196C((uint64_t)v17, 0, 1, (uint64_t)v19);
  }
  v38 = a3[10];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  v41 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog(0);
  if (!sub_23F36195C((uint64_t)v40, 1, v41))
  {
    v43 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
    if (sub_23F36195C((uint64_t)v40, 1, v43))
    {
      v44 = sub_23F35D2E8(&qword_256E75DF0);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
LABEL_18:
      v11((uint64_t)v39 + *(int *)(v41 + 20), (uint64_t)v40 + *(int *)(v41 + 20), v10);
      sub_23F36196C((uint64_t)v39, 0, 1, v41);
      goto LABEL_19;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v60 = v40[1];
      *v39 = *v40;
      v39[1] = v60;
      v61 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
      v75 = (char *)v40 + v61;
      v78 = (char *)v39 + v61;
      sub_23F617BA0();
      v63 = v75;
      v62 = v78;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v46 = v40[1];
        *v39 = *v40;
        v39[1] = v46;
        v47 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
        v48 = v47[5];
        v73 = (char *)v40 + v48;
        v74 = (char *)v39 + v48;
        sub_23F617BA0();
        v11((uint64_t)v74, (uint64_t)v73, v10);
        v49 = v47[6];
        v50 = (_QWORD *)((char *)v39 + v49);
        v51 = (_QWORD *)((char *)v40 + v49);
        v52 = v51[1];
        *v50 = *v51;
        v50[1] = v52;
        v53 = v47[7];
        v54 = (_QWORD *)((char *)v39 + v53);
        v55 = (_QWORD *)((char *)v40 + v53);
        v77 = v55[1];
        *v54 = *v55;
        v54[1] = v77;
        v56 = v47[8];
        v57 = (_QWORD *)((char *)v39 + v56);
        v58 = (_QWORD *)((char *)v40 + v56);
        v59 = v58[1];
        *v57 = *v58;
        v57[1] = v59;
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F617BA0();
LABEL_17:
        swift_storeEnumTagMultiPayload();
        sub_23F36196C((uint64_t)v39, 0, 1, v43);
        goto LABEL_18;
      }
      v62 = v39;
      v63 = v40;
    }
    v11((uint64_t)v62, (uint64_t)v63, v10);
    goto LABEL_17;
  }
  v42 = sub_23F35D2E8(qword_256E75DF8);
  memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
LABEL_19:
  v64 = a3[11];
  v65 = a3[12];
  v66 = (_QWORD *)(a1 + v64);
  v67 = (_QWORD *)(a2 + v64);
  v68 = v67[1];
  *v66 = *v67;
  v66[1] = v68;
  v69 = (_QWORD *)(a1 + v65);
  v70 = (_QWORD *)(a2 + v65);
  v71 = v70[1];
  *v69 = *v70;
  v69[1] = v71;
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F4AD540(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  int v18;
  int v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  int EnumCaseMultiPayload;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  int v81;
  int *v82;
  uint64_t v83;
  char *v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  int v100;
  int *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  char *v131;
  char *v132;
  void (*v133)(char *, char *, uint64_t);
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  void (*v139)(uint64_t, uint64_t, uint64_t);
  void (*v140)(uint64_t, uint64_t, uint64_t);
  uint64_t v141;
  char *v142;
  void (*v143)(uint64_t, uint64_t, uint64_t);
  int *v144;
  int *v145;
  int *v146;
  int *v147;
  int *v148;
  int *v149;
  uint64_t v150;
  void (*v151)(char *, char *, uint64_t);
  void (*v152)(char *, char *, uint64_t);
  void (*v153)(char *, char *, uint64_t);
  void (*v154)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23F618974();
  v150 = *(_QWORD *)(v9 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 24);
  v10(v7, v8, v9);
  v11 = a3[8];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v14 = a3[9];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = (int *)type metadata accessor for ResponseGenerationOverrides_ContextPredicate(0);
  v18 = sub_23F36195C((uint64_t)v15, 1, (uint64_t)v17);
  v19 = sub_23F36195C((uint64_t)v16, 1, (uint64_t)v17);
  if (!v18)
  {
    if (v19)
    {
      sub_23F3663AC((uint64_t)v15, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
      goto LABEL_7;
    }
    v140 = v10;
    v145 = a3;
    v28 = v9;
    v10((uint64_t)v15, (uint64_t)v16, v9);
    v29 = v17[5];
    v30 = &v15[v29];
    v31 = &v16[v29];
    v32 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
    v33 = sub_23F36195C((uint64_t)v30, 1, v32);
    v34 = sub_23F36195C((uint64_t)v31, 1, v32);
    if (v33)
    {
      if (!v34)
      {
        v35 = *(_QWORD *)v31;
        v30[8] = v31[8];
        *(_QWORD *)v30 = v35;
        *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
        *((_QWORD *)v30 + 3) = *((_QWORD *)v31 + 3);
        v36 = *(int *)(v32 + 24);
        v37 = &v30[v36];
        v38 = &v31[v36];
        v133 = *(void (**)(char *, char *, uint64_t))(v150 + 16);
        sub_23F617BA0();
        v133(v37, v38, v28);
        v39 = v32;
        v9 = v28;
        sub_23F36196C((uint64_t)v30, 0, 1, v39);
LABEL_16:
        v10 = v140;
        a3 = v145;
LABEL_17:
        v50 = v17[6];
        v51 = &v15[v50];
        v52 = &v16[v50];
        *(_QWORD *)v51 = *(_QWORD *)v52;
        *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
        sub_23F617BA0();
        swift_bridgeObjectRelease();
        v53 = v17[7];
        v54 = &v15[v53];
        v55 = &v16[v53];
        *(_QWORD *)v54 = *(_QWORD *)v55;
        *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
        sub_23F617BA0();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    else
    {
      if (!v34)
      {
        v97 = *(_QWORD *)v31;
        v30[8] = v31[8];
        *(_QWORD *)v30 = v97;
        *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
        *((_QWORD *)v30 + 3) = *((_QWORD *)v31 + 3);
        sub_23F617BA0();
        swift_bridgeObjectRelease();
        v98 = *(int *)(v32 + 24);
        v99 = &v31[v98];
        v9 = v28;
        v10 = v140;
        v140((uint64_t)&v30[v98], (uint64_t)v99, v28);
        a3 = v145;
        goto LABEL_17;
      }
      sub_23F3663AC((uint64_t)v30, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    }
    v49 = sub_23F35D2E8(&qword_256E75DE0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    v9 = v28;
    goto LABEL_16;
  }
  if (v19)
  {
LABEL_7:
    v27 = sub_23F35D2E8(&qword_256E75DE8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_18;
  }
  v139 = v10;
  v144 = a3;
  v20 = *(void (**)(char *, char *, uint64_t))(v150 + 16);
  v20(v15, v16, v9);
  v21 = v17[5];
  v22 = &v15[v21];
  v23 = &v16[v21];
  v24 = v9;
  v25 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  if (sub_23F36195C((uint64_t)v23, 1, v25))
  {
    v26 = sub_23F35D2E8(&qword_256E75DE0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v40 = *(_QWORD *)v23;
    v22[8] = v23[8];
    *(_QWORD *)v22 = v40;
    *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
    *((_QWORD *)v22 + 3) = *((_QWORD *)v23 + 3);
    v41 = *(int *)(v25 + 24);
    v134 = &v22[v41];
    v42 = &v23[v41];
    sub_23F617BA0();
    v20(v134, v42, v24);
    sub_23F36196C((uint64_t)v22, 0, 1, v25);
  }
  v9 = v24;
  v10 = v139;
  a3 = v144;
  v43 = v17[6];
  v44 = &v15[v43];
  v45 = &v16[v43];
  *(_QWORD *)v44 = *(_QWORD *)v45;
  *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
  v46 = v17[7];
  v47 = &v15[v46];
  v48 = &v16[v46];
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F36196C((uint64_t)v15, 0, 1, (uint64_t)v17);
LABEL_18:
  v56 = a3[10];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (_QWORD *)(a2 + v56);
  v59 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog(0);
  v60 = sub_23F36195C((uint64_t)v57, 1, v59);
  v61 = sub_23F36195C((uint64_t)v58, 1, v59);
  if (!v60)
  {
    if (v61)
    {
      sub_23F3663AC((uint64_t)v57, type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
      goto LABEL_24;
    }
    v65 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
    v66 = sub_23F36195C((uint64_t)v57, 1, v65);
    v67 = sub_23F36195C((uint64_t)v58, 1, v65);
    if (v66)
    {
      if (!v67)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *v57 = *v58;
          v57[1] = v58[1];
          v115 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
          v149 = a3;
          v116 = v9;
          v117 = (char *)v57 + v115;
          v138 = (char *)v58 + v115;
          v153 = *(void (**)(char *, char *, uint64_t))(v150 + 16);
          sub_23F617BA0();
          v118 = v117;
          v9 = v116;
          a3 = v149;
          v153(v118, v138, v9);
        }
        else if (EnumCaseMultiPayload == 1)
        {
          *v57 = *v58;
          v57[1] = v58[1];
          v146 = a3;
          v69 = v9;
          v70 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
          v71 = v70[5];
          v131 = (char *)v58 + v71;
          v135 = (char *)v57 + v71;
          v151 = *(void (**)(char *, char *, uint64_t))(v150 + 16);
          sub_23F617BA0();
          v151(v135, v131, v69);
          v72 = v70[6];
          v73 = (_QWORD *)((char *)v57 + v72);
          v74 = (_QWORD *)((char *)v58 + v72);
          *v73 = *v74;
          v73[1] = v74[1];
          v75 = v70[7];
          v76 = (_QWORD *)((char *)v57 + v75);
          v77 = (_QWORD *)((char *)v58 + v75);
          *v76 = *v77;
          v76[1] = v77[1];
          v78 = v70[8];
          v79 = (_QWORD *)((char *)v57 + v78);
          v80 = (_QWORD *)((char *)v58 + v78);
          *v79 = *v80;
          v79[1] = v80[1];
          sub_23F617BA0();
          sub_23F617BA0();
          v9 = v69;
          a3 = v146;
          sub_23F617BA0();
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v150 + 16))(v57, v58, v9);
        }
        swift_storeEnumTagMultiPayload();
        sub_23F36196C((uint64_t)v57, 0, 1, v65);
        v10((uint64_t)v57 + *(int *)(v59 + 20), (uint64_t)v58 + *(int *)(v59 + 20), v9);
        goto LABEL_53;
      }
    }
    else
    {
      if (!v67)
      {
        if (a1 != a2)
        {
          v143 = v10;
          v148 = a3;
          sub_23F3663AC((uint64_t)v57, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
          v100 = swift_getEnumCaseMultiPayload();
          if (v100 == 2)
          {
            *v57 = *v58;
            v57[1] = v58[1];
            v119 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
            v120 = (char *)v57 + v119;
            v121 = v9;
            v122 = (char *)v58 + v119;
            v154 = *(void (**)(char *, char *, uint64_t))(v150 + 16);
            sub_23F617BA0();
            v123 = v122;
            v9 = v121;
            v154(v120, v123, v121);
          }
          else if (v100 == 1)
          {
            *v57 = *v58;
            v57[1] = v58[1];
            v101 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
            v102 = v101[5];
            v103 = v9;
            v104 = (char *)v57 + v102;
            v137 = (char *)v58 + v102;
            v152 = *(void (**)(char *, char *, uint64_t))(v150 + 16);
            sub_23F617BA0();
            v105 = v104;
            v9 = v103;
            v152(v105, v137, v103);
            v106 = v101[6];
            v107 = (_QWORD *)((char *)v57 + v106);
            v108 = (_QWORD *)((char *)v58 + v106);
            *v107 = *v108;
            v107[1] = v108[1];
            v109 = v101[7];
            v110 = (_QWORD *)((char *)v57 + v109);
            v111 = (_QWORD *)((char *)v58 + v109);
            *v110 = *v111;
            v110[1] = v111[1];
            v112 = v101[8];
            v113 = (_QWORD *)((char *)v57 + v112);
            v114 = (_QWORD *)((char *)v58 + v112);
            *v113 = *v114;
            v113[1] = v114[1];
            sub_23F617BA0();
            sub_23F617BA0();
            sub_23F617BA0();
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v150 + 16))(v57, v58, v9);
          }
          swift_storeEnumTagMultiPayload();
          v10 = v143;
          a3 = v148;
        }
        goto LABEL_52;
      }
      sub_23F3663AC((uint64_t)v57, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    }
    v95 = sub_23F35D2E8(&qword_256E75DF0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
LABEL_52:
    v10((uint64_t)v57 + *(int *)(v59 + 20), (uint64_t)v58 + *(int *)(v59 + 20), v9);
    goto LABEL_53;
  }
  if (v61)
  {
LABEL_24:
    v64 = sub_23F35D2E8(qword_256E75DF8);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_53;
  }
  v62 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  if (sub_23F36195C((uint64_t)v58, 1, v62))
  {
    v63 = sub_23F35D2E8(&qword_256E75DF0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v150 + 16))((char *)v57 + *(int *)(v59 + 20), (char *)v58 + *(int *)(v59 + 20), v9);
  }
  else
  {
    v81 = swift_getEnumCaseMultiPayload();
    if (v81 == 2)
    {
      *v57 = *v58;
      v57[1] = v58[1];
      v96 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
      v136 = (char *)v58 + v96;
      v142 = (char *)v57 + v96;
      v85 = *(void (**)(char *, char *, uint64_t))(v150 + 16);
      sub_23F617BA0();
      v85(v142, v136, v9);
    }
    else if (v81 == 1)
    {
      *v57 = *v58;
      v57[1] = v58[1];
      v141 = v9;
      v147 = a3;
      v82 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
      v83 = v82[5];
      v84 = (char *)v57 + v83;
      v132 = (char *)v58 + v83;
      v85 = *(void (**)(char *, char *, uint64_t))(v150 + 16);
      sub_23F617BA0();
      v85(v84, v132, v141);
      v86 = v82[6];
      v87 = (_QWORD *)((char *)v57 + v86);
      v88 = (_QWORD *)((char *)v58 + v86);
      *v87 = *v88;
      v87[1] = v88[1];
      v89 = v82[7];
      v90 = (_QWORD *)((char *)v57 + v89);
      v91 = (_QWORD *)((char *)v58 + v89);
      *v90 = *v91;
      v90[1] = v91[1];
      v92 = v82[8];
      v93 = (_QWORD *)((char *)v57 + v92);
      v94 = (_QWORD *)((char *)v58 + v92);
      *v93 = *v94;
      v93[1] = v94[1];
      sub_23F617BA0();
      sub_23F617BA0();
      v9 = v141;
      a3 = v147;
      sub_23F617BA0();
    }
    else
    {
      v85 = *(void (**)(char *, char *, uint64_t))(v150 + 16);
      v85((char *)v57, (char *)v58, v9);
    }
    swift_storeEnumTagMultiPayload();
    sub_23F36196C((uint64_t)v57, 0, 1, v62);
    v85((char *)v57 + *(int *)(v59 + 20), (char *)v58 + *(int *)(v59 + 20), v9);
  }
  sub_23F36196C((uint64_t)v57, 0, 1, v59);
LABEL_53:
  v124 = a3[11];
  v125 = (_QWORD *)(a1 + v124);
  v126 = (_QWORD *)(a2 + v124);
  *v125 = *v126;
  v125[1] = v126[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v127 = a3[12];
  v128 = (_QWORD *)(a1 + v127);
  v129 = (_QWORD *)(a2 + v127);
  *v128 = *v129;
  v128[1] = v129[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F4ADFF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  void (*v29)(char *, char *, uint64_t);
  int *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23F618974();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = (int *)type metadata accessor for ResponseGenerationOverrides_ContextPredicate(0);
  if (sub_23F36195C((uint64_t)v13, 1, (uint64_t)v14))
  {
    v15 = sub_23F35D2E8(&qword_256E75DE8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v10((uint64_t)v12, (uint64_t)v13, v9);
    v16 = v14[5];
    v17 = &v12[v16];
    v18 = &v13[v16];
    v38 = (void (*)(char *, char *, uint64_t))v10;
    v19 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
    if (sub_23F36195C((uint64_t)v18, 1, v19))
    {
      v20 = sub_23F35D2E8(&qword_256E75DE0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      v17[8] = v18[8];
      *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
      v38(&v17[*(int *)(v19 + 24)], &v18[*(int *)(v19 + 24)], v9);
      sub_23F36196C((uint64_t)v17, 0, 1, v19);
    }
    *(_OWORD *)&v12[v14[6]] = *(_OWORD *)&v13[v14[6]];
    *(_OWORD *)&v12[v14[7]] = *(_OWORD *)&v13[v14[7]];
    sub_23F36196C((uint64_t)v12, 0, 1, (uint64_t)v14);
    v10 = (void (*)(uint64_t, uint64_t, uint64_t))v38;
  }
  v21 = a3[10];
  v22 = (_OWORD *)(a1 + v21);
  v23 = (_OWORD *)(a2 + v21);
  v24 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog(0);
  if (!sub_23F36195C((uint64_t)v23, 1, v24))
  {
    v26 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
    if (sub_23F36195C((uint64_t)v23, 1, v26))
    {
      v27 = sub_23F35D2E8(&qword_256E75DF0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_18:
      v10((uint64_t)v22 + *(int *)(v24 + 20), (uint64_t)v23 + *(int *)(v24 + 20), v9);
      sub_23F36196C((uint64_t)v22, 0, 1, v24);
      goto LABEL_19;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *v22 = *v23;
      v32 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
      v33 = (char *)v22 + v32;
      v34 = (char *)v23 + v32;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *v22 = *v23;
        v37 = v9;
        v29 = (void (*)(char *, char *, uint64_t))v10;
        v30 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
        v29((char *)v22 + v30[5], (char *)v23 + v30[5], v37);
        *(_OWORD *)((char *)v22 + v30[6]) = *(_OWORD *)((char *)v23 + v30[6]);
        *(_OWORD *)((char *)v22 + v30[7]) = *(_OWORD *)((char *)v23 + v30[7]);
        v31 = v30[8];
        v10 = (void (*)(uint64_t, uint64_t, uint64_t))v29;
        v9 = v37;
        *(_OWORD *)((char *)v22 + v31) = *(_OWORD *)((char *)v23 + v31);
LABEL_17:
        swift_storeEnumTagMultiPayload();
        sub_23F36196C((uint64_t)v22, 0, 1, v26);
        goto LABEL_18;
      }
      v33 = (char *)v22;
      v34 = (char *)v23;
    }
    v10((uint64_t)v33, (uint64_t)v34, v9);
    goto LABEL_17;
  }
  v25 = sub_23F35D2E8(qword_256E75DF8);
  memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_19:
  v35 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v35) = *(_OWORD *)(a2 + v35);
  return a1;
}

uint64_t sub_23F4AE360(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  int v21;
  int v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  int EnumCaseMultiPayload;
  int *v64;
  int v65;
  int *v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  int v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v88)(uint64_t, uint64_t, uint64_t);
  void (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F618974();
  v92 = *(_QWORD *)(v10 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 40);
  v11(v8, v9, v10);
  v12 = a3[8];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[9];
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = (int *)type metadata accessor for ResponseGenerationOverrides_ContextPredicate(0);
  v21 = sub_23F36195C((uint64_t)v18, 1, (uint64_t)v20);
  v22 = sub_23F36195C((uint64_t)v19, 1, (uint64_t)v20);
  if (!v21)
  {
    if (v22)
    {
      sub_23F3663AC((uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
      goto LABEL_7;
    }
    v89 = v11;
    v91 = v10;
    v11((uint64_t)v18, (uint64_t)v19, v10);
    v30 = v20[5];
    v31 = &v18[v30];
    v32 = &v19[v30];
    v33 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
    v34 = sub_23F36195C((uint64_t)v31, 1, v33);
    v35 = sub_23F36195C((uint64_t)v32, 1, v33);
    if (v34)
    {
      if (!v35)
      {
        *(_QWORD *)v31 = *(_QWORD *)v32;
        v31[8] = v32[8];
        *((_OWORD *)v31 + 1) = *((_OWORD *)v32 + 1);
        v36 = *(int *)(v33 + 24);
        v37 = &v32[v36];
        v10 = v91;
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(&v31[v36], v37, v91);
        sub_23F36196C((uint64_t)v31, 0, 1, v33);
LABEL_16:
        v11 = v89;
LABEL_17:
        v41 = v20[6];
        v42 = &v18[v41];
        v43 = &v19[v41];
        v45 = *(_QWORD *)v43;
        v44 = *((_QWORD *)v43 + 1);
        *(_QWORD *)v42 = v45;
        *((_QWORD *)v42 + 1) = v44;
        swift_bridgeObjectRelease();
        v46 = v20[7];
        v47 = &v18[v46];
        v48 = &v19[v46];
        v50 = *(_QWORD *)v48;
        v49 = *((_QWORD *)v48 + 1);
        *(_QWORD *)v47 = v50;
        *((_QWORD *)v47 + 1) = v49;
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    else
    {
      if (!v35)
      {
        *(_QWORD *)v31 = *(_QWORD *)v32;
        v31[8] = v32[8];
        v70 = *((_QWORD *)v32 + 3);
        *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
        *((_QWORD *)v31 + 3) = v70;
        swift_bridgeObjectRelease();
        v71 = *(int *)(v33 + 24);
        v72 = &v32[v71];
        v11 = v89;
        v10 = v91;
        v89((uint64_t)&v31[v71], (uint64_t)v72, v91);
        goto LABEL_17;
      }
      sub_23F3663AC((uint64_t)v31, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    }
    v40 = sub_23F35D2E8(&qword_256E75DE0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    v10 = v91;
    goto LABEL_16;
  }
  if (v22)
  {
LABEL_7:
    v29 = sub_23F35D2E8(&qword_256E75DE8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_18;
  }
  v88 = v11;
  v23 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
  v23(v18, v19, v10);
  v24 = v20[5];
  v25 = &v18[v24];
  v90 = v10;
  v26 = &v19[v24];
  v27 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  if (sub_23F36195C((uint64_t)v26, 1, v27))
  {
    v28 = sub_23F35D2E8(&qword_256E75DE0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    v10 = v90;
  }
  else
  {
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v25[8] = v26[8];
    *((_OWORD *)v25 + 1) = *((_OWORD *)v26 + 1);
    v38 = *(int *)(v27 + 24);
    v39 = &v26[v38];
    v10 = v90;
    v23(&v25[v38], v39, v90);
    sub_23F36196C((uint64_t)v25, 0, 1, v27);
  }
  v11 = v88;
  *(_OWORD *)&v18[v20[6]] = *(_OWORD *)&v19[v20[6]];
  *(_OWORD *)&v18[v20[7]] = *(_OWORD *)&v19[v20[7]];
  sub_23F36196C((uint64_t)v18, 0, 1, (uint64_t)v20);
LABEL_18:
  v51 = a3[10];
  v52 = (char *)(a1 + v51);
  v53 = (char *)(a2 + v51);
  v54 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog(0);
  v55 = sub_23F36195C((uint64_t)v52, 1, v54);
  v56 = sub_23F36195C((uint64_t)v53, 1, v54);
  if (!v55)
  {
    if (v56)
    {
      sub_23F3663AC((uint64_t)v52, type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
      goto LABEL_24;
    }
    v60 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
    v61 = sub_23F36195C((uint64_t)v52, 1, v60);
    v62 = sub_23F36195C((uint64_t)v53, 1, v60);
    if (v61)
    {
      if (!v62)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *(_OWORD *)v52 = *(_OWORD *)v53;
          v75 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
          (*(void (**)(char *, char *, uint64_t))(v92 + 32))(&v52[v75], &v53[v75], v10);
        }
        else if (EnumCaseMultiPayload == 1)
        {
          *(_OWORD *)v52 = *(_OWORD *)v53;
          v64 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
          (*(void (**)(char *, char *, uint64_t))(v92 + 32))(&v52[v64[5]], &v53[v64[5]], v10);
          *(_OWORD *)&v52[v64[6]] = *(_OWORD *)&v53[v64[6]];
          *(_OWORD *)&v52[v64[7]] = *(_OWORD *)&v53[v64[7]];
          *(_OWORD *)&v52[v64[8]] = *(_OWORD *)&v53[v64[8]];
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v52, v53, v10);
        }
        swift_storeEnumTagMultiPayload();
        sub_23F36196C((uint64_t)v52, 0, 1, v60);
        v11((uint64_t)&v52[*(int *)(v54 + 20)], (uint64_t)&v53[*(int *)(v54 + 20)], v10);
        goto LABEL_52;
      }
    }
    else
    {
      if (!v62)
      {
        if (a1 != a2)
        {
          sub_23F3663AC((uint64_t)v52, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
          v73 = swift_getEnumCaseMultiPayload();
          if (v73 == 2)
          {
            *(_OWORD *)v52 = *(_OWORD *)v53;
            v76 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0);
            (*(void (**)(char *, char *, uint64_t))(v92 + 32))(&v52[*(int *)(v76 + 20)], &v53[*(int *)(v76 + 20)], v10);
          }
          else if (v73 == 1)
          {
            *(_OWORD *)v52 = *(_OWORD *)v53;
            v74 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
            (*(void (**)(char *, char *, uint64_t))(v92 + 32))(&v52[v74[5]], &v53[v74[5]], v10);
            *(_OWORD *)&v52[v74[6]] = *(_OWORD *)&v53[v74[6]];
            *(_OWORD *)&v52[v74[7]] = *(_OWORD *)&v53[v74[7]];
            *(_OWORD *)&v52[v74[8]] = *(_OWORD *)&v53[v74[8]];
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v52, v53, v10);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_51;
      }
      sub_23F3663AC((uint64_t)v52, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    }
    v68 = sub_23F35D2E8(&qword_256E75DF0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
LABEL_51:
    v11((uint64_t)&v52[*(int *)(v54 + 20)], (uint64_t)&v53[*(int *)(v54 + 20)], v10);
    goto LABEL_52;
  }
  if (v56)
  {
LABEL_24:
    v59 = sub_23F35D2E8(qword_256E75DF8);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_52;
  }
  v57 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  if (sub_23F36195C((uint64_t)v53, 1, v57))
  {
    v58 = sub_23F35D2E8(&qword_256E75DF0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(&v52[*(int *)(v54 + 20)], &v53[*(int *)(v54 + 20)], v10);
  }
  else
  {
    v65 = swift_getEnumCaseMultiPayload();
    if (v65 == 2)
    {
      *(_OWORD *)v52 = *(_OWORD *)v53;
      v69 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
      v67 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
      v67(&v52[v69], &v53[v69], v10);
    }
    else if (v65 == 1)
    {
      *(_OWORD *)v52 = *(_OWORD *)v53;
      v66 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
      v67 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
      v67(&v52[v66[5]], &v53[v66[5]], v10);
      *(_OWORD *)&v52[v66[6]] = *(_OWORD *)&v53[v66[6]];
      *(_OWORD *)&v52[v66[7]] = *(_OWORD *)&v53[v66[7]];
      *(_OWORD *)&v52[v66[8]] = *(_OWORD *)&v53[v66[8]];
    }
    else
    {
      v67 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
      v67(v52, v53, v10);
    }
    swift_storeEnumTagMultiPayload();
    sub_23F36196C((uint64_t)v52, 0, 1, v57);
    v67(&v52[*(int *)(v54 + 20)], &v53[*(int *)(v54 + 20)], v10);
  }
  sub_23F36196C((uint64_t)v52, 0, 1, v54);
LABEL_52:
  v77 = a3[11];
  v78 = (_QWORD *)(a1 + v77);
  v79 = (uint64_t *)(a2 + v77);
  v81 = *v79;
  v80 = v79[1];
  *v78 = v81;
  v78[1] = v80;
  swift_bridgeObjectRelease();
  v82 = a3[12];
  v83 = (_QWORD *)(a1 + v82);
  v84 = (uint64_t *)(a2 + v82);
  v86 = *v84;
  v85 = v84[1];
  *v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F4AEB60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4AEB6C()
{
  uint64_t v0;
  int *v1;
  int *v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3D9C90();
  if (v3)
  {
    sub_23F3F9B80(*(_QWORD *)(v0 + 8));
    sub_23F362B80();
  }
  else
  {
    v2 = v1;
    sub_23F3C8624();
    sub_23F3F9C58();
    if (v3)
    {
      v4 = v2[7];
    }
    else
    {
      sub_23F35D2E8(&qword_256E75DE8);
      sub_23F3F9C58();
      if (v5)
      {
        v4 = v2[9];
      }
      else
      {
        sub_23F35D2E8(qword_256E75DF8);
        v4 = v2[10];
      }
    }
    v6 = sub_23F4DCE68(v4);
    sub_23F3B1A44(v6, v7, v8);
  }
}

uint64_t sub_23F4AEBF4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4AEC00()
{
  int v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F3B218C();
  if (v2)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    sub_23F362B80();
  }
  else
  {
    sub_23F3C8624();
    sub_23F3F9C68();
    if (!v2)
    {
      sub_23F35D2E8(&qword_256E75DE8);
      sub_23F3F9C68();
      if (!v3)
        sub_23F35D2E8(qword_256E75DF8);
    }
    sub_23F4DC5B8();
    sub_23F38370C(v4, v5, v6, v7);
  }
}

uint64_t type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E75E58);
}

void sub_23F4AECA0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F618974();
  if (v0 <= 0x3F)
  {
    sub_23F4AED90(319, &qword_256E75E68, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
    if (v1 <= 0x3F)
    {
      sub_23F4AED90(319, qword_256E75E70, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_23F4AED90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23F61C730();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_23F4AEDF4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4AEE04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4AEE14()
{
  sub_23F4CF920();
}

uint64_t *sub_23F4AEE20(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F618974();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_23F617BA0();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (uint64_t *)((char *)v4 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (uint64_t *)((char *)v4 + v14);
    v19 = (uint64_t *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[8];
    v22 = (uint64_t *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
  }
  return v4;
}

uint64_t sub_23F4AEF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23F618974();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23F4AEF98(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F618974();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_23F617BA0();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

_QWORD *sub_23F4AF064(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_23F4AF16C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_23F4AF1F8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F4AF2C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4AF2D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4AF2E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F618974();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23F4AF360(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v27 = a2[1];
      *a1 = *a2;
      a1[1] = v27;
      v28 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_23F618974();
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
      sub_23F617BA0();
      v32(v29, v30, v31);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23F618974();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      sub_23F617BA0();
      v13(v10, v11, v12);
      v14 = v8[6];
      v15 = (uint64_t *)((char *)a1 + v14);
      v16 = (uint64_t *)((char *)a2 + v14);
      v17 = v16[1];
      *v15 = *v16;
      v15[1] = v17;
      v18 = v8[7];
      v19 = (uint64_t *)((char *)a1 + v18);
      v20 = (uint64_t *)((char *)a2 + v18);
      v21 = v20[1];
      *v19 = *v20;
      v19[1] = v21;
      v22 = v8[8];
      v23 = (uint64_t *)((char *)a1 + v22);
      v24 = (uint64_t *)((char *)a2 + v22);
      v25 = v24[1];
      *v23 = *v24;
      v23[1] = v25;
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F617BA0();
    }
    else
    {
      v33 = sub_23F618974();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a1, a2, v33);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F4AF524(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
      goto LABEL_6;
    case 1:
      swift_bridgeObjectRelease();
      v4 = a1 + *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0) + 20);
      v5 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 0:
LABEL_6:
      v3 = sub_23F618974();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *sub_23F4AF614(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v24 = a2[1];
    *a1 = *a2;
    a1[1] = v24;
    v25 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = sub_23F618974();
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    sub_23F617BA0();
    v29(v26, v27, v28);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
    v7 = v6[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23F618974();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    sub_23F617BA0();
    v11(v8, v9, v10);
    v12 = v6[6];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v6[7];
    v17 = (_QWORD *)((char *)a1 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v6[8];
    v21 = (_QWORD *)((char *)a1 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
  }
  else
  {
    v30 = sub_23F618974();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(a1, a2, v30);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23F4AF7AC(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;

  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v20 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_23F618974();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      sub_23F617BA0();
      v24(v21, v22, v23);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v5 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
      v6 = v5[5];
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_23F618974();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      sub_23F617BA0();
      v10(v7, v8, v9);
      v11 = v5[6];
      v12 = (_QWORD *)((char *)a1 + v11);
      v13 = (_QWORD *)((char *)a2 + v11);
      *v12 = *v13;
      v12[1] = v13[1];
      v14 = v5[7];
      v15 = (_QWORD *)((char *)a1 + v14);
      v16 = (_QWORD *)((char *)a2 + v14);
      *v15 = *v16;
      v15[1] = v16[1];
      v17 = v5[8];
      v18 = (_QWORD *)((char *)a1 + v17);
      v19 = (_QWORD *)((char *)a2 + v17);
      *v18 = *v19;
      v18[1] = v19[1];
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F617BA0();
    }
    else
    {
      v25 = sub_23F618974();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23F4AF984(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v10 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_23F618974();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v5 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
    v6 = v5[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23F618974();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    *(_OWORD *)((char *)a1 + v5[6]) = *(_OWORD *)((char *)a2 + v5[6]);
    *(_OWORD *)((char *)a1 + v5[7]) = *(_OWORD *)((char *)a2 + v5[7]);
    *(_OWORD *)((char *)a1 + v5[8]) = *(_OWORD *)((char *)a2 + v5[8]);
  }
  else
  {
    v14 = sub_23F618974();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_23F4AFAB4(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v10 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_23F618974();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v5 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
      v6 = v5[5];
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_23F618974();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      *(_OWORD *)((char *)a1 + v5[6]) = *(_OWORD *)((char *)a2 + v5[6]);
      *(_OWORD *)((char *)a1 + v5[7]) = *(_OWORD *)((char *)a2 + v5[7]);
      *(_OWORD *)((char *)a1 + v5[8]) = *(_OWORD *)((char *)a2 + v5[8]);
    }
    else
    {
      v14 = sub_23F618974();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F4AFBFC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23F618974();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_23F4AFC98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
    if (sub_23F36195C((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F35D2E8(&qword_256E75DF0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v30 = a2[1];
        *a1 = *a2;
        a1[1] = v30;
        v31 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
        v32 = (char *)a1 + v31;
        v33 = (char *)a2 + v31;
        v34 = sub_23F618974();
        v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
        sub_23F617BA0();
        v35(v32, v33, v34);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        v12 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
        v13 = v12[5];
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = sub_23F618974();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        sub_23F617BA0();
        v17(v14, v15, v16);
        v18 = v12[6];
        v19 = (uint64_t *)((char *)a1 + v18);
        v20 = (uint64_t *)((char *)a2 + v18);
        v21 = v20[1];
        *v19 = *v20;
        v19[1] = v21;
        v22 = v12[7];
        v23 = (uint64_t *)((char *)a1 + v22);
        v24 = (uint64_t *)((char *)a2 + v22);
        v25 = v24[1];
        *v23 = *v24;
        v23[1] = v25;
        v26 = v12[8];
        v27 = (uint64_t *)((char *)a1 + v26);
        v28 = (uint64_t *)((char *)a2 + v26);
        v29 = v28[1];
        *v27 = *v28;
        v27[1] = v29;
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F617BA0();
      }
      else
      {
        v36 = sub_23F618974();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C((uint64_t)a1, 0, 1, v7);
    }
    v37 = *(int *)(a3 + 20);
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = sub_23F618974();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  }
  return a1;
}

uint64_t sub_23F4AFEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  if (!sub_23F36195C(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        swift_bridgeObjectRelease();
        v7 = a1 + *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
        v8 = sub_23F618974();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        break;
      case 1:
        swift_bridgeObjectRelease();
        v9 = a1 + *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0) + 20);
        v10 = sub_23F618974();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v6 = sub_23F618974();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
        break;
    }
  }
  v11 = a1 + *(int *)(a2 + 20);
  v12 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_QWORD *sub_23F4B0024(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  v6 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F35D2E8(&qword_256E75DF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v28 = a2[1];
      *a1 = *a2;
      a1[1] = v28;
      v29 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = sub_23F618974();
      v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
      sub_23F617BA0();
      v33(v30, v31, v32);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23F618974();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      sub_23F617BA0();
      v15(v12, v13, v14);
      v16 = v10[6];
      v17 = (_QWORD *)((char *)a1 + v16);
      v18 = (_QWORD *)((char *)a2 + v16);
      v19 = v18[1];
      *v17 = *v18;
      v17[1] = v19;
      v20 = v10[7];
      v21 = (_QWORD *)((char *)a1 + v20);
      v22 = (_QWORD *)((char *)a2 + v20);
      v23 = v22[1];
      *v21 = *v22;
      v21[1] = v23;
      v24 = v10[8];
      v25 = (_QWORD *)((char *)a1 + v24);
      v26 = (_QWORD *)((char *)a2 + v24);
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F617BA0();
    }
    else
    {
      v34 = sub_23F618974();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(a1, a2, v34);
    }
    swift_storeEnumTagMultiPayload();
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  v35 = *(int *)(a3 + 20);
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

_QWORD *sub_23F4B0240(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;

  v6 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        v42 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
        v43 = (char *)a1 + v42;
        v44 = (char *)a2 + v42;
        v45 = sub_23F618974();
        v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
        sub_23F617BA0();
        v46(v43, v44, v45);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        v10 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
        v11 = v10[5];
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_23F618974();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        sub_23F617BA0();
        v15(v12, v13, v14);
        v16 = v10[6];
        v17 = (_QWORD *)((char *)a1 + v16);
        v18 = (_QWORD *)((char *)a2 + v16);
        *v17 = *v18;
        v17[1] = v18[1];
        v19 = v10[7];
        v20 = (_QWORD *)((char *)a1 + v19);
        v21 = (_QWORD *)((char *)a2 + v19);
        *v20 = *v21;
        v20[1] = v21[1];
        v22 = v10[8];
        v23 = (_QWORD *)((char *)a1 + v22);
        v24 = (_QWORD *)((char *)a2 + v22);
        *v23 = *v24;
        v23[1] = v24[1];
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F617BA0();
      }
      else
      {
        v47 = sub_23F618974();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(a1, a2, v47);
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C((uint64_t)a1, 0, 1, v6);
      goto LABEL_19;
    }
LABEL_8:
    v25 = sub_23F35D2E8(&qword_256E75DF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_19;
  }
  if (v8)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    v26 = swift_getEnumCaseMultiPayload();
    if (v26 == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v48 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
      v49 = (char *)a1 + v48;
      v50 = (char *)a2 + v48;
      v51 = sub_23F618974();
      v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
      sub_23F617BA0();
      v52(v49, v50, v51);
    }
    else if (v26 == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v27 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
      v28 = v27[5];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_23F618974();
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
      sub_23F617BA0();
      v32(v29, v30, v31);
      v33 = v27[6];
      v34 = (_QWORD *)((char *)a1 + v33);
      v35 = (_QWORD *)((char *)a2 + v33);
      *v34 = *v35;
      v34[1] = v35[1];
      v36 = v27[7];
      v37 = (_QWORD *)((char *)a1 + v36);
      v38 = (_QWORD *)((char *)a2 + v36);
      *v37 = *v38;
      v37[1] = v38[1];
      v39 = v27[8];
      v40 = (_QWORD *)((char *)a1 + v39);
      v41 = (_QWORD *)((char *)a2 + v39);
      *v40 = *v41;
      v40[1] = v41[1];
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F617BA0();
    }
    else
    {
      v53 = sub_23F618974();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(a1, a2, v53);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_19:
  v54 = *(int *)(a3 + 20);
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 24))(v55, v56, v57);
  return a1;
}

_OWORD *sub_23F4B0644(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F35D2E8(&qword_256E75DF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v14 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_23F618974();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v9 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_23F618974();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      *(_OWORD *)((char *)a1 + v9[6]) = *(_OWORD *)((char *)a2 + v9[6]);
      *(_OWORD *)((char *)a1 + v9[7]) = *(_OWORD *)((char *)a2 + v9[7]);
      *(_OWORD *)((char *)a1 + v9[8]) = *(_OWORD *)((char *)a2 + v9[8]);
    }
    else
    {
      v18 = sub_23F618974();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
    }
    swift_storeEnumTagMultiPayload();
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  v19 = *(int *)(a3 + 20);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

_OWORD *sub_23F4B07FC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v6 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *a1 = *a2;
        v22 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
        v23 = (char *)a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = sub_23F618974();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        v10 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
        v11 = v10[5];
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_23F618974();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
        *(_OWORD *)((char *)a1 + v10[6]) = *(_OWORD *)((char *)a2 + v10[6]);
        *(_OWORD *)((char *)a1 + v10[7]) = *(_OWORD *)((char *)a2 + v10[7]);
        *(_OWORD *)((char *)a1 + v10[8]) = *(_OWORD *)((char *)a2 + v10[8]);
      }
      else
      {
        v26 = sub_23F618974();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a1, a2, v26);
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C((uint64_t)a1, 0, 1, v6);
      goto LABEL_19;
    }
LABEL_8:
    v15 = sub_23F35D2E8(&qword_256E75DF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_19;
  }
  if (v8)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    v16 = swift_getEnumCaseMultiPayload();
    if (v16 == 2)
    {
      *a1 = *a2;
      v27 = *(int *)(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0) + 20);
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v30 = sub_23F618974();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    }
    else if (v16 == 1)
    {
      *a1 = *a2;
      v17 = (int *)type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
      v18 = v17[5];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_23F618974();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      *(_OWORD *)((char *)a1 + v17[6]) = *(_OWORD *)((char *)a2 + v17[6]);
      *(_OWORD *)((char *)a1 + v17[7]) = *(_OWORD *)((char *)a2 + v17[7]);
      *(_OWORD *)((char *)a1 + v17[8]) = *(_OWORD *)((char *)a2 + v17[8]);
    }
    else
    {
      v31 = sub_23F618974();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a1, a2, v31);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_19:
  v32 = *(int *)(a3 + 20);
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
  return a1;
}

uint64_t sub_23F4B0B08()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4B0B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F4DB894(a1, a2, a3, &qword_256E75DF0);
}

uint64_t sub_23F4B0B20()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4B0B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F4DB8F8(a1, a2, a3, a4, &qword_256E75DF0);
}

void sub_23F4B0B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4DB95C(a1, a2, a3, qword_256E76100, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
}

_QWORD *sub_23F4B0B4C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v5 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_23F618974();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    sub_23F617BA0();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_23F4B0BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_23F4B0C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23F618974();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  sub_23F617BA0();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_23F4B0CC0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_23F618974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F4B0D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23F618974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_23F4B0DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F618974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F4B0E34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4B0E40()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F3D9C90();
  if (v2)
  {
    sub_23F3F9B80(*(_QWORD *)(v0 + 24));
    sub_23F362B80();
  }
  else
  {
    v3 = v1;
    sub_23F3C8624();
    v4 = sub_23F4DCE68(*(int *)(v3 + 24));
    sub_23F3B1A44(v4, v5, v6);
  }
}

uint64_t sub_23F4B0E88()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4B0E94()
{
  int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F3B218C();
  if (v2)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_23F362B80();
  }
  else
  {
    sub_23F3C8624();
    sub_23F4DC5B8();
    sub_23F38370C(v3, v4, v5, v6);
  }
}

void sub_23F4B0EDC()
{
  sub_23F4CE514();
}

char *sub_23F4B0EE8(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F618974();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
    if (sub_23F36195C((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F35D2E8(&qword_256E75DE0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v10 = *v11;
      v10[8] = *((_BYTE *)v11 + 8);
      v15 = v11[3];
      *((_QWORD *)v10 + 2) = v11[2];
      *((_QWORD *)v10 + 3) = v15;
      v16 = *(int *)(v12 + 24);
      v17 = &v10[v16];
      v18 = (char *)v11 + v16;
      sub_23F617BA0();
      v8(v17, v18, v7);
      sub_23F36196C((uint64_t)v10, 0, 1, v12);
    }
    v19 = a3[6];
    v20 = a3[7];
    v21 = &a1[v19];
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = v22[1];
    *(_QWORD *)v21 = *v22;
    *((_QWORD *)v21 + 1) = v23;
    v24 = &a1[v20];
    v25 = (uint64_t *)((char *)a2 + v20);
    v26 = v25[1];
    *(_QWORD *)v24 = *v25;
    *((_QWORD *)v24 + 1) = v26;
    sub_23F617BA0();
    sub_23F617BA0();
  }
  return a1;
}

uint64_t sub_23F4B104C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23F618974();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  if (!sub_23F36195C(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v5(v6 + *(int *)(v7 + 24), v4);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4B10F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = sub_23F618974();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  if (sub_23F36195C((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E75DE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v9 = *v10;
    *((_BYTE *)v9 + 8) = *((_BYTE *)v10 + 8);
    v13 = v10[3];
    v9[2] = v10[2];
    v9[3] = v13;
    v14 = *(int *)(v11 + 24);
    v15 = (char *)v9 + v14;
    v16 = (char *)v10 + v14;
    sub_23F617BA0();
    v7((uint64_t)v15, (uint64_t)v16, v6);
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
  }
  v17 = a3[6];
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v17);
  v20 = (_QWORD *)(a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (_QWORD *)(a1 + v18);
  v23 = (_QWORD *)(a2 + v18);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F4B1230(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v28;

  v6 = sub_23F618974();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  v13 = sub_23F36195C(v10, 1, v12);
  v14 = sub_23F36195C(v11, 1, v12);
  if (!v13)
  {
    if (!v14)
    {
      v28 = *(_QWORD *)v11;
      *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
      *(_QWORD *)v10 = v28;
      *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
      *(_QWORD *)(v10 + 24) = *(_QWORD *)(v11 + 24);
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      v8(v10 + *(int *)(v12 + 24), v11 + *(int *)(v12 + 24), v6);
      goto LABEL_7;
    }
    sub_23F3663AC(v10, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v20 = sub_23F35D2E8(&qword_256E75DE0);
    memcpy((void *)v10, (const void *)v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v15 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v10 = v15;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(v10 + 24) = *(_QWORD *)(v11 + 24);
  v16 = *(int *)(v12 + 24);
  v17 = v10 + v16;
  v18 = v11 + v16;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  sub_23F617BA0();
  v19(v17, v18, v6);
  sub_23F36196C(v10, 0, 1, v12);
LABEL_7:
  v21 = a3[6];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v24 = a3[7];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_23F4B1410(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23F618974();
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  if (sub_23F36195C((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E75DE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
    v7(&v9[*(int *)(v11 + 24)], &v10[*(int *)(v11 + 24)], v6);
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
  }
  v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  return a1;
}

uint64_t sub_23F4B1518(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v6 = sub_23F618974();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  v13 = sub_23F36195C(v10, 1, v12);
  v14 = sub_23F36195C(v11, 1, v12);
  if (!v13)
  {
    if (!v14)
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
      v27 = *(_QWORD *)(v11 + 24);
      *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
      *(_QWORD *)(v10 + 24) = v27;
      swift_bridgeObjectRelease();
      v8(v10 + *(int *)(v12 + 24), v11 + *(int *)(v12 + 24), v6);
      goto LABEL_7;
    }
    sub_23F3663AC(v10, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_23F35D2E8(&qword_256E75DE0);
    memcpy((void *)v10, (const void *)v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)(v11 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v10 + *(int *)(v12 + 24), v11 + *(int *)(v12 + 24), v6);
  sub_23F36196C(v10, 0, 1, v12);
LABEL_7:
  v16 = a3[6];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[7];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F4B16B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4B16C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;

  sub_23F3C8624();
  sub_23F3F9C58();
  if (v8)
  {
    v6 = sub_23F3F9CD0();
  }
  else
  {
    sub_23F35D2E8(&qword_256E75DE0);
    sub_23F3F9C58();
    if (!v8)
    {
      sub_23F4DC510(a1 + *(int *)(a3 + 24));
      sub_23F362B80();
      return;
    }
    v6 = sub_23F4DCE20();
  }
  sub_23F3B1A44(v6, a2, v7);
}

uint64_t sub_23F4B172C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4B1738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F3C8624();
  sub_23F3F9C68();
  if (v5)
  {
    sub_23F4DCCEC();
  }
  else
  {
    sub_23F35D2E8(&qword_256E75DE0);
    sub_23F3F9C68();
    if (!v5)
    {
      sub_23F4DCF2C(*(int *)(a4 + 24));
      sub_23F362B80();
      return;
    }
    sub_23F4DCE20();
  }
  sub_23F4DC5B8();
  sub_23F38370C(v6, v7, v8, v9);
}

void sub_23F4B17A4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F618974();
  if (v0 <= 0x3F)
  {
    sub_23F4AED90(319, qword_256E76230, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23F4B1844(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F384838();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B17A4();
  v5 = sub_23F4DD210();
  sub_23F4DC2FC(v1 + *(int *)(v5 + 40), v2);
  v6 = sub_23F4DCFCC();
  sub_23F383740(v2, 1, v6);
  if (v7)
  {
    v8 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
    sub_23F3838D8(a1, v9, v10, v8);
    v11 = sub_23F4DC908();
    sub_23F4DCF08(v11, qword_256E75DF8);
  }
  else
  {
    sub_23F36262C(v2, a1, type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
  }
  sub_23F362B80();
}

void sub_23F4B18F4(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides(0);
  sub_23F4DC908();
  sub_23F362928();
}

void sub_23F4B1928(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F618968();
  v2 = a1 + *(int *)(sub_23F4DCFC4() + 20);
  v3 = sub_23F4DCEA0();
  sub_23F3838D8(v2, v4, v5, v3);
  sub_23F4DCDD0();
  sub_23F362B80();
}

void sub_23F4B196C(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE4AF8];
  v2 = (int *)sub_23F4DD210();
  sub_23F4DC908();
  sub_23F4DCDEC(v2[8]);
  v3 = a1 + v2[9];
  v4 = sub_23F4DCFC4();
  sub_23F3838D8(v3, v5, v6, v4);
  v7 = a1 + v2[10];
  v8 = sub_23F4DCFCC();
  sub_23F3838D8(v7, v9, v10, v8);
  sub_23F4DCDEC(v2[11]);
  sub_23F4DCDEC(v2[12]);
  sub_23F362B80();
}

void sub_23F4B19F8()
{
  sub_23F4DD0A8();
}

void sub_23F4B1A04(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void sub_23F4B1A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4B1B8C(a1, a2, a3, (uint64_t (*)(void))sub_23F4B19F8);
}

uint64_t sub_23F4B1A20()
{
  uint64_t v0;

  return nullsub_1(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8));
}

void sub_23F4B1A2C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_23F4B1BB8(a1, a2, a3, (uint64_t (*)(_QWORD))sub_23F4B19F8);
}

void sub_23F4B1A38(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = nullsub_1(*(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
  sub_23F362928();
}

void sub_23F4B1A60()
{
  uint64_t v0;

  sub_23F3F60E0(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8));
}

uint64_t sub_23F4B1A6C()
{
  sub_23F4C89D8();
  return sub_23F618998();
}

void sub_23F4B1AA4(uint64_t a1)
{
  uint64_t v1;

  sub_23F3F633C(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

BOOL sub_23F4B1AB0(uint64_t a1, uint64_t *a2)
{
  return sub_23F48945C(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void sub_23F4B1ACC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F4DD130(a1);
  *(_DWORD *)(v1 + 12) = 0;
  sub_23F4DCEA8();
  sub_23F4DC908();
  sub_23F362928();
}

void sub_23F4B1AF4()
{
  qword_256E7FF40 = (uint64_t)&unk_250FD1260;
}

uint64_t *sub_23F4B1B08()
{
  if (qword_256E6EEE8 != -1)
    swift_once();
  return &qword_256E7FF40;
}

uint64_t sub_23F4B1B48@<X0>(_QWORD *a1@<X8>)
{
  sub_23F4B1B08();
  *a1 = qword_256E7FF40;
  return sub_23F617BA0();
}

void sub_23F4B1B74()
{
  sub_23F4DD0A8();
}

void sub_23F4B1B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4B1B8C(a1, a2, a3, (uint64_t (*)(void))sub_23F4B1B74);
}

void sub_23F4B1B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  __int16 v5;

  v4 = a4();
  sub_23F4DD094(v4, v5);
  sub_23F362928();
}

void sub_23F4B1BAC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_23F4B1BB8(a1, a2, a3, (uint64_t (*)(_QWORD))sub_23F4B1B74);
}

void sub_23F4B1BB8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  __int16 v5;

  v4 = a4(*a1);
  sub_23F4DD094(v4, v5);
  sub_23F362928();
}

void sub_23F4B1BDC()
{
  uint64_t v0;

  sub_23F3F60F4(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8));
}

uint64_t sub_23F4B1BE8()
{
  sub_23F4C8A14();
  return sub_23F618998();
}

void sub_23F4B1C20(uint64_t a1)
{
  uint64_t v1;

  sub_23F3F6328(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

BOOL sub_23F4B1C2C(uint64_t a1, uint64_t *a2)
{
  return sub_23F48DE60(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void sub_23F4B1C48(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F4DD130(a1);
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  sub_23F4DCEA0();
  sub_23F4DC908();
  sub_23F362928();
}

void sub_23F4B1C74()
{
  qword_256E7FF48 = (uint64_t)&unk_250FD12C0;
}

uint64_t *sub_23F4B1C88()
{
  if (qword_256E6EEF0 != -1)
    swift_once();
  return &qword_256E7FF48;
}

uint64_t sub_23F4B1CC8@<X0>(_QWORD *a1@<X8>)
{
  sub_23F4B1C88();
  *a1 = qword_256E7FF48;
  return sub_23F617BA0();
}

#error "23F4B1F0C: call analysis failed (funcsize=144)"

void sub_23F4B1F70(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1(0);
  sub_23F3838D8(a2, v4, v5, v3);
  sub_23F4DCE98();
  sub_23F618968();
  sub_23F362928();
}

#error "23F4B2168: call analysis failed (funcsize=113)"

uint64_t sub_23F4B21A0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a2 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a2 + 8) = 0;
  v3 = a1(0);
  sub_23F4DC908();
  v4 = a2 + *(int *)(v3 + 28);
  v5 = sub_23F4DCEA8();
  return sub_23F4DC9C4(v4, 1, 1, v5);
}

uint64_t sub_23F4B21FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F4DCF3C();
  sub_23F3846D4();
  sub_23F4DCE98();
  v0 = sub_23F4DC978();
  return sub_23F38370C(v0, v1, v2, v3);
}

uint64_t sub_23F4B222C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F4DCF4C();
  v1 = v0;
  sub_23F618968();
  v2 = v1 + *(int *)(sub_23F383850() + 20);
  v3 = sub_23F3846D4();
  sub_23F3838D8(v2, v4, v5, v3);
  sub_23F4DCE98();
  v6 = sub_23F4DC978();
  return sub_23F38359C(v6, v7, v8, v9);
}

uint64_t sub_23F4B2284()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F4DCF3C();
  v1 = (_QWORD *)(v0 + *(int *)(sub_23F3846D4() + 20));
  *v1 = 0;
  v1[1] = 0;
  sub_23F4DCE98();
  v2 = sub_23F4DC978();
  return sub_23F38370C(v2, v3, v4, v5);
}

void sub_23F4B22C0(uint64_t a1@<X8>)
{
  _QWORD *v2;

  sub_23F618968();
  v2 = (_QWORD *)(a1 + *(int *)(sub_23F4DCE98() + 20));
  *v2 = 0;
  v2[1] = 0;
  sub_23F362928();
}

void sub_23F4B22F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _QWORD v70[23];
  uint64_t v71;
  uint64_t v72;

  sub_23F362ABC();
  v71 = v2;
  v72 = v1;
  type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v70[14] = v4;
  v5 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate(v5);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  v70[13] = (char *)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate(v8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v70[12] = v10;
  v11 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate(v11);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v70[11] = v13;
  v14 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate(v14);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F36285C();
  v70[10] = v16;
  v17 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate(v17);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F36285C();
  v70[9] = v19;
  v20 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate(v20);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F36285C();
  v70[8] = v22;
  v23 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate(v23);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F36285C();
  v70[7] = v25;
  v26 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate(v26);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F36285C();
  v70[6] = v28;
  v29 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate(v29);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F36285C();
  v70[5] = v31;
  v32 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate(v32);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F36285C();
  v70[4] = v34;
  v35 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ActionPredicate(v35);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F36285C();
  v70[3] = v37;
  v38 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ToolPredicate(v38);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F36285C();
  v70[2] = v40;
  v41 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_AppPredicate(v41);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F36285C();
  v70[1] = v43;
  sub_23F4DD15C();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v44);
  v70[22] = (char *)v70 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F3838E4();
  v70[21] = v47;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v48);
  v70[20] = (char *)v70 - v49;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F3838E4();
  v70[19] = v51;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F3838E4();
  v70[18] = v53;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F3838E4();
  v70[17] = v55;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F3838E4();
  v70[16] = v57;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F3838E4();
  v70[15] = v59;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F4DD0D4();
  v62 = MEMORY[0x24BDAC7A8](v61);
  v63 = MEMORY[0x24BDAC7A8](v62);
  v64 = MEMORY[0x24BDAC7A8](v63);
  v65 = MEMORY[0x24BDAC7A8](v64);
  MEMORY[0x24BDAC7A8](v65);
  sub_23F35D2E8(&qword_256E766E8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F3B1590();
  v68 = v0 + *(int *)(v67 + 48);
  sub_23F4DCF84(v72, v0);
  v72 = v68;
  sub_23F4DCF84(v71, v68);
  v69 = (char *)sub_23F4B26CC + 4 * byte_23F624AA0[sub_23F4DC4BC()];
  __asm { BR              X10 }
}

void sub_23F4B26CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F4C8990(v1, v2, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  if (sub_23F4DC1BC())
  {
    sub_23F3663AC(v2, type metadata accessor for ResponseGenerationOverrides_AppPredicate);
    sub_23F4DCF08(v4, &qword_256E766E8);
  }
  else
  {
    v5 = v0;
    v6 = *(_QWORD *)(v3 - 280);
    sub_23F4DC3C0(v5);
    sub_23F4DD00C();
    sub_23F3C8574(v6);
    sub_23F3663AC(v2, type metadata accessor for ResponseGenerationOverrides_AppPredicate);
    sub_23F3663AC(v1, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  sub_23F362948();
}

void sub_23F4B2BEC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v2;
  a1[2] = v2;
  a1[3] = v2;
  type metadata accessor for ResponseGenerationOverrides_Rule(0);
  sub_23F4DC908();
  sub_23F362928();
}

void sub_23F4B2C28(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F4DD11C(a1);
  v2 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(v1);
  sub_23F4DC908();
  sub_23F4DCDD0();
  sub_23F4DCDEC(*(int *)(v2 + 32));
  sub_23F362928();
}

void sub_23F4B2C5C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = sub_23F4DD11C(a1);
  v2(v1);
  sub_23F4DC908();
  sub_23F362928();
}

#error "23F4B2F48: call analysis failed (funcsize=185)"

uint64_t sub_23F4B2FAC()
{
  return sub_23F4C6ACC();
}

void sub_23F4B2FCC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F4DC140();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 1)
        sub_23F4DCA64();
      v1 = sub_23F4DC2D8();
    }
  }
  sub_23F450958();
}

void sub_23F4B3028()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F4DCA38();
  sub_23F4DD018();
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16)
    || (type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0),
        sub_23F3612C0(&qword_256E76650, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride, (uint64_t)&unk_23F627AC0), sub_23F618A64(), !v0))
  {
    type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides(0);
    sub_23F4DC7D4();
  }
  sub_23F3F4040();
}

void sub_23F4B30CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  sub_23F383988();
  sub_23F3C8624();
  sub_23F4DC6EC();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F4DC1DC();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F4DCEC0();
  sub_23F3C6080();
  if ((v3 & 1) != 0)
  {
    v4 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides(0);
    sub_23F4DC5F4(*(int *)(v4 + 20));
    sub_23F4DC47C(*(int *)(v4 + 20));
    sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F4DC25C();
    sub_23F4DC9B0();
    sub_23F4DCC24(v0);
  }
  sub_23F383568();
}

unint64_t sub_23F4B317C()
{
  return 0xD000000000000037;
}

uint64_t (*sub_23F4B31A4())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void sub_23F4B31B8()
{
  sub_23F4B2FCC();
}

void sub_23F4B31CC()
{
  sub_23F4B3028();
}

uint64_t sub_23F4B31E4()
{
  sub_23F3612C0(&qword_256E766A8, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides, (uint64_t)&unk_23F627BF0);
  return sub_23F61898C();
}

uint64_t sub_23F4B3238(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EEF8, (uint64_t)&unk_256E7FF50);
}

uint64_t sub_23F4B3254()
{
  sub_23F3612C0(&qword_256E76670, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides, (uint64_t)&unk_23F627C28);
  return sub_23F618A1C();
}

uint64_t sub_23F4B3294()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides);
}

uint64_t sub_23F4B32C0()
{
  sub_23F3612C0(&qword_256E76670, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides, (uint64_t)&unk_23F627C28);
  return sub_23F618A28();
}

uint64_t sub_23F4B3318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E7FF68);
  sub_23F361498(v0, (uint64_t)qword_256E7FF68);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F628470;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "id";
  *(_QWORD *)(v7 + 8) = 2;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "name";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "disabled";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "context";
  *((_QWORD *)v15 + 1) = 7;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "rules";
  *((_QWORD *)v17 + 1) = 5;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "override_dialog";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "radar_id";
  *((_QWORD *)v21 + 1) = 8;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "test_id";
  *((_QWORD *)v23 + 1) = 7;
  v23[16] = 2;
  v10();
  return sub_23F618A88();
}

uint64_t sub_23F4B35B4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = sub_23F4DCFD4();
  return sub_23F361498(v3, a2);
}

void sub_23F4B35F0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F362C98();
  v1 = sub_23F4DC140();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          sub_23F4DCB20();
          break;
        case 2:
          sub_23F4DC22C();
          sub_23F4C6570(v3, v4, v5, v6, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
          break;
        case 3:
          sub_23F6189BC();
          break;
        case 4:
          sub_23F4DC22C();
          sub_23F4B372C();
          break;
        case 5:
          sub_23F4DC22C();
          sub_23F4BEAD0();
          break;
        case 6:
          sub_23F4DC22C();
          sub_23F4B37C0();
          break;
        case 7:
          sub_23F4DC22C();
          sub_23F4B3854();
          break;
        case 8:
          sub_23F4DC22C();
          sub_23F4B38B4();
          break;
        default:
          break;
      }
      v1 = sub_23F4DC2D8();
    }
  }
  sub_23F362870();
}

uint64_t sub_23F4B372C()
{
  type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  type metadata accessor for ResponseGenerationOverrides_ContextPredicate(0);
  sub_23F3612C0(&qword_256E764F0, type metadata accessor for ResponseGenerationOverrides_ContextPredicate, (uint64_t)&unk_23F626AF8);
  return sub_23F618A04();
}

uint64_t sub_23F4B37C0()
{
  type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  type metadata accessor for ResponseGenerationOverrides_OverrideDialog(0);
  sub_23F3612C0(&qword_256E762D0, type metadata accessor for ResponseGenerationOverrides_OverrideDialog, (uint64_t)&unk_23F625310);
  return sub_23F618A04();
}

uint64_t sub_23F4B3854()
{
  type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  return sub_23F6189D4();
}

uint64_t sub_23F4B38B4()
{
  type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  return sub_23F6189D4();
}

void sub_23F4B3914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F4DCA38();
  sub_23F4DC92C();
  if (!v2 || (sub_23F4DD034(), !v1))
  {
    v3 = sub_23F4DC48C();
    sub_23F4C66EC(v3, v4, v5, v6, v7);
    if (!v1)
    {
      if (*(_BYTE *)(v0 + 16) == 1)
        sub_23F618A34();
      v8 = sub_23F4DC48C();
      sub_23F4B3A7C(v8);
      if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
      {
        type metadata accessor for ResponseGenerationOverrides_Rule(0);
        sub_23F3612C0(&qword_256E76310, type metadata accessor for ResponseGenerationOverrides_Rule, (uint64_t)&unk_23F6255E0);
        sub_23F4DD168();
        sub_23F618A64();
      }
      v9 = sub_23F4DC48C();
      sub_23F4B3BEC(v9);
      v10 = sub_23F4DC48C();
      sub_23F4B3D5C(v10);
      v11 = sub_23F4DC48C();
      sub_23F4B3DD0(v11);
      type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
      sub_23F4DCF10();
      sub_23F61895C();
    }
  }
  sub_23F3F4040();
}

void sub_23F4B3A7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E75DE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ContextPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 36), (uint64_t)v4, &qword_256E75DE8);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E75DE8);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
    sub_23F3612C0(&qword_256E764F0, type metadata accessor for ResponseGenerationOverrides_ContextPredicate, (uint64_t)&unk_23F626AF8);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
  }
}

void sub_23F4B3BEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(qword_256E75DF8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 40), (uint64_t)v4, qword_256E75DF8);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, qword_256E75DF8);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
    sub_23F3612C0(&qword_256E762D0, type metadata accessor for ResponseGenerationOverrides_OverrideDialog, (uint64_t)&unk_23F625310);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
  }
}

uint64_t sub_23F4B3D5C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 44) + 8))
    return sub_23F618A4C();
  return result;
}

uint64_t sub_23F4B3DD0(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 48) + 8))
    return sub_23F618A4C();
  return result;
}

void sub_23F4B3E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t *v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  sub_23F362ABC();
  v3 = v2;
  v5 = v4;
  v6 = sub_23F3C8624();
  v98 = *(_QWORD *)(v6 - 8);
  v99 = v6;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3834D0();
  v97 = v8;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v9);
  v96 = (char *)&v93 - v10;
  v11 = sub_23F39C56C();
  v105 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog(v11);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F4DC4C4(v13, v93);
  v102 = sub_23F35D2E8(&qword_256E766C0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  v106 = v15;
  sub_23F35D2E8(qword_256E75DF8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v16);
  v101 = (uint64_t)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F3838E4();
  v103 = v19;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v20);
  v104 = (uint64_t)&v93 - v21;
  v22 = sub_23F39C56C();
  v23 = type metadata accessor for ResponseGenerationOverrides_ContextPredicate(v22);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3845CC();
  v25 = sub_23F35D2E8(&qword_256E766C8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E75DE8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F362AAC();
  v32 = v30 - v31;
  MEMORY[0x24BDAC7A8](v33);
  sub_23F4DD0D4();
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v93 - v35;
  v37 = *(_QWORD *)v5 == *(_QWORD *)v3 && *(_QWORD *)(v5 + 8) == *(_QWORD *)(v3 + 8);
  if (!v37 && (sub_23F3C8510() & 1) == 0)
    goto LABEL_56;
  sub_23F4DD210();
  sub_23F4DC3AC();
  if (!v41)
  {
    if (v38)
      goto LABEL_56;
LABEL_15:
    if (*(unsigned __int8 *)(v5 + 16) != *(unsigned __int8 *)(v3 + 16))
      goto LABEL_56;
    v47 = *(int *)(v40 + 36);
    v95 = v5;
    v48 = v5 + v47;
    v49 = v3;
    v50 = v40;
    sub_23F3D96EC(v48, (uint64_t)v36, &qword_256E75DE8);
    v94 = v50;
    v51 = *(int *)(v50 + 36);
    v52 = v49;
    sub_23F4DC2FC(v49 + v51, v0);
    v53 = (uint64_t)&v28[*(int *)(v25 + 48)];
    sub_23F4DC2FC((uint64_t)v36, (uint64_t)v28);
    v54 = sub_23F3840BC();
    sub_23F4DC2FC(v54, v55);
    sub_23F383740((uint64_t)v28, 1, v23);
    if (v37)
    {
      sub_23F4DC630(v0);
      sub_23F4DC630((uint64_t)v36);
      sub_23F383740(v53, 1, v23);
      if (v37)
      {
        sub_23F3625D8((uint64_t)v28, &qword_256E75DE8);
LABEL_27:
        v61 = v95;
        sub_23F3C617C();
        if ((v62 & 1) == 0)
          goto LABEL_56;
        v63 = v94;
        v64 = v104;
        sub_23F4DCEB0(v61 + *(int *)(v94 + 40), v104);
        v65 = v103;
        sub_23F4DCEB0(v52 + *(int *)(v63 + 40), v103);
        v66 = v106;
        v67 = v106 + *(int *)(v102 + 48);
        sub_23F4DCEB0(v64, v106);
        sub_23F4DCEB0(v65, v67);
        v68 = v105;
        sub_23F383740(v66, 1, v105);
        if (v37)
        {
          sub_23F4DC508(v65);
          sub_23F4DC508(v64);
          v69 = sub_23F383740(v67, 1, v68);
          if (v37)
          {
            sub_23F4DC280(v69, qword_256E75DF8);
            goto LABEL_38;
          }
        }
        else
        {
          v70 = v101;
          sub_23F3D96EC(v66, v101, qword_256E75DF8);
          sub_23F383740(v67, 1, v68);
          if (!v71)
          {
            v72 = v100;
            sub_23F4DCD78(v67, v100);
            sub_23F4C5AAC();
            v74 = v73;
            sub_23F482558(v72);
            sub_23F4DC630(v65);
            sub_23F4DC630(v64);
            sub_23F482558(v70);
            sub_23F4DC630(v66);
            if ((v74 & 1) == 0)
              goto LABEL_56;
LABEL_38:
            sub_23F4DC3AC();
            if (v77)
            {
              if (!v75)
                goto LABEL_56;
              sub_23F4DC2EC(v76);
              v80 = v37 && v78 == v79;
              if (!v80 && (sub_23F3C8510() & 1) == 0)
                goto LABEL_56;
            }
            else if (v75)
            {
              goto LABEL_56;
            }
            sub_23F4DC3AC();
            if (v84)
            {
              if (!v81)
                goto LABEL_56;
              sub_23F4DC2EC(v82);
              if (!v37 || v85 != v86)
              {
                v88 = sub_23F3C8510();
                v83 = v94;
                if ((v88 & 1) == 0)
                  goto LABEL_56;
              }
            }
            else if (v81)
            {
              goto LABEL_56;
            }
            v89 = (uint64_t)v96;
            v90 = v83;
            (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v96, v61 + *(int *)(v83 + 28), v99);
            v91 = v52 + *(int *)(v90 + 28);
            v92 = v97;
            sub_23F4DC758(v97, v91);
            sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            sub_23F4DC394();
            sub_23F4DC500(v92);
            sub_23F4DC500(v89);
            goto LABEL_56;
          }
          sub_23F4DC198(v65);
          sub_23F4DC198(v64);
          sub_23F3663AC(v70, type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
        }
        v57 = &qword_256E766C0;
        v58 = v66;
LABEL_25:
        sub_23F3625D8(v58, v57);
        goto LABEL_56;
      }
    }
    else
    {
      sub_23F3D96EC((uint64_t)v28, v32, &qword_256E75DE8);
      sub_23F383740(v53, 1, v23);
      if (!v56)
      {
        sub_23F4DCA5C(v53, v1);
        sub_23F4B9C50();
        v60 = v59;
        sub_23F4DC534(v1);
        sub_23F4DD238(v0);
        sub_23F4DD238((uint64_t)v36);
        sub_23F4DC534(v32);
        sub_23F4DD238((uint64_t)v28);
        if ((v60 & 1) == 0)
          goto LABEL_56;
        goto LABEL_27;
      }
      sub_23F4DC198(v0);
      sub_23F4DC198((uint64_t)v36);
      sub_23F3663AC(v32, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
    }
    v57 = &qword_256E766C8;
    v58 = (uint64_t)v28;
    goto LABEL_25;
  }
  if (v38)
  {
    sub_23F4DC2EC(v39);
    if (v37 && v42 == v43)
      goto LABEL_15;
    v45 = v40;
    v46 = sub_23F61CC64();
    v40 = v45;
    if ((v46 & 1) != 0)
      goto LABEL_15;
  }
LABEL_56:
  sub_23F362948();
}

unint64_t sub_23F4B4454()
{
  return 0xD000000000000036;
}

uint64_t sub_23F4B4470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_23F4B44B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 28);
  v5 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_23F4B44F0())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void sub_23F4B4504()
{
  sub_23F4B35F0();
}

void sub_23F4B4518()
{
  sub_23F4B3914();
}

uint64_t sub_23F4B452C()
{
  sub_23F3612C0(&qword_256E76770, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride, (uint64_t)&unk_23F627A88);
  return sub_23F61898C();
}

uint64_t sub_23F4B457C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF00, (uint64_t)qword_256E7FF68);
}

uint64_t sub_23F4B4598()
{
  sub_23F3612C0(&qword_256E76650, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride, (uint64_t)&unk_23F627AC0);
  return sub_23F618A1C();
}

uint64_t sub_23F4B45D8()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
}

uint64_t sub_23F4B4604()
{
  sub_23F3612C0(&qword_256E76650, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride, (uint64_t)&unk_23F627AC0);
  return sub_23F618A28();
}

uint64_t sub_23F4B4658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E7FF80);
  sub_23F361498(v0, (uint64_t)qword_256E7FF80);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61E980;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "operator";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4B47A8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F4DC140();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F6189EC();
      }
      else if (v1 == 1)
      {
        sub_23F4DC22C();
        sub_23F4B481C();
      }
      v1 = sub_23F4DC2D8();
    }
  }
  sub_23F4DC270();
}

uint64_t sub_23F4B481C()
{
  sub_23F4C89D8();
  return sub_23F6189C8();
}

void sub_23F4B4880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F4DCD48();
  if (!v3 || (sub_23F4C89D8(), sub_23F4DCB60(), (v0 = v1) == 0))
  {
    if (!*(_DWORD *)(v2 + 12) || (sub_23F4DC22C(), sub_23F618A58(), !v0))
    {
      type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
      sub_23F4DC7D4();
    }
  }
  sub_23F4DCD64();
}

void sub_23F4B4914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  sub_23F383988();
  v12 = v11;
  v14 = v13;
  sub_23F3C8624();
  sub_23F4DC6EC();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F4DC1DC();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F4DCC5C();
  if (v27)
  {
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F4B4974 + 4 * byte_23F624AB6[v26]))(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
  }
  else
  {
    if (v25 == v26 && *(_DWORD *)(v14 + 12) == *(_DWORD *)(v12 + 12))
    {
      v28 = sub_23F4DCEA8();
      sub_23F4DC5F4(*(int *)(v28 + 24));
      sub_23F4DC47C(*(int *)(v28 + 24));
      sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F4DC25C();
      sub_23F4DC9B0();
      sub_23F4DCC24(v10);
    }
    sub_23F383568();
  }
}

unint64_t sub_23F4B4A18()
{
  return 0xD00000000000002ALL;
}

uint64_t (*sub_23F4B4A3C())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void sub_23F4B4A50()
{
  sub_23F4B47A8();
}

void sub_23F4B4A64()
{
  sub_23F4B4880();
}

uint64_t sub_23F4B4A78()
{
  sub_23F3612C0(&qword_256E76778, type metadata accessor for ResponseGenerationOverrides_IntPredicate, (uint64_t)&unk_23F627920);
  return sub_23F61898C();
}

uint64_t sub_23F4B4AC8(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF08, (uint64_t)qword_256E7FF80);
}

uint64_t sub_23F4B4AE4()
{
  sub_23F3612C0(&qword_256E76630, type metadata accessor for ResponseGenerationOverrides_IntPredicate, (uint64_t)&unk_23F627958);
  return sub_23F618A1C();
}

uint64_t sub_23F4B4B24()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_IntPredicate);
}

uint64_t sub_23F4B4B50()
{
  sub_23F3612C0(&qword_256E76630, type metadata accessor for ResponseGenerationOverrides_IntPredicate, (uint64_t)&unk_23F627958);
  return sub_23F618A28();
}

uint64_t sub_23F4B4BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E7FF98);
  sub_23F361498(v0, (uint64_t)qword_256E7FF98);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61D990;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "UNSPECIFIED";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "GREATER_OR_EQUAL_THAN";
  *(_QWORD *)(v11 + 8) = 21;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "EQUAL_TO";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "LESS_OR_EQUAL_THAN";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v10();
  return sub_23F618A88();
}

uint64_t sub_23F4B4D5C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF10, (uint64_t)qword_256E7FF98);
}

uint64_t sub_23F4B4D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E7FFB0);
  sub_23F361498(v0, (uint64_t)qword_256E7FFB0);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61E980;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "operator";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4B4EC8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = sub_23F4DC140();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F4DCB20();
      }
      else if (v1 == 1)
      {
        sub_23F4DC22C();
        sub_23F4B4F34();
      }
      v1 = sub_23F4DC2D8();
    }
  }
  sub_23F4DC270();
}

uint64_t sub_23F4B4F34()
{
  sub_23F4C8A14();
  return sub_23F6189C8();
}

void sub_23F4B4F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F4DCD48();
  if (!v1 || (sub_23F4C8A14(), sub_23F4DCB60(), !v0))
  {
    sub_23F4DC92C();
    if (!v2 || (sub_23F4DC4A4(), !v0))
    {
      type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
      sub_23F4DC7D4();
    }
  }
  sub_23F4DCD64();
}

void sub_23F4B5028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  sub_23F383988();
  v3 = v2;
  v5 = v4;
  sub_23F3C8624();
  sub_23F4DC6EC();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F4DC1DC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F4DCC5C();
  if (v10)
  {
    if (v9)
    {
      if (v9 == 1)
      {
        if (v8 != 1)
          goto LABEL_15;
      }
      else if (v8 != 2)
      {
        goto LABEL_15;
      }
    }
    else if (v8)
    {
      goto LABEL_15;
    }
  }
  else if (v8 != v9)
  {
    goto LABEL_15;
  }
  v10 = *(_QWORD *)(v5 + 16) == *(_QWORD *)(v3 + 16) && *(_QWORD *)(v5 + 24) == *(_QWORD *)(v3 + 24);
  if (v10 || (sub_23F3C8510() & 1) != 0)
  {
    v11 = sub_23F4DCEA0();
    sub_23F4DC5F4(*(int *)(v11 + 24));
    sub_23F4DC47C(*(int *)(v11 + 24));
    sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F4DC25C();
    sub_23F4DC9D8(v0);
    sub_23F4DC9D8(v1);
  }
LABEL_15:
  sub_23F383568();
}

unint64_t sub_23F4B512C()
{
  return 0xD00000000000002DLL;
}

void sub_23F4B5148()
{
  sub_23F4B4EC8();
}

void sub_23F4B515C()
{
  sub_23F4B4F98();
}

uint64_t sub_23F4B5170()
{
  sub_23F3612C0(&qword_256E76788, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F627790);
  return sub_23F61898C();
}

uint64_t sub_23F4B51C0(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF18, (uint64_t)qword_256E7FFB0);
}

uint64_t sub_23F4B51DC()
{
  sub_23F3612C0(&qword_256E76610, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F6277C8);
  return sub_23F618A1C();
}

uint64_t sub_23F4B521C()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_StringPredicate);
}

uint64_t sub_23F4B5248()
{
  sub_23F3612C0(&qword_256E76610, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F6277C8);
  return sub_23F618A28();
}

uint64_t sub_23F4B529C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E7FFC8);
  sub_23F361498(v0, (uint64_t)qword_256E7FFC8);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61EBC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "UNSPECIFIED";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "EXACT_MATCH";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "REGEX_MATCH";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  return sub_23F618A88();
}

uint64_t sub_23F4B5420(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF20, (uint64_t)qword_256E7FFC8);
}

uint64_t sub_23F4B543C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E7FFE0);
  sub_23F361498(v0, (uint64_t)qword_256E7FFE0);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61EBC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "values";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "size";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "no_extra_values";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  return sub_23F618A88();
}

uint64_t sub_23F4B55CC@<X0>(uint64_t a1@<X8>)
{
  return sub_23F4B21A0(type metadata accessor for ResponseGenerationOverrides_ListPredicate, a1);
}

unint64_t sub_23F4B55E8()
{
  return 0xD00000000000002BLL;
}

void sub_23F4B5604()
{
  sub_23F4B594C();
}

void sub_23F4B5638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4B5A6C(a1, a2, a3, type metadata accessor for ResponseGenerationOverrides_StringPredicate, &qword_256E76610, (uint64_t)&unk_23F6277C8, (void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ListPredicate);
}

uint64_t sub_23F4B566C()
{
  sub_23F3612C0(&qword_256E76798, type metadata accessor for ResponseGenerationOverrides_ListPredicate, (uint64_t)&unk_23F627600);
  return sub_23F61898C();
}

uint64_t sub_23F4B56BC(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF28, (uint64_t)qword_256E7FFE0);
}

uint64_t sub_23F4B56D8()
{
  sub_23F3612C0(&qword_256E765F0, type metadata accessor for ResponseGenerationOverrides_ListPredicate, (uint64_t)&unk_23F627638);
  return sub_23F618A1C();
}

uint64_t sub_23F4B5718()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ListPredicate);
}

uint64_t sub_23F4B5744()
{
  sub_23F3612C0(&qword_256E765F0, type metadata accessor for ResponseGenerationOverrides_ListPredicate, (uint64_t)&unk_23F627638);
  return sub_23F618A28();
}

uint64_t sub_23F4B5794()
{
  char v0;

  sub_23F4B5CE4();
  return v0 & 1;
}

uint64_t sub_23F4B57BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E7FFF8);
  sub_23F361498(v0, (uint64_t)qword_256E7FFF8);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61EBC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "items";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "size";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "no_extra_keys";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4B594C()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  sub_23F362C98();
  sub_23F4DC368(v6, v7);
  v8 = sub_23F6189A4();
  if (!v2)
  {
    while ((v9 & 1) == 0)
    {
      switch(v8)
      {
        case 3:
          sub_23F6189BC();
          break;
        case 2:
          sub_23F4B5A00(v1, v3, v5, v4, v0);
          break;
        case 1:
          sub_23F4BE98C();
          break;
      }
      sub_23F384A14();
      v8 = sub_23F6189A4();
    }
  }
  sub_23F362870();
}

void sub_23F4B5A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  sub_23F4DC1A0(a1, a2, a3, a4, a5);
  type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  sub_23F3612C0(&qword_256E76630, type metadata accessor for ResponseGenerationOverrides_IntPredicate, (uint64_t)&unk_23F627958);
  sub_23F3F9CD0();
  sub_23F618A04();
  sub_23F4DC358();
}

void sub_23F4B5A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6, void (*a7)(_QWORD))
{
  _BYTE *v7;
  uint64_t v8;

  if (!*(_QWORD *)(*(_QWORD *)v7 + 16) || (a4(0), sub_23F3612C0(a5, a4, a6), sub_23F618A64(), !v8))
  {
    sub_23F4B5BBC();
    if (!v8)
    {
      if (v7[8] == 1)
        sub_23F618A34();
      a7(0);
      sub_23F61895C();
    }
  }
}

void sub_23F4B5BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F362C98();
  v3 = v2;
  v5 = v4;
  sub_23F35D2E8(&qword_256E76708);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3845CC();
  v7 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F383EC4();
  v9 = v3(0);
  sub_23F3D96EC(v5 + *(int *)(v9 + 28), v1, &qword_256E76708);
  if (sub_23F36195C(v1, 1, v7) == 1)
  {
    sub_23F3625D8(v1, &qword_256E76708);
  }
  else
  {
    sub_23F36262C(v1, v0, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
    sub_23F3612C0(&qword_256E76630, type metadata accessor for ResponseGenerationOverrides_IntPredicate, (uint64_t)&unk_23F627958);
    sub_23F618A70();
    sub_23F3663AC(v0, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
  }
  sub_23F362870();
}

void sub_23F4B5CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD, _QWORD);
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t (*v6)(_QWORD, _QWORD);
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD, _QWORD);
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(_QWORD);
  uint64_t v47;
  uint64_t (*v48)(_QWORD, _QWORD);

  sub_23F362ABC();
  v46 = v5;
  v48 = v6;
  v8 = v7;
  v10 = v9;
  v42 = sub_23F3C8624();
  v44 = *(_QWORD *)(v42 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  v43 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F4DC8E0();
  v47 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(v14);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3845CC();
  v45 = sub_23F35D2E8(&qword_256E76700);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E76708);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F4DC918();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v39 - v20;
  if ((v48(*(_QWORD *)v10, *v8) & 1) == 0)
    goto LABEL_14;
  v48 = v3;
  v40 = v4;
  v22 = v46(0);
  sub_23F4DCF7C(v10 + *(int *)(v22 + 28), (uint64_t)v21);
  v23 = *(int *)(v22 + 28);
  v41 = v8;
  sub_23F4DCF7C((uint64_t)v8 + v23, v0);
  v24 = v1 + *(int *)(v45 + 48);
  sub_23F4DCF7C((uint64_t)v21, v1);
  sub_23F4DCF7C(v0, v24);
  sub_23F383740(v1, 1, v47);
  if (!v27)
  {
    v26 = v48;
    sub_23F3D96EC(v1, (uint64_t)v48, &qword_256E76708);
    sub_23F3ECB2C(v24);
    if (!v27)
    {
      sub_23F4DD040(v24);
      sub_23F4B4914((uint64_t)v26, v2, v29, v30, v31, v32, v33, v34, v39, v40);
      v36 = v35;
      sub_23F4DC910(v2);
      sub_23F389C0C(v0);
      sub_23F389C0C((uint64_t)v21);
      sub_23F4DC910((uint64_t)v26);
      sub_23F389C0C(v1);
      if ((v36 & 1) == 0)
        goto LABEL_14;
      goto LABEL_12;
    }
    sub_23F4DC508(v0);
    sub_23F4DC508((uint64_t)v21);
    sub_23F3B1778(v28, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
LABEL_10:
    sub_23F4DC280(v25, &qword_256E76700);
    goto LABEL_14;
  }
  sub_23F38F900(v0);
  sub_23F38F900((uint64_t)v21);
  v25 = sub_23F3ECB2C(v24);
  if (!v27)
    goto LABEL_10;
  sub_23F4DC280(v25, &qword_256E76708);
LABEL_12:
  v37 = v41;
  if (*(unsigned __int8 *)(v10 + 8) == *((unsigned __int8 *)v41 + 8))
  {
    v38 = v40;
    sub_23F4DCA54(v40, v10 + *(int *)(v22 + 24));
    sub_23F4DCA54(v43, (uint64_t)v37 + *(int *)(v22 + 24));
    sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F4DC44C();
    sub_23F4DC598();
    sub_23F4DCAF4(v38);
  }
LABEL_14:
  sub_23F4DCC94();
  sub_23F362948();
}

uint64_t sub_23F4B5FE8@<X0>(uint64_t a1@<X8>)
{
  return sub_23F4B21A0(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate, a1);
}

unint64_t sub_23F4B6004()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_23F4B6020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F3C8624();
  v0 = sub_23F3F9C80();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

uint64_t sub_23F4B6048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F3C8624();
  v0 = sub_23F4DCA84();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

void sub_23F4B6070()
{
  sub_23F4B594C();
}

void sub_23F4B60A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4B5A6C(a1, a2, a3, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate, &qword_256E76510, (uint64_t)&unk_23F626C60, (void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate);
}

uint64_t sub_23F4B60D8()
{
  sub_23F3612C0(&qword_256E767A0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate, (uint64_t)&unk_23F627498);
  return sub_23F61898C();
}

uint64_t sub_23F4B6128(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF30, (uint64_t)qword_256E7FFF8);
}

uint64_t sub_23F4B6144()
{
  sub_23F3612C0(&qword_256E765D0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate, (uint64_t)&unk_23F6274D0);
  return sub_23F618A1C();
}

uint64_t sub_23F4B6184()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate);
}

uint64_t sub_23F4B61B0()
{
  sub_23F3612C0(&qword_256E765D0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate, (uint64_t)&unk_23F6274D0);
  return sub_23F618A28();
}

uint64_t sub_23F4B6200()
{
  char v0;

  sub_23F4B5CE4();
  return v0 & 1;
}

uint64_t sub_23F4B6228()
{
  uint64_t result;

  result = sub_23F61C280();
  qword_256E80010 = 0xD00000000000002FLL;
  *(_QWORD *)algn_256E80018 = 0x800000023F637620;
  return result;
}

uint64_t *sub_23F4B629C()
{
  if (qword_256E6EF38 != -1)
    swift_once();
  return &qword_256E80010;
}

uint64_t sub_23F4B62DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E80020);
  sub_23F361498(v0, (uint64_t)qword_256E80020);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61E980;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "any_value_predicate";
  *(_QWORD *)(v7 + 8) = 19;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "exact_value_predicate";
  *((_QWORD *)v11 + 1) = 21;
  v11[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4B642C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E76738);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E767B0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E76738);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E76738);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    }
    else
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E767B0);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76590, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate, (uint64_t)&unk_23F627200);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E767B0);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E767B0);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E767B0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E767B0);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E76738);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4B6818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E76738);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E767B8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E76738);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E76738);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E767B8);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76570, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate, (uint64_t)&unk_23F627098);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E767B8);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E767B8);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E767B8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E767B8);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E76738);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

#error "23F4B6C38: call analysis failed (funcsize=36)"

void sub_23F4B6C9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E76738);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E76738);
  v8 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E76738);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate);
      sub_23F3612C0(&qword_256E76590, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate, (uint64_t)&unk_23F627200);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4B6E34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E76738);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E76738);
  v8 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E76738);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate);
      sub_23F3612C0(&qword_256E76570, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate, (uint64_t)&unk_23F627098);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4B6FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34[6];

  sub_23F362ABC();
  v6 = v5;
  v34[0] = sub_23F3C8624();
  v34[5] = *(_QWORD *)(v34[0] - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3E01D8(v8, v34[0]);
  MEMORY[0x24BDAC7A8](v9);
  v34[2] = (uint64_t)v34 - v10;
  v11 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(v11);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3845CC();
  v13 = sub_23F35D2E8(&qword_256E76730);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F383EC4();
  sub_23F3C87F8();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F4DC39C();
  v18 = MEMORY[0x24BDAC7A8](v17);
  sub_23F4DC288(v18, v19, v20, v21, v22, v23, v24, v25, v34[0]);
  v34[3] = v6;
  sub_23F4DC2E4(v6, v0);
  sub_23F4DC2C0();
  sub_23F4DC2E4(v0, v13);
  v26 = sub_23F3ECB2C(v1);
  if (v29)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v4);
    v28 = sub_23F3ECB2C(v13);
    if (v29)
    {
      sub_23F4DC280(v28, &qword_256E76738);
LABEL_11:
      v33 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate(0);
      sub_23F4DC204(v33);
      sub_23F4DC434();
      sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F4DC394();
      sub_23F4DC500(v1);
      sub_23F4DC500(v6);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F4DC428(v26, v27, &qword_256E76738);
  sub_23F3ECB2C(v13);
  if (v29)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v4);
    sub_23F4DC688(v30, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
LABEL_9:
    sub_23F4DC280(v28, &qword_256E76730);
    goto LABEL_12;
  }
  sub_23F4DC4B4(v13, v2);
  v31 = sub_23F384A14();
  v32 = sub_23F4B1CF4(v31);
  sub_23F3C8574(v2);
  sub_23F389C0C(v0);
  sub_23F389C0C(v4);
  sub_23F3C8574(v3);
  sub_23F389C0C(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F4DD180();
  sub_23F362948();
}

void sub_23F4B7208(uint64_t a1@<X8>)
{
  sub_23F4B1F70(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate, a1);
}

uint64_t sub_23F4B722C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6DF8(a1, a2, (void (*)(void))sub_23F4B629C);
}

void sub_23F4B7244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4B7A84(a1, a2, a3, (void (*)(uint64_t))sub_23F4B642C, (void (*)(uint64_t))sub_23F4B6818);
}

uint64_t sub_23F4B7268()
{
  return sub_23F4B6C04();
}

uint64_t sub_23F4B727C()
{
  sub_23F3612C0(&qword_256E767A8, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate, (uint64_t)&unk_23F627330);
  return sub_23F61898C();
}

uint64_t sub_23F4B72CC(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF40, (uint64_t)qword_256E80020);
}

uint64_t sub_23F4B72E8()
{
  sub_23F3612C0(&qword_256E765B0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate, (uint64_t)&unk_23F627368);
  return sub_23F618A1C();
}

uint64_t sub_23F4B7328()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate);
}

uint64_t sub_23F4B7354()
{
  sub_23F3612C0(&qword_256E765B0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate, (uint64_t)&unk_23F627368);
  return sub_23F618A28();
}

uint64_t sub_23F4B73A8(uint64_t a1)
{
  return sub_23F4B75E0(a1, 0xD000000000000012, 0x800000023F6376B0, &qword_256E80038, &qword_256E80040);
}

uint64_t *sub_23F4B73D0()
{
  if (qword_256E6EF48 != -1)
    swift_once();
  return &qword_256E80038;
}

void sub_23F4B7410(uint64_t a1)
{
  sub_23F4C5F38(a1, qword_256E80048);
}

uint64_t sub_23F4B7420(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6DF8(a1, a2, (void (*)(void))sub_23F4B73D0);
}

uint64_t (*sub_23F4B7440())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_23F4B7450()
{
  return sub_23F4C5F70();
}

uint64_t sub_23F4B7464()
{
  return sub_23F4C5FB0();
}

uint64_t sub_23F4B7478()
{
  sub_23F3612C0(&qword_256E767C0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate, (uint64_t)&unk_23F6271C8);
  return sub_23F61898C();
}

uint64_t sub_23F4B74C8(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF50, (uint64_t)qword_256E80048);
}

uint64_t sub_23F4B74E4()
{
  sub_23F3612C0(&qword_256E76590, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate, (uint64_t)&unk_23F627200);
  return sub_23F618A1C();
}

uint64_t sub_23F4B7524()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate);
}

uint64_t sub_23F4B7550()
{
  sub_23F3612C0(&qword_256E76590, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate, (uint64_t)&unk_23F627200);
  return sub_23F618A28();
}

#error "23F4B75A8: call analysis failed (funcsize=6)"

uint64_t sub_23F4B75B8(uint64_t a1)
{
  return sub_23F4B75E0(a1, 0xD000000000000014, 0x800000023F6376D0, &qword_256E80060, &qword_256E80068);
}

uint64_t sub_23F4B75E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  if (qword_256E6EF38 != -1)
    swift_once();
  v8 = qword_256E80010;
  v9 = *(_QWORD *)algn_256E80018;
  sub_23F617BA0();
  sub_23F3848C0();
  result = sub_23F61C280();
  *a4 = v8;
  *a5 = v9;
  return result;
}

uint64_t *sub_23F4B7674()
{
  if (qword_256E6EF58 != -1)
    swift_once();
  return &qword_256E80060;
}

uint64_t sub_23F4B76B4()
{
  return sub_23F4C6ACC();
}

void sub_23F4B76D4(_QWORD *a1@<X8>)
{
  sub_23F4B2C5C(a1);
}

uint64_t sub_23F4B76F0(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6DF8(a1, a2, (void (*)(void))sub_23F4B7674);
}

void sub_23F4B7708(uint64_t a1, uint64_t a2)
{
  sub_23F4C6BC8(a1, a2);
}

void sub_23F4B771C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4C6C18(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate);
}

uint64_t sub_23F4B7738()
{
  sub_23F3612C0(&qword_256E767C8, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate, (uint64_t)&unk_23F627060);
  return sub_23F61898C();
}

uint64_t sub_23F4B7788(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF60, (uint64_t)&unk_256E80070);
}

uint64_t sub_23F4B77A4()
{
  sub_23F3612C0(&qword_256E76570, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate, (uint64_t)&unk_23F627098);
  return sub_23F618A1C();
}

uint64_t sub_23F4B77E4()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate);
}

uint64_t sub_23F4B7810()
{
  sub_23F3612C0(&qword_256E76570, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate, (uint64_t)&unk_23F627098);
  return sub_23F618A28();
}

uint64_t sub_23F4B7860()
{
  char v0;

  sub_23F4C6C84();
  return v0 & 1;
}

uint64_t sub_23F4B7880()
{
  uint64_t result;

  result = sub_23F61C280();
  qword_256E80088 = 0xD00000000000002FLL;
  unk_256E80090 = 0x800000023F637620;
  return result;
}

uint64_t *sub_23F4B78F4()
{
  if (qword_256E6EF68 != -1)
    swift_once();
  return &qword_256E80088;
}

uint64_t sub_23F4B7934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E80098);
  sub_23F361498(v0, (uint64_t)qword_256E80098);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61E980;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "any_value_predicate";
  *(_QWORD *)(v7 + 8) = 19;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "string_predicate";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4B7A84(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F4DC884(a1, a2);
  while (1)
  {
    v8 = sub_23F6189A4();
    if (v5 || (v9 & 1) != 0)
      break;
    if (v8 == 2)
    {
      v11 = sub_23F4DD218();
      a5(v11);
    }
    else if (v8 == 1)
    {
      v10 = sub_23F4DD218();
      a4(v10);
    }
  }
  sub_23F4DC358();
}

void sub_23F4B7AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E76750);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E767D8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E76750);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E76750);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    }
    else
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E767D8);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76530, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate, (uint64_t)&unk_23F626DC8);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E767D8);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E767D8);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E767D8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E767D8);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E76750);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4B7EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E76750);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E75DE0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E76750);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E76750);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E75DE0);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76610, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F6277C8);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E75DE0);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E75DE0);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E75DE0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E75DE0);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E76750);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

#error "23F4B8308: call analysis failed (funcsize=36)"

void sub_23F4B836C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E76750);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E76750);
  v8 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E76750);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate);
      sub_23F3612C0(&qword_256E76530, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate, (uint64_t)&unk_23F626DC8);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4B8504(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E76750);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E76750);
  v8 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E76750);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
      sub_23F3612C0(&qword_256E76610, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F6277C8);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4B869C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34[6];

  sub_23F362ABC();
  v6 = v5;
  v34[0] = sub_23F3C8624();
  v34[5] = *(_QWORD *)(v34[0] - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3E01D8(v8, v34[0]);
  MEMORY[0x24BDAC7A8](v9);
  v34[2] = (uint64_t)v34 - v10;
  v11 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(v11);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3845CC();
  v13 = sub_23F35D2E8(&qword_256E76748);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F383EC4();
  sub_23F3C87F8();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F4DC39C();
  v18 = MEMORY[0x24BDAC7A8](v17);
  sub_23F4DC288(v18, v19, v20, v21, v22, v23, v24, v25, v34[0]);
  v34[3] = v6;
  sub_23F4DC2E4(v6, v0);
  sub_23F4DC2C0();
  sub_23F4DC2E4(v0, v13);
  v26 = sub_23F3ECB2C(v1);
  if (v29)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v4);
    v28 = sub_23F3ECB2C(v13);
    if (v29)
    {
      sub_23F4DC280(v28, &qword_256E76750);
LABEL_11:
      v33 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate(0);
      sub_23F4DC204(v33);
      sub_23F4DC434();
      sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F4DC394();
      sub_23F4DC500(v1);
      sub_23F4DC500(v6);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F4DC428(v26, v27, &qword_256E76750);
  sub_23F3ECB2C(v13);
  if (v29)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v4);
    sub_23F4DC688(v30, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
LABEL_9:
    sub_23F4DC280(v28, &qword_256E76748);
    goto LABEL_12;
  }
  sub_23F4DC4B4(v13, v2);
  v31 = sub_23F384A14();
  v32 = sub_23F4B1FB4(v31);
  sub_23F3C8574(v2);
  sub_23F389C0C(v0);
  sub_23F389C0C(v4);
  sub_23F3C8574(v3);
  sub_23F389C0C(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F4DD180();
  sub_23F362948();
}

void sub_23F4B88D8(uint64_t a1@<X8>)
{
  sub_23F4B1F70(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate, a1);
}

uint64_t sub_23F4B88FC(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6DF8(a1, a2, (void (*)(void))sub_23F4B78F4);
}

void sub_23F4B8914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4B7A84(a1, a2, a3, (void (*)(uint64_t))sub_23F4B7AFC, (void (*)(uint64_t))sub_23F4B7EE8);
}

uint64_t sub_23F4B8938()
{
  return sub_23F4B82D4();
}

uint64_t sub_23F4B894C()
{
  sub_23F3612C0(&qword_256E767D0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate, (uint64_t)&unk_23F626EF8);
  return sub_23F61898C();
}

uint64_t sub_23F4B899C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF70, (uint64_t)qword_256E80098);
}

uint64_t sub_23F4B89B8()
{
  sub_23F3612C0(&qword_256E76550, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate, (uint64_t)&unk_23F626F30);
  return sub_23F618A1C();
}

uint64_t sub_23F4B89F8()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate);
}

uint64_t sub_23F4B8A24()
{
  sub_23F3612C0(&qword_256E76550, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate, (uint64_t)&unk_23F626F30);
  return sub_23F618A28();
}

uint64_t sub_23F4B8A78()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256E6EF68 != -1)
    swift_once();
  v1 = qword_256E80088;
  v2 = unk_256E80090;
  sub_23F617BA0();
  result = sub_23F61C280();
  qword_256E800B0 = v1;
  *(_QWORD *)algn_256E800B8 = v2;
  return result;
}

uint64_t *sub_23F4B8B04()
{
  if (qword_256E6EF78 != -1)
    swift_once();
  return &qword_256E800B0;
}

void sub_23F4B8B44(uint64_t a1)
{
  sub_23F4C5F38(a1, qword_256E800C0);
}

uint64_t sub_23F4B8B50(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6DF8(a1, a2, (void (*)(void))sub_23F4B8B04);
}

uint64_t sub_23F4B8B68()
{
  sub_23F3612C0(&qword_256E767E0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate, (uint64_t)&unk_23F626D90);
  return sub_23F61898C();
}

uint64_t sub_23F4B8BB8(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF80, (uint64_t)qword_256E800C0);
}

uint64_t sub_23F4B8BD4()
{
  sub_23F3612C0(&qword_256E76530, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate, (uint64_t)&unk_23F626DC8);
  return sub_23F618A1C();
}

uint64_t sub_23F4B8C14()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate);
}

uint64_t sub_23F4B8C40()
{
  sub_23F3612C0(&qword_256E76530, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate, (uint64_t)&unk_23F626DC8);
  return sub_23F618A28();
}

uint64_t sub_23F4B8C90()
{
  uint64_t result;

  result = sub_23F61C280();
  qword_256E800D8 = 0xD00000000000002FLL;
  unk_256E800E0 = 0x800000023F637620;
  return result;
}

uint64_t *sub_23F4B8D04()
{
  if (qword_256E6EF88 != -1)
    swift_once();
  return &qword_256E800D8;
}

uint64_t sub_23F4B8D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E800E8);
  sub_23F361498(v0, (uint64_t)qword_256E800E8);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61E980;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "key_predicate";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value_predicate";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4B8E94()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F362C98();
  v1 = sub_23F4DC140();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F4DC6D4();
        sub_23F4BDA44();
      }
      else if (v1 == 1)
      {
        sub_23F4DC954();
      }
      v1 = sub_23F4DC2D8();
    }
  }
  sub_23F362870();
}

void sub_23F4B8F2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E76728);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256E76728);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E76728);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate);
    sub_23F3612C0(&qword_256E765B0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate, (uint64_t)&unk_23F627368);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate);
  }
}

void sub_23F4B909C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E76718);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256E76718);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E76718);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate);
    sub_23F3612C0(&qword_256E76550, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate, (uint64_t)&unk_23F626F30);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate);
  }
}

void sub_23F4B920C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  sub_23F362ABC();
  v73 = v5;
  v7 = v6;
  v8 = sub_23F3C8624();
  v64 = *(_QWORD *)(v8 - 8);
  v65 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v11);
  v62 = (uint64_t)&v60 - v12;
  v13 = sub_23F39C56C();
  v70 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate(v13);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F4DC84C(v15, v60);
  v67 = sub_23F35D2E8(&qword_256E76710);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F44D458(v17, v60);
  sub_23F35D2E8(&qword_256E76718);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v18);
  v66 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v20);
  v68 = (uint64_t)&v60 - v21;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v22);
  v69 = (uint64_t)&v60 - v23;
  v24 = sub_23F39C56C();
  v25 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate(v24);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F3845CC();
  v27 = sub_23F35D2E8(&qword_256E76720);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F3B17A4();
  sub_23F35D2E8(&qword_256E76728);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F4DC918();
  MEMORY[0x24BDAC7A8](v31);
  v32 = sub_23F4DD054();
  v33 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate(v32);
  v34 = *(int *)(v33 + 20);
  v72 = v7;
  sub_23F4DCABC(v7 + v34, v2);
  sub_23F4DCABC(v73 + *(int *)(v33 + 20), v0);
  v35 = v1 + *(int *)(v27 + 48);
  sub_23F4DCABC(v2, v1);
  sub_23F4DCABC(v0, v35);
  v36 = sub_23F383740(v1, 1, v25);
  if (v39)
  {
    sub_23F4DC53C(v0);
    sub_23F4DC53C(v2);
    v38 = sub_23F383740(v35, 1, v25);
    if (v39)
    {
      sub_23F4DCF08(v38, &qword_256E76728);
      goto LABEL_11;
    }
LABEL_9:
    v41 = &qword_256E76720;
    v42 = v1;
LABEL_20:
    sub_23F3625D8(v42, v41);
    goto LABEL_21;
  }
  sub_23F4DD0B4(v36, v37, &qword_256E76728);
  sub_23F383740(v35, 1, v25);
  if (v39)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v2);
    sub_23F4DC688(v40, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate);
    goto LABEL_9;
  }
  sub_23F4DCD78(v35, v3);
  sub_23F384A14();
  sub_23F4B6FCC();
  v44 = v43;
  sub_23F482558(v3);
  sub_23F4DC53C(v0);
  sub_23F4DC53C(v2);
  sub_23F482558(v4);
  sub_23F4DC53C(v1);
  if ((v44 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v45 = v72;
  v46 = v69;
  sub_23F4DC2FC(v72 + *(int *)(v33 + 24), v69);
  v47 = v73;
  v48 = v68;
  sub_23F4DC2FC(v73 + *(int *)(v33 + 24), v68);
  v49 = v71;
  v50 = v71 + *(int *)(v67 + 48);
  sub_23F4DC2FC(v46, v71);
  sub_23F4DC2FC(v48, v50);
  v51 = v70;
  v52 = sub_23F383740(v49, 1, v70);
  if (v39)
  {
    sub_23F4DC630(v48);
    sub_23F4DC630(v46);
    v54 = sub_23F383740(v50, 1, v51);
    if (v39)
    {
      sub_23F4DCE84(v54, &qword_256E76718);
LABEL_23:
      v59 = v62;
      sub_23F4DCA54(v62, v45);
      sub_23F4DCA54(v63, v47);
      sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F4DC44C();
      sub_23F4DC598();
      sub_23F4DCAF4(v59);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  sub_23F4DCF9C(v52, v53, &qword_256E76718);
  sub_23F383740(v50, 1, v51);
  if (v55)
  {
    sub_23F4DC508(v48);
    sub_23F4DC508(v46);
    sub_23F3663AC(v33, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate);
LABEL_19:
    v41 = &qword_256E76710;
    v42 = v49;
    goto LABEL_20;
  }
  v56 = v61;
  sub_23F4DCA5C(v50, v61);
  sub_23F3848C0();
  sub_23F4B869C();
  v58 = v57;
  sub_23F4DC534(v56);
  sub_23F38F900(v48);
  sub_23F38F900(v46);
  sub_23F4DC534(v33);
  sub_23F38F900(v49);
  if ((v58 & 1) != 0)
    goto LABEL_23;
LABEL_21:
  sub_23F4DCC94();
  sub_23F362948();
}

uint64_t sub_23F4B96B8()
{
  return sub_23F4B222C();
}

uint64_t sub_23F4B96E4(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6DF8(a1, a2, (void (*)(void))sub_23F4B8D04);
}

void sub_23F4B96FC()
{
  sub_23F4B8E94();
}

void sub_23F4B9710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BB1E0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F4B8F2C);
}

uint64_t sub_23F4B9734()
{
  sub_23F3612C0(&qword_256E767E8, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate, (uint64_t)&unk_23F626C28);
  return sub_23F61898C();
}

uint64_t sub_23F4B9784(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF90, (uint64_t)qword_256E800E8);
}

uint64_t sub_23F4B97A0()
{
  sub_23F3612C0(&qword_256E76510, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate, (uint64_t)&unk_23F626C60);
  return sub_23F618A1C();
}

uint64_t sub_23F4B97E0()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate);
}

uint64_t sub_23F4B980C()
{
  sub_23F3612C0(&qword_256E76510, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate, (uint64_t)&unk_23F626C60);
  return sub_23F618A28();
}

uint64_t sub_23F4B9860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E80100);
  sub_23F361498(v0, (uint64_t)qword_256E80100);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61EBC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "user_query";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "device_type";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "interface_idiom";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4B99EC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F4DCA38();
  v1 = sub_23F4DC140();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 4:
          sub_23F4DCCD4();
          break;
        case 3:
          sub_23F4DCCBC();
          break;
        case 1:
          sub_23F4DCBE4();
          sub_23F4BDFF8();
          break;
      }
      v1 = sub_23F4DC2D8();
    }
  }
  sub_23F3F4040();
}

void sub_23F4B9A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);

  v1 = sub_23F4DCCA8();
  sub_23F4B9AE0(v1);
  if (!v0)
  {
    v2 = sub_23F4DCCA8();
    sub_23F4C665C(v2, v3, v4, v5, v6);
    v7 = sub_23F4DCCA8();
    sub_23F4C66A4(v7, v8, v9, v10, v11);
    sub_23F4DC638();
  }
  sub_23F4DCDC4();
}

void sub_23F4B9AE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E75DE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_ContextPredicate(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256E75DE0);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E75DE0);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    sub_23F3612C0(&qword_256E76610, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F6277C8);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  }
}

void sub_23F4B9C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[4];
  uint64_t v51;
  uint64_t v52;

  sub_23F362ABC();
  v4 = v3;
  v6 = v5;
  v7 = sub_23F3C8624();
  v50[2] = *(_QWORD *)(v7 - 8);
  v50[3] = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3834D0();
  v50[1] = v9;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v10);
  v50[0] = (uint64_t)v50 - v11;
  v12 = sub_23F4DCEA0();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3B1F34();
  v14 = sub_23F35D2E8(&qword_256E766D0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F383EC4();
  sub_23F384980();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F362AAC();
  v19 = v17 - v18;
  MEMORY[0x24BDAC7A8](v20);
  sub_23F4DC918();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v50 - v22;
  v24 = sub_23F4DCFC4();
  v25 = *(int *)(v24 + 20);
  v51 = v6;
  v26 = v6 + v25;
  v27 = v24;
  sub_23F4DCEB8(v26, (uint64_t)v23);
  v28 = *(int *)(v27 + 20);
  v52 = v4;
  sub_23F4DCEB8(v4 + v28, v0);
  v29 = v1 + *(int *)(v14 + 48);
  sub_23F4DCEB8((uint64_t)v23, v1);
  sub_23F4DCEB8(v0, v29);
  sub_23F383740(v1, 1, v12);
  if (v31)
  {
    sub_23F38F900(v0);
    sub_23F38F900((uint64_t)v23);
    v30 = sub_23F383740(v29, 1, v12);
    if (v31)
    {
      sub_23F4DC280(v30, &qword_256E75DE0);
      goto LABEL_12;
    }
LABEL_9:
    sub_23F4DC280(v30, &qword_256E766D0);
    goto LABEL_10;
  }
  sub_23F3D96EC(v1, v19, &qword_256E75DE0);
  sub_23F383740(v29, 1, v12);
  if (v31)
  {
    sub_23F4DC508(v0);
    sub_23F4DC508((uint64_t)v23);
    sub_23F3663AC(v19, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    goto LABEL_9;
  }
  sub_23F389CE4(v29);
  sub_23F4B5028();
  v33 = v32;
  sub_23F4DC910(v2);
  sub_23F4DC53C(v0);
  sub_23F4DC53C((uint64_t)v23);
  sub_23F4DC910(v19);
  sub_23F4DC53C(v1);
  if ((v33 & 1) == 0)
    goto LABEL_10;
LABEL_12:
  v34 = v51;
  sub_23F4DD068();
  if (v37)
  {
    if (!v35)
      goto LABEL_10;
    sub_23F4DC2EC(v36);
    v40 = v31 && v38 == v39;
    if (!v40 && (sub_23F3C8510() & 1) == 0)
      goto LABEL_10;
  }
  else if (v35)
  {
    goto LABEL_10;
  }
  sub_23F4DD068();
  if (v43)
  {
    if (v41)
    {
      sub_23F4DC2EC(v42);
      v46 = v31 && v44 == v45;
      if (v46 || (sub_23F3C8510() & 1) != 0)
        goto LABEL_30;
    }
  }
  else if (!v41)
  {
LABEL_30:
    v47 = v50[0];
    sub_23F4DCA54(v50[0], v34);
    v48 = sub_23F3848D8();
    sub_23F4DCA54(v48, v49);
    sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F4DC44C();
    sub_23F4DC598();
    sub_23F4DCAF4(v47);
  }
LABEL_10:
  sub_23F4DCC94();
  sub_23F362948();
}

unint64_t sub_23F4B9F64()
{
  return 0xD00000000000002ELL;
}

void sub_23F4B9F80()
{
  sub_23F4B99EC();
}

void sub_23F4B9F94()
{
  sub_23F4B9A7C();
}

uint64_t sub_23F4B9FA8()
{
  sub_23F3612C0(&qword_256E767F0, type metadata accessor for ResponseGenerationOverrides_ContextPredicate, (uint64_t)&unk_23F626AC0);
  return sub_23F61898C();
}

uint64_t sub_23F4B9FF8(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EF98, (uint64_t)qword_256E80100);
}

uint64_t sub_23F4BA014()
{
  sub_23F3612C0(&qword_256E764F0, type metadata accessor for ResponseGenerationOverrides_ContextPredicate, (uint64_t)&unk_23F626AF8);
  return sub_23F618A1C();
}

uint64_t sub_23F4BA054()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
}

uint64_t sub_23F4BA080()
{
  sub_23F3612C0(&qword_256E764F0, type metadata accessor for ResponseGenerationOverrides_ContextPredicate, (uint64_t)&unk_23F626AF8);
  return sub_23F618A28();
}

uint64_t sub_23F4BA0D4()
{
  return sub_23F4C6ACC();
}

void sub_23F4BA0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F4DCA38();
  sub_23F4DC368(v1, v2);
  while (1)
  {
    v3 = sub_23F6189A4();
    if (v0 || (v4 & 1) != 0)
      break;
    if (v3 == 1)
    {
      sub_23F4DCBC0();
      sub_23F4BDFF8();
    }
    sub_23F384A14();
  }
  sub_23F3F4040();
}

void sub_23F4BA13C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E75DE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_AppPredicate(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256E75DE0);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E75DE0);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    sub_23F3612C0(&qword_256E76610, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F6277C8);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  }
}

uint64_t sub_23F4BA2AC()
{
  return sub_23F4B21FC();
}

unint64_t sub_23F4BA2D0()
{
  return 0xD00000000000002ALL;
}

void sub_23F4BA2EC()
{
  sub_23F4BA0F4();
}

void sub_23F4BA320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BE034(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F4BA13C);
}

uint64_t sub_23F4BA33C()
{
  sub_23F3612C0(&qword_256E767F8, type metadata accessor for ResponseGenerationOverrides_AppPredicate, (uint64_t)&unk_23F626958);
  return sub_23F61898C();
}

uint64_t sub_23F4BA38C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EFA0, (uint64_t)&unk_256E80118);
}

uint64_t sub_23F4BA3A8()
{
  sub_23F3612C0(&qword_256E764D0, type metadata accessor for ResponseGenerationOverrides_AppPredicate, (uint64_t)&unk_23F626990);
  return sub_23F618A1C();
}

uint64_t sub_23F4BA3E8()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_AppPredicate);
}

uint64_t sub_23F4BA414()
{
  sub_23F3612C0(&qword_256E764D0, type metadata accessor for ResponseGenerationOverrides_AppPredicate, (uint64_t)&unk_23F626990);
  return sub_23F618A28();
}

uint64_t sub_23F4BA464()
{
  char v0;

  sub_23F4BA614();
  return v0 & 1;
}

uint64_t sub_23F4BA484()
{
  return sub_23F4C6ACC();
}

void sub_23F4BA4A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E75DE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_ToolPredicate(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256E75DE0);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E75DE0);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    sub_23F3612C0(&qword_256E76610, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F6277C8);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  }
}

void sub_23F4BA614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23F362ABC();
  v5 = v4;
  v7 = v6;
  sub_23F3C8624();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3E01D8(v9, v36);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v19 = sub_23F4DC6A8(v11, v12, v13, v14, v15, v16, v17, v18, v37);
  type metadata accessor for ResponseGenerationOverrides_StringPredicate(v19);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F4DC4C4(v21, v38);
  v22 = sub_23F35D2E8(&qword_256E766D0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F383EC4();
  sub_23F384838();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F4DC39C();
  MEMORY[0x24BDAC7A8](v26);
  v27 = (uint64_t *)sub_23F4DCD80();
  sub_23F4DC2FC(v7 + *((int *)v27 + 5), v3);
  sub_23F4DC2FC(v5 + *((int *)v27 + 5), v0);
  v28 = v1 + *(int *)(v22 + 48);
  sub_23F4DC2FC(v3, v1);
  sub_23F4DC2FC(v0, v28);
  v29 = sub_23F3ECB2C(v1);
  if (v32)
  {
    sub_23F4DC630(v0);
    sub_23F4DC630(v3);
    v31 = sub_23F3ECB2C(v28);
    if (v32)
    {
      sub_23F4DC280(v31, &qword_256E75DE0);
LABEL_11:
      sub_23F4DC544();
      sub_23F4DC758(v40, v5);
      sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F4DC394();
      sub_23F4DC8F4();
      sub_23F482DCC((uint64_t)v27);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F4DC428(v29, v30, &qword_256E75DE0);
  sub_23F3ECB2C(v28);
  if (v32)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v3);
    sub_23F4DC688(v33, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
LABEL_9:
    sub_23F4DC280(v31, &qword_256E766D0);
    goto LABEL_12;
  }
  sub_23F4DCA5C(v28, v39);
  sub_23F4B5028();
  v35 = v34;
  sub_23F4DC534(v39);
  v27 = &qword_256E75DE0;
  sub_23F383838(v0);
  sub_23F383838(v3);
  sub_23F4DC534(v2);
  sub_23F383838(v1);
  if ((v35 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F4DCC94();
  sub_23F362948();
}

uint64_t sub_23F4BA87C()
{
  return sub_23F4B21FC();
}

unint64_t sub_23F4BA8A0()
{
  return 0xD00000000000002BLL;
}

void sub_23F4BA8BC()
{
  sub_23F4BA0F4();
}

void sub_23F4BA8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BE034(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F4BA4A4);
}

uint64_t sub_23F4BA90C()
{
  sub_23F3612C0(&qword_256E76800, type metadata accessor for ResponseGenerationOverrides_ToolPredicate, (uint64_t)&unk_23F6267F0);
  return sub_23F61898C();
}

uint64_t sub_23F4BA95C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EFA8, (uint64_t)&unk_256E80130);
}

uint64_t sub_23F4BA978()
{
  sub_23F3612C0(&qword_256E764B0, type metadata accessor for ResponseGenerationOverrides_ToolPredicate, (uint64_t)&unk_23F626828);
  return sub_23F618A1C();
}

uint64_t sub_23F4BA9B8()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ToolPredicate);
}

uint64_t sub_23F4BA9E4()
{
  sub_23F3612C0(&qword_256E764B0, type metadata accessor for ResponseGenerationOverrides_ToolPredicate, (uint64_t)&unk_23F626828);
  return sub_23F618A28();
}

uint64_t sub_23F4BAA34()
{
  char v0;

  sub_23F4BA614();
  return v0 & 1;
}

uint64_t sub_23F4BAA54()
{
  return sub_23F4C6ACC();
}

void sub_23F4BAA74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E766F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_ActionPredicate(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256E766F8);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E766F8);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate);
    sub_23F3612C0(&qword_256E765D0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate, (uint64_t)&unk_23F6274D0);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate);
  }
}

void sub_23F4BABE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23F362ABC();
  v5 = v4;
  v7 = v6;
  sub_23F3C8624();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3E01D8(v9, v36);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v19 = sub_23F4DC6A8(v11, v12, v13, v14, v15, v16, v17, v18, v37);
  type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(v19);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F4DC4C4(v21, v38);
  v22 = (uint64_t *)sub_23F35D2E8(&qword_256E766F0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F383EC4();
  sub_23F3C87F8();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F4DC39C();
  MEMORY[0x24BDAC7A8](v26);
  v27 = sub_23F4DC8E0();
  v28 = type metadata accessor for ResponseGenerationOverrides_ActionPredicate(v27);
  sub_23F4DC2E4(v7 + *(int *)(v28 + 20), v3);
  sub_23F4DC2E4(v5 + *(int *)(v28 + 20), v0);
  sub_23F4DC2C0();
  sub_23F4DC2E4(v0, (uint64_t)v22);
  v29 = sub_23F3ECB2C(v1);
  if (v32)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v3);
    v31 = sub_23F3ECB2C((uint64_t)v22);
    if (v32)
    {
      sub_23F4DC280(v31, &qword_256E766F8);
LABEL_11:
      sub_23F4DC544();
      sub_23F4DC758(v40, v5);
      sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F4DC394();
      sub_23F4DC8F4();
      sub_23F482DCC((uint64_t)v22);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F4DC428(v29, v30, &qword_256E766F8);
  sub_23F3ECB2C((uint64_t)v22);
  if (v32)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v3);
    sub_23F4DC688(v33, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate);
LABEL_9:
    sub_23F4DC280(v31, &qword_256E766F0);
    goto LABEL_12;
  }
  sub_23F4DC3C0((uint64_t)v22);
  sub_23F4B5CE4();
  v35 = v34;
  sub_23F3C8574(v39);
  v22 = &qword_256E766F8;
  sub_23F383838(v0);
  sub_23F383838(v3);
  sub_23F3C8574(v2);
  sub_23F383838(v1);
  if ((v35 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F4DCC94();
  sub_23F362948();
}

uint64_t sub_23F4BAE3C()
{
  return sub_23F4B21FC();
}

unint64_t sub_23F4BAE60()
{
  return 0xD00000000000002DLL;
}

void sub_23F4BAE7C()
{
  sub_23F4BA0F4();
}

void sub_23F4BAEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BE034(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F4BAA74);
}

uint64_t sub_23F4BAECC()
{
  sub_23F3612C0(&qword_256E76808, type metadata accessor for ResponseGenerationOverrides_ActionPredicate, (uint64_t)&unk_23F626688);
  return sub_23F61898C();
}

uint64_t sub_23F4BAF1C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EFB0, (uint64_t)&unk_256E80148);
}

uint64_t sub_23F4BAF38()
{
  sub_23F3612C0(&qword_256E76490, type metadata accessor for ResponseGenerationOverrides_ActionPredicate, (uint64_t)&unk_23F6266C0);
  return sub_23F618A1C();
}

uint64_t sub_23F4BAF78()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ActionPredicate);
}

uint64_t sub_23F4BAFA4()
{
  sub_23F3612C0(&qword_256E76490, type metadata accessor for ResponseGenerationOverrides_ActionPredicate, (uint64_t)&unk_23F6266C0);
  return sub_23F618A28();
}

uint64_t sub_23F4BAFF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E80160);
  sub_23F361498(v0, (uint64_t)qword_256E80160);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61E980;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "manifest_values";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "returned_collection_size";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4BB148()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F362C98();
  v1 = sub_23F4DC140();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        sub_23F4DC6D4();
        sub_23F4BDA44();
      }
      else if (v1 == 1)
      {
        sub_23F4DC954();
      }
      v1 = sub_23F4DC2D8();
    }
  }
  sub_23F362870();
}

void sub_23F4BB1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;

  sub_23F4DC8AC(a1, a2, a3, a4);
  if (!v4)
  {
    sub_23F4DCE40();
    sub_23F4DC638();
  }
  sub_23F4DD07C();
}

void sub_23F4BB210(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E766F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256E766F8);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E766F8);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate);
    sub_23F3612C0(&qword_256E765D0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate, (uint64_t)&unk_23F6274D0);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate);
  }
}

void sub_23F4BB380(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E76708);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256E76708);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E76708);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
    sub_23F3612C0(&qword_256E76630, type metadata accessor for ResponseGenerationOverrides_IntPredicate, (uint64_t)&unk_23F627958);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
  }
}

void sub_23F4BB4F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  sub_23F362ABC();
  v88 = v5;
  v7 = v6;
  v8 = sub_23F3C8624();
  v79 = *(_QWORD *)(v8 - 8);
  v80 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  v78 = (uint64_t)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v11);
  v77 = (uint64_t)&v75 - v12;
  v13 = sub_23F39C56C();
  v85 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(v13);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F4DC84C(v15, v75);
  v82 = sub_23F35D2E8(&qword_256E76700);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F44D458(v17, v75);
  sub_23F35D2E8(&qword_256E76708);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v18);
  v81 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v20);
  v83 = (uint64_t)&v75 - v21;
  sub_23F383588();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v31 = sub_23F4DC690(v23, v24, v25, v26, v27, v28, v29, v30, v75);
  v32 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(v31);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F3845CC();
  v34 = sub_23F35D2E8(&qword_256E766F0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3B17A4();
  sub_23F35D2E8(&qword_256E766F8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F4DC918();
  MEMORY[0x24BDAC7A8](v38);
  v39 = sub_23F4DD054();
  v40 = type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate(v39);
  v41 = *(int *)(v40 + 20);
  v87 = v7;
  sub_23F4DCABC(v7 + v41, v2);
  sub_23F4DCABC(v88 + *(int *)(v40 + 20), v0);
  v42 = v1 + *(int *)(v34 + 48);
  sub_23F4DCABC(v2, v1);
  sub_23F4DCABC(v0, v42);
  v43 = sub_23F383740(v1, 1, v32);
  if (v46)
  {
    sub_23F4DC53C(v0);
    sub_23F4DC53C(v2);
    v45 = sub_23F383740(v42, 1, v32);
    if (v46)
    {
      sub_23F4DCF08(v45, &qword_256E766F8);
      goto LABEL_11;
    }
LABEL_9:
    v48 = &qword_256E766F0;
    v49 = v1;
LABEL_20:
    sub_23F3625D8(v49, v48);
    goto LABEL_21;
  }
  sub_23F4DD0B4(v43, v44, &qword_256E766F8);
  sub_23F383740(v42, 1, v32);
  if (v46)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v2);
    sub_23F4DC688(v47, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate);
    goto LABEL_9;
  }
  sub_23F4DCD78(v42, v3);
  sub_23F384A14();
  sub_23F4B5CE4();
  v51 = v50;
  sub_23F482558(v3);
  sub_23F4DC53C(v0);
  sub_23F4DC53C(v2);
  sub_23F482558(v4);
  sub_23F4DC53C(v1);
  if ((v51 & 1) == 0)
    goto LABEL_21;
LABEL_11:
  v52 = v87;
  v53 = v84;
  sub_23F4DC2FC(v87 + *(int *)(v40 + 24), v84);
  v54 = v88;
  v55 = v83;
  sub_23F4DC2FC(v88 + *(int *)(v40 + 24), v83);
  v56 = v86;
  v57 = v86 + *(int *)(v82 + 48);
  sub_23F4DC2FC(v53, v86);
  sub_23F4DC2FC(v55, v57);
  v58 = v85;
  v59 = sub_23F383740(v56, 1, v85);
  if (v46)
  {
    sub_23F4DC630(v55);
    sub_23F4DC630(v53);
    v61 = sub_23F383740(v57, 1, v58);
    if (v46)
    {
      sub_23F4DCE84(v61, &qword_256E76708);
LABEL_23:
      v74 = v77;
      sub_23F4DCA54(v77, v52);
      sub_23F4DCA54(v78, v54);
      sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F4DC44C();
      sub_23F4DC598();
      sub_23F4DCAF4(v74);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  sub_23F4DCF9C(v59, v60, &qword_256E76708);
  sub_23F383740(v57, 1, v58);
  if (v62)
  {
    sub_23F4DC508(v55);
    sub_23F4DC508(v53);
    sub_23F3663AC(v40, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
LABEL_19:
    v48 = &qword_256E76700;
    v49 = v56;
    goto LABEL_20;
  }
  v63 = v76;
  sub_23F4DCA5C(v57, v76);
  v64 = sub_23F3848C0();
  sub_23F4B4914(v64, v65, v66, v67, v68, v69, v70, v71, v75, v76);
  v73 = v72;
  sub_23F4DC534(v63);
  sub_23F38F900(v55);
  sub_23F38F900(v53);
  sub_23F4DC534(v40);
  sub_23F38F900(v56);
  if ((v73 & 1) != 0)
    goto LABEL_23;
LABEL_21:
  sub_23F4DCC94();
  sub_23F362948();
}

uint64_t sub_23F4BB99C()
{
  return sub_23F4B222C();
}

unint64_t sub_23F4BB9C8()
{
  return 0xD00000000000003BLL;
}

void sub_23F4BB9E4()
{
  sub_23F4BB148();
}

void sub_23F4BB9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BB1E0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F4BB210);
}

uint64_t sub_23F4BBA1C()
{
  sub_23F3612C0(&qword_256E76810, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate, (uint64_t)&unk_23F626520);
  return sub_23F61898C();
}

uint64_t sub_23F4BBA6C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EFB8, (uint64_t)qword_256E80160);
}

uint64_t sub_23F4BBA88()
{
  sub_23F3612C0(&qword_256E76470, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate, (uint64_t)&unk_23F626558);
  return sub_23F618A1C();
}

uint64_t sub_23F4BBAC8()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate);
}

uint64_t sub_23F4BBAF4()
{
  sub_23F3612C0(&qword_256E76470, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate, (uint64_t)&unk_23F626558);
  return sub_23F618A28();
}

void sub_23F4BBB48(uint64_t a1)
{
  sub_23F4C5F38(a1, qword_256E80178);
}

unint64_t sub_23F4BBB54()
{
  return 0xD000000000000040;
}

uint64_t sub_23F4BBB70()
{
  sub_23F3612C0(&qword_256E76818, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate, (uint64_t)&unk_23F6263B8);
  return sub_23F61898C();
}

uint64_t sub_23F4BBBC0(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EFC0, (uint64_t)qword_256E80178);
}

uint64_t sub_23F4BBBDC()
{
  sub_23F3612C0(&qword_256E76450, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate, (uint64_t)&unk_23F6263F0);
  return sub_23F618A1C();
}

uint64_t sub_23F4BBC1C()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate);
}

uint64_t sub_23F4BBC48()
{
  sub_23F3612C0(&qword_256E76450, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate, (uint64_t)&unk_23F6263F0);
  return sub_23F618A28();
}

uint64_t sub_23F4BBC98()
{
  return sub_23F4C6ACC();
}

void sub_23F4BBCB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E76768);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ListPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256E76768);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E76768);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
    sub_23F3612C0(&qword_256E765F0, type metadata accessor for ResponseGenerationOverrides_ListPredicate, (uint64_t)&unk_23F627638);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
  }
}

void sub_23F4BBE28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23F362ABC();
  v5 = v4;
  v7 = v6;
  sub_23F3C8624();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3E01D8(v9, v36);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v19 = sub_23F4DC6A8(v11, v12, v13, v14, v15, v16, v17, v18, v37);
  type metadata accessor for ResponseGenerationOverrides_ListPredicate(v19);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F4DC4C4(v21, v38);
  v22 = sub_23F35D2E8(&qword_256E76760);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F383EC4();
  sub_23F384838();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F4DC39C();
  MEMORY[0x24BDAC7A8](v26);
  v27 = (uint64_t *)sub_23F4DCD80();
  sub_23F4DC2FC(v7 + *((int *)v27 + 5), v3);
  sub_23F4DC2FC(v5 + *((int *)v27 + 5), v0);
  v28 = v1 + *(int *)(v22 + 48);
  sub_23F4DC2FC(v3, v1);
  sub_23F4DC2FC(v0, v28);
  v29 = sub_23F3ECB2C(v1);
  if (v32)
  {
    sub_23F4DC630(v0);
    sub_23F4DC630(v3);
    v31 = sub_23F3ECB2C(v28);
    if (v32)
    {
      sub_23F4DC280(v31, &qword_256E76768);
LABEL_11:
      sub_23F4DC544();
      sub_23F4DC758(v40, v5);
      sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F4DC394();
      sub_23F4DC8F4();
      sub_23F482DCC((uint64_t)v27);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F4DC428(v29, v30, &qword_256E76768);
  sub_23F3ECB2C(v28);
  if (v32)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v3);
    sub_23F4DC688(v33, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
LABEL_9:
    sub_23F4DC280(v31, &qword_256E76760);
    goto LABEL_12;
  }
  sub_23F4DCA5C(v28, v39);
  sub_23F4B5CE4();
  v35 = v34;
  sub_23F4DC534(v39);
  v27 = &qword_256E76768;
  sub_23F383838(v0);
  sub_23F383838(v3);
  sub_23F4DC534(v2);
  sub_23F383838(v1);
  if ((v35 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F4DCC94();
  sub_23F362948();
}

uint64_t sub_23F4BC09C()
{
  return sub_23F4B21FC();
}

unint64_t sub_23F4BC0C0()
{
  return 0xD000000000000040;
}

void sub_23F4BC0DC()
{
  sub_23F4BA0F4();
}

void sub_23F4BC110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BE034(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F4BBCB8);
}

uint64_t sub_23F4BC12C()
{
  sub_23F3612C0(&qword_256E76820, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate, (uint64_t)&unk_23F626250);
  return sub_23F61898C();
}

uint64_t sub_23F4BC17C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EFC8, (uint64_t)&unk_256E80190);
}

uint64_t sub_23F4BC198()
{
  sub_23F3612C0(&qword_256E76430, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate, (uint64_t)&unk_23F626288);
  return sub_23F618A1C();
}

uint64_t sub_23F4BC1D8()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate);
}

uint64_t sub_23F4BC204()
{
  sub_23F3612C0(&qword_256E76430, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate, (uint64_t)&unk_23F626288);
  return sub_23F618A28();
}

uint64_t sub_23F4BC254()
{
  char v0;

  sub_23F4BBE28();
  return v0 & 1;
}

uint64_t sub_23F4BC274()
{
  return sub_23F4C6ACC();
}

void sub_23F4BC294(uint64_t a1@<X8>)
{
  sub_23F4B22C0(a1);
}

unint64_t sub_23F4BC2B0()
{
  return 0xD000000000000041;
}

void sub_23F4BC2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BE3C0(a1, a2, a3, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate);
}

void sub_23F4BC2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BE42C(a1, a2, a3, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate);
}

uint64_t sub_23F4BC304()
{
  sub_23F3612C0(&qword_256E76828, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate, (uint64_t)&unk_23F6260E8);
  return sub_23F61898C();
}

uint64_t sub_23F4BC354(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EFD0, (uint64_t)&unk_256E801A8);
}

uint64_t sub_23F4BC370()
{
  sub_23F3612C0(&qword_256E76410, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate, (uint64_t)&unk_23F626120);
  return sub_23F618A1C();
}

uint64_t sub_23F4BC3B0()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate);
}

uint64_t sub_23F4BC3DC()
{
  sub_23F3612C0(&qword_256E76410, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate, (uint64_t)&unk_23F626120);
  return sub_23F618A28();
}

#error "23F4BC43C: call analysis failed (funcsize=7)"

uint64_t sub_23F4BC44C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E801C0);
  sub_23F361498(v0, (uint64_t)qword_256E801C0);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61E980;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameter_id";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "parameter_value";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4BC5A0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);

  sub_23F4DCA38();
  v1 = sub_23F4DC140();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 3)
      {
        sub_23F4DCBE4();
        sub_23F4BDA44();
      }
      else if (v1 == 1)
      {
        v3 = sub_23F4DC6D4();
        sub_23F4BC620(v3, v4, v5, v6, v7);
      }
      v1 = sub_23F4DC2D8();
    }
  }
  sub_23F3F4040();
}

void sub_23F4BC620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  sub_23F4DC1A0(a1, a2, a3, a4, a5);
  sub_23F4DC464();
  sub_23F4DC270();
}

void sub_23F4BC648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  if (*(_QWORD *)(v5 + *(int *)(sub_23F4DC1A0(a1, a2, a3, a4, a5) + 20) + 8))
    sub_23F4DC4A4();
  sub_23F4DC270();
}

void sub_23F4BC68C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E75DE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256E75DE0);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E75DE0);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    sub_23F3612C0(&qword_256E76610, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F6277C8);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  }
}

uint64_t sub_23F4BC7FC()
{
  return sub_23F4B2284();
}

unint64_t sub_23F4BC820()
{
  return 0xD000000000000043;
}

void sub_23F4BC83C()
{
  sub_23F4BC5A0();
}

void sub_23F4BC850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BDA80(a1, a2, a3, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate);
}

uint64_t sub_23F4BC874()
{
  sub_23F3612C0(&qword_256E76830, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate, (uint64_t)&unk_23F625F80);
  return sub_23F61898C();
}

uint64_t sub_23F4BC8C4(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EFD8, (uint64_t)qword_256E801C0);
}

uint64_t sub_23F4BC8E0()
{
  sub_23F3612C0(&qword_256E763F0, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate, (uint64_t)&unk_23F625FB8);
  return sub_23F618A1C();
}

uint64_t sub_23F4BC920()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate);
}

uint64_t sub_23F4BC94C()
{
  sub_23F3612C0(&qword_256E763F0, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate, (uint64_t)&unk_23F625FB8);
  return sub_23F618A28();
}

uint64_t sub_23F4BC99C()
{
  char v0;

  sub_23F4BD454();
  return v0 & 1;
}

uint64_t sub_23F4BC9BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E801D8);
  sub_23F361498(v0, (uint64_t)qword_256E801D8);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61E980;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameter_id";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameter_values";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4BCB0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E76768);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ListPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256E76768);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E76768);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
    sub_23F3612C0(&qword_256E765F0, type metadata accessor for ResponseGenerationOverrides_ListPredicate, (uint64_t)&unk_23F627638);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
  }
}

void sub_23F4BCC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_23F362ABC();
  v42 = sub_23F3C8624();
  v45 = *(_QWORD *)(v42 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  v44 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = sub_23F4DC690(v9, v10, v11, v12, v13, v14, v15, v16, v42);
  v18 = type metadata accessor for ResponseGenerationOverrides_ListPredicate(v17);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3B1F34();
  v20 = sub_23F35D2E8(&qword_256E76760);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E76768);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F4DD0C0();
  MEMORY[0x24BDAC7A8](v24);
  v25 = sub_23F4DC8E0();
  type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate(v25);
  sub_23F4DCD28();
  if (!v28)
  {
    if (v26)
      goto LABEL_21;
LABEL_10:
    sub_23F4DCA4C(v46 + *(int *)(v1 + 24), v5);
    sub_23F4DCA4C(v47 + *(int *)(v1 + 24), v0);
    v32 = v2 + *(int *)(v20 + 48);
    sub_23F4DCA4C(v5, v2);
    sub_23F4DCA4C(v0, v32);
    v33 = sub_23F383740(v2, 1, v18);
    if (v31)
    {
      sub_23F38F900(v0);
      sub_23F38F900(v5);
      v35 = sub_23F383740(v32, 1, v18);
      if (v31)
      {
        sub_23F4DC280(v35, &qword_256E76768);
        goto LABEL_20;
      }
    }
    else
    {
      sub_23F4DC428(v33, v34, &qword_256E76768);
      sub_23F383740(v32, 1, v18);
      if (!v36)
      {
        sub_23F389CE4(v32);
        sub_23F4B5CE4();
        v39 = v38;
        sub_23F4DC910(v3);
        sub_23F383838(v0);
        sub_23F383838(v5);
        sub_23F4DC910(v4);
        sub_23F383838(v2);
        if ((v39 & 1) == 0)
          goto LABEL_21;
LABEL_20:
        v40 = v43;
        sub_23F4DC758(v43, v46);
        v41 = v44;
        sub_23F4DC758(v44, v47);
        sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_23F4DC394();
        sub_23F4DC500(v41);
        sub_23F4DC500(v40);
        goto LABEL_21;
      }
      sub_23F4DC508(v0);
      sub_23F4DC508(v5);
      sub_23F4DC688(v37, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
    }
    sub_23F4DC280(v35, &qword_256E76760);
    goto LABEL_21;
  }
  if (v26)
  {
    sub_23F4DC2EC(v27);
    v31 = v31 && v29 == v30;
    if (v31 || (sub_23F3C8510() & 1) != 0)
      goto LABEL_10;
  }
LABEL_21:
  sub_23F362948();
}

uint64_t sub_23F4BCF60()
{
  return sub_23F4B2284();
}

unint64_t sub_23F4BCF84()
{
  return 0xD000000000000045;
}

void sub_23F4BCFA0()
{
  sub_23F4BD274();
}

void sub_23F4BCFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BDA80(a1, a2, a3, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate);
}

uint64_t sub_23F4BCFF8()
{
  sub_23F3612C0(&qword_256E76838, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate, (uint64_t)&unk_23F625E18);
  return sub_23F61898C();
}

uint64_t sub_23F4BD048(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EFE0, (uint64_t)qword_256E801D8);
}

uint64_t sub_23F4BD064()
{
  sub_23F3612C0(&qword_256E763D0, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate, (uint64_t)&unk_23F625E50);
  return sub_23F618A1C();
}

uint64_t sub_23F4BD0A4()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate);
}

uint64_t sub_23F4BD0D0()
{
  sub_23F3612C0(&qword_256E763D0, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate, (uint64_t)&unk_23F625E50);
  return sub_23F618A28();
}

uint64_t sub_23F4BD124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E801F0);
  sub_23F361498(v0, (uint64_t)qword_256E801F0);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61E980;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameter_id";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameter_value";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4BD274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  sub_23F4DCA38();
  sub_23F4DC368(v6, v7);
  while (1)
  {
    v8 = sub_23F6189A4();
    if (v1 || (v9 & 1) != 0)
      break;
    if (v8 == 2)
    {
      sub_23F4DCBC0();
      sub_23F4BDA44();
    }
    else if (v8 == 1)
    {
      sub_23F4BC620(v0, v3, v5, v4, v2);
    }
    sub_23F384A14();
  }
  sub_23F3F4040();
}

void sub_23F4BD2E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E75DE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_256E75DE0);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E75DE0);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    sub_23F3612C0(&qword_256E76610, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F6277C8);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  }
}

void sub_23F4BD454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_23F362ABC();
  v6 = v5;
  v42 = sub_23F3C8624();
  v45 = *(_QWORD *)(v42 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  v44 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v18 = sub_23F4DC690(v10, v11, v12, v13, v14, v15, v16, v17, v42);
  type metadata accessor for ResponseGenerationOverrides_StringPredicate(v18);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3845CC();
  v20 = sub_23F35D2E8(&qword_256E766D0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E75DE0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F4DD0C0();
  MEMORY[0x24BDAC7A8](v24);
  v25 = sub_23F4DC8E0();
  ((void (*)(uint64_t))v6)(v25);
  sub_23F4DCD28();
  if (!v28)
  {
    if (v26)
      goto LABEL_21;
LABEL_10:
    sub_23F4DCA4C(v46 + *(int *)(v6 + 24), v4);
    sub_23F4DCA4C(v47 + *(int *)(v6 + 24), v0);
    v32 = v1 + *(int *)(v20 + 48);
    sub_23F4DCA4C(v4, v1);
    sub_23F4DCA4C(v0, v32);
    v33 = sub_23F3ECB2C(v1);
    if (v31)
    {
      sub_23F38F900(v0);
      sub_23F38F900(v4);
      v35 = sub_23F3ECB2C(v32);
      if (v31)
      {
        sub_23F4DC280(v35, &qword_256E75DE0);
        goto LABEL_20;
      }
    }
    else
    {
      sub_23F4DC428(v33, v34, &qword_256E75DE0);
      sub_23F3ECB2C(v32);
      if (!v36)
      {
        sub_23F4DD040(v32);
        sub_23F384A14();
        sub_23F4B5028();
        v39 = v38;
        sub_23F4DC910(v2);
        sub_23F383838(v0);
        sub_23F383838(v4);
        sub_23F4DC910(v3);
        sub_23F383838(v1);
        if ((v39 & 1) == 0)
          goto LABEL_21;
LABEL_20:
        v40 = v43;
        sub_23F4DC758(v43, v46);
        v41 = v44;
        sub_23F4DC758(v44, v47);
        sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_23F4DC394();
        sub_23F4DC500(v41);
        sub_23F4DC500(v40);
        goto LABEL_21;
      }
      sub_23F4DC508(v0);
      sub_23F4DC508(v4);
      sub_23F4DC688(v37, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    }
    sub_23F4DC280(v35, &qword_256E766D0);
    goto LABEL_21;
  }
  if (v26)
  {
    sub_23F4DC2EC(v27);
    v31 = v31 && v29 == v30;
    if (v31 || (sub_23F3C8510() & 1) != 0)
      goto LABEL_10;
  }
LABEL_21:
  sub_23F362948();
}

uint64_t sub_23F4BD714()
{
  return sub_23F4B2284();
}

unint64_t sub_23F4BD738()
{
  return 0xD000000000000041;
}

void sub_23F4BD754()
{
  sub_23F4BD274();
}

void sub_23F4BD788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BDA80(a1, a2, a3, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate);
}

uint64_t sub_23F4BD7AC()
{
  sub_23F3612C0(&qword_256E76840, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate, (uint64_t)&unk_23F625CB0);
  return sub_23F61898C();
}

uint64_t sub_23F4BD7FC(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EFE8, (uint64_t)qword_256E801F0);
}

uint64_t sub_23F4BD818()
{
  sub_23F3612C0(&qword_256E763B0, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate, (uint64_t)&unk_23F625CE8);
  return sub_23F618A1C();
}

uint64_t sub_23F4BD858()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate);
}

uint64_t sub_23F4BD884()
{
  sub_23F3612C0(&qword_256E763B0, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate, (uint64_t)&unk_23F625CE8);
  return sub_23F618A28();
}

uint64_t sub_23F4BD8D4()
{
  char v0;

  sub_23F4BD454();
  return v0 & 1;
}

uint64_t sub_23F4BD8F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E80208);
  sub_23F361498(v0, (uint64_t)qword_256E80208);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61E980;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameter_id";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameter_value";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4BDA44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F362C98();
  sub_23F4DC5D8(v0, v1, v2, v3, v4);
  sub_23F4DD18C();
  sub_23F4DC5C4();
  sub_23F4DCA9C();
  sub_23F362870();
}

void sub_23F4BDA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  sub_23F4DC98C(a1, a2, a3, a4);
  if (!v4)
  {
    sub_23F4DCE40();
    sub_23F4DC638();
  }
  sub_23F4DD07C();
}

void sub_23F4BDAB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t found;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E75DE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  found = type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate(0);
  sub_23F3D96EC(a1 + *(int *)(found + 24), (uint64_t)v4, &qword_256E75DE0);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E75DE0);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    sub_23F3612C0(&qword_256E76610, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F6277C8);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  }
}

uint64_t sub_23F4BDC20()
{
  return sub_23F4B2284();
}

unint64_t sub_23F4BDC44()
{
  return 0xD000000000000049;
}

void sub_23F4BDC60()
{
  sub_23F4BD274();
}

void sub_23F4BDC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BDA80(a1, a2, a3, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate);
}

uint64_t sub_23F4BDCB8()
{
  sub_23F3612C0(&qword_256E76848, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate, (uint64_t)&unk_23F625B48);
  return sub_23F61898C();
}

uint64_t sub_23F4BDD08(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EFF0, (uint64_t)qword_256E80208);
}

uint64_t sub_23F4BDD24()
{
  sub_23F3612C0(&qword_256E76390, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate, (uint64_t)&unk_23F625B80);
  return sub_23F618A1C();
}

uint64_t sub_23F4BDD64()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate);
}

uint64_t sub_23F4BDD90()
{
  sub_23F3612C0(&qword_256E76390, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate, (uint64_t)&unk_23F625B80);
  return sub_23F618A28();
}

uint64_t sub_23F4BDDE0()
{
  char v0;

  sub_23F4BD454();
  return v0 & 1;
}

uint64_t sub_23F4BDE00()
{
  return sub_23F4C6ACC();
}

void sub_23F4BDE20(uint64_t a1@<X8>)
{
  sub_23F4B22C0(a1);
}

unint64_t sub_23F4BDE3C()
{
  return 0xD00000000000003FLL;
}

void sub_23F4BDE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BE3C0(a1, a2, a3, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate);
}

void sub_23F4BDE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BE42C(a1, a2, a3, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate);
}

uint64_t sub_23F4BDE90()
{
  sub_23F3612C0(&qword_256E76850, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate, (uint64_t)&unk_23F6259E0);
  return sub_23F61898C();
}

uint64_t sub_23F4BDEE0(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6EFF8, (uint64_t)&unk_256E80220);
}

uint64_t sub_23F4BDEFC()
{
  sub_23F3612C0(&qword_256E76370, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate, (uint64_t)&unk_23F625A18);
  return sub_23F618A1C();
}

uint64_t sub_23F4BDF3C()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate);
}

uint64_t sub_23F4BDF68()
{
  sub_23F3612C0(&qword_256E76370, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate, (uint64_t)&unk_23F625A18);
  return sub_23F618A28();
}

#error "23F4BDFC8: call analysis failed (funcsize=7)"

uint64_t sub_23F4BDFD8()
{
  return sub_23F4C6ACC();
}

void sub_23F4BDFF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F362C98();
  sub_23F4DC5D8(v0, v1, v2, v3, v4);
  sub_23F4DD18C();
  sub_23F4DC5C4();
  sub_23F4DCA9C();
  sub_23F362870();
}

void sub_23F4BE034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;

  sub_23F4DC8AC(a1, a2, a3, a4);
  if (!v4)
    sub_23F4DC638();
  sub_23F4DCDC4();
}

void sub_23F4BE058(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E76768);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ListPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate(0);
  sub_23F3D96EC(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_256E76768);
  if (sub_23F36195C((uint64_t)v4, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E76768);
  }
  else
  {
    sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
    sub_23F3612C0(&qword_256E765F0, type metadata accessor for ResponseGenerationOverrides_ListPredicate, (uint64_t)&unk_23F627638);
    sub_23F618A70();
    sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
  }
}

uint64_t sub_23F4BE1C8()
{
  return sub_23F4B21FC();
}

unint64_t sub_23F4BE1EC()
{
  return 0xD000000000000041;
}

void sub_23F4BE208()
{
  sub_23F4BA0F4();
}

void sub_23F4BE23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BE034(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F4BE058);
}

uint64_t sub_23F4BE258()
{
  sub_23F3612C0(&qword_256E76858, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate, (uint64_t)&unk_23F625878);
  return sub_23F61898C();
}

uint64_t sub_23F4BE2A8(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6F000, (uint64_t)&unk_256E80238);
}

uint64_t sub_23F4BE2C4()
{
  sub_23F3612C0(&qword_256E76350, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate, (uint64_t)&unk_23F6258B0);
  return sub_23F618A1C();
}

uint64_t sub_23F4BE304()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate);
}

uint64_t sub_23F4BE330()
{
  sub_23F3612C0(&qword_256E76350, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate, (uint64_t)&unk_23F6258B0);
  return sub_23F618A28();
}

uint64_t sub_23F4BE380()
{
  char v0;

  sub_23F4BBE28();
  return v0 & 1;
}

uint64_t sub_23F4BE3A0()
{
  return sub_23F4C6ACC();
}

void sub_23F4BE3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  char v10;

  sub_23F4DC884(a1, a2);
  while (1)
  {
    v9 = sub_23F6189A4();
    if (v5 || (v10 & 1) != 0)
      break;
    if (v9 == 1)
      sub_23F4BC620(v4, v4, a2, a3, a4);
  }
  sub_23F4DC270();
}

void sub_23F4BE42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  sub_23F4DC98C(a1, a2, a3, a4);
  if (!v4)
    sub_23F4DC638();
  sub_23F4DCDC4();
}

void sub_23F4BE450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD);
  void (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  void (*v39)(char *, uint64_t, uint64_t);

  sub_23F383988();
  a17 = v21;
  a18 = v22;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  sub_23F3C8624();
  sub_23F4DC6EC();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F4DC1DC();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&a9 - v31;
  v24(0);
  sub_23F4DC3AC();
  if (!v35)
  {
    if (v33)
      goto LABEL_12;
    goto LABEL_11;
  }
  if (v33)
  {
    sub_23F4DC2EC(v34);
    v38 = v38 && v36 == v37;
    if (v38 || (sub_23F3C8510() & 1) != 0)
    {
LABEL_11:
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
      v39(v32, v28, v19);
      v39((char *)v18, v26, v19);
      sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F4DC25C();
      sub_23F4DC9D8(v18);
      sub_23F4DC9D8((uint64_t)v32);
    }
  }
LABEL_12:
  sub_23F383568();
}

void sub_23F4BE54C(uint64_t a1@<X8>)
{
  sub_23F4B22C0(a1);
}

unint64_t sub_23F4BE568()
{
  return 0xD000000000000035;
}

void sub_23F4BE584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BE3C0(a1, a2, a3, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate);
}

void sub_23F4BE5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4BE42C(a1, a2, a3, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate);
}

uint64_t sub_23F4BE5BC()
{
  sub_23F3612C0(&qword_256E76860, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate, (uint64_t)&unk_23F625710);
  return sub_23F61898C();
}

uint64_t sub_23F4BE60C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6F008, (uint64_t)&unk_256E80250);
}

uint64_t sub_23F4BE628()
{
  sub_23F3612C0(&qword_256E76330, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate, (uint64_t)&unk_23F625748);
  return sub_23F618A1C();
}

uint64_t sub_23F4BE668()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate);
}

uint64_t sub_23F4BE694()
{
  sub_23F3612C0(&qword_256E76330, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate, (uint64_t)&unk_23F625748);
  return sub_23F618A28();
}

#error "23F4BE6F4: call analysis failed (funcsize=7)"

uint64_t sub_23F4BE704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E80268);
  sub_23F361498(v0, (uint64_t)qword_256E80268);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61D990;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "positive_conjunction";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "positive_disjunction";
  *((_QWORD *)v11 + 1) = 20;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "negative_conjunction";
  *((_QWORD *)v13 + 1) = 20;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)((char *)v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "negative_disjunction";
  *((_QWORD *)v15 + 1) = 20;
  v15[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4BE8BC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F4DCA38();
  v1 = sub_23F4DC140();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          sub_23F4DCA64();
          break;
        case 2:
          sub_23F4DC22C();
          sub_23F4BE9D0();
          break;
        case 3:
          sub_23F4DC22C();
          sub_23F4BEA50();
          break;
        case 4:
          sub_23F4BEAD0();
          break;
        default:
          break;
      }
      v1 = sub_23F4DC2D8();
    }
  }
  sub_23F3F4040();
}

void sub_23F4BE98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F362C98();
  sub_23F4DC5D8(v0, v1, v2, v3, v4);
  sub_23F4DC5C4();
  sub_23F4DCF8C();
  sub_23F362870();
}

uint64_t sub_23F4BE9D0()
{
  type metadata accessor for ResponseGenerationOverrides_Rule.Predicate(0);
  sub_23F3612C0(&qword_256E762F0, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate, (uint64_t)&unk_23F625478);
  return sub_23F6189F8();
}

uint64_t sub_23F4BEA50()
{
  type metadata accessor for ResponseGenerationOverrides_Rule.Predicate(0);
  sub_23F3612C0(&qword_256E762F0, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate, (uint64_t)&unk_23F625478);
  return sub_23F6189F8();
}

void sub_23F4BEAD0()
{
  void (*v0)(_QWORD);

  sub_23F362C98();
  v0(0);
  sub_23F4DC5C4();
  sub_23F4DCF8C();
  sub_23F362870();
}

void sub_23F4BEB2C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F4DD198();
  if (!*(_QWORD *)(*v1 + 16)
    || (sub_23F4DCFAC(),
        sub_23F3612C0(&qword_256E762F0, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate, (uint64_t)&unk_23F625478), sub_23F4DC65C(), !v0))
  {
    if (!*(_QWORD *)(v1[1] + 16)
      || (sub_23F4DCFAC(),
          sub_23F3612C0(&qword_256E762F0, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate, (uint64_t)&unk_23F625478), sub_23F4DD168(), sub_23F4DC65C(), !v0))
    {
      if (!*(_QWORD *)(v1[2] + 16)
        || (sub_23F4DCFAC(),
            sub_23F3612C0(&qword_256E762F0, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate, (uint64_t)&unk_23F625478), sub_23F4DD168(), sub_23F4DC65C(), !v0))
      {
        if (!*(_QWORD *)(v1[3] + 16)
          || (sub_23F4DCFAC(),
              sub_23F3612C0(&qword_256E762F0, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate, (uint64_t)&unk_23F625478), sub_23F4DD168(), sub_23F4DC65C(), !v0))
        {
          type metadata accessor for ResponseGenerationOverrides_Rule(0);
          sub_23F4DCF10();
          sub_23F61895C();
        }
      }
    }
  }
  sub_23F450958();
}

void sub_23F4BEC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;

  sub_23F383988();
  sub_23F3C8624();
  sub_23F4DC6EC();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F4DC1DC();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F4DCEC0();
  sub_23F3C4ED4();
  if ((v3 & 1) != 0)
  {
    sub_23F3C4ED4();
    if ((v4 & 1) != 0)
    {
      sub_23F3C4ED4();
      if ((v5 & 1) != 0)
      {
        sub_23F3C4ED4();
        if ((v6 & 1) != 0)
        {
          v7 = type metadata accessor for ResponseGenerationOverrides_Rule(0);
          sub_23F4DC5F4(*(int *)(v7 + 32));
          sub_23F4DC47C(*(int *)(v7 + 32));
          sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          sub_23F4DC25C();
          sub_23F4DC9B0();
          sub_23F4DCC24(v0);
        }
      }
    }
  }
  sub_23F383568();
}

unint64_t sub_23F4BED64()
{
  return 0xD000000000000022;
}

uint64_t sub_23F4BED80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_23F4BEDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 32);
  v5 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_23F4BEE00())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void sub_23F4BEE14()
{
  sub_23F4BE8BC();
}

void sub_23F4BEE28()
{
  sub_23F4BEB2C();
}

uint64_t sub_23F4BEE3C()
{
  sub_23F3612C0(&qword_256E76868, type metadata accessor for ResponseGenerationOverrides_Rule, (uint64_t)&unk_23F6255A8);
  return sub_23F61898C();
}

uint64_t sub_23F4BEE8C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6F010, (uint64_t)qword_256E80268);
}

uint64_t sub_23F4BEEA8()
{
  sub_23F3612C0(&qword_256E76310, type metadata accessor for ResponseGenerationOverrides_Rule, (uint64_t)&unk_23F6255E0);
  return sub_23F618A1C();
}

uint64_t sub_23F4BEEE8()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_Rule);
}

uint64_t sub_23F4BEF14()
{
  sub_23F3612C0(&qword_256E76310, type metadata accessor for ResponseGenerationOverrides_Rule, (uint64_t)&unk_23F6255E0);
  return sub_23F618A28();
}

uint64_t sub_23F4BEF68()
{
  uint64_t result;

  result = sub_23F61C280();
  qword_256E80280 = 0xD000000000000022;
  *(_QWORD *)algn_256E80288 = 0x800000023F637BE0;
  return result;
}

uint64_t *sub_23F4BEFD4()
{
  if (qword_256E6F018 != -1)
    swift_once();
  return &qword_256E80280;
}

uint64_t sub_23F4BF014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E80290);
  sub_23F361498(v0, (uint64_t)qword_256E80290);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F628480;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "app_predicate";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "tool_predicate";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "action_predicate";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "action_success_outcome_predicate";
  *((_QWORD *)v15 + 1) = 32;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "action_confirmation_outcome_predicate";
  *((_QWORD *)v17 + 1) = 37;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "tool_disambiguation_outcome_predicate";
  *((_QWORD *)v19 + 1) = 37;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "parameter_needs_value_outcome_predicate";
  *((_QWORD *)v21 + 1) = 39;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "parameter_confirmation_outcome_predicate";
  *((_QWORD *)v23 + 1) = 40;
  v23[16] = 2;
  v10();
  v24 = (_QWORD *)(v6 + 8 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "parameter_disambiguation_outcome_predicate";
  *((_QWORD *)v25 + 1) = 42;
  v25[16] = 2;
  v10();
  v26 = (_QWORD *)(v6 + 9 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "parameter_not_allowed_outcome_predicate";
  *((_QWORD *)v27 + 1) = 39;
  v27[16] = 2;
  v10();
  v28 = (_QWORD *)(v6 + 10 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "parameter_candidates_not_found_outcome_predicate";
  *((_QWORD *)v29 + 1) = 48;
  v29[16] = 2;
  v10();
  v30 = (_QWORD *)(v6 + 11 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "action_requirement_outcome_predicate";
  *((_QWORD *)v31 + 1) = 36;
  v31[16] = 2;
  v10();
  v32 = (_QWORD *)(v6 + 12 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "value_disambiguation_outcome_predicate";
  *((_QWORD *)v33 + 1) = 38;
  v33[16] = 2;
  v10();
  v34 = (_QWORD *)(v6 + 13 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "failure_outcome_predicate";
  *((_QWORD *)v35 + 1) = 25;
  v35[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4BF3EC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = sub_23F4DC140();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          v3 = sub_23F4DC170();
          sub_23F4BF520(v3, v4, v5, v6);
          break;
        case 2:
          v7 = sub_23F4DC170();
          sub_23F4BF908(v7, v8, v9, v10);
          break;
        case 3:
          v11 = sub_23F4DC170();
          sub_23F4BFCF4(v11, v12, v13, v14);
          break;
        case 4:
          v15 = sub_23F4DC170();
          sub_23F4C00E0(v15, v16, v17, v18);
          break;
        case 5:
          v19 = sub_23F4DC170();
          sub_23F4C04CC(v19, v20, v21, v22);
          break;
        case 6:
          v23 = sub_23F4DC170();
          sub_23F4C08B8(v23, v24, v25, v26);
          break;
        case 7:
          v27 = sub_23F4DC170();
          sub_23F4C0CA4(v27, v28, v29, v30);
          break;
        case 8:
          v31 = sub_23F4DC170();
          sub_23F4C1090(v31, v32, v33, v34);
          break;
        case 9:
          v35 = sub_23F4DC170();
          sub_23F4C147C(v35, v36, v37, v38);
          break;
        case 10:
          v39 = sub_23F4DC170();
          sub_23F4C1868(v39, v40, v41, v42);
          break;
        case 11:
          v43 = sub_23F4DC170();
          sub_23F4C1C54(v43, v44, v45, v46);
          break;
        case 12:
          v47 = sub_23F4DC170();
          sub_23F4C2040(v47, v48, v49, v50);
          break;
        case 13:
          v51 = sub_23F4DC170();
          sub_23F4C242C(v51, v52, v53, v54);
          break;
        case 14:
          v55 = sub_23F4DC170();
          sub_23F4C2818(v55, v56, v57, v58);
          break;
        default:
          break;
      }
      v1 = sub_23F4DC2D8();
    }
  }
  sub_23F4DC270();
}

void sub_23F4BF520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_AppPredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E76878);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
    else
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E76878);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_AppPredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_AppPredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E764D0, type metadata accessor for ResponseGenerationOverrides_AppPredicate, (uint64_t)&unk_23F626990);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E76878);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E76878);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E76878);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_AppPredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E76878);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_AppPredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4BF908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_ToolPredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E76880);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E76880);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_ToolPredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_ToolPredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E764B0, type metadata accessor for ResponseGenerationOverrides_ToolPredicate, (uint64_t)&unk_23F626828);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E76880);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E76880);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E76880);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_ToolPredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E76880);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_ToolPredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4BFCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_ActionPredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E76888);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E76888);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_ActionPredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_ActionPredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76490, type metadata accessor for ResponseGenerationOverrides_ActionPredicate, (uint64_t)&unk_23F6266C0);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E76888);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E76888);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E76888);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_ActionPredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E76888);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_ActionPredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4C00E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E76890);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E76890);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76470, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate, (uint64_t)&unk_23F626558);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E76890);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E76890);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E76890);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E76890);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4C04CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E76898);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E76898);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76450, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate, (uint64_t)&unk_23F6263F0);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E76898);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E76898);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E76898);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E76898);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4C08B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E768A0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E768A0);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76430, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate, (uint64_t)&unk_23F626288);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E768A0);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E768A0);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E768A0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E768A0);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4C0CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E768A8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E768A8);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76410, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate, (uint64_t)&unk_23F626120);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E768A8);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E768A8);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E768A8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E768A8);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4C1090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E768B0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E768B0);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E763F0, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate, (uint64_t)&unk_23F625FB8);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E768B0);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E768B0);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E768B0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E768B0);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4C147C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E768B8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E768B8);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E763D0, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate, (uint64_t)&unk_23F625E50);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E768B8);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E768B8);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E768B8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E768B8);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4C1868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E768C0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E768C0);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E763B0, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate, (uint64_t)&unk_23F625CE8);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E768C0);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E768C0);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E768C0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E768C0);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4C1C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t found;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  found = type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](found);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E768C8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, found);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E768C8);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, found);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76390, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate, (uint64_t)&unk_23F625B80);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E768C8);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E768C8);
  if (sub_23F36195C((uint64_t)v22, 1, found) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E768C8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E768C8);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4C2040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E768D0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E768D0);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76370, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate, (uint64_t)&unk_23F625A18);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E768D0);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E768D0);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E768D0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E768D0);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4C242C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E768D8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E768D8);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76350, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate, (uint64_t)&unk_23F6258B0);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E768D8);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E768D8);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E768D8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E768D8);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4C2818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E768E0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E71158);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E71158);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E768E0);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76330, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate, (uint64_t)&unk_23F625748);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E768E0);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E768E0);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E768E0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E768E0);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E71158);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

#error "23F4C2C38: call analysis failed (funcsize=32)"

void sub_23F4C2D64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_AppPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_AppPredicate);
      sub_23F3612C0(&qword_256E764D0, type metadata accessor for ResponseGenerationOverrides_AppPredicate, (uint64_t)&unk_23F626990);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_AppPredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C2EF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ToolPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ToolPredicate);
      sub_23F3612C0(&qword_256E764B0, type metadata accessor for ResponseGenerationOverrides_ToolPredicate, (uint64_t)&unk_23F626828);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ToolPredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C3090(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ActionPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ActionPredicate);
      sub_23F3612C0(&qword_256E76490, type metadata accessor for ResponseGenerationOverrides_ActionPredicate, (uint64_t)&unk_23F6266C0);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ActionPredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C3228(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate);
      sub_23F3612C0(&qword_256E76470, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate, (uint64_t)&unk_23F626558);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C33C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate);
      sub_23F3612C0(&qword_256E76450, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate, (uint64_t)&unk_23F6263F0);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C3558(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate);
      sub_23F3612C0(&qword_256E76430, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate, (uint64_t)&unk_23F626288);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C36F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate);
      sub_23F3612C0(&qword_256E76410, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate, (uint64_t)&unk_23F626120);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C3888(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate);
      sub_23F3612C0(&qword_256E763F0, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate, (uint64_t)&unk_23F625FB8);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C3A20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate);
      sub_23F3612C0(&qword_256E763D0, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate, (uint64_t)&unk_23F625E50);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C3BB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate);
      sub_23F3612C0(&qword_256E763B0, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate, (uint64_t)&unk_23F625CE8);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C3D50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t found;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  found = type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate(0);
  MEMORY[0x24BDAC7A8](found);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate);
      sub_23F3612C0(&qword_256E76390, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate, (uint64_t)&unk_23F625B80);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C3EE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate);
      sub_23F3612C0(&qword_256E76370, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate, (uint64_t)&unk_23F625A18);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C4080(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate);
      sub_23F3612C0(&qword_256E76350, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate, (uint64_t)&unk_23F6258B0);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C4218(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E71158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E71158);
  v8 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E71158);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate);
      sub_23F3612C0(&qword_256E76330, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate, (uint64_t)&unk_23F625748);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
  }
  __break(1u);
}

void sub_23F4C43B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33[6];

  sub_23F362ABC();
  v6 = v5;
  v33[0] = sub_23F3C8624();
  v33[5] = *(_QWORD *)(v33[0] - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3E01D8(v8, v33[0]);
  MEMORY[0x24BDAC7A8](v9);
  v33[2] = (uint64_t)v33 - v10;
  sub_23F4DD15C();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3845CC();
  v12 = sub_23F35D2E8(&qword_256E71160);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F383EC4();
  sub_23F3C87F8();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F4DC39C();
  v17 = MEMORY[0x24BDAC7A8](v16);
  sub_23F4DC288(v17, v18, v19, v20, v21, v22, v23, v24, v33[0]);
  v33[3] = v6;
  sub_23F4DC2E4(v6, v0);
  sub_23F4DC2C0();
  sub_23F4DC2E4(v0, v12);
  v25 = sub_23F3ECB2C(v1);
  if (v28)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v4);
    v27 = sub_23F3ECB2C(v12);
    if (v28)
    {
      sub_23F4DC280(v27, &qword_256E71158);
LABEL_11:
      v32 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate(0);
      sub_23F4DC204(v32);
      sub_23F4DC434();
      sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F4DC394();
      sub_23F4DC500(v1);
      sub_23F4DC500(v6);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F4DC428(v25, v26, &qword_256E71158);
  sub_23F3ECB2C(v12);
  if (v28)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v4);
    sub_23F4DC688(v29, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
LABEL_9:
    sub_23F4DC280(v27, &qword_256E71160);
    goto LABEL_12;
  }
  sub_23F4DC4B4(v12, v2);
  sub_23F384A14();
  sub_23F4B22F0();
  v31 = v30;
  sub_23F3C8574(v2);
  sub_23F389C0C(v0);
  sub_23F389C0C(v4);
  sub_23F3C8574(v3);
  sub_23F389C0C(v1);
  if ((v31 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F4DD180();
  sub_23F362948();
}

void sub_23F4C45E8(uint64_t a1@<X8>)
{
  sub_23F4B1F70(type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate, a1);
}

uint64_t sub_23F4C460C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6DF8(a1, a2, (void (*)(void))sub_23F4BEFD4);
}

void sub_23F4C4624()
{
  sub_23F4BF3EC();
}

uint64_t sub_23F4C4638()
{
  return sub_23F4C2C04();
}

uint64_t sub_23F4C464C()
{
  sub_23F3612C0(&qword_256E76870, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate, (uint64_t)&unk_23F625440);
  return sub_23F61898C();
}

uint64_t sub_23F4C469C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6F020, (uint64_t)qword_256E80290);
}

uint64_t sub_23F4C46B8()
{
  sub_23F3612C0(&qword_256E762F0, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate, (uint64_t)&unk_23F625478);
  return sub_23F618A1C();
}

uint64_t sub_23F4C46F8()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_Rule.Predicate);
}

uint64_t sub_23F4C4724()
{
  sub_23F3612C0(&qword_256E762F0, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate, (uint64_t)&unk_23F625478);
  return sub_23F618A28();
}

uint64_t sub_23F4C4778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E802A8);
  sub_23F361498(v0, (uint64_t)qword_256E802A8);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61EBC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "fallback_dialog";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "string_dialog";
  *((_QWORD *)v11 + 1) = 13;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "cat_dialog";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4C4900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F4DC884(a1, a2);
  while (1)
  {
    v3 = sub_23F6189A4();
    if (v2 || (v4 & 1) != 0)
      break;
    switch(v3)
    {
      case 3:
        v9 = sub_23F4DC170();
        sub_23F4C5154(v9, v10, v11, v12);
        break;
      case 2:
        v13 = sub_23F4DC170();
        sub_23F4C4D68(v13, v14, v15, v16);
        break;
      case 1:
        v5 = sub_23F4DC170();
        sub_23F4C4980(v5, v6, v7, v8);
        break;
    }
    sub_23F3848C0();
  }
  sub_23F4DD174();
}

void sub_23F4C4980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E75DF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E768F0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E75DF0);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E75DF0);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    }
    else
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E768F0);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E762B0, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog, (uint64_t)&unk_23F6251A8);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E768F0);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E768F0);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E768F0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E768F0);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E75DF0);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4C4D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E75DF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E768F8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E75DF0);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E75DF0);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E768F8);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76290, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog, (uint64_t)&unk_23F625040);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E768F8);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E768F8);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E768F8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E768F8);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E75DF0);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

void sub_23F4C5154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = sub_23F35D2E8(&qword_256E75DF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = sub_23F35D2E8(&qword_256E76900);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  sub_23F36196C((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_23F3D96EC(a1, (uint64_t)v12, &qword_256E75DF0);
  v31 = sub_23F36195C((uint64_t)v12, 1, v13);
  if (v31 == 1)
  {
    sub_23F3625D8((uint64_t)v12, &qword_256E75DF0);
    v25 = v13;
  }
  else
  {
    sub_23F36262C((uint64_t)v12, (uint64_t)v18, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    sub_23F36262C((uint64_t)v18, (uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F3625D8((uint64_t)v24, &qword_256E76900);
      sub_23F36262C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog);
      sub_23F36262C((uint64_t)v9, (uint64_t)v24, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog);
      sub_23F36196C((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_23F3663AC((uint64_t)v16, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
    }
  }
  v26 = v33;
  sub_23F3612C0(&qword_256E76270, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog, (uint64_t)&unk_23F624ED8);
  sub_23F618A04();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_23F3625D8(v27, &qword_256E76900);
    return;
  }
  sub_23F3D96EC((uint64_t)v24, (uint64_t)v22, &qword_256E76900);
  if (sub_23F36195C((uint64_t)v22, 1, v5) == 1)
  {
    sub_23F3625D8((uint64_t)v24, &qword_256E76900);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_23F36262C((uint64_t)v22, v32, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog);
  if (v31 != 1)
    sub_23F6189B0();
  sub_23F3625D8((uint64_t)v24, &qword_256E76900);
  v29 = v30;
  sub_23F3625D8(v30, &qword_256E75DF0);
  sub_23F36262C(v28, v29, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog);
  swift_storeEnumTagMultiPayload();
  sub_23F36196C(v29, 0, 1, v25);
}

#error "23F4C5574: call analysis failed (funcsize=40)"

void sub_23F4C55E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E75DF0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E75DF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E75DF0);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog);
      sub_23F3612C0(&qword_256E762B0, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog, (uint64_t)&unk_23F6251A8);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
  }
  __break(1u);
}

void sub_23F4C577C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E75DF0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E75DF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E75DF0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog);
      sub_23F3612C0(&qword_256E76290, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog, (uint64_t)&unk_23F625040);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
  }
  __break(1u);
}

void sub_23F4C5914(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = sub_23F35D2E8(&qword_256E75DF0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D96EC(a1, (uint64_t)v4, &qword_256E75DF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  if (sub_23F36195C((uint64_t)v4, 1, v8) == 1)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E75DF0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23F36262C((uint64_t)v4, (uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog);
      sub_23F3612C0(&qword_256E76270, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog, (uint64_t)&unk_23F624ED8);
      sub_23F618A70();
      sub_23F3663AC((uint64_t)v7, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog);
      return;
    }
    sub_23F3663AC((uint64_t)v4, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
  }
  __break(1u);
}

void sub_23F4C5AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34[6];

  sub_23F362ABC();
  v6 = v5;
  v34[0] = sub_23F3C8624();
  v34[5] = *(_QWORD *)(v34[0] - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3E01D8(v8, v34[0]);
  MEMORY[0x24BDAC7A8](v9);
  v34[2] = (uint64_t)v34 - v10;
  v11 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(v11);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3845CC();
  v13 = sub_23F35D2E8(&qword_256E766D8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F383EC4();
  sub_23F3C87F8();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F4DC39C();
  v18 = MEMORY[0x24BDAC7A8](v17);
  sub_23F4DC288(v18, v19, v20, v21, v22, v23, v24, v25, v34[0]);
  v34[3] = v6;
  sub_23F4DC2E4(v6, v0);
  sub_23F4DC2C0();
  sub_23F4DC2E4(v0, v13);
  v26 = sub_23F3ECB2C(v1);
  if (v29)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v4);
    v28 = sub_23F3ECB2C(v13);
    if (v29)
    {
      sub_23F4DC280(v28, &qword_256E75DF0);
LABEL_11:
      v33 = sub_23F4DCFCC();
      sub_23F4DC204(v33);
      sub_23F4DC434();
      sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_23F4DC394();
      sub_23F4DC500(v1);
      sub_23F4DC500(v6);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_23F4DC428(v26, v27, &qword_256E75DF0);
  sub_23F3ECB2C(v13);
  if (v29)
  {
    sub_23F4DC198(v0);
    sub_23F4DC198(v4);
    sub_23F4DC688(v30, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
LABEL_9:
    sub_23F4DC280(v28, &qword_256E766D8);
    goto LABEL_12;
  }
  sub_23F4DC4B4(v13, v2);
  v31 = sub_23F384A14();
  v32 = sub_23F4B2C84(v31);
  sub_23F3C8574(v2);
  sub_23F389C0C(v0);
  sub_23F389C0C(v4);
  sub_23F3C8574(v3);
  sub_23F389C0C(v1);
  if ((v32 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  sub_23F4DD180();
  sub_23F362948();
}

void sub_23F4C5CE4(uint64_t a1@<X8>)
{
  sub_23F4B1F70(type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog, a1);
}

unint64_t sub_23F4C5D08()
{
  return 0xD00000000000002CLL;
}

void sub_23F4C5D24(uint64_t a1, uint64_t a2)
{
  sub_23F4C4900(a1, a2);
}

uint64_t sub_23F4C5D38()
{
  return sub_23F4C5540();
}

uint64_t sub_23F4C5D4C()
{
  sub_23F3612C0(&qword_256E768E8, type metadata accessor for ResponseGenerationOverrides_OverrideDialog, (uint64_t)&unk_23F6252D8);
  return sub_23F61898C();
}

uint64_t sub_23F4C5D9C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6F028, (uint64_t)qword_256E802A8);
}

uint64_t sub_23F4C5DB8()
{
  sub_23F3612C0(&qword_256E762D0, type metadata accessor for ResponseGenerationOverrides_OverrideDialog, (uint64_t)&unk_23F625310);
  return sub_23F618A1C();
}

uint64_t sub_23F4C5DF8()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
}

uint64_t sub_23F4C5E24()
{
  sub_23F3612C0(&qword_256E762D0, type metadata accessor for ResponseGenerationOverrides_OverrideDialog, (uint64_t)&unk_23F625310);
  return sub_23F618A28();
}

uint64_t sub_23F4C5E78()
{
  uint64_t result;

  result = sub_23F61C280();
  qword_256E802C0 = 0xD00000000000002CLL;
  *(_QWORD *)algn_256E802C8 = 0x800000023F637EE0;
  return result;
}

uint64_t *sub_23F4C5EEC()
{
  if (qword_256E6F030 != -1)
    swift_once();
  return &qword_256E802C0;
}

void sub_23F4C5F2C(uint64_t a1)
{
  sub_23F4C5F38(a1, qword_256E802D0);
}

void sub_23F4C5F38(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_23F4DCFD4();
  sub_23F3F3F64(v3, a2);
  v4 = sub_23F3840BC();
  sub_23F361498(v4, v5);
  sub_23F618A94();
  sub_23F362928();
}

uint64_t sub_23F4C5F70()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  do
    result = sub_23F6189A4();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t sub_23F4C5FB0()
{
  return sub_23F61895C();
}

void sub_23F4C5FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;

  sub_23F383988();
  a17 = v18;
  a18 = v19;
  v21 = v20;
  v23 = v22;
  v24 = sub_23F3C8624();
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
  MEMORY[0x24BDAC7A8](v24);
  sub_23F362AAC();
  v28 = v26 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - v30;
  sub_23F4DCC54((uint64_t)&a9 - v30, v23);
  sub_23F4DCC54(v28, v21);
  sub_23F3612C0(&qword_256E71168, v25, MEMORY[0x24BE5BF20]);
  sub_23F4DC394();
  sub_23F482DCC(v28);
  sub_23F482DCC((uint64_t)v31);
  sub_23F383568();
}

uint64_t sub_23F4C609C(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6DF8(a1, a2, (void (*)(void))sub_23F4C5EEC);
}

uint64_t sub_23F4C60B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F3C8624();
  v0 = sub_23F3F9C80();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

uint64_t sub_23F4C60D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F3C8624();
  v0 = sub_23F4DCA84();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

uint64_t sub_23F4C60F4()
{
  sub_23F3612C0(&qword_256E76908, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog, (uint64_t)&unk_23F625170);
  return sub_23F61898C();
}

uint64_t sub_23F4C6144(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6F038, (uint64_t)qword_256E802D0);
}

uint64_t sub_23F4C6160()
{
  sub_23F3612C0(&qword_256E762B0, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog, (uint64_t)&unk_23F6251A8);
  return sub_23F618A1C();
}

uint64_t sub_23F4C61A0()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog);
}

uint64_t sub_23F4C61CC()
{
  sub_23F3612C0(&qword_256E762B0, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog, (uint64_t)&unk_23F6251A8);
  return sub_23F618A28();
}

uint64_t sub_23F4C621C()
{
  uint64_t result;

  result = sub_23F61C280();
  qword_256E802E8 = 0xD00000000000002CLL;
  unk_256E802F0 = 0x800000023F637EE0;
  return result;
}

uint64_t *sub_23F4C6290()
{
  if (qword_256E6F040 != -1)
    swift_once();
  return &qword_256E802E8;
}

uint64_t sub_23F4C62D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_23F618AA0();
  sub_23F3F3F64(v0, qword_256E802F8);
  sub_23F361498(v0, (uint64_t)qword_256E802F8);
  sub_23F35D2E8(&qword_256E766B0);
  v1 = sub_23F35D2E8(&qword_256E766B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61D990;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "full_print";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_23F618A7C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "full_speak";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "supporting_print";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "supporting_speak";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v10();
  return sub_23F618A88();
}

void sub_23F4C648C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);

  v1 = sub_23F4DC140();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          sub_23F4DCB20();
          break;
        case 2:
          sub_23F4DCCBC();
          break;
        case 3:
          sub_23F4DCCD4();
          break;
        case 4:
          v3 = sub_23F4DC6D4();
          sub_23F4C6570(v3, v4, v5, v6, v7);
          break;
        default:
          break;
      }
      v1 = sub_23F4DC2D8();
    }
  }
  sub_23F4DC358();
}

void sub_23F4C6520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  sub_23F4DC1A0(a1, a2, a3, a4, a5);
  sub_23F4DC464();
  sub_23F4DC270();
}

void sub_23F4C6548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  sub_23F4DC1A0(a1, a2, a3, a4, a5);
  sub_23F4DC464();
  sub_23F4DC270();
}

void sub_23F4C6570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  sub_23F4DC1A0(a1, a2, a3, a4, a5);
  sub_23F4DC464();
  sub_23F4DC270();
}

void sub_23F4C6598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);

  sub_23F4DD198();
  sub_23F4DC92C();
  if (!v2 || (v0 = v1, sub_23F4DD034(), !v1))
  {
    v3 = sub_23F4DCAFC();
    sub_23F4C665C(v3, v4, v5, v6, v7);
    if (!v0)
    {
      v8 = sub_23F4DCAFC();
      sub_23F4C66A4(v8, v9, v10, v11, v12);
      v13 = sub_23F4DCAFC();
      sub_23F4C66EC(v13, v14, v15, v16, v17);
      type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
      sub_23F4DCF10();
      sub_23F61895C();
    }
  }
  sub_23F4DC358();
}

