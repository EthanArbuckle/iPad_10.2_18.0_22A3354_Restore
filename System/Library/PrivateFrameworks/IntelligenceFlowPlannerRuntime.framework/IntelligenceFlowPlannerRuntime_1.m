_OWORD *sub_23F3C9A94()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[26];

  v2 = sub_23F3CDA3C();
  v3 = (_OWORD *)(v1 + *(int *)(v2 + 48));
  sub_23F38F908(v2, v4, &qword_256E707D0, v5, v6, v7, v8, v9, v13[0]);
  if (v13[3])
    return memcpy(v0, v13, 0xC8uLL);
  sub_23F38F900((uint64_t)v13);
  v11 = sub_23F38FA50();
  sub_23F3C9B1C(v11, v12);
  sub_23F38F900((uint64_t)v3);
  return sub_23F38F144(v0, v3);
}

uint64_t sub_23F3C9B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  _QWORD v45[2];
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  _UNKNOWN **v59;
  __int128 v60;
  void *v61;
  _UNKNOWN **v62;
  __int128 v63;
  void *v64;
  _UNKNOWN **v65;
  __int128 v66;
  uint64_t v67;
  _UNKNOWN **v68;
  __int128 v69[2];
  _QWORD v70[5];
  uint64_t v71[5];
  uint64_t v72[5];
  uint64_t v73[5];
  uint64_t v74;
  void *v75;
  _UNKNOWN **v76;
  uint64_t v77;
  _BYTE v78[40];
  _QWORD v79[5];
  uint64_t v80;
  _QWORD v81[5];
  uint64_t v82;
  void *v83;
  _UNKNOWN **v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  _QWORD v88[5];
  uint64_t v89;
  void *v90;
  _UNKNOWN **v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  _QWORD v95[5];
  uint64_t v96;
  void *v97;
  _UNKNOWN **v98;
  uint64_t v99[5];
  uint64_t v100;
  void *v101;
  _UNKNOWN **v102;
  uint64_t v103[15];
  uint64_t v104[5];
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  _BYTE v108[24];
  void *v109;
  _UNKNOWN **v110;
  uint64_t v111;
  _BYTE v112[32];
  uint64_t v113;

  v52 = a2;
  v51 = type metadata accessor for BravoEntityIdentifierValuePromptRenderer(0);
  MEMORY[0x24BDAC7A8](v51);
  v50 = (_QWORD *)((char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = type metadata accessor for BravoRenderableToolDefinitionPromptRenderer(0);
  MEMORY[0x24BDAC7A8](v56);
  v5 = (_QWORD *)((char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = type metadata accessor for BravoEntityValuePromptRenderer(0);
  MEMORY[0x24BDAC7A8](v55);
  v54 = (_QWORD *)((char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = 0;
  memset(v112, 0, sizeof(v112));
  v109 = &unk_250FD2FC8;
  v110 = &off_250FD31C0;
  sub_23F3C8D34((uint64_t)&v111);
  *((_QWORD *)v9 + 3) = &unk_250FD2FA0;
  *((_QWORD *)v9 + 4) = &off_250FD31A0;
  v10 = swift_allocObject();
  *(_QWORD *)v9 = v10;
  sub_23F38F184((uint64_t)v108, v10 + 16);
  *((_QWORD *)v9 + 8) = &unk_250FD2F20;
  *((_QWORD *)v9 + 9) = &off_250FD3190;
  v11 = swift_allocObject();
  *((_QWORD *)v9 + 5) = v11;
  sub_23F38F1E8((uint64_t)v112, v11 + 16);
  *((_QWORD *)v9 + 13) = &unk_250FD3228;
  *((_QWORD *)v9 + 14) = &off_250FD3238;
  sub_23F3C8D34((uint64_t)(v9 + 120));
  v12 = _s15BravoComponentsVMa();
  *((_OWORD *)v9 + 10) = 0u;
  *((_OWORD *)v9 + 11) = 0u;
  *((_QWORD *)v9 + 24) = 0;
  v53 = a1 + *(int *)(v12 + 24);
  v13 = v53;
  v14 = &v9[*(int *)(v7 + 36)];
  v46 = sub_23F61B32C();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
  v15(v14, v13, v46);
  v47 = v15;
  v104[3] = v7;
  v104[4] = (uint64_t)&off_250FD3D48;
  v16 = sub_23F36145C(v104);
  sub_23F38F530((uint64_t)v9, (uint64_t)v16, type metadata accessor for BravoTypeIdentifierRenderer);
  v105 = 0u;
  v106 = 0u;
  v107 = 0;
  v103[3] = v7;
  v103[4] = (uint64_t)&off_250FD3D60;
  v17 = sub_23F36145C(v103);
  sub_23F38F530((uint64_t)v9, (uint64_t)v17, type metadata accessor for BravoTypeIdentifierRenderer);
  v103[8] = (uint64_t)&unk_250FD2B58;
  v103[9] = (uint64_t)&off_250FD3060;
  v103[13] = (uint64_t)&unk_250FD2B38;
  v103[14] = (uint64_t)&off_250FD3050;
  v99[3] = v7;
  v48 = v7;
  v99[4] = (uint64_t)&off_250FD3D60;
  v18 = sub_23F36145C(v99);
  sub_23F38F530((uint64_t)v9, (uint64_t)v18, type metadata accessor for BravoTypeIdentifierRenderer);
  v101 = &unk_250FD2B08;
  v102 = &off_250FD3040;
  v100 = swift_allocObject();
  sub_23F38F43C((uint64_t)v103, v100 + 16);
  v19 = v54;
  v54[3] = v7;
  v19[4] = (uint64_t)&off_250FD3D48;
  v20 = v19;
  v21 = sub_23F36145C(v19);
  sub_23F38F530((uint64_t)v9, (uint64_t)v21, type metadata accessor for BravoTypeIdentifierRenderer);
  v20[8] = (uint64_t)&unk_250FD3CE8;
  v20[9] = (uint64_t)&off_250FD3DC0;
  v22 = swift_allocObject();
  v20[5] = v22;
  sub_23F3CD7F4((uint64_t)v99, v22 + 16);
  v49 = a1 + *(int *)(v12 + 28);
  sub_23F382FC4(v49, (uint64_t)(v20 + 10));
  v23 = v46;
  v15((char *)v20 + *(int *)(v55 + 28), v53, v46);
  v95[3] = &unk_250FD2EA8;
  v95[4] = &off_250FD3160;
  v97 = &unk_250FD3BE8;
  v98 = &off_250FD3D00;
  v96 = swift_allocObject();
  sub_23F3CD854((uint64_t)v104, v96 + 16);
  v88[3] = &unk_250FD3BE8;
  v88[4] = &off_250FD3D00;
  v88[0] = swift_allocObject();
  sub_23F3CD854((uint64_t)v104, v88[0] + 16);
  v90 = &unk_250FD2E00;
  v91 = &off_250FD3128;
  v89 = swift_allocObject();
  sub_23F38F288((uint64_t)v95, v89 + 16);
  v92 = 0u;
  v93 = 0u;
  v94 = 0;
  v81[3] = &unk_250FD2D78;
  v81[4] = &off_250FD3108;
  v81[0] = swift_allocObject();
  sub_23F38F2C8((uint64_t)v88, v81[0] + 16);
  v83 = &unk_250FD2CF8;
  v84 = &off_250FD30F0;
  v82 = swift_allocObject();
  sub_23F3C8D34(v82 + 16);
  v87 = 0;
  v86 = 0u;
  v85 = 0u;
  v79[3] = &unk_250FD2C70;
  v79[4] = &off_250FD30B8;
  v79[0] = swift_allocObject();
  sub_23F38F360((uint64_t)v81, v79[0] + 16);
  sub_23F3C8D34((uint64_t)&v80);
  v45[1] = a1;
  sub_23F3C8D34((uint64_t)v78);
  v5[3] = (uint64_t)&unk_250FD2C70;
  v5[4] = (uint64_t)&off_250FD30B8;
  v24 = swift_allocObject();
  *v5 = v24;
  sub_23F38F360((uint64_t)v81, v24 + 16);
  v5[8] = (uint64_t)&unk_250FD2BF8;
  v5[9] = (uint64_t)&off_250FD3098;
  v5[13] = (uint64_t)&unk_250FD2BD0;
  v5[14] = (uint64_t)&off_250FD3070;
  v25 = (uint64_t)v5;
  v26 = swift_allocObject();
  v5[10] = v26;
  sub_23F38F3C0((uint64_t)v79, v26 + 16);
  v5[18] = (uint64_t)&unk_250FD3B00;
  v5[19] = (uint64_t)&off_250FD3B18;
  v27 = swift_allocObject();
  v5[15] = v27;
  sub_23F38F3FC((uint64_t)v78, v27 + 16);
  v5[23] = (uint64_t)&unk_250FD3C68;
  v5[24] = (uint64_t)&off_250FD3DA0;
  v28 = swift_allocObject();
  v5[20] = v28;
  sub_23F3C8D34(v28 + 16);
  v29 = v53;
  v30 = v23;
  v31 = v47;
  v47((char *)v5 + *(int *)(v56 + 36), v53, v23);
  v32 = v50;
  v33 = v48;
  v50[3] = v48;
  v32[4] = (uint64_t)&off_250FD3D48;
  v34 = sub_23F36145C(v32);
  sub_23F38F530((uint64_t)v9, (uint64_t)v34, type metadata accessor for BravoTypeIdentifierRenderer);
  v35 = v51;
  v31((char *)v32 + *(int *)(v51 + 20), v29, v30);
  v73[3] = v33;
  v36 = v33;
  v73[4] = (uint64_t)&off_250FD3D60;
  v37 = sub_23F36145C(v73);
  sub_23F38F530((uint64_t)v9, (uint64_t)v37, type metadata accessor for BravoTypeIdentifierRenderer);
  v75 = &unk_250FD2B08;
  v76 = &off_250FD3040;
  v74 = swift_allocObject();
  sub_23F38F43C((uint64_t)v103, v74 + 16);
  sub_23F382FC4(v49, (uint64_t)&v77);
  v70[3] = &unk_250FD2A80;
  v70[4] = &off_250FD3030;
  v70[0] = swift_allocObject();
  sub_23F38F47C((uint64_t)v73, v70[0] + 16);
  v71[3] = v55;
  v71[4] = (uint64_t)&off_250FD3D90;
  v38 = sub_23F36145C(v71);
  v39 = (uint64_t)v54;
  sub_23F38F530((uint64_t)v54, (uint64_t)v38, type metadata accessor for BravoEntityValuePromptRenderer);
  v72[3] = v35;
  v72[4] = (uint64_t)&off_250FD3D80;
  v40 = sub_23F36145C(v72);
  sub_23F38F530((uint64_t)v32, (uint64_t)v40, type metadata accessor for BravoEntityIdentifierValuePromptRenderer);
  sub_23F3C8D34((uint64_t)v69);
  v67 = v56;
  v68 = &off_250FD3D20;
  v41 = sub_23F36145C((uint64_t *)&v66);
  sub_23F38F530(v25, (uint64_t)v41, type metadata accessor for BravoRenderableToolDefinitionPromptRenderer);
  v64 = &unk_250FD28F8;
  v65 = &off_250FD2FD8;
  *(_QWORD *)&v63 = swift_allocObject();
  sub_23F38F580((uint64_t)v70, v63 + 16);
  v61 = &unk_250FD2E00;
  v62 = &off_250FD3128;
  *(_QWORD *)&v60 = swift_allocObject();
  sub_23F38F288((uint64_t)v95, v60 + 16);
  v58 = v36;
  v59 = &off_250FD3D60;
  v42 = sub_23F36145C((uint64_t *)&v57);
  sub_23F3CD8C8((uint64_t)v9, (uint64_t)v42);
  sub_23F38F600((uint64_t)v70);
  sub_23F38F634((uint64_t)v73);
  sub_23F3663AC((uint64_t)v32, type metadata accessor for BravoEntityIdentifierValuePromptRenderer);
  sub_23F3663AC(v25, type metadata accessor for BravoRenderableToolDefinitionPromptRenderer);
  sub_23F38F6D0((uint64_t)v78);
  sub_23F38F704((uint64_t)v79);
  sub_23F38F738((uint64_t)v81);
  sub_23F38F76C((uint64_t)v88);
  sub_23F38F7A0((uint64_t)v95);
  sub_23F3663AC(v39, type metadata accessor for BravoEntityValuePromptRenderer);
  sub_23F3CD90C((uint64_t)v99);
  sub_23F38F668((uint64_t)v103);
  sub_23F3CD940((uint64_t)v104);
  sub_23F38F83C((uint64_t)v108);
  sub_23F38F870((uint64_t)v112);
  v43 = v52;
  sub_23F362678(v69, v52);
  sub_23F362678(&v66, v43 + 40);
  sub_23F362678(&v63, v43 + 80);
  sub_23F362678(&v60, v43 + 120);
  return sub_23F362678(&v57, v43 + 160);
}

void *sub_23F3CA498@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  int *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  __int128 v26[2];
  __int128 v27;
  uint64_t v28;
  _UNKNOWN **v29;
  __int128 v30;
  void *v31;
  _UNKNOWN **v32;
  uint64_t v33[5];
  _BYTE v34[32];
  uint64_t v35;
  _QWORD v36[46];

  v3 = sub_23F384B34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)_s15BravoComponentsVMa();
  v8 = v1 + v7[13];
  sub_23F38F124(v8, (uint64_t)v36, &qword_256E707B8);
  if (v36[13])
    return memcpy(a1, v36, 0x168uLL);
  v25 = v8;
  sub_23F3625D8((uint64_t)v36, &qword_256E707B8);
  v35 = 0;
  memset(v34, 0, sizeof(v34));
  v10 = v1 + v7[6];
  v11 = type metadata accessor for BravoContextEventPromptGenerator();
  v33[3] = v11;
  v33[4] = (uint64_t)&off_250FD3A78;
  v12 = sub_23F36145C(v33);
  v24 = v4;
  v13 = *(_QWORD *)(v4 + 16);
  sub_23F3CDA68((uint64_t)v12);
  sub_23F3C9A94();
  sub_23F382FC4(v1 + v7[7], (uint64_t)v12 + *(int *)(v11 + 24));
  v31 = &unk_250FD4EE0;
  v32 = &off_250FD4F48;
  v14 = swift_allocObject();
  *(_QWORD *)&v30 = v14;
  *(_QWORD *)(v14 + 40) = &unk_250FD4E68;
  *(_QWORD *)(v14 + 48) = &off_250FD4F38;
  v28 = type metadata accessor for AlphaProgramStatementParser();
  v29 = &off_250FD2850;
  v15 = sub_23F36145C((uint64_t *)&v27);
  v23[0] = v13;
  v23[1] = v10;
  sub_23F3CDA68((uint64_t)v15);
  sub_23F3CDA68((uint64_t)v6);
  sub_23F3C9A94();
  sub_23F382FC4((uint64_t)&v36[5], (uint64_t)v26);
  sub_23F38BB88((uint64_t)v36);
  a1[18] = (uint64_t)&type metadata for AlphaPlanParser;
  a1[19] = (uint64_t)&off_250FD2840;
  v16 = (uint64_t *)swift_allocObject();
  v17 = (uint64_t)(v16 + 2);
  a1[15] = (uint64_t)v16;
  v18 = (int *)type metadata accessor for AlphaExpressionParser(0);
  v16[10] = (uint64_t)v18;
  v16[11] = (uint64_t)&off_250FD26C0;
  v19 = sub_23F36145C(v16 + 7);
  sub_23F3C8D34((uint64_t)v19 + v18[7]);
  *(_BYTE *)v19 = 1;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))((char *)v19 + v18[5], v6, v3);
  sub_23F362678(v26, (uint64_t)v19 + v18[6]);
  sub_23F362678(&v27, v17);
  a1[23] = type metadata accessor for AlphaStatementResultParser();
  a1[24] = (uint64_t)&off_250FD3308;
  v20 = sub_23F36145C(a1 + 20);
  sub_23F3CDA90((uint64_t)v20);
  sub_23F3CDA84();
  a1[28] = (uint64_t)&unk_250FD4E48;
  a1[29] = (uint64_t)&off_250FD4F28;
  a1[33] = (uint64_t)&unk_250FD4E28;
  a1[34] = (uint64_t)&off_250FD4F18;
  a1[38] = type metadata accessor for AlphaExternalAgentOutcomeParser();
  a1[39] = (uint64_t)&off_250FD4F08;
  v21 = sub_23F36145C(a1 + 35);
  sub_23F3CDA90((uint64_t)v21);
  sub_23F3CDA84();
  a1[43] = (uint64_t)&unk_250FD4E08;
  a1[44] = (uint64_t)&off_250FD4EF8;
  sub_23F3CD9FC((uint64_t)v34, (uint64_t)a1, &qword_256E707C0);
  sub_23F3CD9FC((uint64_t)v33, (uint64_t)(a1 + 5), &qword_256E707C8);
  sub_23F362678(&v30, (uint64_t)(a1 + 10));
  v22 = v25;
  sub_23F3625D8(v25, &qword_256E707B8);
  return (void *)sub_23F38F0E8((uint64_t)a1, v22);
}

void sub_23F3CA7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18[6];

  v1 = sub_23F3CDA3C();
  v2 = v0 + *(int *)(v1 + 56);
  sub_23F38F908(v1, v3, &qword_256E707B0, v4, v5, v6, v7, v8, v18[0]);
  sub_23F38F938();
  if (v16)
  {
    sub_23F38F900((uint64_t)v18);
    sub_23F3CDA74(v17, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t *))sub_23F3CA878);
    sub_23F38F900(v2);
    sub_23F38F99C();
  }
  else
  {
    sub_23F3CDA5C(v9, v10, &qword_256E705E8, v11, v12, v13, v14, v15, v18[0]);
  }
  sub_23F38F8EC();
}

uint64_t sub_23F3CA878@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  int *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  _UNKNOWN **v33;
  _BYTE v34[200];
  uint64_t v35[46];
  uint64_t v36;

  v23 = a3;
  v24 = a2;
  v4 = sub_23F6170CC();
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v26 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B32C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = _s15BravoComponentsVMa();
  v10 = a1 + *(int *)(v25 + 24);
  v36 = v7;
  v11 = *(void (**)(void))(v7 + 16);
  v30 = v9;
  ((void (*)(char *, uint64_t, uint64_t))v11)(v9, v10, v6);
  sub_23F3CA498(v35);
  sub_23F3C9A94();
  v12 = type metadata accessor for BravoToolRenderer();
  v32 = v12;
  v33 = &off_250FD3E20;
  v13 = sub_23F36145C((uint64_t *)&v31);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v11)(v13, v10, v6);
  sub_23F3C9A94();
  v14 = (uint64_t *)((char *)v13 + *(int *)(v12 + 24));
  v14[3] = type metadata accessor for AlphaToolRenderer();
  v14[4] = (uint64_t)&off_250FD3328;
  sub_23F36145C(v14);
  v11();
  sub_23F3C9A94();
  v15 = (char *)v13 + *(int *)(v12 + 28);
  *((_QWORD *)v15 + 4) = 0;
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v26, a1 + *(int *)(v25 + 20), v28);
  sub_23F617510();
  swift_allocObject();
  v16 = v29;
  v17 = sub_23F617504();
  if (v16)
  {
    sub_23F38BB88((uint64_t)v34);
    sub_23F38BBBC((uint64_t)v35);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v6);
    result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v31);
    *v24 = v16;
  }
  else
  {
    v19 = v17;
    v20 = (int *)type metadata accessor for ConversationParser();
    v21 = v23;
    v23[3] = (uint64_t)v20;
    v21[4] = (uint64_t)&off_250FD4C58;
    v22 = sub_23F36145C(v21);
    (*(void (**)(uint64_t *, char *, uint64_t))(v36 + 32))(v22, v30, v6);
    memcpy((char *)v22 + v20[5], v35, 0x168uLL);
    memcpy((char *)v22 + v20[6], v34, 0xC8uLL);
    result = sub_23F362678(&v31, (uint64_t)v22 + v20[7]);
    *(uint64_t *)((char *)v22 + v20[8]) = v19;
  }
  return result;
}

void sub_23F3CAB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _UNKNOWN **v6;

  v2 = v1 + *(int *)(sub_23F3CDA3C() + 60);
  if (*(_QWORD *)(v2 + 24))
  {
    sub_23F382FC4(v2, (uint64_t)&v4);
  }
  else
  {
    v3 = *(_OWORD *)(v2 + 16);
    v4 = *(_OWORD *)v2;
    v5 = v3;
    v6 = *(_UNKNOWN ***)(v2 + 32);
  }
  if (!*((_QWORD *)&v5 + 1))
  {
    *((_QWORD *)&v5 + 1) = &unk_250FD46E0;
    v6 = &off_256E71E38;
    if (*(_QWORD *)(v2 + 24))
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v2);
    sub_23F382FC4((uint64_t)&v4, v2);
  }
  sub_23F362678(&v4, v0);
  sub_23F38FA3C();
}

void sub_23F3CABA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v3 = v1 + *(int *)(sub_23F3CDA3C() + 64);
  sub_23F38FA10();
  if (v13)
  {
    sub_23F38F9FC();
  }
  else if ((v12 & 1) != 0)
  {
    sub_23F38F9D4();
    *(_QWORD *)&v24 = v2;
    v28 = 1;
  }
  else
  {
    sub_23F38F9E0(v4, v5, v6, v7, v8, v9, v10, v11, v24);
    v28 = 0;
  }
  sub_23F38F938();
  if (v13)
  {
    sub_23F38FA50();
    sub_23F3C8A48(v22);
    sub_23F38FA10();
    if (!v13)
    {
      if ((v23 & 1) != 0)

      else
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v3);
    }
    if ((*(_BYTE *)(v0 + 40) & 1) != 0)
    {
      sub_23F38FA30();
      *(_QWORD *)v3 = v0;
      *(_BYTE *)(v3 + 40) = 1;
    }
    else
    {
      sub_23F3CDA9C();
      *(_BYTE *)(v3 + 40) = 0;
    }
  }
  else
  {
    sub_23F38FA5C(v14, v15, v16, v17, v18, v19, v20, v21, v24, v25, v26, v27, v28);
  }
  sub_23F38F98C();
}

void sub_23F3CAC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13[6];

  v2 = v1 + *(int *)(sub_23F3CDA3C() + 68);
  sub_23F38F124(v2, (uint64_t)v13, &qword_256E70740);
  sub_23F38F938();
  if (v10)
  {
    sub_23F3625D8((uint64_t)v13, &qword_256E70740);
    if (qword_256E6EE60 != -1)
      swift_once();
    v11 = sub_23F617BA0();
    v12 = sub_23F38ED40(v11);
    *(_QWORD *)(v0 + 24) = &type metadata for FullPlannerResponseParser;
    *(_QWORD *)(v0 + 32) = &off_250FD6EC8;
    *(_QWORD *)v0 = v12;
    *(_BYTE *)(v0 + 40) = 0;
    sub_23F3625D8(v2, &qword_256E70740);
    sub_23F38F124(v0, v2, &qword_256E705F0);
  }
  else
  {
    sub_23F3CDA5C(v3, v4, &qword_256E705F0, v5, v6, v7, v8, v9, v13[0]);
  }
  sub_23F38FA3C();
}

void sub_23F3CAD30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[6];

  v2 = sub_23F3CDA3C();
  v3 = v1 + *(int *)(v2 + 72);
  sub_23F38F908(v2, v4, &qword_256E70730, v5, v6, v7, v8, v9, v20[0]);
  sub_23F38F938();
  if (v17)
  {
    sub_23F38F900((uint64_t)v20);
    v18 = sub_23F38FA50();
    sub_23F3C8B40(v18, v19);
    sub_23F38F900(v3);
    sub_23F38F124(v0, v3, &qword_256E705F8);
  }
  else
  {
    sub_23F3CDA5C(v10, v11, &qword_256E705F8, v12, v13, v14, v15, v16, v20[0]);
  }
  sub_23F38F98C();
}

void sub_23F3CADB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18[6];

  v1 = sub_23F3CDA3C();
  v2 = v0 + *(int *)(v1 + 76);
  sub_23F38F908(v1, v3, &qword_256E70720, v4, v5, v6, v7, v8, v18[0]);
  sub_23F38F938();
  if (v16)
  {
    sub_23F38F900((uint64_t)v18);
    sub_23F3CDA74(v17, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t *))sub_23F3CAE30);
    sub_23F38F900(v2);
    sub_23F38F99C();
  }
  else
  {
    sub_23F3CDA5C(v9, v10, &qword_256E70600, v11, v12, v13, v14, v15, v18[0]);
  }
  sub_23F38F8EC();
}

uint64_t sub_23F3CAE30@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[5];
  _QWORD v19[5];
  _QWORD v20[5];
  __int128 v21[2];
  char v22;
  _BYTE v23[48];
  uint64_t v24;

  sub_23F3CABA4();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v20[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    result = swift_willThrowTypedImpl();
LABEL_11:
    *a1 = v4;
    return result;
  }
  sub_23F362678(v21, (uint64_t)v23);
  sub_23F3C9214();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v19[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
LABEL_10:
    result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v23);
    goto LABEL_11;
  }
  sub_23F362678(v21, (uint64_t)v20);
  sub_23F3CAC58();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v18[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
LABEL_9:
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v20);
    goto LABEL_10;
  }
  sub_23F362678(v21, (uint64_t)v19);
  sub_23F3CAD30();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v24 = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v19);
    goto LABEL_9;
  }
  sub_23F362678(v21, (uint64_t)v18);
  v6 = sub_23F35D2E8(&qword_256E70728);
  v7 = (_QWORD *)swift_allocObject();
  v8 = sub_23F38EB10((uint64_t)v19, v19[3]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (_QWORD *)((char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  v12 = sub_23F38EB10((uint64_t)v18, v18[3]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  v16 = sub_23F38EEF0((uint64_t)v23, (uint64_t)v20, *v10, v14, v7);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v18);
  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v19);
  a2[3] = v6;
  a2[4] = &off_250FD6288;
  *a2 = v16;
  return result;
}

uint64_t *sub_23F3CB0E0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  _OWORD *v61;
  _OWORD *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  int v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  char *v106;
  char *v107;
  int v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  char *v114;
  char *v115;
  int v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  id v120;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F6170CC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_23F617BA0();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23F61B32C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)((char *)v4 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    v19 = a3[8];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = *(id *)v21;
    v23 = *((_QWORD *)v21 + 1);
    v24 = *((_QWORD *)v21 + 2);
    v25 = *((_QWORD *)v21 + 3);
    LOBYTE(v12) = v21[32];
    sub_23F3CB7D0(*(id *)v21, v23, v24, v25, (char)v12);
    *(_QWORD *)v20 = v22;
    *((_QWORD *)v20 + 1) = v23;
    *((_QWORD *)v20 + 2) = v24;
    *((_QWORD *)v20 + 3) = v25;
    v20[32] = (char)v12;
    v26 = a3[9];
    v27 = (char *)v4 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_23F61B104();
    if (sub_23F36195C((uint64_t)v28, 1, v29))
    {
      v30 = sub_23F35D2E8(&qword_256E705E0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      sub_23F36196C((uint64_t)v27, 0, 1, v29);
    }
    v32 = a3[10];
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    v35 = *(uint64_t *)((char *)a2 + v32 + 24);
    if (v35)
    {
      v36 = *((_QWORD *)v34 + 4);
      *((_QWORD *)v33 + 3) = v35;
      *((_QWORD *)v33 + 4) = v36;
      (**(void (***)(void))(v35 - 8))();
    }
    else
    {
      v37 = *((_OWORD *)v34 + 1);
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *((_OWORD *)v33 + 1) = v37;
      *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
    }
    v38 = a3[11];
    v39 = (char *)v4 + v38;
    v40 = (char *)a2 + v38;
    v41 = *((unsigned __int8 *)a2 + v38 + 40);
    if (v41 == 255)
    {
      v42 = *((_OWORD *)v40 + 1);
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *((_OWORD *)v39 + 1) = v42;
      *(_OWORD *)(v39 + 25) = *(_OWORD *)(v40 + 25);
    }
    else if ((v41 & 1) != 0)
    {
      v44 = *(_QWORD *)v40;
      v45 = *(id *)v40;
      *(_QWORD *)v39 = v44;
      v39[40] = 1;
    }
    else
    {
      v43 = *(_OWORD *)(v40 + 24);
      *(_OWORD *)(v39 + 24) = v43;
      (**(void (***)(char *))(v43 - 8))(v39);
      v39[40] = 0;
    }
    v46 = a3[12];
    v47 = (char *)v4 + v46;
    v48 = (char *)a2 + v46;
    v49 = *(uint64_t *)((char *)a2 + v46 + 24);
    if (v49)
    {
      v50 = *((_QWORD *)v48 + 4);
      *((_QWORD *)v47 + 3) = v49;
      *((_QWORD *)v47 + 4) = v50;
      (**(void (***)(char *, char *))(v49 - 8))(v47, v48);
      v51 = *((_OWORD *)v48 + 4);
      *((_OWORD *)v47 + 4) = v51;
      (**(void (***)(uint64_t, uint64_t))(v51 - 8))((uint64_t)(v47 + 40), (uint64_t)(v48 + 40));
      v52 = *(_OWORD *)(v48 + 104);
      *(_OWORD *)(v47 + 104) = v52;
      (**(void (***)(uint64_t, uint64_t))(v52 - 8))((uint64_t)(v47 + 80), (uint64_t)(v48 + 80));
      v53 = *((_OWORD *)v48 + 9);
      *((_OWORD *)v47 + 9) = v53;
      (**(void (***)(uint64_t, uint64_t))(v53 - 8))((uint64_t)(v47 + 120), (uint64_t)(v48 + 120));
      v54 = *(_OWORD *)(v48 + 184);
      *(_OWORD *)(v47 + 184) = v54;
      (**(void (***)(uint64_t, uint64_t))(v54 - 8))((uint64_t)(v47 + 160), (uint64_t)(v48 + 160));
    }
    else
    {
      memcpy((char *)v4 + v46, (char *)a2 + v46, 0xC8uLL);
    }
    v55 = a3[13];
    v56 = (char *)v4 + v55;
    v57 = (char *)a2 + v55;
    if (*(uint64_t *)((char *)a2 + v55 + 104))
    {
      v58 = *((_QWORD *)v57 + 3);
      if (v58)
      {
        v59 = *((_QWORD *)v57 + 4);
        *((_QWORD *)v56 + 3) = v58;
        *((_QWORD *)v56 + 4) = v59;
        (**(void (***)(void *, const void *))(v58 - 8))(v56, v57);
      }
      else
      {
        v60 = *((_OWORD *)v57 + 1);
        *(_OWORD *)v56 = *(_OWORD *)v57;
        *((_OWORD *)v56 + 1) = v60;
        *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
      }
      v61 = v56 + 40;
      v62 = v57 + 40;
      v63 = *((_QWORD *)v57 + 8);
      if (v63)
      {
        v64 = *((_QWORD *)v57 + 9);
        *((_QWORD *)v56 + 8) = v63;
        *((_QWORD *)v56 + 9) = v64;
        (**(void (***)(_OWORD *, _OWORD *))(v63 - 8))(v61, v62);
      }
      else
      {
        v65 = *(_OWORD *)(v57 + 56);
        *v61 = *v62;
        *(_OWORD *)(v56 + 56) = v65;
        *((_QWORD *)v56 + 9) = *((_QWORD *)v57 + 9);
      }
      v66 = *(_OWORD *)(v57 + 104);
      *(_OWORD *)(v56 + 104) = v66;
      (**(void (***)(uint64_t, uint64_t))(v66 - 8))((uint64_t)(v56 + 80), (uint64_t)(v57 + 80));
      v67 = *((_OWORD *)v57 + 9);
      *((_OWORD *)v56 + 9) = v67;
      (**(void (***)(uint64_t, uint64_t))(v67 - 8))((uint64_t)(v56 + 120), (uint64_t)(v57 + 120));
      v68 = *(_OWORD *)(v57 + 184);
      *(_OWORD *)(v56 + 184) = v68;
      (**(void (***)(uint64_t, uint64_t))(v68 - 8))((uint64_t)(v56 + 160), (uint64_t)(v57 + 160));
      v69 = *((_OWORD *)v57 + 14);
      *((_OWORD *)v56 + 14) = v69;
      (**(void (***)(uint64_t, uint64_t))(v69 - 8))((uint64_t)(v56 + 200), (uint64_t)(v57 + 200));
      v70 = *((_QWORD *)v57 + 33);
      v71 = *((_QWORD *)v57 + 34);
      *((_QWORD *)v56 + 33) = v70;
      *((_QWORD *)v56 + 34) = v71;
      (**(void (***)(uint64_t, uint64_t))(v70 - 8))((uint64_t)(v56 + 240), (uint64_t)(v57 + 240));
      v72 = *((_OWORD *)v57 + 19);
      *((_OWORD *)v56 + 19) = v72;
      (**(void (***)(uint64_t, uint64_t))(v72 - 8))((uint64_t)(v56 + 280), (uint64_t)(v57 + 280));
      v73 = *((_QWORD *)v57 + 43);
      v74 = *((_QWORD *)v57 + 44);
      *((_QWORD *)v56 + 43) = v73;
      *((_QWORD *)v56 + 44) = v74;
      (**(void (***)(uint64_t, uint64_t))(v73 - 8))((uint64_t)(v56 + 320), (uint64_t)(v57 + 320));
    }
    else
    {
      memcpy(v56, v57, 0x168uLL);
    }
    v75 = a3[14];
    v76 = (char *)v4 + v75;
    v77 = (char *)a2 + v75;
    v78 = *((unsigned __int8 *)a2 + v75 + 40);
    if (v78 == 255)
    {
      v79 = *((_OWORD *)v77 + 1);
      *(_OWORD *)v76 = *(_OWORD *)v77;
      *((_OWORD *)v76 + 1) = v79;
      *(_OWORD *)(v76 + 25) = *(_OWORD *)(v77 + 25);
    }
    else if ((v78 & 1) != 0)
    {
      v81 = *(_QWORD *)v77;
      v82 = *(id *)v77;
      *(_QWORD *)v76 = v81;
      v76[40] = 1;
    }
    else
    {
      v80 = *(_OWORD *)(v77 + 24);
      *(_OWORD *)(v76 + 24) = v80;
      (**(void (***)(char *))(v80 - 8))(v76);
      v76[40] = 0;
    }
    v83 = a3[15];
    v84 = (char *)v4 + v83;
    v85 = (char *)a2 + v83;
    v86 = *(uint64_t *)((char *)a2 + v83 + 24);
    if (v86)
    {
      v87 = *((_QWORD *)v85 + 4);
      *((_QWORD *)v84 + 3) = v86;
      *((_QWORD *)v84 + 4) = v87;
      (**(void (***)(void))(v86 - 8))();
    }
    else
    {
      v88 = *((_OWORD *)v85 + 1);
      *(_OWORD *)v84 = *(_OWORD *)v85;
      *((_OWORD *)v84 + 1) = v88;
      *((_QWORD *)v84 + 4) = *((_QWORD *)v85 + 4);
    }
    v89 = a3[16];
    v90 = (char *)v4 + v89;
    v91 = (char *)a2 + v89;
    v92 = *((unsigned __int8 *)a2 + v89 + 40);
    if (v92 == 255)
    {
      v93 = *((_OWORD *)v91 + 1);
      *(_OWORD *)v90 = *(_OWORD *)v91;
      *((_OWORD *)v90 + 1) = v93;
      *(_OWORD *)(v90 + 25) = *(_OWORD *)(v91 + 25);
    }
    else if ((v92 & 1) != 0)
    {
      v95 = *(_QWORD *)v91;
      v96 = *(id *)v91;
      *(_QWORD *)v90 = v95;
      v90[40] = 1;
    }
    else
    {
      v94 = *(_OWORD *)(v91 + 24);
      *(_OWORD *)(v90 + 24) = v94;
      (**(void (***)(char *))(v94 - 8))(v90);
      v90[40] = 0;
    }
    v97 = a3[17];
    v98 = (char *)v4 + v97;
    v99 = (char *)a2 + v97;
    v100 = *((unsigned __int8 *)a2 + v97 + 40);
    if (v100 == 255)
    {
      v101 = *((_OWORD *)v99 + 1);
      *(_OWORD *)v98 = *(_OWORD *)v99;
      *((_OWORD *)v98 + 1) = v101;
      *(_OWORD *)(v98 + 25) = *(_OWORD *)(v99 + 25);
    }
    else if ((v100 & 1) != 0)
    {
      v103 = *(_QWORD *)v99;
      v104 = *(id *)v99;
      *(_QWORD *)v98 = v103;
      v98[40] = 1;
    }
    else
    {
      v102 = *(_OWORD *)(v99 + 24);
      *(_OWORD *)(v98 + 24) = v102;
      (**(void (***)(char *))(v102 - 8))(v98);
      v98[40] = 0;
    }
    v105 = a3[18];
    v106 = (char *)v4 + v105;
    v107 = (char *)a2 + v105;
    v108 = *((unsigned __int8 *)a2 + v105 + 40);
    if (v108 == 255)
    {
      v109 = *((_OWORD *)v107 + 1);
      *(_OWORD *)v106 = *(_OWORD *)v107;
      *((_OWORD *)v106 + 1) = v109;
      *(_OWORD *)(v106 + 25) = *(_OWORD *)(v107 + 25);
    }
    else if ((v108 & 1) != 0)
    {
      v111 = *(_QWORD *)v107;
      v112 = *(id *)v107;
      *(_QWORD *)v106 = v111;
      v106[40] = 1;
    }
    else
    {
      v110 = *(_OWORD *)(v107 + 24);
      *(_OWORD *)(v106 + 24) = v110;
      (**(void (***)(char *))(v110 - 8))(v106);
      v106[40] = 0;
    }
    v113 = a3[19];
    v114 = (char *)v4 + v113;
    v115 = (char *)a2 + v113;
    v116 = *((unsigned __int8 *)a2 + v113 + 40);
    if (v116 == 255)
    {
      v117 = *((_OWORD *)v115 + 1);
      *(_OWORD *)v114 = *(_OWORD *)v115;
      *((_OWORD *)v114 + 1) = v117;
      *(_OWORD *)(v114 + 25) = *(_OWORD *)(v115 + 25);
    }
    else if ((v116 & 1) != 0)
    {
      v119 = *(_QWORD *)v115;
      v120 = *(id *)v115;
      *(_QWORD *)v114 = v119;
      v114[40] = 1;
    }
    else
    {
      v118 = *(_OWORD *)(v115 + 24);
      *(_OWORD *)(v114 + 24) = v118;
      (**(void (***)(char *))(v118 - 8))(v114);
      v114[40] = 0;
    }
  }
  return v4;
}

id sub_23F3CB7D0(id a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return a1;
  else
    return (id)sub_23F3CB7DC((uint64_t)a1);
}

uint64_t sub_23F3CB7DC(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return sub_23F617BA0();
  }
  return result;
}

void sub_23F3CB814(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[7]);
  v8 = a1 + a2[8];
  sub_23F3CBAB8(*(id *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_BYTE *)(v8 + 32));
  v9 = a1 + a2[9];
  v10 = sub_23F61B104();
  if (!sub_23F36195C(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[10];
  if (*(_QWORD *)(v11 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v11);
  v12 = a1 + a2[11];
  v13 = *(unsigned __int8 *)(v12 + 40);
  if (v13 != 255)
  {
    if ((v13 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v12);
  }
  v14 = a1 + a2[12];
  if (*(_QWORD *)(v14 + 24))
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[12]);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v14 + 40);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v14 + 80);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v14 + 120);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v14 + 160);
  }
  v15 = (_QWORD *)(a1 + a2[13]);
  if (v15[13])
  {
    if (v15[3])
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[13]);
    if (v15[8])
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v15 + 5));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v15 + 10));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v15 + 15));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v15 + 20));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v15 + 25));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v15 + 30));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v15 + 35));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v15 + 40));
  }
  v16 = a1 + a2[14];
  v17 = *(unsigned __int8 *)(v16 + 40);
  if (v17 != 255)
  {
    if ((v17 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v16);
  }
  v18 = a1 + a2[15];
  if (*(_QWORD *)(v18 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v18);
  v19 = a1 + a2[16];
  v20 = *(unsigned __int8 *)(v19 + 40);
  if (v20 != 255)
  {
    if ((v20 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v19);
  }
  v21 = a1 + a2[17];
  v22 = *(unsigned __int8 *)(v21 + 40);
  if (v22 != 255)
  {
    if ((v22 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v21);
  }
  v23 = a1 + a2[18];
  v24 = *(unsigned __int8 *)(v23 + 40);
  if (v24 != 255)
  {
    if ((v24 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v23);
  }
  v25 = a1 + a2[19];
  v26 = *(unsigned __int8 *)(v25 + 40);
  if (v26 != 255)
  {
    if ((v26 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v25);
  }
}

void sub_23F3CBAB8(id a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)

  else
    sub_23F3CBAC4((uint64_t)a1);
}

uint64_t sub_23F3CBAC4(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_23F3CBAFC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  _OWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  int v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  char *v96;
  char *v97;
  int v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  char *v104;
  char *v105;
  int v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  char *v112;
  char *v113;
  int v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  id v118;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F6170CC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_23F617BA0();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = *(_OWORD *)((char *)a2 + v16 + 24);
  *(_OWORD *)((char *)a1 + v16 + 24) = v17;
  (**(void (***)(void))(v17 - 8))();
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *(id *)v20;
  v22 = *((_QWORD *)v20 + 1);
  v23 = *((_QWORD *)v20 + 2);
  v24 = *((_QWORD *)v20 + 3);
  LOBYTE(v11) = v20[32];
  sub_23F3CB7D0(*(id *)v20, v22, v23, v24, (char)v11);
  *(_QWORD *)v19 = v21;
  *((_QWORD *)v19 + 1) = v22;
  *((_QWORD *)v19 + 2) = v23;
  *((_QWORD *)v19 + 3) = v24;
  v19[32] = (char)v11;
  v25 = a3[9];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_23F61B104();
  if (sub_23F36195C((uint64_t)v27, 1, v28))
  {
    v29 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    sub_23F36196C((uint64_t)v26, 0, 1, v28);
  }
  v30 = a3[10];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = *(_QWORD *)((char *)a2 + v30 + 24);
  if (v33)
  {
    v34 = *((_QWORD *)v32 + 4);
    *((_QWORD *)v31 + 3) = v33;
    *((_QWORD *)v31 + 4) = v34;
    (**(void (***)(void))(v33 - 8))();
  }
  else
  {
    v35 = *((_OWORD *)v32 + 1);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v35;
    *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
  }
  v36 = a3[11];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *((unsigned __int8 *)a2 + v36 + 40);
  if (v39 == 255)
  {
    v40 = *((_OWORD *)v38 + 1);
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v40;
    *(_OWORD *)(v37 + 25) = *(_OWORD *)(v38 + 25);
  }
  else if ((v39 & 1) != 0)
  {
    v42 = *(_QWORD *)v38;
    v43 = *(id *)v38;
    *(_QWORD *)v37 = v42;
    v37[40] = 1;
  }
  else
  {
    v41 = *(_OWORD *)(v38 + 24);
    *(_OWORD *)(v37 + 24) = v41;
    (**(void (***)(char *))(v41 - 8))(v37);
    v37[40] = 0;
  }
  v44 = a3[12];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = *(_QWORD *)((char *)a2 + v44 + 24);
  if (v47)
  {
    v48 = *((_QWORD *)v46 + 4);
    *((_QWORD *)v45 + 3) = v47;
    *((_QWORD *)v45 + 4) = v48;
    (**(void (***)(char *, char *))(v47 - 8))(v45, v46);
    v49 = *((_OWORD *)v46 + 4);
    *((_OWORD *)v45 + 4) = v49;
    (**(void (***)(uint64_t, uint64_t))(v49 - 8))((uint64_t)(v45 + 40), (uint64_t)(v46 + 40));
    v50 = *(_OWORD *)(v46 + 104);
    *(_OWORD *)(v45 + 104) = v50;
    (**(void (***)(uint64_t, uint64_t))(v50 - 8))((uint64_t)(v45 + 80), (uint64_t)(v46 + 80));
    v51 = *((_OWORD *)v46 + 9);
    *((_OWORD *)v45 + 9) = v51;
    (**(void (***)(uint64_t, uint64_t))(v51 - 8))((uint64_t)(v45 + 120), (uint64_t)(v46 + 120));
    v52 = *(_OWORD *)(v46 + 184);
    *(_OWORD *)(v45 + 184) = v52;
    (**(void (***)(uint64_t, uint64_t))(v52 - 8))((uint64_t)(v45 + 160), (uint64_t)(v46 + 160));
  }
  else
  {
    memcpy((char *)a1 + v44, (char *)a2 + v44, 0xC8uLL);
  }
  v53 = a3[13];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  if (*(_QWORD *)((char *)a2 + v53 + 104))
  {
    v56 = *((_QWORD *)v55 + 3);
    if (v56)
    {
      v57 = *((_QWORD *)v55 + 4);
      *((_QWORD *)v54 + 3) = v56;
      *((_QWORD *)v54 + 4) = v57;
      (**(void (***)(void *, const void *))(v56 - 8))(v54, v55);
    }
    else
    {
      v58 = *((_OWORD *)v55 + 1);
      *(_OWORD *)v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v58;
      *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
    }
    v59 = v54 + 40;
    v60 = v55 + 40;
    v61 = *((_QWORD *)v55 + 8);
    if (v61)
    {
      v62 = *((_QWORD *)v55 + 9);
      *((_QWORD *)v54 + 8) = v61;
      *((_QWORD *)v54 + 9) = v62;
      (**(void (***)(_OWORD *, _OWORD *))(v61 - 8))(v59, v60);
    }
    else
    {
      v63 = *(_OWORD *)(v55 + 56);
      *v59 = *v60;
      *(_OWORD *)(v54 + 56) = v63;
      *((_QWORD *)v54 + 9) = *((_QWORD *)v55 + 9);
    }
    v64 = *(_OWORD *)(v55 + 104);
    *(_OWORD *)(v54 + 104) = v64;
    (**(void (***)(uint64_t, uint64_t))(v64 - 8))((uint64_t)(v54 + 80), (uint64_t)(v55 + 80));
    v65 = *((_OWORD *)v55 + 9);
    *((_OWORD *)v54 + 9) = v65;
    (**(void (***)(uint64_t, uint64_t))(v65 - 8))((uint64_t)(v54 + 120), (uint64_t)(v55 + 120));
    v66 = *(_OWORD *)(v55 + 184);
    *(_OWORD *)(v54 + 184) = v66;
    (**(void (***)(uint64_t, uint64_t))(v66 - 8))((uint64_t)(v54 + 160), (uint64_t)(v55 + 160));
    v67 = *((_OWORD *)v55 + 14);
    *((_OWORD *)v54 + 14) = v67;
    (**(void (***)(uint64_t, uint64_t))(v67 - 8))((uint64_t)(v54 + 200), (uint64_t)(v55 + 200));
    v68 = *((_QWORD *)v55 + 33);
    v69 = *((_QWORD *)v55 + 34);
    *((_QWORD *)v54 + 33) = v68;
    *((_QWORD *)v54 + 34) = v69;
    (**(void (***)(uint64_t, uint64_t))(v68 - 8))((uint64_t)(v54 + 240), (uint64_t)(v55 + 240));
    v70 = *((_OWORD *)v55 + 19);
    *((_OWORD *)v54 + 19) = v70;
    (**(void (***)(uint64_t, uint64_t))(v70 - 8))((uint64_t)(v54 + 280), (uint64_t)(v55 + 280));
    v71 = *((_QWORD *)v55 + 43);
    v72 = *((_QWORD *)v55 + 44);
    *((_QWORD *)v54 + 43) = v71;
    *((_QWORD *)v54 + 44) = v72;
    (**(void (***)(uint64_t, uint64_t))(v71 - 8))((uint64_t)(v54 + 320), (uint64_t)(v55 + 320));
  }
  else
  {
    memcpy(v54, v55, 0x168uLL);
  }
  v73 = a3[14];
  v74 = (char *)a1 + v73;
  v75 = (char *)a2 + v73;
  v76 = *((unsigned __int8 *)a2 + v73 + 40);
  if (v76 == 255)
  {
    v77 = *((_OWORD *)v75 + 1);
    *(_OWORD *)v74 = *(_OWORD *)v75;
    *((_OWORD *)v74 + 1) = v77;
    *(_OWORD *)(v74 + 25) = *(_OWORD *)(v75 + 25);
  }
  else if ((v76 & 1) != 0)
  {
    v79 = *(_QWORD *)v75;
    v80 = *(id *)v75;
    *(_QWORD *)v74 = v79;
    v74[40] = 1;
  }
  else
  {
    v78 = *(_OWORD *)(v75 + 24);
    *(_OWORD *)(v74 + 24) = v78;
    (**(void (***)(char *))(v78 - 8))(v74);
    v74[40] = 0;
  }
  v81 = a3[15];
  v82 = (char *)a1 + v81;
  v83 = (char *)a2 + v81;
  v84 = *(_QWORD *)((char *)a2 + v81 + 24);
  if (v84)
  {
    v85 = *((_QWORD *)v83 + 4);
    *((_QWORD *)v82 + 3) = v84;
    *((_QWORD *)v82 + 4) = v85;
    (**(void (***)(void))(v84 - 8))();
  }
  else
  {
    v86 = *((_OWORD *)v83 + 1);
    *(_OWORD *)v82 = *(_OWORD *)v83;
    *((_OWORD *)v82 + 1) = v86;
    *((_QWORD *)v82 + 4) = *((_QWORD *)v83 + 4);
  }
  v87 = a3[16];
  v88 = (char *)a1 + v87;
  v89 = (char *)a2 + v87;
  v90 = *((unsigned __int8 *)a2 + v87 + 40);
  if (v90 == 255)
  {
    v91 = *((_OWORD *)v89 + 1);
    *(_OWORD *)v88 = *(_OWORD *)v89;
    *((_OWORD *)v88 + 1) = v91;
    *(_OWORD *)(v88 + 25) = *(_OWORD *)(v89 + 25);
  }
  else if ((v90 & 1) != 0)
  {
    v93 = *(_QWORD *)v89;
    v94 = *(id *)v89;
    *(_QWORD *)v88 = v93;
    v88[40] = 1;
  }
  else
  {
    v92 = *(_OWORD *)(v89 + 24);
    *(_OWORD *)(v88 + 24) = v92;
    (**(void (***)(char *))(v92 - 8))(v88);
    v88[40] = 0;
  }
  v95 = a3[17];
  v96 = (char *)a1 + v95;
  v97 = (char *)a2 + v95;
  v98 = *((unsigned __int8 *)a2 + v95 + 40);
  if (v98 == 255)
  {
    v99 = *((_OWORD *)v97 + 1);
    *(_OWORD *)v96 = *(_OWORD *)v97;
    *((_OWORD *)v96 + 1) = v99;
    *(_OWORD *)(v96 + 25) = *(_OWORD *)(v97 + 25);
  }
  else if ((v98 & 1) != 0)
  {
    v101 = *(_QWORD *)v97;
    v102 = *(id *)v97;
    *(_QWORD *)v96 = v101;
    v96[40] = 1;
  }
  else
  {
    v100 = *(_OWORD *)(v97 + 24);
    *(_OWORD *)(v96 + 24) = v100;
    (**(void (***)(char *))(v100 - 8))(v96);
    v96[40] = 0;
  }
  v103 = a3[18];
  v104 = (char *)a1 + v103;
  v105 = (char *)a2 + v103;
  v106 = *((unsigned __int8 *)a2 + v103 + 40);
  if (v106 == 255)
  {
    v107 = *((_OWORD *)v105 + 1);
    *(_OWORD *)v104 = *(_OWORD *)v105;
    *((_OWORD *)v104 + 1) = v107;
    *(_OWORD *)(v104 + 25) = *(_OWORD *)(v105 + 25);
  }
  else if ((v106 & 1) != 0)
  {
    v109 = *(_QWORD *)v105;
    v110 = *(id *)v105;
    *(_QWORD *)v104 = v109;
    v104[40] = 1;
  }
  else
  {
    v108 = *(_OWORD *)(v105 + 24);
    *(_OWORD *)(v104 + 24) = v108;
    (**(void (***)(char *))(v108 - 8))(v104);
    v104[40] = 0;
  }
  v111 = a3[19];
  v112 = (char *)a1 + v111;
  v113 = (char *)a2 + v111;
  v114 = *((unsigned __int8 *)a2 + v111 + 40);
  if (v114 == 255)
  {
    v115 = *((_OWORD *)v113 + 1);
    *(_OWORD *)v112 = *(_OWORD *)v113;
    *((_OWORD *)v112 + 1) = v115;
    *(_OWORD *)(v112 + 25) = *(_OWORD *)(v113 + 25);
  }
  else if ((v114 & 1) != 0)
  {
    v117 = *(_QWORD *)v113;
    v118 = *(id *)v113;
    *(_QWORD *)v112 = v117;
    v112[40] = 1;
  }
  else
  {
    v116 = *(_OWORD *)(v113 + 24);
    *(_OWORD *)(v112 + 24) = v116;
    (**(void (***)(char *))(v116 - 8))(v112);
    v112[40] = 0;
  }
  return a1;
}

_QWORD *sub_23F3CC1C0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  _OWORD *v70;
  __int128 *v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  int v87;
  int v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  void *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  int v105;
  int v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  void *v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  int v115;
  int v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  void *v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  int v127;
  int v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  void *v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  int v139;
  int v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  id v146;
  uint64_t v147;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  sub_23F361AD0((_QWORD *)((char *)a1 + a3[7]), (_QWORD *)((char *)a2 + a3[7]));
  v14 = a3[8];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(id *)v16;
  v18 = *((_QWORD *)v16 + 1);
  v19 = *((_QWORD *)v16 + 2);
  v20 = *((_QWORD *)v16 + 3);
  v21 = v16[32];
  sub_23F3CB7D0(*(id *)v16, v18, v19, v20, v21);
  v22 = *(void **)v15;
  v23 = *((_QWORD *)v15 + 1);
  v24 = *((_QWORD *)v15 + 2);
  v25 = *((_QWORD *)v15 + 3);
  v26 = v15[32];
  *(_QWORD *)v15 = v17;
  *((_QWORD *)v15 + 1) = v18;
  *((_QWORD *)v15 + 2) = v19;
  *((_QWORD *)v15 + 3) = v20;
  v15[32] = v21;
  sub_23F3CBAB8(v22, v23, v24, v25, v26);
  v27 = a3[9];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_23F61B104();
  LODWORD(v20) = sub_23F36195C((uint64_t)v28, 1, v30);
  v31 = sub_23F36195C((uint64_t)v29, 1, v30);
  if ((_DWORD)v20)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
      sub_23F36196C((uint64_t)v28, 0, 1, v30);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v32 = *(_QWORD *)(v30 - 8);
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v30);
LABEL_6:
    v33 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 24))(v28, v29, v30);
LABEL_7:
  v34 = a3[10];
  v35 = (uint64_t)a1 + v34;
  v36 = (_QWORD *)((char *)a2 + v34);
  v37 = *(_QWORD *)((char *)a2 + v34 + 24);
  if (*(_QWORD *)((char *)a1 + v34 + 24))
  {
    if (v37)
    {
      sub_23F361AD0((uint64_t *)v35, v36);
      goto LABEL_14;
    }
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v35);
  }
  else if (v37)
  {
    *(_QWORD *)(v35 + 24) = v37;
    *(_QWORD *)(v35 + 32) = v36[4];
    (**(void (***)(uint64_t, char *))(v37 - 8))(v35, (char *)v36);
    goto LABEL_14;
  }
  v38 = *(_OWORD *)v36;
  v39 = *((_OWORD *)v36 + 1);
  *(_QWORD *)(v35 + 32) = v36[4];
  *(_OWORD *)v35 = v38;
  *(_OWORD *)(v35 + 16) = v39;
LABEL_14:
  v40 = a3[11];
  v41 = (uint64_t)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = *((unsigned __int8 *)a1 + v40 + 40);
  v44 = v42[40];
  if (v43 != 255)
  {
    if (v44 != 255)
    {
      if (a1 == a2)
        goto LABEL_30;
      if ((v43 & 1) != 0)

      else
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v41);
      if ((v42[40] & 1) == 0)
        goto LABEL_17;
      goto LABEL_29;
    }
    if ((v43 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v41);
LABEL_26:
    v46 = *(_OWORD *)v42;
    v47 = *((_OWORD *)v42 + 1);
    *(_OWORD *)(v41 + 25) = *(_OWORD *)(v42 + 25);
    *(_OWORD *)v41 = v46;
    *(_OWORD *)(v41 + 16) = v47;
    goto LABEL_30;
  }
  if (v44 == 255)
    goto LABEL_26;
  if ((v44 & 1) == 0)
  {
LABEL_17:
    v45 = *((_QWORD *)v42 + 3);
    *(_QWORD *)(v41 + 24) = v45;
    *(_QWORD *)(v41 + 32) = *((_QWORD *)v42 + 4);
    (**(void (***)(uint64_t, char *))(v45 - 8))(v41, v42);
    *(_BYTE *)(v41 + 40) = 0;
    goto LABEL_30;
  }
LABEL_29:
  v48 = *(void **)v42;
  v49 = v48;
  *(_QWORD *)v41 = v48;
  *(_BYTE *)(v41 + 40) = 1;
LABEL_30:
  v50 = a3[12];
  v51 = (_QWORD *)((char *)a1 + v50);
  v52 = (_QWORD *)((char *)a2 + v50);
  v53 = *(_QWORD *)((char *)a2 + v50 + 24);
  if (*(_QWORD *)((char *)a1 + v50 + 24))
  {
    if (v53)
    {
      sub_23F361AD0(v51, v52);
      sub_23F361AD0(v51 + 5, v52 + 5);
      sub_23F361AD0(v51 + 10, v52 + 10);
      sub_23F361AD0(v51 + 15, v52 + 15);
      sub_23F361AD0(v51 + 20, v52 + 20);
      goto LABEL_37;
    }
    sub_23F38BB88((uint64_t)v51);
  }
  else if (v53)
  {
    v51[3] = v53;
    v51[4] = v52[4];
    (**(void (***)(uint64_t *, uint64_t *))(v53 - 8))(v51, v52);
    v54 = v52[8];
    v51[8] = v54;
    v51[9] = v52[9];
    (**(void (***)(uint64_t, uint64_t))(v54 - 8))((uint64_t)(v51 + 5), (uint64_t)(v52 + 5));
    v55 = v52[13];
    v51[13] = v55;
    v51[14] = v52[14];
    (**(void (***)(uint64_t, uint64_t))(v55 - 8))((uint64_t)(v51 + 10), (uint64_t)(v52 + 10));
    v56 = v52[18];
    v51[18] = v56;
    v51[19] = v52[19];
    (**(void (***)(uint64_t, uint64_t))(v56 - 8))((uint64_t)(v51 + 15), (uint64_t)(v52 + 15));
    v57 = v52[23];
    v51[23] = v57;
    v51[24] = v52[24];
    (**(void (***)(uint64_t, uint64_t))(v57 - 8))((uint64_t)(v51 + 20), (uint64_t)(v52 + 20));
    goto LABEL_37;
  }
  memcpy(v51, v52, 0xC8uLL);
LABEL_37:
  v58 = a3[13];
  v59 = (uint64_t)a1 + v58;
  v60 = (char *)a2 + v58;
  v61 = *(_QWORD *)((char *)a1 + v58 + 104);
  v62 = *(_QWORD *)((char *)a2 + v58 + 104);
  if (v61)
  {
    if (v62)
    {
      v63 = *((_QWORD *)v60 + 3);
      if (*(_QWORD *)(v59 + 24))
      {
        if (v63)
        {
          sub_23F361AD0((uint64_t *)v59, (uint64_t *)v60);
          goto LABEL_51;
        }
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v59);
      }
      else if (v63)
      {
        *(_QWORD *)(v59 + 24) = v63;
        *(_QWORD *)(v59 + 32) = *((_QWORD *)v60 + 4);
        (**(void (***)(uint64_t, char *))(v63 - 8))(v59, v60);
        goto LABEL_51;
      }
      v65 = *(_OWORD *)v60;
      v66 = *((_OWORD *)v60 + 1);
      *(_QWORD *)(v59 + 32) = *((_QWORD *)v60 + 4);
      *(_OWORD *)v59 = v65;
      *(_OWORD *)(v59 + 16) = v66;
LABEL_51:
      v67 = *((_QWORD *)v60 + 8);
      if (*(_QWORD *)(v59 + 64))
      {
        if (v67)
        {
          sub_23F361AD0((uint64_t *)(v59 + 40), (uint64_t *)v60 + 5);
LABEL_61:
          sub_23F361AD0((uint64_t *)(v59 + 80), (uint64_t *)v60 + 10);
          sub_23F361AD0((uint64_t *)(v59 + 120), (uint64_t *)v60 + 15);
          sub_23F361AD0((uint64_t *)(v59 + 160), (uint64_t *)v60 + 20);
          sub_23F361AD0((uint64_t *)(v59 + 200), (uint64_t *)v60 + 25);
          sub_23F361AD0((uint64_t *)(v59 + 240), (uint64_t *)v60 + 30);
          sub_23F361AD0((uint64_t *)(v59 + 280), (uint64_t *)v60 + 35);
          sub_23F361AD0((uint64_t *)(v59 + 320), (uint64_t *)v60 + 40);
          goto LABEL_64;
        }
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v59 + 40);
      }
      else if (v67)
      {
        *(_QWORD *)(v59 + 64) = v67;
        *(_QWORD *)(v59 + 72) = *((_QWORD *)v60 + 9);
        (**(void (***)(uint64_t, uint64_t))(v67 - 8))(v59 + 40, (uint64_t)(v60 + 40));
        goto LABEL_61;
      }
      v73 = *(_OWORD *)(v60 + 40);
      v74 = *(_OWORD *)(v60 + 56);
      *(_QWORD *)(v59 + 72) = *((_QWORD *)v60 + 9);
      *(_OWORD *)(v59 + 40) = v73;
      *(_OWORD *)(v59 + 56) = v74;
      goto LABEL_61;
    }
    sub_23F38BBBC(v59);
LABEL_46:
    memcpy((void *)v59, v60, 0x168uLL);
    goto LABEL_64;
  }
  if (!v62)
    goto LABEL_46;
  v64 = *((_QWORD *)v60 + 3);
  if (v64)
  {
    *(_QWORD *)(v59 + 24) = v64;
    *(_QWORD *)(v59 + 32) = *((_QWORD *)v60 + 4);
    (**(void (***)(uint64_t, char *))(v64 - 8))(v59, v60);
  }
  else
  {
    v68 = *(_OWORD *)v60;
    v69 = *((_OWORD *)v60 + 1);
    *(_QWORD *)(v59 + 32) = *((_QWORD *)v60 + 4);
    *(_OWORD *)v59 = v68;
    *(_OWORD *)(v59 + 16) = v69;
  }
  v70 = (_OWORD *)(v59 + 40);
  v71 = (__int128 *)(v60 + 40);
  v72 = *((_QWORD *)v60 + 8);
  if (v72)
  {
    *(_QWORD *)(v59 + 64) = v72;
    *(_QWORD *)(v59 + 72) = *((_QWORD *)v60 + 9);
    (**(void (***)(_OWORD *, __int128 *))(v72 - 8))(v70, v71);
  }
  else
  {
    v75 = *v71;
    v76 = *(_OWORD *)(v60 + 56);
    *(_QWORD *)(v59 + 72) = *((_QWORD *)v60 + 9);
    *v70 = v75;
    *(_OWORD *)(v59 + 56) = v76;
  }
  v77 = *((_QWORD *)v60 + 13);
  *(_QWORD *)(v59 + 104) = v77;
  *(_QWORD *)(v59 + 112) = *((_QWORD *)v60 + 14);
  (**(void (***)(uint64_t, uint64_t))(v77 - 8))(v59 + 80, (uint64_t)(v60 + 80));
  v78 = *((_QWORD *)v60 + 18);
  *(_QWORD *)(v59 + 144) = v78;
  *(_QWORD *)(v59 + 152) = *((_QWORD *)v60 + 19);
  (**(void (***)(uint64_t, uint64_t))(v78 - 8))(v59 + 120, (uint64_t)(v60 + 120));
  v79 = *((_QWORD *)v60 + 23);
  *(_QWORD *)(v59 + 184) = v79;
  *(_QWORD *)(v59 + 192) = *((_QWORD *)v60 + 24);
  (**(void (***)(uint64_t, uint64_t))(v79 - 8))(v59 + 160, (uint64_t)(v60 + 160));
  v80 = *((_QWORD *)v60 + 28);
  *(_QWORD *)(v59 + 224) = v80;
  *(_QWORD *)(v59 + 232) = *((_QWORD *)v60 + 29);
  (**(void (***)(uint64_t, uint64_t))(v80 - 8))(v59 + 200, (uint64_t)(v60 + 200));
  v81 = *((_QWORD *)v60 + 33);
  *(_QWORD *)(v59 + 264) = v81;
  *(_QWORD *)(v59 + 272) = *((_QWORD *)v60 + 34);
  (**(void (***)(uint64_t, uint64_t))(v81 - 8))(v59 + 240, (uint64_t)(v60 + 240));
  v82 = *((_QWORD *)v60 + 38);
  *(_QWORD *)(v59 + 304) = v82;
  *(_QWORD *)(v59 + 312) = *((_QWORD *)v60 + 39);
  (**(void (***)(uint64_t, uint64_t))(v82 - 8))(v59 + 280, (uint64_t)(v60 + 280));
  v83 = *((_QWORD *)v60 + 43);
  *(_QWORD *)(v59 + 344) = v83;
  *(_QWORD *)(v59 + 352) = *((_QWORD *)v60 + 44);
  (**(void (***)(uint64_t, uint64_t))(v83 - 8))(v59 + 320, (uint64_t)(v60 + 320));
LABEL_64:
  v84 = a3[14];
  v85 = (uint64_t)a1 + v84;
  v86 = (char *)a2 + v84;
  v87 = *((unsigned __int8 *)a1 + v84 + 40);
  v88 = *((unsigned __int8 *)a2 + v84 + 40);
  if (v87 == 255)
  {
    if (v88 == 255)
    {
      v91 = *(_OWORD *)v86;
      v92 = *((_OWORD *)v86 + 1);
      *(_OWORD *)(v85 + 25) = *(_OWORD *)(v86 + 25);
      *(_OWORD *)v85 = v91;
      *(_OWORD *)(v85 + 16) = v92;
      goto LABEL_74;
    }
    if ((v88 & 1) != 0)
      goto LABEL_71;
LABEL_73:
    v95 = *((_QWORD *)v86 + 3);
    *(_QWORD *)(v85 + 24) = v95;
    *(_QWORD *)(v85 + 32) = *((_QWORD *)v86 + 4);
    (**(void (***)(uint64_t, char *))(v95 - 8))(v85, v86);
    *(_BYTE *)(v85 + 40) = 0;
    goto LABEL_74;
  }
  if (v88 == 255)
  {
    sub_23F3625D8(v85, &qword_256E705E8);
    v89 = *(_OWORD *)(v86 + 25);
    v90 = *((_OWORD *)v86 + 1);
    *(_OWORD *)v85 = *(_OWORD *)v86;
    *(_OWORD *)(v85 + 16) = v90;
    *(_OWORD *)(v85 + 25) = v89;
    goto LABEL_74;
  }
  if (a1 != a2)
  {
    sub_23F3625D8(v85, &qword_256E705E8);
    if ((v86[40] & 1) != 0)
    {
LABEL_71:
      v93 = *(void **)v86;
      v94 = v93;
      *(_QWORD *)v85 = v93;
      *(_BYTE *)(v85 + 40) = 1;
      goto LABEL_74;
    }
    goto LABEL_73;
  }
LABEL_74:
  v96 = a3[15];
  v97 = (uint64_t)a1 + v96;
  v98 = (_QWORD *)((char *)a2 + v96);
  v99 = *(_QWORD *)((char *)a2 + v96 + 24);
  if (*(_QWORD *)((char *)a1 + v96 + 24))
  {
    if (v99)
    {
      sub_23F361AD0((uint64_t *)v97, v98);
      goto LABEL_81;
    }
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v97);
  }
  else if (v99)
  {
    *(_QWORD *)(v97 + 24) = v99;
    *(_QWORD *)(v97 + 32) = v98[4];
    (**(void (***)(uint64_t, char *))(v99 - 8))(v97, (char *)v98);
    goto LABEL_81;
  }
  v100 = *(_OWORD *)v98;
  v101 = *((_OWORD *)v98 + 1);
  *(_QWORD *)(v97 + 32) = v98[4];
  *(_OWORD *)v97 = v100;
  *(_OWORD *)(v97 + 16) = v101;
LABEL_81:
  v102 = a3[16];
  v103 = (uint64_t)a1 + v102;
  v104 = (char *)a2 + v102;
  v105 = *((unsigned __int8 *)a1 + v102 + 40);
  v106 = v104[40];
  if (v105 != 255)
  {
    if (v106 != 255)
    {
      if (a1 == a2)
        goto LABEL_96;
      if ((v105 & 1) != 0)

      else
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v103);
      if ((v104[40] & 1) == 0)
        goto LABEL_84;
      goto LABEL_95;
    }
    if ((v105 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v103);
LABEL_92:
    v108 = *(_OWORD *)v104;
    v109 = *((_OWORD *)v104 + 1);
    *(_OWORD *)(v103 + 25) = *(_OWORD *)(v104 + 25);
    *(_OWORD *)v103 = v108;
    *(_OWORD *)(v103 + 16) = v109;
    goto LABEL_96;
  }
  if (v106 == 255)
    goto LABEL_92;
  if ((v106 & 1) == 0)
  {
LABEL_84:
    v107 = *((_QWORD *)v104 + 3);
    *(_QWORD *)(v103 + 24) = v107;
    *(_QWORD *)(v103 + 32) = *((_QWORD *)v104 + 4);
    (**(void (***)(uint64_t, char *))(v107 - 8))(v103, v104);
    *(_BYTE *)(v103 + 40) = 0;
    goto LABEL_96;
  }
LABEL_95:
  v110 = *(void **)v104;
  v111 = v110;
  *(_QWORD *)v103 = v110;
  *(_BYTE *)(v103 + 40) = 1;
LABEL_96:
  v112 = a3[17];
  v113 = (uint64_t)a1 + v112;
  v114 = (char *)a2 + v112;
  v115 = *((unsigned __int8 *)a1 + v112 + 40);
  v116 = *((unsigned __int8 *)a2 + v112 + 40);
  if (v115 == 255)
  {
    if (v116 == 255)
    {
      v119 = *(_OWORD *)v114;
      v120 = *((_OWORD *)v114 + 1);
      *(_OWORD *)(v113 + 25) = *(_OWORD *)(v114 + 25);
      *(_OWORD *)v113 = v119;
      *(_OWORD *)(v113 + 16) = v120;
      goto LABEL_106;
    }
    if ((v116 & 1) != 0)
      goto LABEL_103;
LABEL_105:
    v123 = *((_QWORD *)v114 + 3);
    *(_QWORD *)(v113 + 24) = v123;
    *(_QWORD *)(v113 + 32) = *((_QWORD *)v114 + 4);
    (**(void (***)(uint64_t, char *))(v123 - 8))(v113, v114);
    *(_BYTE *)(v113 + 40) = 0;
    goto LABEL_106;
  }
  if (v116 == 255)
  {
    sub_23F3625D8(v113, &qword_256E705F0);
    v117 = *(_OWORD *)(v114 + 25);
    v118 = *((_OWORD *)v114 + 1);
    *(_OWORD *)v113 = *(_OWORD *)v114;
    *(_OWORD *)(v113 + 16) = v118;
    *(_OWORD *)(v113 + 25) = v117;
    goto LABEL_106;
  }
  if (a1 != a2)
  {
    sub_23F3625D8(v113, &qword_256E705F0);
    if ((v114[40] & 1) != 0)
    {
LABEL_103:
      v121 = *(void **)v114;
      v122 = v121;
      *(_QWORD *)v113 = v121;
      *(_BYTE *)(v113 + 40) = 1;
      goto LABEL_106;
    }
    goto LABEL_105;
  }
LABEL_106:
  v124 = a3[18];
  v125 = (uint64_t)a1 + v124;
  v126 = (char *)a2 + v124;
  v127 = *((unsigned __int8 *)a1 + v124 + 40);
  v128 = *((unsigned __int8 *)a2 + v124 + 40);
  if (v127 == 255)
  {
    if (v128 == 255)
    {
      v131 = *(_OWORD *)v126;
      v132 = *((_OWORD *)v126 + 1);
      *(_OWORD *)(v125 + 25) = *(_OWORD *)(v126 + 25);
      *(_OWORD *)v125 = v131;
      *(_OWORD *)(v125 + 16) = v132;
      goto LABEL_116;
    }
    if ((v128 & 1) != 0)
      goto LABEL_113;
LABEL_115:
    v135 = *((_QWORD *)v126 + 3);
    *(_QWORD *)(v125 + 24) = v135;
    *(_QWORD *)(v125 + 32) = *((_QWORD *)v126 + 4);
    (**(void (***)(uint64_t, char *))(v135 - 8))(v125, v126);
    *(_BYTE *)(v125 + 40) = 0;
    goto LABEL_116;
  }
  if (v128 == 255)
  {
    sub_23F3625D8(v125, &qword_256E705F8);
    v129 = *(_OWORD *)(v126 + 25);
    v130 = *((_OWORD *)v126 + 1);
    *(_OWORD *)v125 = *(_OWORD *)v126;
    *(_OWORD *)(v125 + 16) = v130;
    *(_OWORD *)(v125 + 25) = v129;
    goto LABEL_116;
  }
  if (a1 != a2)
  {
    sub_23F3625D8(v125, &qword_256E705F8);
    if ((v126[40] & 1) != 0)
    {
LABEL_113:
      v133 = *(void **)v126;
      v134 = v133;
      *(_QWORD *)v125 = v133;
      *(_BYTE *)(v125 + 40) = 1;
      goto LABEL_116;
    }
    goto LABEL_115;
  }
LABEL_116:
  v136 = a3[19];
  v137 = (uint64_t)a1 + v136;
  v138 = (char *)a2 + v136;
  v139 = *((unsigned __int8 *)a1 + v136 + 40);
  v140 = *((unsigned __int8 *)a2 + v136 + 40);
  if (v139 == 255)
  {
    if (v140 == 255)
    {
      v143 = *(_OWORD *)v138;
      v144 = *((_OWORD *)v138 + 1);
      *(_OWORD *)(v137 + 25) = *(_OWORD *)(v138 + 25);
      *(_OWORD *)v137 = v143;
      *(_OWORD *)(v137 + 16) = v144;
      return a1;
    }
    if ((v140 & 1) != 0)
    {
LABEL_123:
      v145 = *(_QWORD *)v138;
      v146 = *(id *)v138;
      *(_QWORD *)v137 = v145;
      *(_BYTE *)(v137 + 40) = 1;
      return a1;
    }
LABEL_125:
    v147 = *((_QWORD *)v138 + 3);
    *(_QWORD *)(v137 + 24) = v147;
    *(_QWORD *)(v137 + 32) = *((_QWORD *)v138 + 4);
    (**(void (***)(uint64_t, char *))(v147 - 8))(v137, v138);
    *(_BYTE *)(v137 + 40) = 0;
    return a1;
  }
  if (v140 != 255)
  {
    if (a1 == a2)
      return a1;
    sub_23F3625D8(v137, &qword_256E70600);
    if ((v138[40] & 1) != 0)
      goto LABEL_123;
    goto LABEL_125;
  }
  sub_23F3625D8(v137, &qword_256E70600);
  v141 = *(_OWORD *)(v138 + 25);
  v142 = *((_OWORD *)v138 + 1);
  *(_OWORD *)v137 = *(_OWORD *)v138;
  *(_OWORD *)(v137 + 16) = v142;
  *(_OWORD *)(v137 + 25) = v141;
  return a1;
}

_OWORD *sub_23F3CCD2C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  __int128 v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  __int128 v49;
  _OWORD *v50;
  __int128 *v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  _OWORD *v57;
  __int128 v58;
  _OWORD *v59;
  _OWORD *v60;
  __int128 v61;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[7];
  v15 = a3[8];
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  v18 = *(_OWORD *)v17;
  v19 = *((_OWORD *)v17 + 1);
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  *(_OWORD *)v16 = v18;
  *((_OWORD *)v16 + 1) = v19;
  v20 = (char *)a1 + v15;
  v21 = (char *)a2 + v15;
  v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  v20[32] = v21[32];
  v23 = a3[9];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_23F61B104();
  if (sub_23F36195C((uint64_t)v25, 1, v26))
  {
    v27 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    sub_23F36196C((uint64_t)v24, 0, 1, v26);
  }
  v28 = a3[10];
  v29 = a3[11];
  v30 = (char *)a1 + v28;
  v31 = (char *)a2 + v28;
  v32 = *(_OWORD *)v31;
  v33 = *((_OWORD *)v31 + 1);
  *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
  *(_OWORD *)v30 = v32;
  *((_OWORD *)v30 + 1) = v33;
  v34 = (_OWORD *)((char *)a1 + v29);
  v35 = (_OWORD *)((char *)a2 + v29);
  *(_OWORD *)((char *)v34 + 25) = *(_OWORD *)((char *)v35 + 25);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  memcpy((char *)a1 + a3[12], (char *)a2 + a3[12], 0xC8uLL);
  memcpy((char *)a1 + a3[13], (char *)a2 + a3[13], 0x168uLL);
  v37 = a3[14];
  v38 = a3[15];
  v39 = (_OWORD *)((char *)a1 + v37);
  v40 = (_OWORD *)((char *)a2 + v37);
  *(_OWORD *)((char *)v39 + 25) = *(_OWORD *)((char *)v40 + 25);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = (char *)a1 + v38;
  v43 = (char *)a2 + v38;
  *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
  v44 = *((_OWORD *)v43 + 1);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + 1) = v44;
  v45 = a3[16];
  v46 = a3[17];
  v47 = (_OWORD *)((char *)a1 + v45);
  v48 = (_OWORD *)((char *)a2 + v45);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  *(_OWORD *)((char *)v47 + 25) = *(_OWORD *)((char *)v48 + 25);
  v50 = (_OWORD *)((char *)a1 + v46);
  v51 = (_OWORD *)((char *)a2 + v46);
  v52 = *v51;
  v53 = v51[1];
  *(_OWORD *)((char *)v50 + 25) = *(__int128 *)((char *)v51 + 25);
  *v50 = v52;
  v50[1] = v53;
  v54 = a3[18];
  v55 = a3[19];
  v56 = (_OWORD *)((char *)a1 + v54);
  v57 = (_OWORD *)((char *)a2 + v54);
  *(_OWORD *)((char *)v56 + 25) = *(_OWORD *)((char *)v57 + 25);
  v58 = v57[1];
  *v56 = *v57;
  v56[1] = v58;
  v59 = (_OWORD *)((char *)a1 + v55);
  v60 = (_OWORD *)((char *)a2 + v55);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  *(_OWORD *)((char *)v59 + 25) = *(_OWORD *)((char *)v60 + 25);
  return a1;
}

_QWORD *sub_23F3CCF6C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  __int128 v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  _OWORD *v63;
  char *v64;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  int v74;
  __int128 v75;
  uint64_t v76;
  _OWORD *v77;
  char *v78;
  __int128 v80;
  uint64_t v81;
  _OWORD *v82;
  char *v83;
  __int128 v85;
  uint64_t v86;
  _OWORD *v87;
  char *v88;
  __int128 v90;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1 + v15);
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  v19 = a3[8];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = v21[32];
  v23 = *(void **)v20;
  v24 = *((_QWORD *)v20 + 1);
  v25 = *((_QWORD *)v20 + 2);
  v26 = *((_QWORD *)v20 + 3);
  v27 = v20[32];
  v28 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v28;
  v20[32] = v22;
  sub_23F3CBAB8(v23, v24, v25, v26, v27);
  v29 = a3[9];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_23F61B104();
  v33 = sub_23F36195C((uint64_t)v30, 1, v32);
  v34 = sub_23F36195C((uint64_t)v31, 1, v32);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      sub_23F36196C((uint64_t)v30, 0, 1, v32);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v35 = *(_QWORD *)(v32 - 8);
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v32);
LABEL_6:
    v36 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v30, v31, v32);
LABEL_7:
  v37 = a3[10];
  v38 = (uint64_t)a1 + v37;
  v39 = (char *)a2 + v37;
  if (*(_QWORD *)((char *)a1 + v37 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v38);
  v40 = *((_OWORD *)v39 + 1);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  *(_QWORD *)(v38 + 32) = *((_QWORD *)v39 + 4);
  v41 = a3[11];
  v42 = (uint64_t)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = *((unsigned __int8 *)a1 + v41 + 40);
  if (v44 == 255)
    goto LABEL_15;
  if (v43[40] == 255 || a1 != a2)
  {
    if ((v44 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v42);
LABEL_15:
    v45 = *((_OWORD *)v43 + 1);
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *(_OWORD *)(v42 + 16) = v45;
    *(_OWORD *)(v42 + 25) = *(_OWORD *)(v43 + 25);
  }
  v46 = a3[12];
  v47 = (_OWORD *)((char *)a1 + v46);
  v48 = (_OWORD *)((char *)a2 + v46);
  if (*(_QWORD *)((char *)a1 + v46 + 24))
  {
    if (*((_QWORD *)v48 + 3))
    {
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v47);
      v49 = v48[1];
      *v47 = *v48;
      v47[1] = v49;
      *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v47 + 40);
      *(_OWORD *)((char *)v47 + 40) = *(_OWORD *)((char *)v48 + 40);
      *(_OWORD *)((char *)v47 + 56) = *(_OWORD *)((char *)v48 + 56);
      *((_QWORD *)v47 + 9) = *((_QWORD *)v48 + 9);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v47 + 5));
      v50 = v48[6];
      v47[5] = v48[5];
      v47[6] = v50;
      *((_QWORD *)v47 + 14) = *((_QWORD *)v48 + 14);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v47 + 120);
      *(_OWORD *)((char *)v47 + 120) = *(_OWORD *)((char *)v48 + 120);
      *(_OWORD *)((char *)v47 + 136) = *(_OWORD *)((char *)v48 + 136);
      *((_QWORD *)v47 + 19) = *((_QWORD *)v48 + 19);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v47 + 10));
      v51 = v48[11];
      v47[10] = v48[10];
      v47[11] = v51;
      *((_QWORD *)v47 + 24) = *((_QWORD *)v48 + 24);
      goto LABEL_21;
    }
    sub_23F38BB88((uint64_t)v47);
  }
  memcpy(v47, v48, 0xC8uLL);
LABEL_21:
  v52 = a3[13];
  v53 = (_OWORD *)((char *)a1 + v52);
  v54 = (_OWORD *)((char *)a2 + v52);
  if (!*(_QWORD *)((char *)a1 + v52 + 104))
  {
LABEL_29:
    memcpy(v53, v54, 0x168uLL);
    goto LABEL_30;
  }
  if (!*((_QWORD *)v54 + 13))
  {
    sub_23F38BBBC((uint64_t)v53);
    goto LABEL_29;
  }
  if (*((_QWORD *)v53 + 3))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v53);
  v55 = v54[1];
  *v53 = *v54;
  v53[1] = v55;
  *((_QWORD *)v53 + 4) = *((_QWORD *)v54 + 4);
  if (*((_QWORD *)v53 + 8))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v53 + 40);
  v56 = *(_OWORD *)((char *)v54 + 56);
  *(_OWORD *)((char *)v53 + 40) = *(_OWORD *)((char *)v54 + 40);
  *(_OWORD *)((char *)v53 + 56) = v56;
  *((_QWORD *)v53 + 9) = *((_QWORD *)v54 + 9);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v53 + 5));
  v57 = v54[6];
  v53[5] = v54[5];
  v53[6] = v57;
  *((_QWORD *)v53 + 14) = *((_QWORD *)v54 + 14);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v53 + 120);
  *(_OWORD *)((char *)v53 + 120) = *(_OWORD *)((char *)v54 + 120);
  *(_OWORD *)((char *)v53 + 136) = *(_OWORD *)((char *)v54 + 136);
  *((_QWORD *)v53 + 19) = *((_QWORD *)v54 + 19);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v53 + 10));
  v58 = v54[11];
  v53[10] = v54[10];
  v53[11] = v58;
  *((_QWORD *)v53 + 24) = *((_QWORD *)v54 + 24);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v53 + 200);
  *(_OWORD *)((char *)v53 + 200) = *(_OWORD *)((char *)v54 + 200);
  *(_OWORD *)((char *)v53 + 216) = *(_OWORD *)((char *)v54 + 216);
  *((_QWORD *)v53 + 29) = *((_QWORD *)v54 + 29);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v53 + 15));
  v59 = v54[16];
  v53[15] = v54[15];
  v53[16] = v59;
  *((_QWORD *)v53 + 34) = *((_QWORD *)v54 + 34);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v53 + 280);
  v60 = *(_OWORD *)((char *)v54 + 296);
  *(_OWORD *)((char *)v53 + 280) = *(_OWORD *)((char *)v54 + 280);
  *(_OWORD *)((char *)v53 + 296) = v60;
  *((_QWORD *)v53 + 39) = *((_QWORD *)v54 + 39);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v53 + 20));
  v61 = v54[21];
  v53[20] = v54[20];
  v53[21] = v61;
  *((_QWORD *)v53 + 44) = *((_QWORD *)v54 + 44);
LABEL_30:
  v62 = a3[14];
  v63 = (_OWORD *)((char *)a1 + v62);
  v64 = (char *)a2 + v62;
  if (*((unsigned __int8 *)a1 + v62 + 40) == 255)
  {
LABEL_36:
    v66 = *((_OWORD *)v64 + 1);
    *v63 = *(_OWORD *)v64;
    v63[1] = v66;
    *(_OWORD *)((char *)v63 + 25) = *(_OWORD *)(v64 + 25);
    goto LABEL_37;
  }
  if (v64[40] == 255 || a1 != a2)
  {
    sub_23F3625D8((uint64_t)v63, &qword_256E705E8);
    goto LABEL_36;
  }
LABEL_37:
  v67 = a3[15];
  v68 = (uint64_t)a1 + v67;
  v69 = (char *)a2 + v67;
  if (*(_QWORD *)((char *)a1 + v67 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v68);
  v70 = *((_OWORD *)v69 + 1);
  *(_OWORD *)v68 = *(_OWORD *)v69;
  *(_OWORD *)(v68 + 16) = v70;
  *(_QWORD *)(v68 + 32) = *((_QWORD *)v69 + 4);
  v71 = a3[16];
  v72 = (uint64_t)a1 + v71;
  v73 = (char *)a2 + v71;
  v74 = *((unsigned __int8 *)a1 + v71 + 40);
  if (v74 == 255)
    goto LABEL_45;
  if (v73[40] == 255 || a1 != a2)
  {
    if ((v74 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v72);
LABEL_45:
    v75 = *((_OWORD *)v73 + 1);
    *(_OWORD *)v72 = *(_OWORD *)v73;
    *(_OWORD *)(v72 + 16) = v75;
    *(_OWORD *)(v72 + 25) = *(_OWORD *)(v73 + 25);
  }
  v76 = a3[17];
  v77 = (_OWORD *)((char *)a1 + v76);
  v78 = (char *)a2 + v76;
  if (*((unsigned __int8 *)a1 + v76 + 40) == 255)
  {
LABEL_52:
    v80 = *((_OWORD *)v78 + 1);
    *v77 = *(_OWORD *)v78;
    v77[1] = v80;
    *(_OWORD *)((char *)v77 + 25) = *(_OWORD *)(v78 + 25);
    goto LABEL_53;
  }
  if (v78[40] == 255 || a1 != a2)
  {
    sub_23F3625D8((uint64_t)v77, &qword_256E705F0);
    goto LABEL_52;
  }
LABEL_53:
  v81 = a3[18];
  v82 = (_OWORD *)((char *)a1 + v81);
  v83 = (char *)a2 + v81;
  if (*((unsigned __int8 *)a1 + v81 + 40) == 255)
  {
LABEL_59:
    v85 = *((_OWORD *)v83 + 1);
    *v82 = *(_OWORD *)v83;
    v82[1] = v85;
    *(_OWORD *)((char *)v82 + 25) = *(_OWORD *)(v83 + 25);
    goto LABEL_60;
  }
  if (v83[40] == 255 || a1 != a2)
  {
    sub_23F3625D8((uint64_t)v82, &qword_256E705F8);
    goto LABEL_59;
  }
LABEL_60:
  v86 = a3[19];
  v87 = (_OWORD *)((char *)a1 + v86);
  v88 = (char *)a2 + v86;
  if (*((unsigned __int8 *)a1 + v86 + 40) == 255)
  {
LABEL_66:
    v90 = *((_OWORD *)v88 + 1);
    *v87 = *(_OWORD *)v88;
    v87[1] = v90;
    *(_OWORD *)((char *)v87 + 25) = *(_OWORD *)(v88 + 25);
    return a1;
  }
  if (v88[40] == 255 || a1 != a2)
  {
    sub_23F3625D8((uint64_t)v87, &qword_256E70600);
    goto LABEL_66;
  }
  return a1;
}

uint64_t sub_23F3CD548()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3CD554(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F38F984();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      v11 = sub_23F384B34();
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == (_DWORD)a2)
      {
        v9 = v11;
        v10 = a3[6];
      }
      else
      {
        v9 = sub_23F35D2E8(&qword_256E705E0);
        v10 = a3[9];
      }
    }
    return sub_23F36195C(a1 + v10, a2, v9);
  }
}

uint64_t sub_23F3CD60C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3CD618(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23F38F984();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = a4[5];
    }
    else
    {
      v11 = sub_23F384B34();
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
      {
        v9 = v11;
        v10 = a4[6];
      }
      else
      {
        v9 = sub_23F35D2E8(&qword_256E705E0);
        v10 = a4[9];
      }
    }
    return sub_23F36196C(v5 + v10, a2, a2, v9);
  }
  return result;
}

void sub_23F3CD6CC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6170CC();
  if (v0 <= 0x3F)
  {
    sub_23F61B32C();
    if (v1 <= 0x3F)
    {
      sub_23F38C624();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_23F3CD7C4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    sub_23F38F9F4();
  return swift_deallocObject();
}

uint64_t sub_23F3CD7F4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AlphaPlanParser(a2, a1);
  return a2;
}

uint64_t sub_23F3CD830()
{
  uint64_t v0;

  sub_23F38F9F4();
  if (*(_QWORD *)(v0 + 80))
    sub_23F38F9EC();
  sub_23F38F9AC();
  return swift_deallocObject();
}

uint64_t sub_23F3CD854(uint64_t a1, uint64_t a2)
{
  sub_23F3AF7B4(a2, a1);
  return a2;
}

uint64_t sub_23F3CD898()
{
  sub_23F38F9F4();
  return swift_deallocObject();
}

uint64_t sub_23F3CD8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3CD90C(uint64_t a1)
{
  destroy for AlphaPlanParser(a1);
  return a1;
}

uint64_t sub_23F3CD940(uint64_t a1)
{
  sub_23F3AF77C(a1);
  return a1;
}

uint64_t sub_23F3CD974()
{
  uint64_t v0;

  sub_23F38F944();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 176);
  swift_release();
  if (*(_QWORD *)(v0 + 224))
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 256);
  return swift_deallocObject();
}

uint64_t sub_23F3CD9D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_23F38F9AC();
  return swift_deallocObject();
}

void sub_23F3CD9FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23F384504(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  sub_23F362928();
}

uint64_t sub_23F3CDA3C()
{
  return _s15BravoComponentsVMa();
}

void sub_23F3CDA48(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  unsigned __int8 v2;
  uint64_t v3;
  __n128 *v4;

  v4 = (__n128 *)(v3 + a1);
  v4[2].n128_u64[0] = 0;
  *v4 = a2;
  v4[1] = a2;
  v4[2].n128_u8[8] = v2;
}

void sub_23F3CDA5C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_23F3CD9FC((uint64_t)&a9, v9, a3);
}

uint64_t sub_23F3CDA68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

void sub_23F3CDA74(uint64_t a1, void (*a2)(_QWORD *__return_ptr, uint64_t, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  sub_23F3C8CC4(v3, a2, v4, v2);
}

_OWORD *sub_23F3CDA84()
{
  return sub_23F3C9A94();
}

uint64_t sub_23F3CDA90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

void sub_23F3CDA9C()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F382FC4(v0, v1);
}

double sub_23F3CDAA8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = v1 + a1;
  *(_QWORD *)(v2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  return result;
}

uint64_t sub_23F3CDABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v19[2];
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = sub_23F61AE1C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v19 - v9;
  v11 = MEMORY[0x24BEE4AF8];
  v24 = MEMORY[0x24BEE4AF8];
  v23 = *(_QWORD *)(a1 + 16);
  if (v23)
  {
    v19[1] = v1;
    v20 = v7;
    v12 = 0;
    v21 = v3;
    v22 = a1;
    while (v12 < *(_QWORD *)(a1 + 16))
    {
      v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v14 = *(_QWORD *)(v4 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v10, a1 + v13 + v14 * v12, v3);
      if ((sub_23F3CF830() & 1) != 0)
      {
        v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
        v15(v7, v10, v3);
        v16 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37BCF8();
          v16 = v24;
        }
        v17 = *(_QWORD *)(v16 + 16);
        if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
        {
          sub_23F37BCF8();
          v16 = v24;
        }
        *(_QWORD *)(v16 + 16) = v17 + 1;
        v18 = v16 + v13 + v17 * v14;
        v7 = v20;
        v3 = v21;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v15)(v18, v20, v21);
        v24 = v16;
        a1 = v22;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
      }
      if (v23 == ++v12)
      {
        v11 = v24;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_23F3CDC94(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v4 + 328) = a3;
  *(_QWORD *)(v4 + 336) = v3;
  *(_BYTE *)(v4 + 81) = a2;
  *(_QWORD *)(v4 + 320) = a1;
  sub_23F35D2E8(&qword_256E6FFA0);
  *(_QWORD *)(v4 + 344) = sub_23F366578();
  v5 = sub_23F35D2E8(&qword_256E70460);
  *(_QWORD *)(v4 + 352) = v5;
  *(_QWORD *)(v4 + 360) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 368) = sub_23F366654();
  *(_QWORD *)(v4 + 376) = sub_23F3666CC();
  *(_QWORD *)(v4 + 384) = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E701F0);
  *(_QWORD *)(v4 + 392) = sub_23F366654();
  *(_QWORD *)(v4 + 400) = sub_23F3666CC();
  v6 = sub_23F61B92C();
  *(_QWORD *)(v4 + 408) = v6;
  *(_QWORD *)(v4 + 416) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 424) = sub_23F366654();
  *(_QWORD *)(v4 + 432) = sub_23F3666CC();
  v7 = sub_23F617D08();
  *(_QWORD *)(v4 + 440) = v7;
  *(_QWORD *)(v4 + 448) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 456) = sub_23F366578();
  v8 = sub_23F619E98();
  *(_QWORD *)(v4 + 464) = v8;
  *(_QWORD *)(v4 + 472) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 480) = sub_23F366654();
  *(_QWORD *)(v4 + 488) = sub_23F3666CC();
  v9 = sub_23F618D28();
  *(_QWORD *)(v4 + 496) = v9;
  *(_QWORD *)(v4 + 504) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 512) = sub_23F366654();
  *(_QWORD *)(v4 + 520) = sub_23F3666CC();
  *(_QWORD *)(v4 + 528) = type metadata accessor for DirectionalTypedValue();
  *(_QWORD *)(v4 + 536) = sub_23F366654();
  *(_QWORD *)(v4 + 544) = sub_23F3666CC();
  v10 = sub_23F61AE1C();
  *(_QWORD *)(v4 + 552) = v10;
  *(_QWORD *)(v4 + 560) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 + 568) = sub_23F366654();
  *(_QWORD *)(v4 + 576) = sub_23F3666CC();
  *(_QWORD *)(v4 + 584) = sub_23F3666CC();
  *(_QWORD *)(v4 + 592) = sub_23F3666CC();
  *(_QWORD *)(v4 + 600) = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F3CDE14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void (*v11)(_QWORD, unint64_t, _QWORD);
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __n128 *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v2 = sub_23F617BA0();
  v3 = 0;
  v4 = sub_23F3CDABC(v2);
  *(_QWORD *)(v1 + 608) = v4;
  v5 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v1 + 616) = v5;
  if (!v5)
  {
    sub_23F362984();
    v21 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v1 + 672) = MEMORY[0x24BEE4AF8];
    v22 = *(_QWORD *)(v21 + 16);
    *(_QWORD *)(v1 + 680) = v22;
    if (!v22)
      goto LABEL_16;
    sub_23F3D08BC();
    sub_23F617BA0();
    v23 = 0;
    do
    {
      *(_QWORD *)(v1 + 712) = v21;
      *(_QWORD *)(v1 + 704) = v23;
      v0 = *(_QWORD *)(v1 + 504);
      v24 = *(_QWORD *)(v1 + 512);
      v26 = *(_QWORD *)(v1 + 400);
      v25 = *(_QWORD *)(v1 + 408);
      sub_23F3D0718(v23);
      sub_23F61ADF8();
      sub_23F618CE0();
      sub_23F383F80(v24, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
      if (sub_23F36195C(v26, 1, v25) != 1)
      {
        sub_23F3D0780();
        v38 = sub_23F3D0920();
        *(_QWORD *)(v1 + 728) = v38;
        sub_23F35EA9C((_QWORD *)(v24 + *(int *)(v38 + 24)), *(_QWORD *)(v24 + *(int *)(v38 + 24) + 24));
        v39 = swift_task_alloc();
        v40 = (_QWORD *)sub_23F3D09D8(v39);
        *v40 = v1;
        v40[1] = sub_23F3CEC3C;
        sub_23F3D0950();
        __asm { BR              X4 }
      }
      sub_23F3D07D4();
      sub_23F3D0894();
      sub_23F3D0730();
    }
    while (!v27);
    sub_23F3D0880();
    v3 = *(__int128 **)(v21 + 16);
    if (v3)
    {
      v28 = *(_QWORD *)(v1 + 560);
      v29 = *(_QWORD *)(v1 + 360);
      v59 = *(_QWORD *)(v1 + 352);
      v60 = v21;
      sub_23F617BA0();
      sub_23F3D0804();
      v21 += (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      v58 = *(_QWORD *)(v29 + 72);
      v30 = v60;
      do
      {
        v31 = *(_QWORD *)(v1 + 552);
        v32 = *(char **)(v1 + 368);
        v33 = *(char **)(v1 + 376);
        sub_23F3CFC68(v21, (uint64_t)v33);
        v34 = *(int *)(v59 + 48);
        v35 = &v32[v34];
        v36 = *(_QWORD *)v33;
        *(_QWORD *)v32 = *(_QWORD *)v33;
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(&v32[v34], &v33[v34], v31);
        swift_retain();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v35, v31);
        sub_23F3CFCB0((uint64_t)v33, &qword_256E70460);
        if ((sub_23F3B1CDC() & 1) == 0)
        {
          sub_23F37BB94();
          v30 = v60;
        }
        v37 = *(_QWORD *)(v30 + 16);
        if (v37 >= *(_QWORD *)(v30 + 24) >> 1)
        {
          sub_23F37BB94();
          v30 = v60;
        }
        *(_QWORD *)(v1 + 224) = sub_23F3D0928();
        *(_QWORD *)(v1 + 232) = &off_250FD4990;
        *(_QWORD *)(v1 + 200) = v36;
        *(_QWORD *)(v30 + 16) = v37 + 1;
        sub_23F362678((__int128 *)(v1 + 200), v30 + 40 * v37 + 32);
        v21 += v58;
        v3 = (__int128 *)((char *)v3 - 1);
      }
      while (v3);
      v0 = *(_QWORD *)(v1 + 672);
      sub_23F384A80();
    }
    else
    {
LABEL_16:
      sub_23F3D0880();
      v30 = MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v30 + 16))
    {
      sub_23F3D090C();
      sub_23F35D2E8(&qword_256E704B8);
      sub_23F3D08B0();
      v42 = (__n128 *)sub_23F3D04F0();
      v43 = sub_23F3D04C0(v42, (__n128)xmmword_23F61E7E0);
      sub_23F3D0824((uint64_t)v43, MEMORY[0x24BEE4B08]);
      sub_23F3D06DC();
      sub_23F3D0814();
      v44 = sub_23F3D0700();
      *(_QWORD *)(v1 + 264) = v21;
      *(_QWORD *)(v1 + 272) = &off_250FD4A60;
      *(_QWORD *)(v1 + 240) = v44;
      sub_23F362678(v3, v0);
      sub_23F5C688C(0, 0, v0);
    }
    sub_23F386C5C();
    sub_23F3D0984();
    sub_23F3D099C();
    sub_23F3D0888();
    sub_23F384B44();
    sub_23F3D097C((unint64_t *)&qword_256E70430, v45, MEMORY[0x24BDCEA88]);
    sub_23F3D076C();
    sub_23F3D08FC();
    sub_23F3D0580();
    sub_23F3D0758();
    sub_23F3B5F04();
    sub_23F362D08();
    sub_23F3837B0();
    sub_23F362984();
    v46 = sub_23F362D18();
    sub_23F3D0744(v46, v47, v48, v49, v50, v51, v52, v53, v55, v56, v57);
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F383C6C();
    sub_23F384760();
    sub_23F3D0950();
    __asm { BR              X0 }
  }
  v6 = *(_QWORD *)(v1 + 560);
  v7 = *(_QWORD *)(v1 + 504);
  v8 = *(_QWORD *)(v1 + 336);
  v9 = *(int *)(sub_23F3D0920() + 20);
  *(_DWORD *)(v1 + 84) = v9;
  v10 = *(_DWORD *)(v6 + 80);
  *(_DWORD *)(v1 + 156) = v10;
  *(_QWORD *)(v1 + 624) = *(_QWORD *)(v6 + 72);
  v11 = *(void (**)(_QWORD, unint64_t, _QWORD))(v6 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 632) = v11;
  *(_QWORD *)(v1 + 648) = v12;
  *(_QWORD *)(v1 + 640) = 0;
  v13 = v4 + ((v10 + 32) & ~(unint64_t)v10);
  v14 = v8 + v9 + 80;
  v11(*(_QWORD *)(v1 + 600), v13, *(_QWORD *)(v1 + 552));
  sub_23F361418(v14, v1 + 160);
  sub_23F35EA9C((_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 184));
  sub_23F61ADF8();
  sub_23F618D04();
  sub_23F3D0A18(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  sub_23F3B5C30();
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 656) = v15;
  *v15 = v1;
  v15[1] = sub_23F3CE410;
  sub_23F3D0950();
  return sub_23F3AB5E0(v16, v17, v18, v19);
}

uint64_t sub_23F3CE410()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 664) = v0;
  swift_task_dealloc();
  sub_23F3CFC2C(*(_QWORD *)(v2 + 544));
  if (v0)
  {
    sub_23F362D18();
    sub_23F362984();
  }
  sub_23F36679C();
  return sub_23F3B183C();
}

#error "23F3CE70C: call analysis failed (funcsize=419)"

uint64_t sub_23F3CEB6C()
{
  uint64_t v0;

  sub_23F3D0940(*(_QWORD *)(v0 + 600));
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 160);
  sub_23F3D0518();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  return sub_23F3D0850(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3CEC3C()
{
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

#error "23F3CEF94: call analysis failed (funcsize=228)"

uint64_t sub_23F3CF038()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 752) = v0;
  swift_task_dealloc();
  sub_23F3CFC2C(*(_QWORD *)(v2 + 536));
  if (v0)
  {
    sub_23F384A80();
    sub_23F362984();
  }
  sub_23F36679C();
  return sub_23F3B183C();
}

#error "23F3CF428: call analysis failed (funcsize=390)"

uint64_t sub_23F3CF738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 576);
  v2 = *(_QWORD *)(v0 + 560);
  v3 = *(_QWORD *)(v0 + 552);
  v4 = *(_QWORD *)(v0 + 432);
  v5 = *(_QWORD *)(v0 + 408);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 416) + 8);
  v6(*(_QWORD *)(v0 + 424), v5);
  v6(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_23F3D0518();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  return sub_23F3D0850(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3CF830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t (*v18)(char *, uint64_t);
  uint64_t v19;
  int v20;
  BOOL v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint8_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  _QWORD v41[2];
  os_log_t v42;
  uint8_t *v43;
  int v44;
  uint64_t v45;
  unsigned int v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v1 = sub_23F61AE1C();
  v52 = *(_QWORD *)(v1 - 8);
  v53 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v51 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F619E98();
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F618AE8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v41 - v8;
  v10 = sub_23F618D28();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v41 - v15;
  sub_23F61ADF8();
  sub_23F618CF8();
  v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v16, v10);
  v48 = v6;
  v18 = *(uint64_t (**)(char *, uint64_t))(v6 + 88);
  v19 = v5;
  v20 = v18(v9, v5);
  v26 = v20 == *MEMORY[0x24BE57298]
     || v20 == *MEMORY[0x24BE57300]
     || v20 == *MEMORY[0x24BE572F0]
     || v20 == *MEMORY[0x24BE57308]
     || v20 == *MEMORY[0x24BE572D8]
     || v20 == *MEMORY[0x24BE572E8]
     || v20 == *MEMORY[0x24BE57268];
  v27 = v26;
  if (!v26)
  {
    v28 = v47;
    sub_23F619088();
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v0, v53);
    v29 = sub_23F619E8C();
    v30 = sub_23F61C610();
    v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = swift_slowAlloc();
      v44 = v31;
      v33 = (uint8_t *)v32;
      v45 = swift_slowAlloc();
      v55 = v45;
      v46 = v27;
      v42 = v29;
      v43 = v33;
      *(_DWORD *)v33 = 136315138;
      v41[1] = v33 + 4;
      v34 = v51;
      sub_23F61ADF8();
      sub_23F618CF8();
      v17(v14, v10);
      v35 = sub_23F61C16C();
      sub_23F37AE00(v35, v36, &v55);
      v54 = v37;
      v27 = v46;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v53);
      v29 = v42;
      v38 = v43;
      _os_log_impl(&dword_23F35A000, v42, (os_log_type_t)v44, "Context type unsupported in prompt: %s", v43, 0xCu);
      v39 = v45;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v39, -1, -1);
      MEMORY[0x242670B70](v38, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
    }

    (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v50);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v19);
  }
  return v27;
}

uint64_t type metadata accessor for BravoContextEventPromptGenerator()
{
  uint64_t result;

  result = qword_256E71318;
  if (!qword_256E71318)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F3CFC2C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DirectionalTypedValue();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F3CFC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3CFCB0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23F35D2E8(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23F3CFCEC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x242670A44](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F3CFD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_23F3CFD74(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B32C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *(_OWORD *)&a2[v8 + 24];
    *(_OWORD *)&a1[v8 + 24] = v11;
    (**(void (***)(char *, char *))(v11 - 8))(&a1[v8], &a2[v8]);
    v12 = *((_OWORD *)v10 + 4);
    *((_OWORD *)v9 + 4) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))((uint64_t)(v9 + 40), (uint64_t)(v10 + 40));
    v13 = *(_OWORD *)(v10 + 104);
    *(_OWORD *)(v9 + 104) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)(v9 + 80), (uint64_t)(v10 + 80));
    v14 = *((_OWORD *)v10 + 9);
    *((_OWORD *)v9 + 9) = v14;
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(v9 + 120), (uint64_t)(v10 + 120));
    v15 = *(_OWORD *)(v10 + 184);
    *(_OWORD *)(v9 + 184) = v15;
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))((uint64_t)(v9 + 160), (uint64_t)(v10 + 160));
    v16 = *(int *)(a3 + 24);
    v17 = *(_OWORD *)&a2[v16 + 24];
    *(_OWORD *)&a1[v16 + 24] = v17;
    (**(void (***)(void))(v17 - 8))();
  }
  return a1;
}

uint64_t sub_23F3CFEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 120);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 160);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + *(int *)(a2 + 24));
}

uint64_t sub_23F3CFF44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + v7, a2 + v7);
  v11 = v9[4];
  v8[4] = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))((uint64_t)v8 + 40, (uint64_t)v9 + 40);
  v12 = *(_OWORD *)((char *)v9 + 104);
  *(_OWORD *)((char *)v8 + 104) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))((uint64_t)(v8 + 5), (uint64_t)(v9 + 5));
  v13 = v9[9];
  v8[9] = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)v8 + 120, (uint64_t)v9 + 120);
  v14 = *(_OWORD *)((char *)v9 + 184);
  *(_OWORD *)((char *)v8 + 184) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(v8 + 10), (uint64_t)(v9 + 10));
  v15 = *(int *)(a3 + 24);
  v16 = *(_OWORD *)(a2 + v15 + 24);
  *(_OWORD *)(a1 + v15 + 24) = v16;
  (**(void (***)(void))(v16 - 8))();
  return a1;
}

uint64_t sub_23F3D006C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  sub_23F361AD0((uint64_t *)(a1 + v7), (uint64_t *)(a2 + v7));
  sub_23F361AD0(v8 + 5, v9 + 5);
  sub_23F361AD0(v8 + 10, v9 + 10);
  sub_23F361AD0(v8 + 15, v9 + 15);
  sub_23F361AD0(v8 + 20, v9 + 20);
  sub_23F361AD0((uint64_t *)(a1 + *(int *)(a3 + 24)), (uint64_t *)(a2 + *(int *)(a3 + 24)));
  return a1;
}

uint64_t sub_23F3D011C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0xC8uLL);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  return a1;
}

uint64_t sub_23F3D019C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 40);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 80);
  v11 = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 96) = v11;
  *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 120);
  *(_OWORD *)(v8 + 120) = *(_OWORD *)(v9 + 120);
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v9 + 152);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 160);
  v12 = *(_OWORD *)(v9 + 176);
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(_OWORD *)(v8 + 176) = v12;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v9 + 192);
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = a2 + v13;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v13);
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  return a1;
}

uint64_t sub_23F3D02AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3D02B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F61B32C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F3D0334()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3D0340(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23F61B32C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_23F3D03B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23F3D0434()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[48];
  *(_QWORD *)(v1 - 128) = v0[49];
  *(_QWORD *)(v1 - 120) = v2;
  v3 = v0[46];
  *(_QWORD *)(v1 - 112) = v0[47];
  *(_QWORD *)(v1 - 104) = v3;
  *(_QWORD *)(v1 - 96) = v0[43];
  sub_23F386C5C();
}

char *sub_23F3D04C0(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  char *result;

  a1[1] = a2;
  result = (char *)a1 + v2;
  strcpy(result, "get_context()");
  *((_WORD *)result + 7) = -4864;
  return result;
}

uint64_t sub_23F3D04F0()
{
  return swift_allocObject();
}

uint64_t sub_23F3D0518()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3D0580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23F51A0E0(v2, v3, v0, v1);
}

uint64_t sub_23F3D05A0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(int *)(*(_QWORD *)(v4 - 104) + 48);
  *(_QWORD *)v0 = *(_QWORD *)v3;
  return (*(uint64_t (**)(char *, char *, uint64_t))(v1 + 16))(&v0[v5], &v3[v5], v2);
}

uint64_t sub_23F3D05C8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F3D05E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_23F3D0600@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 200) = v4;
  *(_QWORD *)(v2 + 16) = v5;
  return sub_23F362678(*(__int128 **)(v6 - 96), v2 + 40 * v1 + 32);
}

uint64_t sub_23F3D0638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[33] = v5;
  v4[34] = a2;
  v4[30] = a1;
  sub_23F362678(v3, v2);
  return sub_23F5C688C(0, 0, v2);
}

uint64_t sub_23F3D0668(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1[4];
  sub_23F35EA9C(a1, a1[3]);
  *(_QWORD *)(v1 - 96) = **(int **)(v2 + 16) + *(_QWORD *)(v2 + 16);
  return swift_task_alloc();
}

uint64_t sub_23F3D0698@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 712) = v2;
  *(_QWORD *)(v1 + 704) = a1;
  return (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v1 + 696))(*(_QWORD *)(v1 + 576), *(_QWORD *)(v1 + 672)+ ((*(unsigned __int8 *)(v1 + 760) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 760))+ *(_QWORD *)(v1 + 688) * a1, *(_QWORD *)(v1 + 552));
}

uint64_t sub_23F3D06DC()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F36196C(v0, 1, 1, v1);
  return type metadata accessor for AssistantTurnItem(0);
}

uint64_t sub_23F3D0700()
{
  uint64_t v0;

  return sub_23F3F6FB4(2, v0);
}

uint64_t sub_23F3D0718@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v1(v5, v4 + ((v3 + 32) & ~v3) + v2 * a1);
}

uint64_t sub_23F3D0744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v12[1] = v13;
  v12[2] = v11;
  v12[3] = a11;
  v12[4] = a10;
  return swift_task_dealloc();
}

uint64_t sub_23F3D0758()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3D076C()
{
  return sub_23F61BFEC();
}

uint64_t sub_23F3D0780()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  v1 = v0[54];
  v2 = v0[51];
  v3 = v0[50];
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[52] + 32);
  v0[90] = v4;
  return v4(v1, v3, v2);
}

uint64_t sub_23F3D079C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 392);
}

void sub_23F3D07BC()
{
  sub_23F37BB94();
}

uint64_t sub_23F3D07D4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[70] + 8))(v0[72], v0[69]);
}

void sub_23F3D07EC()
{
  sub_23F37BB94();
}

void sub_23F3D0804()
{
  sub_23F37BB94();
}

uint64_t sub_23F3D0814()
{
  return swift_allocObject();
}

uint64_t sub_23F3D0824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 16) = a2;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F3D0834(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_23F3AB5E0(a1, a2, a3, a4);
}

uint64_t sub_23F3D0850(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F3D086C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3CFC68(v1, *(_QWORD *)(v0 + 376));
}

uint64_t sub_23F3D0880()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3D0888()
{
  return sub_23F617000();
}

uint64_t sub_23F3D0894()
{
  uint64_t v0;
  uint64_t *v1;

  return sub_23F3CFCB0(v0, v1);
}

uint64_t sub_23F3D08A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_23F3D08B0()
{
  return type metadata accessor for StatementSegment(0);
}

void sub_23F3D08BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 560);
  *(_DWORD *)(v0 + 760) = *(_DWORD *)(v1 + 80);
  *(_QWORD *)(v0 + 688) = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 696) = *(_QWORD *)(v1 + 16);
}

void sub_23F3D08DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v2 - 120) = v1;
  *(_QWORD *)(v2 - 112) = v3;
}

uint64_t sub_23F3D0920()
{
  return type metadata accessor for BravoContextEventPromptGenerator();
}

uint64_t sub_23F3D0928()
{
  return type metadata accessor for ContextTurnItem(0);
}

uint64_t sub_23F3D0940(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 560) + 8))(a1, *(_QWORD *)(v1 + 552));
}

uint64_t sub_23F3D096C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 112) + 8))(*(_QWORD *)(v0 - 96), *(_QWORD *)(v0 - 104));
}

uint64_t sub_23F3D097C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  return sub_23F3CFCEC(a1, v3, a3);
}

uint64_t sub_23F3D0984()
{
  return type metadata accessor for ToolPromptMap(0);
}

uint64_t sub_23F3D098C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36195C(v1, 1, v0);
}

uint64_t sub_23F3D099C()
{
  return sub_23F61BFEC();
}

void sub_23F3D09A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = *(_QWORD *)(v1 + 352);
  *(_QWORD *)(v2 - 96) = v0;
}

uint64_t sub_23F3D09D0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F3D09D8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 736) = result;
  return result;
}

uint64_t sub_23F3D09E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return sub_23F617BA0();
}

uint64_t sub_23F3D09F0()
{
  return sub_23F61ADF8();
}

void sub_23F3D09F8()
{
  sub_23F3779D0();
}

void sub_23F3D0A04()
{
  sub_23F3779BC();
}

uint64_t sub_23F3D0A10()
{
  return swift_retain();
}

uint64_t sub_23F3D0A18@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F3D0A24()
{
  return sub_23F618CE0();
}

void type metadata accessor for BravoUIControlRenderer()
{
  sub_23F362C18();
}

uint64_t sub_23F3D0A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v2 = v11;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_23F61C1D8();
      v5 = sub_23F61C1F0();
      v7 = v6;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(v11 + 16);
      if (v8 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_23F37B47C();
      v4 += 16;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23F3D0B44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_23F37B910();
    v2 = v12;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v6 = *(v4 - 2);
      v5 = *(v4 - 1);
      v7 = *v4;
      v8 = *(_QWORD *)(v12 + 16);
      v9 = *(_QWORD *)(v12 + 24);
      sub_23F617BA0();
      sub_23F617BA0();
      if (v8 >= v9 >> 1)
        sub_23F37B910();
      v4 += 8;
      *(_QWORD *)(v12 + 16) = v8 + 1;
      v10 = (_QWORD *)(v12 + 24 * v8);
      v10[4] = v6;
      v10[5] = v5;
      v10[6] = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23F3D0C38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v32 = MEMORY[0x24BEE4AF8];
  sub_23F37B910();
  v3 = 0;
  result = v32;
  v25 = v1;
  v26 = a1 + 32;
  while (1)
  {
    v27 = result;
    v28 = v3;
    v5 = *(_QWORD *)(v26 + 40 * v3 + 16);
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    v6 = sub_23F528950((uint64_t)&unk_250FD0920, v5);
    sub_23F528A88(30, v6, v7, v8);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x24BEE4B08];
    sub_23F35D2E8(&qword_256E70898);
    sub_23F61C55C();
    sub_23F61C55C();
    sub_23F61C1FC();
    sub_23F61C280();
    swift_bridgeObjectRelease();
    sub_23F61C280();
    swift_bridgeObjectRetain_n();
    sub_23F617BA0();
    sub_23F61C280();
    swift_bridgeObjectRetain_n();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F3B62BC(v14, 0, 0xE000000000000000, v29, v10, v12, v14, 0, 0xE000000000000000);
    v16 = v15;
    result = swift_bridgeObjectRelease();
    if (__OFADD__(*(_QWORD *)(v16 + 16), *(_QWORD *)(v29 + 16)))
      break;
    sub_23F617BA0();
    sub_23F377378();
    v30 = v17;
    v18 = sub_23F617BA0();
    sub_23F3863B4(v18);
    sub_23F617BA0();
    sub_23F38631C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F382B28();
    v19 = sub_23F61C550();
    v31 = v19;
    v20 = *(_QWORD *)(v30 + 16);
    if (v20)
    {
      v21 = v30 + 48;
      do
      {
        v21 += 24;
        sub_23F471B2C();
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = v31;
    }
    else
    {
      v22 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_23F617BA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = v27;
    v23 = *(_QWORD *)(v27 + 16);
    if (v23 >= *(_QWORD *)(v27 + 24) >> 1)
    {
      sub_23F37B910();
      result = v27;
    }
    v3 = v28 + 1;
    *(_QWORD *)(result + 16) = v23 + 1;
    v24 = (_QWORD *)(result + 24 * v23);
    v24[4] = 0;
    v24[5] = 0xE000000000000000;
    v24[6] = v22;
    if (v28 + 1 == v25)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_23F3D1008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  _QWORD v10[5];
  _BYTE v11[32];
  char v12;

  sub_23F3D966C(a1, (uint64_t)v10);
  v5 = v10[0];
  v4 = v10[1];
  v7 = v10[2];
  v6 = v10[3];
  result = sub_23F3D966C(a1, (uint64_t)v11);
  v9 = v12;
  if ((v12 & 1) != 0)
  {
    *(_QWORD *)a2 = v5;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_QWORD *)(a2 + 56) = 0;
  }
  else
  {
    *(_QWORD *)a2 = v5;
    *(_QWORD *)(a2 + 8) = v4;
    *(_QWORD *)(a2 + 16) = v7;
    *(_QWORD *)(a2 + 24) = v6;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    sub_23F617BA0();
    sub_23F617BA0();
    result = sub_23F617BA0();
  }
  *(_BYTE *)(a2 + 64) = v9;
  return result;
}

void sub_23F3D10B0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  char *v23;
  void (*v24)(uint64_t, char *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;

  sub_23F362ABC();
  v49 = v6;
  *(_QWORD *)&v50 = v5;
  *(_QWORD *)&v48 = v7;
  v9 = v8;
  sub_23F3D9CF4();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F3D9AA0();
  v43 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  v45 = sub_23F3D99A8(v13, v42);
  v14 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  sub_23F3D9B88();
  v15 = sub_23F61B5D8();
  v46 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)&v47 = v15;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3B1630();
  v17 = type metadata accessor for RenderableTool();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F38F530(v9, (uint64_t)v20, v21);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23F35D2E8(&qword_256E708E0);
    sub_23F362D94(v0, (uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    sub_23F3B1424(v1 + 20, v1[23]);
    sub_23F384664();
    sub_23F3D1978();
    sub_23F3837B0();
    v22 = sub_23F384AB4();
LABEL_5:
    v24(v22, v23);
LABEL_6:
    sub_23F362948();
    return;
  }
  v25 = v49;
  v26 = v50;
  v27 = *(_QWORD *)(sub_23F618BB4() - 8);
  v28 = sub_23F383E88((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 88));
  if (v28 == *MEMORY[0x24BE57550])
  {
LABEL_4:
    sub_23F383E88((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 96));
    sub_23F3D9A58();
    sub_23F3D9A24();
    v29 = sub_23F3D9C58();
    v30(v29);
    v24 = *(void (**)(uint64_t, char *))(v14 + 8);
    v22 = v2;
    v23 = v20;
    goto LABEL_5;
  }
  if (v28 == *MEMORY[0x24BE57558])
  {
    sub_23F383E88((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 96));
    v31 = v45;
    sub_23F38431C(v4, (uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
    v27 = v1[9];
    sub_23F3B1424(v1 + 5, v1[8]);
    sub_23F3D9E34(v4);
    sub_23F3D9978();
    v32 = sub_23F61BFEC();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v31);
LABEL_9:
    v33 = v48;
    *(_OWORD *)v25 = v50;
    *(_OWORD *)(v25 + 16) = v33;
    *(_OWORD *)(v25 + 32) = v47;
    *(_QWORD *)(v25 + 48) = v1;
    *(_QWORD *)(v25 + 56) = v27;
    *(_BYTE *)(v25 + 64) = (_BYTE)v20;
    *(_QWORD *)(v25 + 72) = v32;
    goto LABEL_6;
  }
  if (v28 == *MEMORY[0x24BE57548])
  {
    sub_23F383E88((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 96));
    v35 = v46;
    v34 = v47;
    sub_23F38426C(v2, (uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 32));
    sub_23F3B1424(v1 + 10, v1[13]);
    v36 = sub_23F3D9C58();
    sub_23F3A2220(v36, v37, v26);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v2, v34);
    goto LABEL_6;
  }
  if (v28 == *MEMORY[0x24BE57540])
    goto LABEL_4;
  if (v28 == *MEMORY[0x24BE57568])
  {
    sub_23F383E88((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 96));
    v39 = v43;
    v38 = v44;
    v40 = sub_23F3D9D98();
    sub_23F383C64(v40, (uint64_t)v20, v41);
    sub_23F3B1424(v1 + 15, v1[18]);
    sub_23F3D73D4((uint64_t)&v51);
    sub_23F3D9978();
    v32 = sub_23F61BFEC();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v17, v38);
    goto LABEL_9;
  }
  sub_23F61CC58();
  __break(1u);
}

void sub_23F3D1464(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_23F3B15D4();
  sub_23F61BFEC();
  sub_23F3D9C68();
  *(_QWORD *)(a1 + 72) = v2;
}

void sub_23F3D14AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  char v64;

  sub_23F362ABC();
  *(_QWORD *)&v58 = v4;
  v6 = v5;
  v8 = v7;
  v9 = sub_23F3D9CF4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = sub_23F3D9AA0();
  v52 = *(_QWORD *)(v11 - 8);
  v53 = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  v14 = sub_23F3D99A8(v13, v50);
  v54 = *(_QWORD *)(v14 - 8);
  v55 = v14;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F383A54();
  *(_QWORD *)&v57 = sub_23F61B5D8();
  *(_QWORD *)&v56 = *(_QWORD *)(v57 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3B1C68();
  v17 = type metadata accessor for RenderableTool();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3D9D44(v6, v21, v22);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23F35D2E8(&qword_256E708E0);
    sub_23F362D94(v0, (uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
    sub_23F35EA9C(v1 + 20, v1[23]);
    sub_23F3D1D6C();
    sub_23F362C60();
    v23 = sub_23F384AB4();
LABEL_6:
    v25(v23, v24);
LABEL_7:
    sub_23F362948();
    return;
  }
  v26 = *(_QWORD *)(sub_23F618BB4() - 8);
  v27 = sub_23F383E88((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 88));
  if (v27 == *MEMORY[0x24BE57550])
  {
    sub_23F383E88((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 96));
    sub_23F3D9A08();
    sub_23F3B1424(v1, v1[3]);
    sub_23F3D9DB0(v2, v58);
LABEL_5:
    v25 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v23 = v2;
    v24 = v6;
    goto LABEL_6;
  }
  v28 = v8;
  if (v27 == *MEMORY[0x24BE57558])
  {
    sub_23F383E88((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 96));
    v29 = v54;
    sub_23F383C64(v3, (uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 32));
    sub_23F35EA9C(v1 + 5, v1[8]);
    sub_23F3D9E34(v3);
    v57 = v60;
    v58 = v59;
    v56 = v61;
    v30 = v62;
    v31 = v63;
    v32 = v64;
    sub_23F3B15D4();
    v33 = sub_23F61BFEC();
    sub_23F383CA8(v3, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    v34 = v57;
    *(_OWORD *)v28 = v58;
    *(_OWORD *)(v28 + 16) = v34;
    *(_OWORD *)(v28 + 32) = v56;
    *(_QWORD *)(v28 + 48) = v30;
    *(_QWORD *)(v28 + 56) = v31;
    *(_BYTE *)(v28 + 64) = v32;
    *(_QWORD *)(v28 + 72) = v33;
    goto LABEL_7;
  }
  if (v27 == *MEMORY[0x24BE57548])
  {
    sub_23F383E88((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 96));
    v35 = v56;
    v36 = v57;
    sub_23F38426C(v2, (uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 32));
    sub_23F3B1424(v1 + 10, v1[13]);
    sub_23F3A2314();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v2, v36);
    goto LABEL_7;
  }
  if (v27 == *MEMORY[0x24BE57540])
  {
    sub_23F383E88((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 96));
    sub_23F3D9A08();
    v37 = v1[3];
    v38 = v1[4];
    sub_23F3B1424(v1, v37);
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 48))(v2, 1, v58, v37, v38);
    goto LABEL_5;
  }
  if (v27 == *MEMORY[0x24BE57568])
  {
    sub_23F383E88((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 96));
    v39 = v52;
    v40 = v51;
    sub_23F383C64(v51, (uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 32));
    v41 = sub_23F35EA9C(v1 + 15, v1[18]);
    sub_23F35EA9C(v41, v41[3]);
    sub_23F618C44();
    sub_23F3A2898();
    sub_23F362D08();
    *(_QWORD *)&v59 = 0;
    *((_QWORD *)&v59 + 1) = 0xE000000000000000;
    sub_23F61C1FC();
    sub_23F362D18();
    sub_23F3B1DE8();
    sub_23F362C60();
    sub_23F389B44();
    sub_23F618C50();
    sub_23F61C1FC();
    sub_23F362D18();
    sub_23F3B1DE8();
    sub_23F362C60();
    v42 = v59;
    sub_23F383738();
    sub_23F3D9E28();
    v46 = sub_23F3B13CC(v43, v44, v45);
    sub_23F369004(v46);
    v48 = v47;
    sub_23F3B15D4();
    v49 = sub_23F61BFEC();
    sub_23F383CA8(v40, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
    *(_OWORD *)v28 = v42;
    *(_QWORD *)(v28 + 16) = v48;
    *(_OWORD *)(v28 + 24) = 0u;
    *(_OWORD *)(v28 + 40) = 0u;
    *(_OWORD *)(v28 + 49) = 0u;
    *(_QWORD *)(v28 + 72) = v49;
    goto LABEL_7;
  }
  sub_23F61CC58();
  __break(1u);
}

void sub_23F3D1960(uint64_t a1@<X8>)
{
  sub_23F3D1464(a1);
}

void sub_23F3D1978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[4];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  sub_23F362ABC();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = sub_23F3D9CF4();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3D9CCC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v0, v8, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v0, v11);
  if ((_DWORD)v13 != *MEMORY[0x24BEB8EC0])
  {
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v11);
LABEL_14:
    sub_23F3B15D4();
    v30 = sub_23F61BFEC();
    *(_OWORD *)v10 = 0u;
    *(_OWORD *)(v10 + 16) = 0u;
    *(_OWORD *)(v10 + 32) = 0u;
    *(_OWORD *)(v10 + 48) = 0u;
    *(_BYTE *)(v10 + 64) = 1;
    goto LABEL_15;
  }
  v39 = *(_QWORD *)(v6 + 16);
  if (v39)
  {
    v33 = v4;
    v38 = v10;
    sub_23F61B5D8();
    sub_23F383D14();
    v15 = v6 + v14;
    v17 = *(_QWORD *)(v16 + 72);
    v37 = v6;
    sub_23F389CDC();
    v18 = 0;
    v35 = v15;
    v36 = v0;
    v34 = v17;
    while (1)
    {
      v19 = sub_23F61B554();
      v20 = *(_QWORD *)(v19 + 16);
      if (!v20)
        break;
      ++v18;
      v21 = v19 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
      v22 = *(_QWORD *)(v1 + 72);
      sub_23F3B121C(&qword_256E708D8, (void (*)(uint64_t))MEMORY[0x24BEB8ED8]);
      sub_23F384B00();
      while ((sub_23F61C0A0() & 1) == 0)
      {
        v21 += v22;
        if (!--v20)
        {
          swift_bridgeObjectRelease();
          sub_23F384A80();
          goto LABEL_13;
        }
      }
      sub_23F384A80();
      v2 = v36;
      if (v18 == v39)
      {
        v6 = v37;
        v13 = sub_23F362D08();
        v10 = v38;
        v4 = v33;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_23F384364();
LABEL_13:
    v10 = v38;
    goto LABEL_14;
  }
LABEL_11:
  MEMORY[0x24BDAC7A8](v13);
  v32[2] = v2;
  v32[3] = v4;
  sub_23F3673D8((uint64_t)sub_23F3D9874, (uint64_t)v32, v6);
  v24 = sub_23F3D0A3C(v23);
  sub_23F362984();
  v41 = 0;
  v42 = 0xE000000000000000;
  sub_23F61C8E0();
  sub_23F61C280();
  sub_23F61C280();
  sub_23F61C280();
  v40 = v24;
  sub_23F35D2E8(&qword_256E70580);
  sub_23F3B0CC8(&qword_256E70588, &qword_256E70580);
  sub_23F61C088();
  sub_23F362C60();
  sub_23F61C280();
  sub_23F384120();
  sub_23F61C280();
  v25 = v41;
  v26 = v42;
  sub_23F362CDC();
  v27 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v25, v26);
  sub_23F369004(v27);
  v29 = v28;
  sub_23F3B15D4();
  v30 = sub_23F61BFEC();
  *(_QWORD *)v10 = v25;
  *(_QWORD *)(v10 + 8) = v26;
  v31 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v10 + 16) = v29;
  *(_QWORD *)(v10 + 24) = v31;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_OWORD *)(v10 + 48) = 0u;
  *(_BYTE *)(v10 + 64) = 0;
LABEL_15:
  *(_QWORD *)(v10 + 72) = v30;
  sub_23F362948();
}

void sub_23F3D1D10(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F35EA9C(a1, a1[3]);
  sub_23F3A2750();
  *a2 = v3;
  a2[1] = v4;
}

void sub_23F3D1D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = sub_23F3D9CF4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3D9CCC();
  sub_23F383C64(v0, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v8 + 88))(v0, v7) != *MEMORY[0x24BEB8EC0])
  {
    sub_23F383CA8(v0, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
LABEL_13:
    sub_23F3B15D4();
    sub_23F61BFEC();
    sub_23F3D9C68();
    goto LABEL_14;
  }
  v18 = *(_QWORD *)(v2 + 16);
  if (v18)
  {
    sub_23F61B5D8();
    sub_23F383D14();
    sub_23F389CDC();
    v9 = 0;
    while (1)
    {
      v10 = sub_23F61B554();
      v11 = *(_QWORD *)(v10 + 16);
      if (!v11)
        break;
      v19 = v9 + 1;
      v12 = v10 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v13 = *(_QWORD *)(v8 + 72);
      sub_23F3B121C(&qword_256E708D8, (void (*)(uint64_t))MEMORY[0x24BEB8ED8]);
      sub_23F384A00();
      while ((sub_23F61C0A0() & 1) == 0)
      {
        v12 += v13;
        if (!--v11)
        {
          sub_23F3D9D90();
          sub_23F384A80();
          goto LABEL_13;
        }
      }
      sub_23F384A80();
      v9 = v19;
      if (v19 == v18)
      {
        sub_23F3D9D90();
        goto LABEL_11;
      }
    }
    sub_23F3D9D90();
    sub_23F38458C();
    goto LABEL_13;
  }
LABEL_11:
  v14 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 0x695F686372616573, 0xED00007070615F6ELL);
  sub_23F369004(v14);
  v16 = v15;
  sub_23F3B15D4();
  v17 = sub_23F61BFEC();
  *(_OWORD *)v6 = xmmword_23F61F880;
  *(_QWORD *)(v6 + 16) = v16;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 49) = 0u;
LABEL_14:
  *(_QWORD *)(v6 + 72) = v17;
  sub_23F362948();
}

#error "23F3D2068: call analysis failed (funcsize=63)"

#error "23F3D20D8: call analysis failed (funcsize=26)"

void sub_23F3D20FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  void (*v96)(uint64_t);
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, unint64_t, uint64_t);
  uint8_t *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t (*v109)(uint64_t, _QWORD);
  uint64_t (*v110)(uint64_t, uint64_t);
  uint64_t v111;
  void (*v112)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  os_log_type_t v122;
  uint8_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(uint64_t *__return_ptr, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  os_log_type_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t (*v190)(uint64_t, _QWORD);
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t (*v202)(uint64_t, _QWORD);
  uint64_t v203;
  uint64_t v204;
  os_log_type_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t (*v218)(uint64_t, _QWORD);
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  NSObject *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  _QWORD *v255;
  void (*v256)(uint64_t, uint64_t, uint64_t);
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  unint64_t v263;
  uint8_t *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD v268[2];
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char v274;
  _QWORD v275[4];
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;

  sub_23F362ABC();
  a19 = v23;
  a20 = v24;
  v245 = v25;
  v253 = v26;
  v235 = v27;
  v259 = v28;
  type metadata accessor for BravoTypeIdentifierRenderer(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F383780();
  sub_23F3B13F0(v32);
  v33 = sub_23F61B9BC();
  sub_23F383E7C(v33, (uint64_t)v268);
  v243 = v34;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F36285C();
  v37 = sub_23F3D9A74(v36);
  v258 = *(_QWORD *)(v37 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F383780();
  sub_23F3B13F0(v41);
  v42 = sub_23F619E98();
  sub_23F383E7C(v42, (uint64_t)&v277);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F383780();
  sub_23F3B13F0(v47);
  v48 = sub_23F6191A8();
  v261 = *(_QWORD *)(v48 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F362AAC();
  v52 = v50 - v51;
  MEMORY[0x24BDAC7A8](v53);
  sub_23F383780();
  sub_23F3B13F0(v54);
  v55 = sub_23F61BA64();
  sub_23F383E7C(v55, (uint64_t)&v263);
  v238 = v56;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F36285C();
  sub_23F3B13F0(v58);
  v59 = sub_23F61BC8C();
  sub_23F383E7C(v59, (uint64_t)&v258);
  v234 = v60;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F36285C();
  sub_23F3B13F0(v62);
  v63 = sub_23F61B998();
  sub_23F383E7C(v63, (uint64_t)&v276);
  v250 = v64;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F383780();
  v239 = v69;
  v248 = sub_23F35D2E8(&qword_256E70A68);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F3D9BA4();
  v71 = sub_23F61BBD8();
  sub_23F383E7C(v71, (uint64_t)&a12);
  v249 = v72;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F362AAC();
  v76 = v74 - v75;
  MEMORY[0x24BDAC7A8](v77);
  sub_23F35D2E8(&qword_256E70A70);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v79);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F383780();
  v265 = v81;
  v255 = v21;
  sub_23F61B2FC();
  sub_23F3B21E4(&v267);
  sub_23F61BBB4();
  swift_getKeyPath();
  v82 = swift_allocBox();
  v254 = v37;
  v256 = *(void (**)(uint64_t, uint64_t, uint64_t))(v258 + 16);
  v256(v83, v259, v37);
  *v20 = v82;
  v84 = v248;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v22 + 104))(v20, *MEMORY[0x24BEB8F00], v248);
  sub_23F3B121C(&qword_256E70A78, (void (*)(uint64_t))MEMORY[0x24BEBA3A8]);
  sub_23F3B0CC8(&qword_256E70A80, &qword_256E70A68);
  sub_23F3D9E28();
  sub_23F61B6A4();
  sub_23F3D9AF4();
  (*(void (**)(uint64_t *, uint64_t))(v22 + 8))(v20, v248);
  (*(void (**)(uint64_t, unint64_t))(v249 + 8))(v76, v262);
  sub_23F61A018();
  sub_23F3D9E54();
  sub_23F3D9E4C();
  v85 = v251;
  sub_23F3D9DF0(v265, &qword_256E70A70, (uint64_t)&a13);
  sub_23F3C84F4(v248);
  v86 = v256;
  v87 = v253;
  v88 = v252;
  v89 = (uint64_t)v264;
  if (v90)
  {
    sub_23F3D9844(v248, &qword_256E70A70);
  }
  else
  {
    v84 = v239;
    sub_23F38426C(v239, v248, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v250 + 32));
    sub_23F38426C(v89, v239, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v250 + 16));
    v91 = sub_23F383E88(v89, *(uint64_t (**)(uint64_t, uint64_t))(v250 + 88));
    if (v91 == *MEMORY[0x24BEB9B20])
    {
      sub_23F383E88(v89, *(uint64_t (**)(uint64_t, uint64_t))(v250 + 96));
      v92 = sub_23F3D9D98();
      sub_23F383C64(v92, v93, v94);
      sub_23F35EA9C(v255, v255[3]);
      sub_23F3D9DCC();
      sub_23F3D9DB0(v52, v235);
      sub_23F383CA8(v52, *(uint64_t (**)(uint64_t, uint64_t))(v234 + 8));
      v95 = sub_23F362A28(v239, *(uint64_t (**)(uint64_t, uint64_t))(v250 + 8));
      sub_23F3D999C(v95, &qword_256E70A70);
      goto LABEL_60;
    }
    v96 = *(void (**)(uint64_t))(v250 + 8);
    v96(v239);
    v96(v89);
    v85 = v251;
  }
  v97 = v245;
  v278 = v253;
  v279 = v245;
  sub_23F3D9DF0(v265, &qword_256E70A70, (uint64_t)&v266);
  sub_23F3C84F4(v84);
  if (v90)
  {
    sub_23F3D9D3C();
    sub_23F3D9B78();
    sub_23F3D9844(v84, &qword_256E70A70);
  }
  else
  {
    sub_23F38426C(v246, v84, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v250 + 32));
    sub_23F38426C(v236, v246, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v250 + 16));
    v98 = sub_23F383E88(v236, *(uint64_t (**)(uint64_t, uint64_t))(v250 + 88));
    if (v98 == *MEMORY[0x24BEB9B50])
    {
      sub_23F383E88(v236, *(uint64_t (**)(uint64_t, uint64_t))(v250 + 96));
      (*(void (**)())(v238 + 32))();
      sub_23F3D9D3C();
      sub_23F3D9B78();
      sub_23F52563C();
      v264 = *(uint8_t **)(v99 + 16);
      if (v264)
      {
        v100 = v261;
        v263 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
        v262 = v99 + v263;
        v101 = *(_QWORD *)(v261 + 72);
        v102 = *(void (**)(uint64_t, unint64_t, uint64_t))(v261 + 16);
        swift_retain();
        sub_23F3D9E08();
        v103 = 0;
        v104 = v260;
        while (1)
        {
          v102(v104, v262 + v101 * (_QWORD)v103, v48);
          v105 = v279 + v263;
          v106 = *(_QWORD *)(v279 + 16);
          if (!v278)
            break;
          v52 = v278 + 16;
          sub_23F3D9E08();
          sub_23F3BD908();
          v100 = v107;
          sub_23F366748();
          if ((v100 & 1) != 0)
          {
            sub_23F3D9C40();
LABEL_21:
            sub_23F3BC9F8();
            goto LABEL_22;
          }
          sub_23F3D9C40();
LABEL_22:
          ++v103;
          sub_23F362A28(v104, *(uint64_t (**)(uint64_t, uint64_t))(v100 + 8));
          if (v103 == v264)
          {
            sub_23F3D9B70();
            sub_23F3D9AF4();
            v86 = v256;
            v87 = v253;
            v97 = v245;
            v88 = v252;
            v85 = v251;
            goto LABEL_26;
          }
        }
        if (v106)
        {
          while (1)
          {
            v102(v52, v105, v48);
            sub_23F3B121C(&qword_256E70F58, (void (*)(uint64_t))MEMORY[0x24BEE63B8]);
            v108 = sub_23F61C0A0();
            sub_23F362A28(v52, *(uint64_t (**)(uint64_t, uint64_t))(v100 + 8));
            if ((v108 & 1) != 0)
              goto LABEL_22;
            v105 += v101;
            if (!--v106)
              goto LABEL_21;
          }
        }
        goto LABEL_21;
      }
      swift_release();
LABEL_26:
      sub_23F3D9AF4();
      sub_23F384430();
      sub_23F3841CC(v237, v109);
      sub_23F384430();
      sub_23F383E88(v246, v110);
    }
    else
    {
      v85 = *(NSObject **)(v250 + 8);
      sub_23F3D9D3C();
      sub_23F3D9B78();
      sub_23F3B224C(v246);
      sub_23F3B224C(v236);
    }
  }
  v111 = v254;
  if (*(_QWORD *)(v279 + 16))
  {
    sub_23F619088();
    v86(v88, v259, v254);
    swift_retain_n();
    swift_retain_n();
    v112 = v86;
    sub_23F619E8C();
    v113 = sub_23F3B1BD4();
    if (sub_23F3D9BD4(v113))
    {
      v114 = sub_23F366668();
      v264 = (uint8_t *)sub_23F366668();
      v267 = (uint64_t)v264;
      *(_DWORD *)v114 = 136315394;
      v112(v233, v88, v254);
      v115 = sub_23F61C16C();
      sub_23F3D9D34(v115, v116);
      v275[0] = v117;
      sub_23F3D9D24();
      sub_23F384120();
      sub_23F3D98EC(v88, *(uint64_t (**)(uint64_t, uint64_t))(v258 + 8));
      *(_WORD *)(v114 + 12) = 2080;
      swift_retain();
      sub_23F3D9B78();
      v118 = sub_23F3D9454(v87, v97);
      v120 = v119;
      sub_23F383EDC();
      sub_23F3D9AF4();
      sub_23F37AE00(v118, v120, &v267);
      v275[0] = v121;
      sub_23F3D9D24();
      sub_23F3D9B70();
      sub_23F3D9B70();
      sub_23F384364();
      _os_log_impl(&dword_23F35A000, v85, (os_log_type_t)v247, "Rendering type identifier %s with supplimentary UTTypes: %s", (uint8_t *)v114, 0x16u);
      swift_arrayDestroy();
      sub_23F366530();
    }
    sub_23F3D98EC(v88, *(uint64_t (**)(uint64_t, uint64_t))(v258 + 8));

    sub_23F3D9B70();
    sub_23F3D9B70();
    sub_23F3D9E80(v247);
    sub_23F619088();
    sub_23F619E8C();
    v122 = sub_23F3B1BD4();
    if (sub_23F3D9BD4(v122))
    {
      v123 = (uint8_t *)sub_23F366668();
      v267 = sub_23F366668();
      *(_DWORD *)v123 = 136315138;
      v264 = v123 + 4;
      sub_23F3C08CC();
      v124 = v278;
      v125 = v279;
      sub_23F3D9B78();
      swift_retain();
      v126 = sub_23F3D9454(v124, v125);
      v128 = v127;
      swift_release();
      sub_23F383EDC();
      sub_23F37AE00(v126, v128, &v267);
      v275[0] = v129;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      sub_23F38485C(&dword_23F35A000, v85, (os_log_type_t)v247, "Final list of UTTypes after extracting those from the type identifier: %s", v123);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F3D9E80(v240);
    v111 = v254;
  }
  v130 = sub_23F3C08CC();
  v131 = v279;
  MEMORY[0x24BDAC7A8](v130);
  swift_retain();
  sub_23F3D9E08();
  sub_23F384920();
  sub_23F36F290(v132, v133, v134, v131);
  sub_23F366748();
  sub_23F3668FC();
  v135 = sub_23F362CDC();
  sub_23F3BE1CC(v135);
  sub_23F3B830C(v136, v137, v138);
  v140 = v139;
  sub_23F362C60();
  sub_23F3667A8();
  sub_23F366748();
  sub_23F3668FC();
  sub_23F3B79EC(0x207C20uLL, 0xE300000000000000, v140);
  v142 = v141;
  v144 = v143;
  v146 = v145;
  sub_23F384120();
  v147 = HIBYTE(v144) & 0xF;
  if ((v144 & 0x2000000000000000) == 0)
    v147 = v142 & 0xFFFFFFFFFFFFLL;
  if (v147)
  {
    v267 = MEMORY[0x24BEE4B08];
    sub_23F35D2E8(&qword_256E70898);
    sub_23F61C55C();
    sub_23F61C55C();
    v148 = v267;
    v267 = 0;
    v268[0] = 0xE000000000000000;
    sub_23F389B44();
    v149 = v267;
    v150 = v268[0];
    sub_23F384324();
    sub_23F617BA0();
    sub_23F528350(v149, v150, v148, v142, v144, v146);
    v152 = v151;
    v154 = v153;
    v156 = v155;
    sub_23F384120();
    sub_23F383E5C();
    sub_23F384A80();
    v267 = v152;
    v268[0] = v154;
    sub_23F362C60();
    sub_23F362D18();
    sub_23F3837B0();
    sub_23F384120();
    sub_23F389B44();
    v157 = (void *)v268[0];
  }
  else
  {
    sub_23F362C60();
    sub_23F362D18();
    v156 = MEMORY[0x24BEE4B08];
    v157 = (void *)0xE000000000000000;
  }
  v256((uint64_t)v244, v259, v111);
  v158 = v258;
  v159 = sub_23F3D98EC((uint64_t)v244, *(uint64_t (**)(uint64_t, uint64_t))(v258 + 88));
  if (v159 == *MEMORY[0x24BEB9D18])
  {
    sub_23F3D9E60();
    v264 = (uint8_t *)v156;
    sub_23F3D98EC((uint64_t)v244, *(uint64_t (**)(uint64_t, uint64_t))(v158 + 96));
    v261 = *v244;
    v160 = swift_projectBox();
    (*(void (**)(uint64_t, uint64_t))(v243 + 16))(v242, v160);
    sub_23F3B1424(v255 + 5, v255[8]);
    sub_23F3A883C(v242, (uint64_t)&v267);
    v161 = v267;
    v162 = v268[0];
    v163 = v268[1];
    v164 = v269;
    v165 = v270;
    v166 = v271;
    v168 = v272;
    v167 = v273;
    v169 = v274;
    v260 = v267;
    if ((v274 & 1) != 0)
    {
      sub_23F3D9DCC();
      *(_QWORD *)v170 = v161;
      *(_QWORD *)(v170 + 8) = v162;
      *(_QWORD *)(v170 + 16) = v163;
    }
    else
    {
      sub_23F384B00();
      sub_23F617BA0();
      sub_23F384324();
      sub_23F3D9B34();
      v178 = v262;
      v262 = v162;
      sub_23F528350(v161, v162, v163, v178, v263, (uint64_t)v264);
      v259 = v179;
      v258 = v180;
      v257 = v181;
      sub_23F384B00();
      sub_23F3D9B34();
      sub_23F3D99CC(v161, v182, v183, v184, v185, v186, v187, v188, 0);
      sub_23F3D9DCC();
      v189 = v258;
      *(_QWORD *)v170 = v259;
      *(_QWORD *)(v170 + 8) = v189;
      *(_QWORD *)(v170 + 16) = v257;
    }
    *(_QWORD *)(v170 + 24) = v164;
    *(_QWORD *)(v170 + 32) = v165;
    *(_QWORD *)(v170 + 40) = v166;
    *(_QWORD *)(v170 + 48) = v168;
    *(_QWORD *)(v170 + 56) = v167;
    *(_BYTE *)(v170 + 64) = v169;
    sub_23F384430();
    v191 = sub_23F3841CC(v242, v190);
    sub_23F3D999C(v191, &qword_256E70A70);
    sub_23F362C60();
    sub_23F362984();
    sub_23F3D99CC(v260, v192, v193, v194, v195, v196, v197, v198, v169);
    swift_release();
LABEL_59:
    sub_23F3D9DC4();
    sub_23F3D9DBC();
    goto LABEL_60;
  }
  if (v159 == *MEMORY[0x24BEB9D00])
  {
    sub_23F38458C();
    sub_23F362D18();
    sub_23F3D98EC((uint64_t)v244, *(uint64_t (**)(uint64_t, uint64_t))(v158 + 96));
    swift_release();
    sub_23F619088();
    sub_23F3D9D44((uint64_t)v255, v171, type metadata accessor for BravoTypeIdentifierRenderer);
    sub_23F619E8C();
    v172 = sub_23F3B1BD4();
    if (sub_23F3B1604(v172))
    {
      sub_23F366668();
      v267 = sub_23F366668();
      sub_23F3B1988(4.8149e-34);
      sub_23F3D9ADC();
      v173 = sub_23F3D9C30();
      sub_23F3D9D34(v173, v174);
      sub_23F3D9AFC(v175);
      sub_23F61C790();
      sub_23F384364();
      sub_23F3D9DD8();
      sub_23F3B14F0(&dword_23F35A000, v176, v177, "%s .builtin: Unsupported type in action");
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F3D9608(v232, type metadata accessor for BravoTypeIdentifierRenderer);
    v201 = sub_23F3D9E8C();
    v203 = sub_23F3841CC(v201, v202);
    sub_23F3D999C(v203, &qword_256E70A70);
    sub_23F3D9DC4();
    sub_23F3D9DBC();
    sub_23F3B1708((__n128)0);
  }
  else
  {
    if (v159 != *MEMORY[0x24BEB9CF8])
    {
      sub_23F38458C();
      sub_23F362D18();
      sub_23F619088();
      sub_23F3D9D44((uint64_t)v255, v204, type metadata accessor for BravoTypeIdentifierRenderer);
      sub_23F619E8C();
      v205 = sub_23F3B1BD4();
      if (sub_23F3B1604(v205))
      {
        sub_23F366668();
        v267 = sub_23F366668();
        sub_23F3B1988(4.8149e-34);
        sub_23F3D9ADC();
        v206 = sub_23F3D9C30();
        sub_23F3D9D34(v206, v207);
        sub_23F3D9AFC(v208);
        sub_23F61C790();
        swift_bridgeObjectRelease();
        sub_23F3D9DD8();
        sub_23F3B14F0(&dword_23F35A000, v209, v210, "%s unknown: Unsupported type in action");
        sub_23F3B17D4();
        sub_23F366530();
      }

      sub_23F3D9608(v231, type metadata accessor for BravoTypeIdentifierRenderer);
      sub_23F384430();
      v219 = sub_23F3841CC(v241, v218);
      sub_23F3D999C(v219, &qword_256E70A70);
      sub_23F3B1708((__n128)0);
      sub_23F3D98EC((uint64_t)v244, *(uint64_t (**)(uint64_t, uint64_t))(v158 + 8));
      goto LABEL_59;
    }
    sub_23F3D9E60();
    sub_23F3D98EC((uint64_t)v244, *(uint64_t (**)(uint64_t, uint64_t))(v158 + 96));
    if (qword_256E6F130 != -1)
      swift_once();
    sub_23F3E2C5C();
    v264 = (uint8_t *)v156;
    if ((v199 & 1) != 0 || (sub_23F3B1424(v255 + 15, v255[18]), sub_23F3A2898(), !v200))
      swift_bridgeObjectRelease();
    v211 = sub_23F61C1D8();
    v213 = v212;
    sub_23F362984();
    sub_23F384664();
    sub_23F61C1D8();
    v267 = v211;
    v268[0] = v213;
    sub_23F384A00();
    sub_23F384664();
    sub_23F61C280();
    sub_23F38458C();
    sub_23F3837B0();
    v215 = v267;
    v214 = v268[0];
    sub_23F3D96EC((uint64_t)(v255 + 20), (uint64_t)&v267, &qword_256E715D0);
    if (v269)
    {
      sub_23F35EA9C(&v267, v269);
      sub_23F41589C(v275);
      v261 = v275[0];
      v216 = v275[2];
      v260 = v275[1];
      v217 = v275[3];
      sub_23F3D9E4C();
    }
    else
    {
      sub_23F3D9844((uint64_t)&v267, &qword_256E715D0);
      v261 = 0;
      v260 = 0;
      v216 = 0;
      v217 = 0;
    }
    sub_23F3668F4();
    v220 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v215, v214);
    sub_23F369004(v220);
    sub_23F528350(v215, v214, v221, v262, v263, (uint64_t)v264);
    v223 = v222;
    v225 = v224;
    v227 = v226;
    sub_23F362D18();
    sub_23F38432C();
    sub_23F384364();
    v228 = sub_23F362D08();
    sub_23F3D999C(v228, &qword_256E70A70);
    swift_release();
    sub_23F3D9DC4();
    sub_23F3D9DBC();
    sub_23F3D9DCC();
    *(_QWORD *)v229 = v223;
    *(_QWORD *)(v229 + 8) = v225;
    *(_QWORD *)(v229 + 16) = v227;
    *(_QWORD *)(v229 + 24) = 0;
    v230 = v260;
    *(_QWORD *)(v229 + 32) = v261;
    *(_QWORD *)(v229 + 40) = v230;
    *(_QWORD *)(v229 + 48) = v216;
    *(_QWORD *)(v229 + 56) = v217;
    *(_BYTE *)(v229 + 64) = 0;
  }
LABEL_60:
  sub_23F362948();
}

uint64_t sub_23F3D36CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = sub_23F619190();
  v4 = v3;
  sub_23F617BA0();
  v5 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v2, v4);
  sub_23F369004(v5);
  v7 = v6;
  swift_bridgeObjectRelease();
  result = sub_23F39BB1C(0, 0);
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v7;
  return result;
}

void sub_23F3D3770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t *v74;
  __n128 v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  const char *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t, _QWORD);
  uint64_t v95;
  os_log_type_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;

  sub_23F362ABC();
  a19 = v26;
  a20 = v27;
  v116 = v21;
  v112 = v28;
  v113 = v29;
  v31 = v30;
  v118 = v32;
  LODWORD(v117) = v33 & 1;
  v34 = sub_23F619E98();
  sub_23F383E7C(v34, (uint64_t)&a16);
  v106 = v35;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F383780();
  sub_23F3B13F0(v39);
  v110 = sub_23F61B6E0();
  v109 = *(_QWORD *)(v110 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F36285C();
  v111 = sub_23F3D9A74(v41);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F3B1630();
  v43 = sub_23F61B710();
  v114 = *(_QWORD *)(v43 - 8);
  v115 = v43;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F3D9BA4();
  v45 = sub_23F61B8A8();
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  sub_23F3D9B88();
  v47 = sub_23F61B92C();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v48);
  v50 = (char *)&v102 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v50, v31, v47);
  v51 = sub_23F3D98EC((uint64_t)v50, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 88));
  if (v51 == *MEMORY[0x24BEB9A00])
  {
    sub_23F3D98DC();
    v52 = sub_23F3D9D4C();
    sub_23F383C64(v25, v52, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 16));
    sub_23F3B1424((_QWORD *)(v116 + 40), *(_QWORD *)(v116 + 64));
    sub_23F3AA92C(v25, v117, v53, v54, v55, v56, v57, v58, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112,
      v113);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v25, v45);
    goto LABEL_11;
  }
  v59 = v117;
  v60 = v116;
  if (v51 == *MEMORY[0x24BEB9990])
  {
    sub_23F3D98DC();
    v61 = swift_projectBox();
    (*(void (**)(void *, uint64_t, uint64_t))(v114 + 16))(v20, v61, v115);
    v62 = (_QWORD *)v60;
    v63 = *(_QWORD *)(v60 + 24);
    v64 = *(_QWORD *)(v60 + 32);
    sub_23F35EA9C(v62, v63);
    MEMORY[0x24266EC14]();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 24))(&v119, v23, v112, v113, v63, v64);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v111);
    v65 = v119;
    v66 = v120;
    v67 = v121;
    v68 = v122;
    v69 = v123;
    v70 = v124;
    v72 = v125;
    v71 = v126;
    v73 = v127;
    v117 = v121;
    if ((v127 & 1) != 0)
    {
      v74 = v118;
      *v118 = v119;
      v74[1] = v66;
      v74[2] = v67;
      v74[3] = v68;
      v74[4] = v69;
      v74[5] = v70;
      v74[6] = v72;
      v74[7] = v71;
      *((_BYTE *)v74 + 64) = 1;
    }
    else
    {
      v116 = v120;
      v76 = sub_23F3D3DF8(v119, v120, v121);
      v66 = v116;
      v77 = v118;
      *v118 = v76;
      v77[1] = v78;
      v77[2] = v79;
      v77[3] = v68;
      v77[4] = v69;
      v77[5] = v70;
      v77[6] = v72;
      v77[7] = v71;
      *((_BYTE *)v77 + 64) = 0;
      sub_23F384324();
      sub_23F39BA5C(v69, v70);
    }
    sub_23F3C3DC8(v114);
    sub_23F39BA98(v65, v66, v117, v68, v69, v70, v72, v71, v73);
    goto LABEL_11;
  }
  if (v51 == *MEMORY[0x24BEB99E0])
    goto LABEL_8;
  if (v51 == *MEMORY[0x24BEB9988])
  {
    sub_23F3D98DC();
    sub_23F3D9D4C();
    v80 = v109;
    v81 = sub_23F3D9D98();
    v82 = v110;
    sub_23F38431C(v81, v83, v84);
    v85 = sub_23F61B6D4();
    MEMORY[0x24BDAC7A8](v85);
    *(&v102 - 4) = v60;
    *((_BYTE *)&v102 - 24) = v59;
    v100 = v112;
    v101 = v113;
    v86 = sub_23F367488((uint64_t)sub_23F3D9638, (uint64_t)(&v102 - 6), v85);
    sub_23F362984();
    sub_23F3D3F18(v86, (uint64_t)v118);
    sub_23F362D08();
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v47, v82);
LABEL_11:
    swift_release();
    goto LABEL_12;
  }
  if (v51 == *MEMORY[0x24BEB99D8])
    goto LABEL_16;
  if (v51 == *MEMORY[0x24BEB99E8])
  {
    sub_23F3D98DC();
    sub_23F3D9EB8();
    sub_23F3D9DFC();
    v20 = (void *)sub_23F619E8C();
    v92 = sub_23F61C628();
    if (sub_23F3B1604(v92))
    {
      sub_23F366668();
      v119 = sub_23F366668();
      sub_23F3B1988(4.8149e-34);
      sub_23F3D9910((uint64_t)"reference(_:detailLevel:direction:renderingState:)");
      sub_23F3D98F4(v93);
      v91 = "[%s] Unexpected TypedValue found: TypedValue.DeferredValue";
LABEL_21:
      sub_23F3B14F0(&dword_23F35A000, v89, v90, v91);
      sub_23F3B17D4();
      sub_23F366530();
    }
LABEL_22:

    sub_23F384430();
    sub_23F3841CC((uint64_t)v50, v94);
    v75 = 0uLL;
    goto LABEL_23;
  }
  if (v51 == *MEMORY[0x24BEB99B0])
  {
LABEL_8:
    sub_23F3D98DC();
    sub_23F3D9EB8();
    v75 = 0uLL;
LABEL_23:
    sub_23F3B1708(v75);
    goto LABEL_12;
  }
  if (v51 == *MEMORY[0x24BEB9A08])
  {
LABEL_16:
    sub_23F3D98DC();
    sub_23F3D9EB8();
    sub_23F3D9DFC();
    sub_23F619E8C();
    v87 = sub_23F3B1BD4();
    if (sub_23F3B1604(v87))
    {
      sub_23F366668();
      v119 = sub_23F366668();
      sub_23F3B1988(4.8149e-34);
      sub_23F3D9910((uint64_t)"reference(_:detailLevel:direction:renderingState:)");
      sub_23F3D98F4(v88);
      v91 = "[%s] Unsupported type: skipping event";
      goto LABEL_21;
    }
    goto LABEL_22;
  }
  v95 = v103;
  sub_23F619088();
  sub_23F619E8C();
  v96 = sub_23F3B1BD4();
  if (sub_23F3B1604(v96))
  {
    sub_23F366668();
    v119 = sub_23F366668();
    sub_23F3B1988(4.8149e-34);
    sub_23F3D9910((uint64_t)"reference(_:detailLevel:direction:renderingState:)");
    sub_23F3D98F4(v97);
    sub_23F3B14F0(&dword_23F35A000, v98, v99, "[%s] Unsupported type: skipping event");
    sub_23F3B17D4();
    sub_23F366530();
  }

  sub_23F3841CC(v95, *(uint64_t (**)(uint64_t, _QWORD))(v106 + 8));
  sub_23F3B1708((__n128)0);
  sub_23F3D98EC((uint64_t)v50, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
LABEL_12:
  sub_23F362948();
}

uint64_t sub_23F3D3DF8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = MEMORY[0x24BEE4B08];
  sub_23F528350(a1, a2, a3, 0x2EuLL, 0xE100000000000000, MEMORY[0x24BEE4B08]);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  sub_23F61B6EC();
  sub_23F61C1D8();
  swift_bridgeObjectRelease();
  sub_23F3A7268();
  v11 = v10;
  v13 = v12;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  v14 = sub_23F3B60F0(v3, v11, v13);
  sub_23F369004(v14);
  sub_23F528350(v5, v7, v9, v11, v13, v15);
  v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_23F3D3F18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  _QWORD *v57;
  char v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _BOOL8 v62;
  char v63;
  unint64_t v64;
  char v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t result;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  _QWORD *v96;
  BOOL v97;

  v81 = a2;
  v3 = sub_23F6184B8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v94 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v75 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v75 - v10;
  v12 = sub_23F35D2E8(&qword_256E70EE0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F5250A0(a1);
  if ((v16 & 1) != 0)
  {
    v17 = 0;
    v18 = 0;
    v19 = v15;
    v20 = v15;
    v21 = v81;
    goto LABEL_26;
  }
  v79 = v16;
  v80 = v15;
  v22 = (_QWORD *)sub_23F3D0B44(v15);
  sub_23F3B79EC(0x202CuLL, 0xE200000000000000, v22);
  v93 = v23;
  v25 = v24;
  v27 = v26;
  swift_bridgeObjectRelease();
  v28 = sub_23F3B60F0(MEMORY[0x24BEE4B08], 91, 0xE100000000000000);
  sub_23F369004(v28);
  sub_23F528350(0x5BuLL, 0xE100000000000000, v29, v93, v25, v27);
  v92 = v31;
  v93 = v30;
  v33 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = sub_23F3B60F0(MEMORY[0x24BEE4B08], 93, 0xE100000000000000);
  sub_23F369004(v34);
  sub_23F528350(v93, v92, v33, 0x5DuLL, 0xE100000000000000, v35);
  v76 = v36;
  v78 = v37;
  v77 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v39 = v80;
  v85 = *(_QWORD *)(v80 + 16);
  if (!v85)
  {
    v19 = MEMORY[0x24BEE4B00];
LABEL_25:
    v15 = sub_23F3B0CFC(v39, 0);
    v21 = v81;
    LOBYTE(v16) = v79;
    v17 = v78;
    v18 = v77;
    v20 = v76;
LABEL_26:
    v73 = v16 & 1;
    v96 = (_QWORD *)v19;
    v97 = (v16 & 1) != 0;
    MEMORY[0x24BDAC7A8](v15);
    *(&v75 - 2) = (uint64_t)&v96;
    sub_23F3A8518((void (*)(_OWORD *__return_ptr, _QWORD *))sub_23F3B1078, v20, v17, v18, v73, (uint64_t)&v95);
    sub_23F3B0CFC(v19, v73);
    sub_23F3B1080(v20, v17, v18, v73);
    sub_23F3D1008((uint64_t)&v95, v21);
    return sub_23F3B10B0((uint64_t)&v95);
  }
  v84 = v80 + 32;
  sub_23F617BA0();
  v40 = 0;
  v41 = MEMORY[0x24BEE4B00];
  v83 = v4;
  while (1)
  {
    v42 = (_QWORD *)(v84 + (v40 << 6));
    v43 = v42[3];
    if (v43)
      break;
LABEL_22:
    if (++v40 == v85)
    {
      v19 = v41;
      v72 = v80;
      sub_23F3B0CFC(v80, 0);
      v39 = v72;
      goto LABEL_25;
    }
  }
  v92 = v40;
  v93 = v41;
  v44 = v42[2];
  v45 = v42[4];
  v46 = v42[5];
  v48 = v42[6];
  v47 = v42[7];
  v88 = v42[1];
  sub_23F617BA0();
  v86 = v44;
  v49 = v83;
  sub_23F617BA0();
  sub_23F617BA0();
  v90 = v46;
  v91 = v45;
  v89 = v48;
  v87 = v47;
  v50 = v93;
  sub_23F39BA5C(v45, v46);
  sub_23F617BA0();
  sub_23F617BA0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v96 = (_QWORD *)v50;
  sub_23F5E2968(&v95, v43, sub_23F522E68, 0);
  sub_23F617BA0();
  v52 = v43;
  sub_23F5E2D50();
  v53 = sub_23F35D2E8(&qword_256E704E0);
  v54 = v50;
  if (sub_23F36195C((uint64_t)v14, 1, v53) == 1)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    sub_23F382E18();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F39BB1C(v91, v90);
    v41 = v54;
    v40 = v92;
    goto LABEL_22;
  }
  v82 = v52;
  v55 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  while (1)
  {
    v56 = &v14[*(int *)(v53 + 48)];
    v55(v11, v14, v3);
    v55(v9, v56, v3);
    v57 = v96;
    sub_23F375424();
    v60 = v59;
    v61 = v57[2];
    v62 = (v58 & 1) == 0;
    if (__OFADD__(v61, v62))
      break;
    v63 = v58;
    if (v57[3] >= v61 + v62)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v58 & 1) != 0)
          goto LABEL_15;
      }
      else
      {
        sub_23F35D2E8(&qword_256E70428);
        sub_23F61CA24();
        if ((v63 & 1) != 0)
          goto LABEL_15;
      }
    }
    else
    {
      sub_23F513EC4();
      sub_23F375424();
      if ((v63 & 1) != (v65 & 1))
        goto LABEL_29;
      v60 = v64;
      if ((v63 & 1) != 0)
      {
LABEL_15:
        v66 = v94;
        v55(v94, v9, v3);
        (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v3);
        (*(void (**)(unint64_t, char *, uint64_t))(v49 + 40))(v96[7] + *(_QWORD *)(v49 + 72) * v60, v66, v3);
        goto LABEL_19;
      }
    }
    v67 = v96;
    v96[(v60 >> 6) + 8] |= 1 << v60;
    v68 = *(_QWORD *)(v49 + 72) * v60;
    v55((char *)(v67[6] + v68), v11, v3);
    v55((char *)(v67[7] + v68), v9, v3);
    v69 = v67[2];
    v70 = __OFADD__(v69, 1);
    v71 = v69 + 1;
    if (v70)
      goto LABEL_28;
    v67[2] = v71;
LABEL_19:
    sub_23F5E2D50();
    v53 = sub_23F35D2E8(&qword_256E704E0);
    isUniquelyReferenced_nonNull_native = 1;
    if (sub_23F36195C((uint64_t)v14, 1, v53) == 1)
    {
      v54 = (unint64_t)v96;
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

#error "23F3D45B8: call analysis failed (funcsize=19)"

uint64_t sub_23F3D45D8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v6 + 168) = a5;
  *(_QWORD *)(v6 + 176) = v5;
  *(_QWORD *)(v6 + 152) = a2;
  *(_QWORD *)(v6 + 160) = a4;
  *(_BYTE *)(v6 + 81) = a3;
  *(_QWORD *)(v6 + 144) = a1;
  v7 = sub_23F35D2E8(&qword_256E70A68);
  *(_QWORD *)(v6 + 184) = v7;
  *(_QWORD *)(v6 + 192) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 200) = sub_23F366578();
  v8 = sub_23F61BBD8();
  *(_QWORD *)(v6 + 208) = v8;
  *(_QWORD *)(v6 + 216) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 224) = sub_23F366654();
  *(_QWORD *)(v6 + 232) = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E70A70);
  *(_QWORD *)(v6 + 240) = sub_23F366578();
  v9 = sub_23F61BA64();
  *(_QWORD *)(v6 + 248) = v9;
  *(_QWORD *)(v6 + 256) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 264) = sub_23F366578();
  v10 = sub_23F619E98();
  *(_QWORD *)(v6 + 272) = v10;
  *(_QWORD *)(v6 + 280) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 288) = sub_23F366654();
  *(_QWORD *)(v6 + 296) = sub_23F3666CC();
  v11 = sub_23F61B7AC();
  *(_QWORD *)(v6 + 304) = v11;
  *(_QWORD *)(v6 + 312) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 320) = sub_23F366654();
  *(_QWORD *)(v6 + 328) = sub_23F3666CC();
  *(_QWORD *)(v6 + 336) = sub_23F3666CC();
  v12 = sub_23F61B7C4();
  *(_QWORD *)(v6 + 344) = v12;
  *(_QWORD *)(v6 + 352) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 360) = sub_23F366578();
  sub_23F35D2E8(&qword_256E701F0);
  *(_QWORD *)(v6 + 368) = sub_23F366578();
  v13 = sub_23F61B92C();
  *(_QWORD *)(v6 + 376) = v13;
  *(_QWORD *)(v6 + 384) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v6 + 392) = sub_23F366654();
  *(_QWORD *)(v6 + 400) = sub_23F3666CC();
  *(_QWORD *)(v6 + 408) = sub_23F3666CC();
  *(_QWORD *)(v6 + 416) = sub_23F3666CC();
  *(_QWORD *)(v6 + 424) = sub_23F3666CC();
  v14 = sub_23F61B9EC();
  *(_QWORD *)(v6 + 432) = v14;
  *(_QWORD *)(v6 + 440) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v6 + 448) = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F3D4764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  unsigned int (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  uint64_t (*v64)(uint64_t);
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t (**v72)(uint64_t, uint64_t);
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t);
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  _BOOL4 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  void (*v126)(uint64_t, uint64_t);
  void (*v127)(_QWORD);
  uint64_t v128[2];
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;

  MEMORY[0x24266ECB0]();
  if (qword_256E6F118 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 440);
  v1 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 432);
  sub_23F361498(v3, (uint64_t)qword_256E804B0);
  v4 = sub_23F3D9E1C();
  v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v5(v1, v3);
  if ((v4 & 1) == 0)
  {
    v126 = v5;
    v18 = *(_QWORD *)(v0 + 224);
    v118 = *(_QWORD *)(v0 + 216);
    v19 = *(uint64_t **)(v0 + 200);
    v121 = *(_QWORD *)(v0 + 208);
    v21 = *(_QWORD *)(v0 + 184);
    v20 = *(_QWORD *)(v0 + 192);
    type metadata accessor for BravoEntityValuePromptRenderer(0);
    sub_23F61B2FC();
    sub_23F35EA9C((_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 112));
    sub_23F61BBB4();
    swift_getKeyPath();
    v22 = swift_allocBox();
    MEMORY[0x24266ECB0]();
    *v19 = v22;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v20 + 104))(v19, *MEMORY[0x24BEB8F00], v21);
    sub_23F3B121C(&qword_256E70A78, (void (*)(uint64_t))MEMORY[0x24BEBA3A8]);
    sub_23F3B0CC8(&qword_256E70A80, &qword_256E70A68);
    sub_23F61B6A4();
    sub_23F3667A8();
    (*(void (**)(uint64_t *, uint64_t))(v20 + 8))(v19, v21);
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v18, v121);
    sub_23F61A018();
    v23 = *(_QWORD *)(v0 + 240);
    sub_23F3D9EAC();
    v36 = sub_23F3D9B5C(v0 + 88);
    sub_23F3C84F4(v23);
    if (v37)
    {
      sub_23F3D9844(*(_QWORD *)(v0 + 240), &qword_256E70A70);
    }
    else
    {
      v72 = *(uint64_t (***)(uint64_t, uint64_t))(v36 - 8);
      v73 = sub_23F383E88(*(_QWORD *)(v0 + 240), v72[11]);
      if (v73 == *MEMORY[0x24BEB9B50])
      {
        v75 = *(_QWORD *)(v0 + 256);
        v74 = *(_QWORD *)(v0 + 264);
        v76 = *(_QWORD *)(v0 + 240);
        sub_23F383E88(v76, v72[12]);
        sub_23F362D94(v74, v76, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 32));
        sub_23F525B14();
        v39 = v77;
        v41 = v78;
        v79 = sub_23F38422C();
        v80(v79);
        goto LABEL_14;
      }
      sub_23F383E88(*(_QWORD *)(v0 + 240), v72[1]);
    }
    sub_23F3B9CE4();
    v39 = v38;
    v41 = v40;
LABEL_14:
    v42 = *(_QWORD *)(v0 + 448);
    v117 = v41;
    v119 = *(_QWORD *)(v0 + 432);
    v44 = *(_QWORD *)(v0 + 168);
    v43 = *(_QWORD **)(v0 + 176);
    v45 = *(_QWORD *)(v0 + 160);
    v122 = *(_QWORD *)(v0 + 152);
    v124 = *(_BYTE *)(v0 + 81) & 1;
    *(_QWORD *)(v0 + 512) = v41;
    *(_QWORD *)(v0 + 520) = v39;
    v46 = v43[3];
    v47 = v43[4];
    sub_23F35EA9C(v43, v46);
    MEMORY[0x24266ECB0]();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 16))(v128, v42, v45, v44, v39, v117, v46, v47);
    v126(v42, v119);
    v48 = v128[0];
    v49 = v128[1];
    *(_QWORD *)(v0 + 528) = v128[0];
    *(_QWORD *)(v0 + 536) = v49;
    v50 = v129;
    v51 = v130;
    *(_QWORD *)(v0 + 544) = v129;
    *(_QWORD *)(v0 + 552) = v51;
    v52 = v131;
    v53 = v132;
    *(_QWORD *)(v0 + 560) = v131;
    *(_QWORD *)(v0 + 568) = v53;
    v54 = v133;
    v55 = v134;
    *(_QWORD *)(v0 + 576) = v133;
    *(_QWORD *)(v0 + 584) = v55;
    v56 = v135;
    *(_BYTE *)(v0 + 82) = v135;
    *(_QWORD *)(v0 + 16) = v48;
    *(_QWORD *)(v0 + 24) = v49;
    *(_QWORD *)(v0 + 32) = v50;
    *(_QWORD *)(v0 + 40) = v51;
    *(_QWORD *)(v0 + 48) = v52;
    *(_QWORD *)(v0 + 56) = v53;
    *(_QWORD *)(v0 + 64) = v54;
    *(_QWORD *)(v0 + 72) = v55;
    *(_BYTE *)(v0 + 80) = v56;
    v57 = swift_task_alloc();
    *(_QWORD *)(v0 + 592) = v57;
    *(_QWORD *)(v57 + 16) = v43;
    *(_QWORD *)(v57 + 24) = v122;
    *(_BYTE *)(v57 + 32) = v124;
    *(_QWORD *)(v57 + 40) = v45;
    *(_QWORD *)(v57 + 48) = v44;
    v58 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 600) = v58;
    sub_23F35D2E8(&qword_256E70470);
    *v58 = v0;
    v58[1] = sub_23F3D5568;
    sub_23F3D99EC();
    return sub_23F61CD6C();
  }
  v7 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  v8 = sub_23F61B770();
  sub_23F3684B0(0x7469746E45707061, 0xE900000000000079, v8);
  sub_23F362984();
  if (sub_23F36195C(v7, 1, v6) == 1)
  {
    v9 = *(_QWORD *)(v0 + 312);
    v10 = *(_QWORD *)(v0 + 320);
    v11 = *(_QWORD *)(v0 + 152);
    sub_23F3D9844(*(_QWORD *)(v0 + 368), &qword_256E701F0);
    sub_23F619088();
    sub_23F362D94(v10, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
    v12 = sub_23F619E8C();
    v13 = sub_23F61C628();
    if (os_log_type_enabled(v12, v13))
    {
      v115 = *(_QWORD *)(v0 + 312);
      v14 = (uint8_t *)swift_slowAlloc();
      v128[0] = sub_23F366668();
      *(_DWORD *)v14 = 136315138;
      v15 = sub_23F61B6EC();
      sub_23F37AE00(v15, v16, v128);
      *(_QWORD *)(v0 + 128) = v17;
      sub_23F384AB4();
      sub_23F61C790();
      sub_23F38458C();
      sub_23F3D9D78(v115);
      sub_23F38485C(&dword_23F35A000, v12, v13, "Could not access AppEntity property of SearchAppEntity: %s", v14);
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F3D9D78(*(_QWORD *)(v0 + 312));

    v60 = sub_23F3B1CF8();
    v61(v60);
    goto LABEL_16;
  }
  v24 = *(_QWORD *)(v0 + 424);
  v25 = *(_QWORD **)(v0 + 384);
  v26 = *(_QWORD *)(v0 + 368);
  v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v25[4];
  *(_QWORD *)(v0 + 456) = v27;
  sub_23F383C64(v24, v26, v27);
  *(_QWORD *)(v0 + 464) = v25[2];
  sub_23F3D9D14();
  *(_QWORD *)(v0 + 472) = v25[11];
  v28 = sub_23F3B1CF8();
  if (v29(v28) == *MEMORY[0x24BEB99E8])
  {
    v31 = *(_QWORD *)(v0 + 352);
    v30 = *(_QWORD *)(v0 + 360);
    v32 = *(_QWORD *)(v0 + 176);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 384) + 96))(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 376));
    v33 = swift_projectBox();
    sub_23F362D94(v30, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16));
    sub_23F366748();
    sub_23F3B1424((_QWORD *)(v32 + 80), *(_QWORD *)(v32 + 104));
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 480) = v34;
    *v34 = v0;
    v34[1] = sub_23F3D5110;
    sub_23F3D99EC();
    __asm { BR              X4 }
  }
  sub_23F383CA8(*(_QWORD *)(v0 + 408), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 384) + 8));
  sub_23F3D9D14();
  v64 = *(uint64_t (**)(uint64_t))(v0 + 472);
  sub_23F362D94(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 416), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 464));
  v65 = sub_23F38422C();
  v66 = v64(v65);
  v67 = *(_QWORD *)(v0 + 384);
  v68 = *(_QWORD *)(v0 + 312);
  if (v66 != *MEMORY[0x24BEB99E0])
  {
    v81 = *(_QWORD *)(v0 + 328);
    v82 = *(_QWORD *)(v0 + 152);
    v127 = *(void (**)(_QWORD))(v67 + 8);
    ((void (*)(_QWORD, _QWORD))v127)(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 376));
    sub_23F619088();
    sub_23F3D9B80(v81, v82, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 16));
    v83 = sub_23F619E8C();
    v84 = sub_23F61C628();
    v85 = os_log_type_enabled(v83, v84);
    v87 = *(_QWORD *)(v0 + 416);
    v86 = *(_QWORD *)(v0 + 424);
    v88 = *(_QWORD *)(v0 + 376);
    v89 = *(_QWORD *)(v0 + 296);
    v120 = *(_QWORD *)(v0 + 304);
    v123 = *(_QWORD *)(v0 + 280);
    v125 = *(_QWORD *)(v0 + 272);
    if (v85)
    {
      v90 = (uint8_t *)sub_23F366668();
      v128[0] = sub_23F366668();
      *(_DWORD *)v90 = 136315138;
      v91 = sub_23F61B6EC();
      sub_23F37AE00(v91, v92, v128);
      *(_QWORD *)(v0 + 136) = v93;
      sub_23F61C790();
      v94 = sub_23F384120();
      sub_23F3D9C20(v94, v95, v96, v97, v98, v99, v100, v101, v0 + 136, v87, v89, v86, v88, v120);
      sub_23F38485C(&dword_23F35A000, v83, v84, "Got a non-entity AppEntity property of SearchAppEntity: %s", v90);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F3D9C20(v102, v103, v104, v105, v106, v107, v108, v109, v111, v112, v113, v114, v116, v120);
    (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v89, v125);
    ((void (*)(uint64_t, uint64_t))v127)(v87, v88);
    v110 = sub_23F3B1CF8();
    v127(v110);
LABEL_16:
    v62 = *(_QWORD *)(v0 + 144);
    *(_QWORD *)v62 = 2;
    *(_OWORD *)(v62 + 8) = 0u;
    *(_OWORD *)(v62 + 24) = 0u;
    *(_OWORD *)(v62 + 40) = 0u;
    *(_QWORD *)(v62 + 56) = 0;
    *(_BYTE *)(v62 + 64) = 1;
    sub_23F3D9890();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F384760();
    sub_23F3D99EC();
    __asm { BR              X0 }
  }
  v69 = *(_QWORD *)(v0 + 336);
  sub_23F3D9D84(v67);
  v70 = sub_23F3D9E40();
  sub_23F3D9B80(v69, v70, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 16));
  sub_23F3D9AF4();
  v71 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 496) = v71;
  sub_23F3D9ABC(v71);
  sub_23F3D99EC();
  return sub_23F3D45D8();
}

uint64_t sub_23F3D5110()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F3B1998();
  *v2 = *v1;
  *(_QWORD *)(v3 + 488) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F3D5160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD);
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(void);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_23F3D9CB0();
  v65 = v1;
  v66 = v2;
  v64 = v0;
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 456);
  v4 = *(_QWORD *)(v0 + 416);
  v5 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 376);
  sub_23F384274(*(_QWORD *)(v0 + 352));
  v3(v4, v5, v6);
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 472);
  v8 = *(_QWORD *)(v0 + 392);
  v9 = *(_QWORD *)(v0 + 376);
  sub_23F38426C(v8, *(_QWORD *)(v0 + 416), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 464));
  v10 = v7(v8, v9);
  v11 = *(_QWORD *)(v0 + 384);
  v12 = *(_QWORD *)(v0 + 376);
  v13 = *(_QWORD *)(v0 + 312);
  if (v10 == *MEMORY[0x24BEB99E0])
  {
    v14 = *(_QWORD *)(v0 + 336);
    (*(void (**)(_QWORD, uint64_t))(v11 + 96))(*(_QWORD *)(v0 + 392), v12);
    v15 = swift_projectBox();
    sub_23F3D9B80(v14, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
    sub_23F3668FC();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 496) = v16;
    v17 = sub_23F3D9ABC(v16);
    return ((uint64_t (*)(uint64_t))sub_23F3D45D8)(v17);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 328);
    v20 = *(_QWORD *)(v0 + 152);
    v21 = *(void (**)(_QWORD))(v11 + 8);
    ((void (*)(_QWORD, uint64_t))v21)(*(_QWORD *)(v0 + 392), v12);
    sub_23F619088();
    sub_23F3D9B80(v19, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
    v22 = sub_23F619E8C();
    v23 = sub_23F61C628();
    v24 = os_log_type_enabled(v22, v23);
    v26 = *(_QWORD *)(v0 + 416);
    v25 = *(_QWORD *)(v0 + 424);
    v27 = *(_QWORD *)(v0 + 376);
    v28 = *(_QWORD *)(v0 + 296);
    v60 = *(_QWORD *)(v0 + 304);
    v61 = *(_QWORD *)(v0 + 280);
    v62 = *(_QWORD *)(v0 + 272);
    if (v24)
    {
      v58 = (uint64_t)v21;
      v29 = (uint8_t *)sub_23F366668();
      v63 = sub_23F366668();
      *(_DWORD *)v29 = 136315138;
      v30 = sub_23F61B6EC();
      sub_23F37AE00(v30, v31, &v63);
      *(_QWORD *)(v0 + 136) = v32;
      sub_23F61C790();
      v33 = sub_23F362D08();
      sub_23F3D9C10(v33, v34, v35, v36, v37, v38, v39, v40, v52, v0 + 136, v28, v26, v27, v58, v25, v60);
      sub_23F38485C(&dword_23F35A000, v22, v23, "Got a non-entity AppEntity property of SearchAppEntity: %s", v29);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F3D9C10(v41, v42, v43, v44, v45, v46, v47, v48, v52, v53, v54, v55, v56, v57, v59, v60);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v28, v62);
    ((void (*)(uint64_t, uint64_t))v21)(v26, v27);
    v49 = sub_23F3B1CF8();
    v21(v49);
    v50 = *(_QWORD *)(v0 + 144);
    *(_QWORD *)v50 = 2;
    *(_OWORD *)(v50 + 8) = 0u;
    *(_OWORD *)(v50 + 24) = 0u;
    *(_OWORD *)(v50 + 40) = 0u;
    *(_QWORD *)(v50 + 56) = 0;
    *(_BYTE *)(v50 + 64) = 1;
    sub_23F3D9928();
    swift_task_dealloc();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    v51 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F3D0850(v51);
  }
}

uint64_t sub_23F3D5484()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F3B1998();
  *v2 = *v1;
  *(_QWORD *)(v3 + 504) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F3D54D4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F3D9A84();
  v1 = *(_QWORD *)(v0 + 384);
  sub_23F384274(*(_QWORD *)(v0 + 312));
  v2 = *(void (**)(uint64_t))(v1 + 8);
  v3 = sub_23F384AB4();
  v2(v3);
  v4 = sub_23F38422C();
  v2(v4);
  sub_23F3D9890();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  v5 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3D995C(v5);
}

uint64_t sub_23F3D5568()
{
  sub_23F3B1998();
  swift_task_dealloc();
  sub_23F362CC8();
  sub_23F36679C();
  return sub_23F3B15DC();
}

#error "23F3D5628: call analysis failed (funcsize=52)"

uint64_t sub_23F3D5680()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  sub_23F3D9CB0();
  sub_23F384274(*(_QWORD *)(v0 + 352));
  sub_23F3D9B18();
  v2(v1);
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  return sub_23F3D0850(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3D5750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  sub_23F3D9CB0();
  v2 = *(_QWORD *)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  sub_23F384274(*(_QWORD *)(v0 + 312));
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  sub_23F3D9B18();
  sub_23F3D9928();
  ((void (*)(uint64_t))v5)(v1);
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  swift_task_dealloc();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  return sub_23F3D0850(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3D580C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  char v12;
  __int128 v13;
  _QWORD *v14;

  v11 = *a2;
  v12 = a5 & 1;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = v11;
  v13 = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(v7 + 48) = v13;
  *(_OWORD *)(v7 + 64) = *(_OWORD *)(a2 + 5);
  *(_QWORD *)(v7 + 80) = a2[7];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 88) = v14;
  *v14 = v7;
  v14[1] = sub_23F3D58AC;
  return sub_23F3D5AA4(a4, v12, a6, a7);
}

uint64_t sub_23F3D58AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[12] = a1;
  v5[13] = a2;
  v5[14] = a3;
  v5[15] = v3;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F3D5910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_23F3D9A84();
  v21 = v20[13];
  if (v21)
  {
    a15 = v20[9];
    a16 = v20[10];
    a13 = v20[7];
    a14 = v20[8];
    a12 = v20[6];
    v22 = v20[4];
    v23 = v20[5];
    v25 = v20[2];
    v24 = v20[3];
    v26 = sub_23F528430(v20[12], v21, v20[14]);
    sub_23F38432C();
    sub_23F384364();
    v27 = sub_23F3D660C(v24, v22, v23, v26);
    a10 = v28;
    a11 = v27;
    v30 = v29;
    sub_23F3668F4();
    sub_23F39BA5C(a13, a14);
    sub_23F384120();
    sub_23F38458C();
    *(_QWORD *)v25 = a11;
    *(_QWORD *)(v25 + 8) = a10;
    *(_QWORD *)(v25 + 16) = v30;
    *(_QWORD *)(v25 + 24) = a12;
    *(_QWORD *)(v25 + 32) = a13;
    *(_QWORD *)(v25 + 40) = a14;
    *(_QWORD *)(v25 + 48) = a15;
    *(_QWORD *)(v25 + 56) = a16;
    *(_BYTE *)(v25 + 64) = 0;
  }
  else
  {
    v31 = v20[9];
    v32 = v20[10];
    v34 = v20[7];
    v33 = v20[8];
    v35 = v20[6];
    v36 = v20[2];
    *(_QWORD *)v36 = sub_23F3D67B4(v20[3], v20[4], v20[5]);
    *(_QWORD *)(v36 + 8) = v37;
    *(_QWORD *)(v36 + 16) = v38;
    *(_QWORD *)(v36 + 24) = v35;
    *(_QWORD *)(v36 + 32) = v34;
    *(_QWORD *)(v36 + 40) = v33;
    *(_QWORD *)(v36 + 48) = v31;
    *(_QWORD *)(v36 + 56) = v32;
    *(_BYTE *)(v36 + 64) = 0;
    sub_23F384324();
    sub_23F39BA5C(v34, v33);
  }
  sub_23F3D9BE4();
  return v39(v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_23F3D5A54()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);

  *(_QWORD *)v1 = 2;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 56) = 0;
  *(_BYTE *)(v1 + 64) = 1;
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3D5AA4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 56) = v4;
  *(_BYTE *)(v5 + 252) = a2;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a3;
  sub_23F35D2E8(&qword_256E701F0);
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  v6 = sub_23F61B92C();
  *(_QWORD *)(v5 + 72) = v6;
  *(_QWORD *)(v5 + 80) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 88) = swift_task_alloc();
  *(_QWORD *)(v5 + 96) = swift_task_alloc();
  *(_QWORD *)(v5 + 104) = swift_task_alloc();
  v7 = sub_23F61B7AC();
  *(_QWORD *)(v5 + 112) = v7;
  *(_QWORD *)(v5 + 120) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 128) = swift_task_alloc();
  sub_23F35D2E8(&qword_256E70CE8);
  *(_QWORD *)(v5 + 136) = swift_task_alloc();
  *(_QWORD *)(v5 + 144) = swift_task_alloc();
  v8 = sub_23F61B9EC();
  *(_QWORD *)(v5 + 152) = v8;
  *(_QWORD *)(v5 + 160) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 168) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F3D5BD0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v26;

  if (qword_256E6F130 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 160);
  MEMORY[0x24266ECB0]();
  sub_23F384664();
  sub_23F3E2C5C();
  v3 = v2;
  v4 = *(void (**)(uint64_t))(v1 + 8);
  *(_QWORD *)(v0 + 176) = v4;
  v5 = sub_23F384AB4();
  v4(v5);
  if ((v3 & 1) != 0)
    sub_23F3D9E10();
  if ((*(_BYTE *)(v0 + 252) & 1) != 0)
  {
    v9 = *(_QWORD *)(v0 + 120);
    v10 = *(uint64_t **)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD **)(v0 + 56);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = v12[13];
    v15 = v12[14];
    sub_23F3B21E4(v12 + 10);
    v16 = swift_allocBox();
    v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    *(_QWORD *)(v0 + 184) = v17;
    sub_23F3D9B80(v18, v13, v17);
    *v10 = v16;
    *(_DWORD *)(v0 + 248) = *MEMORY[0x24BEB99E0];
    (*(void (**)(uint64_t *))(v11 + 104))(v10);
    v19 = (_QWORD *)sub_23F3629C0();
    *(_QWORD *)(v0 + 192) = v19;
    *v19 = v0;
    v19[1] = sub_23F3D5EFC;
    return v25(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 96), v14, v15);
  }
  else
  {
    sub_23F61B77C();
    v6 = sub_23F3B1F5C();
    if (sub_23F3D9BC0(v6) == 1)
    {
      sub_23F3D9844(*(_QWORD *)(v0 + 144), &qword_256E70CE8);
      v26 = 0;
      v7 = 0;
      v8 = 0;
    }
    else
    {
      v21 = sub_23F61BC2C();
      v7 = v22;
      sub_23F3D9B48();
      swift_bridgeObjectRetain_n();
      v26 = v21;
      v23 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v21, v7);
      sub_23F369004(v23);
      v8 = v24;
      sub_23F362D18();
    }
    swift_task_dealloc();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v0 + 8))(v26, v7, v8);
  }
}

uint64_t sub_23F3D5EFC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 96);
  v3 = *(_QWORD *)(*v0 + 80);
  swift_task_dealloc();
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v1 + 200) = v4;
  sub_23F383E88(v2, v4);
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F3D5F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  __int128 v18;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  if (sub_23F36195C(v1, 1, v2) == 1)
  {
    sub_23F3D9844(v1, &qword_256E701F0);
LABEL_6:
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 184))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 112));
    goto LABEL_7;
  }
  v3 = *(_DWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = *(void (**)(void))(v6 + 32);
  sub_23F3D9E28();
  v7();
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(v5, v4, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v5, v2) != v3)
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 200))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    goto LABEL_6;
  }
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 184);
  v9 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 112);
  sub_23F3D9D84(*(_QWORD *)(v0 + 80));
  v11 = sub_23F3D9E40();
  v8(v9, v11, v10);
  sub_23F3D9AF4();
LABEL_7:
  v12 = *(_QWORD *)(v0 + 56);
  v13 = *(_BYTE *)(v0 + 252) & 1;
  v18 = *(_OWORD *)(v0 + 40);
  v14 = sub_23F61B770();
  *(_QWORD *)(v0 + 208) = v14;
  v15 = swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v15;
  *(_QWORD *)(v15 + 16) = v12;
  *(_BYTE *)(v15 + 24) = v13;
  *(_OWORD *)(v15 + 32) = v18;
  v16 = (_QWORD *)sub_23F3629C0();
  *(_QWORD *)(v0 + 224) = v16;
  *v16 = v0;
  v16[1] = sub_23F3D60E8;
  return ((uint64_t (*)(uint64_t, void *, uint64_t))v18)(v14, &unk_256E71600, v15);
}

uint64_t sub_23F3D60E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc();
  sub_23F362D08();
  sub_23F3666DC();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F3D6164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t *a12, __int128 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t *a25,uint64_t a26,uint64_t a27)
{
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  char v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t *, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  sub_23F3D9A84();
  a26 = v28;
  a27 = v29;
  a25 = v27;
  v30 = *(_QWORD *)(v27[29] + 16);
  if (v30)
  {
    a12 = v27;
    v31 = (uint64_t *)(sub_23F617BA0() + 64);
    v32 = MEMORY[0x24BEE4AF8];
    do
    {
      v33 = *(v31 - 3);
      if (v33)
      {
        v34 = *(v31 - 4);
        v36 = *(v31 - 1);
        v35 = *v31;
        v37 = *(v31 - 2);
        sub_23F3668F4();
        sub_23F383E5C();
        sub_23F389CDC();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3D9DA4();
          v32 = v40;
        }
        v38 = *(_QWORD *)(v32 + 16);
        if (v38 >= *(_QWORD *)(v32 + 24) >> 1)
        {
          sub_23F3D9DA4();
          v32 = v41;
        }
        *(_QWORD *)(v32 + 16) = v38 + 1;
        v39 = (_QWORD *)(v32 + 40 * v38);
        v39[4] = v34;
        v39[5] = v33;
        v39[6] = v37;
        v39[7] = v36;
        v39[8] = v35;
      }
      v31 += 5;
      --v30;
    }
    while (v30);
    v27 = a12;
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = MEMORY[0x24BEE4AF8];
  }
  v42 = v27[30];
  swift_bridgeObjectRelease();
  a15 = v32;
  sub_23F384324();
  sub_23F3D8A6C(&a15);
  if (v42)
  {
    sub_23F3D9BE4();
    return swift_release();
  }
  else
  {
    v44 = sub_23F38432C();
    v45 = a15;
    MEMORY[0x24266ECB0](v44);
    if (qword_256E6F110 != -1)
      swift_once();
    v46 = (void (*)(uint64_t))v27[22];
    sub_23F361498(v27[19], (uint64_t)qword_256E80498);
    v47 = sub_23F3D9E1C();
    v48 = sub_23F38422C();
    v46(v48);
    if ((v47 & 1) != 0)
    {
      a11 = v27 + 2;
      a12 = v27;
      v49 = *(_QWORD *)(v45 + 16);
      a10 = v45;
      if (v49)
      {
        v50 = (_OWORD *)(v45 + 56);
        v51 = MEMORY[0x24BEE4AF8];
        do
        {
          v53 = *((_QWORD *)v50 - 3);
          v52 = *((_QWORD *)v50 - 2);
          v54 = *((_QWORD *)v50 - 1);
          a13 = *v50;
          v55 = qword_256E6F138;
          sub_23F384324();
          sub_23F384A00();
          sub_23F617BA0();
          if (v55 != -1)
            swift_once();
          sub_23F3E2B58(v53, v52, qword_256E80500);
          if ((v56 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            a15 = v51;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_23F37BD2C();
              v51 = a15;
            }
            v58 = *(_QWORD *)(v51 + 16);
            if (v58 >= *(_QWORD *)(v51 + 24) >> 1)
            {
              sub_23F37BD2C();
              v51 = a15;
            }
            *(_QWORD *)(v51 + 16) = v58 + 1;
            v59 = v51 + 40 * v58;
            *(_QWORD *)(v59 + 32) = v53;
            *(_QWORD *)(v59 + 40) = v52;
            *(_QWORD *)(v59 + 48) = v54;
            *(_OWORD *)(v59 + 56) = a13;
          }
          else
          {
            sub_23F38432C();
            sub_23F38458C();
            swift_bridgeObjectRelease();
          }
          v50 = (_OWORD *)((char *)v50 + 40);
          --v49;
        }
        while (v49);
      }
      else
      {
        v51 = MEMORY[0x24BEE4AF8];
      }
      swift_release();
      v45 = v51;
      v27 = a12;
    }
    v60 = (_QWORD *)sub_23F3D0C38(v45);
    sub_23F38432C();
    sub_23F3B79EC(0x202CuLL, 0xE200000000000000, v60);
    v62 = v61;
    v64 = v63;
    v66 = v65;
    sub_23F362984();
    sub_23F528A88(150, v62, v64, v66);
    v68 = v67;
    v70 = v69;
    v72 = v71;
    sub_23F3837B0();
    sub_23F384120();
    v73 = HIBYTE(v70) & 0xF;
    if ((v70 & 0x2000000000000000) == 0)
      v73 = v68 & 0xFFFFFFFFFFFFLL;
    if (v73)
    {
      *(_QWORD *)&a13 = v72;
    }
    else
    {
      sub_23F38432C();
      sub_23F362D08();
      sub_23F61B77C();
      v74 = sub_23F3B1F5C();
      if (sub_23F3D9BC0(v74) == 1)
      {
        sub_23F3D9844(v27[17], &qword_256E70CE8);
        v75 = 0;
      }
      else
      {
        sub_23F61BC2C();
        sub_23F3D9B48();
        v75 = MEMORY[0x24BEE4B08];
      }
      *(_QWORD *)&a13 = v75;
    }
    sub_23F384274(v27[15]);
    swift_task_dealloc();
    sub_23F362CC8();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F3666C4();
    sub_23F3D9BE4();
    return v79(v76, v77, v78, v79, v80, v81, v82, v83, a9, a10, a11, a12, a13, *((_QWORD *)&a13 + 1), a14, a15, a16, a17, a18,
             a19);
  }
}

uint64_t sub_23F3D6584()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F3D660C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v22 = MEMORY[0x24BEE4B08];
  sub_23F35D2E8(&qword_256E70898);
  sub_23F61C55C();
  sub_23F61C55C();
  sub_23F617BA0();
  sub_23F528350(0, 0xE000000000000000, v22, a1, a2, a3);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  swift_bridgeObjectRelease_n();
  sub_23F61C280();
  v14 = sub_23F528950((uint64_t)&unk_250FD0CF0, a4);
  v16 = v15;
  v18 = v17;
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F528350(v9, v11, v13, v14, v16, v18);
  v20 = v19;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  return v20;
}

uint64_t sub_23F3D67B4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x24BEE4B08];
  sub_23F35D2E8(&qword_256E70898);
  sub_23F61C55C();
  sub_23F61C55C();
  sub_23F617BA0();
  sub_23F528350(0, 0xE000000000000000, v9, a1, a2, a3);
  v7 = v6;
  swift_bridgeObjectRelease_n();
  sub_23F61C280();
  return v7;
}

uint64_t sub_23F3D6890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 128) = a7;
  *(_QWORD *)(v8 + 136) = a8;
  *(_BYTE *)(v8 + 81) = a6;
  *(_QWORD *)(v8 + 112) = a4;
  *(_QWORD *)(v8 + 120) = a5;
  *(_QWORD *)(v8 + 96) = a2;
  *(_QWORD *)(v8 + 104) = a3;
  *(_QWORD *)(v8 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_23F3D68B8()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = *(_BYTE *)(v0 + 81);
  v2 = *(_QWORD **)(v0 + 120);
  v3 = v2[8];
  v4 = v2[9];
  sub_23F35EA9C(v2 + 5, v3);
  v5 = (_QWORD *)sub_23F3629C0();
  *(_QWORD *)(v0 + 144) = v5;
  *v5 = v0;
  v5[1] = sub_23F3D694C;
  return v7(v0 + 16, *(_QWORD *)(v0 + 112), v1 & 1, *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), v3, v4);
}

uint64_t sub_23F3D694C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F3B1998();
  *v2 = *v1;
  *(_QWORD *)(v3 + 152) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F3D699C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(void);

  if ((*(_BYTE *)(v0 + 80) & 1) != 0)
  {
    v1 = 0;
    v2 = 0;
    v3 = 0;
    v4 = 0;
    v5 = 0;
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 64);
    v6 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 32);
    v10 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    sub_23F389CDC();
    sub_23F3668F4();
    sub_23F384920();
    sub_23F39BA98(v11, v12, v13, v10, v9, v8, v7, v6, 0);
    v1 = *(_QWORD *)(v0 + 96);
    sub_23F383738();
  }
  v14 = *(_QWORD **)(v0 + 88);
  *v14 = v1;
  v14[1] = v2;
  v14[2] = v3;
  v14[3] = v4;
  v14[4] = v5;
  v15 = (uint64_t (*)(void))sub_23F384760();
  return v15();
}

uint64_t sub_23F3D6A5C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F3D6A68(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char v10;
  _QWORD *v11;

  v10 = a3 & 1;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23F3609AC;
  return sub_23F3D45D8(a1, a2, v10, a4, a5);
}

void sub_23F3D6AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v70)(uint64_t, _QWORD);
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD v95[2];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (**v106)(uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113[3];
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;

  sub_23F362ABC();
  a19 = v23;
  a20 = v24;
  v104 = v25;
  v105 = v26;
  v110 = v27;
  v102 = v28;
  sub_23F35D2E8(&qword_256E70CE8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F36285C();
  v31 = sub_23F3D9A74(v30);
  v96 = *(_QWORD *)(v31 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F36285C();
  v100 = v33;
  v34 = sub_23F35D2E8(&qword_256E70A68);
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  sub_23F383A54();
  v36 = sub_23F61BBD8();
  v108 = *(_QWORD *)(v36 - 8);
  v109 = v36;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F362AAC();
  v40 = v38 - v39;
  MEMORY[0x24BDAC7A8](v41);
  v43 = (char *)v95 - v42;
  sub_23F35D2E8(&qword_256E70A70);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F3B1C68();
  v45 = sub_23F61BA64();
  sub_23F383E7C(v45, (uint64_t)&a16);
  v99 = v46;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F36285C();
  v49 = sub_23F3B13F0(v48);
  type metadata accessor for BravoEntityIdentifierValuePromptRenderer(v49);
  v103 = v20;
  sub_23F61B2FC();
  v107 = v115;
  v106 = (uint64_t (**)(uint64_t, uint64_t))sub_23F3B21E4(v113);
  sub_23F61BBB4();
  swift_getKeyPath();
  v97 = v31;
  v50 = swift_allocBox();
  MEMORY[0x24266EC44]();
  *v22 = v50;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v35 + 104))(v22, *MEMORY[0x24BEB8F00], v34);
  sub_23F3B121C(&qword_256E70A78, (void (*)(uint64_t))MEMORY[0x24BEBA3A8]);
  sub_23F3B0CC8(&qword_256E70A80, &qword_256E70A68);
  sub_23F61B6A4();
  sub_23F3668FC();
  (*(void (**)(uint64_t *, uint64_t))(v35 + 8))(v22, v34);
  sub_23F3B224C(v40);
  v51 = v106;
  sub_23F61A018();
  v52 = v100;
  v53 = v101;
  sub_23F3B224C((uint64_t)v43);
  v54 = sub_23F3D9B5C((uint64_t)v113);
  sub_23F3C84F4(v21);
  if (v55)
  {
    sub_23F3D9844(v21, &qword_256E70A70);
LABEL_4:
    v56 = v103[3];
    v57 = v103[4];
    sub_23F3B1424(v103, v56);
    v114 = v56;
    v115 = *(_QWORD *)(v57 + 8);
    sub_23F3D96B4(v113);
    sub_23F38426C(v58, (uint64_t)v51, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 16));
    sub_23F3A90FC();
    sub_23F38F69C((uint64_t)v113);
    goto LABEL_5;
  }
  v51 = *(uint64_t (***)(uint64_t, uint64_t))(v54 - 8);
  v59 = sub_23F383E88(v21, v51[11]);
  if (v59 != *MEMORY[0x24BEB9B50])
  {
    sub_23F383E88(v21, v51[1]);
    goto LABEL_4;
  }
  sub_23F383E88(v21, v51[12]);
  v60 = sub_23F3D9D98();
  v61(v60, v21, v53);
  v62 = v104;
  sub_23F52563C();
  v64 = v63;
  v66 = v65;
  v67 = v103[3];
  v68 = v103[4];
  sub_23F35EA9C(v103, v67);
  sub_23F61BA4C();
  v69 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 16);
  v109 = v64;
  v69(v113, v52, v62, v105, v64, v66, v67, v68);
  sub_23F3841CC(v52, *(uint64_t (**)(uint64_t, _QWORD))(v96 + 8));
  if ((v119 & 1) != 0)
  {
    sub_23F384430();
    sub_23F3841CC((uint64_t)v43, v70);
    swift_release();
    swift_release();
    v71 = v102;
    *v102 = 2;
    *(_OWORD *)(v71 + 1) = 0u;
    *(_OWORD *)(v71 + 3) = 0u;
    *(_OWORD *)(v71 + 5) = 0u;
    v71[7] = 0;
    *((_BYTE *)v71 + 64) = 1;
  }
  else
  {
    v108 = v66;
    v73 = v117;
    v72 = v118;
    v75 = v115;
    v74 = v116;
    v76 = v113[2];
    v77 = v114;
    v79 = v113[0];
    v78 = v113[1];
    sub_23F3668F4();
    sub_23F362CDC();
    v107 = v79;
    v80 = v79;
    v81 = v77;
    v82 = v101;
    v83 = v99;
    sub_23F39BA98(v80, v78, v76, v81, v75, v74, v73, v72, 0);
    v84 = v95[1];
    sub_23F61B728();
    v85 = sub_23F3B1F5C();
    if (sub_23F36195C(v84, 1, v85) == 1)
    {
      sub_23F3D9844(v84, &qword_256E70CE8);
      sub_23F3D9CFC();
      sub_23F3D9DE4();
      sub_23F362C60();
      sub_23F362D18();
      sub_23F61C280();
    }
    else
    {
      sub_23F61BC2C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8))(v84, v85);
      sub_23F61C1F0();
      sub_23F38432C();
      sub_23F3D9CFC();
      sub_23F3D9DE4();
      sub_23F362C60();
      sub_23F362D18();
      sub_23F389B44();
      sub_23F61C280();
      sub_23F384364();
      sub_23F389B44();
    }
    v86 = v111;
    v87 = v112;
    sub_23F383738();
    sub_23F3D9E28();
    v91 = sub_23F3B60F0(v88, v89, v90);
    sub_23F369004(v91);
    v93 = v92;
    swift_release();
    sub_23F3667A8();
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v98, v82);
    v94 = v102;
    *v102 = v86;
    v94[1] = v87;
    v94[2] = v93;
    *(_OWORD *)(v94 + 3) = 0u;
    *(_OWORD *)(v94 + 5) = 0u;
    *(_OWORD *)((char *)v94 + 49) = 0u;
  }
LABEL_5:
  sub_23F362948();
}

uint64_t sub_23F3D7160()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6[5];
  uint64_t v7;

  sub_23F3D9D58();
  v1 = v0[3];
  v2 = v0[4];
  v3 = sub_23F3B21E4(v0);
  v6[3] = v1;
  v6[4] = *(_QWORD *)(v2 + 8);
  sub_23F3D96B4(v6);
  sub_23F38431C(v4, (uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16));
  sub_23F3D96EC((uint64_t)(v0 + 5), (uint64_t)&v7, &qword_256E70CF0);
  sub_23F384920();
  sub_23F3A31EC();
  return sub_23F38F808((uint64_t)v6);
}

void sub_23F3D7204()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[5];

  sub_23F362ABC();
  v31 = v4;
  v32 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_23F61B9EC();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3B1C68();
  v11 = sub_23F61B95C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v8, v11);
  if (sub_23F3D98EC((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 88)) == *MEMORY[0x24BEB9A58])
  {
    sub_23F3D98EC((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 96));
    v15 = swift_projectBox();
    sub_23F38431C(v2, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
    sub_23F526368();
    v17 = v16;
    v19 = v18;
    v21 = v0[3];
    v20 = v0[4];
    sub_23F3B1424(v0, v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 16))(v2, v6, v32, v17, v19, v21, v20);
    swift_release();
    sub_23F3667A8();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v9);
    swift_release();
  }
  else
  {
    v22 = v0[3];
    v23 = v0[4];
    v24 = sub_23F35EA9C(v0, v22);
    v34 = v22;
    v35 = *(_QWORD *)(v23 + 8);
    sub_23F3D96B4(v33);
    sub_23F38426C(v25, (uint64_t)v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16));
    sub_23F3D96EC((uint64_t)(v0 + 5), (uint64_t)v36, &qword_256E70CF0);
    sub_23F3A33D8(v8, v6, v32, v26, v27, v28, v29, v30, v31, v32, v33[0], v33[1], v33[2], v34, v35, v36[0], v36[1], v36[2], v36[3],
      v36[4]);
    sub_23F38F808((uint64_t)v33);
    sub_23F3D98EC((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  }
  sub_23F362948();
}

uint64_t sub_23F3D73D4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8[3];
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  sub_23F35EA9C(v1, v1[3]);
  sub_23F618C44();
  sub_23F3A2898();
  sub_23F384120();
  sub_23F61C1FC();
  sub_23F362984();
  sub_23F3D9C00();
  sub_23F3837B0();
  sub_23F389B44();
  sub_23F618C50();
  sub_23F61C1FC();
  sub_23F362984();
  sub_23F3D9C00();
  sub_23F3837B0();
  sub_23F383E5C();
  v3 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 0, 0xE000000000000000);
  sub_23F369004(v3);
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  v8[2] = v4;
  v9 = 0u;
  v10 = 0u;
  v11 = 0;
  sub_23F3D7518(v8, a1);
  *(_BYTE *)(a1 + 64) = 0;
  swift_bridgeObjectRelease();
  sub_23F362D08();
  sub_23F3837B0();
  sub_23F36679C();
  return sub_23F39BB1C(v5, v6);
}

double sub_23F3D7518@<D0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(uint64_t *, uint64_t, uint64_t);
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double result;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  sub_23F618C50();
  sub_23F35D2E8(&qword_256E6FD50);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61EBC0;
  *(_QWORD *)(inited + 32) = 6911296;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  v6 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(inited + 48) = MEMORY[0x24BEE4B08];
  v52 = v6;
  sub_23F35D2E8(&qword_256E70898);
  sub_23F61C55C();
  sub_23F61C55C();
  sub_23F61C280();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F528350(0, 0xE000000000000000, v52, v2, v3, v4);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 72) = v12;
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  v13 = sub_23F61C220();
  v15 = v14;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  v16 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v13, v15);
  sub_23F369004(v16);
  *(_QWORD *)(inited + 80) = v13;
  *(_QWORD *)(inited + 88) = v15;
  *(_QWORD *)(inited + 96) = v17;
  sub_23F3B79EC(0xAuLL, 0xE100000000000000, (_QWORD *)inited);
  v49 = v19;
  v50 = v18;
  v48 = v20;
  swift_setDeallocating();
  sub_23F5135A8();
  sub_23F35D2E8(&qword_256E704D8);
  v21 = sub_23F35D2E8(&qword_256E704E0);
  v22 = *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80);
  v23 = (v22 + 32) & ~v22;
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_23F61E7E0;
  v25 = (_QWORD *)(v24 + v23);
  v47 = (_QWORD *)(v24 + v23 + *(int *)(v21 + 48));
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = v2;
  v26[3] = v3;
  v27 = sub_23F6184B8();
  sub_23F617BA0();
  v26[4] = sub_23F61BFEC();
  *v25 = v26;
  v28 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104);
  ((void (*)(_QWORD *))v28)(v25);
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = sub_23F618C5C();
  v29[3] = v30;
  sub_23F35D2E8(&qword_256E6FCC8);
  v31 = sub_23F35D2E8(&qword_256E6FCD0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_QWORD *)(v32 + 72);
  v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_23F61E980;
  v36 = (_QWORD *)(v35 + v34);
  v37 = (uint64_t *)(v35 + v34 + *(int *)(v31 + 48));
  *v36 = 7368801;
  v36[1] = 0xE300000000000000;
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = sub_23F618C44();
  *(_QWORD *)(v38 + 24) = v39;
  *(_BYTE *)(v38 + 32) = 3;
  *v37 = v38;
  v40 = *MEMORY[0x24BE549A0];
  v28(v37, v40, v27);
  v41 = (_QWORD *)((char *)v36 + v33);
  v42 = (_QWORD *)((char *)v36 + v33 + *(int *)(v31 + 48));
  *v41 = 0x646E616D6D6F63;
  v41[1] = 0xE700000000000000;
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = sub_23F618C50();
  *(_QWORD *)(v43 + 24) = v44;
  *(_BYTE *)(v43 + 32) = 3;
  *v42 = v43;
  v28(v42, v40, v27);
  v29[4] = sub_23F61BFEC();
  *v47 = v29;
  ((void (*)(void))v28)();
  sub_23F3B121C(&qword_256E6FCF0, (void (*)(uint64_t))MEMORY[0x24BE549B8]);
  v45 = sub_23F61BFEC();
  *(_QWORD *)a2 = v50;
  *(_QWORD *)(a2 + 8) = v49;
  *(_QWORD *)(a2 + 16) = v48;
  *(_QWORD *)(a2 + 24) = v45;
  result = 0.0;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  return result;
}

uint64_t sub_23F3D79F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F3D7A20()
{
  uint64_t v0;

  sub_23F3D7A48(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_23F3D7A48(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 3 || a3 == 5 || a3 == 4)
    return swift_bridgeObjectRelease();
  return result;
}

void type metadata accessor for BravoTypeInstanceRenderer()
{
  sub_23F362C18();
}

uint64_t sub_23F3D7A84(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    v9 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(v4 + 104) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v4 + 80, (uint64_t)(a2 + 10));
    v10 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(v4 + 144) = v10;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v4 + 120, (uint64_t)(a2 + 15));
    v11 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(v4 + 184) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v4 + 160, (uint64_t)(a2 + 20));
    v12 = *(int *)(a3 + 36);
    v13 = v4 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_23F61B32C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return v4;
}

uint64_t sub_23F3D7BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_23F61B32C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_OWORD *sub_23F3D7C10(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a2[4];
  a1[4] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  v8 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  v9 = a2[9];
  a1[9] = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  v10 = *(_OWORD *)((char *)a2 + 184);
  *(_OWORD *)((char *)a1 + 184) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))((uint64_t)(a1 + 10), (uint64_t)(a2 + 10));
  v11 = *(int *)(a3 + 36);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t *sub_23F3D7D04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  sub_23F361AD0(a1, a2);
  sub_23F361AD0(a1 + 5, a2 + 5);
  sub_23F361AD0(a1 + 10, a2 + 10);
  sub_23F361AD0(a1 + 15, a2 + 15);
  sub_23F361AD0(a1 + 20, a2 + 20);
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_23F3D7D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
  v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_23F3D7E78()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3D7E88()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for BravoRenderableToolDefinitionPromptRenderer(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E713B0);
}

uint64_t sub_23F3D7EAC()
{
  return sub_23F3D84E0();
}

void type metadata accessor for BravoSystemToolProtocolRenderer()
{
  sub_23F362C18();
}

void type metadata accessor for BravoStrippedTypedValueRenderer()
{
  sub_23F362C18();
}

uint64_t sub_23F3D7ED0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    v9 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(v4 + 104) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v4 + 80, (uint64_t)(a2 + 10));
    v10 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(v4 + 144) = v10;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v4 + 120, (uint64_t)(a2 + 15));
    v11 = (_OWORD *)(v4 + 160);
    v12 = a2 + 20;
    v13 = a2[23];
    if (v13)
    {
      v14 = a2[24];
      *(_QWORD *)(v4 + 184) = v13;
      *(_QWORD *)(v4 + 192) = v14;
      (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v11, v12);
    }
    else
    {
      v16 = *((_OWORD *)a2 + 11);
      *v11 = *v12;
      *(_OWORD *)(v4 + 176) = v16;
      *(_QWORD *)(v4 + 192) = a2[24];
    }
    v17 = *(int *)(a3 + 36);
    v18 = v4 + v17;
    v19 = (uint64_t)a2 + v17;
    v20 = sub_23F61B32C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return v4;
}

uint64_t sub_23F3D8010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  if (*(_QWORD *)(a1 + 184))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_23F61B32C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_23F3D807C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 80, a2 + 80);
  v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 120, a2 + 120);
  v10 = (_OWORD *)(a1 + 160);
  v11 = (_OWORD *)(a2 + 160);
  v12 = *(_QWORD *)(a2 + 184);
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = v12;
    *(_QWORD *)(a1 + 192) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }
  else
  {
    v14 = *(_OWORD *)(a2 + 176);
    *v10 = *v11;
    *(_OWORD *)(a1 + 176) = v14;
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  }
  v15 = *(int *)(a3 + 36);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t sub_23F3D8188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F361AD0((uint64_t *)a1, (uint64_t *)a2);
  sub_23F361AD0((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  sub_23F361AD0((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  sub_23F361AD0((uint64_t *)(a1 + 120), (uint64_t *)(a2 + 120));
  v6 = *(_QWORD *)(a2 + 184);
  if (!*(_QWORD *)(a1 + 184))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 184) = v6;
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 160, a2 + 160);
      goto LABEL_8;
    }
LABEL_7:
    v7 = *(_OWORD *)(a2 + 160);
    v8 = *(_OWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v7;
    *(_OWORD *)(a1 + 176) = v8;
    goto LABEL_8;
  }
  if (!v6)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
    goto LABEL_7;
  }
  sub_23F361AD0((uint64_t *)(a1 + 160), (uint64_t *)(a2 + 160));
LABEL_8:
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_23F3D827C(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v5 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v5;
  sub_23F384B34();
  v6 = sub_23F38422C();
  v7(v6);
  return a1;
}

uint64_t sub_23F3D8328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  if (*(_QWORD *)(a1 + 184))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
  v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_23F3D8414()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F3D8424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F3D9C90();
  if (v3)
  {
    sub_23F3B1D54();
    sub_23F362B80();
  }
  else
  {
    v4 = v2;
    v5 = v1;
    v6 = sub_23F384B34();
    sub_23F3B1A44(v0 + *(int *)(v4 + 36), v5, v6);
  }
}

uint64_t sub_23F3D846C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F3D847C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3B218C();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_23F362B80();
  }
  else
  {
    v4 = v2;
    sub_23F384B34();
    v5 = sub_23F3D9C80(*(int *)(v4 + 36));
    sub_23F38370C(v5, v6, v7, v8);
  }
}

uint64_t type metadata accessor for BravoTypeIdentifierRenderer(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E71450);
}

uint64_t sub_23F3D84D4()
{
  return sub_23F3D84E0();
}

uint64_t sub_23F3D84E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F3D855C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F3D8568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F3D9C90();
  if (v3)
  {
    sub_23F3B1D54();
    sub_23F362B80();
  }
  else
  {
    v4 = v2;
    v5 = v1;
    v6 = sub_23F384B34();
    sub_23F3B1A44(v0 + *(int *)(v4 + 28), v5, v6);
  }
}

uint64_t sub_23F3D85B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F3D85BC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3B218C();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_23F362B80();
  }
  else
  {
    v4 = v2;
    sub_23F384B34();
    v5 = sub_23F3D9C80(*(int *)(v4 + 28));
    sub_23F38370C(v5, v6, v7, v8);
  }
}

uint64_t type metadata accessor for BravoEntityValuePromptRenderer(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E714F0);
}

uint64_t sub_23F3D8614()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_23F3D868C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23F61B32C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

uint64_t sub_23F3D8734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23F61B32C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_23F3D8778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t *sub_23F3D87EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  sub_23F361AD0(a1, a2);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_23F3D884C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_23F3D88B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F3D8920()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F3D892C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F3D9C90();
  if (v3)
  {
    sub_23F3B1D54();
    sub_23F362B80();
  }
  else
  {
    v4 = v2;
    v5 = v1;
    v6 = sub_23F384B34();
    sub_23F3B1A44(v0 + *(int *)(v4 + 20), v5, v6);
  }
}

uint64_t sub_23F3D8974()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F3D8980()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3B218C();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_23F362B80();
  }
  else
  {
    v4 = v2;
    sub_23F384B34();
    v5 = sub_23F3D9C80(*(int *)(v4 + 20));
    sub_23F38370C(v5, v6, v7, v8);
  }
}

uint64_t type metadata accessor for BravoEntityIdentifierValuePromptRenderer(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E71588);
}

uint64_t sub_23F3D89D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F3D8A54@<X0>(uint64_t *a1@<X8>)
{
  return sub_23F3D36CC(a1);
}

void sub_23F3D8A6C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F3BCF84();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_23F3D8AD4(v5);
  *a1 = v2;
}

void sub_23F3D8AD4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 *v41;
  BOOL v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;

  v3 = a1[1];
  v4 = sub_23F61CC04();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_23F3D91AC(0, v3, 1, a1);
      return;
    }
    goto LABEL_144;
  }
  v5 = v4;
  sub_23F387F94(v3 / 2);
  v111 = v6;
  v112 = v3;
  v114 = v7;
  v109 = a1;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v49 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_110:
    v99 = v10;
    if (v49 < 2)
    {
LABEL_121:
      swift_bridgeObjectRelease();
      if (v112 >= -1)
      {
        *(_QWORD *)(v111 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_149;
    }
    v100 = *v109;
    while (1)
    {
      v101 = v49 - 2;
      if (v49 < 2)
        break;
      if (!v100)
        goto LABEL_153;
      v102 = v99;
      v103 = *(_QWORD *)&v99[16 * v101 + 32];
      v104 = *(_QWORD *)&v99[16 * v49 + 24];
      sub_23F3D9290((char *)(v100 + 40 * v103), (char *)(v100 + 40 * *(_QWORD *)&v99[16 * v49 + 16]), v100 + 40 * v104, v114);
      if (v1)
        goto LABEL_106;
      if (v104 < v103)
        goto LABEL_139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v102 = sub_23F3BC9E8();
      if (v101 >= *((_QWORD *)v102 + 2))
        goto LABEL_140;
      v105 = &v102[16 * v101 + 32];
      *(_QWORD *)v105 = v103;
      *((_QWORD *)v105 + 1) = v104;
      v106 = *((_QWORD *)v102 + 2);
      if (v49 > v106)
        goto LABEL_141;
      memmove(&v102[16 * v49 + 16], &v102[16 * v49 + 32], 16 * (v106 - v49));
      v99 = v102;
      *((_QWORD *)v102 + 2) = v106 - 1;
      v49 = v106 - 1;
      if (v106 <= 2)
        goto LABEL_121;
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  v110 = v5;
  v8 = 0;
  v9 = *a1;
  v107 = *a1 + 24;
  v108 = *a1 + 8;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v113 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 >= v3)
      goto LABEL_32;
    v12 = (uint64_t *)(v9 + 40 * v8);
    v13 = *v12;
    v14 = v12[1];
    v15 = (_QWORD *)(v9 + 40 * v11);
    if (v13 == *v15 && v14 == v15[1])
    {
      v18 = v11 + 2;
      if (v11 + 2 >= v112)
        goto LABEL_31;
      v17 = 0;
    }
    else
    {
      v17 = sub_23F61CC64();
      v18 = v11 + 2;
      if (v11 + 2 >= v112)
        goto LABEL_23;
    }
    v19 = (_QWORD *)(v108 + 40 * v18);
    do
    {
      v20 = (_QWORD *)(v9 + 40 * v8);
      if (*(v19 - 1) == *v20 && *v19 == v20[1])
      {
        if ((v17 & 1) != 0)
          goto LABEL_24;
      }
      else if (((v17 ^ sub_23F61CC64()) & 1) != 0)
      {
        goto LABEL_23;
      }
      v19 += 5;
      v22 = v18 + 1;
      v8 = v18;
      v18 = v22;
    }
    while (v22 < v112);
    v18 = v22;
LABEL_23:
    v8 = v18;
    if ((v17 & 1) != 0)
    {
LABEL_24:
      if (v18 < v11)
        goto LABEL_148;
      if (v11 < v18)
      {
        v23 = 40 * v18;
        v24 = 40 * v11;
        v25 = v18;
        v26 = v11;
        do
        {
          if (v26 != --v25)
          {
            if (!v9)
              goto LABEL_152;
            v27 = v9 + v24;
            v28 = *(_OWORD *)(v9 + v24);
            v29 = v9 + v23;
            v30 = *(_QWORD *)(v9 + v24 + 16);
            v31 = *(_OWORD *)(v9 + v24 + 24);
            v32 = *(_QWORD *)(v9 + v23 - 8);
            v33 = *(_OWORD *)(v9 + v23 - 24);
            *(_OWORD *)v27 = *(_OWORD *)(v9 + v23 - 40);
            *(_OWORD *)(v27 + 16) = v33;
            *(_QWORD *)(v27 + 32) = v32;
            *(_OWORD *)(v29 - 40) = v28;
            *(_QWORD *)(v29 - 24) = v30;
            *(_OWORD *)(v29 - 16) = v31;
          }
          ++v26;
          v23 -= 40;
          v24 += 40;
        }
        while (v26 < v25);
      }
LABEL_31:
      v8 = v18;
    }
LABEL_32:
    if (v8 < v112)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_143;
      if (v8 - v11 < v110)
      {
        if (__OFADD__(v11, v110))
          goto LABEL_146;
        if (v11 + v110 >= v112)
          v34 = v112;
        else
          v34 = v11 + v110;
        if (v34 < v11)
          goto LABEL_147;
        if (v8 != v34)
        {
          v35 = v107 + 40 * v8;
          do
          {
            v36 = (uint64_t *)(v9 + 40 * v8);
            v37 = *v36;
            v38 = v36[1];
            v39 = v11;
            v40 = v35;
            do
            {
              v41 = (__int128 *)(v40 - 64);
              v42 = v37 == *(_QWORD *)(v40 - 64) && v38 == *(_QWORD *)(v40 - 56);
              if (v42 || (sub_23F61CC64() & 1) == 0)
                break;
              if (!v9)
                goto LABEL_150;
              v43 = *(_QWORD *)(v40 - 32);
              v45 = *v41;
              v44 = *(_OWORD *)(v40 - 48);
              *(_OWORD *)(v40 - 40) = *(_OWORD *)v40;
              v40 -= 40;
              v37 = *(_QWORD *)(v40 + 16);
              v38 = *(_QWORD *)(v40 + 24);
              v46 = *(_QWORD *)(v40 + 32);
              *(__int128 *)((char *)v41 + 40) = v45;
              *(__int128 *)((char *)v41 + 56) = v44;
              *((_QWORD *)v41 + 9) = v43;
              *(_QWORD *)(v40 - 24) = v37;
              *(_QWORD *)(v40 - 16) = v38;
              *(_QWORD *)(v40 - 8) = v46;
              ++v39;
            }
            while (v8 != v39);
            ++v8;
            v35 += 40;
          }
          while (v8 != v34);
          v8 = v34;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_23F3BC8F8(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v48 = *((_QWORD *)v10 + 2);
    v47 = *((_QWORD *)v10 + 3);
    v49 = v48 + 1;
    if (v48 >= v47 >> 1)
      v10 = sub_23F3BC8F8((char *)(v47 > 1), v48 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v49;
    v50 = v10 + 32;
    v51 = &v10[16 * v48 + 32];
    *(_QWORD *)v51 = v11;
    *((_QWORD *)v51 + 1) = v8;
    if (v48)
      break;
    v49 = 1;
    v9 = v113;
LABEL_101:
    v3 = v112;
    if (v8 >= v112)
      goto LABEL_110;
  }
  v9 = v113;
  while (1)
  {
    v52 = v49 - 1;
    if (v49 >= 4)
    {
      v57 = &v50[16 * v49];
      v58 = *((_QWORD *)v57 - 8);
      v59 = *((_QWORD *)v57 - 7);
      v63 = __OFSUB__(v59, v58);
      v60 = v59 - v58;
      if (v63)
        goto LABEL_127;
      v62 = *((_QWORD *)v57 - 6);
      v61 = *((_QWORD *)v57 - 5);
      v63 = __OFSUB__(v61, v62);
      v55 = v61 - v62;
      v56 = v63;
      if (v63)
        goto LABEL_128;
      v64 = v49 - 2;
      v65 = &v50[16 * v49 - 32];
      v67 = *(_QWORD *)v65;
      v66 = *((_QWORD *)v65 + 1);
      v63 = __OFSUB__(v66, v67);
      v68 = v66 - v67;
      if (v63)
        goto LABEL_129;
      v63 = __OFADD__(v55, v68);
      v69 = v55 + v68;
      if (v63)
        goto LABEL_131;
      if (v69 >= v60)
      {
        v87 = &v50[16 * v52];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v63 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v63)
          goto LABEL_137;
        v80 = v55 < v90;
        goto LABEL_90;
      }
    }
    else
    {
      if (v49 != 3)
      {
        v81 = *((_QWORD *)v10 + 4);
        v82 = *((_QWORD *)v10 + 5);
        v63 = __OFSUB__(v82, v81);
        v74 = v82 - v81;
        v75 = v63;
        goto LABEL_84;
      }
      v54 = *((_QWORD *)v10 + 4);
      v53 = *((_QWORD *)v10 + 5);
      v63 = __OFSUB__(v53, v54);
      v55 = v53 - v54;
      v56 = v63;
    }
    if ((v56 & 1) != 0)
      goto LABEL_130;
    v64 = v49 - 2;
    v70 = &v50[16 * v49 - 32];
    v72 = *(_QWORD *)v70;
    v71 = *((_QWORD *)v70 + 1);
    v73 = __OFSUB__(v71, v72);
    v74 = v71 - v72;
    v75 = v73;
    if (v73)
      goto LABEL_132;
    v76 = &v50[16 * v52];
    v78 = *(_QWORD *)v76;
    v77 = *((_QWORD *)v76 + 1);
    v63 = __OFSUB__(v77, v78);
    v79 = v77 - v78;
    if (v63)
      goto LABEL_134;
    if (__OFADD__(v74, v79))
      goto LABEL_136;
    if (v74 + v79 >= v55)
    {
      v80 = v55 < v79;
LABEL_90:
      if (v80)
        v52 = v64;
      goto LABEL_92;
    }
LABEL_84:
    if ((v75 & 1) != 0)
      goto LABEL_133;
    v83 = &v50[16 * v52];
    v85 = *(_QWORD *)v83;
    v84 = *((_QWORD *)v83 + 1);
    v63 = __OFSUB__(v84, v85);
    v86 = v84 - v85;
    if (v63)
      goto LABEL_135;
    if (v86 < v74)
      goto LABEL_101;
LABEL_92:
    v91 = v52 - 1;
    if (v52 - 1 >= v49)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v9)
      goto LABEL_151;
    v92 = v10;
    v93 = v9;
    v94 = &v50[16 * v91];
    v95 = *(_QWORD *)v94;
    v96 = &v50[16 * v52];
    v97 = *((_QWORD *)v96 + 1);
    sub_23F3D9290((char *)(v93 + 40 * *(_QWORD *)v94), (char *)(v93 + 40 * *(_QWORD *)v96), v93 + 40 * v97, v114);
    if (v1)
      break;
    if (v97 < v95)
      goto LABEL_124;
    if (v52 > *((_QWORD *)v92 + 2))
      goto LABEL_125;
    *(_QWORD *)v94 = v95;
    *(_QWORD *)&v50[16 * v91 + 8] = v97;
    v98 = *((_QWORD *)v92 + 2);
    if (v52 >= v98)
      goto LABEL_126;
    v10 = v92;
    v49 = v98 - 1;
    memmove(&v50[16 * v52], v96 + 16, 16 * (v98 - 1 - v52));
    *((_QWORD *)v92 + 2) = v98 - 1;
    v80 = v98 > 2;
    v9 = v113;
    if (!v80)
      goto LABEL_101;
  }
LABEL_106:
  swift_bridgeObjectRelease();
  if (v112 < -1)
    goto LABEL_145;
  *(_QWORD *)(v111 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_23F3D91AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 40 * a3 + 24;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 40 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = v8;
      do
      {
        v13 = v12 - 64;
        if (result == *(_QWORD *)(v12 - 64) && v10 == *(_QWORD *)(v12 - 56))
          break;
        result = sub_23F61CC64();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        v15 = *(_QWORD *)(v12 - 32);
        v17 = *(_OWORD *)v13;
        v16 = *(_OWORD *)(v12 - 48);
        *(_OWORD *)(v12 - 40) = *(_OWORD *)v12;
        v12 -= 40;
        result = *(_QWORD *)(v12 + 16);
        v10 = *(_QWORD *)(v12 + 24);
        v18 = *(_QWORD *)(v12 + 32);
        *(_OWORD *)(v13 + 40) = v17;
        *(_OWORD *)(v13 + 56) = v16;
        *(_QWORD *)(v13 + 72) = v15;
        *(_QWORD *)(v12 - 24) = result;
        *(_QWORD *)(v12 - 16) = v10;
        *(_QWORD *)(v12 - 8) = v18;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 40;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_23F3D9290(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  unint64_t v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  __int128 v24;
  __int128 v25;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  if (v9 >= v11)
  {
    sub_23F37A930(a2, (uint64_t)(a3 - (_QWORD)a2) / 40, a4);
    v12 = &v4[40 * v11];
    if (v7 >= v6 || v10 < 40)
      goto LABEL_43;
    v18 = a3 - 40;
    while (1)
    {
      v19 = (char *)(v18 + 40);
      v20 = v12 - 40;
      v21 = *((_QWORD *)v12 - 5) == *((_QWORD *)v6 - 5) && *((_QWORD *)v12 - 4) == *((_QWORD *)v6 - 4);
      if (v21 || (sub_23F61CC64() & 1) == 0)
      {
        v23 = v19 != v12 || v18 >= (unint64_t)v12;
        v12 -= 40;
        if (!v23)
          goto LABEL_39;
      }
      else
      {
        v22 = v19 != v6 || v18 >= (unint64_t)v6;
        v20 = v6 - 40;
        v6 -= 40;
        if (!v22)
          goto LABEL_39;
      }
      v24 = *(_OWORD *)v20;
      v25 = *((_OWORD *)v20 + 1);
      *(_QWORD *)(v18 + 32) = *((_QWORD *)v20 + 4);
      *(_OWORD *)v18 = v24;
      *(_OWORD *)(v18 + 16) = v25;
LABEL_39:
      v18 -= 40;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_43;
    }
  }
  sub_23F37A930(a1, (a2 - a1) / 40, a4);
  v12 = &v4[40 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 40)
  {
    while (1)
    {
      v13 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (!v13 && (sub_23F61CC64() & 1) != 0)
        break;
      v14 = v4;
      v13 = v7 == v4;
      v4 += 40;
      if (!v13)
        goto LABEL_13;
LABEL_14:
      v7 += 40;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_19;
    }
    v14 = v6;
    v13 = v7 == v6;
    v6 += 40;
    if (v13)
      goto LABEL_14;
LABEL_13:
    v15 = *(_OWORD *)v14;
    v16 = *((_OWORD *)v14 + 1);
    *((_QWORD *)v7 + 4) = *((_QWORD *)v14 + 4);
    *(_OWORD *)v7 = v15;
    *((_OWORD *)v7 + 1) = v16;
    goto LABEL_14;
  }
LABEL_19:
  v6 = v7;
LABEL_43:
  sub_23F37A930(v4, (v12 - v4) / 40, v6);
  return 1;
}

uint64_t sub_23F3D9454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  char v12;
  uint64_t v13;
  _QWORD v15[2];
  __int128 v16;
  uint64_t v17;
  unint64_t v18;

  v4 = sub_23F6191A8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = 91;
  v18 = 0xE100000000000000;
  v8 = *(_QWORD *)(a2 + 16);
  if (v8)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v10 = *(_QWORD *)(v5 + 72);
    v11 = *(void (**)(void))(v5 + 16);
    v15[1] = a1;
    swift_retain();
    v15[0] = a2;
    swift_retain();
    v12 = 1;
    v16 = xmmword_23F61E7E0;
    do
    {
      ((void (*)(char *, uint64_t, uint64_t))v11)(v7, v9, v4);
      if ((v12 & 1) == 0)
        sub_23F61C280();
      sub_23F35D2E8(&qword_256E6FC80);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = v16;
      *(_QWORD *)(v13 + 56) = v4;
      sub_23F3D96B4((uint64_t *)(v13 + 32));
      v11();
      sub_23F61CD00();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v12 = 0;
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_release();
    swift_release();
  }
  sub_23F61C280();
  return v17;
}

void sub_23F3D9608(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_23F3C3DC8(*(_QWORD *)(v2 - 8));
  sub_23F362928();
}

uint64_t sub_23F3D9638(uint64_t a1)
{
  uint64_t v1;

  return sub_23F3D3770(a1, *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23F3D966C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23F3D96B4(uint64_t *a1)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
    *a1 = swift_allocBox();
  sub_23F362928();
}

void sub_23F3D96EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F35D2E8(a3);
  sub_23F38F920(v3);
  sub_23F362928();
}

uint64_t sub_23F3D9718(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_BYTE *)(v2 + 32);
  v10 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_23F3609AC;
  return sub_23F3D580C(a1, a2, v6, v7, v8, v10, v9);
}

uint64_t sub_23F3D97A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v10 = *(_QWORD *)(v4 + 16);
  v11 = *(_BYTE *)(v4 + 24);
  v13 = *(_QWORD *)(v4 + 32);
  v12 = *(_QWORD *)(v4 + 40);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v14;
  *v14 = v5;
  v14[1] = sub_23F3609AC;
  return sub_23F3D6890(a1, a2, a3, a4, v10, v11, v13, v12);
}

void sub_23F3D9844(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(a2);
  sub_23F3C3DC8(*(_QWORD *)(v2 - 8));
  sub_23F362928();
}

void sub_23F3D9874(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_23F3D1D10(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_23F3D9890()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3D98DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

uint64_t sub_23F3D98EC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F3D98F4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return sub_23F61C790();
}

void sub_23F3D9910(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F37AE00(0xD000000000000032, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 184));
}

uint64_t sub_23F3D995C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F3D9978()
{
  uint64_t v0;
  __int128 v1;

  *(_OWORD *)(v0 - 176) = *(_OWORD *)(v0 - 160);
  v1 = *(_OWORD *)(v0 - 144);
  *(_OWORD *)(v0 - 224) = *(_OWORD *)(v0 - 128);
  *(_OWORD *)(v0 - 208) = v1;
  return type metadata accessor for ParameterPromptMap(0);
}

void sub_23F3D999C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F3D9844(*(_QWORD *)(v2 - 288), a2);
}

uint64_t sub_23F3D99A8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 264) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_23F61BCE0();
}

void sub_23F3D99CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F39BA98(a1, v11, v12, v13, v14, v15, v10, v9, a9);
}

uint64_t sub_23F3D9A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 - 224) + 32))(v0, v1, *(_QWORD *)(v2 - 208));
}

double sub_23F3D9A24()
{
  _QWORD *v0;
  uint64_t v1;
  double result;

  sub_23F35EA9C(v0, v0[3]);
  result = 0.0;
  *(_OWORD *)(v1 - 128) = 0u;
  *(_OWORD *)(v1 - 112) = 0u;
  *(_OWORD *)(v1 - 160) = 0u;
  *(_OWORD *)(v1 - 144) = 0u;
  *(_BYTE *)(v1 - 96) = -1;
  return result;
}

uint64_t sub_23F3D9A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 - 232) + 32))(v1, v0, *(_QWORD *)(v2 - 224));
}

uint64_t sub_23F3D9A74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_23F61B9EC();
}

uint64_t sub_23F3D9AA0()
{
  return sub_23F618C68();
}

uint64_t sub_23F3D9ABC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 144);
}

void sub_23F3D9ADC()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_23F38F530(v1, *(_QWORD *)(v2 - 664), v0);
}

uint64_t sub_23F3D9AF4()
{
  return swift_release();
}

uint64_t sub_23F3D9AFC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = a1;
  return v1 - 184;
}

uint64_t sub_23F3D9B34()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F39BA5C(v0, v1);
}

uint64_t sub_23F3D9B48()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t sub_23F3D9B5C(uint64_t a1)
{
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  return sub_23F61B998();
}

uint64_t sub_23F3D9B70()
{
  return swift_release_n();
}

uint64_t sub_23F3D9B78()
{
  return swift_retain();
}

uint64_t sub_23F3D9B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F3D9B88()
{
  return 0;
}

uint64_t sub_23F3D9BA4()
{
  return 0;
}

uint64_t sub_23F3D9BC0(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(v1, 1, a1);
}

BOOL sub_23F3D9BD4(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F3D9C00()
{
  return sub_23F61C280();
}

uint64_t sub_23F3D9C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v17, a16);
}

uint64_t sub_23F3D9C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, a14);
}

uint64_t sub_23F3D9C30()
{
  return sub_23F61C16C();
}

uint64_t sub_23F3D9C58()
{
  uint64_t v0;

  return v0;
}

double sub_23F3D9C68()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_BYTE *)(v0 + 64) = 1;
  return result;
}

uint64_t sub_23F3D9C80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t sub_23F3D9CF4()
{
  return sub_23F61B4F4();
}

void sub_23F3D9CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = 0;
  *(_QWORD *)(v2 - 176) = 0xE000000000000000;
  *(_QWORD *)(v2 - 168) = *(_QWORD *)(v2 - 232);
  *(_QWORD *)(v2 - 160) = v0;
  *(_QWORD *)(v2 - 152) = v1;
}

uint64_t sub_23F3D9D14()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, v1, v3);
}

uint64_t sub_23F3D9D24()
{
  return sub_23F61C790();
}

void sub_23F3D9D34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 256));
}

uint64_t sub_23F3D9D3C()
{
  return swift_retain();
}

void sub_23F3D9D44(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F38F530(a1, v3, a3);
}

uint64_t sub_23F3D9D4C()
{
  return swift_projectBox();
}

uint64_t sub_23F3D9D6C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(a4);
}

uint64_t sub_23F3D9D78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23F3D9D84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 96))(v1);
}

uint64_t sub_23F3D9D90()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3D9D98()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

void sub_23F3D9DA4()
{
  sub_23F3779E4();
}

uint64_t sub_23F3D9DB0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(a1, a2, v3, v4);
}

uint64_t sub_23F3D9DBC()
{
  return swift_release();
}

uint64_t sub_23F3D9DC4()
{
  return swift_release();
}

void sub_23F3D9DD8()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_23F3D9608(v1, v0);
}

uint64_t sub_23F3D9DE4()
{
  return sub_23F61CA00();
}

void sub_23F3D9DF0(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  sub_23F3D96EC(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t sub_23F3D9DFC()
{
  return sub_23F619088();
}

uint64_t sub_23F3D9E08()
{
  return swift_retain();
}

void sub_23F3D9E10()
{
  JUMPOUT(0x24266ECB0);
}

uint64_t sub_23F3D9E1C()
{
  return sub_23F61B9D4();
}

uint64_t sub_23F3D9E34(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

uint64_t sub_23F3D9E40()
{
  return swift_projectBox();
}

uint64_t sub_23F3D9E4C()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 - 256);
}

uint64_t sub_23F3D9E54()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

void sub_23F3D9E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 312) = v1;
  *(_QWORD *)(v2 - 304) = v0;
}

uint64_t sub_23F3D9E74()
{
  return sub_23F61C0A0();
}

uint64_t sub_23F3D9E80(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(a1, *(_QWORD *)(v2 - 384));
}

uint64_t sub_23F3D9E8C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3D9EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_23F3D9EAC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23F3D9EB8()
{
  return swift_release();
}

char *sub_23F3D9EC0(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B32C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *(_OWORD *)&a2[v8 + 24];
    *(_OWORD *)&a1[v8 + 24] = v11;
    (**(void (***)(char *, char *))(v11 - 8))(&a1[v8], &a2[v8]);
    v12 = *((_OWORD *)v10 + 4);
    *((_OWORD *)v9 + 4) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))((uint64_t)(v9 + 40), (uint64_t)(v10 + 40));
    v13 = *(_OWORD *)(v10 + 104);
    *(_OWORD *)(v9 + 104) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)(v9 + 80), (uint64_t)(v10 + 80));
    v14 = *((_OWORD *)v10 + 9);
    *((_OWORD *)v9 + 9) = v14;
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(v9 + 120), (uint64_t)(v10 + 120));
    v15 = *(_OWORD *)(v10 + 184);
    *(_OWORD *)(v9 + 184) = v15;
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))((uint64_t)(v9 + 160), (uint64_t)(v10 + 160));
    v16 = a3[6];
    v17 = *(_OWORD *)&a2[v16 + 24];
    *(_OWORD *)&a1[v16 + 24] = v17;
    (**(void (***)(void))(v17 - 8))();
    v18 = a3[7];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = *(_QWORD *)&a2[v18 + 24];
    if (v21)
    {
      v22 = *((_QWORD *)v20 + 4);
      *((_QWORD *)v19 + 3) = v21;
      *((_QWORD *)v19 + 4) = v22;
      (**(void (***)(void))(v21 - 8))();
    }
    else
    {
      v24 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v24;
      *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
    }
  }
  return a1;
}

uint64_t sub_23F3DA050(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 120);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 160);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[6]);
  result = a1 + a2[7];
  if (*(_QWORD *)(result + 24))
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(result);
  return result;
}

uint64_t sub_23F3DA0F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + v7, a2 + v7);
  v11 = v9[4];
  v8[4] = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))((uint64_t)v8 + 40, (uint64_t)v9 + 40);
  v12 = *(_OWORD *)((char *)v9 + 104);
  *(_OWORD *)((char *)v8 + 104) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))((uint64_t)(v8 + 5), (uint64_t)(v9 + 5));
  v13 = v9[9];
  v8[9] = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)v8 + 120, (uint64_t)v9 + 120);
  v14 = *(_OWORD *)((char *)v9 + 184);
  *(_OWORD *)((char *)v8 + 184) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(v8 + 10), (uint64_t)(v9 + 10));
  v15 = a3[6];
  v16 = *(_OWORD *)(a2 + v15 + 24);
  *(_OWORD *)(a1 + v15 + 24) = v16;
  (**(void (***)(void))(v16 - 8))();
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17 + 24);
  if (v20)
  {
    v21 = *(_QWORD *)(v19 + 32);
    *(_QWORD *)(v18 + 24) = v20;
    *(_QWORD *)(v18 + 32) = v21;
    (**(void (***)(void))(v20 - 8))();
  }
  else
  {
    v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  }
  return a1;
}

uint64_t sub_23F3DA254(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  sub_23F361AD0((uint64_t *)(a1 + v7), (uint64_t *)(a2 + v7));
  sub_23F361AD0(v8 + 5, v9 + 5);
  sub_23F361AD0(v8 + 10, v9 + 10);
  sub_23F361AD0(v8 + 15, v9 + 15);
  sub_23F361AD0(v8 + 20, v9 + 20);
  sub_23F361AD0((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = (__int128 *)(a2 + v10);
  v13 = *((_QWORD *)v12 + 3);
  if (!*(_QWORD *)(a1 + v10 + 24))
  {
    if (v13)
    {
      *(_QWORD *)(v11 + 24) = v13;
      *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
      (**(void (***)(uint64_t, __int128 *))(v13 - 8))(v11, v12);
      return a1;
    }
LABEL_7:
    v14 = *v12;
    v15 = v12[1];
    *(_QWORD *)(v11 + 32) = *((_QWORD *)v12 + 4);
    *(_OWORD *)v11 = v14;
    *(_OWORD *)(v11 + 16) = v15;
    return a1;
  }
  if (!v13)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v11);
    goto LABEL_7;
  }
  sub_23F361AD0((uint64_t *)v11, (uint64_t *)v12);
  return a1;
}

uint64_t sub_23F3DA370(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  memcpy((void *)(a1 + a3[5]), (const void *)(a2 + a3[5]), 0xC8uLL);
  v7 = a3[6];
  v8 = a3[7];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  return a1;
}

uint64_t sub_23F3DA408(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 40);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 80);
  v11 = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 96) = v11;
  *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 120);
  *(_OWORD *)(v8 + 120) = *(_OWORD *)(v9 + 120);
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v9 + 152);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 160);
  v12 = *(_OWORD *)(v9 + 176);
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(_OWORD *)(v8 + 176) = v12;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v9 + 192);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v13);
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  v17 = a3[7];
  v18 = a1 + v17;
  if (*(_QWORD *)(a1 + v17 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v17);
  v19 = *(_OWORD *)(a2 + v17 + 16);
  *(_OWORD *)v18 = *(_OWORD *)(a2 + v17);
  *(_OWORD *)(v18 + 16) = v19;
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(a2 + v17 + 32);
  return a1;
}

uint64_t sub_23F3DA544()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3DA550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F61B32C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F3DA5CC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3DA5D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23F61B32C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for BravoToolRenderer()
{
  uint64_t result;

  result = qword_256E71660;
  if (!qword_256E71660)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F3DA688()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23F3DA70C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = type metadata accessor for RenderableTool();
  v3 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F362930();
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_23F37BC90();
    v11 = sub_23F3DDC28();
    sub_23F383D14();
    v6 = a1 + v5;
    v8 = *(_QWORD *)(v7 + 72);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    do
    {
      v9(v1, v6, v11);
      swift_storeEnumTagMultiPayload();
      v10 = *(_QWORD *)(v13 + 16);
      if (v10 >= *(_QWORD *)(v13 + 24) >> 1)
        sub_23F37BC90();
      *(_QWORD *)(v13 + 16) = v10 + 1;
      sub_23F36262C(v1, v13+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v10, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
      v6 += v8;
      --v4;
    }
    while (v4);
  }
  sub_23F362870();
}

void sub_23F3DA84C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = type metadata accessor for ToolPromptMap(0);
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v24 = (uint64_t)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v23 = (uint64_t)v21 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v21[1] = v1;
    v28 = MEMORY[0x24BEE4AF8];
    sub_23F37BC28();
    v8 = sub_23F3823C8(a1);
    if ((v10 & 1) == 0)
    {
      v11 = v8;
      v12 = a1 + 64;
      v13 = v7 - 1;
      v22 = a1 + 64;
      if ((v8 & 0x8000000000000000) == 0)
      {
        while (v11 < 1 << *(_BYTE *)(a1 + 32))
        {
          if ((*(_QWORD *)(v12 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0)
            goto LABEL_19;
          if ((_DWORD)v9 != *(_DWORD *)(a1 + 36))
            goto LABEL_20;
          v27 = v9;
          v14 = v23;
          sub_23F362600(*(_QWORD *)(a1 + 56) + *(_QWORD *)(v25 + 72) * v11, v23, type metadata accessor for ToolPromptMap);
          v15 = v14;
          v16 = v24;
          sub_23F36262C(v15, v24, type metadata accessor for ToolPromptMap);
          v17 = *(_QWORD *)(v16 + *(int *)(v26 + 24));
          sub_23F617BA0();
          sub_23F3DDB08(v16);
          v18 = v28;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F37BC28();
            v18 = v28;
          }
          v19 = *(_QWORD *)(v18 + 16);
          if (v19 >= *(_QWORD *)(v18 + 24) >> 1)
          {
            sub_23F37BC28();
            v18 = v28;
          }
          *(_QWORD *)(v18 + 16) = v19 + 1;
          *(_QWORD *)(v18 + 8 * v19 + 32) = v17;
          if (v11 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_21;
          v12 = v22;
          if ((*(_QWORD *)(v22 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0)
            goto LABEL_22;
          if ((_DWORD)v27 != *(_DWORD *)(a1 + 36))
            goto LABEL_23;
          v20 = sub_23F61C868();
          if (!v13)
            return;
          v11 = v20;
          v9 = *(unsigned int *)(a1 + 36);
          --v13;
          if (v20 < 0)
            break;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_23F3DAAC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = sub_23F61B95C();
  v3 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v13 = v1;
    v15 = MEMORY[0x24BEE4AF8];
    sub_23F37BBF4();
    v7 = v15;
    v8 = *(_QWORD *)(sub_23F61BBA8() - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    do
    {
      MEMORY[0x24266F0AC]();
      v15 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      if (v11 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_23F37BBF4();
        v7 = v15;
      }
      *(_QWORD *)(v7 + 16) = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v11, v5, v14);
      v9 += v10;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_23F3DAC18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  char *v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v48 = sub_23F35D2E8(&qword_256E708C8);
  v3 = MEMORY[0x24BDAC7A8](v48);
  v47 = (_QWORD *)((char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x24BDAC7A8](v3);
  v46 = (char *)v40 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)v40 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v44 = (_QWORD *)((char *)v40 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v43 = (char *)v40 - v11;
  v54 = sub_23F61BBA8();
  v56 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v55 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (!v13)
    return v14;
  v40[1] = v1;
  v57 = MEMORY[0x24BEE4AF8];
  sub_23F37B758();
  result = sub_23F3823C8(a1);
  if (result < 0 || (v18 = result, result >= 1 << *(_BYTE *)(a1 + 32)))
  {
LABEL_20:
    __break(1u);
  }
  else
  {
    v19 = a1 + 64;
    v20 = v17 & 1;
    v41 = a1 + 64;
    v42 = a1;
    v21 = (uint64_t *)v45;
    while ((*(_QWORD *)(v19 + 8 * (v18 >> 6)) & (1 << v18)) != 0)
    {
      if ((_DWORD)v16 != *(_DWORD *)(a1 + 36))
        goto LABEL_22;
      v50 = 1 << v18;
      v51 = v18 >> 6;
      v53 = v20;
      v49 = v16;
      v52 = v13;
      v22 = v48;
      v23 = v43;
      v24 = (uint64_t)&v43[*(int *)(v48 + 48)];
      v25 = *(_QWORD *)(a1 + 56);
      v26 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v18);
      v27 = *v26;
      v28 = v26[1];
      v29 = type metadata accessor for ParameterPromptMap(0);
      sub_23F362600(v25 + *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72) * v18, v24, type metadata accessor for ParameterPromptMap);
      *v23 = v27;
      v23[1] = v28;
      v30 = (uint64_t)v44;
      *v44 = v27;
      *(_QWORD *)(v30 + 8) = v28;
      sub_23F362600(v24, v30 + *(int *)(v22 + 48), type metadata accessor for ParameterPromptMap);
      sub_23F3C0494(v30, (uint64_t)v21);
      swift_bridgeObjectRetain_n();
      sub_23F39E4B8((uint64_t)v23, &qword_256E708C8);
      v31 = *(int *)(v22 + 48);
      v32 = (uint64_t)&v46[v31];
      v33 = *v21;
      v34 = v21[1];
      sub_23F362600((uint64_t)v21 + v31, (uint64_t)&v46[v31], type metadata accessor for ParameterPromptMap);
      v35 = *(int *)(v22 + 48);
      v36 = (uint64_t)v47;
      v37 = (char *)v47 + v35;
      *v47 = v33;
      *(_QWORD *)(v36 + 8) = v34;
      sub_23F36262C(v32, v36 + v35, type metadata accessor for ParameterPromptMap);
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v55, v37, v54);
      sub_23F617BA0();
      sub_23F39E4B8(v36, &qword_256E708C8);
      sub_23F39E4B8((uint64_t)v21, &qword_256E708C8);
      v14 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B758();
        v14 = v57;
      }
      v38 = *(_QWORD *)(v14 + 16);
      if (v38 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_23F37B758();
        v14 = v57;
      }
      *(_QWORD *)(v14 + 16) = v38 + 1;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v56 + 32))(v14+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v38, v55, v54);
      v57 = v14;
      if ((v53 & 1) != 0)
        goto LABEL_26;
      v19 = v41;
      a1 = v42;
      v39 = v52;
      if ((uint64_t)v18 >= -(-1 << *(_BYTE *)(v42 + 32)))
        goto LABEL_23;
      if ((*(_QWORD *)(v41 + 8 * v51) & v50) == 0)
        goto LABEL_24;
      if ((_DWORD)v49 != *(_DWORD *)(v42 + 36))
        goto LABEL_25;
      result = sub_23F61C868();
      v13 = v39 - 1;
      if (!v13)
        return v14;
      v18 = result;
      if ((result & 0x8000000000000000) == 0)
      {
        v20 = 0;
        v16 = *(unsigned int *)(a1 + 36);
        if (result < 1 << *(_BYTE *)(a1 + 32))
          continue;
      }
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void sub_23F3DB034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F35D2E8(&qword_256E70238);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F362930();
  v4 = sub_23F61B5D8();
  v19 = *(_QWORD *)(v4 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3834D0();
  v20 = v6;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F383780();
  v18 = v8;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_23F3DDC28();
    sub_23F383D14();
    v11 = a1 + v10;
    v13 = *(_QWORD *)(v12 + 72);
    sub_23F384324();
    v14 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_23F618B9C();
      if (sub_23F36195C(v1, 1, v4) == 1)
      {
        sub_23F39E4B8(v1, &qword_256E70238);
      }
      else
      {
        sub_23F3DDBD4(v18, v1);
        sub_23F3DDBD4(v20, v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3DDBE4();
          sub_23F37796C();
          v14 = v16;
        }
        v15 = *(_QWORD *)(v14 + 16);
        if (v15 >= *(_QWORD *)(v14 + 24) >> 1)
        {
          sub_23F37796C();
          v14 = v17;
        }
        *(_QWORD *)(v14 + 16) = v15 + 1;
        sub_23F3DDBD4(v14+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v15, v20);
      }
      v11 += v13;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  sub_23F362870();
}

uint64_t sub_23F3DB204(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
  v18 = type metadata accessor for PromptToolData(0);
  v4 = *(_QWORD *)(v18 - 8);
  v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v17 = *(_QWORD *)(v4 + 72);
  swift_retain();
  swift_retain();
  v6 = MEMORY[0x24BEE4AF8];
  do
  {
    v7 = (uint64_t *)(v5 + *(int *)(v18 + 32));
    v8 = v7[1];
    if (v8)
    {
      v9 = *v7;
      v10 = v7[2];
      v11 = v7[3];
      sub_23F39BA5C(*v7, v7[1]);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377598();
        v6 = v14;
      }
      v12 = *(_QWORD *)(v6 + 16);
      if (v12 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_23F377598();
        v6 = v15;
      }
      *(_QWORD *)(v6 + 16) = v12 + 1;
      v13 = (_QWORD *)(v6 + 32 * v12);
      v13[4] = v9;
      v13[5] = v8;
      v13[6] = v10;
      v13[7] = v11;
    }
    v5 += v17;
    --v2;
  }
  while (v2);
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_23F3DB374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  _QWORD v38[2];
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  _QWORD *v48;

  v5 = type metadata accessor for PromptToolData(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v46 = (uint64_t)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v47 = (_QWORD *)((char *)v38 - v9);
  v48 = (_QWORD *)MEMORY[0x24BEE4B00];
  v45 = *(_QWORD *)(a2 + 16);
  if (v45)
  {
    v38[0] = a1;
    v38[1] = v2;
    v10 = 0;
    v11 = *(unsigned __int8 *)(v6 + 80);
    v43 = (v11 + 32) & ~v11;
    v44 = a2 + v43;
    v12 = (_QWORD *)MEMORY[0x24BEE4B00];
    v40 = v11 | 7;
    v39 = xmmword_23F61E7E0;
    v41 = a2;
    v42 = v6;
    while (v10 < *(_QWORD *)(a2 + 16))
    {
      v13 = *(_QWORD *)(v6 + 72);
      v14 = v47;
      sub_23F362600(v44 + v13 * v10, (uint64_t)v47, type metadata accessor for PromptToolData);
      v16 = *v14;
      v15 = v14[1];
      sub_23F617BA0();
      v18 = sub_23F3754D4(v16, v15);
      v19 = v12[2];
      v20 = (v17 & 1) == 0;
      if (__OFADD__(v19, v20))
        goto LABEL_21;
      v21 = v17;
      if (v12[3] < v19 + v20)
      {
        sub_23F51467C();
        v12 = v48;
        v22 = sub_23F3754D4(v16, v15);
        if ((v21 & 1) != (v23 & 1))
          goto LABEL_23;
        v18 = v22;
      }
      if ((v21 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v24 = v12[7];
        sub_23F36262C((uint64_t)v47, v46, type metadata accessor for PromptToolData);
        v25 = *(_QWORD *)(v24 + 8 * v18);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v24 + 8 * v18) = v25;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F377994();
          v25 = v35;
          *(_QWORD *)(v24 + 8 * v18) = v35;
        }
        v27 = *(_QWORD *)(v25 + 16);
        if (v27 >= *(_QWORD *)(v25 + 24) >> 1)
        {
          sub_23F377994();
          v25 = v36;
          *(_QWORD *)(v24 + 8 * v18) = v36;
        }
        v6 = v42;
        v28 = v43;
        *(_QWORD *)(v25 + 16) = v27 + 1;
        sub_23F36262C(v46, v25 + v28 + v27 * v13, type metadata accessor for PromptToolData);
        a2 = v41;
      }
      else
      {
        sub_23F35D2E8(&qword_256E6FD90);
        v29 = v43;
        v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = v39;
        sub_23F36262C((uint64_t)v47, v30 + v29, type metadata accessor for PromptToolData);
        v12[(v18 >> 6) + 8] |= 1 << v18;
        v31 = (uint64_t *)(v12[6] + 16 * v18);
        *v31 = v16;
        v31[1] = v15;
        *(_QWORD *)(v12[7] + 8 * v18) = v30;
        v32 = v12[2];
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (v33)
          goto LABEL_22;
        v12[2] = v34;
        v6 = v42;
      }
      if (v45 == ++v10)
      {
        swift_release();
        swift_release();
        return (uint64_t)v12;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    result = sub_23F61CC94();
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

void sub_23F3DB6B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;

  v2 = sub_23F35D2E8(&qword_256E70EF0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolPromptMap(0);
  v38 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v41 = (uint64_t)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)v37 - v8;
  v42 = (_QWORD *)MEMORY[0x24BEE4B00];
  v50 = (_QWORD *)MEMORY[0x24BEE4B00];
  sub_23F38231C(a1, v46);
  v9 = v46[0];
  v43 = v46[1];
  v10 = v48;
  v11 = v49;
  v37[0] = v47;
  v44 = (unint64_t)(v47 + 64) >> 6;
  sub_23F617BA0();
  v39 = v5;
  while (1)
  {
    while (1)
    {
      if (v11)
      {
        v12 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v13 = v12 | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          goto LABEL_36;
        }
        if (v14 >= v44)
          goto LABEL_34;
        v15 = *(_QWORD *)(v43 + 8 * v14);
        v16 = v10 + 1;
        if (!v15)
        {
          v16 = v10 + 2;
          if (v10 + 2 >= v44)
            goto LABEL_34;
          v15 = *(_QWORD *)(v43 + 8 * v16);
          if (!v15)
          {
            v16 = v10 + 3;
            if (v10 + 3 >= v44)
              goto LABEL_34;
            v15 = *(_QWORD *)(v43 + 8 * v16);
            if (!v15)
            {
              v16 = v10 + 4;
              if (v10 + 4 >= v44)
                goto LABEL_34;
              v15 = *(_QWORD *)(v43 + 8 * v16);
              if (!v15)
              {
                v16 = v10 + 5;
                if (v10 + 5 >= v44)
                  goto LABEL_34;
                v15 = *(_QWORD *)(v43 + 8 * v16);
                if (!v15)
                {
                  v17 = v10 + 6;
                  while (v17 < v44)
                  {
                    v15 = *(_QWORD *)(v43 + 8 * v17++);
                    if (v15)
                    {
                      v16 = v17 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_34:
                  sub_23F382E18();
                  return;
                }
              }
            }
          }
        }
LABEL_19:
        v11 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v16 << 6);
        v10 = v16;
      }
      v18 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v13);
      v20 = *v18;
      v19 = v18[1];
      v21 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v13);
      swift_getKeyPath();
      v45 = v21;
      sub_23F617BA0();
      sub_23F617BA0();
      swift_getAtKeyPath();
      swift_release();
      if (sub_23F36195C((uint64_t)v4, 1, v5) != 1)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23F39E4B8((uint64_t)v4, &qword_256E70EF0);
    }
    v22 = v40;
    sub_23F36262C((uint64_t)v4, v40, type metadata accessor for ToolPromptMap);
    sub_23F36262C(v22, v41, type metadata accessor for ToolPromptMap);
    v23 = v42;
    if (v42[3] <= v42[2])
    {
      sub_23F514668();
      v23 = v50;
    }
    sub_23F61CD30();
    sub_23F61C22C();
    v24 = sub_23F61CD60();
    v25 = v23 + 8;
    v42 = v23;
    v26 = -1 << *((_BYTE *)v23 + 32);
    v27 = v24 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~v23[(v27 >> 6) + 8]) == 0)
      break;
    v29 = __clz(__rbit64((-1 << v27) & ~v23[(v27 >> 6) + 8])) | v27 & 0x7FFFFFFFFFFFFFC0;
    v5 = v39;
LABEL_33:
    *(_QWORD *)((char *)v25 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    v34 = v41;
    v35 = v42;
    v36 = (_QWORD *)(v42[6] + 16 * v29);
    *v36 = v20;
    v36[1] = v19;
    sub_23F36262C(v34, v35[7] + *(_QWORD *)(v38 + 72) * v29, type metadata accessor for ToolPromptMap);
    ++v35[2];
    swift_bridgeObjectRelease();
  }
  v30 = 0;
  v31 = (unint64_t)(63 - v26) >> 6;
  v5 = v39;
  while (++v28 != v31 || (v30 & 1) == 0)
  {
    v32 = v28 == v31;
    if (v28 == v31)
      v28 = 0;
    v30 |= v32;
    v33 = v25[v28];
    if (v33 != -1)
    {
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
      goto LABEL_33;
    }
  }
LABEL_36:
  __break(1u);
}

void sub_23F3DBAEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, unint64_t, uint64_t);
  unint64_t v15;
  int v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  BOOL v20;
  BOOL v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  v3 = sub_23F3DDC28();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v23 - v9;
  MEMORY[0x24BDAC7A8](v8);
  sub_23F383780();
  v34 = v11;
  v35 = MEMORY[0x24BEE4AF8];
  v32 = *(_QWORD *)(a1 + 16);
  if (v32)
  {
    v23 = v1;
    v12 = 0;
    v31 = *MEMORY[0x24BE57550];
    v27 = *MEMORY[0x24BE57558];
    v26 = *MEMORY[0x24BE57548];
    v25 = *MEMORY[0x24BE57540];
    v24 = *MEMORY[0x24BE57568];
    v28 = v10;
    v29 = v7;
    v30 = a1;
    while (v12 < *(_QWORD *)(a1 + 16))
    {
      v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v33 = *(_QWORD *)(v4 + 72);
      v14 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
      v15 = (unint64_t)v34;
      v14((uint64_t)v34, a1 + v13 + v33 * v12, v3);
      v14((uint64_t)v10, v15, v3);
      v16 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v10, v3);
      if (v16 == v31
        || v16 != v27 && (v16 != v26 ? (v20 = v16 == v25) : (v20 = 1), !v20 ? (v21 = v16 == v24) : (v21 = 1), v21))
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
        v17 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 32);
        v17(v7, (uint64_t)v34, v3);
        v18 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3DDBE4();
          sub_23F37BBC0();
          v18 = v35;
        }
        v19 = *(_QWORD *)(v18 + 16);
        if (v19 >= *(_QWORD *)(v18 + 24) >> 1)
        {
          sub_23F37BBC0();
          v18 = v35;
        }
        *(_QWORD *)(v18 + 16) = v19 + 1;
        v7 = v29;
        v17((char *)(v18 + v13 + v19 * v33), (uint64_t)v29, v3);
        v35 = v18;
        a1 = v30;
        v10 = v28;
      }
      else
      {
        v22 = *(void (**)(char *, uint64_t))(v4 + 8);
        v22(v10, v3);
        v22(v34, v3);
      }
      if (v32 == ++v12)
        goto LABEL_20;
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease();
    sub_23F362870();
  }
}

uint64_t sub_23F3DBD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23F618BB4();
  v7 = *(_QWORD *)(v27 - 8);
  v8 = MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v25 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v32 = MEMORY[0x24BEE4AF8];
  v28 = *(_QWORD *)(a1 + 16);
  if (v28)
  {
    v31 = a2;
    v25[1] = v2;
    v26 = a1;
    v14 = 0;
    v15 = v27;
    while (v14 < *(_QWORD *)(a1 + 16))
    {
      v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v17 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a1 + v16 + v17 * v14, v15);
      v18 = (uint64_t)v30;
      sub_23F618B9C();
      sub_23F3E2D1C();
      v19 = v15;
      v21 = v20;
      sub_23F39E4B8(v18, &qword_256E70238);
      if ((v21 & 1) != 0)
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v19);
        v15 = v19;
      }
      else
      {
        v22 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v22(v29, v12, v19);
        v23 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37BBC0();
          v23 = v32;
        }
        v24 = *(_QWORD *)(v23 + 16);
        if (v24 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          sub_23F37BBC0();
          v23 = v32;
        }
        *(_QWORD *)(v23 + 16) = v24 + 1;
        v15 = v27;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(v23 + v16 + v24 * v17, v29, v27);
        v32 = v23;
        a1 = v26;
      }
      if (v28 == ++v14)
      {
        v13 = v32;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

void sub_23F3DBFE8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F3DDC20();
  sub_23F3DDBF0(v1);
  sub_23F3DDBC4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8));
  sub_23F362B80();
}

void sub_23F3DC014()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F3DDC20();
  sub_23F3DDBF0(v1);
  sub_23F3DDBC4(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  sub_23F362B80();
}

uint64_t sub_23F3DC040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void (*v45)(uint64_t, uint64_t);
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, unint64_t, uint64_t);
  uint64_t v101;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  _BOOL8 v110;
  char v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  BOOL v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t inited;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t result;
  _QWORD *v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(uint64_t, unint64_t, uint64_t);
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  __int128 v239;
  uint64_t v240;
  uint64_t v241;
  _QWORD *v242;
  uint64_t v243;

  v218 = a3;
  v216 = a2;
  v211 = a4;
  v5 = sub_23F6184B8();
  v213 = *(_QWORD *)(v5 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3834D0();
  v236 = v7;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v8);
  v237 = (uint64_t)&v211 - v9;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383780();
  v238 = v11;
  sub_23F35D2E8(&qword_256E70EE0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v211 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = sub_23F61B4F4();
  v15 = *(_QWORD *)(v235 - 8);
  MEMORY[0x24BDAC7A8](v235);
  sub_23F3834D0();
  v233 = v16;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v211 - v18;
  v20 = sub_23F61B5D8();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  sub_23F3834D0();
  v219 = v22;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F383780();
  v228 = v24;
  v25 = sub_23F383738();
  v215 = a1;
  sub_23F3DBAEC(v25);
  sub_23F3DB034(v26);
  v28 = v27;
  v212 = 0;
  sub_23F362984();
  v29 = v28;
  v30 = v218;
  v31 = MEMORY[0x24BEE4AF8];
  v242 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v32 = *(_QWORD *)(v29 + 16);
  v217 = v21;
  v224 = v32;
  v225 = v20;
  v220 = v15;
  if (!v32)
    goto LABEL_23;
  v33 = 0;
  LODWORD(v223) = *MEMORY[0x24BEB8EC0];
  v234 = (unint64_t)v19;
  v222 = v29;
  do
  {
    if (v33 >= *(_QWORD *)(v29 + 16))
      goto LABEL_95;
    v34 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v226 = *(_QWORD *)(v21 + 72);
    v227 = v33;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(v228, v29 + v34 + v226 * v33, v20);
    v35 = sub_23F61B554();
    v36 = v235;
    v37 = v35;
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v19, v223, v235);
    v38 = v37;
    v39 = *(_QWORD *)(v37 + 16);
    v229 = v38;
    if (!v39)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v36);
      goto LABEL_20;
    }
    v221 = v34;
    v40 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v41 = v233;
    v232 = *(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16);
    v232(v233, v38 + v40, v36);
    sub_23F3612C0(&qword_256E708D8, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8ED8], MEMORY[0x24BEB8EF0]);
    v42 = v36;
    v231 = v43;
    v44 = sub_23F61C0A0();
    v45 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v45(v41, v42);
    if ((v44 & 1) == 0)
    {
      if (v39 != 1)
      {
        v230 = *(_QWORD *)(v220 + 72);
        v50 = v229 + v230 + v40;
        v51 = 1;
        v49 = v235;
        while (1)
        {
          v52 = v233;
          v232(v233, v50, v49);
          v53 = v51 + 1;
          if (__OFADD__(v51, 1))
            goto LABEL_94;
          v54 = sub_23F61C0A0();
          v55 = v52;
          v56 = v54;
          v45(v55, v49);
          if ((v56 & 1) != 0)
            goto LABEL_6;
          ++v51;
          v50 += v230;
          v49 = v235;
          if (v53 == v39)
          {
            v21 = v217;
            v30 = v218;
            goto LABEL_19;
          }
        }
      }
      v21 = v217;
      v30 = v218;
      v49 = v235;
LABEL_19:
      v15 = v220;
      v19 = (char *)v234;
      v45(v234, v49);
LABEL_20:
      swift_bridgeObjectRelease();
      v20 = v225;
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v228, v225);
      goto LABEL_21;
    }
LABEL_6:
    v45(v234, v235);
    swift_bridgeObjectRelease();
    v21 = v217;
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v217 + 32);
    v20 = v225;
    v46(v219, v228, v225);
    v47 = (uint64_t)v242;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F3DDBE4();
      sub_23F37BD94();
      v47 = (uint64_t)v242;
    }
    v30 = v218;
    v48 = *(_QWORD *)(v47 + 16);
    if (v48 >= *(_QWORD *)(v47 + 24) >> 1)
    {
      sub_23F37BD94();
      v47 = (uint64_t)v242;
    }
    *(_QWORD *)(v47 + 16) = v48 + 1;
    v46(v47 + v221 + v48 * v226, v219, v20);
    v242 = (_QWORD *)v47;
    v15 = v220;
    v19 = (char *)v234;
LABEL_21:
    v33 = v227 + 1;
    v29 = v222;
  }
  while (v227 + 1 != v224);
  v31 = (uint64_t)v242;
LABEL_23:
  swift_bridgeObjectRelease();
  sub_23F51BD88();
  sub_23F3690A8();
  v58 = v57;
  v59 = sub_23F617BA0();
  v60 = v212;
  sub_23F3DBAEC(v59);
  v62 = sub_23F3DBD8C(v61, v58);
  sub_23F3DA70C(v62);
  sub_23F384120();
  v227 = sub_23F3DDC20();
  MEMORY[0x24BDAC7A8](v227);
  v234 = v63;
  v207 = v63;
  v208 = v216;
  v209 = v30;
  sub_23F36F420();
  v233 = v64;
  sub_23F38432C();
  if (*(_QWORD *)(v31 + 16))
  {
    sub_23F35D2E8(&qword_256E6FD98);
    v65 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RenderableTool() - 8) + 80);
    v66 = (v65 + 32) & ~v65;
    v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_23F61E7E0;
    v68 = v67 + v66;
    v69 = *(int *)(sub_23F35D2E8(&qword_256E708E0) + 48);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v220 + 104))(v68, *MEMORY[0x24BEB8EC0], v235);
    *(_QWORD *)(v68 + v69) = v31;
    v70 = swift_storeEnumTagMultiPayload();
    MEMORY[0x24BDAC7A8](v70);
    sub_23F3DDBAC();
    v30 = v218;
    *(_QWORD *)(v71 - 16) = v218;
    sub_23F36F420();
    v235 = v72;
    swift_setDeallocating();
    sub_23F5135E8();
  }
  else
  {
    swift_release();
    v235 = MEMORY[0x24BEE4AF8];
  }
  v73 = sub_23F617BA0();
  v74 = sub_23F3B80B8(v73);
  sub_23F3DA70C(v74);
  v75 = sub_23F362984();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F3DDBAC();
  *(_QWORD *)(v76 - 16) = v30;
  sub_23F36F420();
  v78 = v77;
  sub_23F384120();
  v242 = (_QWORD *)v78;
  sub_23F386D10();
  sub_23F386D10();
  sub_23F3B9EA4((uint64_t)v242);
  v80 = v79;
  v82 = v81;
  v83 = sub_23F3B66C4(v79, v81);
  v84 = *(_QWORD *)(v83 + 16);
  v228 = v82;
  v229 = v80;
  if (v84)
  {
    v234 = v60;
    v242 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23F37B910();
    v85 = (uint64_t)v242;
    v233 = v83;
    v86 = (uint64_t *)(v83 + 40);
    do
    {
      v87 = *v86;
      v235 = *(v86 - 1);
      v242 = (_QWORD *)v85;
      v89 = *(_QWORD *)(v85 + 16);
      v88 = *(_QWORD *)(v85 + 24);
      sub_23F384324();
      if (v89 >= v88 >> 1)
      {
        sub_23F37B910();
        v85 = (uint64_t)v242;
      }
      v86 += 2;
      *(_QWORD *)(v85 + 16) = v89 + 1;
      v90 = (_QWORD *)(v85 + 24 * v89);
      v90[4] = v235;
      v90[5] = v87;
      v90[6] = MEMORY[0x24BEE4B08];
      --v84;
    }
    while (v84);
    v224 = v85;
    swift_bridgeObjectRelease();
    v82 = v228;
    v80 = v229;
    v60 = v234;
  }
  else
  {
    sub_23F38432C();
    v224 = MEMORY[0x24BEE4AF8];
  }
  swift_retain();
  swift_retain();
  v91 = sub_23F3DB374(v80, v82);
  sub_23F3DB6B0(v91);
  v93 = v92;
  sub_23F362984();
  v94 = sub_23F383EB0();
  sub_23F3DA84C(v94);
  v96 = v95;
  v226 = v93;
  sub_23F384120();
  v97 = v213;
  v234 = *(_QWORD *)(v96 + 16);
  if (v234)
  {
    v222 = v96;
    v223 = v60;
    v98 = v96 + 32;
    sub_23F383738();
    v99 = 0;
    v100 = (void (*)(uint64_t, unint64_t, uint64_t))MEMORY[0x24BEE4B00];
    v235 = MEMORY[0x24BEE4B00];
    v230 = v96 + 32;
    while (1)
    {
      v101 = *(_QWORD *)(v98 + 8 * v99);
      swift_bridgeObjectRetain_n();
      sub_23F383EB0();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v239 = v100;
      sub_23F5E2968(&v242, v101, sub_23F522E68, 0);
      sub_23F384324();
      sub_23F3DDC14();
      v103 = sub_23F35D2E8(&qword_256E704E0);
      if (sub_23F36195C((uint64_t)v14, 1, v103) != 1)
        break;
LABEL_50:
      ++v99;
      sub_23F38432C();
      sub_23F382E18();
      swift_release();
      swift_bridgeObjectRelease();
      sub_23F384120();
      sub_23F38432C();
      v100 = (void (*)(uint64_t, unint64_t, uint64_t))v235;
      if (v99 == v234)
      {
        swift_bridgeObjectRelease_n();
        v60 = v223;
        goto LABEL_53;
      }
    }
    v231 = v101;
    v232 = v100;
    v233 = v99;
    while (2)
    {
      v104 = (uint64_t)&v14[*(int *)(v103 + 48)];
      sub_23F3DDBA4(v238, (uint64_t)v14);
      sub_23F3DDBA4(v237, v104);
      v105 = v239;
      sub_23F375424();
      v108 = v107;
      v109 = *(_QWORD *)(v105 + 16);
      v110 = (v106 & 1) == 0;
      if (__OFADD__(v109, v110))
      {
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        sub_23F61CC94();
        __break(1u);
LABEL_101:
        LODWORD(v209) = 0;
        v208 = 1092;
        LOBYTE(v207) = 2;
        sub_23F61CA9C();
        __break(1u);
        goto LABEL_102;
      }
      v111 = v106;
      if (*(_QWORD *)(v105 + 24) >= v109 + v110)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v106 & 1) == 0)
            goto LABEL_46;
        }
        else
        {
          sub_23F35D2E8(&qword_256E70428);
          sub_23F61CA24();
          if ((v111 & 1) == 0)
            goto LABEL_46;
        }
      }
      else
      {
        sub_23F513EC4();
        sub_23F375424();
        if ((v111 & 1) != (v113 & 1))
          goto LABEL_100;
        v108 = v112;
        if ((v111 & 1) == 0)
        {
LABEL_46:
          v115 = v238;
          v116 = (_QWORD *)v239;
          *(_QWORD *)(v239 + 8 * (v108 >> 6) + 64) |= 1 << v108;
          v117 = *(_QWORD *)(v97 + 72) * v108;
          sub_23F3DDBA4(v116[6] + v117, v115);
          sub_23F3DDBA4(v116[7] + v117, v237);
          v118 = v116[2];
          v119 = __OFADD__(v118, 1);
          v120 = v118 + 1;
          if (v119)
            goto LABEL_93;
          v116[2] = v120;
          goto LABEL_48;
        }
      }
      v114 = v236;
      sub_23F3DDBA4(v236, v237);
      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v238, v5);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v97 + 40))(*(_QWORD *)(v239 + 56) + *(_QWORD *)(v97 + 72) * v108, v114, v5);
LABEL_48:
      sub_23F3DDC14();
      v103 = sub_23F35D2E8(&qword_256E704E0);
      isUniquelyReferenced_nonNull_native = 1;
      if (sub_23F36195C((uint64_t)v14, 1, v103) == 1)
      {
        v235 = v239;
        v98 = v230;
        v99 = v233;
        goto LABEL_50;
      }
      continue;
    }
  }
  sub_23F362984();
  v235 = MEMORY[0x24BEE4B00];
LABEL_53:
  sub_23F617000();
  sub_23F3612C0((unint64_t *)&qword_256E70430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v238 = sub_23F61BFEC();
  sub_23F3DB034(v215);
  v122 = *(_QWORD *)(v121 + 16);
  if (v122)
  {
    v123 = v121 + ((*(unsigned __int8 *)(v217 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v217 + 80));
    v124 = *(_QWORD *)(v217 + 72);
    v237 = v121;
    sub_23F617BA0();
    v125 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v126 = sub_23F61B530();
      v127 = *(_QWORD *)(v126 + 16);
      v128 = *(_QWORD *)(v125 + 16);
      if (__OFADD__(v128, v127))
        goto LABEL_96;
      v129 = v126;
      if (!swift_isUniquelyReferenced_nonNull_native() || v128 + v127 > *(_QWORD *)(v125 + 24) >> 1)
      {
        sub_23F3779A8();
        v125 = v130;
      }
      if (*(_QWORD *)(v129 + 16))
      {
        v131 = *(_QWORD *)(v125 + 16);
        v132 = (*(_QWORD *)(v125 + 24) >> 1) - v131;
        sub_23F61BBA8();
        if (v132 < v127)
          goto LABEL_98;
        sub_23F383D14();
        v135 = *(_QWORD *)(v134 + 72);
        v136 = v125 + v133 + v135 * v131;
        v137 = v129 + v133;
        v138 = v135 * v127;
        v139 = v136 + v138;
        v140 = v137 + v138;
        if (v137 < v139 && v136 < v140)
          goto LABEL_101;
        swift_arrayInitWithCopy();
        if (v127)
        {
          v142 = *(_QWORD *)(v125 + 16);
          v119 = __OFADD__(v142, v127);
          v143 = v142 + v127;
          if (v119)
            goto LABEL_99;
          *(_QWORD *)(v125 + 16) = v143;
        }
      }
      else if (v127)
      {
        goto LABEL_97;
      }
      swift_bridgeObjectRelease();
      v123 += v124;
      if (!--v122)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_73;
      }
    }
  }
  swift_bridgeObjectRelease();
  v125 = MEMORY[0x24BEE4AF8];
LABEL_73:
  v144 = sub_23F3DAAC0(v125);
  v145 = sub_23F38432C();
  MEMORY[0x24BDAC7A8](v145);
  v146 = v214;
  sub_23F3DDC68((uint64_t (*)(_QWORD))sub_23F3C03FC, (uint64_t)&v207, v144);
  v148 = v147;
  MEMORY[0x24BDAC7A8](v147);
  v149 = v218;
  sub_23F36F454((void (*)(uint64_t))sub_23F3DDA8C, (uint64_t)&v207, v148);
  v237 = v150;
  v151 = sub_23F3837B0();
  MEMORY[0x24BDAC7A8](v151);
  v209 = v146;
  v210 = v149;
  sub_23F617BA0();
  sub_23F367680();
  v153 = v152;
  v154 = *(_QWORD *)(v152 + 16);
  if (v154)
  {
    v236 = v60;
    sub_23F383EB0();
    v234 = v153;
    v155 = v153 + 48;
    v156 = MEMORY[0x24BEE4AF8];
    do
    {
      if ((*(_BYTE *)(v155 + 48) & 1) == 0)
      {
        v158 = *(_QWORD *)(v155 - 8);
        v157 = *(_QWORD *)v155;
        v159 = *(_QWORD *)(v155 - 16);
        sub_23F617BA0();
        sub_23F617BA0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3DDBE4();
          sub_23F377438();
          v156 = v162;
        }
        v160 = *(_QWORD *)(v156 + 16);
        if (v160 >= *(_QWORD *)(v156 + 24) >> 1)
        {
          sub_23F377438();
          v156 = v163;
        }
        *(_QWORD *)(v156 + 16) = v160 + 1;
        v161 = (_QWORD *)(v156 + 24 * v160);
        v161[4] = v159;
        v161[5] = v158;
        v161[6] = v157;
      }
      v155 += 72;
      --v154;
    }
    while (v154);
    sub_23F3837B0();
    sub_23F384120();
    v60 = v236;
  }
  else
  {
    sub_23F3837B0();
    v156 = MEMORY[0x24BEE4AF8];
  }
  sub_23F384120();
  v242 = (_QWORD *)v156;
  sub_23F384324();
  sub_23F3BBF3C((uint64_t *)&v242);
  if (v60)
  {
LABEL_102:
    result = swift_release();
    __break(1u);
  }
  else
  {
    sub_23F38432C();
    v164 = sub_23F383EB0();
    sub_23F3BE1CC(v164);
    sub_23F3B830C(v165, v166, v167);
    v169 = v168;
    sub_23F3DDBDC();
    swift_release();
    swift_release();
    sub_23F383EDC();
    v170 = sub_23F383738();
    sub_23F3BE1CC(v170);
    sub_23F3B830C(v171, v172, v173);
    sub_23F362984();
    swift_release();
    sub_23F383EDC();
    sub_23F3DDBDC();
    v242 = (_QWORD *)v169;
    sub_23F386BC4();
    sub_23F386BC4();
    v174 = v242;
    if (v242[2])
    {
      sub_23F35D2E8(&qword_256E6FD50);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23F61EBC0;
      *(_QWORD *)(inited + 32) = 0x6F68747970606060;
      *(_QWORD *)(inited + 40) = 0xE90000000000006ELL;
      v176 = MEMORY[0x24BEE4B08];
      *(_QWORD *)(inited + 48) = MEMORY[0x24BEE4B08];
      sub_23F3B79EC(0xA0AuLL, 0xE200000000000000, v174);
      v178 = v177;
      v180 = v179;
      v182 = v181;
      sub_23F362984();
      *(_QWORD *)(inited + 56) = v178;
      *(_QWORD *)(inited + 64) = v180;
      *(_QWORD *)(inited + 72) = v182;
      *(_QWORD *)(inited + 80) = 6316128;
      *(_QWORD *)(inited + 88) = 0xE300000000000000;
      *(_QWORD *)(inited + 96) = v176;
      sub_23F3B79EC(0xAuLL, 0xE100000000000000, (_QWORD *)inited);
      v236 = v184;
      v237 = v183;
      v234 = v185;
      swift_setDeallocating();
      sub_23F5135A8();
    }
    else
    {
      sub_23F362984();
      v237 = 0;
      v236 = MEMORY[0x24BEE4B08];
      v234 = 0xE000000000000000;
    }
    v186 = v227;
    v187 = v228;
    v188 = v229;
    v189 = sub_23F3B6F8C(v229, v228);
    sub_23F3DDAC0(v214 + *(int *)(v186 + 28), (uint64_t)&v242);
    if (v243)
    {
      v190 = sub_23F35EA9C(&v242, v243);
      v191 = sub_23F3DB204(v188, v187);
      sub_23F413FBC(0x706D6F72705F6569, 0xEF736C6F6F745F74, v191, *v190, &v239);
      swift_bridgeObjectRelease();
      v193 = *((_QWORD *)&v239 + 1);
      v192 = v239;
      v195 = v240;
      v194 = v241;
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v242);
    }
    else
    {
      sub_23F39E4B8((uint64_t)&v242, (uint64_t *)&unk_256E716A0);
      v192 = 0;
      v193 = 0;
      v195 = 0;
      v194 = 0;
    }
    v196 = MEMORY[0x24BEE4AF8];
    v197 = sub_23F61BFEC();
    v198 = sub_23F3DDC30();
    sub_23F39BA5C(v198, v199);
    sub_23F383EDC();
    sub_23F3DDBDC();
    v200 = sub_23F3DDC30();
    result = sub_23F39BB1C(v200, v201);
    v203 = v211;
    v204 = v234;
    *v211 = v237;
    v203[1] = v204;
    v203[2] = v236;
    v203[3] = v197;
    v205 = v235;
    v203[4] = v226;
    v203[5] = v205;
    v206 = v238;
    v203[6] = v196;
    v203[7] = v206;
    v203[8] = v189;
    v203[9] = v192;
    v203[10] = v193;
    v203[11] = v195;
    v203[12] = v194;
    v203[13] = v196;
  }
  return result;
}

uint64_t sub_23F3DD10C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD v21[8];
  char v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23F61BA94();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BravoToolRenderer();
  sub_23F5E5D40((uint64_t)v23);
  v10 = v24;
  v11 = v25;
  sub_23F35EA9C(v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEB9F40], v6);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, char *, uint64_t, uint64_t, uint64_t))(v11 + 8))(v21, a1, v9, a2, v10, v11);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v12 = 0;
  v13 = 0;
  v14 = 0;
  if ((v22 & 1) == 0)
  {
    v16 = v21[6];
    v15 = v21[7];
    v18 = v21[4];
    v17 = v21[5];
    v14 = v21[2];
    v19 = v21[3];
    v12 = v21[0];
    v13 = v21[1];
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F39BA98(v12, v13, v14, v19, v18, v17, v16, v15, 0);
  }
  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v23);
  *a3 = v12;
  a3[1] = v13;
  a3[2] = v14;
  return result;
}

uint64_t sub_23F3DD284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = sub_23F61BA94();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)(a2 + *(int *)(type metadata accessor for BravoToolRenderer() + 20));
  v11 = v10[18];
  v12 = v10[19];
  sub_23F35EA9C(v10 + 15, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEB9F40], v6);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v12 + 8))(a1, v9, a3, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_23F3DD384@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  void (*v86)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  char v112;
  void (*v113)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD);

  v101 = a5;
  v9 = sub_23F61B95C();
  v98 = *(_QWORD *)(v9 - 8);
  v99 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v12);
  v97 = (uint64_t)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a2[8];
  v14 = a2[9];
  sub_23F35EA9C(a2 + 5, v15);
  v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16);
  v100 = a1;
  v16(&v104, a1, a3, a4, v15, v14);
  v103 = v107;
  if ((v112 & 1) != 0)
  {
    sub_23F39BA98(v104, v105, (uint64_t)v106, v103, v108, v109, v110, (uint64_t)v111, 1);
LABEL_7:
    swift_bridgeObjectRelease();
    v43 = (uint64_t)v101;
    v44 = type metadata accessor for PromptToolData(0);
    return sub_23F36196C(v43, 1, 1, v44);
  }
  if (!v103)
  {
    sub_23F39BA98(v104, v105, (uint64_t)v106, 0, v108, v109, v110, (uint64_t)v111, 0);
    goto LABEL_7;
  }
  v95 = v113;
  v87 = a2[8];
  v96 = a4;
  v17 = a2[9];
  v18 = v104;
  v19 = a2 + 5;
  v20 = v105;
  v21 = (uint64_t)v111;
  v22 = v110;
  v23 = v109;
  v24 = v108;
  v25 = (uint64_t)v106;
  v85 = sub_23F35EA9C(v19, v87);
  v86 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 32);
  v88 = v18;
  v93 = v20;
  v94 = v25;
  v90 = v24;
  v89 = v23;
  v91 = v22;
  v92 = v21;
  sub_23F39B9D8(v18, v20, v25, v103, v24, v23, v22, v21, 0);
  sub_23F617BA0();
  v86(&v104, v100, v96, v87, v17);
  v26 = v104;
  v96 = v105;
  v28 = v106;
  v27 = v107;
  v29 = v108;
  v30 = v109;
  v32 = v110;
  v31 = v111;
  LOBYTE(v20) = v112;
  v86 = v113;
  sub_23F39B9D8(v104, v105, (uint64_t)v106, v107, v108, v109, v110, (uint64_t)v111, v112);
  v87 = v26;
  v84 = v27;
  v83 = v29;
  v82 = v30;
  v33 = v30;
  v34 = v32;
  v85 = v31;
  sub_23F39BA98(v26, v96, (uint64_t)v28, v27, v29, v33, v32, (uint64_t)v31, v20);
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
    v35 = v103;
    swift_bridgeObjectRelease();
    v36 = v88;
    v37 = v93;
    v38 = v94;
    v39 = v90;
    v40 = v89;
    v41 = v91;
    v42 = v92;
    sub_23F39BA98(v88, v93, v94, v35, v90, v89, v91, v92, 0);
    sub_23F39BA98(v36, v37, v38, v35, v39, v40, v41, v42, 0);
    goto LABEL_7;
  }
  v86 = v28;
  v46 = sub_23F617BA0();
  v47 = v102;
  v48 = sub_23F3DAC18(v46);
  swift_bridgeObjectRelease();
  v104 = MEMORY[0x24BEE4AF8];
  v49 = *(_QWORD *)(v48 + 16);
  v102 = v47;
  if (v49)
  {
    v50 = *(_QWORD *)(sub_23F61BBA8() - 8);
    v51 = v48 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
    v52 = *(_QWORD *)(v50 + 72);
    v81 = v48;
    v53 = sub_23F617BA0();
    v55 = v98;
    v54 = v99;
    do
    {
      MEMORY[0x24266F0AC](v53);
      sub_23F61B938();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v11, v54);
      sub_23F3867E4();
      v51 += v52;
      --v49;
    }
    while (v49);
    swift_bridgeObjectRelease_n();
    v56 = v54;
    v57 = v55;
  }
  else
  {
    swift_bridgeObjectRelease();
    v57 = v98;
    v56 = v99;
  }
  v58 = v97;
  sub_23F5E5DC8(v97);
  v59 = sub_23F61B5D8();
  if (sub_23F36195C(v58, 1, v59) == 1)
  {
    sub_23F39E4B8(v58, &qword_256E70238);
  }
  else
  {
    MEMORY[0x24266EA34]();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
    sub_23F61B938();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v56);
  }
  v60 = v101;
  v61 = v84;
  v62 = v83;
  v63 = v82;
  v64 = v95;
  sub_23F617BA0();
  v65 = v96;
  sub_23F617BA0();
  v66 = v93;
  sub_23F617BA0();
  sub_23F369084();
  sub_23F5278BC();
  v101 = v67;
  sub_23F39BA98(v87, v65, (uint64_t)v86, v61, v62, v63, v34, (uint64_t)v85, 0);
  v68 = v88;
  v69 = v66;
  v70 = v90;
  v71 = v89;
  v72 = v91;
  v73 = v92;
  sub_23F39BA98(v88, v69, v94, v103, v90, v89, v91, v92, 0);
  swift_bridgeObjectRelease();
  v74 = type metadata accessor for PromptToolData(0);
  v75 = (uint64_t)v60 + *(int *)(v74 + 28);
  sub_23F362600(v100, v75, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
  v76 = type metadata accessor for ToolPromptMap(0);
  *(_QWORD *)(v75 + *(int *)(v76 + 20)) = v64;
  v77 = v103;
  *(_QWORD *)(v75 + *(int *)(v76 + 24)) = v103;
  sub_23F39BA5C(v70, v71);
  v78 = v93;
  sub_23F39BA98(v68, v93, v94, v77, v70, v71, v72, v73, 0);
  v79 = v96;
  *v60 = v87;
  v60[1] = v79;
  v60[2] = v68;
  v60[3] = v78;
  v60[4] = v101;
  v80 = (_QWORD *)((char *)v60 + *(int *)(v74 + 32));
  *v80 = v70;
  v80[1] = v71;
  v80[2] = v72;
  v80[3] = v73;
  return sub_23F36196C((uint64_t)v60, 0, 1, v74);
}

uint64_t sub_23F3DDA70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_23F3DD384(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_23F3DDA8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23F3DD10C(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23F3DDAA4(uint64_t a1)
{
  uint64_t v1;

  return sub_23F3DD284(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23F3DDAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8((uint64_t *)&unk_256E716A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3DDB08(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ToolPromptMap(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23F3DDB48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E70EF8;
  if (!qword_256E70EF8)
  {
    v1 = sub_23F35EB74(&qword_256E70F00);
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256E70EF8);
  }
  return result;
}

uint64_t sub_23F3DDB90@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23F3DDA70(a1, a2);
}

uint64_t sub_23F3DDBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F3DDBC4@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t sub_23F3DDBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F3DDBDC()
{
  return swift_release();
}

uint64_t sub_23F3DDBE4()
{
  return 0;
}

_QWORD *sub_23F3DDBF0(uint64_t a1)
{
  uint64_t v1;

  return sub_23F35EA9C((_QWORD *)(v1 + *(int *)(a1 + 24)), *(_QWORD *)(v1 + *(int *)(a1 + 24) + 24));
}

void sub_23F3DDC14()
{
  sub_23F5E2D50();
}

uint64_t sub_23F3DDC20()
{
  return type metadata accessor for BravoToolRenderer();
}

uint64_t sub_23F3DDC28()
{
  return sub_23F618BB4();
}

uint64_t sub_23F3DDC30()
{
  uint64_t v0;

  return v0;
}

void sub_23F3DDC44(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  sub_23F3DDC8C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9F60], (void (*)(uint64_t))sub_23F37B724);
}

void sub_23F3DDC68(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  sub_23F3DDC8C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9AB8], (void (*)(uint64_t))sub_23F37BBF4);
}

void sub_23F3DDC8C(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t);
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v21 = a5;
  v28 = a4(0);
  v9 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  sub_23F3E01D8(v10, (uint64_t)v21);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - v12;
  v29 = MEMORY[0x24BEE4AF8];
  v26 = *(_QWORD *)(a3 + 16);
  if (v26)
  {
    v14 = 0;
    v23 = a2;
    v24 = a3;
    v22 = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v16 = *(_QWORD *)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v13, a3 + v15 + v16 * v14, v28);
      v17 = a1(v13);
      if (v5)
      {
        sub_23F3E0244();
        sub_23F3837B0();
        swift_release();
        goto LABEL_16;
      }
      if ((v17 & 1) != 0)
      {
        v25 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v25(v27, v13, v28);
        if ((sub_23F3848A8() & 1) == 0)
        {
          v18 = sub_23F3E01F8();
          v21(v18);
          a2 = v29;
        }
        v20 = *(_QWORD *)(a2 + 16);
        v19 = *(_QWORD *)(a2 + 24);
        if (v20 >= v19 >> 1)
        {
          ((void (*)(BOOL, unint64_t, uint64_t))v21)(v19 > 1, v20 + 1, 1);
          a2 = v29;
        }
        *(_QWORD *)(a2 + 16) = v20 + 1;
        v25((char *)(a2 + v15 + v20 * v16), v27, v28);
        v29 = a2;
        a2 = v23;
        a3 = v24;
        a1 = v22;
      }
      else
      {
        sub_23F3E0244();
      }
      if (v26 == ++v14)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    sub_23F3837B0();
LABEL_16:
    sub_23F362870();
  }
}

uint64_t sub_23F3DDE48(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(__int128 *);
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(__int128 *);
  __int128 v14[2];
  __int128 v15[2];
  unint64_t v16;

  v5 = MEMORY[0x24BEE4AF8];
  v16 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v7 = (uint64_t (*)(__int128 *))result;
    v5 = 0;
    v8 = a3 + 32;
    v12 = *(_QWORD *)(a3 + 16);
    v13 = (uint64_t (*)(__int128 *))result;
    while (v5 < *(_QWORD *)(a3 + 16))
    {
      sub_23F382FC4(v8, (uint64_t)v15);
      v9 = v7(v15);
      if (v3)
      {
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v15);
        swift_release();
        swift_bridgeObjectRelease();
        return v5;
      }
      if ((v9 & 1) != 0)
      {
        sub_23F362678(v15, (uint64_t)v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23F37BDC8();
        v10 = v16;
        v11 = *(_QWORD *)(v16 + 16);
        if (v11 >= *(_QWORD *)(v16 + 24) >> 1)
        {
          sub_23F37BDC8();
          v10 = v16;
        }
        *(_QWORD *)(v10 + 16) = v11 + 1;
        result = sub_23F362678(v14, v10 + 40 * v11 + 32);
        v6 = v12;
        v7 = v13;
      }
      else
      {
        result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v15);
      }
      ++v5;
      v8 += 40;
      if (v6 == v5)
      {
        v5 = v16;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

void sub_23F3DDFCC(uint64_t (*a1)(__int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v7)(__int128 *);
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(__int128 *);
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;
  uint64_t v25;
  __int128 v26[2];
  uint64_t v27;

  v4 = a3;
  v27 = MEMORY[0x24BEE4AF8];
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v7 = a1;
    v8 = 0;
    v9 = a3 + 32;
    v21 = a1;
    v22 = a3;
    v20 = v5;
    while (v8 < *(_QWORD *)(v4 + 16))
    {
      sub_23F382FC4(v9, (uint64_t)v26);
      v10 = a2;
      v11 = v7(v26);
      if (v3)
      {
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v26);
        sub_23F362C60();
        swift_release();
        goto LABEL_16;
      }
      if ((v11 & 1) != 0)
      {
        sub_23F362678(v26, (uint64_t)v23);
        if ((sub_23F3848A8() & 1) == 0)
        {
          sub_23F3E01F8();
          sub_23F37BB94();
          v10 = v27;
        }
        v12 = *(_QWORD *)(v10 + 16);
        if (v12 >= *(_QWORD *)(v10 + 24) >> 1)
          sub_23F37BB94();
        v13 = v24;
        v14 = v25;
        v15 = sub_23F38EB10((uint64_t)v23, v24);
        MEMORY[0x24BDAC7A8](v15);
        v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v18 + 16))(v17);
        sub_23F523A78(v12, (uint64_t)v17, &v27, v13, v14);
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v23);
        v7 = v21;
        v4 = v22;
        v5 = v20;
      }
      else
      {
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v26);
      }
      ++v8;
      v9 += 40;
      if (v5 == v8)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    sub_23F362C60();
LABEL_16:
    sub_23F362870();
  }
}

void sub_23F3DE180(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  uint64_t v14;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;

  v4 = a3;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v5 = a1;
    v6 = 0;
    v7 = (uint64_t *)(a3 + 40);
    v8 = MEMORY[0x24BEE4AF8];
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v10 = *(v7 - 1);
      v9 = *v7;
      v18[0] = v10;
      v18[1] = v9;
      sub_23F617BA0();
      v11 = v5(v18);
      if (v3)
      {
        swift_release();
        sub_23F362C60();
        goto LABEL_16;
      }
      if ((v11 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v19 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F37B47C();
          v8 = v19;
        }
        v13 = *(_QWORD *)(v8 + 16);
        if (v13 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_23F37B47C();
          v8 = v19;
        }
        *(_QWORD *)(v8 + 16) = v13 + 1;
        v14 = v8 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v9;
        v4 = a3;
        v5 = a1;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 2;
      if (v17 == v6)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
  }
}

void sub_23F3DE2EC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v7 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3E01D8(v8, v18[0]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - v10;
  v23 = MEMORY[0x24BEE4AF8];
  v20 = *(_QWORD *)(a3 + 16);
  if (v20)
  {
    v12 = 0;
    v18[1] = a2;
    v19 = a3;
    v18[0] = (uint64_t)a1;
    while (v12 < *(_QWORD *)(a3 + 16))
    {
      v13 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      v14 = *(_QWORD *)(v22 + 72);
      sub_23F3DFCE0(a3 + v13 + v14 * v12, (uint64_t)v11);
      v15 = a1(v11);
      if (v3)
      {
        sub_23F3DFD24((uint64_t)v11);
        swift_release();
        sub_23F3837B0();
        goto LABEL_16;
      }
      if ((v15 & 1) != 0)
      {
        sub_23F3DFD60((uint64_t)v11, v21);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3E01F8();
          sub_23F37C1C8();
        }
        v16 = v23;
        v17 = *(_QWORD *)(v23 + 16);
        if (v17 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          sub_23F37C1C8();
          v16 = v23;
        }
        *(_QWORD *)(v16 + 16) = v17 + 1;
        sub_23F3DFD60(v21, v16 + v13 + v17 * v14);
        a3 = v19;
        a1 = (uint64_t (*)(char *))v18[0];
      }
      else
      {
        sub_23F3DFD24((uint64_t)v11);
      }
      if (v20 == ++v12)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    sub_23F3837B0();
LABEL_16:
    sub_23F362870();
  }
}

void CandidateGenerator.__allocating_init(parameter:)()
{
  swift_allocObject();
  CandidateGenerator.init(parameter:)();
  sub_23F362928();
}

uint64_t CandidateGenerator.init(parameter:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_23F61BBA8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  swift_defaultActor_initialize();
  sub_23F35D2E8(&qword_256E70308);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23F61EBC0;
  sub_23F3E01B0();
  type metadata accessor for EntityMatcherCandidateGenerator();
  v5 = sub_23F3E01A0();
  sub_23F3E020C(v5 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime31EntityMatcherCandidateGenerator_parameter);
  *(_QWORD *)(v4 + 56) = v1;
  *(_QWORD *)(v4 + 64) = &off_250FD5FA8;
  *(_QWORD *)(v4 + 32) = v5;
  sub_23F3E01B0();
  type metadata accessor for OmniSearchCandidateGenerator();
  v6 = sub_23F3E01A0();
  sub_23F3E020C(v6 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime28OmniSearchCandidateGenerator_parameter);
  *(_QWORD *)(v4 + 96) = v1;
  *(_QWORD *)(v4 + 104) = &off_250FD8950;
  *(_QWORD *)(v4 + 72) = v6;
  sub_23F3E01B0();
  type metadata accessor for LocationCandidateGenerator();
  v7 = sub_23F3E01A0();
  sub_23F3E020C(v7 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime26LocationCandidateGenerator_parameter);
  *(_QWORD *)(v4 + 136) = v1;
  *(_QWORD *)(v4 + 144) = &off_250FD8820;
  *(_QWORD *)(v4 + 112) = v7;
  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  *(_QWORD *)(v0 + 112) = v4;
  return v0;
}

uint64_t sub_23F3DE63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[20] = a6;
  v7[21] = v6;
  v7[18] = a4;
  v7[19] = a5;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  v8 = sub_23F619E98();
  v7[22] = v8;
  v7[23] = *(_QWORD *)(v8 - 8);
  v7[24] = sub_23F3E0220();
  v7[25] = sub_23F3E0220();
  v7[26] = sub_23F3E0220();
  v7[27] = sub_23F3E0220();
  v7[28] = sub_23F3E0220();
  v9 = sub_23F3B1690();
  v7[29] = v9;
  v7[30] = *(_QWORD *)(v9 - 8);
  v7[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F3DE6EC()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  __int128 v80;
  uint64_t v81[14];

  v1 = v0;
  v2 = v0 + 15;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[30] + 16))(v0[31], v0[15], v0[29]);
  v3 = sub_23F61C16C();
  v5 = v4;
  sub_23F619148();
  sub_23F3E0254();
  sub_23F3E0254();
  v6 = sub_23F619E8C();
  v7 = sub_23F61C61C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = v1[17];
    v78 = v1[16];
    v9 = v5;
    v10 = sub_23F366668();
    v81[0] = sub_23F366668();
    *(_DWORD *)v10 = 136315394;
    sub_23F617BA0();
    sub_23F37AE00(v3, v9, v81);
    v1[13] = v11;
    sub_23F61C790();
    sub_23F3E01D0();
    *(_WORD *)(v10 + 12) = 2080;
    sub_23F617BA0();
    sub_23F37AE00(v78, v8, v81);
    v1[14] = v12;
    sub_23F61C790();
    sub_23F3E01D0();
    sub_23F3E025C(&dword_23F35A000, v6, v7, "Searching for typeId:'%s' with parameters:%s", (uint8_t *)v10);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v13 = v1[28];
  v14 = v1[22];
  v15 = v1[23];

  sub_23F384A80();
  sub_23F384A80();
  v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v16(v13, v14);
  v1[32] = v16;
  sub_23F3E0278();
  sub_23F3E0254();
  v17 = sub_23F619E8C();
  v18 = sub_23F61C61C();
  v19 = os_log_type_enabled(v17, v18);
  v20 = v1[27];
  v21 = v1[22];
  if (v19)
  {
    v22 = (uint8_t *)sub_23F366668();
    v81[0] = sub_23F366668();
    *(_DWORD *)v22 = 136315138;
    v23 = sub_23F3B1EA4();
    sub_23F3E01C0(v23, v24, v25, v26, v27, v28, v29, v30);
    v1[12] = v31;
    sub_23F61C790();
    sub_23F3E01D0();
    sub_23F38485C(&dword_23F35A000, v17, v18, "Running TCC check for %s", v22);
    sub_23F3B17D4();
    sub_23F366530();
  }

  sub_23F384A80();
  v16(v20, v21);
  if ((sub_23F5D57B4(v1[18], v1[19], v1[15]) & 1) != 0)
  {
    v79 = v16;
    v32 = v1[21];
    v33 = v1[15];
    v1[6] = MEMORY[0x24BEE4AF8];
    v34 = *(_QWORD *)(v32 + 112);
    v35 = swift_task_alloc();
    *(_QWORD *)(v35 + 16) = v33;
    sub_23F617BA0();
    v36 = sub_23F3DDE48((uint64_t)sub_23F3DFB44, v35, v34);
    v1[33] = v36;
    sub_23F3666EC();
    swift_bridgeObjectRelease();
    sub_23F619148();
    sub_23F3B1EA4();
    sub_23F389CDC();
    v37 = sub_23F619E8C();
    v38 = sub_23F61C640();
    v39 = os_log_type_enabled(v37, v38);
    v40 = v1[25];
    v41 = v1[22];
    if (v39)
    {
      v42 = v2 - 5;
      v43 = v2 - 4;
      v44 = sub_23F366668();
      v81[0] = sub_23F366668();
      *(_DWORD *)v44 = 134218242;
      *v42 = *(_QWORD *)(v36 + 16);
      sub_23F61C790();
      sub_23F362D08();
      *(_WORD *)(v44 + 12) = 2080;
      v45 = sub_23F3B1EA4();
      sub_23F3E01C0(v45, v46, v47, v48, v49, v50, v51, v52);
      *v43 = v53;
      sub_23F61C790();
      sub_23F3E01D0();
      sub_23F3E025C(&dword_23F35A000, v37, v38, "Found %ld valid generators for %s", (uint8_t *)v44);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F384A80();
    sub_23F362D08();
    v79(v40, v41);
    if (*(_QWORD *)(v36 + 16))
    {
      v72 = v1[20];
      v73 = v1[17];
      v80 = *(_OWORD *)(v1 + 15);
      v74 = sub_23F35D2E8(&qword_256E716B0);
      sub_23F3DFB60();
      v75 = swift_task_alloc();
      v1[34] = v75;
      *(_QWORD *)(v75 + 16) = v36;
      *(_OWORD *)(v75 + 24) = v80;
      *(_QWORD *)(v75 + 40) = v73;
      *(_QWORD *)(v75 + 48) = v72;
      v76 = (_QWORD *)swift_task_alloc();
      v1[35] = v76;
      *v76 = v1;
      v76[1] = sub_23F3DEEB4;
      v81[12] = v74;
      return sub_23F61C940();
    }
    sub_23F362D08();
  }
  else
  {
    sub_23F3E0278();
    sub_23F3E0254();
    sub_23F3B1EA4();
    v54 = sub_23F619E8C();
    v55 = sub_23F61C628();
    v56 = os_log_type_enabled(v54, v55);
    v57 = v1[26];
    v58 = v1[22];
    v59 = v1[19];
    if (v56)
    {
      v60 = v1[18];
      v61 = sub_23F366668();
      v81[0] = sub_23F366668();
      *(_DWORD *)v61 = 136315394;
      sub_23F617BA0();
      sub_23F37AE00(v60, v59, v81);
      v1[8] = v62;
      sub_23F61C790();
      sub_23F3E01D0();
      *(_WORD *)(v61 + 12) = 2080;
      v63 = sub_23F3B1EA4();
      sub_23F3E01C0(v63, v64, v65, v66, v67, v68, v69, v70);
      v1[5] = v71;
      sub_23F61C790();
      sub_23F3E01D0();
      sub_23F3E025C(&dword_23F35A000, v54, v55, "TCC access check failed for bundleId=%s type=%s", (uint8_t *)v61);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F384A80();
    sub_23F384A80();
    v16(v57, v58);
  }
  swift_task_dealloc();
  sub_23F362CC8();
  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return ((uint64_t (*)(_QWORD))v1[1])(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_23F3DEEB4()
{
  sub_23F3E0168();
  swift_bridgeObjectRelease();
  sub_23F362CC8();
  return sub_23F3B183C();
}

uint64_t sub_23F3DEF0C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 48) = v1;
  sub_23F389CDC();
  sub_23F3E0278();
  sub_23F389CDC();
  v2 = sub_23F619E8C();
  v3 = sub_23F61C640();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)sub_23F366668();
    *(_DWORD *)v4 = 134217984;
    v5 = *(_QWORD *)(v1 + 16);
    sub_23F362D08();
    *(_QWORD *)(v0 + 72) = v5;
    sub_23F366854();
    sub_23F362D08();
    sub_23F38485C(&dword_23F35A000, v2, v3, "Found %ld candidates in SystemCandidateGeneration", v4);
    sub_23F366530();
  }
  sub_23F384A80();

  (*(void (**)(_QWORD, _QWORD))(v0 + 256))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  swift_beginAccess();
  v6 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  swift_task_dealloc();
  return sub_23F3E0218(v6, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3DF058(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[3];
  v4 = a1[4];
  sub_23F35EA9C(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a2, v3, v4) & 1;
}

uint64_t sub_23F3DF0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[20] = a6;
  v7[21] = a7;
  v7[18] = a4;
  v7[19] = a5;
  v7[16] = a2;
  v7[17] = a3;
  v7[15] = a1;
  v8 = *(_QWORD *)(sub_23F35D2E8(&qword_256E70F08) - 8);
  v7[22] = v8;
  v7[23] = *(_QWORD *)(v8 + 64);
  v7[24] = swift_task_alloc();
  v9 = sub_23F61B9EC();
  v7[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[26] = v10;
  v7[27] = *(_QWORD *)(v10 + 64);
  v7[28] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E717A8);
  v7[29] = swift_task_alloc();
  v7[30] = swift_task_alloc();
  v11 = sub_23F35D2E8(&qword_256E717B0);
  v7[31] = v11;
  v7[32] = *(_QWORD *)(v11 - 8);
  v7[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F3DF1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v31 = *(_QWORD *)(v0 + 208);
    v32 = (__int128 *)(v0 + 16);
    v3 = v1 + 32;
    v29 = *(_QWORD *)(v0 + 216) + 7;
    v30 = *(_QWORD *)(v0 + 176);
    v4 = sub_23F61C490();
    sub_23F617BA0();
    v28 = v4;
    do
    {
      v33 = v2;
      v5 = *(_QWORD *)(v0 + 224);
      v6 = *(_QWORD *)(v0 + 192);
      v7 = *(_QWORD *)(v0 + 200);
      v35 = v6;
      v8 = *(_QWORD *)(v0 + 168);
      v37 = *(_QWORD *)(v0 + 160);
      v9 = *(_QWORD *)(v0 + 144);
      v36 = *(_QWORD *)(v0 + 152);
      sub_23F36196C(*(_QWORD *)(v0 + 240), 1, 1, v4);
      v34 = v3;
      sub_23F382FC4(v3, (uint64_t)v32);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v5, v9, v7);
      sub_23F39E478(v8, v6, &qword_256E70F08);
      v10 = (*(unsigned __int8 *)(v31 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      v11 = (v29 + v10) & 0xFFFFFFFFFFFFFFF8;
      v12 = (*(unsigned __int8 *)(v30 + 80) + v11 + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = 0;
      *(_QWORD *)(v13 + 24) = 0;
      sub_23F362678(v32, v13 + 32);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v31 + 32))(v13 + v10, v5, v7);
      v14 = (_QWORD *)(v13 + v11);
      *v14 = v36;
      v14[1] = v37;
      sub_23F3DFE94(v35, v13 + v12);
      sub_23F617BA0();
      if ((swift_taskGroup_addPending() & 1) != 0)
      {
        v15 = *(_QWORD *)(v0 + 232);
        sub_23F39E478(*(_QWORD *)(v0 + 240), v15, &qword_256E717A8);
        v4 = v28;
        v16 = sub_23F36195C(v15, 1, v28);
        v17 = *(_QWORD *)(v0 + 232);
        if (v16 == 1)
        {
          sub_23F3DFFB0(*(_QWORD *)(v0 + 232));
        }
        else
        {
          sub_23F61C484();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v17, v28);
        }
        v19 = v34;
        if (*(_QWORD *)(v13 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v20 = sub_23F61C43C();
          v22 = v21;
          swift_unknownObjectRelease();
        }
        else
        {
          v20 = 0;
          v22 = 0;
        }
        v23 = **(_QWORD **)(v0 + 128);
        v24 = swift_allocObject();
        *(_QWORD *)(v24 + 16) = &unk_256E717C0;
        *(_QWORD *)(v24 + 24) = v13;
        sub_23F35D2E8(&qword_256E716B0);
        v25 = v22 | v20;
        if (v22 | v20)
        {
          v25 = v0 + 56;
          *(_QWORD *)(v0 + 56) = 0;
          *(_QWORD *)(v0 + 64) = 0;
          *(_QWORD *)(v0 + 72) = v20;
          *(_QWORD *)(v0 + 80) = v22;
        }
        v18 = v33;
        *(_QWORD *)(v0 + 88) = 1;
        *(_QWORD *)(v0 + 96) = v25;
        *(_QWORD *)(v0 + 104) = v23;
        swift_task_create();
        swift_release();
      }
      else
      {
        swift_release();
        v18 = v33;
        v19 = v34;
        v4 = v28;
      }
      sub_23F3DFFB0(*(_QWORD *)(v0 + 240));
      v3 = v19 + 40;
      v2 = v18 - 1;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_23F35D2E8(&qword_256E716B0);
  sub_23F61C454();
  *(_QWORD *)(v0 + 272) = MEMORY[0x24BEE4AF8];
  v26 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v26;
  *v26 = v0;
  v26[1] = sub_23F3DF540;
  sub_23F36679C();
  return sub_23F61C460();
}

uint64_t sub_23F3DF540()
{
  sub_23F3E0168();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F3DF584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v25;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 272);
  if (!v1)
  {
    v23 = *(_QWORD **)(v0 + 120);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
    *v23 = v2;
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F366708();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v2 + 16);
  if (__OFADD__(v4, v3))
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *(_QWORD *)(v0 + 272);
  if (!isUniquelyReferenced_nonNull_native || v4 + v3 > *(_QWORD *)(v6 + 24) >> 1)
  {
    sub_23F377350();
    v6 = v7;
  }
  if (!*(_QWORD *)(v1 + 16))
  {
    if (!v3)
      goto LABEL_18;
    goto LABEL_20;
  }
  v8 = *(_QWORD *)(v6 + 16);
  v9 = (*(_QWORD *)(v6 + 24) >> 1) - v8;
  v10 = sub_23F61B404();
  if (v9 < v3)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v6 + v12 + v13 * v8;
  v15 = v1 + v12;
  v16 = v13 * v3;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    return sub_23F61CA9C();
  swift_arrayInitWithCopy();
  if (!v3)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 272) = v6;
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v25;
    *v25 = v0;
    v25[1] = sub_23F3DF540;
    sub_23F36679C();
    return sub_23F61C460();
  }
  v20 = *(_QWORD *)(v6 + 16);
  v21 = __OFADD__(v20, v3);
  v22 = v20 + v3;
  if (!v21)
  {
    *(_QWORD *)(v6 + 16) = v22;
    goto LABEL_18;
  }
LABEL_22:
  __break(1u);
  return sub_23F61CA9C();
}

uint64_t sub_23F3DF7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[3] = a1;
  v8[4] = a4;
  v9 = sub_23F619E98();
  v8[9] = v9;
  v8[10] = *(_QWORD *)(v9 - 8);
  v8[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F3DF810()
{
  uint64_t v0;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  if ((sub_23F61C4B4() & 1) != 0)
  {
    **(_QWORD **)(v0 + 24) = MEMORY[0x24BEE4AF8];
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = *(_QWORD **)(v0 + 32);
    v3 = v2[3];
    v4 = v2[4];
    sub_23F35EA9C(v2, v3);
    v5 = (_QWORD *)sub_23F3629C0();
    *(_QWORD *)(v0 + 96) = v5;
    *v5 = v0;
    v5[1] = sub_23F3DF8BC;
    return v6(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v3, v4);
  }
}

uint64_t sub_23F3DF8BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 112) = a1;
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F3DF920()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 112);
  swift_task_dealloc();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3DF954()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;

  v1 = *(void **)(v0 + 104);
  sub_23F619148();
  v2 = v1;
  v3 = v1;
  v4 = sub_23F619E8C();
  v5 = sub_23F61C628();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 104);
    v7 = (uint8_t *)sub_23F366668();
    v8 = (_QWORD *)sub_23F366668();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_23F366854();
    *v8 = v10;

    sub_23F38485C(&dword_23F35A000, v4, v5, "No candidates found : %@", v7);
    sub_23F35D2E8(&qword_256E6FAB0);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v11 = *(void **)(v0 + 104);

  v12 = *(void **)(v0 + 104);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));

  **(_QWORD **)(v0 + 24) = MEMORY[0x24BEE4AF8];
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CandidateGenerator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t CandidateGenerator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t CandidateGenerator.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3DFB2C()
{
  return CandidateGenerator.unownedExecutor.getter();
}

uint64_t sub_23F3DFB44(_QWORD *a1)
{
  uint64_t v1;

  return sub_23F3DF058(a1, *(_QWORD *)(v1 + 16)) & 1;
}

unint64_t sub_23F3DFB60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E716B8;
  if (!qword_256E716B8)
  {
    v1 = type metadata accessor for CandidateGenerator();
    result = MEMORY[0x242670A44](&protocol conformance descriptor for CandidateGenerator, v1);
    atomic_store(result, &qword_256E716B8);
  }
  return result;
}

uint64_t type metadata accessor for CandidateGenerator()
{
  return objc_opt_self();
}

uint64_t sub_23F3DFBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F362820;
  sub_23F3E0264();
  return sub_23F3DF0B0(v4, v5, v6, v7, v8, v9, v2);
}

uint64_t method lookup function for CandidateGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CandidateGenerator.__allocating_init(parameter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of CandidateGenerator.search(typeId:stringQuery:bundleId:context:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  sub_23F3E0228();
  v1 = (_QWORD *)sub_23F3629C0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F3E0178(v1, (uint64_t)sub_23F3DFCB0);
  return v3(v2);
}

uint64_t sub_23F3DFCB0(uint64_t a1)
{
  uint64_t v1;

  sub_23F3629E8();
  return sub_23F3E0218(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23F3DFCE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3DFD24(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F3DFD60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3DFDA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_23F3B1690();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E70F08) - 8) + 80);
  swift_unknownObjectRelease();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 32);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  v6 = sub_23F61AAD4();
  if (!sub_23F36195C(v0 + ((v4 + v5 + 16) & ~v5), 1, v6))
    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8));
  return swift_deallocObject();
}

uint64_t sub_23F3DFE94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70F08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3DFEDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_23F3B1690();
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E70F08) - 8) + 80);
  v5 = *(_QWORD *)(v0 + v3 + 8);
  v6 = v0 + ((v3 + v4 + 16) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_23F3609AC;
  sub_23F3E0264();
  return sub_23F3DF7A8(v8, v9, v10, v11, v12, v13, v5, v6);
}

uint64_t sub_23F3DFFB0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E717A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F3DFFF0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_23F3E0058;
  return v5(v2 + 16);
}

uint64_t sub_23F3E0058()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_23F3E00A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F3E00CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23F3E013C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256E717C8 + dword_256E717C8))(a1, v4);
}

uint64_t sub_23F3E013C()
{
  uint64_t v0;

  sub_23F3629E8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F3E0168()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_23F3E0178@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t sub_23F3E01A0()
{
  return swift_allocObject();
}

uint64_t sub_23F3E01B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v2, v0, v1);
}

void sub_23F3E01C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  sub_23F37AE00(a7, v8, (uint64_t *)va);
}

uint64_t sub_23F3E01D0()
{
  return swift_bridgeObjectRelease_n();
}

void sub_23F3E01D8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F3E01F8()
{
  return 0;
}

uint64_t sub_23F3E020C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t sub_23F3E0218(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23F3E0220()
{
  return swift_task_alloc();
}

uint64_t sub_23F3E0244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 88));
}

uint64_t sub_23F3E0254()
{
  return swift_bridgeObjectRetain_n();
}

void sub_23F3E025C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x16u);
}

uint64_t sub_23F3E0278()
{
  return sub_23F619148();
}

uint64_t sub_23F3E0280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_signpost_type_t v28;
  uint8_t *v29;
  uint8_t *v30;
  os_signpost_id_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[3];
  uint64_t v56;
  _UNKNOWN **v57;
  uint64_t v58;
  uint64_t v59;

  sub_23F362ABC();
  v58 = v1;
  v59 = v2;
  v3 = sub_23F3B1728();
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  MEMORY[0x24BDAC7A8](v3);
  sub_23F362AAC();
  v49 = v4 - v5;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v47 - v7;
  v9 = sub_23F35D2E8(&qword_256E719C0);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F38F964();
  v48 = v11 - v10;
  v12 = sub_23F618B90();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F38F964();
  v16 = (v15 - v14);
  v17 = sub_23F3E27A8();
  v52 = *(_QWORD *)(v17 - 8);
  v53 = v17;
  MEMORY[0x24BDAC7A8](v17);
  sub_23F362AAC();
  v20 = v18 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v47 - v22;
  v47[1] = type metadata accessor for PersonIdentifierView();
  v24 = sub_23F3E2764();
  *(_QWORD *)(v24 + 16) = 0;
  v54 = v0;
  *(_OWORD *)(v0 + 24) = 0u;
  v25 = v0 + 24;
  *(_QWORD *)(v0 + 16) = v24;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  if (qword_256E6F080 != -1)
    swift_once();
  v26 = sub_23F3E27B0();
  sub_23F361498(v26, (uint64_t)qword_256E80338);
  sub_23F3E275C();
  sub_23F619DFC();
  v27 = sub_23F619E38();
  v28 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v29 = (uint8_t *)sub_23F366668();
    v47[0] = v13;
    v30 = v29;
    *(_WORD *)v29 = 0;
    v31 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v27, v28, v31, "CandidateSimilarityClientV2.init", "", v30, 2u);
    sub_23F366530();
  }

  v33 = v52;
  v32 = v53;
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v20, v23, v53);
  sub_23F619E74();
  sub_23F3668A0();
  sub_23F619E68();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v32);
  (*(void (**)(NSObject *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x24BE57420], v12);
  v34 = sub_23F618B84();
  (*(void (**)(NSObject *, uint64_t))(v13 + 8))(v16, v12);
  if ((v34 & 1) != 0)
  {
    v35 = sub_23F618938();
    sub_23F3838D8(v48, v36, v37, v35);
    sub_23F6188F0();
    sub_23F6188E4();
    v38 = sub_23F618950();
    sub_23F3668A0();
    v39 = sub_23F618944();
    v40 = v54;
    v56 = v38;
    v57 = &off_250FD3EC0;
    v55[0] = v39;
    sub_23F3B1450();
    sub_23F3E2674((uint64_t)v55, v25 + 40, &qword_256E719B8);
    swift_endAccess();
    v41 = (void *)sub_23F6188E4();
    v44 = sub_23F6187F4();
    v45 = sub_23F3E2764();
    *(_QWORD *)(v45 + 16) = v44;
    *(_QWORD *)(v40 + 16) = v45;
    swift_unknownObjectRetain();
    swift_release();
    v56 = sub_23F618920();
    v57 = &off_250FD3EB0;
    sub_23F36145C(v55);
    sub_23F618800();

    swift_unknownObjectRelease();
    sub_23F3B1450();
    sub_23F3E2674((uint64_t)v55, v25, &qword_256E719A0);
    swift_endAccess();
  }
  else
  {
    sub_23F6190DC();
    sub_23F619E8C();
    v42 = sub_23F3B1BD4();
    v43 = os_log_type_enabled(v16, v42);
    v40 = v54;
    if (v43)
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F3E2784(&dword_23F35A000, v16, v42, "entitySimilarity feature flag is disabled");
      sub_23F366530();
    }

    (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v51);
  }
  sub_23F3E1C20();
  swift_release();
  return v40;
}

uint64_t sub_23F3E0834(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[35] = a1;
  v2[36] = v1;
  v3 = sub_23F3B1728();
  v2[37] = v3;
  v2[38] = *(_QWORD *)(v3 - 8);
  v2[39] = sub_23F3666CC();
  v2[40] = sub_23F3666CC();
  v2[41] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E70060);
  v2[42] = sub_23F3666CC();
  v2[43] = sub_23F3666CC();
  v2[44] = sub_23F3666CC();
  v2[45] = sub_23F3666CC();
  v2[46] = sub_23F3666CC();
  v4 = sub_23F3E27B8();
  v2[47] = v4;
  v2[48] = *(_QWORD *)(v4 - 8);
  v2[49] = sub_23F3666CC();
  v2[50] = sub_23F3666CC();
  v2[51] = sub_23F3666CC();
  v5 = _s14TypedCandidateVMa();
  v2[52] = v5;
  v2[53] = *(_QWORD *)(v5 - 8);
  v2[54] = sub_23F3666CC();
  v2[55] = sub_23F3666CC();
  v2[56] = sub_23F3666CC();
  v2[57] = sub_23F3666CC();
  v2[58] = sub_23F35D2E8(&qword_256E719A8);
  v2[59] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E719B0);
  v2[60] = sub_23F3666CC();
  v2[61] = sub_23F3666CC();
  v2[62] = sub_23F3666CC();
  v2[63] = sub_23F3666CC();
  v6 = sub_23F3E27A8();
  v2[64] = v6;
  v2[65] = *(_QWORD *)(v6 - 8);
  v2[66] = sub_23F3666CC();
  v2[67] = sub_23F3666CC();
  return swift_task_switch();
}

uint64_t sub_23F3E09E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_signpost_type_t v4;
  uint8_t *v5;
  os_signpost_id_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t *v30;
  uint64_t v31;
  __int128 v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t *v73;
  uint64_t v74;
  __int128 v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  _BOOL4 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  unint64_t v106;
  char v107;
  char v108;
  _QWORD *v109;
  unint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  BOOL v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  NSObject *v136;
  os_log_type_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t (*v162)(uint64_t, uint64_t, uint64_t);
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t i;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  __int128 v182;
  uint64_t v183;
  __int128 v184;
  uint64_t v185[3];

  v1 = v0 + 216;
  if (qword_256E6F080 != -1)
    goto LABEL_82;
  while (1)
  {
    v2 = sub_23F3E27B0();
    sub_23F361498(v2, (uint64_t)qword_256E80338);
    sub_23F3E275C();
    sub_23F619DFC();
    v3 = sub_23F619E38();
    v4 = sub_23F61C694();
    if ((sub_23F61C718() & 1) != 0)
    {
      v5 = (uint8_t *)sub_23F366668();
      *(_WORD *)v5 = 0;
      v6 = sub_23F619E08();
      _os_signpost_emit_with_name_impl(&dword_23F35A000, v3, v4, v6, "CandidateSimilarityClientV2.computeSimilarities", "", v5, 2u);
      sub_23F366530();
    }
    v7 = *(_QWORD *)(v0 + 536);
    v8 = *(_QWORD *)(v0 + 528);
    v9 = *(_QWORD *)(v0 + 520);
    v10 = *(_QWORD *)(v0 + 512);
    v11 = *(_QWORD *)(v0 + 288);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
    sub_23F619E74();
    sub_23F3668A0();
    v152 = sub_23F619E68();
    sub_23F383F80(v7, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    sub_23F3B1450();
    sub_23F382EF8(v11 + 64, v1, &qword_256E719B8);
    if (!*(_QWORD *)(v0 + 240))
    {
      sub_23F39E4B8(v1, &qword_256E719B8);
      sub_23F6190DC();
      v136 = sub_23F619E8C();
      v137 = sub_23F61C628();
      if (os_log_type_enabled(v136, v137))
      {
        *(_WORD *)sub_23F366668() = 0;
        sub_23F3E2784(&dword_23F35A000, v136, v137, "CandidateSimilarity client initiation failed");
        sub_23F366530();
      }
      v138 = *(_QWORD *)(v0 + 304);

      sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v138 + 8));
      sub_23F366414();
      swift_allocError();
      *v139 = 0xD000000000000024;
      v139[1] = 0x800000023F634F90;
      swift_willThrow();
LABEL_76:
      sub_23F3E1C20();
      sub_23F3667A8();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_23F3E26F8();
      __asm { BR              X0 }
    }
    v12 = v0 + 16;
    v149 = v0 + 56;
    v161 = v0 + 96;
    v13 = *(_QWORD *)(v0 + 464);
    v163 = (uint64_t *)(v0 + 136);
    v170 = *(_QWORD *)(v0 + 424);
    v178 = *(_QWORD *)(v0 + 416);
    v171 = *(_QWORD *)(v0 + 384);
    v176 = *(_QWORD *)(v0 + 304);
    v14 = *(_QWORD *)(v0 + 280);
    v150 = (_QWORD *)(v0 + 176);
    sub_23F362678((__int128 *)v1, v0 + 176);
    sub_23F382BA0();
    v151 = MEMORY[0x24BEE4AF8];
    v181 = sub_23F61BFEC();
    v15 = *(_QWORD *)(v14 + 16);
    sub_23F617BA0();
    v18 = 0;
    v173 = v13;
    for (i = v15; ; v15 = i)
    {
      if (v18 == v15)
      {
        sub_23F3838D8(*(_QWORD *)(v0 + 496), v16, v17, *(_QWORD *)(v0 + 464));
        v18 = v15;
        goto LABEL_10;
      }
      if (v18 >= v15)
      {
        __break(1u);
        v141 = *(_QWORD *)(v0 + 448);
        v142 = *(_QWORD *)(v0 + 456);
        v143 = *(_QWORD *)(v0 + 400);
        v144 = *(_QWORD *)(v0 + 408);
        v145 = *(_QWORD *)(v0 + 376);
        sub_23F3E2654(v175, v164, BYTE4(v153));
        v146 = *(void (**)(uint64_t, uint64_t))(v171 + 8);
        v146(v143, v145);
        sub_23F3E2618(v141);
        swift_unknownObjectRelease();
        v146(v144, v145);
        sub_23F3E2618(v142);
        sub_23F3837B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v150);
        goto LABEL_76;
      }
      v19 = *(unint64_t **)(v0 + 496);
      v1 = *(_QWORD *)(v0 + 464);
      v20 = *(_QWORD *)(v0 + 472) + *(int *)(v13 + 48);
      sub_23F3E258C(*(_QWORD *)(v0 + 280)+ ((*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80))+ *(_QWORD *)(v170 + 72) * v18, v20);
      v21 = (uint64_t)v19 + *(int *)(v13 + 48);
      *v19 = v18;
      sub_23F3664EC(v20, v21);
      sub_23F36196C((uint64_t)v19, 0, 1, v1);
      ++v18;
LABEL_10:
      v22 = *(_QWORD *)(v0 + 504);
      sub_23F3E279C(*(_QWORD *)(v0 + 496));
      if (sub_23F36195C(v22, 1, v1) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v150);
        sub_23F3E1C20();
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_23F3E26F8();
        __asm { BR              X1 }
      }
      v23 = *(uint64_t **)(v0 + 504);
      v24 = *v23;
      sub_23F3E2730((uint64_t)v23);
      v25 = sub_23F3E2024();
      if ((_BYTE)v27 == 0xFF)
        goto LABEL_23;
      v28 = v26;
      v29 = v27;
      v30 = (uint64_t *)(*(_QWORD *)(v0 + 456) + *(int *)(v178 + 20));
      v31 = v30[4];
      v32 = *((_OWORD *)v30 + 1);
      v167 = v30;
      *(_OWORD *)v12 = *(_OWORD *)v30;
      *(_OWORD *)(v12 + 16) = v32;
      *(_QWORD *)(v12 + 32) = v31;
      v175 = v25;
      if (*(_QWORD *)(v181 + 16))
      {
        v179 = v14;
        v33 = v18;
        v34 = v13;
        v35 = v26;
        sub_23F382BDC(v12);
        v36 = sub_23F3754E8((uint64_t *)v12);
        if ((v37 & 1) != 0)
        {
          (*(void (**)(_QWORD, unint64_t, _QWORD))(v171 + 16))(*(_QWORD *)(v0 + 360), *(_QWORD *)(v181 + 56) + *(_QWORD *)(v171 + 72) * v36, *(_QWORD *)(v0 + 376));
          v38 = 0;
        }
        else
        {
          v38 = 1;
        }
        sub_23F3E26A0(*(_QWORD *)(v0 + 360), v38);
        sub_23F382D8C(v12);
        sub_23F3E26AC();
        v28 = v35;
        v13 = v34;
        v18 = v33;
        if (!v39)
        {
          v40 = *(_QWORD *)(v0 + 368);
          (*(void (**)(uint64_t, _QWORD, _QWORD))(v171 + 32))(v40, *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 376));
          sub_23F3E26A0(v40, 0);
          v14 = v179;
          goto LABEL_20;
        }
      }
      else
      {
        sub_23F3838D8(*(_QWORD *)(v0 + 360), v26, v27, *(_QWORD *)(v0 + 376));
      }
      v14 = 0;
      sub_23F3E1F0C(v29 & 1, *(_QWORD *)(v0 + 368));
      sub_23F39E4B8(*(_QWORD *)(v0 + 360), &qword_256E70060);
LABEL_20:
      v41 = *(_QWORD *)(v0 + 368);
      v42 = *(_QWORD *)(v0 + 376);
      sub_23F3E26AC();
      if (!v39)
        break;
      sub_23F3E2654(v175, v28, v29);
      sub_23F39E4B8(v41, &qword_256E70060);
LABEL_23:
      v1 = *(_QWORD *)(v0 + 432);
      sub_23F6190DC();
      sub_23F3E2790();
      sub_23F619E8C();
      v43 = sub_23F3B1BD4();
      v44 = os_log_type_enabled((os_log_t)v1, v43);
      v45 = *(_QWORD *)(v0 + 456);
      v46 = *(_QWORD *)(v0 + 432);
      if (v44)
      {
        v47 = sub_23F366668();
        v185[0] = sub_23F366668();
        *(_DWORD *)v47 = 136315138;
        v48 = (__int128 *)(v46 + *(int *)(v178 + 20));
        v49 = *((_QWORD *)v48 + 2);
        v182 = *v48;
        v183 = v49;
        v184 = *(__int128 *)((char *)v48 + 24);
        JointResolution.Candidate.description.getter();
        sub_23F37AE00(v50, v51, v185);
        *(_QWORD *)(v47 + 4) = v52;
        swift_bridgeObjectRelease();
        sub_23F3E27D4();
        sub_23F38485C(&dword_23F35A000, v1, v43, "entityIdentifier can't be fetched for candidate: %s", (uint8_t *)v47);
        swift_arrayDestroy();
        sub_23F366530();
      }

      sub_23F3E27D4();
      v53 = sub_23F3E27C0();
      v54(v53);
LABEL_26:
      sub_23F3E2618(v45);
      v12 = v0 + 16;
    }
    HIDWORD(v153) = v29;
    v177 = v18;
    v55 = *(_QWORD *)(v0 + 408);
    v56 = *(_QWORD *)(v0 + 352);
    v162 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v171 + 32);
    v162(v55, v41, v42);
    v57 = v167[4];
    v58 = *((_OWORD *)v167 + 1);
    *(_OWORD *)v149 = *(_OWORD *)v167;
    *(_OWORD *)(v149 + 16) = v58;
    *(_QWORD *)(v149 + 32) = v57;
    v154 = *(void (**)(uint64_t, uint64_t, uint64_t))(v171 + 16);
    v154(v56, v55, v42);
    sub_23F3E26A0(v56, 0);
    sub_23F382BDC(v149);
    sub_23F372550();
    result = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    v148 = sub_23F3E1E94(result, *(_QWORD *)(v0 + 280));
    v155 = v60;
    v156 = v61;
    v63 = v62 >> 1;
    v1 = v61;
    v164 = v28;
    v165 = v62 >> 1;
    v166 = 0;
LABEL_29:
    v18 = v177;
    while (1)
    {
      if (v1 == v63)
      {
        sub_23F3838D8(*(_QWORD *)(v0 + 480), v60, v61, *(_QWORD *)(v0 + 464));
        v174 = v63;
        goto LABEL_39;
      }
      if (v1 < v156 || v1 >= v63)
        break;
      v65 = *(_QWORD *)(v0 + 472) + *(int *)(v13 + 48);
      sub_23F3E258C(v155 + *(_QWORD *)(v170 + 72) * v1, v65);
      if (__OFADD__(v166, 1))
        goto LABEL_79;
      v66 = v1;
      v1 = *(_QWORD *)(v0 + 480);
      v67 = *(_QWORD *)(v0 + 464);
      v174 = v66 + 1;
      v68 = v1 + *(int *)(v13 + 48);
      *(_QWORD *)v1 = v166;
      sub_23F3664EC(v65, v68);
      sub_23F36196C(v1, 0, 1, v67);
      ++v166;
LABEL_39:
      v69 = *(_QWORD *)(v0 + 488);
      sub_23F3E279C(*(_QWORD *)(v0 + 480));
      if (sub_23F36195C(v69, 1, v1) == 1)
      {
        v45 = *(_QWORD *)(v0 + 456);
        v1 = *(_QWORD *)(v0 + 408);
        sub_23F3E2654(v175, v28, BYTE4(v153));
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t))(v171 + 8))(v1);
        goto LABEL_26;
      }
      v180 = v14;
      sub_23F3E2730(*(_QWORD *)(v0 + 488));
      sub_23F3E2024();
      if ((_BYTE)v71 != 0xFF)
      {
        v72 = v71;
        v73 = (uint64_t *)(*(_QWORD *)(v0 + 448) + *(int *)(v178 + 20));
        v74 = v73[4];
        v75 = *((_OWORD *)v73 + 1);
        *(_OWORD *)v161 = *(_OWORD *)v73;
        *(_OWORD *)(v161 + 16) = v75;
        *(_QWORD *)(v161 + 32) = v74;
        if (*(_QWORD *)(v181 + 16))
        {
          sub_23F382BDC(v161);
          v76 = sub_23F3E2754((uint64_t *)v161);
          if ((v77 & 1) != 0)
          {
            v154(*(_QWORD *)(v0 + 336), *(_QWORD *)(v181 + 56) + *(_QWORD *)(v171 + 72) * v76, *(_QWORD *)(v0 + 376));
            v78 = 0;
          }
          else
          {
            v78 = 1;
          }
          sub_23F3E26A0(*(_QWORD *)(v0 + 336), v78);
          sub_23F382D8C(v161);
          sub_23F3E26AC();
          if (!v39)
          {
            v85 = *(_QWORD *)(v0 + 344);
            sub_23F3E2740(v85, *(_QWORD *)(v0 + 336), v79, v80, v81, v82, v83, v84, v147, v148, v149, (uint64_t)v150, v151, v152, v153, (uint64_t)v154, v155, v156, v157,
              v158,
              v159,
              v160,
              v161,
              v162);
            sub_23F3E26A0(v85, 0);
            goto LABEL_49;
          }
        }
        else
        {
          sub_23F3838D8(*(_QWORD *)(v0 + 336), v70, v71, *(_QWORD *)(v0 + 376));
        }
        sub_23F3E1F0C(v72 & 1, *(_QWORD *)(v0 + 344));
        v180 = 0;
        sub_23F39E4B8(*(_QWORD *)(v0 + 336), &qword_256E70060);
LABEL_49:
        v86 = *(_QWORD *)(v0 + 376);
        v87 = *(_QWORD *)(v0 + 344);
        sub_23F3E26AC();
        if (v39)
        {
          sub_23F3E26CC();
          sub_23F39E4B8(v87, &qword_256E70060);
          v28 = v164;
          goto LABEL_52;
        }
        v103 = *(_QWORD *)(v0 + 392);
        v102 = *(_QWORD *)(v0 + 400);
        sub_23F3E2740(v102, v87, v88, v89, v90, v91, v92, v93, v147, v148, v149, (uint64_t)v150, v151, v152, v153, (uint64_t)v154, v155, v156, v157,
          v158,
          v159,
          v160,
          v161,
          v162);
        v104 = v73[4];
        v105 = *((_OWORD *)v73 + 1);
        v1 = v0 + 136;
        *(_OWORD *)v163 = *(_OWORD *)v73;
        *(_OWORD *)(v0 + 152) = v105;
        *(_QWORD *)(v0 + 168) = v104;
        v154(v103, v102, v86);
        sub_23F382BDC((uint64_t)v163);
        swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v182 = v181;
        v106 = sub_23F3E2754(v163);
        if (__OFADD__(*(_QWORD *)(v181 + 16), (v107 & 1) == 0))
          goto LABEL_80;
        v1 = v106;
        v108 = v107;
        sub_23F35D2E8(&qword_256E70068);
        v109 = (_QWORD *)v182;
        v18 = v177;
        if ((sub_23F61CA18() & 1) != 0)
        {
          v110 = sub_23F3E2754(v163);
          if ((v108 & 1) != (v111 & 1))
          {
            sub_23F3E26F8();
            return sub_23F61CC94();
          }
          v1 = v110;
        }
        v112 = *(_QWORD *)(v0 + 392);
        v113 = *(_QWORD *)(v0 + 376);
        if ((v108 & 1) != 0)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v171 + 40))(*(_QWORD *)(v182 + 56) + *(_QWORD *)(v171 + 72) * v1, v112, v113);
        }
        else
        {
          *(_QWORD *)(v182 + 8 * ((unint64_t)v1 >> 6) + 64) |= 1 << v1;
          v114 = v109[6] + 40 * v1;
          v115 = *(_OWORD *)v163;
          v116 = *(_OWORD *)(v0 + 152);
          *(_QWORD *)(v114 + 32) = *(_QWORD *)(v0 + 168);
          *(_OWORD *)v114 = v115;
          *(_OWORD *)(v114 + 16) = v116;
          v162(v109[7] + *(_QWORD *)(v171 + 72) * v1, v112, v113);
          v117 = v109[2];
          v118 = __OFADD__(v117, 1);
          v119 = v117 + 1;
          if (v118)
            goto LABEL_81;
          v109[2] = v119;
          sub_23F382BDC((uint64_t)v163);
        }
        v181 = (uint64_t)v109;
        swift_bridgeObjectRelease();
        sub_23F382D8C((uint64_t)v163);
        if ((HIDWORD(v153) & v72 & 1) != 0)
        {
          v120 = *(_QWORD *)(v0 + 448);
          sub_23F3E26CC();
          sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v171 + 8));
          sub_23F3E2618(v120);
          v14 = v180;
          v13 = v173;
          v28 = v164;
          goto LABEL_65;
        }
        sub_23F3E26CC();
        sub_23F35EA9C(v150, *(_QWORD *)(v0 + 200));
        v14 = 0;
        sub_23F61892C();
        v122 = v121;
        v123 = v167[1];
        v169 = *v167;
        v124 = v167[3];
        v125 = v167[4];
        v126 = v73[1];
        v159 = *v73;
        v160 = v167[2];
        v127 = v73[3];
        v158 = v73[2];
        v128 = v73[4];
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F617BA0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F377040();
          v151 = v133;
        }
        v129 = *(_QWORD *)(v151 + 16);
        if (v129 >= *(_QWORD *)(v151 + 24) >> 1)
        {
          sub_23F377040();
          v151 = v134;
        }
        v130 = *(_QWORD *)(v0 + 400);
        v131 = *(_QWORD *)(v0 + 376);
        *(_QWORD *)(v151 + 16) = v129 + 1;
        v132 = (_QWORD *)(v151 + 88 * v129);
        v132[4] = v169;
        v132[5] = v123;
        v132[6] = v160;
        v132[7] = v124;
        v132[8] = v125;
        v132[9] = v159;
        v132[10] = v126;
        v132[11] = v158;
        v132[12] = v127;
        v132[13] = v128;
        v132[14] = v122;
        (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v130, v131);
        sub_23F3E27D4();
        v13 = v173;
        v1 = v174;
        v28 = v164;
        v63 = v165;
        goto LABEL_29;
      }
LABEL_52:
      sub_23F6190DC();
      sub_23F3E2790();
      v94 = sub_23F619E8C();
      v95 = sub_23F61C61C();
      v96 = os_log_type_enabled(v94, v95);
      v97 = *(_QWORD *)(v0 + 440);
      v168 = *(_QWORD *)(v0 + 448);
      v98 = *(_QWORD *)(v0 + 328);
      v99 = *(_QWORD *)(v0 + 296);
      if (v96)
      {
        v100 = sub_23F366668();
        v185[0] = sub_23F366668();
        *(_DWORD *)v100 = 136315138;
        *(_QWORD *)&v182 = 0;
        *((_QWORD *)&v182 + 1) = 0xE000000000000000;
        sub_23F61C8E0();
        swift_bridgeObjectRelease();
        strcpy((char *)&v182, "Candidate(id: ");
        HIBYTE(v182) = -18;
        sub_23F617BA0();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F617BA0();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F3664B0();
        sub_23F617BA0();
        sub_23F61BFC8();
        sub_23F61C280();
        sub_23F3837B0();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F37AE00(v182, *((uint64_t *)&v182 + 1), v185);
        *(_QWORD *)(v100 + 4) = v101;
        swift_bridgeObjectRelease();
        sub_23F3E2618(v97);
        sub_23F38485C(&dword_23F35A000, v94, v95, "entityIdentifier can't be fetched for candidate: %s", (uint8_t *)v100);
        sub_23F3B17D4();
        sub_23F366530();
      }

      sub_23F3E2618(v97);
      (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v98, v99);
      sub_23F3E2618(v168);
      v14 = v180;
      v13 = v173;
      v18 = v177;
LABEL_65:
      v63 = v165;
      v1 = v174;
    }
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    swift_once();
  }
  __break(1u);
  return result;
}

void sub_23F3E1C20()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  char v14;
  char v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_signpost_id_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;

  sub_23F362ABC();
  v23 = v1;
  v2 = sub_23F619E50();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3E2718();
  v4 = sub_23F3E27A8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F362AAC();
  v8 = v6 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - v10;
  if (qword_256E6F080 != -1)
    swift_once();
  v12 = sub_23F3E27B0();
  sub_23F361498(v12, (uint64_t)qword_256E80338);
  v13 = sub_23F3E275C();
  sub_23F619E5C();
  HIDWORD(v22) = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v0, v2) == *MEMORY[0x24BEE7810])
    {
      v14 = 0;
      v15 = 0;
      v16 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
      v16 = "%s";
      v15 = 2;
      v14 = 1;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v8, v11, v4);
    v17 = sub_23F366668();
    v24 = sub_23F366668();
    *(_BYTE *)v17 = v15;
    *(_BYTE *)(v17 + 1) = v14;
    *(_WORD *)(v17 + 2) = 2080;
    v18 = sub_23F61C8F8();
    sub_23F37AE00(v18, v19, &v24);
    sub_23F3E2770(v20);
    sub_23F61C790();
    sub_23F3837B0();
    v21 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v13, BYTE4(v22), v21, v23, v16, (uint8_t *)v17, 0xCu);
    sub_23F3B17D4();
    sub_23F366530();
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  sub_23F362948();
}

uint64_t sub_23F3E1E94(uint64_t result, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    _s14TypedCandidateVMa();
    return sub_23F617BA0();
  }
  __break(1u);
  return result;
}

uint64_t sub_23F3E1F0C@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v6[5];
  _BYTE v7[24];
  uint64_t v8;

  if ((a1 & 1) != 0)
  {
    swift_beginAccess();
    sub_23F382EF8(v2 + 24, (uint64_t)v7, &qword_256E719A0);
    if (v8)
    {
      sub_23F361418((uint64_t)v7, (uint64_t)v6);
      sub_23F39E4B8((uint64_t)v7, &qword_256E719A0);
      sub_23F35EA9C(v6, v6[3]);
      sub_23F3848C0();
      sub_23F618914();
      return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v6);
    }
    else
    {
      sub_23F39E4B8((uint64_t)v7, &qword_256E719A0);
      v5 = sub_23F6188FC();
      return sub_23F36196C(a2, 1, 1, v5);
    }
  }
  else
  {
    swift_retain();
    sub_23F3848C0();
    sub_23F3E2330();
    return swift_release();
  }
}

uint64_t sub_23F3E2024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F362ABC();
  v32 = v0;
  v33 = v1;
  v3 = v2;
  v31 = sub_23F61B9EC();
  v4 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  sub_23F362AAC();
  v7 = v5 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - v9;
  v11 = sub_23F61B7AC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F38F964();
  v15 = v14 - v13;
  v16 = sub_23F61B92C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  sub_23F38F964();
  v20 = v19 - v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v19 - v18, v3, v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v17 + 88))(v20, v16) != *MEMORY[0x24BEB99E0])
  {
    sub_23F383F80(v20, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    return 0;
  }
  sub_23F383F80(v20, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 96));
  v21 = swift_projectBox();
  v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, v21, v11);
  MEMORY[0x24266ECB0](v22);
  v23 = v31;
  v24 = v12;
  if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v10, v31) != *MEMORY[0x24BEB9D18])
  {
    sub_23F3E26DC(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
LABEL_9:
    sub_23F3E26E8();
    sub_23F384AF8();
    return 0;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v7, v10, v23);
  (*(void (**)(uint64_t, uint64_t))(v4 + 96))(v7, v23);
  v25 = sub_23F61B9BC();
  v26 = swift_projectBox();
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 88))(v26, v25);
  if (v27 != *MEMORY[0x24BEB9CB8] && v27 != *MEMORY[0x24BEB9C78])
  {
    sub_23F3E26DC(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    sub_23F3667A8();
    goto LABEL_9;
  }
  v28 = sub_23F61B6EC();
  sub_23F3E26DC(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  sub_23F3667A8();
  sub_23F3E26E8();
  sub_23F384AF8();
  return v28;
}

uint64_t sub_23F3E22B4()
{
  uint64_t v0;

  swift_release();
  sub_23F39E4B8(v0 + 24, &qword_256E719A0);
  sub_23F39E4B8(v0 + 64, &qword_256E719B8);
  return v0;
}

uint64_t sub_23F3E22F0()
{
  sub_23F3E22B4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CandidateSimilarityClient()
{
  return objc_opt_self();
}

void sub_23F3E2330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F362ABC();
  v3 = v2;
  v4 = sub_23F3B1728();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3E2718();
  v6 = *(void **)(v0 + 16);
  if (v6
    && (sub_23F3848C0(),
        v7 = (void *)sub_23F61C0E8(),
        v8 = objc_msgSend(v6, sel_personForIdentifier_, v7),
        v7,
        v8))
  {
    v9 = objc_msgSend(v8, sel_entityIdentifier);
    sub_23F618908();

    v10 = sub_23F3E27B8();
    sub_23F36196C(v3, 0, 1, v10);
  }
  else
  {
    sub_23F6190DC();
    swift_bridgeObjectRetain_n();
    v11 = sub_23F619E8C();
    v12 = sub_23F61C628();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)sub_23F366668();
      sub_23F366668();
      *(_DWORD *)v13 = 136315138;
      sub_23F617BA0();
      v14 = sub_23F3848C0();
      sub_23F37AE00(v14, v15, v16);
      sub_23F3E2770(v17);
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      sub_23F38485C(&dword_23F35A000, v11, v12, "person is nil for identifier %s", v13);
      sub_23F3B17D4();
      sub_23F366530();
    }

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
    v18 = sub_23F3E27B8();
    sub_23F3838D8(v3, v19, v20, v18);
    sub_23F362948();
  }
}

uint64_t sub_23F3E2548()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersonIdentifierView()
{
  return objc_opt_self();
}

uint64_t sub_23F3E258C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s14TypedCandidateVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3E25D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E719B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3E2618(uint64_t a1)
{
  uint64_t v2;

  v2 = _s14TypedCandidateVMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F3E2654(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 != 255)
    return sub_23F3E266C();
  return result;
}

uint64_t sub_23F3E266C()
{
  return swift_bridgeObjectRelease();
}

void sub_23F3E2674(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F384504(a1, a2, a3);
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_23F362928();
}

uint64_t sub_23F3E26A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F36196C(a1, a2, 1, v2);
}

uint64_t sub_23F3E26AC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36195C(v0, 1, v1);
}

uint64_t sub_23F3E26CC()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23F3E2654(v1, v2, v0);
}

uint64_t sub_23F3E26DC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F3E26E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F3E2730@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_23F3664EC(a1 + *(int *)(v2 + 48), v1);
}

uint64_t sub_23F3E2740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t (*a24)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v24;

  return a24(a1, a2, v24);
}

id sub_23F3E274C()
{
  void *v0;

  return v0;
}

unint64_t sub_23F3E2754(uint64_t *a1)
{
  return sub_23F3754E8(a1);
}

uint64_t sub_23F3E275C()
{
  return sub_23F619E38();
}

uint64_t sub_23F3E2764()
{
  return swift_allocObject();
}

uint64_t sub_23F3E2770(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

void sub_23F3E2784(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t sub_23F3E2790()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3E258C(v1, v0);
}

uint64_t sub_23F3E279C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F3E25D0(a1, v1);
}

uint64_t sub_23F3E27A8()
{
  return sub_23F619E20();
}

uint64_t sub_23F3E27B0()
{
  return sub_23F619E44();
}

uint64_t sub_23F3E27B8()
{
  return sub_23F6188FC();
}

uint64_t sub_23F3E27C0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3E27D4()
{
  uint64_t v0;

  return sub_23F3E2618(v0);
}

uint64_t CarBluetoothRequirementEvaluator.evaluate(tool:transcript:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  sub_23F35D2E8(&qword_256E719D0);
  v3[6] = sub_23F366578();
  v4 = sub_23F618E54();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = sub_23F366578();
  return swift_task_switch();
}

uint64_t sub_23F3E2850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 16) = sub_23F61B14C();
  sub_23F35D2E8(&qword_256E70F10);
  sub_23F3E29D8();
  sub_23F61ACF0();
  swift_bridgeObjectRelease();
  if (sub_23F36195C(v2, 1, v1) == 1)
  {
    sub_23F3E2A1C(*(_QWORD *)(v0 + 48));
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 32))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
    if ((sub_23F618D94() & 1) != 0)
    {
      sub_23F3E322C();
      v4 = *(_QWORD **)(v0 + 24);
      if ((v5 & 1) != 0)
      {
        sub_23F3E3634((uint64_t)&unk_250FD07B0);
        v7 = v6;
        sub_23F3E2B1C();
        *v4 = v7;
      }
      else
      {
        sub_23F3E2B1C();
        v8 = sub_23F6181DC();
        sub_23F3C3D60(v8);
        v9 = sub_23F61814C();
        sub_23F3C3D60(v9);
      }
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
    }
  }
  sub_23F362C90();
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_23F3E29D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E70F18;
  if (!qword_256E70F18)
  {
    v1 = sub_23F35EB74(&qword_256E70F10);
    result = MEMORY[0x242670A44](MEMORY[0x24BE57088], v1);
    atomic_store(result, (unint64_t *)&qword_256E70F18);
  }
  return result;
}

uint64_t sub_23F3E2A1C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E719D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F3E2A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F3E2AC4;
  return CarBluetoothRequirementEvaluator.evaluate(tool:transcript:)(a1, a2, a3);
}

uint64_t sub_23F3E2AC4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

ValueMetadata *type metadata accessor for CarBluetoothRequirementEvaluator()
{
  return &type metadata for CarBluetoothRequirementEvaluator;
}

uint64_t sub_23F3E2B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t CarPlayRequirementEvaluator.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_23F3E3708((uint64_t)&unk_250FD0698);
  *a1 = v2;
  a1[1] = v2;
  return sub_23F617BA0();
}

void sub_23F3E2B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v18;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23F61CD30();
    sub_23F61C22C();
    v6 = sub_23F362C10();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    sub_23F3E441C();
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_23F3C8510() & 1) == 0)
      {
        v13 = ~v7;
        v14 = (v8 + 1) & v13;
        sub_23F3E441C();
        if ((v15 & 1) != 0)
        {
          do
          {
            v16 = (_QWORD *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2)
              break;
            if ((sub_23F3C8510() & 1) != 0)
              break;
            v14 = (v14 + 1) & v13;
            sub_23F3E441C();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void sub_23F3E2C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  sub_23F362ABC();
  v1 = v0;
  v2 = sub_23F3E457C();
  v3 = sub_23F3E4364(v2);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3E44A8();
  if (v4)
  {
    v5 = *(_QWORD *)(v1 + 40);
    sub_23F3E425C(&qword_256E6FDB0, (void (*)(uint64_t))MEMORY[0x24BEB9D20]);
    sub_23F3E4494();
    sub_23F3E43D0();
    if ((v6 & 1) != 0)
    {
      sub_23F3E4544();
      do
      {
        sub_23F3E4480();
        sub_23F3E425C(&qword_256E70168, (void (*)(uint64_t))MEMORY[0x24BEB9D20]);
        sub_23F3E43F8();
        sub_23F3E444C();
        if ((v5 & 1) != 0)
          break;
        sub_23F3E4464();
      }
      while ((v7 & 1) != 0);
    }
  }
  sub_23F362948();
}

void sub_23F3E2D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v4 = sub_23F384B44();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v31 = v6 - v5;
  v7 = sub_23F35D2E8(&qword_256E71A60);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v10 = v9 - v8;
  v11 = sub_23F35D2E8(&qword_256E70238);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v30 - v16;
  if (*(_QWORD *)(v1 + 16))
  {
    sub_23F61CD30();
    sub_23F3E4100();
    v18 = sub_23F61CD60();
    v19 = -1 << *(_BYTE *)(v1 + 32);
    v20 = v18 & ~v19;
    v32 = v1 + 56;
    if (((*(_QWORD *)(v1 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
    {
      v35 = ~v19;
      v36 = *(_QWORD *)(v12 + 72);
      v21 = v32;
      v30 = v7;
      while (1)
      {
        sub_23F3E4214(*(_QWORD *)(v1 + 48) + v36 * v20, (uint64_t)v17);
        v22 = v10 + *(int *)(v7 + 48);
        sub_23F3E4214((uint64_t)v17, v10);
        sub_23F3E4214(v3, v22);
        sub_23F3E4510(v10);
        if (v23)
          break;
        sub_23F3E4214(v10, (uint64_t)v15);
        sub_23F3E4510(v22);
        if (v23)
        {
          (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v4);
LABEL_12:
          sub_23F39E4B8(v10, &qword_256E71A60);
          sub_23F39E4B8((uint64_t)v17, &qword_256E70238);
          goto LABEL_14;
        }
        v24 = v34;
        v25 = v31;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v31, v22, v4);
        sub_23F3E425C((unint64_t *)&qword_256E71170, (void (*)(uint64_t))MEMORY[0x24BEB8FE0]);
        v33 = sub_23F3E43F8();
        v26 = v3;
        v27 = v1;
        v28 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
        v21 = v32;
        v29 = v25;
        v7 = v30;
        v28(v29, v4);
        v28((uint64_t)v15, v4);
        v1 = v27;
        v3 = v26;
        sub_23F39E4B8(v10, &qword_256E70238);
        sub_23F39E4B8((uint64_t)v17, &qword_256E70238);
        if ((v33 & 1) != 0)
          goto LABEL_15;
LABEL_14:
        v20 = (v20 + 1) & v35;
        if (((*(_QWORD *)(v21 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
          goto LABEL_15;
      }
      sub_23F3E4510(v22);
      if (v23)
      {
        sub_23F39E4B8(v10, &qword_256E70238);
        sub_23F39E4B8((uint64_t)v17, &qword_256E70238);
        goto LABEL_15;
      }
      goto LABEL_12;
    }
  }
LABEL_15:
  sub_23F362948();
}

void sub_23F3E3000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  sub_23F362ABC();
  v1 = v0;
  v2 = sub_23F61BADC();
  v3 = sub_23F3E4364(v2);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3E44A8();
  if (v4)
  {
    v5 = *(_QWORD *)(v1 + 40);
    sub_23F3E425C(&qword_256E719F0, (void (*)(uint64_t))MEMORY[0x24BEBA120]);
    sub_23F3E4494();
    sub_23F3E43D0();
    if ((v6 & 1) != 0)
    {
      sub_23F3E4544();
      do
      {
        sub_23F3E4480();
        sub_23F3E425C(&qword_256E719F8, (void (*)(uint64_t))MEMORY[0x24BEBA120]);
        sub_23F3E43F8();
        sub_23F3E444C();
        if ((v5 & 1) != 0)
          break;
        sub_23F3E4464();
      }
      while ((v7 & 1) != 0);
    }
  }
  sub_23F362948();
}

uint64_t sub_23F3E30C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  char v18;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_23F61C10C();
    sub_23F61CD30();
    sub_23F61C22C();
    v3 = sub_23F362C10();
    sub_23F3837B0();
    v4 = -1 << *(_BYTE *)(a2 + 32);
    v5 = v3 & ~v4;
    sub_23F3E4408();
    if ((v6 & 1) != 0)
    {
      v7 = sub_23F3E4538();
      if (v7 == sub_23F3E452C() && v3 == v8)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      v10 = sub_23F3C8510();
      sub_23F362984();
      swift_bridgeObjectRelease();
      if ((v10 & 1) != 0)
      {
LABEL_18:
        v17 = 1;
        return v17 & 1;
      }
      v11 = ~v4;
      v12 = (v5 + 1) & v11;
      sub_23F3E4408();
      if ((v13 & 1) != 0)
      {
        while (1)
        {
          v14 = sub_23F3E4538();
          if (v14 == sub_23F3E452C() && v3 == v15)
            break;
          v17 = sub_23F3C8510();
          sub_23F362984();
          sub_23F3837B0();
          if ((v17 & 1) == 0)
          {
            v12 = (v12 + 1) & v11;
            sub_23F3E4408();
            if ((v18 & 1) != 0)
              continue;
          }
          return v17 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  v17 = 0;
  return v17 & 1;
}

void sub_23F3E322C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  Swift::Bool v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F362ABC();
  v2 = sub_23F61B4F4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3B17A4();
  v4 = sub_23F384B44();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = ToolDefinition.isAppLaunchRequired(willRunOpensIntent:)(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v0, v4);
  if (v8)
  {
    sub_23F3E44E0();
  }
  else
  {
    v9 = sub_23F61B554();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x24BEB8EB0], v2);
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v16 = v9;
      v17 = v3;
      v12 = v9 + v11;
      v13 = *(_QWORD *)(v3 + 72);
      sub_23F3E425C(&qword_256E708D8, (void (*)(uint64_t))MEMORY[0x24BEB8ED8]);
      v14 = v10 - 1;
      do
      {
        v15 = v14;
        if ((sub_23F61C0A0() & 1) != 0)
          break;
        v14 = v15 - 1;
        v12 += v13;
      }
      while (v15);
      v3 = v17;
    }
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    swift_bridgeObjectRelease();
    sub_23F3E44E0();
  }
  sub_23F362948();
}

uint64_t CarPlayRequirementEvaluator.evaluate(tool:transcript:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a2;
  v4[5] = a3;
  v4[3] = a1;
  sub_23F35D2E8(&qword_256E719D0);
  v4[6] = sub_23F366578();
  v5 = sub_23F618E54();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v6 = sub_23F366578();
  v7 = *(_QWORD *)(v3 + 8);
  v4[9] = v6;
  v4[10] = v7;
  return swift_task_switch();
}

uint64_t sub_23F3E3418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 16) = sub_23F61B14C();
  sub_23F35D2E8(&qword_256E70F10);
  sub_23F3E29D8();
  sub_23F61ACF0();
  sub_23F3837B0();
  if (sub_23F36195C(v2, 1, v1) == 1)
  {
    sub_23F39E4B8(*(_QWORD *)(v0 + 48), &qword_256E719D0);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 32))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
    if ((sub_23F618DDC() & 1) != 0)
    {
      v3 = *(_QWORD *)(v0 + 80);
      sub_23F3E322C();
      v5 = v4;
      v6 = sub_23F61B5A8();
      sub_23F3E2B58(v6, v7, v3);
      v9 = v8;
      sub_23F362984();
      if ((v5 & 1) != 0)
      {
        v10 = *(_QWORD **)(v0 + 24);
        if ((v9 & 1) == 0)
        {
          sub_23F3E3634((uint64_t)&unk_250FD0788);
          v15 = v14;
          sub_23F383914();
          *v10 = v15;
          sub_23F362C90();
          sub_23F3E4564();
          goto LABEL_9;
        }
        sub_23F383914();
      }
      else
      {
        sub_23F383914();
        if ((v9 & 1) == 0)
        {
          v12 = sub_23F6181DC();
          sub_23F3C3D60(v12);
          v13 = sub_23F61814C();
          sub_23F3C3D60(v13);
          sub_23F362C90();
          sub_23F3E4564();
          goto LABEL_9;
        }
      }
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
    }
  }
  sub_23F362C90();
  sub_23F3E4564();
LABEL_9:
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F3E35CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F3E2AC4;
  return CarPlayRequirementEvaluator.evaluate(tool:transcript:)(a1, a2, a3);
}

void sub_23F3E3634(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  if (!*(_QWORD *)(a1 + 16)
    || (sub_23F35D2E8(&qword_256E71A40), v2 = sub_23F3E42BC(), v3 = v2, (v4 = *(_QWORD *)(a1 + 16)) == 0))
  {
LABEL_8:
    sub_23F362D18();
    return;
  }
  v5 = v2 + 56;
  while (1)
  {
    sub_23F3E4570();
    sub_23F61CD3C();
    v6 = sub_23F362C10() & ~(-1 << *(_BYTE *)(v3 + 32));
    v7 = v6 >> 6;
    v8 = *(_QWORD *)(v5 + 8 * (v6 >> 6));
    v9 = 1 << v6;
    if ((v9 & v8) == 0)
      break;
LABEL_7:
    if (!--v4)
      goto LABEL_8;
  }
  *(_QWORD *)(v5 + 8 * v7) = v9 | v8;
  sub_23F3E4558();
  if (!v11)
  {
    *(_QWORD *)(v3 + 16) = v10;
    goto LABEL_7;
  }
  __break(1u);
}

void sub_23F3E3708(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  if (!*(_QWORD *)(a1 + 16)
    || (sub_23F35D2E8(&qword_256E71A50), v2 = sub_23F3E42BC(), v3 = v2, (v24 = *(_QWORD *)(a1 + 16)) == 0))
  {
LABEL_23:
    sub_23F362D18();
    return;
  }
  v4 = 0;
  v5 = v2 + 56;
  while (v4 < *(_QWORD *)(a1 + 16))
  {
    v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    v8 = *v6;
    v7 = v6[1];
    sub_23F61CD30();
    sub_23F617BA0();
    sub_23F61C22C();
    v9 = sub_23F61CD60();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = v9 & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = *(_QWORD *)(v3 + 48);
      v16 = (_QWORD *)(v15 + 16 * v11);
      v17 = *v16 == v8 && v16[1] == v7;
      if (v17 || (sub_23F3C8510() & 1) != 0)
      {
LABEL_11:
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      v18 = ~v10;
      while (1)
      {
        v11 = (v11 + 1) & v18;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
        v14 = 1 << v11;
        if ((v13 & (1 << v11)) == 0)
          break;
        v19 = (_QWORD *)(v15 + 16 * v11);
        v20 = *v19 == v8 && v19[1] == v7;
        if (v20 || (sub_23F3C8510() & 1) != 0)
          goto LABEL_11;
      }
    }
    *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
    v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    *v21 = v8;
    v21[1] = v7;
    sub_23F3E4558();
    if (v23)
      goto LABEL_25;
    *(_QWORD *)(v3 + 16) = v22;
LABEL_22:
    if (++v4 == v24)
      goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t destroy for CarPlayRequirementEvaluator()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s30IntelligenceFlowPlannerRuntime27CarPlayRequirementEvaluatorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F362928();
}

_QWORD *assignWithCopy for CarPlayRequirementEvaluator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CarPlayRequirementEvaluator(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for CarPlayRequirementEvaluator(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CarPlayRequirementEvaluator(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CarPlayRequirementEvaluator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CarPlayRequirementEvaluator()
{
  return &type metadata for CarPlayRequirementEvaluator;
}

void sub_23F3E3A44(uint64_t a1)
{
  sub_23F3E3E2C(a1, &qword_256E71A48, (void (*)(_BYTE *, uint64_t))sub_23F480ED4, (uint64_t (*)(uint64_t, uint64_t))sub_23F491114);
}

void sub_23F3E3A60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  if (!*(_QWORD *)(a1 + 16)
    || (sub_23F35D2E8(&qword_256E71A58), v2 = sub_23F3E42BC(), v3 = v2, (v4 = *(_QWORD *)(a1 + 16)) == 0))
  {
LABEL_14:
    sub_23F362D18();
    return;
  }
  v5 = 0;
  v6 = v2 + 56;
  while (v5 < *(_QWORD *)(a1 + 16))
  {
    v7 = *(unsigned __int8 *)(a1 + 32 + v5);
    sub_23F3E4570();
    sub_23F61CD3C();
    v8 = sub_23F362C10();
    v9 = -1 << *(_BYTE *)(v3 + 32);
    v10 = v8 & ~v9;
    v11 = v10 >> 6;
    v12 = *(_QWORD *)(v6 + 8 * (v10 >> 6));
    v13 = 1 << v10;
    v14 = *(_QWORD *)(v3 + 48);
    if (((1 << v10) & v12) != 0)
    {
      if (*(unsigned __int8 *)(v14 + v10) == v7)
        goto LABEL_13;
      v15 = ~v9;
      while (1)
      {
        v10 = (v10 + 1) & v15;
        v11 = v10 >> 6;
        v12 = *(_QWORD *)(v6 + 8 * (v10 >> 6));
        v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0)
          break;
        if (*(unsigned __int8 *)(v14 + v10) == v7)
          goto LABEL_13;
      }
    }
    *(_QWORD *)(v6 + 8 * v11) = v13 | v12;
    *(_BYTE *)(v14 + v10) = v7;
    sub_23F3E4558();
    if (v17)
      goto LABEL_16;
    *(_QWORD *)(v3 + 16) = v16;
LABEL_13:
    if (++v5 == v4)
      goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
}

void sub_23F3E3BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  sub_23F362ABC();
  v5 = sub_23F3E457C();
  v6 = sub_23F3E4364(v5);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36298C();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3E4430();
  if (v0 && (sub_23F35D2E8(&qword_256E71A00), sub_23F3E42BC(), sub_23F3E44D0(), v8))
  {
    sub_23F3E42F8();
    while (v4 < *(_QWORD *)(v3 + 16))
    {
      sub_23F3E4320();
      v9 = *(_QWORD *)(v1 + 40);
      sub_23F3E425C(&qword_256E6FDB0, (void (*)(uint64_t))MEMORY[0x24BEB9D20]);
      sub_23F3E43BC();
      sub_23F3E42CC();
      if (v12)
      {
LABEL_11:
        sub_23F3E4294(v10);
        v13 = *(_QWORD *)(v1 + 16);
        v14 = __OFADD__(v13, 1);
        v15 = v13 + 1;
        if (v14)
          goto LABEL_18;
        *(_QWORD *)(v1 + 16) = v15;
      }
      else
      {
        v3 = ~v11;
        while (1)
        {
          sub_23F3E43A8();
          sub_23F3E425C(&qword_256E70168, (void (*)(uint64_t))MEMORY[0x24BEB9D20]);
          sub_23F3E4378();
          sub_23F3E4390();
          if ((v9 & 1) != 0)
            break;
          sub_23F3E4340();
          if (v12)
          {
            sub_23F3E44C4();
            goto LABEL_11;
          }
        }
        sub_23F3E4444(v2);
        sub_23F3E44C4();
      }
      sub_23F3E4500();
      if (v12)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_16:
    sub_23F38458C();
    sub_23F362948();
  }
}

void sub_23F3E3CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  sub_23F362ABC();
  v5 = v4;
  v6 = sub_23F617144();
  v7 = sub_23F3E4364(v6);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36298C();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3E4430();
  if (v0 && (sub_23F35D2E8(&qword_256E71A28), sub_23F3E42BC(), sub_23F3E44D0(), v9))
  {
    sub_23F3E42F8();
    while (v3 < *(_QWORD *)(v5 + 16))
    {
      sub_23F3E4320();
      v10 = *(_QWORD *)(v1 + 40);
      sub_23F3E425C(&qword_256E71A30, (void (*)(uint64_t))MEMORY[0x24BDCF290]);
      sub_23F3E43BC();
      sub_23F3E42CC();
      if (v13)
      {
LABEL_11:
        sub_23F3E4294(v11);
        v14 = *(_QWORD *)(v1 + 16);
        v15 = __OFADD__(v14, 1);
        v16 = v14 + 1;
        if (v15)
          goto LABEL_18;
        *(_QWORD *)(v1 + 16) = v16;
      }
      else
      {
        v5 = ~v12;
        while (1)
        {
          sub_23F3E43A8();
          sub_23F3E425C(&qword_256E71A38, (void (*)(uint64_t))MEMORY[0x24BDCF290]);
          sub_23F3E4378();
          sub_23F3E4390();
          if ((v10 & 1) != 0)
            break;
          sub_23F3E4340();
          if (v13)
          {
            sub_23F3E44C4();
            goto LABEL_11;
          }
        }
        sub_23F3E4444(v2);
        sub_23F3E44C4();
      }
      sub_23F3E4500();
      if (v13)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_16:
    sub_23F38458C();
    sub_23F362948();
  }
}

void sub_23F3E3E10(uint64_t a1)
{
  sub_23F3E3E2C(a1, &qword_256E71A20, (void (*)(_BYTE *, uint64_t))sub_23F481120, (uint64_t (*)(uint64_t, uint64_t))sub_23F491138);
}

void sub_23F3E3E2C(uint64_t a1, uint64_t *a2, void (*a3)(_BYTE *, uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[72];

  v4 = a1;
  if (!*(_QWORD *)(a1 + 16) || (sub_23F35D2E8(a2), v6 = sub_23F3E42BC(), v7 = v6, (v26 = *(_QWORD *)(v4 + 16)) == 0))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return;
  }
  v8 = 0;
  v9 = v6 + 56;
  v24 = v4;
  v25 = v4 + 32;
  while (v8 < *(_QWORD *)(v4 + 16))
  {
    v10 = *(_QWORD *)(v25 + 8 * v8);
    sub_23F61CD30();
    sub_23F617BA0();
    a3(v28, v10);
    v11 = sub_23F61CD60();
    v12 = -1 << *(_BYTE *)(v7 + 32);
    v13 = v11 & ~v12;
    v14 = v13 >> 6;
    v15 = *(_QWORD *)(v9 + 8 * (v13 >> 6));
    v16 = 1 << v13;
    if (((1 << v13) & v15) != 0)
    {
      v17 = sub_23F3E44F0();
      v18 = a4(v17, v10);
      sub_23F362984();
      if ((v18 & 1) != 0)
      {
LABEL_10:
        swift_bridgeObjectRelease();
        v4 = v24;
        goto LABEL_14;
      }
      v19 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v19;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v9 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if ((v15 & (1 << v13)) == 0)
          break;
        v20 = sub_23F3E44F0();
        v21 = a4(v20, v10);
        sub_23F362984();
        if ((v21 & 1) != 0)
          goto LABEL_10;
      }
      v4 = v24;
    }
    *(_QWORD *)(v9 + 8 * v14) = v16 | v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v13) = v10;
    sub_23F3E4558();
    if (v23)
      goto LABEL_17;
    *(_QWORD *)(v7 + 16) = v22;
LABEL_14:
    if (++v8 == v26)
      goto LABEL_15;
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_23F3E3FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  sub_23F362ABC();
  v5 = v4;
  v6 = sub_23F61B4DC();
  v7 = sub_23F3E4364(v6);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36298C();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3E4430();
  if (v0 && (sub_23F35D2E8(&qword_256E71A08), sub_23F3E42BC(), sub_23F3E44D0(), v9))
  {
    sub_23F3E42F8();
    while (v3 < *(_QWORD *)(v5 + 16))
    {
      sub_23F3E4320();
      v10 = *(_QWORD *)(v1 + 40);
      sub_23F3E425C(&qword_256E71A10, (void (*)(uint64_t))MEMORY[0x24BEB8E58]);
      sub_23F3E43BC();
      sub_23F3E42CC();
      if (v13)
      {
LABEL_11:
        sub_23F3E4294(v11);
        v14 = *(_QWORD *)(v1 + 16);
        v15 = __OFADD__(v14, 1);
        v16 = v14 + 1;
        if (v15)
          goto LABEL_18;
        *(_QWORD *)(v1 + 16) = v16;
      }
      else
      {
        v5 = ~v12;
        while (1)
        {
          sub_23F3E43A8();
          sub_23F3E425C(&qword_256E71A18, (void (*)(uint64_t))MEMORY[0x24BEB8E58]);
          sub_23F3E4378();
          sub_23F3E4390();
          if ((v10 & 1) != 0)
            break;
          sub_23F3E4340();
          if (v13)
          {
            sub_23F3E44C4();
            goto LABEL_11;
          }
        }
        sub_23F3E4444(v2);
        sub_23F3E44C4();
      }
      sub_23F3E4500();
      if (v13)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_16:
    sub_23F38458C();
    sub_23F362948();
  }
}

uint64_t sub_23F3E4100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_23F384B44();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  v6 = v5 - v4;
  v7 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B17A4();
  sub_23F3E4214(v0, v1);
  if (sub_23F36195C(v1, 1, v2) == 1)
    return sub_23F61CD48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v1, v2);
  sub_23F61CD48();
  sub_23F3E425C(&qword_256E70528, (void (*)(uint64_t))MEMORY[0x24BEB8FE0]);
  sub_23F61C04C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_23F3E4214(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70238);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23F3E425C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  if (!*a1)
  {
    a2(255);
    v3 = sub_23F3E4564();
    atomic_store(MEMORY[0x242670A44](v3), a1);
  }
  sub_23F362928();
}

uint64_t sub_23F3E4294@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(*(_QWORD *)(v8 - 96) + 8 * a1) = v2 | v1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 88) + 32))(*(_QWORD *)(v5 + 48) + v3 * v7, v6, v4);
}

uint64_t sub_23F3E42BC()
{
  return sub_23F61C8B0();
}

void sub_23F3E42F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 - 96) = v0 + 56;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 88) + 80);
  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 120) = v1 + ((v3 + 32) & ~v3);
}

uint64_t sub_23F3E4320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 88) + 16))(v1, *(_QWORD *)(v3 - 120) + *(_QWORD *)(*(_QWORD *)(v3 - 88) + 72) * v2, v0);
}

uint64_t sub_23F3E4364(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = *(_QWORD *)(result - 8);
  return result;
}

uint64_t sub_23F3E4378()
{
  return sub_23F61C0A0();
}

uint64_t sub_23F3E4390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v1, v0);
}

uint64_t sub_23F3E43A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);

  return v5(v2, *(_QWORD *)(v3 + 48) + v0 * v4, v1);
}

uint64_t sub_23F3E43BC()
{
  return sub_23F61C040();
}

uint64_t sub_23F3E43F8()
{
  return sub_23F61C0A0();
}

uint64_t sub_23F3E4444(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F3E444C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v1, v0);
}

uint64_t sub_23F3E4480()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v1(v3, *(_QWORD *)(v0 + 48) + v5 * v4, v2);
}

uint64_t sub_23F3E4494()
{
  return sub_23F61C040();
}

void sub_23F3E44D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = *(_QWORD *)(v0 + 16);
}

uint64_t sub_23F3E44E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F3E44F0()
{
  return sub_23F617BA0();
}

uint64_t sub_23F3E4510(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, v1);
}

uint64_t sub_23F3E452C()
{
  return sub_23F61C10C();
}

uint64_t sub_23F3E4538()
{
  return sub_23F61C10C();
}

uint64_t sub_23F3E4564()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3E4570()
{
  return sub_23F61CD30();
}

uint64_t sub_23F3E457C()
{
  return sub_23F61B9EC();
}

uint64_t sub_23F3E4588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = *v7;
  v8[37] = a7;
  v8[38] = v9;
  v8[35] = a5;
  v8[36] = a6;
  v8[33] = a3;
  v8[34] = a4;
  v8[31] = a1;
  v8[32] = a2;
  v10 = sub_23F617F0C();
  v8[39] = v10;
  v8[40] = *(_QWORD *)(v10 - 8);
  v8[41] = sub_23F3666CC();
  v8[42] = sub_23F3666CC();
  v11 = sub_23F616DCC();
  v8[43] = v11;
  v8[44] = *(_QWORD *)(v11 - 8);
  v8[45] = sub_23F366578();
  v12 = sub_23F616E68();
  v8[46] = v12;
  v8[47] = *(_QWORD *)(v12 - 8);
  v8[48] = sub_23F366578();
  v8[49] = sub_23F35D2E8(&qword_256E70760);
  v8[50] = sub_23F3666CC();
  v8[51] = sub_23F3666CC();
  v8[52] = sub_23F3666CC();
  v8[53] = sub_23F3666CC();
  v8[54] = sub_23F3666CC();
  v8[55] = sub_23F3666CC();
  v8[56] = sub_23F3666CC();
  v8[57] = sub_23F3666CC();
  v8[58] = sub_23F3666CC();
  v13 = sub_23F619E98();
  v8[59] = v13;
  v8[60] = *(_QWORD *)(v13 - 8);
  v8[61] = sub_23F3666CC();
  v8[62] = sub_23F3666CC();
  v8[63] = sub_23F3666CC();
  return swift_task_switch();
}

uint64_t sub_23F3E46D8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjCClassFromMetadata;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t inited;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  void *v70;
  uint64_t v71;
  void *v72;
  id v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  id v81;
  NSObject *v82;
  os_log_type_t v83;
  _BOOL4 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t type;
  uint64_t typea;
  os_log_type_t typeb[8];
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t (*v130)(void);
  uint64_t (*v131)(void);
  uint64_t v132;

  sub_23F619124();
  sub_23F3E5368();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v1 = sub_23F619E8C();
  v2 = sub_23F61C610();
  if (os_log_type_enabled(v1, v2))
  {
    v118 = *(_QWORD *)(v0 + 456);
    v121 = *(_QWORD *)(v0 + 464);
    v3 = *(_QWORD *)(v0 + 264);
    v4 = *(_QWORD *)(v0 + 256);
    v5 = sub_23F366668();
    v132 = sub_23F366668();
    *(_DWORD *)v5 = 136315650;
    sub_23F617BA0();
    sub_23F37AE00(v4, v3, &v132);
    *(_QWORD *)(v0 + 224) = v6;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    sub_23F617BA0();
    v7 = sub_23F61BFC8();
    v9 = v8;
    sub_23F362D18();
    sub_23F37AE00(v7, v9, &v132);
    *(_QWORD *)(v0 + 232) = v10;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F384A80();
    *(_WORD *)(v5 + 22) = 2080;
    sub_23F3E5244(v121, v118);
    v11 = sub_23F61C16C();
    sub_23F37AE00(v11, v12, &v132);
    *(_QWORD *)(v0 + 240) = v13;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F3E528C(v121);
    _os_log_impl(&dword_23F35A000, v1, v2, "DefaultCATResponseDialogGenerator.generate:\ncatId:%s\nparameters:%s\ncustomTemplateFolder:%s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v14 = *(_QWORD *)(v0 + 504);
  v15 = *(_QWORD *)(v0 + 472);
  v16 = *(_QWORD *)(v0 + 480);
  v17 = *(_QWORD *)(v0 + 464);
  sub_23F384A80();
  sub_23F384A80();
  sub_23F3E528C(v17);

  v130 = *(uint64_t (**)(void))(v16 + 8);
  ((void (*)(uint64_t, uint64_t))v130)(v14, v15);
  v18 = *(_QWORD *)(v0 + 440);
  v19 = *(_QWORD *)(v0 + 368);
  sub_23F3E5244(*(_QWORD *)(v0 + 280), v18);
  if (sub_23F36195C(v18, 1, v19) == 1)
  {
    sub_23F3E528C(*(_QWORD *)(v0 + 440));
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v21 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v22 = objc_msgSend(v21, sel_resourceURL);

    if (v22)
    {
      sub_23F616E14();

      v23 = 0;
    }
    else
    {
      v23 = 1;
    }
    v28 = *(_QWORD *)(v0 + 424);
    v29 = *(_QWORD *)(v0 + 368);
    sub_23F3E5350(*(_QWORD *)(v0 + 416), v23);
    sub_23F3E535C();
    if (sub_23F36195C(v28, 1, v29) == 1)
    {
      sub_23F3E528C(*(_QWORD *)(v0 + 424));
      v30 = 1;
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 424);
      v33 = *(_QWORD *)(v0 + 368);
      v32 = *(_QWORD *)(v0 + 376);
      v34 = *(_QWORD *)(v0 + 352);
      v35 = *(_QWORD *)(v0 + 360);
      v36 = *(_QWORD *)(v0 + 344);
      *(_QWORD *)(v0 + 192) = 0x6574616C706D6554;
      *(_QWORD *)(v0 + 200) = 0xE900000000000073;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 104))(v35, *MEMORY[0x24BDCD7A0], v36);
      sub_23F38813C();
      sub_23F616E44();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
      v30 = 0;
    }
    sub_23F36196C(*(_QWORD *)(v0 + 432), v30, 1, *(_QWORD *)(v0 + 368));
    sub_23F3E535C();
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 448);
    v25 = *(_QWORD *)(v0 + 384);
    v26 = *(_QWORD *)(v0 + 368);
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 376) + 32);
    v27(v25, *(_QWORD *)(v0 + 440), v26);
    v27(v24, v25, v26);
    sub_23F3E5350(v24, 0);
  }
  sub_23F619124();
  v37 = sub_23F3848F0();
  sub_23F3E5244(v37, v38);
  v39 = sub_23F619E8C();
  v40 = sub_23F61C61C();
  v41 = os_log_type_enabled(v39, v40);
  v42 = *(_QWORD *)(v0 + 496);
  v43 = *(_QWORD *)(v0 + 472);
  if (v41)
  {
    v44 = *(_QWORD *)(v0 + 408);
    v45 = (uint8_t *)sub_23F366668();
    v132 = sub_23F366668();
    *(_DWORD *)v45 = 136315138;
    sub_23F3E5368();
    v46 = sub_23F61C16C();
    sub_23F3E5344(v46, v47);
    *(_QWORD *)(v0 + 208) = v48;
    sub_23F61C790();
    sub_23F362D18();
    sub_23F3E528C(v44);
    _os_log_impl(&dword_23F35A000, v39, v40, "DefaultCATResponseDialogGenerator.generate: using template dir %s", v45, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }
  sub_23F3E528C(*(_QWORD *)(v0 + 408));

  sub_23F3E5334(v42, v43, v49, v50, v51, v52, v53, v54, v106, v108, v110, v112, type, v117, v120, v123, v125, v127, v0 + 216,
    v130);
  v55 = *(_QWORD *)(v0 + 448);
  v56 = *(_QWORD *)(v0 + 400);
  v57 = *(_QWORD *)(v0 + 368);
  sub_23F35D2E8(qword_256E71B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E980;
  *(_QWORD *)(inited + 32) = 0x656C61636F6CLL;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v59 = sub_23F617018();
  v60 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v59;
  *(_QWORD *)(inited + 56) = v61;
  *(_QWORD *)(inited + 72) = v60;
  strcpy((char *)(inited + 80), "responseMode");
  *(_BYTE *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  v62 = sub_23F61A0C0();
  *(_QWORD *)(inited + 120) = v60;
  *(_QWORD *)(inited + 96) = v62;
  *(_QWORD *)(inited + 104) = v63;
  sub_23F61BFEC();
  sub_23F3E5244(v55, v56);
  if (sub_23F36195C(v56, 1, v57) == 1)
  {
    v64 = 0;
  }
  else
  {
    v65 = *(_QWORD *)(v0 + 400);
    v66 = *(_QWORD *)(v0 + 368);
    v67 = *(_QWORD *)(v0 + 376);
    v64 = (void *)sub_23F616DF0();
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
  }
  v68 = (void *)objc_opt_self();
  v69 = (void *)sub_23F61C0E8();
  v70 = (void *)sub_23F61BFB0();
  v71 = MEMORY[0x24BEE0D00];
  v72 = (void *)sub_23F61BFB0();
  swift_bridgeObjectRelease();
  LODWORD(v107) = *MEMORY[0x24BE2CAC8];
  v73 = objc_msgSend(v68, sel_execute_templateDir_catId_parameters_globals_callback_options_, 0, v64, v69, v70, v72, 0);

  v74 = sub_23F617F00();
  v75 = sub_23F3E532C(v74, sel_print);
  sub_23F61C3DC();
  sub_23F3E533C();
  if (*(_QWORD *)(v71 + 16))
    sub_23F3E5320();
  sub_23F3E5314();
  sub_23F3848F0();
  v76 = sub_23F617EDC();
  v77 = sub_23F3E532C(v76, sel_speak);
  sub_23F61C3DC();
  sub_23F3E533C();
  if (*(_QWORD *)(v71 + 16))
    sub_23F3E5320();
  sub_23F3E5314();
  sub_23F3848F0();
  v78 = sub_23F617EF4();
  v79 = sub_23F3E532C(v78, sel_captionPrint);
  sub_23F61C3DC();
  sub_23F3E533C();
  if (*(_QWORD *)(v71 + 16))
    sub_23F3E5320();
  sub_23F3E5314();
  sub_23F3848F0();
  v80 = sub_23F617E94();
  v81 = sub_23F3E532C(v80, sel_captionSpeak);
  sub_23F61C3DC();
  sub_23F3E533C();
  if (*(_QWORD *)(v71 + 16))
    sub_23F3E5320();
  sub_23F3E5314();
  sub_23F3848F0();
  sub_23F617EAC();
  sub_23F619124();
  v82 = sub_23F619E8C();
  v83 = sub_23F61C610();
  v84 = os_log_type_enabled(v82, v83);
  v85 = *(_QWORD *)(v0 + 448);
  if (v84)
  {
    v87 = *(_QWORD *)(v0 + 328);
    v86 = *(_QWORD *)(v0 + 336);
    v88 = *(_QWORD *)(v0 + 312);
    *(_QWORD *)typeb = *(_QWORD *)(v0 + 320);
    v89 = (uint8_t *)sub_23F366668();
    v132 = sub_23F366668();
    *(_DWORD *)v89 = 136315138;
    sub_23F3C08CC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)typeb + 16))(v87, v86, v88);
    v90 = sub_23F61C16C();
    sub_23F3E5344(v90, v91);
    *(_QWORD *)(v0 + 216) = v92;
    sub_23F61C790();
    sub_23F362D18();
    _os_log_impl(&dword_23F35A000, v82, v83, "DefaultCATResponseDialogGenerator.generate: generated response dialog:\n%s", v89, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }

  v93 = sub_23F3848F0();
  sub_23F3E5334(v93, v94, v95, v96, v97, v98, v99, v100, v107, v109, v111, v113, typea, v119, v122, v124, v126, v128, v129,
    v131);
  sub_23F3E528C(v85);
  v101 = *(_QWORD *)(v0 + 336);
  v103 = *(_QWORD *)(v0 + 312);
  v102 = *(_QWORD *)(v0 + 320);
  v104 = *(_QWORD *)(v0 + 248);
  sub_23F3C08CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16))(v104, v101, v103);
  (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v101, v103);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F3E5214()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DefaultCATResponseDialogGenerator()
{
  return objc_opt_self();
}

uint64_t sub_23F3E5244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3E528C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E70760);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F3E52CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3E5314()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3E5320()
{
  return sub_23F617BA0();
}

id sub_23F3E532C(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_23F3E5334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(void))
{
  return a20();
}

void sub_23F3E533C()
{
  void *v0;

}

void sub_23F3E5344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 80));
}

uint64_t sub_23F3E5350(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F36196C(a1, a2, 1, v2);
}

uint64_t sub_23F3E535C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3E52CC(v1, v0);
}

uint64_t sub_23F3E5368()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3E5244(v1, v0);
}

double sub_23F3E5374@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  double result;
  uint64_t v5;
  __int128 v6;
  _BYTE v7[25];

  sub_23F3E5A38(a1, &v5, (uint64_t *)&v6);
  v7[24] = 0;
  v3 = *(_OWORD *)v7;
  *a2 = v6;
  a2[1] = v3;
  result = *(double *)&v7[9];
  *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)&v7[9];
  return result;
}

uint64_t sub_23F3E53DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  __int128 v9[2];
  char v10;

  sub_23F3E71E8();
  if ((v8 & 1) != 0)
  {
    v2 = v7;
    sub_23F35D2E8(&qword_256E70370);
    result = swift_willThrowTypedImpl();
    *(_BYTE *)(a1 + 40) = 1;
  }
  else
  {
    sub_23F362678(&v7, (uint64_t)v9);
    v4 = sub_23F35D2E8(&qword_256E707A0);
    sub_23F389844(&qword_256E707A8, &qword_256E707A0, (uint64_t)&unk_23F622690);
    v6 = v5;
    v2 = swift_allocObject();
    sub_23F3E7504();
    result = sub_23F362678(v9, v2 + 16);
    v10 = 0;
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v6;
    *(_BYTE *)(a1 + 40) = 0;
  }
  *(_QWORD *)a1 = v2;
  return result;
}

void sub_23F3E54D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[9];
  uint64_t v17;
  _QWORD v18[5];
  char v19;

  v4 = sub_23F61B32C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3E6204();
  v8 = _s17CharlieComponentsVMa();
  v9 = a1 + *(int *)(v8 + 32);
  v10 = *(void **)v9;
  if ((*(_BYTE *)(v9 + 32) & 1) != 0)
  {
    v16[0] = *(_QWORD *)v9;
    v11 = v10;
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
    sub_23F38BB88((uint64_t)&v17);
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 40) = 1;
  }
  else
  {
    v12 = v8;
    v13 = *(_QWORD *)(v9 + 8);
    v14 = *(_QWORD *)(v9 + 16);
    v15 = *(_QWORD *)(v9 + 24);
    v16[5] = *(_QWORD *)v9;
    v16[6] = v13;
    v16[7] = v14;
    v16[8] = v15;
    sub_23F3CB7DC((uint64_t)v10);
    sub_23F3E5658((uint64_t)v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v12 + 24), v4);
    v18[3] = &type metadata for PromptMapperResolver;
    v18[4] = &off_250FDB498;
    v18[0] = swift_allocObject();
    sub_23F51CF9C();
    v19 = 0;
    sub_23F3CD9FC((uint64_t)v18, a2, &qword_256E705F8);
  }
}

uint64_t sub_23F3E5658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;

  v3 = _s17CharlieComponentsVMa();
  v4 = v1 + *(int *)(v3 + 40);
  sub_23F38F124(v4, (uint64_t)&v9, &qword_256E70738);
  if (!v10)
  {
    sub_23F3625D8((uint64_t)&v9, &qword_256E70738);
    v10 = type metadata accessor for AlphaAppNameRenderer(0);
    v11 = &off_250FD31D8;
    v5 = sub_23F36145C((uint64_t *)&v9);
    v6 = v1 + *(int *)(v3 + 20);
    v7 = sub_23F6170CC();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    sub_23F36196C((uint64_t)v5, 0, 1, v7);
    sub_23F3625D8(v4, &qword_256E70738);
    sub_23F382FC4((uint64_t)&v9, v4);
  }
  return sub_23F362678(&v9, a1);
}

void sub_23F3E5754(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  int *v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  __n128 *v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  _QWORD v35[5];

  *a5 = 0x65696C72616843;
  a5[1] = 0xE700000000000000;
  v9 = (int *)_s17CharlieComponentsVMa();
  *(double *)&v10 = sub_23F3CDAA8(v9[10]);
  v12 = (char *)a5 + *(int *)(v11 + 44);
  *((_QWORD *)v12 + 4) = 0;
  *(_OWORD *)v12 = v10;
  *((_OWORD *)v12 + 1) = v10;
  v12[40] = -1;
  bzero((char *)a5 + *(int *)(v11 + 48), 0xC8uLL);
  bzero((char *)a5 + v9[13], 0x168uLL);
  v13.n128_f64[0] = sub_23F3CDAA8(v9[14]);
  *(_BYTE *)(v14 + 40) = -1;
  v15 = (__n128 *)((char *)a5 + v9[15]);
  v15[2].n128_u64[0] = 0;
  *v15 = v13;
  v15[1] = v13;
  sub_23F3CDA48(v9[16], v13);
  sub_23F3CDA48(v9[17], v16);
  sub_23F3CDA48(v9[18], v17);
  sub_23F3CDA48(v9[19], v18);
  v19 = (char *)a5 + v9[5];
  v20 = sub_23F38F984();
  v29 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v19, a1, v20);
  v21 = (char *)a5 + v9[6];
  v22 = sub_23F384B34();
  v23 = *(_QWORD *)(v22 - 8);
  v31 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, a2, v22);
  v30 = a3;
  sub_23F382FC4(a3, (uint64_t)a5 + v9[7]);
  v32 = a1;
  sub_23F3C905C(a1, &v34, (uint64_t)v35);
  v25 = v35[0];
  v24 = v35[1];
  v26 = v35[2];
  v27 = v35[3];
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v30);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v31, v22);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v20);
  v28 = (char *)a5 + v9[8];
  *(_QWORD *)v28 = v25;
  *((_QWORD *)v28 + 1) = v24;
  *((_QWORD *)v28 + 2) = v26;
  *((_QWORD *)v28 + 3) = v27;
  v28[32] = 0;
  sub_23F3CD9FC(a4, (uint64_t)a5 + v9[9], &qword_256E705E0);
}

uint64_t _s17CharlieComponentsVMa()
{
  uint64_t result;

  result = qword_256E71B78;
  if (!qword_256E71B78)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23F3E5984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v3 = v1 + *(int *)(sub_23F3E8088() + 44);
  sub_23F38FA10();
  if (v13)
  {
    sub_23F38F9FC();
  }
  else if ((v12 & 1) != 0)
  {
    sub_23F38F9D4();
    *(_QWORD *)&v25 = v2;
    v29 = 1;
  }
  else
  {
    sub_23F38F9E0(v4, v5, v6, v7, v8, v9, v10, v11, v25);
    v29 = 0;
  }
  sub_23F38F938();
  if (v13)
  {
    v22 = sub_23F38FA50();
    sub_23F3E5374(v22, v23);
    sub_23F38FA10();
    if (!v13)
    {
      if ((v24 & 1) != 0)

      else
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v3);
    }
    if ((*(_BYTE *)(v0 + 40) & 1) != 0)
    {
      sub_23F38FA30();
      *(_QWORD *)v3 = v0;
      *(_BYTE *)(v3 + 40) = 1;
    }
    else
    {
      sub_23F3CDA9C();
      *(_BYTE *)(v3 + 40) = 0;
    }
  }
  else
  {
    sub_23F38FA5C(v14, v15, v16, v17, v18, v19, v20, v21, v25, v26, v27, v28, v29);
  }
  sub_23F38F98C();
}

void sub_23F3E5A38(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint8_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  BOOL v45;
  char v46;
  char *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint8_t *v74;
  uint64_t v75;

  v65 = a1;
  v72 = a3;
  v5 = sub_23F619E98();
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v61 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E705E0);
  MEMORY[0x24BDAC7A8](v7);
  v67 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for FullPlannerGMSClientConfiguration(0);
  v9 = MEMORY[0x24BDAC7A8](v66);
  v68 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v69 = (uint64_t)&v58 - v11;
  v12 = sub_23F35D2E8(&qword_256E70760);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_23F616E68();
  v71 = *(_QWORD *)(v75 - 8);
  v15 = MEMORY[0x24BDAC7A8](v75);
  v64 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v70 = (char *)&v58 - v17;
  v18 = type metadata accessor for FullPlannerPreferences();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256E6EE90 != -1)
    swift_once();
  v21 = sub_23F361498(v18, (uint64_t)qword_256E7FE90);
  swift_beginAccess();
  sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F617C48();
  v22 = v73;
  sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  if (v22 == 1)
  {
    v23 = sub_23F35D2E8(&qword_256E70780);
    v24 = v72;
    v72[3] = v23;
    sub_23F389844(&qword_256E70788, &qword_256E70780, (uint64_t)&unk_23F630E08);
    v24[4] = v25;
    return;
  }
  v59 = v3;
  v60 = a2;
  sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F617C48();
  sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F616E38();
  swift_bridgeObjectRelease();
  v26 = v75;
  if (sub_23F36195C((uint64_t)v14, 1, v75) == 1)
  {
    sub_23F3625D8((uint64_t)v14, &qword_256E70760);
    sub_23F38F04C();
    v27 = swift_allocError();
    *v28 = 0xD000000000000019;
    v28[1] = 0x800000023F634B20;
    swift_willThrow();
LABEL_14:
    v44 = v60;
LABEL_15:
    *v44 = v27;
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v14, v26);
  sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F617C48();
  v30 = v73;
  v29 = v74;
  sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  v31 = v30 == 0x6E65476E656B6F74 && v29 == (uint8_t *)0xEE00726F74617265;
  if (v31 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v32 = _s17CharlieComponentsVMa();
    v33 = v67;
    sub_23F38F124(v65 + *(int *)(v32 + 36), v67, &qword_256E705E0);
    sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F617C48();
    v34 = v73;
    sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F617C48();
    v35 = v73;
    sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    v36 = v69;
    sub_23F3CD9FC(v33, v69, &qword_256E705E0);
    v37 = v66;
    *(_BYTE *)(v36 + *(int *)(v66 + 20)) = v34;
    *(_BYTE *)(v36 + *(int *)(v37 + 24)) = v35;
    v38 = v68;
    sub_23F38F530(v36, v68, type metadata accessor for FullPlannerGMSClientConfiguration);
    v39 = sub_23F35D2E8(&qword_256E70770);
    v40 = v72;
    v72[3] = v39;
    sub_23F389844(&qword_256E70778, &qword_256E70770, (uint64_t)&unk_23F622390);
    v40[4] = v41;
    v42 = sub_23F36145C(v40);
    v43 = v59;
    sub_23F38CFE4(v38, (uint64_t)v42);
    v27 = v43;
    if (v43)
    {
      sub_23F3663AC(v36, type metadata accessor for FullPlannerGMSClientConfiguration);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v75);
      sub_23F38F0AC((uint64_t)v40);
      goto LABEL_14;
    }
    sub_23F3663AC(v36, type metadata accessor for FullPlannerGMSClientConfiguration);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v75);
  }
  else
  {
    v45 = v30 == 0x65696C4370747468 && v29 == (uint8_t *)0xEA0000000000746ELL;
    v44 = v60;
    if (v45)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v46 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      if ((v46 & 1) == 0)
      {
        v47 = v61;
        sub_23F619088();
        v48 = sub_23F619E8C();
        v49 = sub_23F61C628();
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v50 = 0;
          MEMORY[0x242670B70](v50, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v62 + 8))(v47, v63);
        sub_23F38F04C();
        v27 = swift_allocError();
        *v51 = 0;
        v51[1] = 0;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v75);
        goto LABEL_15;
      }
    }
    v52 = v70;
    v53 = (uint64_t)v64;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v64, v70, v75);
    sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F617C48();
    v54 = v73;
    v55 = v74;
    sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    v56 = v72;
    v72[3] = (uint64_t)&type metadata for FullPlannerHTTPClientInterface;
    v56[4] = (uint64_t)&off_256E744C0;
    v57 = swift_allocObject();
    *v56 = v57;
    sub_23F4414E8(v53, v54, v55, v57 + 16);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v52, v75);
  }
}

_OWORD *sub_23F3E6204()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[26];

  v2 = sub_23F3E8088();
  v3 = (_OWORD *)(v1 + *(int *)(v2 + 48));
  sub_23F38F908(v2, v4, &qword_256E707D0, v5, v6, v7, v8, v9, v13[0]);
  if (v13[3])
    return memcpy(v0, v13, 0xC8uLL);
  sub_23F38F900((uint64_t)v13);
  v11 = sub_23F38FA50();
  sub_23F3E628C(v11, v12);
  sub_23F38F900((uint64_t)v3);
  return sub_23F38F144(v0, v3);
}

uint64_t sub_23F3E628C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  _UNKNOWN **v59;
  __int128 v60;
  void *v61;
  _UNKNOWN **v62;
  __int128 v63;
  void *v64;
  _UNKNOWN **v65;
  __int128 v66;
  uint64_t v67;
  _UNKNOWN **v68;
  __int128 v69[2];
  _QWORD v70[5];
  uint64_t v71[5];
  uint64_t v72[5];
  uint64_t v73[5];
  uint64_t v74;
  void *v75;
  _UNKNOWN **v76;
  uint64_t v77;
  _BYTE v78[40];
  _QWORD v79[5];
  uint64_t v80;
  _QWORD v81[5];
  uint64_t v82;
  void *v83;
  _UNKNOWN **v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  _QWORD v88[5];
  uint64_t v89;
  void *v90;
  _UNKNOWN **v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  _QWORD v95[5];
  uint64_t v96;
  void *v97;
  _UNKNOWN **v98;
  uint64_t v99;
  void *v100;
  _UNKNOWN **v101;
  uint64_t v102;
  void *v103;
  _UNKNOWN **v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  _BYTE v108[32];
  uint64_t v109;
  uint64_t v110[5];
  uint64_t v111;
  void *v112;
  _UNKNOWN **v113;
  uint64_t v114[15];
  uint64_t v115[5];
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  _QWORD v119[5];
  uint64_t v120;
  void *v121;
  _UNKNOWN **v122;
  _BYTE v123[56];
  __int128 v124;
  uint64_t v125;
  _BYTE v126[32];
  uint64_t v127;
  _BYTE v128[32];
  uint64_t v129;

  v52 = a2;
  v51 = type metadata accessor for BravoEntityIdentifierValuePromptRenderer(0);
  MEMORY[0x24BDAC7A8](v51);
  v50 = (uint64_t *)((char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = type metadata accessor for BravoRenderableToolDefinitionPromptRenderer(0);
  MEMORY[0x24BDAC7A8](v55);
  v5 = (uint64_t *)((char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = type metadata accessor for BravoEntityValuePromptRenderer(0);
  MEMORY[0x24BDAC7A8](v56);
  v54 = (uint64_t *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = 0;
  memset(v128, 0, sizeof(v128));
  v127 = 0;
  memset(v126, 0, sizeof(v126));
  v119[3] = &unk_250FD4528;
  v119[4] = &off_250FD4588;
  v119[0] = swift_allocObject();
  sub_23F3E7D4C((uint64_t)v126, v119[0] + 16);
  v121 = &unk_250FD4528;
  v122 = &off_250FD4588;
  v120 = swift_allocObject();
  sub_23F3E7D4C((uint64_t)v126, v120 + 16);
  v53 = a1;
  sub_23F3E5658((uint64_t)v123);
  v125 = 0;
  v124 = 0u;
  *(_OWORD *)&v123[40] = 0u;
  *((_QWORD *)v9 + 3) = &unk_250FD44A0;
  *((_QWORD *)v9 + 4) = &off_250FD4568;
  v10 = swift_allocObject();
  *(_QWORD *)v9 = v10;
  sub_23F3E7DB8((uint64_t)v119, v10 + 16);
  *((_QWORD *)v9 + 8) = &unk_250FD2F20;
  *((_QWORD *)v9 + 9) = &off_250FD3190;
  v11 = swift_allocObject();
  *((_QWORD *)v9 + 5) = v11;
  sub_23F38F1E8((uint64_t)v128, v11 + 16);
  *((_QWORD *)v9 + 13) = &unk_250FD3228;
  *((_QWORD *)v9 + 14) = &off_250FD3238;
  sub_23F3E5658((uint64_t)(v9 + 120));
  v12 = _s17CharlieComponentsVMa();
  v49 = v12;
  *((_OWORD *)v9 + 10) = 0u;
  *((_OWORD *)v9 + 11) = 0u;
  *((_QWORD *)v9 + 24) = 0;
  v13 = a1 + *(int *)(v12 + 24);
  v14 = &v9[*(int *)(v7 + 36)];
  v15 = sub_23F61B32C();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v46 = v15;
  v47 = v13;
  v16(v14, v13, v15);
  v45 = v16;
  v115[3] = v7;
  v115[4] = (uint64_t)&off_250FD3D60;
  v17 = sub_23F36145C(v115);
  sub_23F38F530((uint64_t)v9, (uint64_t)v17, type metadata accessor for BravoTypeIdentifierRenderer);
  v116 = 0u;
  v117 = 0u;
  v118 = 0;
  v114[3] = v7;
  v114[4] = (uint64_t)&off_250FD3D60;
  v18 = sub_23F36145C(v114);
  sub_23F38F530((uint64_t)v9, (uint64_t)v18, type metadata accessor for BravoTypeIdentifierRenderer);
  v114[8] = (uint64_t)&unk_250FD2B58;
  v114[9] = (uint64_t)&off_250FD3060;
  v114[13] = (uint64_t)&unk_250FD2B38;
  v114[14] = (uint64_t)&off_250FD3050;
  v110[3] = v7;
  v48 = v7;
  v110[4] = (uint64_t)&off_250FD3D60;
  v19 = sub_23F36145C(v110);
  sub_23F38F530((uint64_t)v9, (uint64_t)v19, type metadata accessor for BravoTypeIdentifierRenderer);
  v112 = &unk_250FD2B08;
  v113 = &off_250FD3040;
  v111 = swift_allocObject();
  sub_23F38F43C((uint64_t)v114, v111 + 16);
  v20 = v54;
  v54[3] = v7;
  v20[4] = (uint64_t)&off_250FD3D48;
  v21 = v20;
  v22 = sub_23F36145C(v20);
  sub_23F38F530((uint64_t)v9, (uint64_t)v22, type metadata accessor for BravoTypeIdentifierRenderer);
  v21[8] = (uint64_t)&unk_250FD3CE8;
  v21[9] = (uint64_t)&off_250FD3DC0;
  v23 = swift_allocObject();
  v21[5] = v23;
  sub_23F3CD7F4((uint64_t)v110, v23 + 16);
  v49 = v53 + *(int *)(v49 + 28);
  sub_23F382FC4(v49, (uint64_t)(v21 + 10));
  v16((char *)v21 + *(int *)(v56 + 28), v13, v15);
  v109 = 0;
  memset(v108, 0, sizeof(v108));
  v95[3] = &unk_250FD4420;
  v95[4] = &off_250FD4558;
  v95[0] = swift_allocObject();
  sub_23F3E7E2C((uint64_t)v108, v95[0] + 16);
  v97 = &unk_250FD2E80;
  v98 = &off_250FD3140;
  v96 = swift_allocObject();
  sub_23F38F248((uint64_t)v115, v96 + 16);
  v100 = &unk_250FD4420;
  v101 = &off_250FD4558;
  v99 = swift_allocObject();
  sub_23F3E7E2C((uint64_t)v108, v99 + 16);
  v103 = &unk_250FD2E80;
  v104 = &off_250FD3140;
  v102 = swift_allocObject();
  sub_23F38F248((uint64_t)v115, v102 + 16);
  v105 = 0u;
  v106 = 0u;
  v107 = 0;
  v88[3] = &unk_250FD2E80;
  v88[4] = &off_250FD3140;
  v88[0] = swift_allocObject();
  sub_23F38F248((uint64_t)v115, v88[0] + 16);
  v90 = &unk_250FD4398;
  v91 = &off_250FD4540;
  v89 = swift_allocObject();
  sub_23F3E7EBC((uint64_t)v95, v89 + 16);
  v92 = 0u;
  v93 = 0u;
  v94 = 0;
  v81[3] = &unk_250FD2D78;
  v81[4] = &off_250FD3108;
  v81[0] = swift_allocObject();
  sub_23F38F2C8((uint64_t)v88, v81[0] + 16);
  v83 = &unk_250FD2CF8;
  v84 = &off_250FD30F0;
  v82 = swift_allocObject();
  sub_23F3E5658(v82 + 16);
  v87 = 0;
  v86 = 0u;
  v85 = 0u;
  v79[3] = &unk_250FD2C70;
  v79[4] = &off_250FD30B8;
  v79[0] = swift_allocObject();
  sub_23F38F360((uint64_t)v81, v79[0] + 16);
  sub_23F3E5658((uint64_t)&v80);
  sub_23F3E5658((uint64_t)v78);
  v5[3] = (uint64_t)&unk_250FD2C70;
  v5[4] = (uint64_t)&off_250FD30B8;
  v24 = swift_allocObject();
  *v5 = v24;
  sub_23F38F360((uint64_t)v81, v24 + 16);
  v5[8] = (uint64_t)&unk_250FD2BF8;
  v5[9] = (uint64_t)&off_250FD3098;
  v5[13] = (uint64_t)&unk_250FD2BD0;
  v5[14] = (uint64_t)&off_250FD3070;
  v25 = swift_allocObject();
  v5[10] = v25;
  sub_23F38F3C0((uint64_t)v79, v25 + 16);
  v5[18] = (uint64_t)&unk_250FD3B00;
  v5[19] = (uint64_t)&off_250FD3B18;
  v26 = swift_allocObject();
  v5[15] = v26;
  sub_23F38F3FC((uint64_t)v78, v26 + 16);
  v5[23] = (uint64_t)&unk_250FD3C68;
  v5[24] = (uint64_t)&off_250FD3DA0;
  v27 = swift_allocObject();
  v5[20] = v27;
  sub_23F3E5658(v27 + 16);
  v29 = v46;
  v28 = v47;
  v30 = v45;
  v45((char *)v5 + *(int *)(v55 + 36), v47, v46);
  v31 = v50;
  v32 = v48;
  v50[3] = v48;
  v31[4] = (uint64_t)&off_250FD3D48;
  v33 = sub_23F36145C(v31);
  sub_23F38F530((uint64_t)v9, (uint64_t)v33, type metadata accessor for BravoTypeIdentifierRenderer);
  v34 = v51;
  v30((char *)v31 + *(int *)(v51 + 20), v28, v29);
  v73[3] = v32;
  v35 = v32;
  v73[4] = (uint64_t)&off_250FD3D60;
  v36 = sub_23F36145C(v73);
  sub_23F38F530((uint64_t)v9, (uint64_t)v36, type metadata accessor for BravoTypeIdentifierRenderer);
  v75 = &unk_250FD2B08;
  v76 = &off_250FD3040;
  v74 = swift_allocObject();
  sub_23F38F43C((uint64_t)v114, v74 + 16);
  sub_23F382FC4(v49, (uint64_t)&v77);
  v70[3] = &unk_250FD2A80;
  v70[4] = &off_250FD3030;
  v70[0] = swift_allocObject();
  sub_23F38F47C((uint64_t)v73, v70[0] + 16);
  v71[3] = v56;
  v71[4] = (uint64_t)&off_250FD3D90;
  v37 = sub_23F36145C(v71);
  v38 = (uint64_t)v54;
  sub_23F38F530((uint64_t)v54, (uint64_t)v37, type metadata accessor for BravoEntityValuePromptRenderer);
  v72[3] = v34;
  v72[4] = (uint64_t)&off_250FD3D80;
  v39 = sub_23F36145C(v72);
  sub_23F38F530((uint64_t)v31, (uint64_t)v39, type metadata accessor for BravoEntityIdentifierValuePromptRenderer);
  sub_23F3E5658((uint64_t)v69);
  v67 = v55;
  v68 = &off_250FD3D20;
  v40 = sub_23F36145C((uint64_t *)&v66);
  sub_23F38F530((uint64_t)v5, (uint64_t)v40, type metadata accessor for BravoRenderableToolDefinitionPromptRenderer);
  v64 = &unk_250FD28F8;
  v65 = &off_250FD2FD8;
  *(_QWORD *)&v63 = swift_allocObject();
  sub_23F38F580((uint64_t)v70, v63 + 16);
  v61 = &unk_250FD4398;
  v62 = &off_250FD4540;
  *(_QWORD *)&v60 = swift_allocObject();
  sub_23F3E7EBC((uint64_t)v95, v60 + 16);
  v58 = v35;
  v59 = &off_250FD3D60;
  v41 = sub_23F36145C((uint64_t *)&v57);
  sub_23F3CD8C8((uint64_t)v9, (uint64_t)v41);
  sub_23F38F600((uint64_t)v70);
  sub_23F38F634((uint64_t)v73);
  sub_23F3663AC((uint64_t)v31, type metadata accessor for BravoEntityIdentifierValuePromptRenderer);
  sub_23F3663AC((uint64_t)v5, type metadata accessor for BravoRenderableToolDefinitionPromptRenderer);
  sub_23F38F6D0((uint64_t)v78);
  sub_23F38F704((uint64_t)v79);
  sub_23F38F738((uint64_t)v81);
  sub_23F38F76C((uint64_t)v88);
  sub_23F3E7F2C((uint64_t)v95);
  sub_23F3E7F60((uint64_t)v108);
  sub_23F3663AC(v38, type metadata accessor for BravoEntityValuePromptRenderer);
  sub_23F3CD90C((uint64_t)v110);
  sub_23F38F668((uint64_t)v114);
  sub_23F38F808((uint64_t)v115);
  sub_23F3E7F94((uint64_t)v119);
  sub_23F3E7FC8((uint64_t)v126);
  sub_23F38F870((uint64_t)v128);
  v42 = v52;
  sub_23F362678(v69, v52);
  sub_23F362678(&v66, v42 + 40);
  sub_23F362678(&v63, v42 + 80);
  sub_23F362678(&v60, v42 + 120);
  return sub_23F362678(&v57, v42 + 160);
}

void *sub_23F3E6D24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  void (*v14)(uint64_t *, uint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  int *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *, char *, uint64_t);
  void (*v35)(uint64_t *, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  __int128 v39[2];
  __int128 v40;
  uint64_t v41;
  _UNKNOWN **v42;
  __int128 v43;
  void *v44;
  _UNKNOWN **v45;
  uint64_t v46[8];
  uint64_t v47[5];
  _QWORD v48[46];

  v2 = v1;
  v4 = type metadata accessor for FullPlannerPreferences();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F384B34();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)_s17CharlieComponentsVMa();
  v12 = v1 + v11[13];
  sub_23F38F124(v12, (uint64_t)v48, &qword_256E707B8);
  if (v48[13])
    return memcpy(a1, v48, 0x168uLL);
  v36 = v12;
  sub_23F3625D8((uint64_t)v48, &qword_256E707B8);
  v14 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16);
  v38 = v2 + v11[6];
  v35 = v14;
  ((void (*)(char *))v14)(v10);
  sub_23F3E80BC();
  v37 = v10;
  if (qword_256E6EE90 != -1)
    swift_once();
  v15 = sub_23F361498(v4, (uint64_t)qword_256E7FE90);
  swift_beginAccess();
  sub_23F38F530(v15, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F617C48();
  v16 = v47[0];
  sub_23F3663AC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  v17 = type metadata accessor for CharlieSpanEventPromptGenerator();
  v47[3] = v17;
  v47[4] = (uint64_t)&off_250FD4610;
  v18 = sub_23F36145C(v47);
  v34 = *(void (**)(uint64_t *, char *, uint64_t))(v8 + 32);
  v34(v18, v37, v7);
  memcpy((char *)v18 + *(int *)(v17 + 20), v48, 0xC8uLL);
  *((_BYTE *)v18 + *(int *)(v17 + 24)) = v16;
  v19 = type metadata accessor for BravoContextEventPromptGenerator();
  v46[3] = v19;
  v46[4] = (uint64_t)&off_250FD3A78;
  v20 = sub_23F36145C(v46);
  v21 = v38;
  v35(v20, v38, v7);
  sub_23F3E80BC();
  sub_23F382FC4(v2 + v11[7], (uint64_t)v20 + *(int *)(v19 + 24));
  v44 = &unk_250FD4EE0;
  v45 = &off_250FD4F48;
  v22 = swift_allocObject();
  *(_QWORD *)&v43 = v22;
  *(_QWORD *)(v22 + 40) = &unk_250FD4E68;
  *(_QWORD *)(v22 + 48) = &off_250FD4F38;
  v41 = type metadata accessor for AlphaProgramStatementParser();
  v42 = &off_250FD2850;
  v23 = sub_23F36145C((uint64_t *)&v40);
  v24 = v21;
  sub_23F3E80C4((uint64_t)v23, v21);
  v25 = (uint64_t)v37;
  sub_23F3E80C4((uint64_t)v37, v24);
  sub_23F3E80BC();
  sub_23F382FC4((uint64_t)&v48[5], (uint64_t)v39);
  sub_23F38BB88((uint64_t)v48);
  a1[18] = (uint64_t)&type metadata for AlphaPlanParser;
  a1[19] = (uint64_t)&off_250FD2840;
  v26 = (uint64_t *)swift_allocObject();
  a1[15] = (uint64_t)v26;
  v27 = (int *)type metadata accessor for AlphaExpressionParser(0);
  v26[10] = (uint64_t)v27;
  v26[11] = (uint64_t)&off_250FD26C0;
  v28 = sub_23F36145C(v26 + 7);
  sub_23F3E5658((uint64_t)v28 + v27[7]);
  *(_BYTE *)v28 = 1;
  v34((uint64_t *)((char *)v28 + v27[5]), (char *)v25, v7);
  sub_23F362678(v39, (uint64_t)v28 + v27[6]);
  sub_23F362678(&v40, (uint64_t)(v26 + 2));
  a1[23] = type metadata accessor for AlphaStatementResultParser();
  a1[24] = (uint64_t)&off_250FD3308;
  v29 = sub_23F36145C(a1 + 20);
  v30 = v38;
  sub_23F3E80C4((uint64_t)v29, v38);
  sub_23F3E80BC();
  a1[28] = (uint64_t)&unk_250FD4E48;
  a1[29] = (uint64_t)&off_250FD4F28;
  a1[33] = (uint64_t)&unk_250FD4E28;
  a1[34] = (uint64_t)&off_250FD4F18;
  a1[38] = type metadata accessor for AlphaExternalAgentOutcomeParser();
  a1[39] = (uint64_t)&off_250FD4F08;
  v31 = sub_23F36145C(a1 + 35);
  sub_23F3E80C4((uint64_t)v31, v30);
  sub_23F3E80BC();
  a1[43] = (uint64_t)&unk_250FD4E08;
  a1[44] = (uint64_t)&off_250FD4EF8;
  sub_23F3CD9FC((uint64_t)v47, (uint64_t)a1, &qword_256E707C0);
  sub_23F3CD9FC((uint64_t)v46, (uint64_t)(a1 + 5), &qword_256E707C8);
  sub_23F362678(&v43, (uint64_t)(a1 + 10));
  v32 = v36;
  sub_23F3625D8(v36, &qword_256E707B8);
  return (void *)sub_23F38F0E8((uint64_t)a1, v32);
}

void sub_23F3E71E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18[6];

  v1 = sub_23F3E8088();
  v2 = v0 + *(int *)(v1 + 56);
  sub_23F38F908(v1, v3, &qword_256E707B0, v4, v5, v6, v7, v8, v18[0]);
  sub_23F38F938();
  if (v16)
  {
    sub_23F38F900((uint64_t)v18);
    sub_23F3CDA74(v17, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t *))sub_23F3E7268);
    sub_23F38F900(v2);
    sub_23F38F99C();
  }
  else
  {
    sub_23F3CDA5C(v9, v10, &qword_256E705E8, v11, v12, v13, v14, v15, v18[0]);
  }
  sub_23F38F8EC();
}

uint64_t sub_23F3E7268@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  int *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  _UNKNOWN **v33;
  _BYTE v34[200];
  uint64_t v35[46];
  uint64_t v36;

  v23 = a3;
  v24 = a2;
  v4 = sub_23F6170CC();
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v26 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B32C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = _s17CharlieComponentsVMa();
  v10 = a1 + *(int *)(v25 + 24);
  v36 = v7;
  v11 = *(void (**)(void))(v7 + 16);
  v30 = v9;
  ((void (*)(char *, uint64_t, uint64_t))v11)(v9, v10, v6);
  sub_23F3E6D24(v35);
  sub_23F3E6204();
  v12 = type metadata accessor for BravoToolRenderer();
  v32 = v12;
  v33 = &off_250FD3E20;
  v13 = sub_23F36145C((uint64_t *)&v31);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v11)(v13, v10, v6);
  sub_23F3E6204();
  v14 = (uint64_t *)((char *)v13 + *(int *)(v12 + 24));
  v14[3] = type metadata accessor for AlphaToolRenderer();
  v14[4] = (uint64_t)&off_250FD3328;
  sub_23F36145C(v14);
  v11();
  sub_23F3E6204();
  v15 = (char *)v13 + *(int *)(v12 + 28);
  *((_QWORD *)v15 + 4) = 0;
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v26, a1 + *(int *)(v25 + 20), v28);
  sub_23F617510();
  swift_allocObject();
  v16 = v29;
  v17 = sub_23F617504();
  if (v16)
  {
    sub_23F38BB88((uint64_t)v34);
    sub_23F38BBBC((uint64_t)v35);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v6);
    result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v31);
    *v24 = v16;
  }
  else
  {
    v19 = v17;
    v20 = (int *)type metadata accessor for ConversationParser();
    v21 = v23;
    v23[3] = (uint64_t)v20;
    v21[4] = (uint64_t)&off_250FD4C58;
    v22 = sub_23F36145C(v21);
    (*(void (**)(uint64_t *, char *, uint64_t))(v36 + 32))(v22, v30, v6);
    memcpy((char *)v22 + v20[5], v35, 0x168uLL);
    memcpy((char *)v22 + v20[6], v34, 0xC8uLL);
    result = sub_23F362678(&v31, (uint64_t)v22 + v20[7]);
    *(uint64_t *)((char *)v22 + v20[8]) = v19;
  }
  return result;
}

void sub_23F3E7504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _UNKNOWN **v6;

  v2 = v1 + *(int *)(sub_23F3E8088() + 60);
  if (*(_QWORD *)(v2 + 24))
  {
    sub_23F382FC4(v2, (uint64_t)&v4);
  }
  else
  {
    v3 = *(_OWORD *)(v2 + 16);
    v4 = *(_OWORD *)v2;
    v5 = v3;
    v6 = *(_UNKNOWN ***)(v2 + 32);
  }
  if (!*((_QWORD *)&v5 + 1))
  {
    *((_QWORD *)&v5 + 1) = &unk_250FD46E0;
    v6 = &off_256E71E38;
    if (*(_QWORD *)(v2 + 24))
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v2);
    sub_23F382FC4((uint64_t)&v4, v2);
  }
  sub_23F362678(&v4, v0);
  sub_23F38FA3C();
}

void sub_23F3E7594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v3 = v1 + *(int *)(sub_23F3E8088() + 64);
  sub_23F38FA10();
  if (v13)
  {
    sub_23F38F9FC();
  }
  else if ((v12 & 1) != 0)
  {
    sub_23F38F9D4();
    *(_QWORD *)&v24 = v2;
    v28 = 1;
  }
  else
  {
    sub_23F38F9E0(v4, v5, v6, v7, v8, v9, v10, v11, v24);
    v28 = 0;
  }
  sub_23F38F938();
  if (v13)
  {
    sub_23F38FA50();
    sub_23F3E53DC(v22);
    sub_23F38FA10();
    if (!v13)
    {
      if ((v23 & 1) != 0)

      else
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v3);
    }
    if ((*(_BYTE *)(v0 + 40) & 1) != 0)
    {
      sub_23F38FA30();
      *(_QWORD *)v3 = v0;
      *(_BYTE *)(v3 + 40) = 1;
    }
    else
    {
      sub_23F3CDA9C();
      *(_BYTE *)(v3 + 40) = 0;
    }
  }
  else
  {
    sub_23F38FA5C(v14, v15, v16, v17, v18, v19, v20, v21, v24, v25, v26, v27, v28);
  }
  sub_23F38F98C();
}

void sub_23F3E7648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13[6];

  v2 = v1 + *(int *)(sub_23F3E8088() + 68);
  sub_23F38F124(v2, (uint64_t)v13, &qword_256E70740);
  sub_23F38F938();
  if (v10)
  {
    sub_23F3625D8((uint64_t)v13, &qword_256E70740);
    if (qword_256E6EE60 != -1)
      swift_once();
    v11 = sub_23F617BA0();
    v12 = sub_23F38ED40(v11);
    *(_QWORD *)(v0 + 24) = &type metadata for FullPlannerResponseParser;
    *(_QWORD *)(v0 + 32) = &off_250FD6EC8;
    *(_QWORD *)v0 = v12;
    *(_BYTE *)(v0 + 40) = 0;
    sub_23F3625D8(v2, &qword_256E70740);
    sub_23F38F124(v0, v2, &qword_256E705F0);
  }
  else
  {
    sub_23F3CDA5C(v3, v4, &qword_256E705F0, v5, v6, v7, v8, v9, v13[0]);
  }
  sub_23F38FA3C();
}

void sub_23F3E7720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[6];

  v2 = sub_23F3E8088();
  v3 = v1 + *(int *)(v2 + 72);
  sub_23F38F908(v2, v4, &qword_256E70730, v5, v6, v7, v8, v9, v20[0]);
  sub_23F38F938();
  if (v17)
  {
    sub_23F38F900((uint64_t)v20);
    v18 = sub_23F38FA50();
    sub_23F3E54D4(v18, v19);
    sub_23F38F900(v3);
    sub_23F38F124(v0, v3, &qword_256E705F8);
  }
  else
  {
    sub_23F3CDA5C(v10, v11, &qword_256E705F8, v12, v13, v14, v15, v16, v20[0]);
  }
  sub_23F38F98C();
}

void sub_23F3E77A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18[6];

  v1 = sub_23F3E8088();
  v2 = v0 + *(int *)(v1 + 76);
  sub_23F38F908(v1, v3, &qword_256E70720, v4, v5, v6, v7, v8, v18[0]);
  sub_23F38F938();
  if (v16)
  {
    sub_23F38F900((uint64_t)v18);
    sub_23F3CDA74(v17, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t *))sub_23F3E7820);
    sub_23F38F900(v2);
    sub_23F38F99C();
  }
  else
  {
    sub_23F3CDA5C(v9, v10, &qword_256E70600, v11, v12, v13, v14, v15, v18[0]);
  }
  sub_23F38F8EC();
}

uint64_t sub_23F3E7820@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[5];
  _QWORD v19[5];
  _QWORD v20[5];
  __int128 v21[2];
  char v22;
  _BYTE v23[48];
  uint64_t v24;

  sub_23F3E7594();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v20[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    result = swift_willThrowTypedImpl();
LABEL_11:
    *a1 = v4;
    return result;
  }
  sub_23F362678(v21, (uint64_t)v23);
  sub_23F3E5984();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v19[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
LABEL_10:
    result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v23);
    goto LABEL_11;
  }
  sub_23F362678(v21, (uint64_t)v20);
  sub_23F3E7648();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v18[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
LABEL_9:
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v20);
    goto LABEL_10;
  }
  sub_23F362678(v21, (uint64_t)v19);
  sub_23F3E7720();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v24 = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v19);
    goto LABEL_9;
  }
  sub_23F362678(v21, (uint64_t)v18);
  v6 = sub_23F35D2E8(&qword_256E70728);
  v7 = (_QWORD *)swift_allocObject();
  v8 = sub_23F38EB10((uint64_t)v19, v19[3]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (_QWORD *)((char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  v12 = sub_23F38EB10((uint64_t)v18, v18[3]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  v16 = sub_23F38EEF0((uint64_t)v23, (uint64_t)v20, *v10, v14, v7);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v18);
  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v19);
  a2[3] = v6;
  a2[4] = &off_250FD6288;
  *a2 = v16;
  return result;
}

uint64_t sub_23F3E7AD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3E7ADC(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F38F984();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      v11 = sub_23F384B34();
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == (_DWORD)a2)
      {
        v9 = v11;
        v10 = a3[6];
      }
      else
      {
        v9 = sub_23F35D2E8(&qword_256E705E0);
        v10 = a3[9];
      }
    }
    return sub_23F36195C(a1 + v10, a2, v9);
  }
}

uint64_t sub_23F3E7B94()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3E7BA0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23F38F984();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = a4[5];
    }
    else
    {
      v11 = sub_23F384B34();
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
      {
        v9 = v11;
        v10 = a4[6];
      }
      else
      {
        v9 = sub_23F35D2E8(&qword_256E705E0);
        v10 = a4[9];
      }
    }
    return sub_23F36196C(v5 + v10, a2, a2, v9);
  }
  return result;
}

void sub_23F3E7C54()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6170CC();
  if (v0 <= 0x3F)
  {
    sub_23F61B32C();
    if (v1 <= 0x3F)
    {
      sub_23F38C624();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_23F3E7D4C(uint64_t a1, uint64_t a2)
{
  sub_23F3E842C(a2, a1);
  return a2;
}

uint64_t sub_23F3E7D88()
{
  uint64_t v0;

  sub_23F38F944();
  if (*(_QWORD *)(v0 + 160))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
  return swift_deallocObject();
}

uint64_t sub_23F3E7DB8(uint64_t a1, uint64_t a2)
{
  sub_23F3E8490(a2, a1);
  return a2;
}

uint64_t sub_23F3E7E04()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    sub_23F38F9F4();
  return swift_deallocObject();
}

uint64_t sub_23F3E7E2C(uint64_t a1, uint64_t a2)
{
  sub_23F3E842C(a2, a1);
  return a2;
}

uint64_t sub_23F3E7E68()
{
  uint64_t v0;

  sub_23F38F9F4();
  if (*(_QWORD *)(v0 + 80))
    sub_23F38F9EC();
  sub_23F38F9AC();
  return swift_deallocObject();
}

uint64_t sub_23F3E7E8C()
{
  uint64_t v0;

  sub_23F3E8094();
  if (*(_QWORD *)(v0 + 200))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 176);
  return swift_deallocObject();
}

uint64_t sub_23F3E7EBC(uint64_t a1, uint64_t a2)
{
  sub_23F3E811C(a2, a1);
  return a2;
}

uint64_t sub_23F3E7EFC()
{
  sub_23F38F9F4();
  return swift_deallocObject();
}

uint64_t sub_23F3E7F2C(uint64_t a1)
{
  sub_23F3E80CC(a1);
  return a1;
}

uint64_t sub_23F3E7F60(uint64_t a1)
{
  sub_23F3AF940(a1);
  return a1;
}

uint64_t sub_23F3E7F94(uint64_t a1)
{
  sub_23F3E8448(a1);
  return a1;
}

uint64_t sub_23F3E7FC8(uint64_t a1)
{
  sub_23F3EC9A8();
  return a1;
}

uint64_t sub_23F3E7FFC()
{
  uint64_t v0;

  sub_23F3E8094();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 176);
  swift_release();
  if (*(_QWORD *)(v0 + 224))
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 256);
  return swift_deallocObject();
}

uint64_t sub_23F3E8050()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_23F38F9AC();
  return swift_deallocObject();
}

uint64_t sub_23F3E8088()
{
  return _s17CharlieComponentsVMa();
}

uint64_t sub_23F3E8094()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 56);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 96);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
}

_OWORD *sub_23F3E80BC()
{
  return sub_23F3E6204();
}

uint64_t sub_23F3E80C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F3E80CC(uint64_t a1)
{
  uint64_t result;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  if (*(_QWORD *)(a1 + 184))
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
  return result;
}

uint64_t sub_23F3E811C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  v8 = (_OWORD *)(a1 + 160);
  v9 = (_OWORD *)(a2 + 160);
  v10 = *(_QWORD *)(a2 + 184);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = v10;
    *(_QWORD *)(a1 + 192) = v11;
    (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 176);
    *v8 = *v9;
    *(_OWORD *)(a1 + 176) = v12;
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  }
  return a1;
}

uint64_t sub_23F3E81F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  sub_23F361AD0((uint64_t *)a1, (uint64_t *)a2);
  sub_23F361AD0((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  sub_23F361AD0((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  sub_23F361AD0((uint64_t *)(a1 + 120), (uint64_t *)(a2 + 120));
  v4 = *(_QWORD *)(a2 + 184);
  if (!*(_QWORD *)(a1 + 184))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 184) = v4;
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 160, a2 + 160);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 160);
    v6 = *(_OWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v5;
    *(_OWORD *)(a1 + 176) = v6;
    return a1;
  }
  if (!v4)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
    goto LABEL_7;
  }
  sub_23F361AD0((uint64_t *)(a1 + 160), (uint64_t *)(a2 + 160));
  return a1;
}

void *initializeWithTake for PromptRenderer(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC8uLL);
}

uint64_t sub_23F3E82B4(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  if (*(_QWORD *)(a1 + 184))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for PromptRenderer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 200))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptRenderer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for CharlieDynamicEnumerationRenderer()
{
  sub_23F362C18();
}

void type metadata accessor for CharlieDynamicEnumerationCaseRenderer()
{
  sub_23F362C18();
}

uint64_t sub_23F3E8448(uint64_t a1)
{
  uint64_t result;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  if (*(_QWORD *)(a1 + 144))
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  return result;
}

uint64_t sub_23F3E8490(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  v7 = (_OWORD *)(a1 + 120);
  v8 = (_OWORD *)(a2 + 120);
  v9 = *(_QWORD *)(a2 + 144);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = v9;
    *(_QWORD *)(a1 + 152) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 136);
    *v7 = *v8;
    *(_OWORD *)(a1 + 136) = v11;
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  }
  return a1;
}

uint64_t sub_23F3E8544(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  sub_23F361AD0((uint64_t *)a1, (uint64_t *)a2);
  sub_23F361AD0((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  sub_23F361AD0((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  v4 = *(_QWORD *)(a2 + 144);
  if (!*(_QWORD *)(a1 + 144))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 144) = v4;
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 120, a2 + 120);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 120);
    v6 = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 120) = v5;
    *(_OWORD *)(a1 + 136) = v6;
    return a1;
  }
  if (!v4)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
    goto LABEL_7;
  }
  sub_23F361AD0((uint64_t *)(a1 + 120), (uint64_t *)(a2 + 120));
  return a1;
}

void *sub_23F3E85F4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA0uLL);
}

uint64_t sub_23F3E85FC(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 144))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  v6 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v6;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  return a1;
}

uint64_t sub_23F3E869C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 160))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23F3E86DC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for CharlieEnumerationDefinitionPromptRenderer()
{
  sub_23F362C18();
}

void sub_23F3E8750(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(a2 + 24);
  if (v2)
  {
    v3 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v2;
    *(_QWORD *)(a1 + 32) = v3;
    sub_23F3ECB64(a1, a2, v2);
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  sub_23F362928();
}

void sub_23F3E8794(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      sub_23F362D20(**(uint64_t (***)(uint64_t, uint64_t))(v4 - 8));
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
    goto LABEL_7;
  }
  sub_23F361AD0((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  sub_23F362928();
}

void type metadata accessor for CharlieEnumerationCaseDefinitionRenderer()
{
  sub_23F362C18();
}

uint64_t sub_23F3E8814(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_23F37B910();
    v2 = v16;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *(v4 - 2);
      v6 = *(v4 - 1);
      v7 = *v4;
      sub_23F617BA0();
      sub_23F617BA0();
      v8 = sub_23F528430(v5, v6, v7);
      v10 = v9;
      v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v16 + 16);
      if (v13 >= *(_QWORD *)(v16 + 24) >> 1)
        sub_23F37B910();
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = (_QWORD *)(v16 + 24 * v13);
      v14[4] = v8;
      v14[5] = v10;
      v14[6] = v12;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_23F3E8930(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;

  v25 = a2;
  v7 = sub_23F61BD10();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a4 >> 1;
  v27 = a3;
  v10 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_19;
  if (v10)
  {
    v28 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    if (v10 < 0)
    {
LABEL_20:
      __break(1u);
      return;
    }
    v22 = v4;
    for (i = 0; ; ++i)
    {
      v12 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (v27 + i >= v26 || i >= v10)
        goto LABEL_18;
      v15 = v23;
      v14 = v24;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v9, v25 + *(_QWORD *)(v23 + 72) * (v27 + i), v24);
      v16 = sub_23F61BD04();
      v18 = v17;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
      v19 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B47C();
        v19 = v28;
      }
      v20 = *(_QWORD *)(v19 + 16);
      if (v20 >= *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_23F37B47C();
        v19 = v28;
      }
      *(_QWORD *)(v19 + 16) = v20 + 1;
      v21 = v19 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)(v21 + 40) = v18;
      if (v12 == v10)
        return;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
}

uint64_t sub_23F3E8AE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, _QWORD, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = sub_23F35D2E8(&qword_256E704E0);
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (_QWORD *)((char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v21[1] = v1;
    v27 = MEMORY[0x24BEE4AF8];
    sub_23F37BA90();
    v7 = v27;
    v23 = *MEMORY[0x24BE549A0];
    v22 = *MEMORY[0x24BE54960];
    v8 = (uint64_t *)(a1 + 56);
    do
    {
      v26 = v7;
      v9 = *(v8 - 3);
      v10 = *(v8 - 2);
      v12 = *(v8 - 1);
      v11 = *v8;
      v13 = (uint64_t *)((char *)v5 + *(int *)(v25 + 48));
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v9;
      *(_QWORD *)(v14 + 24) = v10;
      *(_BYTE *)(v14 + 32) = 3;
      *v5 = v14;
      v15 = sub_23F6184B8();
      v16 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104);
      v16(v5, v23, v15);
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v12;
      *(_QWORD *)(v17 + 24) = v11;
      v7 = v26;
      *v13 = v17;
      v16(v13, v22, v15);
      v27 = v7;
      v19 = *(_QWORD *)(v7 + 16);
      v18 = *(_QWORD *)(v7 + 24);
      sub_23F617BA0();
      sub_23F617BA0();
      if (v19 >= v18 >> 1)
      {
        sub_23F37BA90();
        v7 = v27;
      }
      v8 += 4;
      *(_QWORD *)(v7 + 16) = v19 + 1;
      sub_23F383004((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v19, &qword_256E704E0);
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_23F3E8CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v2 = v11;
    v4 = a1 + 56;
    do
    {
      sub_23F617BA0();
      sub_23F617BA0();
      v5 = sub_23F61C1F0();
      v7 = v6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(v11 + 16);
      if (v8 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_23F37B47C();
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v7;
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23F3E8DE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *, _QWORD, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t *v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = sub_23F35D2E8(&qword_256E704E0);
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v25 = v1;
    v34 = MEMORY[0x24BEE4AF8];
    sub_23F37BA90();
    v7 = v34;
    v8 = sub_23F35D2E8(&qword_256E70548);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)));
    v29 = *(_QWORD *)(v9 + 72);
    v30 = v8;
    v28 = *MEMORY[0x24BE549A0];
    v27 = *MEMORY[0x24BE54918];
    v26 = v5;
    do
    {
      v33 = v7;
      v11 = *v10;
      v12 = v10[1];
      v13 = (char *)v10 + *(int *)(v30 + 48);
      v14 = (uint64_t *)((char *)v5 + *(int *)(v32 + 48));
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v11;
      *(_QWORD *)(v15 + 24) = v12;
      *(_BYTE *)(v15 + 32) = 3;
      *v5 = v15;
      v16 = sub_23F6184B8();
      v17 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104);
      v17(v5, v28, v16);
      v18 = sub_23F617D08();
      v19 = swift_allocBox();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v20, v13, v18);
      *v14 = v19;
      v21 = v16;
      v7 = v33;
      v17(v14, v27, v21);
      v34 = v7;
      v23 = *(_QWORD *)(v7 + 16);
      v22 = *(_QWORD *)(v7 + 24);
      sub_23F617BA0();
      if (v23 >= v22 >> 1)
      {
        sub_23F37BA90();
        v7 = v34;
      }
      v10 = (uint64_t *)((char *)v10 + v29);
      *(_QWORD *)(v7 + 16) = v23 + 1;
      v5 = v26;
      sub_23F383004((uint64_t)v26, v7+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v23, &qword_256E704E0);
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_23F3E9020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v38 = sub_23F35D2E8(&qword_256E70548);
  v3 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)&v31 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v31 = v1;
    v43 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v9 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
    v35 = *(_QWORD *)(v3 + 72);
    v10 = sub_23F617D08();
    v33 = *(_QWORD *)(v10 - 8);
    v34 = v10;
    v32 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v11 = v10;
    v12 = v37;
    do
    {
      v42 = v7;
      v13 = v38;
      v14 = *(int *)(v38 + 48);
      v15 = &v36[v14];
      v16 = (uint64_t *)((char *)v9 + *(int *)(v38 + 64));
      v17 = *v9;
      v18 = v9[1];
      v32(&v36[v14], (char *)v9 + v14, v11);
      v20 = *v16;
      v19 = v16[1];
      v21 = v16[2];
      v22 = v16[3];
      v39 = v21;
      v40 = v19;
      v23 = (char *)v12 + *(int *)(v13 + 48);
      v24 = (_QWORD *)((char *)v12 + *(int *)(v13 + 64));
      v41 = v17;
      *v12 = v17;
      v12[1] = v18;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v23, v15, v11);
      v26 = v39;
      v25 = v40;
      *v24 = v20;
      v24[1] = v25;
      v24[2] = v26;
      v24[3] = v22;
      swift_bridgeObjectRetain_n();
      sub_23F39BA5C(v20, v25);
      sub_23F3625D8((uint64_t)v12, &qword_256E70548);
      v8 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B47C();
        v8 = v43;
      }
      v27 = *(_QWORD *)(v8 + 16);
      v28 = v42;
      if (v27 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_23F37B47C();
        v8 = v43;
      }
      v9 = (uint64_t *)((char *)v9 + v35);
      *(_QWORD *)(v8 + 16) = v27 + 1;
      v29 = v8 + 16 * v27;
      *(_QWORD *)(v29 + 32) = v41;
      *(_QWORD *)(v29 + 40) = v18;
      v7 = v28 - 1;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_23F3E9264(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v2 = (uint64_t *)(sub_23F617BA0() + 88);
  v3 = MEMORY[0x24BEE4AF8];
  do
  {
    v4 = *(v2 - 2);
    if (v4)
    {
      v5 = *(v2 - 3);
      v6 = *(v2 - 1);
      v7 = *v2;
      sub_23F39BA5C(v5, *(v2 - 2));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377598();
        v3 = v10;
      }
      v8 = *(_QWORD *)(v3 + 16);
      if (v8 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_23F377598();
        v3 = v11;
      }
      *(_QWORD *)(v3 + 16) = v8 + 1;
      v9 = (_QWORD *)(v3 + 32 * v8);
      v9[4] = v5;
      v9[5] = v4;
      v9[6] = v6;
      v9[7] = v7;
    }
    v2 += 10;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_23F3E9380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v43 = sub_23F35D2E8(&qword_256E70548);
  v3 = MEMORY[0x24BDAC7A8](v43);
  v42 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v35 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
    return MEMORY[0x24BEE4AF8];
  v35 = v1;
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v39 = *(_QWORD *)(v5 + 72);
  v9 = sub_23F617D08();
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  v36 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  sub_23F617BA0();
  v10 = MEMORY[0x24BEE4AF8];
  v40 = a1;
  do
  {
    v47 = v10;
    v45 = v8;
    v46 = v7;
    v11 = (uint64_t *)(a1 + v8);
    v12 = v43;
    v13 = *(int *)(v43 + 48);
    v14 = &v41[v13];
    v15 = (uint64_t *)((char *)v11 + *(int *)(v43 + 64));
    v16 = *v11;
    v17 = v11[1];
    v18 = v38;
    v36(&v41[v13], (char *)v11 + v13, v38);
    v19 = *v15;
    v20 = v15[1];
    v21 = v15[2];
    v22 = v15[3];
    v23 = (uint64_t)v42;
    v24 = (char *)v42 + *(int *)(v12 + 48);
    v25 = (_QWORD *)((char *)v42 + *(int *)(v12 + 64));
    *v42 = v16;
    *(_QWORD *)(v23 + 8) = v17;
    v26 = v18;
    v27 = v19;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v24, v14, v26);
    *v25 = v27;
    v25[1] = v20;
    v25[2] = v21;
    v25[3] = v22;
    sub_23F39BA5C(v27, v20);
    v44 = v21;
    sub_23F39BA5C(v27, v20);
    sub_23F617BA0();
    sub_23F3625D8(v23, &qword_256E70548);
    if (v20)
    {
      v10 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377598();
        v10 = v32;
      }
      v28 = v45;
      v29 = v46;
      v30 = *(_QWORD *)(v10 + 16);
      if (v30 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_23F377598();
        v10 = v33;
      }
      *(_QWORD *)(v10 + 16) = v30 + 1;
      v31 = (_QWORD *)(v10 + 32 * v30);
      v31[4] = v27;
      v31[5] = v20;
      v31[6] = v44;
      v31[7] = v22;
    }
    else
    {
      v28 = v45;
      v29 = v46;
      v10 = v47;
    }
    a1 = v40;
    v8 = v28 + v39;
    v7 = v29 - 1;
  }
  while (v7);
  swift_bridgeObjectRelease();
  return v10;
}

void sub_23F3E95F4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t **v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t **v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t *v51;
  char *v52;
  unint64_t v54;
  uint64_t **v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  _QWORD *v70;
  char *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD v81[3];
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t **v105;
  uint64_t *v106;
  char *v107;
  uint64_t v108;
  char v109;
  uint64_t v110;

  v2 = sub_23F35D2E8(&qword_256E70548);
  v92 = *(_QWORD *)(v2 - 8);
  v93 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v108 = (uint64_t)v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v86 = (_QWORD *)((char *)v81 - v5);
  v91 = type metadata accessor for DynamicEnumeration.Case(0);
  v95 = *(_QWORD *)(v91 - 8);
  v6 = MEMORY[0x24BDAC7A8](v91);
  v8 = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v81 - v9;
  v90 = sub_23F35D2E8((uint64_t *)&qword_256E71C40);
  v11 = MEMORY[0x24BDAC7A8](v90);
  v89 = (uint64_t)v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v84 = (uint64_t)v81 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v83 = (uint64_t)v81 - v15;
  v16 = (char *)(a1[3] >> 1);
  v96 = (char *)a1[2];
  v97 = v16;
  v17 = __OFSUB__(v16, v96);
  v18 = v16 - v96;
  if (v17)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v81[2] = *a1;
  v94 = a1[1];
  v98 = a1[4];
  if (*(_QWORD *)(v98 + 16) >= v18)
    v19 = v18;
  else
    v19 = *(_QWORD *)(v98 + 16);
  v110 = MEMORY[0x24BEE4AF8];
  sub_23F37BE28();
  v109 = 0;
  if ((v19 & 0x8000000000000000) == 0)
  {
    v85 = v10;
    if (v19)
    {
      swift_unknownObjectRetain();
      v20 = sub_23F617BA0();
      v21 = 0;
      v88 = v96 - v97;
      v22 = (uint64_t **)(v20 + 48);
      v99 = v19;
      v87 = v8;
      do
      {
        if (v19 == v21)
        {
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
        if ((v109 & 1) != 0)
          goto LABEL_41;
        if (!(v88 + v21))
          goto LABEL_49;
        if ((uint64_t)&v96[v21] >= (uint64_t)v97)
          goto LABEL_42;
        sub_23F3EC924(v94 + *(_QWORD *)(v95 + 72) * (_QWORD)&v96[v21], (uint64_t)v8, type metadata accessor for DynamicEnumeration.Case);
        v23 = *(_QWORD *)(v98 + 16);
        if (v21 == v23)
          goto LABEL_48;
        if (v21 >= v23)
          goto LABEL_43;
        v24 = (uint64_t)v22[4];
        v25 = (uint64_t)v22[5];
        v26 = (uint64_t)v22[2];
        v101 = (uint64_t)v22[3];
        v27 = v101;
        v102 = v24;
        v100 = v26;
        v28 = (uint64_t)v8;
        v29 = *v22;
        v104 = (uint64_t)v22[1];
        v30 = v104;
        v105 = v22;
        v106 = v29;
        v107 = (char *)v21;
        v33 = v22 - 2;
        v32 = (uint64_t)*(v22 - 2);
        v31 = (uint64_t)v33[1];
        v103 = v32;
        v34 = v89;
        v35 = (uint64_t *)(v89 + *(int *)(v90 + 48));
        sub_23F3EC95C(v28, v89);
        *v35 = v32;
        v35[1] = v31;
        v36 = v31;
        v35[2] = (uint64_t)v29;
        v35[3] = v30;
        v37 = v100;
        v35[4] = v100;
        v35[5] = v27;
        v35[6] = v24;
        v35[7] = v25;
        v38 = v25;
        v39 = v108;
        v40 = v108 + *(int *)(v93 + 48);
        v41 = (uint64_t *)(v108 + *(int *)(v93 + 64));
        v42 = v34 + *(int *)(v91 + 20);
        v43 = sub_23F617D08();
        v44 = v40;
        v45 = (_QWORD *)v39;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v44, v42, v43);
        v46 = v101;
        v47 = v102;
        *v41 = v37;
        v41[1] = v46;
        v41[2] = v47;
        v41[3] = v38;
        *v45 = v103;
        v45[1] = v36;
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F39BA5C(v37, v46);
        sub_23F617BA0();
        sub_23F39BA5C(v37, v46);
        sub_23F3625D8(v34, (uint64_t *)&qword_256E71C40);
        v48 = v110;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37BE28();
          v48 = v110;
        }
        v49 = v107;
        v50 = *(_QWORD *)(v48 + 16);
        v8 = v87;
        if (v50 >= *(_QWORD *)(v48 + 24) >> 1)
        {
          sub_23F37BE28();
          v48 = v110;
        }
        v21 = (unint64_t)(v49 + 1);
        *(_QWORD *)(v48 + 16) = v50 + 1;
        sub_23F383004(v108, v48+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(_QWORD *)(v92 + 72) * v50, &qword_256E70548);
        v22 = v105 + 8;
        v19 = v99;
      }
      while (v99 != v21);
      v87 = &v96[v21];
      v10 = v85;
      if ((v109 & 1) == 0)
        goto LABEL_22;
      goto LABEL_39;
    }
    swift_unknownObjectRetain();
    sub_23F617BA0();
    v87 = v96;
LABEL_22:
    if (v87 == v97)
    {
LABEL_39:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return;
    }
    v82 = v97 - 1;
    v51 = (uint64_t *)(v98 + (v19 << 6) + 48);
    v52 = v87;
    while ((uint64_t)v87 >= (uint64_t)v96 && (uint64_t)v52 < (uint64_t)v97)
    {
      sub_23F3EC924(v94 + *(_QWORD *)(v95 + 72) * (_QWORD)v52, (uint64_t)v10, type metadata accessor for DynamicEnumeration.Case);
      v54 = *(_QWORD *)(v98 + 16);
      if (v19 == v54)
      {
        sub_23F3663AC((uint64_t)v10, type metadata accessor for DynamicEnumeration.Case);
        goto LABEL_39;
      }
      if (v19 >= v54)
        goto LABEL_45;
      v99 = v19;
      v55 = (uint64_t **)v51[5];
      v104 = v51[4];
      v56 = v104;
      v105 = v55;
      v57 = v51[3];
      v58 = (uint64_t)v10;
      v59 = v51[1];
      v102 = v51[2];
      v60 = v102;
      v103 = v57;
      v107 = v52;
      v108 = v59;
      v62 = *v51;
      v100 = *(v51 - 1);
      v61 = v100;
      v101 = v62;
      v106 = v51;
      v89 = *(v51 - 2);
      v63 = v90;
      v64 = v84;
      v65 = (_QWORD *)(v84 + *(int *)(v90 + 48));
      sub_23F3EC95C(v58, v84);
      *v65 = v89;
      v65[1] = v61;
      v66 = v108;
      v65[2] = v62;
      v65[3] = v66;
      v65[4] = v60;
      v65[5] = v57;
      v65[6] = v56;
      v65[7] = v55;
      v67 = v64;
      v68 = v83;
      sub_23F383004(v67, v83, (uint64_t *)&qword_256E71C40);
      v69 = (uint64_t *)(v68 + *(int *)(v63 + 48));
      v70 = v86;
      v71 = (char *)v86 + *(int *)(v93 + 48);
      v72 = (_QWORD *)((char *)v86 + *(int *)(v93 + 64));
      v89 = *v69;
      v88 = v69[1];
      v73 = v69[4];
      v74 = v69[5];
      v8 = (char *)v69[6];
      v75 = v69[7];
      v76 = v68 + *(int *)(v91 + 20);
      v77 = sub_23F617D08();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v71, v76, v77);
      *v72 = v73;
      v72[1] = v74;
      v72[2] = (uint64_t)v8;
      v72[3] = v75;
      v78 = v88;
      *v70 = v89;
      v70[1] = v78;
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F39BA5C(v102, v103);
      sub_23F617BA0();
      sub_23F39BA5C(v73, v74);
      sub_23F3625D8(v68, (uint64_t *)&qword_256E71C40);
      v79 = v110;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37BE28();
        v79 = v110;
      }
      v80 = *(_QWORD *)(v79 + 16);
      if (v80 >= *(_QWORD *)(v79 + 24) >> 1)
      {
        sub_23F37BE28();
        v79 = v110;
      }
      *(_QWORD *)(v79 + 16) = v80 + 1;
      sub_23F383004((uint64_t)v86, v79+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(_QWORD *)(v92 + 72) * v80, &qword_256E70548);
      v10 = v85;
      if ((v109 & 1) == 0)
      {
        v51 = v106 + 8;
        v19 = v99 + 1;
        v52 = v107 + 1;
        if (v82 != v107)
          continue;
      }
      goto LABEL_39;
    }
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  sub_23F3663AC((uint64_t)v8, type metadata accessor for DynamicEnumeration.Case);
LABEL_49:
  __break(1u);
}

uint64_t sub_23F3E9DA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F35D2E8(&qword_256E70CC0);
    v3 = sub_23F61CA90();
  }
  else
  {
    v3 = MEMORY[0x24BEE4B00];
  }
  v6 = v3;
  sub_23F3EC358(a1, 1, (uint64_t)&v6);
  v4 = v6;
  if (v1)
    swift_release();
  return v4;
}

void sub_23F3E9E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  NSObject *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, _QWORD);
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t);
  uint64_t v79;
  uint64_t (*v80)(uint64_t, _QWORD);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  size_t v115;
  size_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  os_log_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unsigned __int8 v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;

  sub_23F362ABC();
  a19 = v22;
  a20 = v23;
  v151 = v21;
  v162 = v24;
  v26 = v25;
  v149 = v27;
  v28 = sub_23F61BD10();
  sub_23F383E7C(v28, (uint64_t)&a10);
  v154 = v29;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F36285C();
  sub_23F3B13F0(v31);
  v32 = sub_23F61BD28();
  sub_23F383E7C(v32, (uint64_t)&v175);
  v146 = v33;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F36285C();
  sub_23F3B13F0(v35);
  v36 = sub_23F61BC8C();
  sub_23F383E7C(v36, (uint64_t)&a14);
  v38 = v37;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F362AAC();
  v160 = (char *)(v40 - v41);
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)&v140 - v43;
  v45 = sub_23F619E98();
  sub_23F383E7C(v45, (uint64_t)&a11);
  v150 = v46;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F36285C();
  v49 = (uint64_t *)sub_23F3B1E50(v48);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F362838();
  if (qword_256E6EE90 != -1)
    goto LABEL_45;
  while (1)
  {
    v51 = sub_23F361498((uint64_t)v49, (uint64_t)qword_256E7FE90);
    sub_23F3C08CC();
    sub_23F3EC924(v51, v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F35D2E8(&qword_256E70CB8);
    sub_23F617C48();
    v52 = v163;
    sub_23F3663AC(v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    v53 = MEMORY[0x24266F190]();
    v54 = sub_23F3EEE7C(v52, v53);
    v157 = v55;
    v57 = v56;
    v59 = v58;
    v60 = *(_QWORD *)(MEMORY[0x24266F190]() + 16);
    swift_bridgeObjectRelease();
    v148 = v59;
    v61 = v59 >> 1;
    v158 = v59 >> 1;
    if (v52 < v60)
    {
      sub_23F3ECBB0();
      v62 = v38;
      v63 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
      v64 = v159;
      v63(v44, v26, v159);
      v63(v160, v26, v64);
      swift_unknownObjectRetain_n();
      v65 = sub_23F619E8C();
      v66 = sub_23F61C610();
      if (os_log_type_enabled(v65, (os_log_type_t)v66))
      {
        v142 = v66;
        v143 = v65;
        v144 = v26;
        v67 = sub_23F366668();
        v141 = sub_23F366668();
        v163 = v141;
        *(_DWORD *)v67 = 136315650;
        v68 = v145;
        sub_23F61BC74();
        v69 = sub_23F61BD1C();
        v71 = v70;
        sub_23F384430();
        sub_23F3841CC(v68, v72);
        sub_23F37AE00(v69, v71, &v163);
        v173 = v73;
        sub_23F61C790();
        sub_23F362C60();
        v74 = *(void (**)(char *, uint64_t))(v62 + 8);
        v74(v44, v64);
        *(_WORD *)(v67 + 12) = 2048;
        sub_23F3ECB24();
        if (!__OFSUB__(v158, v57))
        {
          v173 = v158 - v57;
          sub_23F61C790();
          v75 = sub_23F3ECB24();
          *(_WORD *)(v67 + 22) = 2048;
          v76 = (uint64_t)v160;
          v77 = *(_QWORD *)(MEMORY[0x24266F190](v75) + 16);
          swift_bridgeObjectRelease();
          v74((char *)v76, v64);
          v173 = v77;
          sub_23F61C790();
          _os_log_impl(&dword_23F35A000, v143, (os_log_type_t)v142, "Enum cases for \"%s\" truncated to first %ld out of %ld cases", (uint8_t *)v67, 0x20u);
          swift_arrayDestroy();
          sub_23F366530();
        }
        goto LABEL_48;
      }
      v78 = *(void (**)(uint64_t))(v38 + 8);
      v79 = sub_23F3ECB90();
      v78(v79);
      sub_23F3ECB24();
      ((void (*)(char *, uint64_t))v78)(v44, v64);

      sub_23F3ECB24();
      sub_23F384430();
      sub_23F3841CC(v26, v80);
      v61 = v158;
    }
    v26 = v151;
    v38 = sub_23F3A575C();
    v82 = v81;
    sub_23F3EC874(v26, (uint64_t)&v173);
    v83 = v61 - v57;
    if (__OFSUB__(v61, v57))
      break;
    v20 = MEMORY[0x24BEE4AF8];
    v150 = v54;
    v147 = v82;
    v146 = v38;
    if (!v83)
    {
LABEL_23:
      v104 = v148;
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v173);
      LOBYTE(v105) = sub_23F5250A0(v20);
      v107 = v106;
      sub_23F362D18();
      LODWORD(v158) = v107 & 1;
      if ((v107 & 1) != 0)
      {
        sub_23F384120();
        sub_23F3ECAE4();
        v109 = 0;
        v110 = 0;
        v105 = v105;
        v111 = v105;
        v112 = v105;
      }
      else
      {
        sub_23F383738();
        sub_23F3E8930(v54, v157, v57, v104);
        v114 = v113;
        v115 = sub_23F383738();
        v116 = sub_23F54269C(v115, v114);
        sub_23F3ECAC4();
        sub_23F362D18();
        sub_23F3ECAC4();
        sub_23F3ECAC4();
        v117 = *(_QWORD *)(v116 + 16);
        v118 = MEMORY[0x24BEE4AF8];
        v157 = v116;
        if (v117)
        {
          v156 = 0;
          v163 = MEMORY[0x24BEE4AF8];
          sub_23F37B87C();
          v118 = v163;
          v119 = (_QWORD *)(v116 + 56);
          do
          {
            v160 = (char *)v118;
            v120 = *(v119 - 2);
            sub_23F3B1FF8(*(v119 - 3));
            v122 = v119[1];
            v121 = v119[2];
            v123 = v119[6];
            v159 = v119[5];
            sub_23F384A00();
            v162 = v120;
            sub_23F383E5C();
            sub_23F383738();
            sub_23F3ECB74(v122);
            sub_23F389CDC();
            sub_23F38458C();
            sub_23F362984();
            v118 = (uint64_t)v160;
            sub_23F39BB1C(v122, v121);
            v163 = v118;
            v124 = *(_QWORD *)(v118 + 16);
            if (v124 >= *(_QWORD *)(v118 + 24) >> 1)
            {
              sub_23F37B87C();
              v118 = v163;
            }
            v119 += 10;
            *(_QWORD *)(v118 + 16) = v124 + 1;
            v125 = (_QWORD *)(v118 + 32 * v124);
            v126 = v162;
            v125[4] = v161;
            v125[5] = v126;
            v125[6] = v159;
            v125[7] = v123;
            --v117;
          }
          while (v117);
          v127 = v151;
          sub_23F3ECBF0();
        }
        else
        {
          v127 = v26;
        }
        v128 = sub_23F3E8AE8(v118);
        v162 = sub_23F3E9DA4(v128);
        v163 = MEMORY[0x24BEE4B08];
        sub_23F384B00();
        sub_23F35D2E8(&qword_256E70898);
        sub_23F61C55C();
        sub_23F61C55C();
        sub_23F3ECB58(v163);
        v163 = 0;
        v164 = 0xE000000000000000;
        sub_23F383EB0();
        sub_23F3ECB90();
        sub_23F61C280();
        sub_23F384120();
        sub_23F61C280();
        v173 = sub_23F3E8CE0(v118);
        sub_23F35D2E8(&qword_256E70580);
        sub_23F3EC7C8();
        sub_23F61C088();
        sub_23F362D18();
        sub_23F383E5C();
        sub_23F3ECB9C();
        sub_23F61C280();
        swift_bridgeObjectRelease_n();
        sub_23F61C280();
        swift_bridgeObjectRelease_n();
        v111 = v163;
        v109 = v164;
        sub_23F382EF8(v127 + 120, (uint64_t)&v163, &qword_256E71C38);
        if (v166)
        {
          sub_23F35EA9C(&v163, v166);
          v129 = swift_retain();
          v130 = (_QWORD *)sub_23F3E9264(v129);
          sub_23F3ECB90();
          sub_23F415CF0(v130, v131);
          sub_23F362D18();
          v105 = v173;
          sub_23F3B1FF8(v174);
          v160 = (char *)v175;
          v159 = v176;
          _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v163);
          sub_23F384120();
          v108 = swift_release_n();
        }
        else
        {
          sub_23F3625D8((uint64_t)&v163, &qword_256E71C38);
          swift_release();
          sub_23F384120();
          v105 = 0;
          sub_23F3ECAE4();
        }
        v112 = v162;
        v110 = v156;
      }
      v132 = v158;
      v163 = v112;
      LOBYTE(v164) = (_DWORD)v158 != 0;
      MEMORY[0x24BDAC7A8](v108);
      *(&v140 - 2) = (uint64_t)&v163;
      sub_23F3A8518((void (*)(_OWORD *__return_ptr, _QWORD *))sub_23F3B1078, v111, v109, v110, v132, (uint64_t)&v173);
      v133 = v174;
      v162 = v173;
      v134 = v175;
      v135 = v176;
      sub_23F3B0CFC(v112, v132);
      sub_23F3B1080(v111, v109, v110, v132);
      sub_23F383004((uint64_t)&v173, (uint64_t)&v163, &qword_256E70D10);
      if ((v167 & 1) != 0)
      {
        sub_23F3B115C(v105, v161, (uint64_t)v160, v159, v132);
        LOBYTE(v105) = v162;
        goto LABEL_40;
      }
      if (v132)
      {
        sub_23F3B10B0((uint64_t)&v173);
LABEL_40:
        sub_23F3ECB1C();
        *v149 = v105;
        sub_23F3ECA70();
      }
      else
      {
        sub_23F383EB0();
        sub_23F3668F4();
        sub_23F383E5C();
        v136 = v161;
        v137 = (uint64_t)v160;
        v138 = v159;
        sub_23F39BA5C(v105, v161);
        sub_23F3837B0();
        sub_23F383EB0();
        sub_23F3668F4();
        sub_23F383E5C();
        sub_23F3ECAD0();
        sub_23F3ECA58();
        sub_23F362D18();
        sub_23F384120();
        sub_23F383EB0();
        sub_23F3668F4();
        sub_23F383E5C();
        sub_23F3ECAD0();
        sub_23F3837B0();
        sub_23F362D18();
        sub_23F384120();
        v139 = v149;
        *v149 = v162;
        v139[1] = v133;
        v139[2] = v134;
        v139[3] = v135;
        v139[4] = v105;
        v139[5] = v136;
        v139[6] = v137;
        v139[7] = v138;
        *((_BYTE *)v139 + 64) = 0;
        sub_23F3ECA58();
        sub_23F3837B0();
        sub_23F362D18();
        sub_23F384120();
        sub_23F3ECB1C();
        sub_23F39BB1C(v105, v136);
      }
      sub_23F362948();
      return;
    }
    v84 = v61;
    v172 = MEMORY[0x24BEE4AF8];
    v49 = &v172;
    sub_23F3ECB58(v83);
    sub_23F37B860(v85, v86, v87);
    v88 = (char *)v156;
    if (v156 < 0)
      goto LABEL_47;
    v89 = 0;
    v152 = v57;
    while (1)
    {
      v44 = (char *)(v89 + 1);
      if (__OFADD__(v89, 1))
        break;
      if (v57 + v89 >= v84 || v89 >= (uint64_t)v88)
        goto LABEL_44;
      v91 = v154;
      v92 = v153;
      v93 = v155;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v154 + 16))(v153, v157 + *(_QWORD *)(v154 + 72) * (v57 + v89), v155);
      v94 = v176;
      v95 = v177;
      sub_23F35EA9C(&v173, v176);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v95 + 16))(&v163, v92, v94, v95);
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v92, v93);
      v96 = v163;
      v49 = (uint64_t *)v164;
      v97 = v165;
      v38 = v166;
      v98 = v167;
      v162 = v168;
      sub_23F3B1FF8(v169);
      v160 = (char *)v170;
      LODWORD(v159) = v171;
      v20 = v172;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F3B1F7C(0, *(_QWORD *)(v20 + 16) + 1);
        v20 = v172;
      }
      v100 = *(_QWORD *)(v20 + 16);
      v99 = *(_QWORD *)(v20 + 24);
      v26 = v100 + 1;
      v88 = (char *)v156;
      if (v100 >= v99 >> 1)
      {
        sub_23F3B1F7C(v99 > 1, v100 + 1);
        v88 = (char *)v156;
        v20 = v172;
      }
      *(_QWORD *)(v20 + 16) = v26;
      v101 = v20 + 72 * v100;
      *(_QWORD *)(v101 + 32) = v96;
      *(_QWORD *)(v101 + 40) = v49;
      *(_QWORD *)(v101 + 48) = v97;
      *(_QWORD *)(v101 + 56) = v38;
      v102 = v162;
      *(_QWORD *)(v101 + 64) = v98;
      *(_QWORD *)(v101 + 72) = v102;
      v103 = (uint64_t)v160;
      *(_QWORD *)(v101 + 80) = v161;
      *(_QWORD *)(v101 + 88) = v103;
      *(_BYTE *)(v101 + 96) = v159;
      ++v89;
      v57 = v152;
      v84 = v158;
      if (v44 == v88)
      {
        v54 = v150;
        v26 = v151;
        sub_23F3ECBF0();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_once();
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
}

uint64_t sub_23F3EAA98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v6 = sub_23F3A575C();
  v8 = v7;
  sub_23F3E9E30(a1, a2, v9, v10, v11, v12, v13, v14, v20, v21, v22, v23, v24, v25, v27, v29, v31, v33, v35, v37);
  if ((v40 & 1) != 0)
  {
    result = sub_23F362C60();
    *(_QWORD *)a3 = v26;
    *(_QWORD *)(a3 + 8) = v28;
    *(_QWORD *)(a3 + 16) = v30;
    *(_QWORD *)(a3 + 24) = v32;
    *(_QWORD *)(a3 + 32) = v34;
    *(_QWORD *)(a3 + 40) = v36;
    *(_QWORD *)(a3 + 48) = v38;
    *(_QWORD *)(a3 + 56) = v39;
    *(_BYTE *)(a3 + 64) = 1;
  }
  else
  {
    sub_23F384B00();
    swift_bridgeObjectRetain_n();
    v16 = sub_23F3ECB90();
    sub_23F39BA5C(v16, v17);
    v18 = sub_23F3B13CC(MEMORY[0x24BEE4B08], v6, v8);
    sub_23F369004(v18);
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = v8;
    *(_QWORD *)(a3 + 16) = v19;
    *(_QWORD *)(a3 + 24) = v32;
    *(_QWORD *)(a3 + 32) = v34;
    *(_QWORD *)(a3 + 40) = v36;
    *(_QWORD *)(a3 + 48) = v38;
    *(_QWORD *)(a3 + 56) = v39;
    *(_BYTE *)(a3 + 64) = 0;
    sub_23F3EC8A8(v26, v28, v30, v32, v34, v36, v38, v39, 0);
    return sub_23F362C60();
  }
  return result;
}

void sub_23F3EABD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];

  sub_23F362ABC();
  v2 = v1;
  sub_23F35D2E8(&qword_256E70CE8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F38F964();
  v6 = v5 - v4;
  sub_23F61BCF8();
  v7 = sub_23F3B1F5C();
  sub_23F3ECB2C(v6);
  if (v8)
  {
    sub_23F3625D8(v6, &qword_256E70CE8);
    sub_23F3ECB00(2);
    *(_BYTE *)(v2 + 64) = 1;
  }
  else
  {
    v9 = sub_23F61BC2C();
    v11 = v10;
    sub_23F383F80(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8));
    sub_23F382EF8(v0, (uint64_t)v23, &qword_256E71C38);
    if (v23[3])
    {
      sub_23F3ECB9C();
      sub_23F61C1FC();
      sub_23F3ECB9C();
      v12 = sub_23F61C1F0();
      v14 = v13;
      sub_23F3ECA90();
      sub_23F61C1FC();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      v15 = v21;
      v16 = v22;
      v17 = sub_23F3ECBD8();
      *(_QWORD *)(v17 + 16) = v12;
      *(_QWORD *)(v17 + 24) = v14;
      sub_23F362D08();
      v18 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v15 = 0;
      v16 = 0;
      v17 = 0;
      v18 = 0;
    }
    sub_23F3625D8((uint64_t)v23, &qword_256E71C38);
    sub_23F383E5C();
    v19 = sub_23F3B13CC(MEMORY[0x24BEE4B08], v9, v11);
    sub_23F369004(v19);
    *(_QWORD *)v2 = v9;
    *(_QWORD *)(v2 + 8) = v11;
    *(_QWORD *)(v2 + 16) = v20;
    *(_QWORD *)(v2 + 24) = 0;
    *(_QWORD *)(v2 + 32) = v15;
    *(_QWORD *)(v2 + 40) = v16;
    *(_QWORD *)(v2 + 48) = v17;
    *(_QWORD *)(v2 + 56) = v18;
    *(_BYTE *)(v2 + 64) = 0;
  }
  sub_23F362948();
}

void sub_23F3EAD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  int64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  _DWORD *v55;
  uint64_t v56;
  _DWORD *v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, _QWORD);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  unint64_t v131;
  char v132;
  uint64_t *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD v173[3];
  unint64_t v174;
  uint64_t v175;

  sub_23F362ABC();
  a19 = v22;
  a20 = v23;
  v140 = v21;
  v156 = v24;
  v155 = v25;
  v27 = v26;
  v132 = v28;
  v149 = *(_QWORD *)(type metadata accessor for DynamicEnumeration.Case(0) - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F36285C();
  v31 = sub_23F3B13F0(v30);
  v32 = type metadata accessor for DynamicEnumeration(v31);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F38F964();
  v36 = v35 - v34;
  v37 = sub_23F619E98();
  sub_23F383E7C(v37, (uint64_t)&a9);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F36285C();
  v40 = (uint64_t *)sub_23F3B1E50(v39);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F362838();
  if (qword_256E6EE90 != -1)
    goto LABEL_37;
  while (1)
  {
    v42 = sub_23F361498((uint64_t)v40, (uint64_t)qword_256E7FE90);
    sub_23F3C08CC();
    sub_23F3EC924(v42, v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F35D2E8(&qword_256E70CB8);
    sub_23F617C48();
    v43 = v158;
    sub_23F3663AC(v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    v44 = *(_QWORD *)(v27 + *(int *)(v32 + 20));
    v45 = sub_23F3EEE90(v43, v44);
    v152 = v46;
    v48 = v47;
    v50 = v49;
    v51 = *(_QWORD *)(v44 + 16);
    sub_23F3668F4();
    v52 = v50 >> 1;
    v151 = v50 >> 1;
    if (v43 < v51)
    {
      sub_23F3ECBB0();
      sub_23F3EC924(v27, v36, type metadata accessor for DynamicEnumeration);
      swift_unknownObjectRetain();
      v53 = sub_23F619E8C();
      v54 = sub_23F61C610();
      if (os_log_type_enabled(v53, v54))
      {
        v55 = (_DWORD *)sub_23F366668();
        *v55 = 134218240;
        v56 = v52 - v48;
        if (!__OFSUB__(v52, v48))
        {
          v57 = v55;
          v158 = v56;
          sub_23F61C790();
          sub_23F3ECBC8();
          *((_WORD *)v57 + 6) = 2048;
          v58 = *(_QWORD *)(*(_QWORD *)(v36 + *(int *)(v32 + 20)) + 16);
          sub_23F3663AC(v36, type metadata accessor for DynamicEnumeration);
          v158 = v58;
          sub_23F61C790();
          _os_log_impl(&dword_23F35A000, v53, v54, "Enum cases for dynamic enumeration truncated to first %ld out of %ld cases", (uint8_t *)v57, 0x16u);
          sub_23F366530();
        }
        goto LABEL_40;
      }
      sub_23F3663AC(v36, type metadata accessor for DynamicEnumeration);

      sub_23F3ECBC8();
      sub_23F384430();
      sub_23F3841CC(v154, v59);
    }
    v36 = (uint64_t)v140;
    v60 = v140[18];
    v32 = v140[19];
    sub_23F35EA9C(v140 + 15, v60);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v32 + 24))(&v158, v27, v155, v156, v60, v32);
    v143 = v158;
    v133 = (uint64_t *)v159;
    v134 = (unint64_t)v160;
    v135 = v161;
    v136 = v162;
    v137 = v163;
    v138 = v164;
    v139 = v165;
    v141 = v166;
    sub_23F3EC874((uint64_t)v140, (uint64_t)v173);
    v61 = v52 - v48;
    if (__OFSUB__(v52, v48))
      break;
    v20 = MEMORY[0x24BEE4AF8];
    v142 = v45;
    if (!v61)
    {
LABEL_23:
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v173);
      v72 = sub_23F5250A0(v20);
      v74 = v73;
      sub_23F362D18();
      if ((v74 & 1) != 0)
      {
        sub_23F3ECA34();
        v76 = v72;
        v77 = 1;
        v78 = v76;
        v157 = v76;
      }
      else
      {
        v173[0] = v45;
        v173[1] = v152;
        v173[2] = v48;
        v174 = v50;
        v175 = v72;
        swift_unknownObjectRetain();
        sub_23F3B0D54(v72, 0);
        sub_23F3E95F4(v173);
        v80 = v79;
        sub_23F3ECBC8();
        sub_23F3ECB84();
        sub_23F3ECB84();
        v81 = sub_23F3E8DE4(v80);
        v76 = sub_23F3E9DA4(v81);
        v169 = v80;
        sub_23F3EBB04(&v169, &v158);
        v32 = v159;
        v82 = (uint64_t)v160;
        if ((v141 & 1) != 0)
        {
          sub_23F38432C();
          sub_23F362D18();
          sub_23F362C60();
          sub_23F3ECA34();
          v78 = v143;
          v77 = 1;
          v157 = v143;
        }
        else
        {
          sub_23F3ECB58(v158);
          v158 = v83;
          v159 = v32;
          v160 = (uint64_t *)v82;
          sub_23F3B1FF8(v143);
          v162 = (uint64_t)v133;
          v163 = v134;
          v164 = v135;
          v165 = v136;
          v166 = v137;
          v167 = v138;
          v168 = v139;
          sub_23F3ECA10(v91, v84, v85, v86, v87, v88, v89, v90, v130);
          sub_23F383738();
          sub_23F617BA0();
          sub_23F3668F4();
          sub_23F384A00();
          sub_23F389CDC();
          sub_23F3ECAB0();
          v150 = sub_23F3EBC64(v155, v32, v82, (unint64_t *)&v161);
          v148 = v92;
          v146 = v93;
          sub_23F362984();
          sub_23F362D08();
          sub_23F38458C();
          sub_23F362D18();
          sub_23F362C60();
          sub_23F3EC9FC();
          sub_23F362984();
          sub_23F362D08();
          sub_23F38458C();
          sub_23F362D18();
          sub_23F362C60();
          sub_23F3EC9FC();
          v158 = v80;
          v159 = v143;
          v160 = v133;
          v161 = v134;
          v162 = v135;
          v163 = v136;
          v164 = v137;
          v165 = v138;
          v166 = v139;
          sub_23F3ECA10(v143, v94, v95, v96, v97, v98, v99, v100, v132);
          sub_23F617BA0();
          sub_23F384A00();
          sub_23F389CDC();
          sub_23F383738();
          sub_23F3ECAB0();
          sub_23F3EBDD8(v80, (uint64_t)v140, (uint64_t)&v169);
          sub_23F362984();
          sub_23F362D08();
          sub_23F38458C();
          sub_23F38432C();
          sub_23F3EC9FC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23F38458C();
          sub_23F38432C();
          sub_23F3EC9FC();
          v78 = v150;
          v45 = v146;
          v32 = v148;
          v77 = 0;
          v157 = v169;
          sub_23F3ECB58(v170);
          v154 = v171;
          v153 = v172;
        }
      }
      v158 = v76;
      v101 = v74 & 1;
      LOBYTE(v159) = v74 & 1;
      MEMORY[0x24BDAC7A8](v75);
      sub_23F3A8518((void (*)(_OWORD *__return_ptr, _QWORD *))sub_23F3EC9A0, v78, v32, v45, v77, (uint64_t)&v169);
      v103 = v169;
      v102 = v170;
      v104 = v76;
      v105 = v171;
      v106 = v172;
      sub_23F3B0CFC(v104, v101);
      sub_23F3B1080(v78, v32, v45, v77);
      sub_23F383004((uint64_t)&v169, (uint64_t)&v158, &qword_256E70D10);
      if ((v162 & 1) != 0)
      {
        v107 = sub_23F3B115C(v157, v155, v154, v153, v77);
        goto LABEL_32;
      }
      v115 = v157;
      if ((v77 & 1) != 0)
      {
        v107 = sub_23F3B10B0((uint64_t)&v169);
        LOBYTE(v103) = v157;
LABEL_32:
        sub_23F3EC9AC(v107, v108, v109, v110, v111, v112, v113, v114, v134);
        sub_23F3ECB1C();
        v102 = 0;
        v105 = 0;
        v106 = 0;
        v115 = 0;
        v116 = 0;
        v117 = 0;
        v118 = 0;
        v103 = v103;
        v158 = v103;
        sub_23F3ECA70();
      }
      else
      {
        v158 = v103;
        v159 = v102;
        v160 = (uint64_t *)v105;
        v161 = v106;
        v116 = v155;
        v162 = v157;
        v163 = v155;
        v117 = v154;
        v118 = v153;
        v164 = v154;
        v165 = v153;
        LOBYTE(v166) = 0;
        v120 = sub_23F3ECB9C();
        sub_23F3B11CC(v120, v121, v154, v153, 0);
        sub_23F3668F4();
        sub_23F389CDC();
        v122 = sub_23F384B00();
        sub_23F3EC9AC(v122, v123, v124, v125, v126, v127, v128, v129, v134);
        sub_23F3ECB1C();
        v119 = 0;
      }
      sub_23F3EC8A8(v103, v102, v105, v106, v115, v116, v117, v118, v119);
      sub_23F362948();
      return;
    }
    v169 = MEMORY[0x24BEE4AF8];
    v40 = &v169;
    sub_23F37B860(0, v61 & ~(v61 >> 63), 0);
    if (v61 < 0)
      goto LABEL_39;
    v131 = v50;
    v27 = 0;
    v145 = v48;
    v144 = v52 - v48;
    while (1)
    {
      v62 = v27 + 1;
      if (__OFADD__(v27, 1))
        break;
      if (v48 + v27 >= v52 || v27 >= v61)
        goto LABEL_36;
      sub_23F3EC924(v152 + *(_QWORD *)(v149 + 72) * (v48 + v27), v147, type metadata accessor for DynamicEnumeration.Case);
      v64 = v174;
      v65 = v175;
      sub_23F35EA9C(v173, v174);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v65 + 8))(&v158, v147, v64, v65);
      sub_23F3663AC(v147, type metadata accessor for DynamicEnumeration.Case);
      v66 = v158;
      v67 = v159;
      v40 = v160;
      v32 = v161;
      v68 = v162;
      v156 = v163;
      sub_23F3ECB58(v164);
      v154 = v165;
      LODWORD(v153) = v166;
      v20 = v169;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F3B1F7C(0, *(_QWORD *)(v20 + 16) + 1);
        v20 = v169;
      }
      v70 = *(_QWORD *)(v20 + 16);
      v69 = *(_QWORD *)(v20 + 24);
      v36 = v70 + 1;
      if (v70 >= v69 >> 1)
      {
        sub_23F3B1F7C(v69 > 1, v70 + 1);
        v20 = v169;
      }
      *(_QWORD *)(v20 + 16) = v36;
      v71 = v20 + 72 * v70;
      *(_QWORD *)(v71 + 32) = v66;
      *(_QWORD *)(v71 + 40) = v67;
      *(_QWORD *)(v71 + 48) = v40;
      *(_QWORD *)(v71 + 56) = v32;
      *(_QWORD *)(v71 + 64) = v68;
      *(_QWORD *)(v71 + 72) = v156;
      *(_QWORD *)(v71 + 80) = v155;
      *(_QWORD *)(v71 + 88) = v154;
      *(_BYTE *)(v71 + 96) = v153;
      ++v27;
      v61 = v144;
      v48 = v145;
      v52 = v151;
      if (v62 == v144)
      {
        v45 = v142;
        v50 = v131;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_once();
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

void sub_23F3EB870(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  _QWORD v32[2];
  int v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = sub_23F6184B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F362AAC();
  v10 = (char *)(v8 - v9);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v32 - v12;
  v40 = sub_23F619E98();
  v38 = *(_QWORD *)(v40 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F38F964();
  v17 = v16 - v15;
  sub_23F619088();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18(v13, a1, v6);
  v39 = (void (*)(uint64_t, uint64_t, uint64_t))v18;
  v18(v10, a2, v6);
  v19 = sub_23F619E8C();
  v20 = sub_23F61C628();
  v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    v22 = swift_slowAlloc();
    v37 = a1;
    v23 = v22;
    v35 = swift_slowAlloc();
    v42 = v35;
    *(_DWORD *)v23 = 136315394;
    v32[1] = v23 + 4;
    sub_23F3EC80C();
    v34 = v19;
    v33 = v21;
    v24 = sub_23F3ECBBC();
    sub_23F3ECBE4(v24, v25);
    v41 = v26;
    v36 = a3;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v27 = *(void (**)(char *, uint64_t))(v7 + 8);
    v27(v13, v6);
    *(_WORD *)(v23 + 12) = 2080;
    v28 = sub_23F3ECBBC();
    sub_23F3ECBE4(v28, v29);
    v41 = v30;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v27(v10, v6);
    _os_log_impl(&dword_23F35A000, v34, (os_log_type_t)v33, "❗️ Folding enum cases, but identifier has already been seen.\nTaking old value: %s\nover new value: %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v31 = *(void (**)(char *, uint64_t))(v7 + 8);
  v31(v13, v6);
  v31(v10, v6);

  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v17, v40);
  v39(a3, a1, v6);
  sub_23F362870();
}

uint64_t sub_23F3EBB04@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v22;

  v3 = sub_23F3E9020(*a1);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v21 = a2;
    v22 = MEMORY[0x24BEE4AF8];
    sub_23F37B910();
    v5 = v22;
    v6 = (uint64_t *)(v3 + 40);
    v7 = MEMORY[0x24BEE4B08];
    do
    {
      v8 = *(v6 - 1);
      v9 = *v6;
      v10 = *(_QWORD *)(v22 + 16);
      v11 = *(_QWORD *)(v22 + 24);
      sub_23F617BA0();
      if (v10 >= v11 >> 1)
        sub_23F37B910();
      v6 += 2;
      *(_QWORD *)(v22 + 16) = v10 + 1;
      v12 = (_QWORD *)(v22 + 24 * v10);
      v12[4] = v8;
      v12[5] = v9;
      v12[6] = v7;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    a2 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
  }
  v13 = (_QWORD *)sub_23F3E8814(v5);
  swift_bridgeObjectRelease();
  sub_23F3B79EC(0x202CuLL, 0xE200000000000000, v13);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  result = swift_bridgeObjectRelease();
  *a2 = v15;
  a2[1] = v17;
  a2[2] = v19;
  return result;
}

uint64_t sub_23F3EBC64(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t *a4)
{
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v7 = *a4;
  v8 = a4[1];
  v9 = a4[2];
  v19 = MEMORY[0x24BEE4B08];
  sub_23F35D2E8(&qword_256E70898);
  sub_23F61C55C();
  sub_23F61C55C();
  sub_23F617BA0();
  sub_23F528350(0, 0xE000000000000000, v19, v7, v8, v9);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease_n();
  sub_23F61C280();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F528350(v11, v13, v15, a1, a2, a3);
  v17 = v16;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  return v17;
}

double sub_23F3EBDD8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;

  v5 = (_QWORD *)sub_23F3E9380(a1);
  if (v5[2])
  {
    sub_23F382EF8(a2 + 160, (uint64_t)v12, &qword_256E71C38);
    if (v13)
    {
      sub_23F35EA9C(v12, v13);
      sub_23F415CF0(v5, &v9);
      swift_bridgeObjectRelease();
      v6 = v10;
      v7 = v11;
      *(_OWORD *)a3 = v9;
      *(_QWORD *)(a3 + 16) = v6;
      *(_QWORD *)(a3 + 24) = v7;
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v12);
      return result;
    }
    swift_bridgeObjectRelease();
    sub_23F3625D8((uint64_t)v12, &qword_256E71C38);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

void sub_23F3EBEB0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[17];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_23F35EA9C((_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 144));
  v3 = sub_23F3ECB48();
  v4(v3);
  v5 = v33;
  v6 = v34;
  v7 = sub_23F3ECB48();
  sub_23F3EAD6C(v7, v8, v9, v10, v11, v12, v13, v14, v24, v25, v35, v36, v37, v38, v39, v31[0], v31[1], v31[2], v31[3],
    v31[4]);
  v15 = v35;
  v17 = v36;
  v16 = v37;
  v19 = v38;
  v18 = v39;
  if ((v40 & 1) != 0)
  {
    sub_23F3EC8A8(v32, v33, v34, v35, v36, v37, v38, v39, v40);
    LOBYTE(v31[0]) = v32;
    sub_23F3B0DA4((uint64_t)v31);
    sub_23F383004((uint64_t)v31, (uint64_t)&v32, &qword_256E70CF8);
    sub_23F3B0DB0((uint64_t)&v32);
    sub_23F383004((uint64_t)&v32, (uint64_t)v31, &qword_256E70CF8);
    v21 = (unsigned __int8 *)nullsub_1(v31, v20);
    sub_23F3ECB00(*v21);
    *(_BYTE *)(a1 + 64) = 1;
  }
  else
  {
    v35 = v26;
    v36 = v27;
    v37 = v28;
    v38 = v29;
    v39 = v30;
    v40 = v32;
    v41 = v33;
    v42 = v34;
    v43 = v15;
    v44 = v17;
    v45 = v16;
    v46 = v19;
    v47 = v18;
    *(_QWORD *)a1 = v32;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v17;
    *(_QWORD *)(a1 + 40) = v16;
    *(_QWORD *)(a1 + 48) = v19;
    *(_QWORD *)(a1 + 56) = v18;
    *(_BYTE *)(a1 + 64) = 0;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F384A00();
    v22 = sub_23F3ECB48();
    sub_23F39BA5C(v22, v23);
    sub_23F3B0F00(&v32);
  }
}

void sub_23F3EC098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  _QWORD v30[5];

  sub_23F362ABC();
  v2 = v1;
  sub_23F35D2E8(&qword_256E70CE8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F362AAC();
  v6 = v4 - v5;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v29 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v29 - v11;
  sub_23F382EF8(v0, (uint64_t)v30, &qword_256E71C38);
  if (v30[3])
  {
    sub_23F3ECBD0();
    v13 = sub_23F3B1F5C();
    sub_23F3ECB2C((uint64_t)v12);
    if (v14)
    {
      sub_23F3625D8((uint64_t)v12, &qword_256E70CE8);
    }
    else
    {
      sub_23F61BC2C();
      sub_23F383F80((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8));
    }
    sub_23F3ECBD0();
    sub_23F3ECB2C((uint64_t)v10);
    if (v14)
    {
      sub_23F3625D8((uint64_t)v10, &qword_256E70CE8);
    }
    else
    {
      sub_23F61BC2C();
      sub_23F383F80((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8));
    }
    v19 = sub_23F61C1F0();
    v21 = v20;
    sub_23F362984();
    sub_23F3ECA90();
    sub_23F61C1FC();
    sub_23F61C280();
    sub_23F3837B0();
    v15 = v29[1];
    v16 = v29[2];
    v17 = sub_23F3ECBD8();
    *(_QWORD *)(v17 + 16) = v19;
    *(_QWORD *)(v17 + 24) = v21;
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
  }
  sub_23F3625D8((uint64_t)v30, &qword_256E71C38);
  sub_23F3ECBD0();
  v22 = sub_23F3B1F5C();
  if (sub_23F36195C(v6, 1, v22) == 1)
  {
    sub_23F3625D8(v6, &qword_256E70CE8);
    v23 = 0;
    v24 = 0xE000000000000000;
  }
  else
  {
    v23 = sub_23F61BC2C();
    v24 = v25;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v6, v22);
  }
  sub_23F617BA0();
  sub_23F3ECB74(v15);
  v26 = sub_23F3B13CC(MEMORY[0x24BEE4B08], v23, v24);
  sub_23F369004(v26);
  v28 = v27;
  sub_23F39BB1C(v15, v16);
  *(_QWORD *)v2 = v23;
  *(_QWORD *)(v2 + 8) = v24;
  *(_QWORD *)(v2 + 16) = v28;
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = v15;
  *(_QWORD *)(v2 + 40) = v16;
  *(_QWORD *)(v2 + 48) = v17;
  *(_QWORD *)(v2 + 56) = v18;
  *(_BYTE *)(v2 + 64) = 0;
  sub_23F362948();
}

uint64_t sub_23F3EC334()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23F3EC358(uint64_t a1, char a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  id v53;
  _QWORD v54[2];
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  id v67;

  v4 = v3;
  v64 = a3;
  v7 = sub_23F6184B8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F362AAC();
  v11 = v9 - v10;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v54 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v54 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v63 = (uint64_t)v54 - v19;
  v20 = sub_23F35D2E8(&qword_256E704E0);
  MEMORY[0x24BDAC7A8](v20);
  sub_23F38F964();
  v25 = v24 - v23;
  if (!*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_19:
    sub_23F362870();
    return;
  }
  v61 = *(_QWORD *)(a1 + 16);
  v62 = v7;
  v56 = v15;
  v57 = v11;
  v59 = v25 + *(int *)(v21 + 48);
  v60 = v4;
  v26 = a1 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  v58 = *(_QWORD *)(v22 + 72);
  v54[1] = a1;
  sub_23F3668F4();
  v27 = v25;
  v55 = v25;
  while (1)
  {
    sub_23F382EF8(v26, v27, &qword_256E704E0);
    v28 = v8;
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
    v30 = v62;
    v29(v63, v27, v62);
    v31 = (uint64_t)v18;
    v29((uint64_t)v18, v59, v30);
    v32 = *(_QWORD **)v64;
    sub_23F375424();
    v35 = v34;
    v36 = v32[2];
    v37 = (v33 & 1) == 0;
    if (__OFADD__(v36, v37))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      sub_23F61CC94();
      __break(1u);
      goto LABEL_23;
    }
    v38 = v33;
    if (v32[3] >= v36 + v37)
    {
      if ((a2 & 1) == 0)
      {
        sub_23F35D2E8(&qword_256E70428);
        sub_23F61CA24();
      }
    }
    else
    {
      sub_23F513EC4();
      sub_23F375424();
      if ((v38 & 1) != (v40 & 1))
        goto LABEL_22;
      v35 = v39;
    }
    v41 = *(_QWORD **)v64;
    if ((v38 & 1) != 0)
      break;
    v41[(v35 >> 6) + 8] |= 1 << v35;
    v48 = *(_QWORD *)(v28 + 72) * v35;
    v49 = v62;
    v29(v41[6] + v48, v63, v62);
    v18 = (char *)v31;
    v29(v41[7] + v48, v31, v49);
    v50 = v41[2];
    v51 = __OFADD__(v50, 1);
    v52 = v50 + 1;
    if (v51)
      goto LABEL_21;
    v41[2] = v52;
    v8 = v28;
LABEL_14:
    v26 += v58;
    a2 = 1;
    if (!--v61)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_19;
    }
  }
  v8 = v28;
  v42 = *(_QWORD *)(v28 + 72) * v35;
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
  v44 = v57;
  v45 = v62;
  v43(v57, v41[7] + v42, v62);
  v46 = (uint64_t)v56;
  v18 = (char *)v31;
  v47 = v60;
  sub_23F3EB870(v44, v31, (uint64_t)v56);
  if (!v47)
  {
    v60 = 0;
    sub_23F3ECBA8(v44);
    sub_23F3ECBA8(v31);
    sub_23F3ECBA8(v63);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(*(_QWORD *)(*(_QWORD *)v64 + 56) + v42, v46, v45);
    v27 = v55;
    goto LABEL_14;
  }
  sub_23F3B224C(v44);
  v67 = v47;
  v53 = v47;
  sub_23F35D2E8(&qword_256E70370);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_23F3B224C(v31);
    sub_23F3B224C(v63);
    swift_bridgeObjectRelease();

    goto LABEL_19;
  }
LABEL_23:
  v65 = 0;
  v66 = 0xE000000000000000;
  sub_23F61C8E0();
  sub_23F61C280();
  sub_23F61CA00();
  sub_23F61C280();
  sub_23F61CA60();
  __break(1u);
}

unint64_t sub_23F3EC7C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E70588;
  if (!qword_256E70588)
  {
    v1 = sub_23F35EB74(&qword_256E70580);
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_256E70588);
  }
  return result;
}

unint64_t sub_23F3EC80C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E70CC8;
  if (!qword_256E70CC8)
  {
    v1 = sub_23F6184B8();
    result = MEMORY[0x242670A44](MEMORY[0x24BE549D8], v1);
    atomic_store(result, (unint64_t *)&qword_256E70CC8);
  }
  return result;
}

uint64_t sub_23F3EC84C()
{
  uint64_t v0;

  sub_23F3D7A48(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

void sub_23F3EC874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  sub_23F3ECB64(a1, a1, v2);
  sub_23F362928();
}

uint64_t sub_23F3EC8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t result;

  if ((a9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_23F384120();
    sub_23F3837B0();
    return sub_23F39BB1C(a5, a6);
  }
  return result;
}

void sub_23F3EC924(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23F362928();
}

uint64_t sub_23F3EC95C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DynamicEnumeration.Case(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3EC9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;

  return sub_23F3EC8A8(*(_QWORD *)(v9 - 392), *(_QWORD *)(v9 - 472), *(_QWORD *)(v9 - 464), *(_QWORD *)(v9 - 456), *(_QWORD *)(v9 - 448), *(_QWORD *)(v9 - 440), *(_QWORD *)(v9 - 432), *(_QWORD *)(v9 - 424), a9);
}

uint64_t sub_23F3EC9FC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F39BB1C(v0, v1);
}

void sub_23F3ECA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F39B9D8(a1, v14, v10, v9, v11, v12, v15, v13, a9);
}

void sub_23F3ECA34()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 320) = 0;
  *(_QWORD *)(v0 - 328) = 0;
  *(_QWORD *)(v0 - 336) = 0;
}

uint64_t sub_23F3ECA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23F3B115C(v0, v1, v2, v3, 0);
}

double sub_23F3ECA70()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_QWORD *)(v0 + 56) = 0;
  *(_BYTE *)(v0 + 64) = 1;
  return result;
}

void sub_23F3ECA90()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 152) = 0x7361635F6D756E65;
  *(_QWORD *)(v0 - 144) = 0xEA00000000005F65;
}

uint64_t sub_23F3ECAB0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F39BA5C(v0, v1);
}

uint64_t sub_23F3ECAC4()
{
  uint64_t v0;

  return sub_23F3B0CFC(v0, 0);
}

uint64_t sub_23F3ECAD0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F39BA5C(v0, v1);
}

void sub_23F3ECAE4()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 280) = 0;
  *(_QWORD *)(v0 - 288) = 0;
  *(_QWORD *)(v0 - 296) = 0;
}

double sub_23F3ECB00@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)v1 = a1;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t sub_23F3ECB1C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F3ECB24()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F3ECB2C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, v1);
}

uint64_t sub_23F3ECB48()
{
  uint64_t v0;

  return v0;
}

void sub_23F3ECB58(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 320) = a1;
}

uint64_t sub_23F3ECB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (**(uint64_t (***)(uint64_t))(a3 - 8))(v3);
}

uint64_t sub_23F3ECB74(uint64_t a1)
{
  uint64_t v1;

  return sub_23F39BA5C(a1, v1);
}

uint64_t sub_23F3ECB84()
{
  uint64_t v0;

  return sub_23F3B0CFC(v0, 0);
}

uint64_t sub_23F3ECB90()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3ECB9C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3ECBA8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F3ECBB0()
{
  return sub_23F619088();
}

uint64_t sub_23F3ECBBC()
{
  return sub_23F61CC1C();
}

uint64_t sub_23F3ECBC8()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F3ECBD0()
{
  return sub_23F61B77C();
}

uint64_t sub_23F3ECBD8()
{
  return swift_allocObject();
}

void sub_23F3ECBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 72));
}

uint64_t sub_23F3ECC04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;

  v22 = sub_23F618D88();
  v5 = *(_QWORD *)(v22 - 8);
  v6 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = MEMORY[0x24BEE4AF8];
  v26 = MEMORY[0x24BEE4AF8];
  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    v12 = 0;
    v20 = a2;
    v21 = a1;
    v11 = v22;
    while (v12 < *(_QWORD *)(a1 + 16))
    {
      v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v14 = *(_QWORD *)(v5 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, a1 + v13 + v14 * v12, v11);
      v15 = sub_23F3ED7D8(v10, a2);
      if (v2)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v11);
        swift_bridgeObjectRelease();
        swift_release();
        return v11;
      }
      if ((v15 & 1) != 0)
      {
        v23 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v23(v25, v10, v11);
        v16 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37BE90();
          v16 = v26;
        }
        v17 = *(_QWORD *)(v16 + 16);
        if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
        {
          sub_23F37BE90();
          v16 = v26;
        }
        *(_QWORD *)(v16 + 16) = v17 + 1;
        v18 = v16 + v13 + v17 * v14;
        v19 = v22;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v23)(v18, v25, v22);
        v26 = v16;
        v11 = v19;
        a2 = v20;
        a1 = v21;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v11);
      }
      if (v24 == ++v12)
      {
        v11 = v26;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

void sub_23F3ECE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a3 + 16);
  v21 = MEMORY[0x24BEE4AF8];
  sub_23F37B910();
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 16);
    v8 = (uint64_t *)(a3 + 32);
    swift_retain();
    swift_retain();
    swift_retain();
    v9 = (uint64_t *)(a2 + 40);
    while (v7)
    {
      v10 = *(v9 - 1);
      v11 = *v9;
      v12 = *v8;
      sub_23F617BA0();
      sub_23F617BA0();
      v13 = a4(v10, v11, v12);
      v20 = v14;
      v16 = v15;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(v21 + 16);
      if (v17 >= *(_QWORD *)(v21 + 24) >> 1)
        sub_23F37B910();
      *(_QWORD *)(v21 + 16) = v17 + 1;
      v18 = (_QWORD *)(v21 + 24 * v17);
      v18[4] = v13;
      v18[5] = v20;
      v18[6] = v16;
      --v7;
      v9 += 2;
      ++v8;
      if (!--v6)
        goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_9:
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_23F3ECFBC(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_23F61B92C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3EE834(v1, (uint64_t)v10);
  if (sub_23F36195C((uint64_t)v10, 1, v4) == 1)
    return 0;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  a1(&v13, v7);
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

uint64_t sub_23F3ED108(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[24] = a2;
  v3[25] = v2;
  v3[23] = a1;
  sub_23F35D2E8(&qword_256E6FFA0);
  v3[26] = swift_task_alloc();
  v4 = sub_23F619E98();
  v3[27] = v4;
  v3[28] = *(_QWORD *)(v4 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F3ED1A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  __int128 *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;

  v1 = v0[23];
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = v0[25];
    v3 = type metadata accessor for CharlieSpanEventPromptGenerator();
    if (*(_BYTE *)(v2 + *(int *)(v3 + 24)) == 1)
    {
      sub_23F619088();
      v4 = sub_23F619E8C();
      v5 = sub_23F61C610();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)sub_23F3EEE70();
        *(_WORD *)v6 = 0;
        _os_log_impl(&dword_23F35A000, v4, v5, "Applying span filtering", v6, 2u);
        sub_23F366530();
      }
      v7 = v0[30];
      v8 = v0[27];
      v9 = v0[28];
      v10 = v0[24];

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      v11 = sub_23F617BA0();
      v1 = sub_23F3ECC04(v11, v10);
      v2 = v0[25];
    }
    else
    {
      sub_23F617BA0();
    }
    v18 = v0[24];
    sub_23F3EE1B4(v1);
    v20 = v19;
    v22 = v21;
    v24 = v23;
    sub_23F361418(v2 + *(int *)(v3 + 20) + 160, (uint64_t)(v0 + 2));
    v25 = swift_task_alloc();
    v59 = (uint64_t)(v0 + 2);
    *(_QWORD *)(v25 + 16) = v0 + 2;
    *(_QWORD *)(v25 + 24) = v18;
    sub_23F3ECE1C(v20, v22, v24, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23F3EE7B8);
    v27 = v26;
    swift_task_dealloc();
    v28 = *(_QWORD *)(v27 + 16);
    v63 = v0;
    if (v28)
    {
      v61 = (__int128 *)(v0 + 7);
      v64 = MEMORY[0x24BEE4AF8];
      sub_23F37BB94();
      v29 = v64;
      v30 = *(_QWORD *)(type metadata accessor for StatementSegment(0) - 8);
      v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      v60 = *(_QWORD *)(v30 + 72);
      v32 = (uint64_t *)(v27 + 48);
      do
      {
        v33 = *(v32 - 2);
        v34 = *(v32 - 1);
        v35 = *v32;
        sub_23F35D2E8(&qword_256E704B8);
        v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = xmmword_23F61E980;
        v37 = (_QWORD *)(v36 + v31);
        *v37 = 8227;
        v37[1] = 0xE200000000000000;
        v37[2] = MEMORY[0x24BEE4B08];
        sub_23F3EEE64();
        v38 = (_QWORD *)((char *)v37 + v60);
        *v38 = v33;
        v38[1] = v34;
        v38[2] = v35;
        sub_23F3EEE64();
        v39 = type metadata accessor for SpanTurnItem(0);
        sub_23F3668A0();
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F3F746C();
        v41 = v40;
        v42 = *(_QWORD *)(v64 + 16);
        if (v42 >= *(_QWORD *)(v64 + 24) >> 1)
          sub_23F37BB94();
        v63[10] = v39;
        v63[11] = &off_250FD49C0;
        v63[7] = v41;
        *(_QWORD *)(v64 + 16) = v42 + 1;
        sub_23F362678(v61, v64 + 40 * v42 + 32);
        v32 += 3;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
      v0 = v63;
    }
    else
    {
      swift_bridgeObjectRelease();
      v29 = MEMORY[0x24BEE4AF8];
    }
    if (*(_QWORD *)(v29 + 16))
    {
      v43 = v0[26];
      sub_23F35D2E8(&qword_256E704B8);
      v44 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StatementSegment(0) - 8) + 80);
      v45 = (v44 + 32) & ~v44;
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_23F61E7E0;
      v47 = (_QWORD *)(v46 + v45);
      *v47 = 0x6E6170735F746567;
      v47[1] = 0xEB00000000292873;
      v47[2] = MEMORY[0x24BEE4B08];
      sub_23F3EEE64();
      v48 = sub_23F617D08();
      sub_23F36196C(v43, 1, 1, v48);
      v49 = type metadata accessor for AssistantTurnItem(0);
      sub_23F3668A0();
      v50 = sub_23F3F6FB4(2, v46);
      v0[15] = v49;
      v0[16] = &off_250FD4A60;
      v0[12] = v50;
      sub_23F362678((__int128 *)v0 + 6, (uint64_t)(v0 + 17));
      sub_23F5C688C(0, 0, (uint64_t)(v0 + 17));
    }
    v51 = (uint64_t *)v0[24];
    sub_23F386C5C();
    type metadata accessor for ToolPromptMap(0);
    sub_23F61BFEC();
    sub_23F617000();
    sub_23F61B5D8();
    sub_23F3EE7C0();
    sub_23F61BFEC();
    v52 = sub_23F51A0E0(v51[1], v51[2], v51[3], v51[4]);
    v54 = v53;
    v56 = v55;
    v62 = v57;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v51[1] = v52;
    v51[2] = v54;
    v0 = v63;
    v51[3] = v56;
    v51[4] = v62;
    swift_release();
    swift_release();
    swift_release();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v59);
  }
  else
  {
    sub_23F619088();
    v12 = sub_23F619E8C();
    v13 = sub_23F61C610();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_23F35A000, v12, v13, "No span entities to include in the prompt", v14, 2u);
      sub_23F366530();
    }
    v15 = v0[28];
    v16 = v0[29];
    v17 = v0[27];

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t type metadata accessor for CharlieSpanEventPromptGenerator()
{
  uint64_t result;

  result = qword_256E71CB0;
  if (!qword_256E71CB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F3ED7D8(char *a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  char *v30;
  uint8_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char *v40;
  void (**v41)(char *, char *);
  void (*v42)(char *, char *, char *);
  char *v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD v52[2];
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;

  v58 = a2;
  v3 = sub_23F618D88();
  v4 = *(char **)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)v52 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v62 = (char *)v52 - v9;
  v10 = sub_23F619E98();
  v60 = *(_QWORD *)(v10 - 8);
  v61 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v56 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v59 = (char *)v52 - v13;
  v14 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F61B9EC();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v52 - v22;
  sub_23F618D64();
  v24 = sub_23F61B92C();
  if (sub_23F36195C((uint64_t)v16, 1, v24) == 1)
  {
    sub_23F3CFCB0((uint64_t)v16, &qword_256E701F0);
    v25 = v59;
    sub_23F619088();
    v26 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v4 + 2);
    v26(v62, a1, v3);
    v27 = sub_23F619E8C();
    v28 = sub_23F61C628();
    v29 = v3;
    v30 = v4;
    if (os_log_type_enabled(v27, v28))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v58 = swift_slowAlloc();
      v64 = (char *)v58;
      v56 = v30;
      *(_DWORD *)v31 = 136315138;
      v55 = (char *)(v31 + 4);
      v32 = v62;
      v26(v57, v62, v29);
      v33 = sub_23F61C16C();
      sub_23F37AE00(v33, v34, (uint64_t *)&v64);
      v63 = v35;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v56 + 1))(v32, v29);
      _os_log_impl(&dword_23F35A000, v27, v28, "Dropping span-matched entity, since type cannot be determined: %s", v31, 0xCu);
      v36 = v58;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v36, -1, -1);
      MEMORY[0x242670B70](v31, -1, -1);
    }
    else
    {
      (*((void (**)(char *, uint64_t))v4 + 1))(v62, v3);
    }

    (*(void (**)(char *, uint64_t))(v60 + 8))(v25, v61);
  }
  else
  {
    v59 = a1;
    v62 = (char *)v3;
    sub_23F61B8CC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v16, v24);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v21, v17);
    sub_23F617BA0();
    sub_23F3E2C5C();
    v38 = v37;
    swift_bridgeObjectRelease();
    if ((v38 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
      return 1;
    }
    v53 = v18;
    v54 = v23;
    v58 = v17;
    v40 = v56;
    sub_23F619088();
    v41 = (void (**)(char *, char *))v4;
    v42 = (void (*)(char *, char *, char *))*((_QWORD *)v4 + 2);
    v43 = v55;
    v44 = v62;
    v42(v55, v59, v62);
    v45 = sub_23F619E8C();
    v46 = sub_23F61C610();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v59 = (char *)swift_slowAlloc();
      v64 = v59;
      *(_DWORD *)v47 = 136315138;
      v52[1] = v47 + 4;
      v42(v57, v43, v44);
      v48 = sub_23F61C16C();
      sub_23F37AE00(v48, v49, (uint64_t *)&v64);
      v63 = v50;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      v41[1](v43, v44);
      _os_log_impl(&dword_23F35A000, v45, v46, "Dropping span-matched entity with no matching types among tools in prompt: %s", v47, 0xCu);
      v51 = v59;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v51, -1, -1);
      MEMORY[0x242670B70](v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v56, v61);
    }
    else
    {

      v41[1](v43, v44);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v61);
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v58);
  }
  return 0;
}

uint64_t sub_23F3EDD74(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[5];

  v32[2] = a4;
  v32[3] = a5;
  sub_23F36F688((void (*)(uint64_t))sub_23F3EE800, (uint64_t)v32, a3);
  v7 = sub_23F617BA0();
  sub_23F3BE1CC(v7);
  sub_23F3B830C(v8, v9, v10);
  v12 = v11;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_23F3B79EC(0x207C20uLL, 0xE300000000000000, v12);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  sub_23F3E3A60((uint64_t)&unk_250FD0D18);
  v20 = v19;
  sub_23F617BA0();
  v21 = sub_23F3B60F0(v20, a1, a2);
  swift_bridgeObjectRelease();
  sub_23F369004(v21);
  sub_23F528350(a1, a2, v22, 0x203AuLL, 0xE200000000000000, MEMORY[0x24BEE4B08]);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F528350(v24, v26, v28, v14, v16, v18);
  v30 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_23F3EDF14@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F618D64();
  v13 = a1;
  v14 = a2;
  *a3 = sub_23F3ECFBC((void (*)(uint64_t *__return_ptr, char *))sub_23F3EE818);
  a3[1] = v9;
  a3[2] = v10;
  return sub_23F3CFCB0((uint64_t)v8, &qword_256E701F0);
}

void sub_23F3EDFE0(_QWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *__return_ptr, char *, char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD v28[8];
  char v29;

  v25 = a2;
  v27 = a3;
  v4 = sub_23F61BA94();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23F61B9EC();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_23F35EA9C(a1, v10);
  sub_23F61B8CC();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEB9F40], v4);
  v12 = *(_QWORD *)(v25 + 56);
  v13 = *(void (**)(_QWORD *__return_ptr, char *, char *, uint64_t, uint64_t, uint64_t))(v11 + 24);
  swift_retain();
  v13(v28, v9, v7, v12, v10, v11);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v26);
  v14 = 0;
  v15 = 0;
  v16 = 0;
  if ((v29 & 1) == 0)
  {
    v17 = v28[6];
    v18 = v28[7];
    v20 = v28[4];
    v19 = v28[5];
    v16 = v28[2];
    v21 = v28[3];
    v14 = v28[0];
    v15 = v28[1];
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F39BA98(v14, v15, v16, v21, v20, v19, v17, v18, 0);
  }
  v22 = v27;
  *v27 = v14;
  v22[1] = v15;
  v22[2] = v16;
}

void sub_23F3EE1B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  BOOL v45;
  BOOL v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;

  v3 = sub_23F35D2E8(qword_256E71C50);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_23F618D88();
  v6 = *(_QWORD *)(v66 - 8);
  v7 = MEMORY[0x24BDAC7A8](v66);
  v56 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v63 = (char *)&v55 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v65 = (char *)&v55 - v11;
  v67 = 0;
  v68 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v69 = MEMORY[0x24BEE4AF8];
  v62 = *(_QWORD *)(a1 + 16);
  if (!v62)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v55 = v1;
  v59 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v61 = a1 + v59;
  sub_23F617BA0();
  v12 = 0;
  v57 = v6;
  v58 = a1;
  v60 = v5;
  while (v12 < *(_QWORD *)(a1 + 16))
  {
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    v14(v65, v61 + v13 * v12, v66);
    v15 = sub_23F618D70();
    v16 = *(_QWORD *)(v15 + 16);
    v17 = sub_23F618B78();
    v18 = v17;
    if (v16)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v15+ ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80)), v17);
      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    sub_23F36196C((uint64_t)v5, v19, 1, v18);
    swift_bridgeObjectRelease();
    v20 = sub_23F36195C((uint64_t)v5, 1, v18);
    v64 = v13;
    if (v20 == 1)
    {
      sub_23F3CFCB0((uint64_t)v5, qword_256E71C50);
      v21 = 0;
      v22 = 0xE000000000000000;
    }
    else
    {
      v21 = sub_23F618B54();
      v22 = v23;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v5, v18);
    }
    v24 = v68;
    v25 = v68[2];
    if (v67)
    {
      swift_retain();
      swift_retain();
      sub_23F3BDA10(v21, v22, (uint64_t)(v24 + 4));
      v27 = v26;
      v29 = v28;
      swift_release();
      swift_release();
      if ((v29 & 1) != 0)
        goto LABEL_30;
    }
    else
    {
      if (!v25)
        goto LABEL_30;
      v30 = v68[4] == v21 && v68[5] == v22;
      if (v30 || (sub_23F61CC64() & 1) != 0)
      {
        v27 = 0;
      }
      else
      {
        if (v25 == 1)
          goto LABEL_30;
        v45 = v24[6] == v21 && v24[7] == v22;
        if (v45 || (sub_23F61CC64() & 1) != 0)
        {
          v27 = 1;
        }
        else
        {
          if (v25 == 2)
            goto LABEL_30;
          v46 = v24[8] == v21 && v24[9] == v22;
          if (v46 || (sub_23F61CC64() & 1) != 0)
          {
            v27 = 2;
          }
          else
          {
            if (v25 == 3)
              goto LABEL_30;
            v47 = v24[10] == v21 && v24[11] == v22;
            if (!v47 && (sub_23F61CC64() & 1) == 0)
            {
              v52 = v24 + 13;
              v53 = 4;
              while (v25 != v53)
              {
                if (*(v52 - 1) == v21 && *v52 == v22)
                {
                  v27 = v53;
                  goto LABEL_20;
                }
                v27 = v53++;
                v52 += 2;
                if ((sub_23F61CC64() & 1) != 0)
                  goto LABEL_20;
              }
LABEL_30:
              sub_23F3BCA1C(v21, v22);
              v31 = v69;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_23F37BE5C();
                v31 = v69;
              }
              v39 = *(_QWORD *)(v31 + 16);
              if (v39 >= *(_QWORD *)(v31 + 24) >> 1)
              {
                sub_23F37BE5C();
                v31 = v69;
              }
              *(_QWORD *)(v31 + 16) = v39 + 1;
              v40 = v31 + 32;
              *(_QWORD *)(v31 + 32 + 8 * v39) = MEMORY[0x24BEE4AF8];
              v14(v56, (unint64_t)v65, v66);
              v34 = *(_QWORD *)(v31 + 32 + 8 * v39);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)(v31 + 32 + 8 * v39) = v34;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_23F377B00();
                v34 = v50;
                *(_QWORD *)(v40 + 8 * v39) = v50;
              }
              v6 = v57;
              v36 = *(_QWORD *)(v34 + 16);
              v37 = v36 + 1;
              if (v36 >= *(_QWORD *)(v34 + 24) >> 1)
              {
                sub_23F377B00();
                v34 = v51;
                *(_QWORD *)(v40 + 8 * v39) = v51;
              }
              v38 = v56;
              goto LABEL_39;
            }
            v27 = 3;
          }
        }
      }
    }
LABEL_20:
    v31 = v69;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F3BCF94();
      v31 = v32;
    }
    if ((v27 & 0x8000000000000000) != 0)
      goto LABEL_72;
    if (v27 >= *(_QWORD *)(v31 + 16))
      goto LABEL_73;
    v33 = v31 + 32;
    v14(v63, (unint64_t)v65, v66);
    v34 = *(_QWORD *)(v31 + 32 + 8 * v27);
    v35 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v31 + 32 + 8 * v27) = v34;
    if ((v35 & 1) == 0)
    {
      sub_23F377B00();
      v34 = v48;
      *(_QWORD *)(v33 + 8 * v27) = v48;
    }
    v6 = v57;
    v36 = *(_QWORD *)(v34 + 16);
    v37 = v36 + 1;
    if (v36 >= *(_QWORD *)(v34 + 24) >> 1)
    {
      sub_23F377B00();
      v34 = v49;
      *(_QWORD *)(v33 + 8 * v27) = v49;
    }
    v38 = v63;
LABEL_39:
    a1 = v58;
    v42 = v59;
    ++v12;
    *(_QWORD *)(v34 + 16) = v37;
    v43 = v34 + v42 + v36 * v64;
    v44 = v66;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v43, v38, v66);
    swift_bridgeObjectRelease();
    v69 = v31;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v65, v44);
    v5 = v60;
    if (v12 == v62)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
}

uint64_t sub_23F3EE7B8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23F3EDD74(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

unint64_t sub_23F3EE7C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E70430;
  if (!qword_256E70430)
  {
    v1 = sub_23F617000();
    result = MEMORY[0x242670A44](MEMORY[0x24BDCEA88], v1);
    atomic_store(result, (unint64_t *)&qword_256E70430);
  }
  return result;
}

uint64_t sub_23F3EE800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23F3EDF14(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_23F3EE818(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_23F3EDFE0(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23F3EE834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E701F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_23F3EE87C(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B32C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *(_OWORD *)&a2[v8 + 24];
    *(_OWORD *)&a1[v8 + 24] = v11;
    (**(void (***)(char *, char *))(v11 - 8))(&a1[v8], &a2[v8]);
    v12 = *((_OWORD *)v10 + 4);
    *((_OWORD *)v9 + 4) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))((uint64_t)(v9 + 40), (uint64_t)(v10 + 40));
    v13 = *(_OWORD *)(v10 + 104);
    *(_OWORD *)(v9 + 104) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)(v9 + 80), (uint64_t)(v10 + 80));
    v14 = *((_OWORD *)v10 + 9);
    *((_OWORD *)v9 + 9) = v14;
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(v9 + 120), (uint64_t)(v10 + 120));
    v15 = *(_OWORD *)(v10 + 184);
    *(_OWORD *)(v9 + 184) = v15;
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))((uint64_t)(v9 + 160), (uint64_t)(v10 + 160));
    a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  }
  return a1;
}

uint64_t sub_23F3EE9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + v7, a2 + v7);
  v11 = v9[4];
  v8[4] = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))((uint64_t)v8 + 40, (uint64_t)v9 + 40);
  v12 = *(_OWORD *)((char *)v9 + 104);
  *(_OWORD *)((char *)v8 + 104) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))((uint64_t)(v8 + 5), (uint64_t)(v9 + 5));
  v13 = v9[9];
  v8[9] = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)v8 + 120, (uint64_t)v9 + 120);
  v14 = *(_OWORD *)((char *)v9 + 184);
  *(_OWORD *)((char *)v8 + 184) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(v8 + 10), (uint64_t)(v9 + 10));
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23F3EEAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  sub_23F361AD0((uint64_t *)(a1 + v7), (uint64_t *)(a2 + v7));
  sub_23F361AD0(v8 + 5, v9 + 5);
  sub_23F361AD0(v8 + 10, v9 + 10);
  sub_23F361AD0(v8 + 15, v9 + 15);
  sub_23F361AD0(v8 + 20, v9 + 20);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23F3EEB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0xC8uLL);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23F3EEBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 40);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 80);
  v11 = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 96) = v11;
  *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 120);
  *(_OWORD *)(v8 + 120) = *(_OWORD *)(v9 + 120);
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v9 + 152);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 160);
  v12 = *(_OWORD *)(v9 + 176);
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(_OWORD *)(v8 + 176) = v12;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v9 + 192);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23F3EECDC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3EECE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F61B32C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F3EED64()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3EED70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23F61B32C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_23F3EEDE8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F3EEE64()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F3EEE70()
{
  return swift_slowAlloc();
}

uint64_t sub_23F3EEE7C(uint64_t a1, uint64_t a2)
{
  return sub_23F3EF004(a1, a2, sub_23F5BCFD0, (void (*)(_QWORD))MEMORY[0x24BEBA638]);
}

uint64_t sub_23F3EEE90(uint64_t a1, uint64_t a2)
{
  return sub_23F3EF004(a1, a2, sub_23F5BCFD0, (void (*)(_QWORD))type metadata accessor for DynamicEnumeration.Case);
}

uint64_t sub_23F3EEEA4(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_23F61C250();
    v1 = sub_23F61C34C();
    sub_23F362D18();
    return v1;
  }
  return result;
}

uint64_t sub_23F3EEF5C(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_23F5BCFD0(0, result, *(_QWORD *)(a2 + 16), a2);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_23F3EEFC8(uint64_t a1, uint64_t a2)
{
  return sub_23F3EF004(a1, a2, sub_23F5BCFD0, (void (*)(_QWORD))MEMORY[0x24BE57608]);
}

uint64_t sub_23F3EEFDC(uint64_t a1, uint64_t a2)
{
  return sub_23F3EF004(a1, a2, sub_23F5BCFD0, (void (*)(_QWORD))MEMORY[0x24BE578B8]);
}

uint64_t sub_23F3EEFF0(uint64_t a1, uint64_t a2)
{
  return sub_23F3EF004(a1, a2, sub_23F5BCFD0, (void (*)(_QWORD))MEMORY[0x24BE577B0]);
}

uint64_t sub_23F3EF004(uint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t, _QWORD, uint64_t), void (*a4)(_QWORD))
{
  unint64_t v6;
  char v7;
  unint64_t v8;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v6 = *(_QWORD *)(a2 + 16);
  result = a3(0, result, *(_QWORD *)(a2 + 16), a2);
  if ((v7 & 1) != 0)
    v8 = v6;
  else
    v8 = result;
  if ((v8 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v6 >= v8)
  {
    a4(0);
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_23F3EF098(uint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) == 0)
    return a2;
  __break(1u);
  return result;
}

uint64_t sub_23F3EF0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  v6 = sub_23F619E98();
  v5[10] = v6;
  v5[11] = *(_QWORD *)(v6 - 8);
  v5[12] = sub_23F3666CC();
  v5[13] = sub_23F3666CC();
  v5[14] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E71CF8);
  v5[15] = swift_task_alloc();
  v7 = sub_23F617F0C();
  v5[16] = v7;
  v5[17] = *(_QWORD *)(v7 - 8);
  v5[18] = sub_23F3666CC();
  v5[19] = sub_23F3666CC();
  v5[20] = sub_23F3666CC();
  v5[21] = sub_23F3666CC();
  v5[22] = sub_23F3666CC();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F3EF1A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  os_log_type_t v12;
  _WORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  char v37;
  uint64_t (*v38)(void);
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t (*v138)(void);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  sub_23F36FE14(*(_QWORD *)(v0 + 48), v1);
  if (sub_23F36195C(v1, 1, v2) == 1)
  {
    v3 = *(void **)(v0 + 96);
    sub_23F3CFCB0(*(_QWORD *)(v0 + 120), &qword_256E71CF8);
    sub_23F3F0F00();
    sub_23F619E8C();
    v4 = sub_23F3F0EEC();
    if (sub_23F3F0E3C(v4))
    {
      v5 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v5);
      sub_23F3F0DF0(&dword_23F35A000, v6, v7, "ConjunctionResponse: no dialogs");
      sub_23F3F0E04();
    }
    v8 = *(_QWORD *)(v0 + 88);

    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    sub_23F3F0E60();
    goto LABEL_20;
  }
  v9 = *(_QWORD *)(v0 + 48);
  v135 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 32);
  v135(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v0 + 184) = v10;
  v133 = v10;
  if (v10 == 1)
  {
    sub_23F3F0F00();
    v11 = (void *)sub_23F619E8C();
    v12 = sub_23F61C61C();
    if (sub_23F3F0E3C(v12))
    {
      v13 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v13);
      sub_23F3F0DF0(&dword_23F35A000, v14, v15, "ConjunctionResponse: one dialog only, not rewriting as conjunction");
      sub_23F3F0E04();
    }
    v16 = *(_QWORD *)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 128);
    v18 = *(_QWORD *)(v0 + 112);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    v22 = v21;
    v23 = v16;
    v24 = v17;
LABEL_19:
    v135(v22, v23, v24);
LABEL_20:
    sub_23F3F0E90();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v25 = sub_23F510D48(1, *(_QWORD *)(v0 + 48));
  v137 = v28;
  if (v26 == v27 >> 1)
  {
    sub_23F389CDC();
LABEL_15:
    swift_unknownObjectRelease();
    sub_23F619124();
    sub_23F389CDC();
    v39 = sub_23F619E8C();
    v40 = sub_23F61C61C();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v41 = 134217984;
      *(_QWORD *)(v0 + 32) = v133;
      sub_23F61C790();
      sub_23F3837B0();
      _os_log_impl(&dword_23F35A000, v39, v40, "ConjunctionResponse: %ld identical dialogs, not rewriting as conjunction", v41, 0xCu);
      MEMORY[0x242670B70](v41, -1, -1);
    }
    else
    {
      sub_23F3837B0();
    }

    v42 = *(_QWORD *)(v0 + 176);
    v43 = *(_QWORD *)(v0 + 128);
    v44 = *(_QWORD *)(v0 + 40);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
    v22 = v44;
    v23 = v42;
    v24 = v43;
    goto LABEL_19;
  }
  v29 = v26;
  v128 = (_QWORD *)(v0 + 16);
  v130 = v0 + 24;
  v131 = v25;
  v30 = v27 >> 1;
  v31 = *(_QWORD **)(v0 + 136);
  result = sub_23F617BA0();
  while (1)
  {
    if (v29 >= v30)
    {
      __break(1u);
      return result;
    }
    v33 = *(_QWORD *)(v0 + 168);
    v34 = *(_QWORD *)(v0 + 128);
    v35 = v31[9];
    *(_QWORD *)(v0 + 192) = v35;
    v36 = (void (*)(uint64_t, uint64_t, uint64_t))v31[2];
    *(_QWORD *)(v0 + 200) = v36;
    v36(v33, v137 + v35 * v29, v34);
    v37 = sub_23F617EB8();
    v38 = (uint64_t (*)(void))v31[1];
    *(_QWORD *)(v0 + 208) = v38;
    result = ((uint64_t (*)(uint64_t, uint64_t))v38)(v33, v34);
    if ((v37 & 1) == 0)
      break;
    if (v30 == ++v29)
      goto LABEL_15;
  }
  v136 = v35;
  v138 = v38;
  swift_unknownObjectRelease();
  v45 = MEMORY[0x24BEE4AF8];
  v46 = v133;
  if (v133)
  {
    v139 = MEMORY[0x24BEE4AF8];
    sub_23F3F0E4C();
    sub_23F3F0F30();
    v45 = v139;
    v47 = v36;
    do
    {
      v48 = *(_QWORD *)(v0 + 160);
      v49 = *(_QWORD *)(v0 + 128);
      v47(v48, v33, v49);
      v50 = sub_23F617ED0();
      v52 = v51;
      sub_23F3F0EA8(v48, v49, v53, v54, v55, v56, v57, v58, (uint64_t)v128, v130, v131, v133, v136, v138);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F3F0E74();
        v45 = v139;
      }
      v59 = *(_QWORD *)(v45 + 16);
      v60 = v136;
      if (v59 >= *(_QWORD *)(v45 + 24) >> 1)
      {
        sub_23F3F0E88();
        v60 = v136;
        v45 = v139;
      }
      *(_QWORD *)(v45 + 16) = v59 + 1;
      v61 = v45 + 16 * v59;
      *(_QWORD *)(v61 + 32) = v50;
      *(_QWORD *)(v61 + 40) = v52;
      v33 += v60;
      --v46;
    }
    while (v46);
    v46 = v133;
  }
  v62 = sub_23F3EFCD8(v45);
  swift_bridgeObjectRelease();
  if (!v62)
  {
    v81 = MEMORY[0x24BEE4AF8];
    if (v46)
    {
      v141 = MEMORY[0x24BEE4AF8];
      sub_23F3F0E4C();
      sub_23F3F0F30();
      v81 = v141;
      do
      {
        v82 = *(_QWORD *)(v0 + 160);
        v83 = *(_QWORD *)(v0 + 128);
        sub_23F3F0EE4(v82, v33);
        v84 = sub_23F617ED0();
        v86 = v85;
        sub_23F3F0EA8(v82, v83, v87, v88, v89, v90, v91, v92, (uint64_t)v128, v130, v131, v133, v136, v138);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3F0E74();
          v81 = v141;
        }
        v93 = *(_QWORD *)(v81 + 16);
        v94 = v136;
        if (v93 >= *(_QWORD *)(v81 + 24) >> 1)
        {
          sub_23F3F0E88();
          v94 = v136;
          v81 = v141;
        }
        *(_QWORD *)(v81 + 16) = v93 + 1;
        v95 = v81 + 16 * v93;
        *(_QWORD *)(v95 + 32) = v84;
        *(_QWORD *)(v95 + 40) = v86;
        v33 += v94;
        --v46;
      }
      while (v46);
      v46 = v133;
    }
    *v128 = v81;
    sub_23F35D2E8(&qword_256E70580);
    sub_23F3EC7C8();
    sub_23F3F0F1C();
    v132 = sub_23F61C088();
    v129 = v99;
    sub_23F38458C();
    if (v46)
    {
      v100 = sub_23F3F0EC0();
      v102 = v100 + v101;
      sub_23F617BA0();
      v103 = MEMORY[0x24BEE4AF8];
      do
      {
        v104 = *(_QWORD *)(v0 + 152);
        v105 = *(_QWORD *)(v0 + 128);
        sub_23F3F0EE4(v104, v102);
        v106 = sub_23F617EE8();
        v108 = v107;
        sub_23F3F0EA8(v104, v105, v109, v110, v111, v112, v113, v114, v129, v130, v132, v133, v136, v138);
        if (v108)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F3C0670();
            sub_23F376C88();
            v103 = v118;
          }
          v116 = *(_QWORD *)(v103 + 16);
          v115 = *(_QWORD *)(v103 + 24);
          if (v116 >= v115 >> 1)
          {
            sub_23F3F0F08(v115);
            sub_23F376C88();
            v103 = v119;
          }
          *(_QWORD *)(v103 + 16) = v116 + 1;
          v117 = v103 + 16 * v116;
          *(_QWORD *)(v117 + 32) = v106;
          *(_QWORD *)(v117 + 40) = v108;
        }
        v102 += v136;
        v133 = v134 - 1;
      }
      while (v133);
      swift_bridgeObjectRelease();
    }
    else
    {
      v103 = MEMORY[0x24BEE4AF8];
    }
    v120 = *(_QWORD *)(v0 + 176);
    v121 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 24) = v103;
    sub_23F3F0F1C();
    sub_23F61C088();
    sub_23F38458C();
    sub_23F3F0E60();
    sub_23F3F0EA8(v120, v121, v122, v123, v124, v125, v126, v127, v129, v130, v132, v133, v136, v138);
    goto LABEL_20;
  }
  v63 = MEMORY[0x24BEE4AF8];
  if (v46)
  {
    v64 = *(_QWORD *)(v0 + 136);
    v65 = *(_QWORD *)(v0 + 48);
    v140 = MEMORY[0x24BEE4AF8];
    sub_23F3F0E4C();
    v66 = v65 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
    v63 = v140;
    do
    {
      v67 = *(_QWORD *)(v0 + 160);
      v68 = *(_QWORD *)(v0 + 128);
      sub_23F3F0EE4(v67, v66);
      v69 = sub_23F617ED0();
      v71 = v70;
      sub_23F3F0EA8(v67, v68, v72, v73, v74, v75, v76, v77, (uint64_t)v128, v130, v131, v133, v136, v138);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F3F0E74();
        v63 = v140;
      }
      v78 = *(_QWORD *)(v63 + 16);
      v79 = v136;
      if (v78 >= *(_QWORD *)(v63 + 24) >> 1)
      {
        sub_23F3F0E88();
        v79 = v136;
        v63 = v140;
      }
      *(_QWORD *)(v63 + 16) = v78 + 1;
      v80 = v63 + 16 * v78;
      *(_QWORD *)(v80 + 32) = v69;
      *(_QWORD *)(v80 + 40) = v71;
      v66 += v79;
      --v46;
    }
    while (v46);
  }
  *(_QWORD *)(v0 + 216) = v63;
  v96 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v96;
  sub_23F3F0F44(v96, (uint64_t)sub_23F3EF920);
  return sub_23F3F0154(v63, v97, v98);
}

uint64_t sub_23F3EF920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 232) = v2;
  swift_task_dealloc();
  sub_23F3837B0();
  if (!v2)
  {
    *(_QWORD *)(v6 + 240) = a2;
    *(_QWORD *)(v6 + 248) = a1;
  }
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F3EF9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  if (*(_QWORD *)(v0 + 184))
  {
    v1 = sub_23F3F0EC0();
    v3 = v1 + v2;
    sub_23F617BA0();
    v4 = 0;
    v5 = MEMORY[0x24BEE4AF8];
    do
    {
      v6 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
      v7 = *(_QWORD *)(v0 + 144);
      v8 = *(_QWORD *)(v0 + 128);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 200))(v7, v3 + *(_QWORD *)(v0 + 192) * v4, v8);
      v9 = sub_23F617EE8();
      v11 = v10;
      v6(v7, v8);
      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3C0670();
          sub_23F376C88();
          v5 = v15;
        }
        v13 = *(_QWORD *)(v5 + 16);
        v12 = *(_QWORD *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_23F3F0F08(v12);
          sub_23F376C88();
          v5 = v16;
        }
        *(_QWORD *)(v5 + 16) = v13 + 1;
        v14 = v5 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v9;
        *(_QWORD *)(v14 + 40) = v11;
      }
      ++v4;
    }
    while (v4 != *(_QWORD *)(v0 + 184));
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v0 + 256) = v5;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v17;
  sub_23F3F0F44(v17, (uint64_t)sub_23F3EFADC);
  return sub_23F3F0154(v5, v18, v19);
}

uint64_t sub_23F3EFADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 272) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v6 + 280) = a2;
    *(_QWORD *)(v6 + 288) = a1;
  }
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F3EFB70()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 128);
  sub_23F3F0E60();
  v1(v2, v3);
  sub_23F3F0E90();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F3EFC10()
{
  uint64_t v0;

  sub_23F3F0E14();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  swift_task_dealloc();
  sub_23F362CC8();
  return sub_23F38346C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3EFC74()
{
  uint64_t v0;

  sub_23F3F0E14();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  swift_task_dealloc();
  sub_23F362CC8();
  return sub_23F38346C(*(uint64_t (**)(void))(v0 + 8));
}

BOOL sub_23F3EFCD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  BOOL v31;
  _QWORD v33[6];

  v2 = sub_23F619E98();
  v33[4] = *(_QWORD *)(v2 - 8);
  v33[5] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v33[3] = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F35D2E8(&qword_256E70C98);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E70C90);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F6170B4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F35D2E8(&qword_256E71D18);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6170C0();
  sub_23F6170A8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v18 = sub_23F617048();
  if (sub_23F36195C((uint64_t)v17, 1, v18) == 1)
  {
    sub_23F3CFCB0((uint64_t)v17, &qword_256E71D18);
    return 0;
  }
  else
  {
    v20 = sub_23F61703C();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    v23 = v20 == 28261 && v22 == 0xE200000000000000;
    if (v23)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      v19 = 0;
      if ((v24 & 1) == 0)
        return v19;
    }
    v19 = 1;
    sub_23F6186B0();
    v25 = *(_QWORD *)(a1 + 16);
    if (v25)
    {
      sub_23F617BA0();
      v26 = v25 - 1;
      v33[2] = a1;
      v27 = a1 + 40;
      do
      {
        sub_23F6186D4();
        v28 = sub_23F35D2E8(&qword_256E70CB0);
        v29 = sub_23F36195C((uint64_t)v6, 1, v28);
        sub_23F3CFCB0((uint64_t)v6, &qword_256E70C98);
        v31 = v26-- != 0;
        v23 = v29 == 1;
        v19 = v29 != 1;
        if (v23)
          break;
        v27 += 16;
      }
      while (v31);
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v19;
}

uint64_t sub_23F3F0154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[36] = a3;
  v4[37] = v3;
  v4[34] = a1;
  v4[35] = a2;
  v5 = sub_23F619E98();
  v4[38] = v5;
  v4[39] = *(_QWORD *)(v5 - 8);
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E70760);
  v4[42] = swift_task_alloc();
  v6 = sub_23F617F0C();
  v4[43] = v6;
  v4[44] = *(_QWORD *)(v6 - 8);
  v4[45] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23F3F0214()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  os_log_type_t v21;
  _WORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  os_log_type_t v43;
  _WORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67[2];
  uint64_t v68[3];

  v1 = (_QWORD *)v0[34];
  if (!v1[2])
  {
    v20 = (void *)v0[40];
    sub_23F3F0F00();
    sub_23F619E8C();
    v21 = sub_23F3F0EEC();
    if (sub_23F3F0E3C(v21))
    {
      v22 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v22);
      sub_23F3F0DF0(&dword_23F35A000, v23, v24, "ConjunctionResponse: no dialogs");
      sub_23F3F0E04();
    }
    goto LABEL_32;
  }
  v3 = v1[4];
  v2 = v1[5];
  sub_23F35D2E8(&qword_256E700E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v2;
  sub_23F510D3C(1, (uint64_t)v1);
  v61 = v6;
  v65 = v7 >> 1;
  v8 = (v7 >> 1) - v6;
  if (__OFSUB__(v7 >> 1, v6))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v9 = MEMORY[0x24BEE4AF8];
  v62 = v0;
  if (v8)
  {
    v10 = v5;
    v66 = MEMORY[0x24BEE4AF8];
    sub_23F383738();
    sub_23F389CDC();
    sub_23F37B47C();
    if (v8 < 0)
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v60 = inited;
    v11 = 0;
    v12 = v61;
    inited = v10 + 16 * v61 + 8;
    v63 = v8;
    while (1)
    {
      v13 = v11 + 1;
      if (__OFADD__(v11, 1))
        break;
      if (v11 >= v8 || v12 + v11 >= v65)
        goto LABEL_39;
      v15 = *(_QWORD *)inited;
      v68[0] = *(_QWORD *)(inited - 8);
      v68[1] = v15;
      sub_23F3F0938(v68, v67);
      v16 = v67[0];
      v17 = v67[1];
      v18 = *(_QWORD *)(v66 + 16);
      if (v18 >= *(_QWORD *)(v66 + 24) >> 1)
      {
        sub_23F3F0E88();
        v12 = v61;
      }
      *(_QWORD *)(v66 + 16) = v18 + 1;
      v19 = v66 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v16;
      *(_QWORD *)(v19 + 40) = v17;
      ++v11;
      inited += 16;
      v8 = v63;
      if (v13 == v63)
      {
        swift_unknownObjectRelease();
        v0 = v62;
        v9 = MEMORY[0x24BEE4AF8];
        inited = v60;
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  sub_23F383738();
  sub_23F389CDC();
  swift_unknownObjectRelease();
LABEL_20:
  v68[0] = inited;
  sub_23F385EB0();
  v25 = v68[0];
  v26 = sub_23F3F1340(v68[0]);
  if (!v27)
  {
    v42 = (void *)v0[41];
    swift_bridgeObjectRelease();
    sub_23F619124();
    v20 = v42;
    sub_23F619E8C();
    v43 = sub_23F3F0EEC();
    if (sub_23F3F0E3C(v43))
    {
      v44 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v44);
      sub_23F3F0DF0(&dword_23F35A000, v45, v46, "ConjunctionResponse: no clauses");
      sub_23F3F0E04();
    }
LABEL_32:
    v47 = v0[39];

    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
    sub_23F3F0EB0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    ((void (*)(_QWORD, _QWORD))v0[1])(0, 0);
    return;
  }
  inited = v27;
  v65 = v26;
  sub_23F5B9EC8(1, v25);
  v31 = v30 >> 1;
  v32 = (v30 >> 1) - v29;
  if (!__OFSUB__(v30 >> 1, v29))
  {
    if (!v32)
    {
      swift_unknownObjectRelease();
      v35 = MEMORY[0x24BEE4AF8];
LABEL_34:
      sub_23F383738();
      sub_23F617BA0();
      v48 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_35;
      goto LABEL_44;
    }
    v33 = v28;
    v34 = v29;
    v68[0] = v9;
    sub_23F37B47C();
    if (v32 < 0)
    {
      __break(1u);
      return;
    }
    v35 = v68[0];
    v36 = v33 + 16 * v34 + 8;
    while (v34 < v31)
    {
      swift_bridgeObjectRetain_n();
      sub_23F5B9ECC(1);
      v37 = MEMORY[0x24266F6AC]();
      v39 = v38;
      swift_bridgeObjectRelease();
      sub_23F38458C();
      v68[0] = v35;
      v40 = *(_QWORD *)(v35 + 16);
      if (v40 >= *(_QWORD *)(v35 + 24) >> 1)
      {
        sub_23F3F0E88();
        v35 = v68[0];
      }
      *(_QWORD *)(v35 + 16) = v40 + 1;
      v41 = v35 + 16 * v40;
      *(_QWORD *)(v41 + 32) = v37;
      *(_QWORD *)(v41 + 40) = v39;
      ++v34;
      v36 += 16;
      if (v31 == v34)
      {
        swift_unknownObjectRelease();
        goto LABEL_34;
      }
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  sub_23F3C0670();
  sub_23F376C88();
  v48 = v58;
LABEL_35:
  v49 = *(_QWORD *)(v48 + 16);
  if (v49 >= *(_QWORD *)(v48 + 24) >> 1)
  {
    sub_23F376C88();
    v48 = v59;
  }
  v64 = v62[42];
  v50 = (_QWORD *)v62[37];
  v51 = v62[34];
  *(_QWORD *)(v48 + 16) = v49 + 1;
  v52 = v48 + 16 * v49;
  *(_QWORD *)(v52 + 32) = v65;
  *(_QWORD *)(v52 + 40) = inited;
  sub_23F362D18();
  swift_bridgeObjectRelease();
  sub_23F35EA9C(v50, v50[3]);
  sub_23F35D2E8(&qword_256E71D08);
  v53 = swift_initStackObject();
  *(_OWORD *)(v53 + 16) = xmmword_23F61E980;
  v62[30] = 0x65736E6F70736572;
  v62[31] = 0xE900000000000073;
  sub_23F3F0ED8();
  v54 = sub_23F35D2E8(&qword_256E70580);
  *(_QWORD *)(v53 + 96) = v54;
  *(_QWORD *)(v53 + 72) = v51;
  v62[32] = 0xD000000000000014;
  v62[33] = 0x800000023F635090;
  sub_23F617BA0();
  sub_23F3F0ED8();
  *(_QWORD *)(v53 + 168) = v54;
  *(_QWORD *)(v53 + 144) = v48;
  v55 = sub_23F61BFEC();
  v62[46] = v55;
  v56 = sub_23F616E68();
  sub_23F36196C(v64, 1, 1, v56);
  v57 = (_QWORD *)swift_task_alloc();
  v62[47] = v57;
  *v57 = v62;
  v57[1] = sub_23F3F07F0;
  sub_23F3E4588(v62[45], 0xD00000000000001ELL, 0x800000023F635070, v55, v62[42], v62[35], v62[36]);
}

uint64_t sub_23F3F07F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 384) = v0;
  swift_task_dealloc();
  sub_23F3CFCB0(*(_QWORD *)(v2 + 336), &qword_256E70760);
  sub_23F362D18();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F3F0870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 352);
  v1 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 344);
  v4 = sub_23F617ED0();
  v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F366708();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v6);
}

uint64_t sub_23F3F08F4()
{
  uint64_t v0;

  sub_23F3F0EB0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F3F0938@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  int v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;

  v5 = sub_23F619E98();
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v49 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E70C98);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F35D2E8(&qword_256E70C90);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v14 = a1[1];
  sub_23F6186B0();
  v43 = v15;
  v44 = v14;
  sub_23F38813C();
  if (!*(_QWORD *)(sub_23F61C808() + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v38 = v15;
  v39 = v11;
  v40 = a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  sub_23F6186E0();
  if (!v2)
  {
    swift_bridgeObjectRelease();
    v24 = sub_23F35D2E8(&qword_256E70CB0);
    v25 = sub_23F36195C((uint64_t)v9, 1, v24);
    sub_23F3CFCB0((uint64_t)v9, &qword_256E70C98);
    v11 = v39;
    a2 = v40;
    v15 = v38;
    if (v25 != 1)
    {
      sub_23F617BA0();
      sub_23F3EEEA4(1);
      v28 = sub_23F61C748();
      v49 = (char *)v10;
      v30 = v29;
      swift_bridgeObjectRelease();
      sub_23F617BA0();
      sub_23F510D5C(1, v15, v14);
      v47 = v28;
      v48 = v30;
      v43 = v31;
      v44 = v32;
      v45 = v33;
      v46 = v34;
      sub_23F3F0DA4();
      sub_23F617BA0();
      sub_23F61C268();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v35 = v48;
      *a2 = v47;
      a2[1] = v35;
      return (*(uint64_t (**)(char *, char *))(v11 + 8))(v13, v49);
    }
LABEL_7:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *a2 = v15;
    a2[1] = v14;
    return sub_23F617BA0();
  }
  swift_bridgeObjectRelease();
  sub_23F619124();
  v16 = v2;
  v17 = v2;
  v18 = sub_23F619E8C();
  v19 = sub_23F61C628();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v37 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v20 = 138412290;
    v36[1] = v20 + 4;
    v21 = v2;
    v22 = _swift_stdlib_bridgeErrorToNSError();
    v43 = v22;
    sub_23F61C790();
    v23 = v37;
    *v37 = v22;

    _os_log_impl(&dword_23F35A000, v18, v19, "ConjunctionResponse: error checking if dialog matches expected format: %@", v20, 0xCu);
    sub_23F35D2E8(&qword_256E6FAB0);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v23, -1, -1);
    MEMORY[0x242670B70](v20, -1, -1);

  }
  else
  {

  }
  v27 = v40;

  (*(void (**)(char *, uint64_t))(v41 + 8))(v49, v42);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v10);
  *v27 = v38;
  v27[1] = v14;
  return sub_23F617BA0();
}

unint64_t sub_23F3F0DA4()
{
  unint64_t result;

  result = qword_256E71D10;
  if (!qword_256E71D10)
  {
    result = MEMORY[0x242670A44](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_256E71D10);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConjunctionResponseHelper()
{
  return &type metadata for ConjunctionResponseHelper;
}

void sub_23F3F0DF0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  NSObject *v5;
  uint8_t *v6;

  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

void sub_23F3F0E04()
{
  JUMPOUT(0x242670B70);
}

uint64_t sub_23F3F0E14()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 208))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 128));
}

BOOL sub_23F3F0E3C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_23F3F0E4C()
{
  sub_23F37B47C();
}

uint64_t sub_23F3F0E60()
{
  return sub_23F617EC4();
}

void sub_23F3F0E74()
{
  sub_23F37B47C();
}

void sub_23F3F0E88()
{
  sub_23F37B47C();
}

uint64_t sub_23F3F0E90()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3F0EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(void))
{
  return a14();
}

uint64_t sub_23F3F0EB0()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3F0EC0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_23F3F0ED8()
{
  return sub_23F61C88C();
}

uint64_t sub_23F3F0EE4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F3F0EEC()
{
  return sub_23F61C628();
}

_WORD *sub_23F3F0EF4(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23F3F0F00()
{
  return sub_23F619124();
}

BOOL sub_23F3F0F08@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_23F3F0F1C()
{
  return 32;
}

_QWORD *sub_23F3F0F44@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

void sub_23F3F0F58(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, unint64_t, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t (*v48)(uint64_t);
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  __int128 v59;
  uint64_t v60;
  char *v61;

  v2 = sub_23F35D2E8(&qword_256E701D0);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v47 = (_QWORD *)v4;
  v51 = sub_23F35D2E8(&qword_256E71E30);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v50 = v6;
  v7 = &qword_256E701C0;
  v55 = sub_23F35D2E8(&qword_256E701C0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3834D0();
  v49 = v9;
  sub_23F383588();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v42 - v12;
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3838E4();
  v44 = v14;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v15);
  v43 = (uint64_t *)((char *)&v42 - v16);
  v61 = (char *)MEMORY[0x24BEE4AF8];
  sub_23F37BEF8();
  v59 = *a1;
  v17 = *((_QWORD *)a1 + 2);
  v48 = (uint64_t (*)(uint64_t))*((_QWORD *)a1 + 3);
  v60 = v17;
  v19 = *((_QWORD *)&v59 + 1);
  v18 = v59;
  v20 = *((_QWORD *)a1 + 4);
  v58 = 0;
  sub_23F3F3F3C((uint64_t)&v59);
  v56 = v20;
  swift_retain();
  v21 = 0;
  v57 = v18;
  v53 = v18;
  v54 = v17;
  v52 = v19;
LABEL_2:
  v22 = v57;
  while (1)
  {
    if (v19 == v22)
      goto LABEL_17;
    if (v19 < v18)
      break;
    if (v57 < v18)
      goto LABEL_19;
    if (v22 >= v19)
      goto LABEL_20;
    v23 = *(_QWORD *)(v17 + 16);
    if (v21 == v23)
      goto LABEL_17;
    if (v21 >= v23)
      goto LABEL_21;
    v24 = sub_23F61B2E4();
    v25 = v7;
    v26 = *(_QWORD *)(v24 - 8);
    v27 = v17
        + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))
        + *(_QWORD *)(v26 + 72) * v21;
    v28 = v50 + *(int *)(v51 + 48);
    v29 = *(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 16);
    v29(v28, v27, v24);
    v30 = (uint64_t)v13;
    v31 = v49;
    v32 = (char *)v49 + *(int *)(v55 + 48);
    *v49 = v22;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 32);
    v7 = v25;
    v33(v32, v28, v24);
    v34 = (uint64_t)v31;
    v13 = (char *)v30;
    sub_23F383004(v34, v30, v25);
    if ((v48(v30) & 1) != 0)
    {
      v35 = v44;
      sub_23F383004(v30, v44, v25);
      v36 = v43;
      sub_23F383004(v35, (uint64_t)v43, v25);
      v37 = (char *)v36 + *(int *)(v55 + 48);
      v38 = v47;
      v42 = (char *)v47 + *(int *)(v46 + 64);
      v57 = *v36;
      sub_23F61B260();
      v29((uint64_t)v42, (unint64_t)v37, v24);
      *v38 = v57;
      v7 = v25;
      sub_23F39E4B8((uint64_t)v36, v25);
      if ((sub_23F3848A8() & 1) == 0)
      {
        sub_23F37BEF8();
        v37 = v61;
      }
      v39 = *((_QWORD *)v37 + 2);
      v19 = v52;
      if (v39 >= *((_QWORD *)v37 + 3) >> 1)
      {
        sub_23F37BEF8();
        v37 = v61;
      }
      ++v21;
      v57 = v22 + 1;
      *((_QWORD *)v37 + 2) = v39 + 1;
      sub_23F383E04();
      sub_23F383004((uint64_t)v47, (uint64_t)&v37[v40 + *(_QWORD *)(v41 + 72) * v39], &qword_256E701D0);
      v18 = v53;
      v17 = v54;
      if ((v58 & 1) != 0)
      {
LABEL_17:
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_2;
    }
    sub_23F39E4B8(v30, v25);
    ++v21;
    ++v22;
    v18 = v53;
    v17 = v54;
    v19 = v52;
    if ((v58 & 1) != 0)
      goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
}

uint64_t sub_23F3F1328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3F156C(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE56CD0], a2);
}

uint64_t sub_23F3F1334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3F156C(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0], a2);
}

uint64_t sub_23F3F1340(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(a1 + 16 * v1 + 16);
  sub_23F383738();
  return v2;
}

uint64_t sub_23F3F1380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3F1450(a1, &qword_256E701D0, a2);
}

void sub_23F3F138C(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
    sub_23F3F4074();
  sub_23F362B80();
}

void sub_23F3F13DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 1 == a3)
    goto LABEL_4;
  if ((uint64_t)(a4 >> 1) > a3)
  {
    sub_23F3F4074();
LABEL_4:
    sub_23F362B80();
    return;
  }
  __break(1u);
}

uint64_t sub_23F3F1438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3F156C(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE557B8], a2);
}

uint64_t sub_23F3F1444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3F1450(a1, &qword_256E70280, a2);
}

uint64_t sub_23F3F1450@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v7 = v5 - 1;
    v8 = sub_23F35D2E8(a2);
    sub_23F383D14();
    sub_23F382EF8(a1 + v9 + *(_QWORD *)(v10 + 72) * v7, a3, a2);
    v11 = a3;
    v12 = 0;
    v13 = 1;
    v14 = v8;
  }
  else
  {
    sub_23F35D2E8(a2);
    v11 = sub_23F3F4064();
  }
  return sub_23F36196C(v11, v12, v13, v14);
}

uint64_t sub_23F3F14DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3F156C(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE55DB0], a2);
}

uint64_t sub_23F3F14E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(a1 + 32 * v1);
  sub_23F617BA0();
  return v2;
}

uint64_t sub_23F3F1548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3F156C(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE69080], a2);
}

uint64_t sub_23F3F1554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3F156C(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE555E0], a2);
}

uint64_t sub_23F3F1560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3F156C(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE57AF0], a2);
}

uint64_t sub_23F3F156C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = v4 - 1;
    v7 = a2(0);
    sub_23F383D14();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a3, a1 + v8 + *(_QWORD *)(v9 + 72) * v6, v7);
    v10 = a3;
    v11 = 0;
    v12 = 1;
    v13 = v7;
  }
  else
  {
    a2(0);
    v10 = sub_23F3F4064();
  }
  return sub_23F36196C(v10, v11, v12, v13);
}

uint64_t sub_23F3F15F0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
    return *(_QWORD *)(a1 + 8 * v1 + 24);
  else
    return 0;
}

uint64_t sub_23F3F1614@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = (_QWORD *)(result + 24 * v2);
    v4 = v3[1];
    v5 = v3[2];
    v6 = v3[3];
    *a2 = v4;
    a2[1] = v5;
    a2[2] = v6;
    swift_retain();
    return sub_23F617BA0();
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  return result;
}

uint64_t sub_23F3F166C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_23F35D2E8(&qword_256E701D0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3D9CCC();
  sub_23F35D2E8(&qword_256E701C8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  v8 = v7 - v6;
  sub_23F382EF8(a1, v7 - v6, &qword_256E701C8);
  if (sub_23F36195C(v8, 1, v3) == 1)
    return 0;
  sub_23F383004(v8, (uint64_t)v1, &qword_256E701D0);
  v9 = sub_23F3F34C8(*v1);
  sub_23F39E4B8((uint64_t)v1, &qword_256E701D0);
  return v9;
}

uint64_t sub_23F3F1788()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23F619E44();
  sub_23F3F3F64(v1, qword_256E71D20);
  sub_23F361498(v1, (uint64_t)qword_256E71D20);
  sub_23F6190F4();
  return sub_23F619E2C();
}

void ContextRetrievalService.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_23F6191FC();
  sub_23F3668A0();
  *(_QWORD *)(v0 + 112) = sub_23F6191F0();
  sub_23F362928();
}

void ContextRetrievalService.init()()
{
  uint64_t v0;

  swift_defaultActor_initialize();
  sub_23F6191FC();
  sub_23F3668A0();
  *(_QWORD *)(v0 + 112) = sub_23F6191F0();
  sub_23F362928();
}

uint64_t static ContextRetrievalService.isEnabled()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = sub_23F618B90();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F3D9CCC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v0, *MEMORY[0x24BE57418], v1);
  v3 = sub_23F618B84();
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return v3 & 1;
}

uint64_t sub_23F3F1920(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[15] = a1;
  v2[16] = v1;
  v3 = sub_23F619E98();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = sub_23F3E0220();
  v2[20] = sub_23F3E0220();
  v2[21] = sub_23F3E0220();
  v4 = sub_23F619E50();
  v2[22] = v4;
  v2[23] = *(_QWORD *)(v4 - 8);
  v2[24] = sub_23F3E0220();
  v2[25] = sub_23F3E0220();
  v2[26] = sub_23F3E0220();
  v2[27] = sub_23F3E0220();
  v2[28] = sub_23F3E0220();
  v2[29] = sub_23F3E0220();
  v5 = sub_23F61B2C0();
  v2[30] = v5;
  v2[31] = *(_QWORD *)(v5 - 8);
  v2[32] = sub_23F366578();
  v6 = sub_23F61A5F4();
  v2[33] = v6;
  v2[34] = *(_QWORD *)(v6 - 8);
  v2[35] = sub_23F366578();
  sub_23F35D2E8(&qword_256E702E0);
  v2[36] = sub_23F366578();
  v7 = sub_23F61B2E4();
  v2[37] = v7;
  v2[38] = *(_QWORD *)(v7 - 8);
  v2[39] = sub_23F3E0220();
  v2[40] = sub_23F3E0220();
  sub_23F35D2E8(&qword_256E701C8);
  v2[41] = sub_23F3E0220();
  v2[42] = sub_23F3E0220();
  v8 = sub_23F61B164();
  v2[43] = v8;
  v2[44] = *(_QWORD *)(v8 - 8);
  v2[45] = sub_23F366578();
  v9 = sub_23F619E20();
  v2[46] = v9;
  v2[47] = *(_QWORD *)(v9 - 8);
  v2[48] = sub_23F3E0220();
  v2[49] = sub_23F3E0220();
  v2[50] = sub_23F3E0220();
  v2[51] = sub_23F3E0220();
  v2[52] = sub_23F3E0220();
  v2[53] = sub_23F3E0220();
  v2[54] = sub_23F3E0220();
  v2[55] = sub_23F3E0220();
  return swift_task_switch();
}

uint64_t sub_23F3F1B08()
{
  uint64_t v0;
  uint8_t *v1;
  uint64_t v2;
  NSObject *v3;
  os_signpost_type_t v4;
  _WORD *v5;
  os_signpost_id_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  os_log_type_t v37;
  _WORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  os_log_type_t v51;
  _WORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _WORD *v56;
  os_signpost_id_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  os_log_type_t v64;
  _WORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  if (qword_256E6EE50 != -1)
    swift_once();
  v2 = sub_23F619E44();
  sub_23F361498(v2, (uint64_t)qword_256E71D20);
  sub_23F619E38();
  sub_23F619DFC();
  v3 = sub_23F619E38();
  v4 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v5 = (_WORD *)sub_23F3EEE70();
    sub_23F3F40B8(v5);
    v6 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v3, v4, v6, "ContextRetrievalService.retrieveContextFromIntelligenceFlow", "", v1, 2u);
    MEMORY[0x242670B70](v1, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 440);
  v10 = *(_QWORD *)(v0 + 368);
  v9 = *(_QWORD *)(v0 + 376);
  v12 = *(_QWORD *)(v0 + 352);
  v11 = *(_QWORD *)(v0 + 360);
  v13 = *(_QWORD *)(v0 + 336);
  v107 = *(_QWORD *)(v0 + 344);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v10);
  sub_23F619E74();
  sub_23F3668A0();
  sub_23F619E68();
  v106 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
  v106(v8, v10);
  sub_23F61B128();
  v14 = sub_23F61B14C();
  v15 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v15(v11, v107);
  v16 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = v16;
  *(_QWORD *)(v0 + 32) = v14;
  *(_QWORD *)(v0 + 40) = sub_23F3F3B20;
  *(_QWORD *)(v0 + 48) = 0;
  sub_23F383738();
  sub_23F3F0F58((__int128 *)(v0 + 16));
  v18 = v17;
  sub_23F362984();
  sub_23F3F1450(v18, &qword_256E701D0, v13);
  swift_bridgeObjectRelease();
  sub_23F3F166C(v13);
  v20 = v19;
  v22 = v21;
  sub_23F39E4B8(v13, &qword_256E701C8);
  sub_23F362984();
  if (!v22)
  {
    v36 = *(void **)(v0 + 152);
    sub_23F6190F4();
    sub_23F619E8C();
    v37 = sub_23F3F0EEC();
    if (sub_23F3F0E3C(v37))
    {
      v38 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v38);
      sub_23F3F0DF0(&dword_23F35A000, v39, v40, "No query found in transcript");
      sub_23F3F0E04();
    }
    v41 = (uint64_t *)(v0 + 400);
    v42 = *(_QWORD *)(v0 + 144);
    v43 = *(_QWORD *)(v0 + 136);

    sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8));
    sub_23F3F3FF0();
    sub_23F3F3FB8();
    sub_23F61C688();
    if ((sub_23F3F3FCC() & 1) != 0)
    {
      v44 = *(_QWORD *)(v0 + 184);
      goto LABEL_17;
    }
LABEL_26:
    v90 = *v41;
    v88 = MEMORY[0x24BEE4AF8];
    goto LABEL_27;
  }
  v109 = v20;
  v111 = v22;
  v11 = *(_QWORD *)(v0 + 360);
  v23 = *(_QWORD *)(v0 + 344);
  v24 = *(_QWORD *)(v0 + 328);
  sub_23F61B128();
  v25 = sub_23F61B14C();
  v15(v11, v23);
  v26 = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = v26;
  *(_QWORD *)(v0 + 72) = v25;
  *(_QWORD *)(v0 + 80) = sub_23F3F3B20;
  *(_QWORD *)(v0 + 88) = 0;
  sub_23F383738();
  sub_23F3F0F58((__int128 *)(v0 + 56));
  v28 = v27;
  sub_23F362984();
  sub_23F3F1450(v28, &qword_256E701D0, v24);
  swift_bridgeObjectRelease();
  sub_23F362984();
  v29 = sub_23F35D2E8(&qword_256E701D0);
  v30 = sub_23F36195C(v24, 1, v29);
  v31 = *(_QWORD *)(v0 + 328);
  if (v30 == 1)
  {
    v32 = *(_QWORD *)(v0 + 296);
    sub_23F39E4B8(v31, &qword_256E701C8);
    v33 = sub_23F3F4064();
    sub_23F36196C(v33, v34, v35, v32);
    goto LABEL_13;
  }
  v45 = *(_QWORD *)(v0 + 296);
  v46 = *(_QWORD *)(v0 + 288);
  v47 = v31 + *(int *)(v29 + 48);
  v11 = *(_QWORD *)(*(_QWORD *)(v0 + 304) + 32);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v46, v31 + *(int *)(v29 + 64), v45);
  sub_23F36196C(v46, 0, 1, v45);
  v48 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
  if (sub_23F36195C(v46, 1, v45) == 1)
  {
LABEL_13:
    v49 = *(_QWORD *)(v0 + 288);
    v50 = *(void **)(v0 + 160);
    swift_bridgeObjectRelease();
    sub_23F39E4B8(v49, &qword_256E702E0);
    sub_23F6190F4();
    sub_23F619E8C();
    v51 = sub_23F3F0EEC();
    if (sub_23F3F0E3C(v51))
    {
      v52 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v52);
      sub_23F3F0DF0(&dword_23F35A000, v53, v54, "No query event found in transcript");
      sub_23F3F0E04();
    }
    v41 = (uint64_t *)(v0 + 408);
    v43 = *(_QWORD *)(v0 + 136);
    v55 = *(_QWORD *)(v0 + 144);

    sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
    sub_23F3F3FF0();
    sub_23F3F3FB8();
    sub_23F61C688();
    if ((sub_23F3F3FCC() & 1) != 0)
    {
      v44 = *(_QWORD *)(v0 + 184);
      goto LABEL_17;
    }
    goto LABEL_26;
  }
  v59 = *(_QWORD *)(v0 + 360);
  v60 = *(_QWORD *)(v0 + 344);
  ((void (*)(_QWORD, _QWORD, _QWORD))v11)(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296));
  sub_23F61B128();
  sub_23F5F44D4();
  v62 = v61;
  v15(v59, v60);
  if (!v62)
  {
    v63 = *(void **)(v0 + 168);
    swift_bridgeObjectRelease();
    sub_23F6190F4();
    sub_23F619E8C();
    v64 = sub_23F3F0EEC();
    if (sub_23F3F0E3C(v64))
    {
      v65 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v65);
      sub_23F3F0DF0(&dword_23F35A000, v66, v67, "Could not find client request ID in transcript");
      sub_23F3F0E04();
    }
    v41 = (uint64_t *)(v0 + 416);
    v43 = *(_QWORD *)(v0 + 296);
    v11 = *(_QWORD *)(v0 + 304);
    v68 = *(_QWORD *)(v0 + 168);
    v69 = *(_QWORD *)(v0 + 136);
    v70 = *(_QWORD *)(v0 + 144);

    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v69);
    sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    sub_23F3F3FF0();
    sub_23F3F3FB8();
    sub_23F61C688();
    if ((sub_23F3F3FCC() & 1) != 0)
    {
      v44 = *(_QWORD *)(v0 + 184);
LABEL_17:
      swift_retain();
      sub_23F3F40DC();
      swift_release();
      if (sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v44 + 88)) == *MEMORY[0x24BEE7810])
        goto LABEL_19;
      goto LABEL_18;
    }
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  sub_23F3F26E0(v109, v111);
  swift_bridgeObjectRelease();
  sub_23F3F3284();
  v104 = *(_QWORD *)(v0 + 312);
  v108 = *(_QWORD *)(v0 + 304);
  v110 = *(_QWORD *)(v0 + 296);
  v101 = *(_QWORD *)(v0 + 280);
  v80 = *(_QWORD *)(v0 + 264);
  v79 = *(_QWORD *)(v0 + 272);
  v81 = *(_QWORD *)(v0 + 248);
  v43 = *(_QWORD *)(v0 + 256);
  v82 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v43, v101, v80);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v81 + 104))(v43, *MEMORY[0x24BE56B60], v82);
  sub_23F61B23C();
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v43, v82);
  sub_23F35D2E8(&qword_256E701A0);
  LOBYTE(v43) = v108;
  v83 = (*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
  v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = xmmword_23F61E7E0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v84 + v83, v104, v110);
  (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v101, v80);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v108 + 8));
  v11 = sub_23F3F3FF0();
  sub_23F619E5C();
  sub_23F61C688();
  v85 = sub_23F3F3FCC();
  if ((v85 & 1) != 0)
  {
    v86 = *(_QWORD *)(v0 + 184);
    swift_retain();
    sub_23F3F40DC();
    swift_release();
    if (sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v86 + 88)) == *MEMORY[0x24BEE7810])
    {
LABEL_19:
      v56 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v56);
      v57 = sub_23F619E08();
      sub_23F3F3FF8(&dword_23F35A000, v58, (os_signpost_type_t)v43, v57, "ContextRetrievalService.retrieveContextFromIntelligenceFlow");
      sub_23F3F0E04();
    }
LABEL_18:
    sub_23F3F4054();
    goto LABEL_19;
  }
  v88 = v84;
  v90 = *(_QWORD *)(v0 + 424);
LABEL_27:
  v91 = *(_QWORD *)(v0 + 360);
  v92 = *(_QWORD *)(v0 + 336);
  v93 = *(_QWORD *)(v0 + 328);
  v94 = *(_QWORD *)(v0 + 320);
  v95 = *(_QWORD *)(v0 + 312);
  v96 = *(_QWORD *)(v0 + 288);
  v97 = *(_QWORD *)(v0 + 280);
  v98 = *(_QWORD *)(v0 + 256);
  v99 = *(_QWORD *)(v0 + 232);
  v100 = *(_QWORD *)(v0 + 224);
  v102 = *(_QWORD *)(v0 + 216);
  v103 = *(_QWORD *)(v0 + 208);
  v105 = *(_QWORD *)(v0 + 200);

  sub_23F3F40D0(v90, v71, v72, v73, v74, v75, v76, v77, v87, v88, v90, v91, v92, v93, v94, v95, v96, v97, v98,
    v99,
    v100,
    v102,
    v103,
    v105,
    v106);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v89);
}

uint64_t sub_23F3F26E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_signpost_type_t v35;
  _WORD *v36;
  os_signpost_id_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  _WORD *v53;
  os_signpost_id_t v54;
  uint64_t v55;
  NSObject *v56;
  os_signpost_type_t v57;
  uint8_t *v58;
  os_signpost_id_t v59;
  uint64_t v60;
  uint64_t v62;
  NSObject *v63;
  os_signpost_type_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  const char *v68;
  _WORD *v69;
  os_signpost_id_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  _BYTE *v94;
  _BYTE v95[12];
  int v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  v111 = a1;
  v112 = a2;
  v2 = sub_23F618D28();
  v121 = *(_QWORD *)(v2 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3834D0();
  v117 = v4;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3838E4();
  v120 = v6;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3838E4();
  v119 = v8;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v9);
  v118 = &v95[-v10];
  v11 = sub_23F619E98();
  v103 = *(_QWORD *)(v11 - 8);
  v104 = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v107 = v13;
  v14 = sub_23F619E50();
  v108 = *(_QWORD *)(v14 - 8);
  v109 = v14;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3834D0();
  v101 = v16;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v17);
  v105 = &v95[-v18];
  v19 = sub_23F619E20();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3834D0();
  v106 = v21;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3838E4();
  v110 = v23;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3838E4();
  v113 = v25;
  sub_23F383588();
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = &v95[-v28];
  MEMORY[0x24BDAC7A8](v27);
  v31 = &v95[-v30];
  if (qword_256E6EE50 != -1)
    swift_once();
  v32 = sub_23F619E44();
  v33 = sub_23F361498(v32, (uint64_t)qword_256E71D20);
  sub_23F619E38();
  sub_23F619DFC();
  v114 = v33;
  v34 = sub_23F619E38();
  v35 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v36 = (_WORD *)sub_23F3EEE70();
    sub_23F3F40B8(v36);
    v37 = sub_23F619E08();
    sub_23F3F400C(&dword_23F35A000, v34, v35, v37, "ContextAPI.retrieveRequiredContextValues", "");
    sub_23F366530();
  }

  v38 = *(_QWORD **)(v20 + 16);
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v38)(v29, v31, v19);
  sub_23F619E74();
  swift_allocObject();
  v39 = sub_23F619E68();
  v40 = v20;
  v41 = v29;
  v42 = v39;
  v43 = *(char **)(v40 + 8);
  ((void (*)(_BYTE *, uint64_t))v43)(v31, v19);
  v44 = v116;
  v45 = v115[14];
  v46 = sub_23F6191C0();
  if (v44)
  {
    v47 = v42;
    swift_release();
  }
  else
  {
    v97 = v45;
    v98 = v41;
    v115 = v38;
    v116 = v43;
    v100 = v46;
    v48 = sub_23F3F40A4();
    sub_23F619E5C();
    v96 = sub_23F61C688();
    v49 = sub_23F61C718();
    v50 = v117;
    v99 = v42;
    v102 = v19;
    if ((v49 & 1) != 0)
    {
      swift_retain();
      sub_23F619E80();
      swift_release();
      v51 = v108;
      if (sub_23F3F40C4(*(uint64_t (**)(uint64_t, uint64_t))(v108 + 88)) == *MEMORY[0x24BEE7810])
      {
        v52 = "[Error] Interval already ended";
      }
      else
      {
        sub_23F3F40C4(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
        v52 = "";
      }
      v53 = (_WORD *)sub_23F3EEE70();
      sub_23F3F40B8(v53);
      v54 = sub_23F619E08();
      sub_23F3F400C(&dword_23F35A000, v48, (os_signpost_type_t)v96, v54, "ContextAPI.retrieveRequiredContextValues", v52);
      sub_23F366530();
    }

    sub_23F3F4084();
    sub_23F3F40A4();
    v55 = v110;
    sub_23F619DFC();
    v56 = sub_23F619E38();
    v57 = sub_23F61C694();
    if ((sub_23F61C718() & 1) != 0)
    {
      v58 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v58 = 0;
      v59 = sub_23F619E08();
      _os_signpost_emit_with_name_impl(&dword_23F35A000, v56, v57, v59, "ContextAPI.retrieveContextValues", "", v58, 2u);
      sub_23F366530();
    }

    ((void (*)(_BYTE *, uint64_t, uint64_t))v115)(v98, v55, v102);
    swift_allocObject();
    v60 = sub_23F619E68();
    sub_23F3F4084();
    v62 = sub_23F6191E4();
    v63 = sub_23F3F40A4();
    v113 = v60;
    sub_23F619E5C();
    v64 = sub_23F61C688();
    v65 = sub_23F61C718();
    v66 = v100;
    v114 = v62;
    if ((v65 & 1) != 0)
    {
      swift_retain();
      sub_23F619E80();
      swift_release();
      v67 = v108;
      if (sub_23F3F40C4(*(uint64_t (**)(uint64_t, uint64_t))(v108 + 88)) == *MEMORY[0x24BEE7810])
      {
        v68 = "[Error] Interval already ended";
      }
      else
      {
        sub_23F3F40C4(*(uint64_t (**)(uint64_t, uint64_t))(v67 + 8));
        v68 = "";
      }
      v69 = (_WORD *)sub_23F3EEE70();
      sub_23F3F40B8(v69);
      v70 = sub_23F619E08();
      sub_23F3F400C(&dword_23F35A000, v63, v64, v70, "ContextAPI.retrieveContextValues", v68);
      sub_23F366530();
    }

    sub_23F3F4084();
    v71 = v107;
    sub_23F6190F4();
    sub_23F617BA0();
    sub_23F617BA0();
    v72 = sub_23F619E8C();
    v73 = sub_23F61C61C();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = swift_slowAlloc();
      *(_DWORD *)v74 = 134218240;
      v122 = *(_QWORD *)(v66 + 16);
      sub_23F61C790();
      sub_23F38458C();
      *(_WORD *)(v74 + 12) = 2048;
      v122 = *(_QWORD *)(v114 + 16);
      sub_23F61C790();
      sub_23F38432C();
      _os_log_impl(&dword_23F35A000, v72, v73, "Required context size = %ld, Utterance context size = %ld", (uint8_t *)v74, 0x16u);
      sub_23F366530();
    }

    sub_23F38432C();
    sub_23F38458C();
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v71, v104);
    v75 = *(_QWORD *)(v66 + 16);
    if (v75)
    {
      sub_23F3F3FD8();
      sub_23F383E04();
      v116 = v76;
      v77 = &v76[v66];
      v79 = *(_QWORD *)(v78 + 72);
      v115 = *(_QWORD **)(v78 + 16);
      do
      {
        ((void (*)(uint64_t, char *, uint64_t))v115)(v119, v77, v2);
        if (qword_256E6EE58 != -1)
          swift_once();
        sub_23F3F3CD0(&qword_256E71D40, MEMORY[0x24BE577C0]);
        v80 = sub_23F3F408C();
        v82 = v81;
        sub_23F3F3CD0(&qword_256E71D48, MEMORY[0x24BE577D0]);
        sub_23F616AB4();
        sub_23F3F3D0C(v80, v82);
        (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v119, v2);
        v47 = v122;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3F402C();
          v47 = v122;
        }
        v83 = *(_QWORD *)(v47 + 16);
        if (v83 >= *(_QWORD *)(v47 + 24) >> 1)
        {
          sub_23F37BEC4();
          v47 = v122;
        }
        *(_QWORD *)(v47 + 16) = v83 + 1;
        (*(void (**)(char *, _BYTE *, uint64_t))(v121 + 32))(&v116[v47 + v83 * v79], v118, v2);
        v122 = v47;
        v77 += v79;
        --v75;
      }
      while (v75);
      sub_23F3F40AC();
      v50 = v117;
      v62 = v114;
    }
    else
    {
      sub_23F38458C();
      v47 = MEMORY[0x24BEE4AF8];
    }
    v84 = *(_QWORD *)(v62 + 16);
    if (v84)
    {
      sub_23F3F3FD8();
      sub_23F383E04();
      v119 = v85;
      v86 = v62 + v85;
      v118 = *(_BYTE **)(v87 + 72);
      v116 = *(char **)(v87 + 16);
      do
      {
        ((void (*)(uint64_t, uint64_t, uint64_t))v116)(v50, v86, v2);
        if (qword_256E6EE58 != -1)
          swift_once();
        v88 = qword_256E7FDA8;
        sub_23F3F3CD0(&qword_256E71D40, MEMORY[0x24BE577C0]);
        v89 = sub_23F3F408C();
        v91 = v90;
        sub_23F3F3CD0(&qword_256E71D48, MEMORY[0x24BE577D0]);
        v92 = v88;
        sub_23F616AB4();
        sub_23F3F3D0C(v89, v91);
        v50 = v117;
        (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v117, v2);
        if ((sub_23F3848A8() & 1) == 0)
        {
          sub_23F3F402C();
          v92 = v122;
        }
        v93 = *(_QWORD *)(v92 + 16);
        if (v93 >= *(_QWORD *)(v92 + 24) >> 1)
        {
          sub_23F37BEC4();
          v92 = v122;
        }
        *(_QWORD *)(v92 + 16) = v93 + 1;
        v94 = v118;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v121 + 32))(v92 + v119 + v93 * (_QWORD)v118, v120, v2);
        v122 = v92;
        v86 += (uint64_t)v94;
        --v84;
      }
      while (v84);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F38432C();
    }
    swift_release();
    swift_release();
  }
  return v47;
}

uint64_t sub_23F3F3194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(unint64_t, _QWORD, uint64_t);
  uint64_t v7;

  sub_23F35D2E8(&qword_256E71D50);
  v0 = sub_23F618AE8();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23F61E980;
  v5 = v4 + v3;
  v6 = *(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x24BE57298], v0);
  v6(v5 + v2, *MEMORY[0x24BE572E8], v0);
  v7 = sub_23F6191CC();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_23F3F3284()
{
  MEMORY[0x24266DAC8](MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8]);
  sub_23F367974();
  sub_23F61A5E8();
  sub_23F367974();
  return sub_23F61A5D0();
}

void sub_23F3F3330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_23F618D28();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  v6 = v5 - v4;
  sub_23F617D08();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  sub_23F61B134();
  sub_23F61B17C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  sub_23F61AE04();
  sub_23F3F4040();
}

uint64_t ContextRetrievalService.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ContextRetrievalService.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ContextRetrievalService.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3F3450()
{
  return ContextRetrievalService.unownedExecutor.getter();
}

uint64_t sub_23F3F3468()
{
  uint64_t result;

  sub_23F616B2C();
  swift_allocObject();
  qword_256E7FDA0 = sub_23F616B20();
  sub_23F616ACC();
  swift_allocObject();
  result = sub_23F616AC0();
  qword_256E7FDA8 = result;
  return result;
}

uint64_t sub_23F3F34C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unsigned int (*v26)(char *, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v66 = a1;
  v1 = sub_23F61A300();
  v51 = *(char **)(v1 - 8);
  v52 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v50 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F61A2E8();
  v54 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v53 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_23F61A36C();
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v57 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_23F61B0E0();
  v59 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v60 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E71E28);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v49 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v64 = (uint64_t)&v49 - v10;
  v65 = sub_23F619FF4();
  v63 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v62 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F61B2C0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v49 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v49 - v20;
  v22 = sub_23F61B470();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61B2CC();
  v26 = *(unsigned int (**)(char *, uint64_t))(v13 + 88);
  if (v26(v21, v12) != *MEMORY[0x24BE56C88])
  {
    v27 = *(void (**)(char *, uint64_t))(v13 + 8);
    v27(v21, v12);
    sub_23F61B2CC();
    if (v26(v19, v12) == *MEMORY[0x24BE56AD0])
    {
      (*(void (**)(char *, uint64_t))(v13 + 96))(v19, v12);
      v29 = v62;
      v28 = v63;
      v30 = v65;
      v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v63 + 32))(v62, v19, v65);
      v32 = MEMORY[0x24266D4F8](v31);
      v33 = v64;
      sub_23F3F3EC4(v32, v64);
      swift_bridgeObjectRelease();
      v34 = sub_23F61AC6C();
      if (sub_23F36195C(v33, 1, v34) == 1)
      {
        sub_23F39E4B8(v33, &qword_256E71E28);
      }
      else
      {
        sub_23F61A2DC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
      }
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
      return v66;
    }
    v27(v19, v12);
    sub_23F61B2CC();
    if (v26(v16, v12) != *MEMORY[0x24BE56C70])
    {
      v27(v16, v12);
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v13 + 96))(v16, v12);
    v36 = v59;
    v35 = v60;
    v37 = v61;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v60, v16, v61);
    v38 = v57;
    sub_23F61A8B8();
    v39 = v56;
    v40 = v58;
    v41 = (*(uint64_t (**)(char *, uint64_t))(v56 + 88))(v38, v58);
    if (v41 == *MEMORY[0x24BE553A8])
    {
LABEL_9:
      (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v40);
      return 0;
    }
    if (v41 == *MEMORY[0x24BE553B0])
    {
      (*(void (**)(char *, uint64_t))(v39 + 96))(v38, v40);
      v44 = v53;
      v43 = v54;
      v45 = v55;
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v53, v38, v55);
      sub_23F61A2DC();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
    }
    else
    {
      if (v41 == *MEMORY[0x24BE553B8])
      {
        (*(void (**)(char *, uint64_t))(v39 + 96))(v38, v40);
        v16 = v50;
        v25 = v51;
        v46 = v38;
        v38 = (char *)v52;
        v47 = (*((uint64_t (**)(char *, char *, uint64_t))v51 + 4))(v50, v46, v52);
        v48 = MEMORY[0x24266D804](v47);
        v22 = v49;
        sub_23F3F3EC4(v48, v49);
        swift_bridgeObjectRelease();
        v40 = sub_23F61AC6C();
        if (sub_23F36195C(v22, 1, v40) == 1)
        {
          sub_23F39E4B8(v22, &qword_256E71E28);
          (*((void (**)(char *, char *))v25 + 1))(v16, v38);
          (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
          return v66;
        }
      }
      else
      {
        if (v41 == *MEMORY[0x24BE55318])
          goto LABEL_9;
        sub_23F61CC58();
        __break(1u);
      }
      sub_23F61A2DC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v22, v40);
      (*((void (**)(char *, char *))v25 + 1))(v16, v38);
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
    return v66;
  }
  (*(void (**)(char *, uint64_t))(v13 + 96))(v21, v12);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v21, v22);
  sub_23F61A2DC();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  return v66;
}

uint64_t sub_23F3F3B20(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;

  v2 = sub_23F61B2B4();
  v25 = *(_QWORD *)(v2 - 8);
  sub_23F362850();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - v7;
  v24 = sub_23F61B2C0();
  v9 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  sub_23F38F964();
  v12 = v11 - v10;
  sub_23F35D2E8(&qword_256E701C0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v15 = *(int *)(v14 + 48);
  v17 = (char *)v16 + v15;
  v18 = (char *)a1 + v15;
  *v16 = *a1;
  v19 = sub_23F61B2E4();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
  sub_23F61B2CC();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  sub_23F61B290();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v24);
  v21 = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v6, *MEMORY[0x24BE56BE0], v2);
  LOBYTE(a1) = sub_23F61B2A8();
  v22 = *(void (**)(char *, uint64_t))(v21 + 8);
  v22(v6, v2);
  v22(v8, v2);
  return a1 & 1;
}

void sub_23F3F3CD0(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_23F618D28();
    atomic_store(MEMORY[0x242670A44](a2, v4), a1);
  }
  sub_23F362928();
}

uint64_t sub_23F3F3D0C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void sub_23F3F3D50(uint64_t a1)
{
  sub_23F3F3330(a1);
}

uint64_t type metadata accessor for ContextRetrievalService()
{
  return objc_opt_self();
}

uint64_t method lookup function for ContextRetrievalService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContextRetrievalService.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ContextRetrievalService.handle(_:plannerServiceContext:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 104) + *(_QWORD *)(*(_QWORD *)v2 + 104));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23F3F3E10;
  return v8(a1, a2);
}

uint64_t sub_23F3F3E10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of ContextRetrievalService.retrieveContext(query:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ContextRetrievalService.retrieveContextForTools()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ContextRetrievalService.contextReformattedWithStatements(requiredContext:utteranceContext:sessionState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_23F3F3EB4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return sub_23F617BA0();
  return result;
}

uint64_t sub_23F3F3EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_23F61AC6C();
  v6 = v5;
  if (v4)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)), v5);
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  return sub_23F36196C(a2, v7, 1, v6);
}

uint64_t sub_23F3F3F3C(uint64_t a1)
{
  sub_23F617BA0();
  return a1;
}

uint64_t *sub_23F3F3F64(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_23F3F3FA4(uint64_t a1)
{
  sub_23F3F3D50(a1);
}

uint64_t sub_23F3F3FB8()
{
  return sub_23F619E5C();
}

uint64_t sub_23F3F3FCC()
{
  return sub_23F61C718();
}

void sub_23F3F3FD8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
  sub_23F37BEC4();
}

uint64_t sub_23F3F3FF0()
{
  return sub_23F619E38();
}

void sub_23F3F3FF8(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  const char *v5;
  uint8_t *v6;
  NSObject *v7;

  _os_signpost_emit_with_name_impl(a1, v7, a3, a4, a5, v5, v6, 2u);
}

void sub_23F3F400C(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  uint8_t *v6;

  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, v6, 2u);
}

uint64_t sub_23F3F4018()
{
  return sub_23F619E5C();
}

void sub_23F3F402C()
{
  sub_23F37BEC4();
}

uint64_t sub_23F3F4054()
{
  _QWORD *v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 184) + 8))(*v0, *(_QWORD *)(v1 + 176));
}

uint64_t sub_23F3F4064()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3F4074()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  return sub_23F3F3EB4(v0, v1, v2);
}

uint64_t sub_23F3F4084()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 136))();
}

uint64_t sub_23F3F408C()
{
  return sub_23F616B14();
}

uint64_t sub_23F3F4098()
{
  return sub_23F61C718();
}

uint64_t sub_23F3F40A4()
{
  return sub_23F619E38();
}

uint64_t sub_23F3F40AC()
{
  return swift_bridgeObjectRelease();
}

_WORD *sub_23F3F40B8(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23F3F40C4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F3F40D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(uint64_t, uint64_t))
{
  uint64_t v25;

  return a25(a1, v25);
}

uint64_t sub_23F3F40DC()
{
  return sub_23F619E80();
}

uint64_t sub_23F3F40E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v2 = v1;
  v4 = sub_23F35D2E8(&qword_256E71E50);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v46 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v8 = type metadata accessor for ConversationItem(0);
    v9 = 0;
    v10 = *(_QWORD *)(v8 - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v41 = *(_QWORD *)(v10 + 72);
    v42 = a1 + ((v11 + 32) & ~v11);
    v40 = v8;
    v36 = v6;
    do
    {
      v12 = v42 + v41 * v9;
      v13 = (uint64_t *)(v12 + *(int *)(v8 + 20));
      if (*((unsigned __int8 *)v13 + 8) > 1u)
      {
        v19 = (unint64_t *)(v12 + *(int *)(v8 + 24));
        v17 = *v19;
        v18 = v19[1];
        v20 = sub_23F617BA0();
        v21 = sub_23F3F5910(v20);
        sub_23F3F46B8(v21);
        v22 = v2;
        swift_release();
        sub_23F528D94();
        v24 = v23;
        swift_bridgeObjectRelease();
        v44 = v24;
        swift_getKeyPath();
        sub_23F617BA0();
        v25 = v37;
        sub_23F616D54();
        sub_23F35D2E8(&qword_256E71E58);
        sub_23F3C2F04(&qword_256E71E60, &qword_256E71E58, MEMORY[0x24BEE12C8]);
        sub_23F3C2F04(qword_256E71E68, &qword_256E71E50, MEMORY[0x24BDCC6C8]);
        v26 = v39;
        v27 = sub_23F61C358();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v26);
        v28 = *(_QWORD *)(v27 + 16);
        if (v28)
        {
          v29 = (unint64_t *)(v27 + 40);
          do
          {
            sub_23F3F5630(*(v29 - 1), *v29, 0x455443414445523CLL, 0xEA00000000003E44, v17, v18);
            v17 = v30;
            v32 = v31;
            swift_bridgeObjectRelease();
            v18 = v32;
            v29 += 2;
            --v28;
          }
          while (v28);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v2 = v22;
        v6 = v36;
        v8 = v40;
      }
      else
      {
        v14 = *v13;
        v44 = 0;
        v45 = 0xE000000000000000;
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v43 = v14;
        v8 = v40;
        sub_23F61CC1C();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v15 = sub_23F617BA0();
        v16 = sub_23F3F5910(v15);
        sub_23F3F46B8(v16);
        swift_release();
        sub_23F528D94();
        swift_bridgeObjectRelease();
        sub_23F528C0C();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v17 = v44;
        v18 = v45;
      }
      v7 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B47C();
        v7 = v46;
      }
      v33 = *(_QWORD *)(v7 + 16);
      if (v33 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_23F37B47C();
        v7 = v46;
      }
      ++v9;
      *(_QWORD *)(v7 + 16) = v33 + 1;
      v34 = v7 + 16 * v33;
      *(_QWORD *)(v34 + 32) = v17;
      *(_QWORD *)(v34 + 40) = v18;
    }
    while (v9 != v6);
  }
  return v7;
}

uint64_t sub_23F3F44E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v2 = v15;
    v4 = type metadata accessor for ConversationItem(0);
    v5 = *(_QWORD *)(v4 - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    v14 = v7;
    do
    {
      if (*(unsigned __int8 *)(v6 + *(int *)(v4 + 20) + 8) >= 2u)
      {
        v10 = (uint64_t *)(v6 + *(int *)(v4 + 24));
        v8 = *v10;
        v9 = v10[1];
        sub_23F617BA0();
      }
      else
      {
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61CC1C();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F617BA0();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v7 = v14;
        v8 = 0;
        v9 = 0xE000000000000000;
      }
      v11 = *(_QWORD *)(v15 + 16);
      if (v11 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_23F37B47C();
        v7 = v14;
      }
      *(_QWORD *)(v15 + 16) = v11 + 1;
      v12 = v15 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v8;
      *(_QWORD *)(v12 + 40) = v9;
      v6 += v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23F3F46B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  __int128 v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v15 = MEMORY[0x24BEE4AF8];
  sub_23F37BF60();
  v2 = v15;
  result = sub_23F3C0378(a1);
  v5 = result;
  v7 = v6;
  v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v7)
      goto LABEL_14;
    v10 = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 24 * v5);
    v11 = *(_QWORD *)(v15 + 16);
    if (v11 >= *(_QWORD *)(v15 + 24) >> 1)
    {
      v14 = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 24 * v5);
      sub_23F37BF60();
      v10 = v14;
    }
    *(_QWORD *)(v15 + 16) = v11 + 1;
    *(_OWORD *)(v15 + 16 * v11 + 32) = v10;
    result = sub_23F3C0290(v5, v7, v9 & 1, a1);
    v5 = result;
    v7 = v12;
    v9 = v13 & 1;
    if (!--v1)
    {
      sub_23F382E0C(result, v12, v13 & 1);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t String.loggableString.getter(uint64_t a1)
{
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F3F4854()
{
  uint64_t *v0;

  return String.loggableString.getter(*v0);
}

uint64_t dispatch thunk of LoggingStringExportable.loggableString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_23F3F4864(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v2 = type metadata accessor for ConversationItem(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v26 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v22 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    return MEMORY[0x24BEE4AF8];
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = a1 + v10;
  v12 = *(_QWORD *)(v5 + 72);
  v27 = v10;
  v24 = v9 | 7;
  v25 = v12 + v10;
  v22[1] = a1;
  sub_23F617BA0();
  v13 = MEMORY[0x24BEE4AF8];
  v23 = xmmword_23F61E7E0;
  do
  {
    sub_23F3F5BEC(v11, (uint64_t)v7);
    if (*(_QWORD *)(v13 + 16))
      __asm { BR              X10 }
    v15 = v7[*(int *)(v2 + 32)];
    sub_23F35D2E8(&qword_256E70408);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = v23;
    sub_23F3F5BEC((uint64_t)v7, v16 + v27);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F377B14();
      v13 = v19;
    }
    v17 = *(_QWORD *)(v13 + 16);
    if (v17 >= *(_QWORD *)(v13 + 24) >> 1)
    {
      sub_23F377B14();
      v13 = v20;
    }
    *(_QWORD *)(v13 + 16) = v17 + 1;
    v18 = v13 + 16 * v17;
    *(_BYTE *)(v18 + 32) = v15;
    *(_QWORD *)(v18 + 40) = v16;
    sub_23F3F5C30((uint64_t)v7);
    v11 += v12;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
  return v13;
}

void sub_23F3F4C38(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  v1 = sub_23F3F4864(*a1);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 40;
    v4 = MEMORY[0x24BEE4AF8];
    do
    {
      if (*(_QWORD *)(*(_QWORD *)v3 + 16))
      {
        sub_23F3F5DF8();
        if ((sub_23F3F5E54() & 1) == 0)
          sub_23F3F5D6C();
        sub_23F3F5E20();
        if (v5)
          sub_23F3F5D6C();
        sub_23F3F5D8C();
      }
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  else
  {
    v4 = MEMORY[0x24BEE4AF8];
  }
  sub_23F362D08();
  if (*(_QWORD *)(v4 + 16))
  {
    sub_23F3F5D2C();
    do
    {
      sub_23F3F5DA0();
      sub_23F61CA00();
      sub_23F3F5DCC();
      v2 = sub_23F3F44E4(v2);
      sub_23F3B1CE4();
      sub_23F3C2F04((unint64_t *)&qword_256E70588, &qword_256E70580, MEMORY[0x24BEE12B0]);
      sub_23F3F5D1C();
      sub_23F3F5D3C();
      sub_23F3F5E04();
      sub_23F3B5F04();
      sub_23F3F5CC8();
      sub_23F3F5E10();
      if (v5)
        sub_23F3F5D74();
      sub_23F3F5CE8();
    }
    while (!v6);
  }
  sub_23F3668FC();
  sub_23F3C87F8();
  sub_23F3F5E4C((unint64_t *)&qword_256E70588, v7, MEMORY[0x24BEE12B0]);
  sub_23F3F5D4C();
  sub_23F3F5D5C();
  sub_23F3F5DEC();
  sub_23F362D08();
  sub_23F3F5E5C();
  sub_23F3F5DC0();
  sub_23F3F5D00();
}

void sub_23F3F4E5C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F3F4C38(a1);
  *a2 = v3;
  a2[1] = v4;
}

void sub_23F3F4E80(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  v1 = sub_23F3F4864(*a1);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 40;
    v4 = MEMORY[0x24BEE4AF8];
    do
    {
      if (*(_QWORD *)(*(_QWORD *)v3 + 16))
      {
        sub_23F3F5DF8();
        if ((sub_23F3F5E54() & 1) == 0)
          sub_23F3F5D6C();
        sub_23F3F5E20();
        if (v5)
          sub_23F3F5D6C();
        sub_23F3F5D8C();
      }
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  else
  {
    v4 = MEMORY[0x24BEE4AF8];
  }
  sub_23F362D08();
  if (*(_QWORD *)(v4 + 16))
  {
    sub_23F3F5D2C();
    do
    {
      sub_23F3F5DA0();
      sub_23F61CA00();
      sub_23F3F5DCC();
      v2 = sub_23F3F40E4(v2);
      sub_23F3B1CE4();
      sub_23F3C2F04((unint64_t *)&qword_256E70588, &qword_256E70580, MEMORY[0x24BEE12B0]);
      sub_23F3F5D1C();
      sub_23F3F5D3C();
      sub_23F3F5E04();
      sub_23F3B5F04();
      sub_23F3F5CC8();
      sub_23F3F5E10();
      if (v5)
        sub_23F3F5D74();
      sub_23F3F5CE8();
    }
    while (!v6);
  }
  sub_23F3668FC();
  sub_23F3C87F8();
  sub_23F3F5E4C((unint64_t *)&qword_256E70588, v7, MEMORY[0x24BEE12B0]);
  sub_23F3F5D4C();
  sub_23F3F5D5C();
  sub_23F3F5DEC();
  sub_23F362D08();
  sub_23F3F5E5C();
  sub_23F3F5DC0();
  sub_23F3F5D00();
}

void sub_23F3F50A4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F3F4E80(a1);
  *a2 = v3;
  a2[1] = v4;
}

uint64_t sub_23F3F50C8()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F35D2E8(&qword_256E700E8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23F61E980;
  sub_23F617BA0();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 32) = 0x203A74706D6F7250;
  *(_QWORD *)(v0 + 40) = 0xE800000000000000;
  sub_23F617BA0();
  sub_23F35D2E8(&qword_256E70FD8);
  sub_23F61C16C();
  sub_23F61C280();
  sub_23F362D08();
  *(_QWORD *)(v0 + 48) = 0x3A72616D6D617247;
  *(_QWORD *)(v0 + 56) = 0xE900000000000020;
  sub_23F3B1CE4();
  sub_23F3C2F04((unint64_t *)&qword_256E70588, &qword_256E70580, MEMORY[0x24BEE12B0]);
  v1 = sub_23F61C088();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23F3F5228()
{
  return sub_23F3F50C8();
}

uint64_t sub_23F3F5234()
{
  _QWORD *v0;

  return sub_23F3F5224(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_23F3F5240(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v1 = sub_23F3F4864(*a1);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 40;
    v4 = MEMORY[0x24BEE4AF8];
    do
    {
      if (*(_QWORD *)(*(_QWORD *)v3 + 16))
      {
        sub_23F3F5DF8();
        if ((sub_23F3F5E54() & 1) == 0)
          sub_23F3F5D6C();
        sub_23F3F5E20();
        if (v5)
          sub_23F3F5D6C();
        sub_23F3F5D8C();
      }
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  else
  {
    v4 = MEMORY[0x24BEE4AF8];
  }
  sub_23F362D08();
  if (*(_QWORD *)(v4 + 16))
  {
    sub_23F3F5D2C();
    do
    {
      v6 = *(_QWORD *)(v4 + 40);
      sub_23F61CA00();
      sub_23F3F5DCC();
      sub_23F3F44E4(v6);
      sub_23F3B1CE4();
      sub_23F3C2F04((unint64_t *)&qword_256E70588, &qword_256E70580, MEMORY[0x24BEE12B0]);
      sub_23F3F5D1C();
      sub_23F3F5D3C();
      sub_23F3F5E04();
      sub_23F3B5F04();
      sub_23F3F5CC8();
      sub_23F3F5E10();
      if (v5)
        sub_23F37B47C();
      sub_23F3F5CE8();
    }
    while (!v7);
  }
  sub_23F3668FC();
  sub_23F3C87F8();
  sub_23F3F5E4C((unint64_t *)&qword_256E70588, v8, MEMORY[0x24BEE12B0]);
  sub_23F3F5D4C();
  sub_23F3F5D5C();
  sub_23F3F5DEC();
  sub_23F362D08();
  sub_23F61CA00();
  sub_23F3F5DC0();
  PromptGrammar.description.getter();
  return 0;
}

uint64_t sub_23F3F54DC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = sub_23F3F5240(a1);
  *a2 = result;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  return result;
}

void type metadata accessor for StringConversationExporter()
{
  sub_23F362C18();
}

uint64_t destroy for JointResolverLocationSignal()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s19CandidateIdentifierVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

_QWORD *_s19CandidateIdentifierVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s19CandidateIdentifierVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for ExportableGrammaredPrompt()
{
  sub_23F362C18();
}

void sub_23F3F5630(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23F617BA0();
  sub_23F61C778();
  sub_23F3F5E40();
  if ((v6 & 0x1000000000000000) != 0)
    goto LABEL_35;
  sub_23F617BA0();
  sub_23F61C778();
  sub_23F3F5E40();
  v12 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a1;
  if ((a1 & 0xC) == 4 << v12)
  {
    sub_23F3BBECC(a1, a5, a6);
    v14 = v25;
  }
  v34 = a3;
  v15 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    v17 = a6 & 0x2000000000000000;
    v19 = a5 & 0xFFFFFFFFFFFFLL;
    v18 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0)
      v26 = HIBYTE(a6) & 0xF;
    else
      v26 = a5 & 0xFFFFFFFFFFFFLL;
    if (v26 < v14 >> 16)
      goto LABEL_41;
    v16 = sub_23F61C2D4();
    if (v15)
      v20 = 7;
    else
      v20 = 11;
  }
  else
  {
    v16 = v14 >> 16;
    v17 = a6 & 0x2000000000000000;
    v18 = HIBYTE(a6) & 0xF;
    v19 = a5 & 0xFFFFFFFFFFFFLL;
    v20 = 7;
  }
  if (!v17)
    v18 = v19;
  v21 = 4 << (v15 >> 59);
  v22 = v20 | (v18 << 16);
  v23 = a2;
  if ((a6 & 0x1000000000000000) == 0)
    v21 = 8;
  if ((a2 & 0xC) == v21)
  {
    sub_23F3F5E30(a2);
    v16 = v19;
    v23 = v27;
  }
  if ((v20 & 0xC) == v13)
  {
    sub_23F3F5E30(v20 | (v18 << 16));
    v16 = v19;
    v22 = v28;
    if ((a6 & 0x1000000000000000) == 0)
      goto LABEL_16;
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
LABEL_16:
    v24 = (v22 >> 16) - (v23 >> 16);
LABEL_28:
    if ((a4 & 0x1000000000000000) != 0)
    {
      v33 = v16;
      v31 = sub_23F61C2B0();
      v16 = v33;
    }
    else if ((a4 & 0x2000000000000000) != 0)
    {
      v31 = HIBYTE(a4) & 0xF;
    }
    else
    {
      v31 = v34 & 0xFFFFFFFFFFFFLL;
    }
    v32 = v16 + v31;
    if (__OFADD__(v16, v31))
    {
      __break(1u);
    }
    else if (!__OFADD__(v32, v24))
    {
      MEMORY[0x24266F6B8](v32 + v24);
LABEL_35:
      sub_23F61C34C();
      sub_23F3F0DA4();
      sub_23F3F5DD8();
      swift_bridgeObjectRelease();
      sub_23F61C268();
      sub_23F3BB76C(a2, a5, a6);
      sub_23F3F5DD8();
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
    goto LABEL_39;
  }
  if (v18 < v23 >> 16)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v18 >= v22 >> 16)
  {
    v29 = v16;
    v30 = sub_23F61C2D4();
    v16 = v29;
    v24 = v30;
    goto LABEL_28;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

uint64_t sub_23F3F5910(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v5 = (_QWORD *)((char *)v11 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_23F51394C(0, v4, v5);
    sub_23F3F5A78(v5, v4, v2);
    v7 = v6;
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v8 = (uint64_t *)swift_slowAlloc();
    sub_23F51394C(0, v4, v8);
    sub_23F3F5A78(v8, v4, v2);
    v7 = v9;
    swift_release();
    MEMORY[0x242670B70](v8, -1, -1);
  }
  return v7;
}

void sub_23F3F5A78(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_20;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_19:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_20:
    if (!*(_BYTE *)(*(_QWORD *)(a3 + 48) + 24 * v14 + 16))
    {
      *(uint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_23F4805A0(a1, a2, v6, a3);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_23F3F5BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConversationItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3F5C30(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConversationItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F3F5C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConversationItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void type metadata accessor for GrammaredPromptConversationExporter()
{
  sub_23F362C18();
}

void type metadata accessor for RedactedStringConversationExporter()
{
  sub_23F362C18();
}

uint64_t sub_23F3F5CC8()
{
  return sub_23F61C280();
}

void sub_23F3F5CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 16) = v1;
  v5 = v0 + 16 * v3;
  *(_QWORD *)(v5 + 32) = v2;
  *(_QWORD *)(v5 + 40) = v4;
}

uint64_t sub_23F3F5D1C()
{
  return sub_23F61C088();
}

void sub_23F3F5D2C()
{
  sub_23F37B47C();
}

uint64_t sub_23F3F5D3C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3F5D4C()
{
  return sub_23F61C088();
}

uint64_t sub_23F3F5D5C()
{
  return swift_bridgeObjectRelease();
}

void sub_23F3F5D6C()
{
  sub_23F37BF2C();
}

void sub_23F3F5D74()
{
  sub_23F37B47C();
}

void sub_23F3F5D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 16) = v2;
  v5 = v0 + 16 * v4;
  *(_BYTE *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v1;
}

uint64_t sub_23F3F5DC0()
{
  return sub_23F61C280();
}

uint64_t sub_23F3F5DCC()
{
  return sub_23F61C280();
}

uint64_t sub_23F3F5DD8()
{
  return sub_23F61C268();
}

uint64_t sub_23F3F5DEC()
{
  return sub_23F61C280();
}

uint64_t sub_23F3F5DF8()
{
  return sub_23F617BA0();
}

uint64_t sub_23F3F5E04()
{
  return sub_23F61C280();
}

void sub_23F3F5E30(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23F3BBECC(a1, v2, v1);
}

uint64_t sub_23F3F5E40()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3F5E4C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_23F3C2F04(a1, v3, a3);
}

uint64_t sub_23F3F5E54()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F3F5E5C()
{
  return sub_23F61CA00();
}

void sub_23F3F5E68(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3F9C48();
  sub_23F3F81F0(a3, (uint64_t)v8);
  sub_23F3F6FB4(a1, a2);
  sub_23F3625D8(a3, &qword_256E6FFA0);
  sub_23F3F9C20();
  sub_23F383488();
}

void sub_23F3F5EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v3 = sub_23F384040();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3F9C48();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  sub_23F3F7594();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a2, v3);
  sub_23F3F9C20();
  sub_23F383488();
}

uint64_t sub_23F3F5F90(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F3F5FC0 + 4 * byte_23F6202A0[a1]))(0x6D6574737973, 0xE600000000000000);
}

uint64_t sub_23F3F5FC0()
{
  return 0x6E61747369737361;
}

uint64_t sub_23F3F5FDC()
{
  return 1919251317;
}

uint64_t sub_23F3F5FEC()
{
  return 0x746C75736572;
}

uint64_t sub_23F3F5FFC()
{
  unint64_t v0;

  v0 = sub_23F61CAB4();
  sub_23F362D18();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

void *sub_23F3F6040()
{
  return &unk_250FD09C8;
}

void sub_23F3F604C(char *a1)
{
  sub_23F489554(*a1);
}

void sub_23F3F6058()
{
  sub_23F3F618C();
}

void sub_23F3F6078()
{
  sub_23F3F623C();
}

void sub_23F3F609C()
{
  sub_23F3F618C();
}

void sub_23F3F60AC()
{
  sub_23F362CB0();
  sub_23F3F9CF0();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F60D4(uint64_t a1)
{
  sub_23F3F61C4(a1, (void (*)(uint64_t))sub_23F4A7D78);
}

void sub_23F3F60E0(uint64_t a1, uint64_t a2)
{
  sub_23F3F6108(a1, a2, (void (*)(uint64_t))sub_23F3F8280);
}

void sub_23F3F60F4(uint64_t a1, uint64_t a2)
{
  sub_23F3F6108(a1, a2, (void (*)(uint64_t))sub_23F3F82BC);
}

void sub_23F3F6108(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = sub_23F362CB0();
  a3(v4);
  sub_23F3F9C2C();
  sub_23F362C10();
  sub_23F3F9CB8();
}

void sub_23F3F6144()
{
  sub_23F3F6454();
}

void sub_23F3F6150()
{
  sub_23F3F618C();
}

void sub_23F3F615C()
{
  sub_23F3F64BC();
}

void sub_23F3F6168()
{
  sub_23F3F62C0();
}

void sub_23F3F6174()
{
  sub_23F3F63D4();
}

void sub_23F3F6180()
{
  sub_23F3F618C();
}

void sub_23F3F618C()
{
  uint64_t v0;

  v0 = sub_23F362CB0();
  sub_23F3F9CC4(v0);
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F61B8(uint64_t a1)
{
  sub_23F3F61C4(a1, (void (*)(uint64_t))sub_23F576884);
}

void sub_23F3F61C4(uint64_t a1, void (*a2)(uint64_t))
{
  sub_23F362CB0();
  a2(a1);
  sub_23F3F9B48();
  sub_23F362D18();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F620C()
{
  sub_23F3F638C();
}

void sub_23F3F6218()
{
  sub_23F3F623C();
}

void sub_23F3F623C()
{
  sub_23F362CB0();
  sub_23F3F9B48();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F6270()
{
  sub_23F362CB0();
  sub_23F3F9C00();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F6298(uint64_t a1)
{
  char *v1;

  sub_23F4E6D78(a1, *v1);
}

void sub_23F3F62A0()
{
  sub_23F3F6688();
}

void sub_23F3F62C0()
{
  sub_23F3F9B00();
  sub_23F3F9B48();
  sub_23F362D18();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F6328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F3F6350(a1, a2, a3, (void (*)(uint64_t))sub_23F3F82BC);
}

void sub_23F3F633C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F3F6350(a1, a2, a3, (void (*)(uint64_t))sub_23F3F8280);
}

void sub_23F3F6350(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  v5 = sub_23F3F9B00();
  a4(v5);
  sub_23F3F9C2C();
  sub_23F362C10();
  sub_23F3F9CB8();
}

void sub_23F3F638C()
{
  sub_23F3F9B00();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F63D4()
{
  sub_23F3F9B00();
  sub_23F3F9B48();
  sub_23F362D18();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F6448()
{
  sub_23F3F6688();
}

void sub_23F3F6454()
{
  sub_23F3F9B00();
  sub_23F3F9B48();
  sub_23F362D18();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F64BC()
{
  sub_23F3F9B00();
  sub_23F61C22C();
  sub_23F362984();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F6544()
{
  sub_23F3F6648();
}

void sub_23F3F656C()
{
  sub_23F3F6688();
}

void sub_23F3F6578()
{
  sub_23F3F9B00();
  sub_23F3F9C00();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F65A0()
{
  sub_23F3F9B00();
  sub_23F3F9CF0();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F65C8(uint64_t a1, uint64_t a2)
{
  sub_23F3F65E0(a1, a2, (void (*)(uint64_t))sub_23F4A7D78);
}

void sub_23F3F65D4(uint64_t a1, uint64_t a2)
{
  sub_23F3F65E0(a1, a2, (void (*)(uint64_t))sub_23F576884);
}

void sub_23F3F65E0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_23F3F9B00();
  a3(a2);
  sub_23F3F9B48();
  sub_23F362D18();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F6628()
{
  sub_23F3F6648();
}

void sub_23F3F6648()
{
  sub_23F3F9B00();
  sub_23F3F9B48();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F3F667C()
{
  sub_23F3F6688();
}

void sub_23F3F6688()
{
  uint64_t v0;

  v0 = sub_23F3F9B00();
  sub_23F3F9CC4(v0);
  sub_23F362C10();
  sub_23F362AD4();
}

uint64_t sub_23F3F66B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F3F5FFC();
  *a1 = result;
  return result;
}

uint64_t sub_23F3F66E0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23F3F5F90(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_23F3F6708(_QWORD *a1@<X8>)
{
  *a1 = &unk_250FD09C8;
}

void sub_23F3F6718()
{
  sub_23F3F6270();
}

void sub_23F3F6720(uint64_t a1, unsigned __int8 a2)
{
  if (a2 > 1u)
  {
    sub_23F362C18();
  }
  else
  {
    sub_23F61C280();
    swift_bridgeObjectRelease();
    sub_23F61CC1C();
    sub_23F61C280();
    sub_23F362D18();
  }
}

uint64_t sub_23F3F67B4(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 != 1)
        return 0;
      return a1 == a3;
    }
    if (a4 == 2 && !a3)
      return 1;
  }
  else if (!a4)
  {
    return a1 == a3;
  }
  return 0;
}

uint64_t sub_23F3F6808(uint64_t a1, uint64_t a2)
{
  return sub_23F3F67B4(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

void sub_23F3F6820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32[3];

  v6 = sub_23F3846E4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3B1590();
  type metadata accessor for StatementSegment(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F362AAC();
  v11 = (uint64_t *)(v9 - v10);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v32 - v13;
  sub_23F35D2E8(&qword_256E72970);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F362838();
  v17 = (uint64_t *)(v2 + *(int *)(v16 + 48));
  sub_23F3663D4(a1, v2, type metadata accessor for StatementSegment);
  sub_23F3663D4(a2, (uint64_t)v17, type metadata accessor for StatementSegment);
  if (sub_23F3F9CDC() != 1)
  {
    sub_23F3663D4(v2, (uint64_t)v14, type metadata accessor for StatementSegment);
    if (sub_23F3F9CDC() != 1)
    {
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v7 + 32))(v3, v17, v6);
      sub_23F616FE8();
      v30 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v30(v3, v6);
      v31 = ((uint64_t (*)(char *, uint64_t))v30)(v14, v6);
      sub_23F3B1778(v31, type metadata accessor for StatementSegment);
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
    goto LABEL_12;
  }
  sub_23F3663D4(v2, (uint64_t)v11, type metadata accessor for StatementSegment);
  v19 = *v11;
  v18 = v11[1];
  v20 = v11[2];
  if (sub_23F3F9CDC() != 1)
  {
    sub_23F362D08();
    sub_23F362984();
LABEL_12:
    sub_23F3625D8(v2, &qword_256E72970);
    goto LABEL_16;
  }
  v26 = *v17;
  v27 = v17[2];
  v28 = v19 == *v17 && v18 == v17[1];
  if (v28 || (sub_23F61CC64() & 1) != 0)
  {
    sub_23F35D328(v20, v27, v26, v21, v22, v23, v24, v25, v32[0], v32[1], v32[2]);
    swift_bridgeObjectRelease();
    sub_23F362C60();
    sub_23F362D08();
    v29 = sub_23F362984();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F362C60();
    sub_23F362D08();
    v29 = sub_23F362984();
  }
  sub_23F3B1778(v29, type metadata accessor for StatementSegment);
LABEL_16:
  sub_23F362948();
}

void sub_23F3F6A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = *(_QWORD *)(a3 + 16);
  if (v16)
  {
    type metadata accessor for StatementSegment(0);
    sub_23F617BA0();
    v3 = 0;
    v4 = MEMORY[0x24BEE4B08];
    while (1)
    {
      sub_23F50F9EC();
      v6 = v5;
      v8 = v7;
      v10 = v9;
      sub_23F617BA0();
      sub_23F61C280();
      sub_23F617BA0();
      sub_23F383EB0();
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F3B62BC(v10, 0, 0xE000000000000000, v4, v6, v8, v10, 0, 0xE000000000000000);
      if (__OFADD__(*(_QWORD *)(v11 + 16), *(_QWORD *)(v4 + 16)))
        break;
      sub_23F383EB0();
      sub_23F377378();
      v17 = v12;
      v13 = sub_23F383EB0();
      sub_23F3863B4(v13);
      sub_23F617BA0();
      sub_23F38631C();
      sub_23F362C60();
      swift_bridgeObjectRelease();
      sub_23F382B28();
      sub_23F3F9CD0();
      v18 = sub_23F61C550();
      v14 = *(_QWORD *)(v17 + 16);
      if (v14)
      {
        v15 = v17 + 48;
        do
        {
          v15 += 24;
          sub_23F471B2C();
          --v14;
        }
        while (v14);
      }
      swift_bridgeObjectRelease();
      sub_23F362C60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v3;
      v4 = v18;
      if (v3 == v16)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void sub_23F3F6CB4(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;

  v4 = (int *)type metadata accessor for ConversationItem(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F362AAC();
  v48 = v6 - v7;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v45 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v45 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v45 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v45 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v45 - v21;
  v23 = sub_23F616FE8();
  sub_23F3663D4(a1, (uint64_t)v22, type metadata accessor for ConversationItem);
  sub_23F3663D4(a2, (uint64_t)v20, type metadata accessor for ConversationItem);
  if ((v23 & 1) == 0)
  {
    sub_23F3C8574((uint64_t)v20);
    sub_23F3C8574((uint64_t)v22);
    sub_23F3F9C40(a1, (uint64_t)v17);
    sub_23F3F9C40(a2, (uint64_t)v14);
    v33 = (uint64_t)v14;
LABEL_11:
    sub_23F3C8574((uint64_t)v17);
    sub_23F3C8574(v33);
    sub_23F3F9C40(a1, (uint64_t)v11);
    sub_23F3F9C40(a2, v48);
    goto LABEL_12;
  }
  v24 = &v22[v4[5]];
  v25 = *(_QWORD *)v24;
  HIDWORD(v46) = v24[8];
  v47 = v11;
  sub_23F3663AC((uint64_t)v22, type metadata accessor for ConversationItem);
  v26 = &v20[v4[5]];
  v27 = *(_QWORD *)v26;
  v28 = v26[8];
  sub_23F3663AC((uint64_t)v20, type metadata accessor for ConversationItem);
  LOBYTE(v25) = sub_23F3F67B4(v25, SBYTE4(v46), v27, v28);
  sub_23F3663D4(a1, (uint64_t)v17, type metadata accessor for ConversationItem);
  v11 = v47;
  sub_23F3663D4(a2, (uint64_t)v14, type metadata accessor for ConversationItem);
  v33 = (uint64_t)v14;
  if ((v25 & 1) == 0)
    goto LABEL_11;
  v34 = v4[6];
  v35 = *(_QWORD *)&v17[v34];
  v36 = *(_QWORD *)&v17[v34 + 8];
  v37 = *(_QWORD *)&v17[v34 + 16];
  v38 = (uint64_t *)(v33 + v34);
  v39 = *v38;
  v40 = v38[1];
  v41 = v38[2];
  v42 = v35 == *v38 && v36 == v40;
  if (!v42 && (sub_23F61CC64() & 1) == 0)
    goto LABEL_11;
  sub_23F35D328(v37, v41, v39, v40, v29, v30, v31, v32, v45, v46, (uint64_t)v47);
  v44 = v43;
  sub_23F3663AC((uint64_t)v17, type metadata accessor for ConversationItem);
  sub_23F3663AC(v33, type metadata accessor for ConversationItem);
  sub_23F3663D4(a1, (uint64_t)v47, type metadata accessor for ConversationItem);
  v11 = v47;
  sub_23F3663D4(a2, v48, type metadata accessor for ConversationItem);
  if ((v44 & 1) != 0)
    sub_23F489554(v11[v4[8]]);
LABEL_12:
  sub_23F3C8574(v48);
  sub_23F3C8574((uint64_t)v11);
  sub_23F362948();
}

uint64_t sub_23F3F6F9C(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_23F3F6FA8()
{
  return sub_23F617BA0();
}

uint64_t sub_23F3F6FB4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  sub_23F3F9BE4();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17AssistantTurnItem_roleIdentifier) = 1;
  v5 = v2 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17AssistantTurnItem_statementId;
  v6 = sub_23F384040();
  sub_23F36196C(v5, 1, 1, v6);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17AssistantTurnItem_statementSegments) = a2;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17AssistantTurnItem_indexType) = a1;
  sub_23F3F9B3C();
  sub_23F3F9C14();
  swift_endAccess();
  return v2;
}

uint64_t sub_23F3F7064()
{
  return sub_23F3F76D4(&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17AssistantTurnItem_id, (uint64_t)&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17AssistantTurnItem_statementSegments, &OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17AssistantTurnItem_statementId);
}

uint64_t sub_23F3F7080()
{
  return type metadata accessor for AssistantTurnItem(0);
}

uint64_t type metadata accessor for AssistantTurnItem(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E71EC8);
}

void sub_23F3F709C()
{
  sub_23F3F7708();
}

void sub_23F3F70B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E71ED8[0])
  {
    sub_23F617D08();
    v0 = sub_23F61C730();
    if (!v1)
      atomic_store(v0, qword_256E71ED8);
  }
}

uint64_t sub_23F3F7104()
{
  return sub_23F3F7788();
}

uint64_t sub_23F3F7110()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17AssistantTurnItem_indexType);
}

uint64_t sub_23F3F7124()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17AssistantTurnItem_roleIdentifier);
}

uint64_t sub_23F3F7138()
{
  return sub_23F3F77DC();
}

uint64_t sub_23F3F7144()
{
  return sub_23F617BA0();
}

uint64_t sub_23F3F7158()
{
  return type metadata accessor for PlanGenerationAssistantTurnItem(0);
}

uint64_t type metadata accessor for PlanGenerationAssistantTurnItem(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E71FE8);
}

void sub_23F3F7178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F3B1590();
  sub_23F3F9BE4();
  *(_BYTE *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime26ResponseGenerationTurnItem_roleIdentifier) = 1;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime26ResponseGenerationTurnItem_indexType) = 2;
  v2 = sub_23F384040();
  sub_23F3F9BCC(v2);
  sub_23F3F9B08(OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime26ResponseGenerationTurnItem_statementSegments);
  sub_23F3F9CE4();
  sub_23F3F9C78();
  sub_23F3F9C20();
  sub_23F383488();
}

uint64_t sub_23F3F7214(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v3 + *a1;
  v6 = sub_23F3846E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  sub_23F3625D8(v3 + *a3, &qword_256E6FFA0);
  return v3;
}

uint64_t sub_23F3F7280()
{
  return sub_23F3F76D4(&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime26ResponseGenerationTurnItem_id, (uint64_t)&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime26ResponseGenerationTurnItem_statementSegments, &OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime26ResponseGenerationTurnItem_statementId);
}

uint64_t sub_23F3F729C()
{
  return type metadata accessor for ResponseGenerationTurnItem(0);
}

uint64_t type metadata accessor for ResponseGenerationTurnItem(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E72100);
}

void sub_23F3F72B8()
{
  sub_23F3F7708();
}

uint64_t sub_23F3F72CC()
{
  return sub_23F3F7788();
}

uint64_t sub_23F3F72D8()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime26ResponseGenerationTurnItem_indexType);
}

uint64_t sub_23F3F72EC()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime26ResponseGenerationTurnItem_roleIdentifier);
}

uint64_t sub_23F3F7300()
{
  return sub_23F3F77DC();
}

uint64_t sub_23F3F730C()
{
  return sub_23F617BA0();
}

void sub_23F3F7320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F362838();
  sub_23F3F9BE4();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime29ExternalAgentResponseTurnItem_indexType) = 2;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime29ExternalAgentResponseTurnItem_roleIdentifier) = 1;
  v4 = sub_23F384040();
  sub_23F3F9BB4(v4);
  sub_23F3F9B50(OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime29ExternalAgentResponseTurnItem_statementSegments);
  sub_23F36196C(v0, 0, 1, v2);
  sub_23F3F9B3C();
  sub_23F3F9C14();
  sub_23F3F9C78();
  sub_23F3F9C20();
  sub_23F383488();
}

uint64_t sub_23F3F73E0()
{
  return sub_23F3F76D4(&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime29ExternalAgentResponseTurnItem_id, (uint64_t)&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime29ExternalAgentResponseTurnItem_statementSegments, &OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime29ExternalAgentResponseTurnItem_statementId);
}

uint64_t sub_23F3F73FC()
{
  return type metadata accessor for ExternalAgentResponseTurnItem(0);
}

uint64_t type metadata accessor for ExternalAgentResponseTurnItem(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E72218);
}

uint64_t sub_23F3F7418()
{
  return sub_23F3F7788();
}

uint64_t sub_23F3F7424()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime29ExternalAgentResponseTurnItem_indexType);
}

uint64_t sub_23F3F7438()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime29ExternalAgentResponseTurnItem_roleIdentifier);
}

uint64_t sub_23F3F744C()
{
  return sub_23F3F77DC();
}

uint64_t sub_23F3F7458()
{
  return sub_23F617BA0();
}

void sub_23F3F746C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F3B1590();
  sub_23F3F9BE4();
  *(_BYTE *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime12SpanTurnItem_roleIdentifier) = 3;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime12SpanTurnItem_indexType) = 2;
  v2 = sub_23F384040();
  sub_23F3F9BCC(v2);
  sub_23F3F9B08(OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime12SpanTurnItem_statementSegments);
  sub_23F3F9CE4();
  sub_23F3F9C78();
  sub_23F3F9C20();
  sub_23F383488();
}

uint64_t sub_23F3F7508()
{
  return sub_23F3F76D4(&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime12SpanTurnItem_id, (uint64_t)&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime12SpanTurnItem_statementSegments, &OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime12SpanTurnItem_statementId);
}

uint64_t sub_23F3F7524()
{
  return type metadata accessor for SpanTurnItem(0);
}

uint64_t type metadata accessor for SpanTurnItem(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E72330);
}

uint64_t sub_23F3F7540()
{
  return sub_23F3F7788();
}

uint64_t sub_23F3F754C()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime12SpanTurnItem_indexType);
}

uint64_t sub_23F3F7560()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime12SpanTurnItem_roleIdentifier);
}

uint64_t sub_23F3F7574()
{
  return sub_23F3F77DC();
}

uint64_t sub_23F3F7580()
{
  return sub_23F617BA0();
}

void sub_23F3F7594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F362838();
  sub_23F3F9BE4();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14ResultTurnItem_roleIdentifier) = 3;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14ResultTurnItem_indexType) = 0;
  v4 = sub_23F384040();
  sub_23F3F9BB4(v4);
  sub_23F3F9B50(OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14ResultTurnItem_statementSegments);
  sub_23F36196C(v0, 0, 1, v2);
  sub_23F3F9B3C();
  sub_23F3F9C14();
  sub_23F3F9C78();
  sub_23F3F9C20();
  sub_23F383488();
}

uint64_t sub_23F3F7650()
{
  return sub_23F3F76D4(&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14ResultTurnItem_id, (uint64_t)&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14ResultTurnItem_statementSegments, &OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14ResultTurnItem_statementId);
}

uint64_t type metadata accessor for ContextTurnItem(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E72470);
}

uint64_t sub_23F3F7680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F3846E4();
  v0 = sub_23F3F9C80();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

uint64_t sub_23F3F76A0(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_23F3F76AC(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_23F3F76B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23F3F81F0(v2 + *(int *)(a1 + 32), a2);
}

uint64_t sub_23F3F76C8()
{
  return sub_23F617BA0();
}

uint64_t sub_23F3F76D4(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  sub_23F3F7214(a1, a2, a3);
  sub_23F3F9B6C();
  return swift_deallocClassInstance();
}

uint64_t sub_23F3F76EC()
{
  return type metadata accessor for ResultTurnItem(0);
}

uint64_t type metadata accessor for ResultTurnItem(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E72560);
}

void sub_23F3F7708()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F3F9BEC();
  if (v0 <= 0x3F)
  {
    sub_23F3F70B0();
    if (v1 <= 0x3F)
    {
      sub_23F3F9B94();
      swift_updateClassMetadata2();
    }
  }
  sub_23F38F98C();
}

uint64_t sub_23F3F777C()
{
  return sub_23F3F7788();
}

uint64_t sub_23F3F7788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F3F9CA4();
  sub_23F3846E4();
  v0 = sub_23F3F9C80();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

uint64_t sub_23F3F77A8()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14ResultTurnItem_indexType);
}

uint64_t sub_23F3F77BC()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14ResultTurnItem_roleIdentifier);
}

uint64_t sub_23F3F77D0()
{
  return sub_23F3F77DC();
}

uint64_t sub_23F3F77DC()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3F9CA4();
  swift_beginAccess();
  return sub_23F3F81F0(v1, v0);
}

uint64_t sub_23F3F7820()
{
  return sub_23F617BA0();
}

uint64_t type metadata accessor for EvaluationResultTurnItem(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E72678);
}

uint64_t sub_23F3F7848()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_23F3F787C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v6 = sub_23F384040();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F362AAC();
  v10 = (char *)(v8 - v9);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - v12;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime28EvaluationListResultTurnItem_listStatementSegmentIndices) = a1;
  v14 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v14((char *)&v17 - v12, a3, v6);
  v14(v10, v13, v6);
  sub_23F3F7594();
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v13, v6);
  v15(a3, v6);
  return v3;
}

uint64_t sub_23F3F7960()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3F7970()
{
  sub_23F3F7214(&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14ResultTurnItem_id, (uint64_t)&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14ResultTurnItem_statementSegments, &OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14ResultTurnItem_statementId);
  swift_bridgeObjectRelease();
  sub_23F3F9B6C();
  return swift_deallocClassInstance();
}

uint64_t sub_23F3F79B0()
{
  return type metadata accessor for EvaluationListResultTurnItem(0);
}

uint64_t type metadata accessor for EvaluationListResultTurnItem(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E72790);
}

uint64_t sub_23F3F79CC()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_23F3F7A10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      sub_23F617BA0();
      sub_23F617BA0();
    }
    else
    {
      v8 = sub_23F617000();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F3F7ADC(uint64_t a1)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v3 = sub_23F617000();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

_QWORD *sub_23F3F7B34(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    a1[2] = a2[2];
    sub_23F617BA0();
    sub_23F617BA0();
  }
  else
  {
    v5 = sub_23F617000();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23F3F7BD4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for StatementSegment);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      sub_23F617BA0();
      sub_23F617BA0();
    }
    else
    {
      v4 = sub_23F617000();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for StatementSegment(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E72918);
}

void *sub_23F3F7CA8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23F617000();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23F3F7D30(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for StatementSegment);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_23F617000();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23F3F7DD0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F617000();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FullPlannerModelClientError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_23F3F7EC4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F3F7F10 + 4 * byte_23F6202A9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F3F7F44 + 4 * byte_23F6202A4[v4]))();
}

uint64_t sub_23F3F7F44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F3F7F4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F3F7F54);
  return result;
}

uint64_t sub_23F3F7F60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F3F7F68);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23F3F7F6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F3F7F74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for RoleIdentifier()
{
  sub_23F362C18();
}

uint64_t initializeBufferWithCopyOfBuffer for ResponseGenerationOverrides_StringPredicate.Operator(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_23F3F7FA0(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23F3F7FE0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F3F8024(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23F3F803C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

void type metadata accessor for ItemIndex()
{
  sub_23F362C18();
}

uint64_t sub_23F3F8060(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F3F80AC + 4 * byte_23F6202B3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F3F80E0 + 4 * byte_23F6202AE[v4]))();
}

uint64_t sub_23F3F80E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F3F80E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F3F80F0);
  return result;
}

uint64_t sub_23F3F80FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F3F8104);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F3F8108(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F3F8110(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ItemIndex.IndexType()
{
  sub_23F362C18();
}

unint64_t sub_23F3F812C()
{
  unint64_t result;

  result = qword_256E72950;
  if (!qword_256E72950)
  {
    result = MEMORY[0x242670A44](&unk_23F620474, &unk_250FD4970);
    atomic_store(result, (unint64_t *)&qword_256E72950);
  }
  return result;
}

unint64_t sub_23F3F816C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E72958;
  if (!qword_256E72958)
  {
    v1 = sub_23F35EB74(&qword_256E72960);
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256E72958);
  }
  return result;
}

unint64_t sub_23F3F81B4()
{
  unint64_t result;

  result = qword_256E72968;
  if (!qword_256E72968)
  {
    result = MEMORY[0x242670A44](&unk_23F6205B4, &unk_250FD4850);
    atomic_store(result, (unint64_t *)&qword_256E72968);
  }
  return result;
}

uint64_t sub_23F3F81F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FFA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3F8238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FFA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F3F8280()
{
  unint64_t result;

  result = qword_256E72978;
  if (!qword_256E72978)
  {
    result = MEMORY[0x242670A44](&unk_23F6282E8, &type metadata for ResponseGenerationOverrides_IntPredicate.Operator);
    atomic_store(result, (unint64_t *)&qword_256E72978);
  }
  return result;
}

unint64_t sub_23F3F82BC()
{
  unint64_t result;

  result = qword_256E72980;
  if (!qword_256E72980)
  {
    result = MEMORY[0x242670A44](&unk_23F628248, &type metadata for ResponseGenerationOverrides_StringPredicate.Operator);
    atomic_store(result, (unint64_t *)&qword_256E72980);
  }
  return result;
}

_QWORD *sub_23F3F82F8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F617000();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23F617D08();
    sub_23F617BA0();
    if (sub_23F36195C((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F35D2E8(&qword_256E6FFA0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      sub_23F36196C((uint64_t)v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_23F3F841C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 32);
  v6 = sub_23F617D08();
  result = sub_23F36195C(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return result;
}

uint64_t sub_23F3F84A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23F617D08();
  sub_23F617BA0();
  if (sub_23F36195C((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E6FFA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_23F3F85A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23F617D08();
  v11 = sub_23F36195C((uint64_t)v8, 1, v10);
  v12 = sub_23F36195C((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_23F35D2E8(&qword_256E6FFA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  sub_23F36196C((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t sub_23F3F86F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23F617D08();
  if (sub_23F36195C((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E6FFA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_23F3F87D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23F617D08();
  v12 = sub_23F36195C((uint64_t)v9, 1, v11);
  v13 = sub_23F36195C((uint64_t)v10, 1, v11);
  if (!v12)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = sub_23F35D2E8(&qword_256E6FFA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  sub_23F36196C((uint64_t)v9, 0, 1, v11);
  return a1;
}

uint64_t sub_23F3F891C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F3F8928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3F9AF0();
  sub_23F3F9C58();
  if (v6)
  {
    v7 = sub_23F3F9CD0();
  }
  else
  {
    if ((_DWORD)v3 == 0x7FFFFFFF)
    {
      sub_23F3F9B80(*(_QWORD *)(v4 + *(int *)(a3 + 28)));
      sub_23F362B80();
      return;
    }
    sub_23F35D2E8(&qword_256E6FFA0);
    v7 = sub_23F3F9C98();
  }
  sub_23F3B1A44(v7, v3, v8);
}

uint64_t sub_23F3F8990()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F3F899C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F3F9AF0();
  sub_23F3F9C68();
  if (v9)
  {
    v10 = v8;
    v11 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 28)) = (v4 - 1);
      sub_23F362B80();
      return;
    }
    sub_23F35D2E8(&qword_256E6FFA0);
    v11 = sub_23F3F9C98();
  }
  sub_23F38370C(v11, v4, v4, v10);
}

uint64_t type metadata accessor for UserTurnItem(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E729E0);
}

void sub_23F3F8A24()
{
  sub_23F3F917C();
}

_QWORD *sub_23F3F8A3C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F617000();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    v9 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23F617D08();
    sub_23F617BA0();
    if (sub_23F36195C((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F35D2E8(&qword_256E6FFA0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      sub_23F36196C((uint64_t)v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_23F3F8B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 32);
  v6 = sub_23F617D08();
  result = sub_23F36195C(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return result;
}

uint64_t sub_23F3F8BEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23F617D08();
  sub_23F617BA0();
  if (sub_23F36195C((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E6FFA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_23F3F8CE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23F617D08();
  v11 = sub_23F36195C((uint64_t)v8, 1, v10);
  v12 = sub_23F36195C((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_23F35D2E8(&qword_256E6FFA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  sub_23F36196C((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t sub_23F3F8E34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23F617D08();
  if (sub_23F36195C((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E6FFA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_23F3F8F1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease();
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23F617D08();
  v12 = sub_23F36195C((uint64_t)v9, 1, v11);
  v13 = sub_23F36195C((uint64_t)v10, 1, v11);
  if (!v12)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = sub_23F35D2E8(&qword_256E6FFA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  sub_23F36196C((uint64_t)v9, 0, 1, v11);
  return a1;
}

uint64_t sub_23F3F905C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F3F9068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3F9AF0();
  sub_23F3F9C58();
  if (v6)
  {
    v7 = sub_23F3F9CD0();
  }
  else
  {
    if ((_DWORD)v3 == 0x7FFFFFFF)
    {
      sub_23F3F9B80(*(_QWORD *)(v4 + *(int *)(a3 + 24)));
      sub_23F362B80();
      return;
    }
    sub_23F35D2E8(&qword_256E6FFA0);
    v7 = sub_23F3F9C98();
  }
  sub_23F3B1A44(v7, v3, v8);
}

uint64_t sub_23F3F90D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F3F90DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F3F9AF0();
  sub_23F3F9C68();
  if (v9)
  {
    v10 = v8;
    v11 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 24)) = (v4 - 1);
      sub_23F362B80();
      return;
    }
    sub_23F35D2E8(&qword_256E6FFA0);
    v11 = sub_23F3F9C98();
  }
  sub_23F38370C(v11, v4, v4, v10);
}

uint64_t type metadata accessor for SystemTurnItem(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E72A80);
}

void sub_23F3F9164()
{
  sub_23F3F917C();
}

void sub_23F3F917C()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F3F9BEC();
  if (v0 <= 0x3F)
  {
    sub_23F3F70B0();
    if (v1 <= 0x3F)
    {
      sub_23F3F9B94();
      swift_initStructMetadata();
    }
  }
  sub_23F38F98C();
}

_QWORD *sub_23F3F91E8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F617000();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (_QWORD *)((char *)a1 + v9);
    v13 = (_QWORD *)((char *)a2 + v9);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v12[2] = v13[2];
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_23F617D08();
    sub_23F617BA0();
    sub_23F617BA0();
    if (sub_23F36195C((uint64_t)v17, 1, v18))
    {
      v19 = sub_23F35D2E8(&qword_256E6FFA0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      sub_23F36196C((uint64_t)v16, 0, 1, v18);
    }
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return a1;
}

uint64_t sub_23F3F9340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_23F617D08();
  result = sub_23F36195C(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return result;
}

uint64_t sub_23F3F93E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (_QWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v11[2] = v12[2];
  v14 = a3[7];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = sub_23F617D08();
  sub_23F617BA0();
  sub_23F617BA0();
  if (sub_23F36195C((uint64_t)v16, 1, v17))
  {
    v18 = sub_23F35D2E8(&qword_256E6FFA0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    sub_23F36196C((uint64_t)v15, 0, 1, v17);
  }
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_23F3F9510(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = *(_QWORD *)(a2 + v11 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v12[2] = *(_QWORD *)(v13 + 16);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = sub_23F617D08();
  v18 = sub_23F36195C((uint64_t)v15, 1, v17);
  v19 = sub_23F36195C((uint64_t)v16, 1, v17);
  if (!v18)
  {
    v20 = *(_QWORD *)(v17 - 8);
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v21 = sub_23F35D2E8(&qword_256E6FFA0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  sub_23F36196C((uint64_t)v15, 0, 1, v17);
LABEL_7:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_23F3F96A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  v13 = a3[7];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_23F617D08();
  if (sub_23F36195C((uint64_t)v15, 1, v16))
  {
    v17 = sub_23F35D2E8(&qword_256E6FFA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    sub_23F36196C((uint64_t)v14, 0, 1, v16);
  }
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_23F3F97B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = a2 + v8;
  v13 = *(_QWORD *)(a2 + v8);
  v14 = *(_QWORD *)(a2 + v8 + 8);
  *v11 = v13;
  v11[1] = v14;
  swift_bridgeObjectRelease();
  v11[2] = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_23F617D08();
  v19 = sub_23F36195C((uint64_t)v16, 1, v18);
  v20 = sub_23F36195C((uint64_t)v17, 1, v18);
  if (!v19)
  {
    v21 = *(_QWORD *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 40))(v16, v17, v18);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v22 = sub_23F35D2E8(&qword_256E6FFA0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  sub_23F36196C((uint64_t)v16, 0, 1, v18);
LABEL_7:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_23F3F9928()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F3F9934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3F9AF0();
  sub_23F3F9C58();
  if (v6)
  {
    v7 = sub_23F3F9CD0();
  }
  else
  {
    if ((_DWORD)v3 == 0x7FFFFFFF)
    {
      sub_23F3F9B80(*(_QWORD *)(v4 + *(int *)(a3 + 24) + 8));
      sub_23F362B80();
      return;
    }
    v8 = sub_23F35D2E8(&qword_256E6FFA0);
    v7 = v4 + *(int *)(a3 + 28);
  }
  sub_23F3B1A44(v7, v3, v8);
}

uint64_t sub_23F3F99A4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F3F99B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F3F9AF0();
  sub_23F3F9C68();
  if (v9)
  {
    v10 = v8;
    v11 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 24) + 8) = (v4 - 1);
      sub_23F362B80();
      return;
    }
    v10 = sub_23F35D2E8(&qword_256E6FFA0);
    v11 = v5 + *(int *)(a4 + 28);
  }
  sub_23F38370C(v11, v4, v4, v10);
}

uint64_t type metadata accessor for ConversationItem(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E72B20);
}

void sub_23F3F9A40()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F617000();
  if (v0 <= 0x3F)
  {
    sub_23F3F70B0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_23F3F9AF0()
{
  return sub_23F617000();
}

uint64_t sub_23F3F9B00()
{
  return sub_23F61CD30();
}

uint64_t sub_23F3F9B08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + a1) = v1;
  sub_23F36196C(v3, 1, 1, v4);
  return swift_beginAccess();
}

uint64_t sub_23F3F9B3C()
{
  return swift_beginAccess();
}

uint64_t sub_23F3F9B48()
{
  return sub_23F61C22C();
}

uint64_t sub_23F3F9B50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + a1) = v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v1, v3, v5);
}

uint64_t sub_23F3F9B6C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3F9B80@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  return (a1 + 1);
}

uint64_t sub_23F3F9B94()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3F9BB4(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(v1, 1, 1, a1);
}

uint64_t sub_23F3F9BCC(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(v1, 1, 1, a1);
}

uint64_t sub_23F3F9BE4()
{
  return sub_23F616FF4();
}

uint64_t sub_23F3F9BEC()
{
  return sub_23F617000();
}

uint64_t sub_23F3F9C00()
{
  return sub_23F61CD3C();
}

uint64_t sub_23F3F9C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23F3F9C14()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3F8238(v0, v1);
}

uint64_t sub_23F3F9C20()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3F9C2C()
{
  return sub_23F61C04C();
}

void sub_23F3F9C40(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F3663D4(a1, a2, v2);
}

uint64_t sub_23F3F9C48()
{
  return swift_allocObject();
}

uint64_t sub_23F3F9C78()
{
  return swift_endAccess();
}

uint64_t sub_23F3F9C80()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3F9C98()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 32);
}

uint64_t sub_23F3F9CC4(uint64_t a1, ...)
{
  uint64_t (*v1)(char *, uint64_t);
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return v1(va, v2);
}

uint64_t sub_23F3F9CD0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3F9CDC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F3F9CE4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3F8238(v0, v1);
}

uint64_t sub_23F3F9CF0()
{
  return sub_23F61CD3C();
}

uint64_t sub_23F3F9CFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v23 = MEMORY[0x24BEE4AF8];
  sub_23F37B47C();
  v2 = v23;
  result = sub_23F3C0378(a1);
  v5 = result;
  v7 = v6;
  v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v7)
      goto LABEL_14;
    v22 = v9;
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 32 * v5);
    v12 = *v10;
    v11 = v10[1];
    v14 = v10[2];
    v13 = v10[3];
    sub_23F617BA0();
    v15 = MEMORY[0x24266F6AC](v12, v11, v14, v13);
    v17 = v16;
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(v23 + 16);
    if (v18 >= *(_QWORD *)(v23 + 24) >> 1)
      sub_23F37B47C();
    *(_QWORD *)(v23 + 16) = v18 + 1;
    v19 = v23 + 16 * v18;
    *(_QWORD *)(v19 + 32) = v15;
    *(_QWORD *)(v19 + 40) = v17;
    result = sub_23F3C0290(v5, v7, v22 & 1, a1);
    v5 = result;
    v7 = v20;
    v9 = v21 & 1;
    if (!--v1)
    {
      sub_23F382E0C(result, v20, v9);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_23F3F9E98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;
  int v20;

  v3 = sub_23F61B2C0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
    return MEMORY[0x24BEE4AF8];
  v18[1] = v1;
  v8 = sub_23F35D2E8(&qword_256E704D0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)));
  v20 = *MEMORY[0x24BE56C70];
  v19 = *(_QWORD *)(v9 + 72);
  v18[0] = a1;
  sub_23F617BA0();
  v11 = MEMORY[0x24BEE4AF8];
  v18[2] = v8;
  do
  {
    v12 = *v10;
    sub_23F61B2CC();
    v13 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v13 == v20)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377218();
        v11 = v15;
      }
      v14 = *(_QWORD *)(v11 + 16);
      if (v14 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_23F377218();
        v11 = v16;
      }
      *(_QWORD *)(v11 + 16) = v14 + 1;
      *(_QWORD *)(v11 + 8 * v14 + 32) = v12;
    }
    v10 = (uint64_t *)((char *)v10 + v19);
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  return v11;
}

void sub_23F3FA05C(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  void (*v36)(unint64_t, char *, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;

  v3 = v2;
  v6 = sub_23F35D2E8(&qword_256E70220);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61B308();
  v39 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v38 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v37 = (char *)&v34 - v12;
  v13 = *(_QWORD *)(a1 + 56);
  v41 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v42 = (unint64_t)(v14 + 63) >> 6;
  sub_23F617BA0();
  v17 = 0;
  v40 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v17 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v17 >= v42)
      goto LABEL_32;
    v21 = *(_QWORD *)(v41 + 8 * v17);
    if (!v21)
      break;
LABEL_18:
    v16 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_19:
    v23 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v19);
    v24 = *v23;
    v25 = v23[1];
    sub_23F617BA0();
    a2(v24, v25);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    if (sub_23F36195C((uint64_t)v8, 1, v9) == 1)
    {
      sub_23F3625D8((uint64_t)v8, &qword_256E70220);
    }
    else
    {
      v35 = a2;
      v26 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
      v27 = v37;
      v26(v37, v8, v9);
      v36 = (void (*)(unint64_t, char *, uint64_t))v26;
      v26(v38, v27, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377BA4();
        v40 = v32;
      }
      v28 = *(_QWORD *)(v40 + 16);
      v29 = v28 + 1;
      a2 = v35;
      if (v28 >= *(_QWORD *)(v40 + 24) >> 1)
      {
        v34 = v28 + 1;
        sub_23F377BA4();
        v29 = v34;
        v40 = v33;
      }
      v30 = v39;
      v31 = v40;
      *(_QWORD *)(v40 + 16) = v29;
      v36(v31+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v28, v38, v9);
    }
  }
  v22 = v17 + 1;
  if (v17 + 1 >= v42)
    goto LABEL_32;
  v21 = *(_QWORD *)(v41 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 2;
  if (v17 + 2 >= v42)
    goto LABEL_32;
  v21 = *(_QWORD *)(v41 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 3;
  if (v17 + 3 >= v42)
    goto LABEL_32;
  v21 = *(_QWORD *)(v41 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 4;
  if (v17 + 4 >= v42)
  {
LABEL_32:
    swift_release();
    return;
  }
  v21 = *(_QWORD *)(v41 + 8 * v22);
  if (v21)
  {
LABEL_17:
    v17 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v42)
      goto LABEL_32;
    v21 = *(_QWORD *)(v41 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_18;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_23F3FA3F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int v20;
  void (*v31)(char *, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v3 = sub_23F619FAC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v54 = (char *)&v35 - v8;
  v55 = sub_23F61A684();
  v9 = *(_QWORD *)(v55 - 8);
  v10 = MEMORY[0x24BDAC7A8](v55);
  v52 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v53 = (char *)&v35 - v13;
  v14 = MEMORY[0x24BEE4AF8];
  v56 = MEMORY[0x24BEE4AF8];
  v50 = *(_QWORD *)(a1 + 16);
  if (!v50)
  {
LABEL_46:
    swift_bridgeObjectRelease();
    return v14;
  }
  v51 = v7;
  v35 = v1;
  v15 = 0;
  v49 = *MEMORY[0x24BE54CC0];
  v48 = *MEMORY[0x24BE54CD8];
  v47 = *MEMORY[0x24BE54CD0];
  v46 = *MEMORY[0x24BE54CE8];
  v45 = *MEMORY[0x24BE54D30];
  v44 = *MEMORY[0x24BE54D28];
  v43 = *MEMORY[0x24BE54D38];
  v42 = *MEMORY[0x24BE54C98];
  v41 = *MEMORY[0x24BE54CF0];
  v40 = *MEMORY[0x24BE54D20];
  v39 = *MEMORY[0x24BE54D10];
  v36 = *MEMORY[0x24BE54CA8];
  v37 = v4;
  v38 = a1;
  while (v15 < *(_QWORD *)(a1 + 16))
  {
    v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v17 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v53, a1 + v16 + v17 * v15, v55);
    v18 = v54;
    sub_23F61A63C();
    v19 = v51;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v51, v18, v3);
    v20 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v19, v3);
    if (v20 == v49
      || v20 == v48
      || v20 == v47
      || v20 == v46
      || v20 == v45
      || v20 == v44
      || v20 == v43
      || v20 == v42
      || v20 == v41
      || v20 == v40
      || v20 == v39)
    {
      v31 = *(void (**)(char *, uint64_t))(v4 + 8);
      v31(v19, v3);
LABEL_38:
      v31(v54, v3);
      v32 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v32(v52, v53, v55);
      v33 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37BA28();
        v33 = v56;
      }
      v34 = *(_QWORD *)(v33 + 16);
      if (v34 >= *(_QWORD *)(v33 + 24) >> 1)
      {
        sub_23F37BA28();
        v33 = v56;
      }
      *(_QWORD *)(v33 + 16) = v34 + 1;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v32)(v33 + v16 + v34 * v17, v52, v55);
      v56 = v33;
      v4 = v37;
      a1 = v38;
      goto LABEL_44;
    }
    v31 = *(void (**)(char *, uint64_t))(v4 + 8);
    if (v20 == v36)
      goto LABEL_38;
    v31(v51, v3);
    v31(v54, v3);
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v53, v55);
LABEL_44:
    if (v50 == ++v15)
    {
      v14 = v56;
      goto LABEL_46;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23F3FA7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[32] = a2;
  v3[33] = v2;
  v3[31] = a1;
  v3[34] = type metadata accessor for FullPlannerPreferences();
  v3[35] = sub_23F366578();
  v3[36] = type metadata accessor for SystemTurnItem(0);
  v3[37] = sub_23F366654();
  v3[38] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E702E0);
  v3[39] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F3FA838()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  _QWORD v63[13];

  v1 = v0[32];
  v2 = v0[33];
  type metadata accessor for ToolPromptMap(0);
  v3 = MEMORY[0x24BEE4AF8];
  sub_23F3840BC();
  v4 = sub_23F61BFEC();
  sub_23F617000();
  v5 = (void (*)(uint64_t))MEMORY[0x24BDCEA58];
  sub_23F61B5D8();
  sub_23F3B121C(&qword_256E70430, v5);
  sub_23F406E84();
  v6 = sub_23F61BFEC();
  type metadata accessor for RenderingState();
  v7 = swift_allocObject();
  sub_23F3840BC();
  v8 = sub_23F61BFEC();
  v0[2] = v3;
  v9 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v7 + 16) = v8;
  *(_QWORD *)(v7 + 24) = v9;
  v10 = MEMORY[0x24BEE4B00];
  v0[3] = v4;
  v0[4] = v10;
  v0[5] = v3;
  v0[6] = v6;
  v0[7] = v3;
  v0[8] = v9;
  v0[9] = v7;
  v11 = (_QWORD *)(v2 + *(int *)(sub_23F40580C() + 28));
  v12 = v11[3];
  v13 = v11[4];
  sub_23F35EA9C(v11, v12);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v1, v12, v13);
  v15 = v11[3];
  v16 = v11[4];
  v17 = (_QWORD *)sub_23F3ECB90();
  sub_23F35EA9C(v17, v18);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v1, v15, v16);
  sub_23F5F44D4();
  sub_23F61724C();
  v0[29] = v14;
  sub_23F404ED4();
  sub_23F404F10();
  sub_23F383E5C();
  sub_23F617240();
  sub_23F38458C();
  sub_23F3837B0();
  if (!*(_QWORD *)(v14 + 16))
  {
    sub_23F3837B0();
    sub_23F384120();
    goto LABEL_5;
  }
  v20 = v0[39];
  v0[28] = sub_23F61B14C();
  sub_23F35D2E8(&qword_256E70F10);
  sub_23F3B0CC8(&qword_256E70F18, &qword_256E70F10);
  sub_23F61ACB4();
  sub_23F362D08();
  v21 = sub_23F61B2E4();
  v22 = sub_23F36195C(v20, 1, v21);
  v23 = v0[39];
  if (v22 == 1)
  {
    sub_23F3837B0();
    sub_23F384120();
    sub_23F3625D8(v23, &qword_256E702E0);
LABEL_5:
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    goto LABEL_11;
  }
  v61 = v0 + 16;
  v28 = v0[38];
  v56 = (int *)v0[36];
  v57 = v0[37];
  sub_23F3625D8(v23, &qword_256E702E0);
  v29 = v11[3];
  v30 = v11[4];
  sub_23F35EA9C(v11, v29);
  v31 = v0[9];
  v32 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 24);
  swift_retain();
  v32(v63, v14, v19, v31, v29, v30);
  sub_23F3837B0();
  sub_23F384120();
  swift_release();
  v33 = v63[1];
  v34 = v63[2];
  v59 = v63[0];
  v35 = v63[4];
  v36 = v63[5];
  v38 = v63[6];
  v37 = v63[7];
  v62 = v63[9];
  v60 = v63[10];
  v27 = v63[12];
  v58 = v63[11];
  sub_23F389CDC();
  sub_23F383EB0();
  sub_23F383E5C();
  sub_23F3668F4();
  sub_23F362984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[3] = v35;
  v0[4] = v36;
  v0[5] = v38;
  v0[6] = v37;
  sub_23F35D2E8(&qword_256E704B8);
  sub_23F4059A8();
  v39 = sub_23F4057E4();
  *(_OWORD *)(v39 + 16) = xmmword_23F61E7E0;
  v40 = (_QWORD *)(v39 + v38);
  *v40 = v59;
  v40[1] = v33;
  v40[2] = v34;
  sub_23F3B5C30();
  v41 = v28 + v56[8];
  v42 = sub_23F617D08();
  sub_23F3838D8(v41, v43, v44, v42);
  sub_23F617BA0();
  sub_23F384324();
  sub_23F616FF4();
  *(_BYTE *)(v28 + v56[5]) = 2;
  *(_QWORD *)(v28 + v56[6]) = v39;
  *(_BYTE *)(v28 + v56[7]) = 0;
  sub_23F38F530(v28, v57, type metadata accessor for SystemTurnItem);
  v45 = v0[2];
  if ((sub_23F3B1CDC() & 1) == 0)
  {
    sub_23F405B8C();
    v45 = v54;
  }
  v46 = *(_QWORD *)(v45 + 16);
  if (v46 >= *(_QWORD *)(v45 + 24) >> 1)
  {
    sub_23F405CB8();
    v45 = v55;
  }
  v48 = v0[37];
  v47 = v0[38];
  v0[19] = v0[36];
  v0[20] = &off_250FD4AD0;
  v49 = sub_23F36145C(v61);
  sub_23F40668C(v48, (uint64_t)v49);
  *(_QWORD *)(v45 + 16) = v46 + 1;
  sub_23F362678((__int128 *)v61, v45 + 40 * v46 + 32);
  v0[2] = v45;
  sub_23F406684(v48);
  sub_23F389CDC();
  sub_23F35FEEC();
  sub_23F406684(v47);
  v24 = v62;
  v25 = v60;
  v26 = v58;
  sub_23F39BA5C(v62, v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F362D08();
  v50 = sub_23F3840BC();
  sub_23F39BB1C(v50, v51);
  swift_bridgeObjectRelease();
LABEL_11:
  v0[42] = v26;
  v0[43] = v27;
  v0[40] = v24;
  v0[41] = v25;
  v52 = (_QWORD *)swift_task_alloc();
  v0[44] = v52;
  *v52 = v0;
  v52[1] = sub_23F3FADE4;
  return sub_23F3FB4AC(v0[32], (uint64_t)(v0 + 2));
}

uint64_t sub_23F3FADE4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F3B1998();
  *v2 = *v1;
  *(_QWORD *)(v3 + 360) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F3FAE34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F3836F0();
  v1 = sub_23F383E5C();
  v2 = sub_23F402074(v1);
  *(_QWORD *)(v0 + 368) = v2;
  sub_23F3837B0();
  sub_23F3668F4();
  sub_23F3837B0();
  *(_QWORD *)(v0 + 40) = v2;
  if (qword_256E6EE90 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 280);
  v4 = sub_23F361498(*(_QWORD *)(v0 + 272), (uint64_t)qword_256E7FE90);
  sub_23F3C08CC();
  sub_23F38F530(v4, v3, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F617C48();
  v5 = *(unsigned __int8 *)(v0 + 514);
  sub_23F3663AC(v3, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  if (v5 == 1)
  {
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 376) = v6;
    *v6 = v0;
    v6[1] = sub_23F3FAFDC;
    sub_23F3843EC();
    return Toolbox.getAllowedTools()();
  }
  else
  {
    sub_23F362D18();
    v9 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)(v0 + 24);
    v10 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 424) = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 432) = v9;
    v12 = *(_QWORD *)(v0 + 32);
    v11 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 440) = v8;
    *(_QWORD *)(v0 + 448) = v12;
    *(_QWORD *)(v0 + 456) = v11;
    *(_QWORD *)(v0 + 464) = v10;
    v13 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v0 + 472) = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 480) = v13;
    sub_23F384324();
    sub_23F3668F4();
    sub_23F383EB0();
    sub_23F383E5C();
    sub_23F389CDC();
    sub_23F384B00();
    sub_23F384A00();
    swift_retain();
    sub_23F50FE20();
    *(_QWORD *)(v0 + 488) = v14;
    *(_QWORD *)(v0 + 496) = v15;
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 504) = v16;
    v17 = sub_23F406B2C(v16);
    return sub_23F406658(v17, v18, v19, v20, v12, v11, v10);
  }
}

uint64_t sub_23F3FAFDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  sub_23F406D10();
  sub_23F3B2010(v4);
  *(_QWORD *)(v2 + 384) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 392) = a1;
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F3FB03C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;

  sub_23F3836F0();
  v2 = *(_QWORD *)(v0 + 336);
  v1 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 328);
  static PromptGrammarGenerationMode.deviceConfiguration()();
  v5 = *(_BYTE *)(v0 + 513);
  *(_QWORD *)(v0 + 168) = v4;
  *(_BYTE *)(v0 + 512) = v5;
  *(_QWORD *)(v0 + 176) = v3;
  *(_QWORD *)(v0 + 184) = v2;
  *(_QWORD *)(v0 + 192) = v1;
  *(_QWORD *)(v0 + 400) = *(_QWORD *)(v0 + 72);
  v6 = sub_23F3ECB90();
  sub_23F39BA5C(v6, v7);
  swift_retain();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v8;
  *v8 = v0;
  v8[1] = sub_23F3FB0FC;
  sub_23F3843EC();
  return sub_23F4034DC(v9, v10, v11, v12, v13, v14);
}

uint64_t sub_23F3FB0FC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23F3B1998();
  v4 = v2[40];
  v3 = v2[41];
  *v5 = *v1;
  v2[52] = v0;
  swift_task_dealloc();
  sub_23F39BB1C(v4, v3);
  sub_23F3668FC();
  sub_23F3837B0();
  sub_23F362D08();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F3FB198()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F3836F0();
  v1 = v0[30];
  swift_bridgeObjectRelease();
  v0[7] = v1;
  v3 = v0[2];
  v2 = v0[3];
  v0[53] = v1;
  v0[54] = v3;
  v4 = v0[4];
  v5 = v0[5];
  v0[55] = v2;
  v0[56] = v4;
  v6 = v0[6];
  v0[57] = v5;
  v0[58] = v6;
  v7 = v0[9];
  v0[59] = v0[8];
  v0[60] = v7;
  sub_23F384B00();
  sub_23F3668F4();
  sub_23F389CDC();
  sub_23F383E5C();
  sub_23F383EB0();
  sub_23F384324();
  sub_23F384A00();
  swift_retain();
  sub_23F50FE20();
  v0[61] = v8;
  v0[62] = v9;
  v10 = (_QWORD *)swift_task_alloc();
  v0[63] = v10;
  v11 = sub_23F406B2C(v10);
  return sub_23F406658(v11, v12, v13, v14, v4, v5, v6);
}

uint64_t sub_23F3FB250()
{
  sub_23F3B1998();
  sub_23F3E0168();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F3FB284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t (*v9)(void);

  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 424);
  v5 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 328);
  v6 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)v6 = *(_QWORD *)(v0 + 488);
  *(_QWORD *)(v6 + 8) = v1;
  v7 = *(_OWORD *)(v0 + 80);
  v8 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v6 + 48) = v8;
  *(_OWORD *)(v6 + 16) = v7;
  *(_QWORD *)(v6 + 64) = v3;
  *(_QWORD *)(v6 + 72) = v2;
  swift_bridgeObjectRelease();
  sub_23F3B5F04();
  sub_23F38458C();
  sub_23F384364();
  sub_23F38432C();
  sub_23F384120();
  sub_23F39BB1C(v5, v4);
  swift_bridgeObjectRelease();
  sub_23F362984();
  sub_23F362D18();
  sub_23F362D08();
  sub_23F3837B0();
  sub_23F384120();
  sub_23F38432C();
  swift_release();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  v9 = (uint64_t (*)(void))sub_23F384760();
  return v9();
}

uint64_t sub_23F3FB38C()
{
  uint64_t v0;

  sub_23F3B1D38();
  sub_23F4069CC();
  sub_23F4060EC();
  sub_23F38432C();
  sub_23F384364();
  sub_23F38458C();
  sub_23F3B5F04();
  sub_23F384120();
  sub_23F362984();
  sub_23F3667A8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  return sub_23F366630(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3FB3EC()
{
  uint64_t v0;

  sub_23F3B1D38();
  sub_23F4069CC();
  sub_23F4060EC();
  sub_23F38432C();
  sub_23F384364();
  sub_23F38458C();
  sub_23F3B5F04();
  sub_23F384120();
  sub_23F362984();
  sub_23F3667A8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  return sub_23F366630(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3FB44C()
{
  uint64_t v0;

  sub_23F3B1D38();
  sub_23F4069CC();
  sub_23F4060EC();
  sub_23F38432C();
  sub_23F384364();
  sub_23F38458C();
  sub_23F3B5F04();
  sub_23F384120();
  sub_23F362984();
  sub_23F3667A8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  return sub_23F366630(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3FB4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3[34] = a2;
  v3[35] = v2;
  v3[33] = a1;
  v4 = sub_23F619E98();
  v3[36] = v4;
  v3[37] = *(_QWORD *)(v4 - 8);
  v3[38] = sub_23F366654();
  v3[39] = sub_23F3666CC();
  v5 = sub_23F61A3A8();
  v3[40] = v5;
  v3[41] = *(_QWORD *)(v5 - 8);
  v3[42] = sub_23F366578();
  v6 = sub_23F61A8AC();
  v3[43] = v6;
  v3[44] = *(_QWORD *)(v6 - 8);
  v3[45] = sub_23F366578();
  v7 = sub_23F61A8C4();
  v3[46] = v7;
  v3[47] = *(_QWORD *)(v7 - 8);
  v3[48] = sub_23F366578();
  v8 = sub_23F6180B0();
  v3[49] = v8;
  v3[50] = *(_QWORD *)(v8 - 8);
  v3[51] = sub_23F366578();
  sub_23F35D2E8(&qword_256E72CB8);
  v3[52] = sub_23F366654();
  v3[53] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E72CC0);
  v3[54] = sub_23F366654();
  v3[55] = sub_23F3666CC();
  v9 = sub_23F617E40();
  v3[56] = v9;
  v3[57] = *(_QWORD *)(v9 - 8);
  v3[58] = sub_23F366578();
  v10 = sub_23F61A504();
  v3[59] = v10;
  v3[60] = *(_QWORD *)(v10 - 8);
  v3[61] = sub_23F366578();
  v11 = sub_23F617D08();
  v3[62] = v11;
  v3[63] = *(_QWORD *)(v11 - 8);
  v3[64] = sub_23F366578();
  v12 = sub_23F61A684();
  v3[65] = v12;
  v3[66] = *(_QWORD *)(v12 - 8);
  v3[67] = sub_23F366578();
  v13 = sub_23F61B1E8();
  v3[68] = v13;
  v3[69] = *(_QWORD *)(v13 - 8);
  v3[70] = sub_23F366578();
  v14 = sub_23F61AAD4();
  v3[71] = v14;
  v3[72] = *(_QWORD *)(v14 - 8);
  v3[73] = sub_23F366578();
  v15 = sub_23F619FF4();
  v3[74] = v15;
  v3[75] = *(_QWORD *)(v15 - 8);
  v3[76] = sub_23F366578();
  v3[77] = type metadata accessor for UserTurnItem(0);
  v3[78] = sub_23F366578();
  v16 = sub_23F61B470();
  v3[79] = v16;
  v3[80] = *(_QWORD *)(v16 - 8);
  v3[81] = sub_23F366578();
  v17 = sub_23F61A36C();
  v3[82] = v17;
  v3[83] = *(_QWORD *)(v17 - 8);
  v3[84] = sub_23F366654();
  v3[85] = sub_23F3666CC();
  v18 = sub_23F61B0E0();
  v3[86] = v18;
  v3[87] = *(_QWORD *)(v18 - 8);
  v3[88] = sub_23F366578();
  v19 = sub_23F61B2C0();
  v3[89] = v19;
  v3[90] = *(_QWORD *)(v19 - 8);
  v3[91] = sub_23F366654();
  v3[92] = sub_23F3666CC();
  v20 = sub_23F61B2E4();
  v3[93] = v20;
  v3[94] = *(_QWORD *)(v20 - 8);
  v3[95] = sub_23F366654();
  v3[96] = sub_23F3666CC();
  v3[97] = sub_23F3666CC();
  v3[98] = sub_23F3666CC();
  v3[99] = sub_23F3666CC();
  v3[100] = sub_23F35D2E8(&qword_256E704D0);
  v3[101] = sub_23F366578();
  sub_23F35D2E8(&qword_256E72CC8);
  v3[102] = sub_23F366654();
  v3[103] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

#error "23F3FBFB0: call analysis failed (funcsize=1272)"

uint64_t sub_23F3FCC40(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_23F406B70(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 904) = v2;
  v3 = sub_23F405D84(v2, (uint64_t)sub_23F3FDDD4);
  return sub_23F4060D0(v3, v4, v5);
}

uint64_t sub_23F3FCC68()
{
  sub_23F3B1998();
  sub_23F3E0168();
  sub_23F362984();
  sub_23F36679C();
  return sub_23F3B15DC();
}

#error "23F3FCFD0: call analysis failed (funcsize=1047)"

uint64_t sub_23F3FDDA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F406B7C(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 888) = v2;
  *v2 = v1;
  v2[1] = sub_23F3FCC68;
  v3 = sub_23F405E30();
  return sub_23F40607C(v3, v4);
}

uint64_t sub_23F3FDDD4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D10();
  sub_23F3B2010(v2);
  *(_QWORD *)(v1 + 912) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  sub_23F362D18();
  sub_23F36679C();
  return sub_23F3B183C();
}

#error "23F3FE0F0: call analysis failed (funcsize=1021)"

uint64_t sub_23F3FEEFC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_23F406B70(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 904) = v2;
  v3 = sub_23F405D84(v2, (uint64_t)sub_23F3FDDD4);
  return sub_23F4060D0(v3, v4, v5);
}

uint64_t sub_23F3FEF24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3D09B4();
  v1 = v0[94];
  sub_23F384274(v0[72]);
  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v0 + 7));
  sub_23F405550(v0[114]);
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  v2 = (uint64_t (*)(void))sub_23F406DA8();
  return sub_23F3D05C8(v2);
}

uint64_t sub_23F3FEFFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 928) = v1;
  swift_task_dealloc();
  if (v1)
    sub_23F406DFC();
  sub_23F36679C();
  return sub_23F36664C();
}

#error "23F3FF298: call analysis failed (funcsize=902)"

uint64_t sub_23F3FFF34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_23F406B70(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 904) = v2;
  v3 = sub_23F405D84(v2, (uint64_t)sub_23F3FDDD4);
  return sub_23F405FE4(v3, v4, v5);
}

uint64_t sub_23F3FFF5C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3D09B4();
  v1 = v0[94];
  sub_23F384274(v0[60]);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F405550(v0[116]);
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  v2 = (uint64_t (*)(void))sub_23F406DA8();
  return sub_23F3D05C8(v2);
}

uint64_t sub_23F400024()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 944) = v1;
  swift_task_dealloc();
  if (v1)
    sub_23F406DFC();
  sub_23F36679C();
  return sub_23F36664C();
}

#error "23F4002C0: call analysis failed (funcsize=902)"

uint64_t sub_23F400F5C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_23F406B70(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 904) = v2;
  v3 = sub_23F405D84(v2, (uint64_t)sub_23F3FDDD4);
  return sub_23F405FE4(v3, v4, v5);
}

uint64_t sub_23F400F84()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3D09B4();
  v1 = v0[94];
  sub_23F384274(v0[44]);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F405550(v0[118]);
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  v2 = (uint64_t (*)(void))sub_23F406DA8();
  return sub_23F3D05C8(v2);
}

uint64_t sub_23F40104C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 960) = v1;
  swift_task_dealloc();
  if (v1)
    sub_23F406DFC();
  sub_23F36679C();
  return sub_23F36664C();
}

#error "23F4012E8: call analysis failed (funcsize=902)"

uint64_t sub_23F401F84(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_23F406B70(a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 904) = v2;
  v3 = sub_23F405D84(v2, (uint64_t)sub_23F3FDDD4);
  return sub_23F405FE4(v3, v4, v5);
}

uint64_t sub_23F401FAC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3D09B4();
  v1 = v0[94];
  sub_23F384274(v0[41]);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F405550(v0[120]);
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  v2 = (uint64_t (*)(void))sub_23F406DA8();
  return sub_23F3D05C8(v2);
}

uint64_t sub_23F402074(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  char v28;
  unsigned int v29;
  size_t v30;
  uint64_t isStackAllocationSafe;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  uint8_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t result;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  __int128 v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;

  v164 = *MEMORY[0x24BDAC8D0];
  v138 = sub_23F619E98();
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138);
  sub_23F38F964();
  v136 = v3 - v2;
  v4 = type metadata accessor for StatementSegment(0);
  v141 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v147 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v146 = (char *)&v130 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v9 = a1 + 32;
    v156 = a1;
    sub_23F3668F4();
    v10 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_23F382FC4(v9, (uint64_t)&v161);
      sub_23F382FC4((uint64_t)&v161, (uint64_t)&v160);
      sub_23F35D2E8(&qword_256E70420);
      sub_23F35D2E8(&qword_256E70448);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v159 = 0;
        v157 = 0u;
        v158 = 0u;
      }
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v161);
      if (*((_QWORD *)&v158 + 1))
      {
        sub_23F362678(&v157, (uint64_t)&v160);
        sub_23F362678(&v160, (uint64_t)&v157);
        if ((sub_23F3F5E54() & 1) != 0)
        {
          v11 = v10;
        }
        else
        {
          sub_23F377B90();
          v11 = v13;
        }
        v12 = *(_QWORD *)(v11 + 16);
        if (v12 >= *(_QWORD *)(v11 + 24) >> 1)
        {
          sub_23F377B90();
          v11 = v14;
        }
        *(_QWORD *)(v11 + 16) = v12 + 1;
        v10 = v11;
        sub_23F362678(&v157, v11 + 40 * v12 + 32);
      }
      else
      {
        sub_23F3625D8((uint64_t)&v157, &qword_256E72CB0);
      }
      v9 += 40;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x24BEE4AF8];
    v16 = v10;
  }
  else
  {
    v16 = MEMORY[0x24BEE4AF8];
    v15 = MEMORY[0x24BEE4AF8];
  }
  v17 = (uint64_t *)v147;
  v18 = (uint64_t)v146;
  v142 = *(_QWORD *)(v16 + 16);
  if (!v142)
  {
    swift_bridgeObjectRelease();
    v118 = MEMORY[0x24BEE4AF8];
    goto LABEL_140;
  }
  v19 = v16 + 32;
  v135 = v16;
  sub_23F617BA0();
  v20 = 0;
  v134 = 0;
  v144 = v15;
  v145 = v4;
  v140 = v19;
  do
  {
    v143 = v20;
    sub_23F382FC4(v19 + 40 * v20, (uint64_t)&v161);
    v21 = v162;
    v22 = v163;
    sub_23F35EA9C(&v161, v162);
    v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v22 + 8) + 40))(v21);
    v152 = *(_QWORD *)(v23 + 16);
    if (v152)
    {
      v24 = v141;
      v150 = v23 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
      v139 = v23;
      sub_23F617BA0();
      v25 = 0;
      v149 = *(_QWORD *)(v24 + 72);
      v155 = v15;
      while (1)
      {
        sub_23F38F530(v150 + v149 * v25, v18, type metadata accessor for StatementSegment);
        sub_23F38F530(v18, (uint64_t)v17, type metadata accessor for StatementSegment);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v154 = v25;
        if (EnumCaseMultiPayload != 1)
        {
          sub_23F3663AC((uint64_t)v17, type metadata accessor for StatementSegment);
          v46 = v15;
          goto LABEL_104;
        }
        v156 = *v17;
        v27 = v17[2];
        v153 = v17[1];
        v28 = *(_BYTE *)(v27 + 32);
        v29 = v28 & 0x3F;
        v30 = 8 * ((unint64_t)((1 << v28) + 63) >> 6);
        isStackAllocationSafe = sub_23F617BA0();
        if (v29 > 0xD)
        {
          isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
          if ((isStackAllocationSafe & 1) == 0)
          {
            v49 = (char *)sub_23F366668();
            bzero(v49, v30);
            sub_23F406398();
            while (1)
            {
              if (v55)
              {
                v58 = __clz(__rbit64(v55));
                v55 &= v55 - 1;
                v59 = v58 | (v54 << 6);
              }
              else
              {
                v42 = __OFADD__(v54++, 1);
                if (v42)
                  goto LABEL_150;
                if (v54 >= v53)
                  goto LABEL_69;
                v60 = *(_QWORD *)(v52 + 8 * v54);
                if (!v60)
                {
                  v61 = v54 + 1;
                  if (v54 + 1 >= v53)
                    goto LABEL_69;
                  v60 = *(_QWORD *)(v52 + 8 * v61);
                  if (!v60)
                  {
                    v61 = v54 + 2;
                    if (v54 + 2 >= v53)
                      goto LABEL_69;
                    v60 = *(_QWORD *)(v52 + 8 * v61);
                    if (!v60)
                    {
                      v61 = v54 + 3;
                      if (v54 + 3 >= v53)
                        goto LABEL_69;
                      v60 = *(_QWORD *)(v52 + 8 * v61);
                      if (!v60)
                      {
                        while (1)
                        {
                          v54 = v61 + 1;
                          if (__OFADD__(v61, 1))
                            goto LABEL_154;
                          if (v54 >= v53)
                            break;
                          v60 = *(_QWORD *)(v52 + 8 * v54);
                          ++v61;
                          if (v60)
                            goto LABEL_60;
                        }
LABEL_69:
                        sub_23F406E3C((uint64_t *)v49, v50, v51);
                        sub_23F366530();
                      }
                    }
                  }
                  v54 = v61;
                }
LABEL_60:
                v62 = __clz(__rbit64(v60));
                v55 = (v60 - 1) & v60;
                v59 = v62 + (v54 << 6);
              }
              if (*(_BYTE *)(*(_QWORD *)(v27 + 48) + v59 * v57 + 16) == 2)
              {
                *(_QWORD *)&v49[(v59 >> 3) & 0x1FFFFFFFFFFFFFF8] |= v56 << v59;
                v42 = __OFADD__(v51++, 1);
                if (v42)
                  goto LABEL_158;
              }
            }
          }
        }
        MEMORY[0x24BDAC7A8](isStackAllocationSafe);
        bzero((char *)&v130 - ((v30 + 15) & 0x3FFFFFFFFFFFFFF0), v30);
        sub_23F406398();
        while (1)
        {
          if (v37)
          {
            v40 = __clz(__rbit64(v37));
            v37 &= v37 - 1;
            v41 = v40 | (v36 << 6);
            goto LABEL_37;
          }
          v42 = __OFADD__(v36++, 1);
          if (v42)
            goto LABEL_149;
          if (v36 >= v35)
            break;
          v43 = *(_QWORD *)(v34 + 8 * v36);
          if (!v43)
          {
            v44 = v36 + 1;
            if (v36 + 1 >= v35)
              break;
            v43 = *(_QWORD *)(v34 + 8 * v44);
            if (!v43)
            {
              v44 = v36 + 2;
              if (v36 + 2 >= v35)
                break;
              v43 = *(_QWORD *)(v34 + 8 * v44);
              if (!v43)
              {
                v44 = v36 + 3;
                if (v36 + 3 >= v35)
                  break;
                v43 = *(_QWORD *)(v34 + 8 * v44);
                if (!v43)
                {
                  while (1)
                  {
                    v36 = v44 + 1;
                    if (__OFADD__(v44, 1))
                      break;
                    if (v36 >= v35)
                      goto LABEL_46;
                    v43 = *(_QWORD *)(v34 + 8 * v36);
                    ++v44;
                    if (v43)
                      goto LABEL_36;
                  }
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
LABEL_156:
                  __break(1u);
                  goto LABEL_157;
                }
              }
            }
            v36 = v44;
          }
LABEL_36:
          v45 = __clz(__rbit64(v43));
          v37 = (v43 - 1) & v43;
          v41 = v45 + (v36 << 6);
LABEL_37:
          if (*(_BYTE *)(*(_QWORD *)(v27 + 48) + v41 * v39 + 16) == 2)
          {
            *(_QWORD *)((char *)&v130 + ((v41 >> 3) & 0x1FFFFFFFFFFFFFF8) - ((v30 + 15) & 0x3FFFFFFFFFFFFFF0)) |= v38 << v41;
            v42 = __OFADD__(v33++, 1);
            if (v42)
              goto LABEL_156;
          }
        }
LABEL_46:
        sub_23F406E3C((uint64_t *)((char *)&v130 - ((v30 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v33);
        v48 = v47;
        v63 = *(_QWORD *)(v47 + 16);
        v151 = v27;
        if (!v63)
        {
          sub_23F3668FC();
          v64 = v15;
          goto LABEL_97;
        }
        *(_QWORD *)&v160 = v15;
        v148 = v63;
        sub_23F37BF60();
        v64 = v160;
        v65 = sub_23F3C0378(v48);
        v67 = v66;
        v68 = v148;
        v69 = 0;
        v71 = v70 & 1;
        v72 = v48 + 56;
        v73 = *(_BYTE *)(v48 + 32);
        v74 = v66;
        v75 = v48 + 88;
        while (2)
        {
          if (v65 < 0 || v65 >= 1 << v73)
          {
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
            goto LABEL_151;
          }
          v18 = (unint64_t)v65 >> 6;
          if ((*(_QWORD *)(v72 + 8 * ((unint64_t)v65 >> 6)) & (1 << v65)) == 0)
            goto LABEL_144;
          if (*(_DWORD *)(v48 + 36) != v67)
            goto LABEL_145;
          v76 = *(_OWORD *)(*(_QWORD *)(v48 + 48) + 24 * v65);
          *(_QWORD *)&v160 = v64;
          v77 = *(_QWORD *)(v64 + 16);
          v78 = v64;
          if (v77 >= *(_QWORD *)(v64 + 24) >> 1)
          {
            v132 = v74;
            v131 = v75;
            v133 = v72;
            v130 = v76;
            sub_23F37BF60();
            v76 = v130;
            v75 = v131;
            v74 = v132;
            v72 = v133;
            v68 = v148;
            v78 = v160;
          }
          *(_QWORD *)(v78 + 16) = v77 + 1;
          *(_OWORD *)(v78 + 16 * v77 + 32) = v76;
          if ((v71 & 1) != 0)
            goto LABEL_163;
          v64 = v78;
          v73 = *(_BYTE *)(v48 + 32);
          v79 = 1 << v73;
          if (v65 >= 1 << v73)
            goto LABEL_146;
          v80 = *(_QWORD *)(v72 + 8 * v18);
          if ((v80 & (1 << v65)) == 0)
            goto LABEL_147;
          if (*(_DWORD *)(v48 + 36) != v67)
            goto LABEL_148;
          v81 = v80 & (-2 << (v65 & 0x3F));
          if (v81)
          {
            v79 = __clz(__rbit64(v81)) | v65 & 0xFFFFFFFFFFFFFFC0;
            goto LABEL_87;
          }
          v82 = v18 + 1;
          if (v18 + 1 < (v79 + 63) >> 6)
          {
            v83 = *(_QWORD *)(v72 + 8 * v82);
            if (v83)
              goto LABEL_86;
            v84 = (v79 + 63) >> 6;
            v82 = v18 + 2;
            if (v18 + 2 < v84)
            {
              v83 = *(_QWORD *)(v72 + 8 * v82);
              if (v83)
                goto LABEL_86;
              v82 = v18 + 3;
              if (v18 + 3 >= v84)
                goto LABEL_87;
              v83 = *(_QWORD *)(v72 + 8 * v82);
              if (v83)
              {
LABEL_86:
                v79 = __clz(__rbit64(v83)) + (v82 << 6);
                goto LABEL_87;
              }
              while (v18 + 4 < v84)
              {
                v83 = *(_QWORD *)(v75 + 8 * v18++);
                if (v83)
                {
                  v82 = v18 + 3;
                  goto LABEL_86;
                }
              }
            }
          }
LABEL_87:
          v71 = 0;
          ++v69;
          v67 = v74;
          v65 = v79;
          if (v69 != v68)
            continue;
          break;
        }
        sub_23F3668FC();
        v15 = MEMORY[0x24BEE4AF8];
LABEL_97:
        v17 = *(uint64_t **)(v64 + 16);
        if (v17)
        {
          *(_QWORD *)&v160 = v15;
          sub_23F37BFC0();
          v46 = v160;
          v148 = v64;
          v85 = v64 + 40;
          do
          {
            v18 = sub_23F61C34C();
            v87 = v86;
            v89 = v88;
            v91 = v90;
            *(_QWORD *)&v160 = v46;
            v92 = *(_QWORD *)(v46 + 16);
            if (v92 >= *(_QWORD *)(v46 + 24) >> 1)
            {
              sub_23F37BFC0();
              v46 = v160;
            }
            v85 += 16;
            *(_QWORD *)(v46 + 16) = v92 + 1;
            v93 = (_QWORD *)(v46 + 32 * v92);
            v93[4] = v18;
            v93[5] = v87;
            v93[6] = v89;
            v93[7] = v91;
            v17 = (uint64_t *)((char *)v17 - 1);
          }
          while (v17);
          swift_bridgeObjectRelease();
          sub_23F362984();
          swift_bridgeObjectRelease();
          sub_23F406A24();
          v15 = MEMORY[0x24BEE4AF8];
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_23F362984();
          sub_23F362D08();
          v46 = v15;
          sub_23F406A24();
        }
LABEL_104:
        sub_23F3663AC(v18, type metadata accessor for StatementSegment);
        v94 = *(_QWORD *)(v46 + 16);
        v95 = *(_QWORD *)(v155 + 16);
        if (__OFADD__(v95, v94))
          goto LABEL_152;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v97 = v155;
        if (!isUniquelyReferenced_nonNull_native || v95 + v94 > *(_QWORD *)(v155 + 24) >> 1)
        {
          sub_23F377B74();
          v97 = v98;
        }
        v99 = *(_QWORD *)(v46 + 16);
        v155 = v97;
        if (!v99)
        {
          if (!v94)
            goto LABEL_119;
          goto LABEL_153;
        }
        v100 = *(_QWORD *)(v97 + 16);
        if ((*(_QWORD *)(v97 + 24) >> 1) - v100 < v94)
          goto LABEL_155;
        v101 = v97 + 32 * v100 + 32;
        if (v46 + 32 < v101 + 32 * v94 && v101 < v46 + 32 + 32 * v94)
        {
LABEL_164:
          result = sub_23F61CA9C();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        if (v94)
        {
          v103 = *(_QWORD *)(v155 + 16);
          v42 = __OFADD__(v103, v94);
          v104 = v103 + v94;
          if (!v42)
          {
            *(_QWORD *)(v155 + 16) = v104;
            goto LABEL_119;
          }
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
        }
LABEL_119:
        v25 = v154 + 1;
        sub_23F362D18();
        if (v25 == v152)
        {
          sub_23F384A80();
          v105 = v155;
          goto LABEL_122;
        }
      }
    }
    swift_bridgeObjectRelease();
    v105 = v15;
LABEL_122:
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v161);
    v106 = *(_QWORD *)(v105 + 16);
    v107 = *(_QWORD *)(v144 + 16);
    if (__OFADD__(v107, v106))
      goto LABEL_159;
    v108 = swift_isUniquelyReferenced_nonNull_native();
    v109 = v144;
    if (!v108 || v107 + v106 > *(_QWORD *)(v144 + 24) >> 1)
    {
      sub_23F377B74();
      v109 = v110;
    }
    v111 = v143;
    v112 = *(_QWORD *)(v105 + 16);
    v144 = v109;
    if (v112)
    {
      v113 = *(_QWORD *)(v109 + 16);
      if ((*(_QWORD *)(v109 + 24) >> 1) - v113 < v106)
        goto LABEL_161;
      v114 = v109 + 32 * v113 + 32;
      if (v105 + 32 < v114 + 32 * v106 && v114 < v105 + 32 + 32 * v106)
        goto LABEL_164;
      swift_arrayInitWithCopy();
      if (v106)
      {
        v116 = *(_QWORD *)(v144 + 16);
        v42 = __OFADD__(v116, v106);
        v117 = v116 + v106;
        if (v42)
          goto LABEL_162;
        *(_QWORD *)(v144 + 16) = v117;
      }
    }
    else if (v106)
    {
      goto LABEL_160;
    }
    v20 = v111 + 1;
    swift_bridgeObjectRelease();
    v19 = v140;
  }
  while (v20 != v142);
  sub_23F384A80();
  v118 = v144;
LABEL_140:
  v119 = sub_23F3691A4(v118);
  v120 = sub_23F405014(v119);
  v121 = sub_23F3F9CFC(v120);
  swift_release();
  v122 = v136;
  sub_23F619088();
  swift_bridgeObjectRetain_n();
  v123 = sub_23F619E8C();
  v124 = sub_23F61C61C();
  if (os_log_type_enabled(v123, v124))
  {
    v125 = (uint8_t *)sub_23F366668();
    v161 = sub_23F366668();
    *(_DWORD *)v125 = 136315138;
    *(_QWORD *)&v160 = v121;
    sub_23F35D2E8(&qword_256E70580);
    sub_23F3B0CC8(&qword_256E70588, &qword_256E70580);
    v126 = sub_23F61C088();
    sub_23F37AE00(v126, v127, &v161);
    *(_QWORD *)&v160 = v128;
    sub_23F61C790();
    sub_23F384A80();
    sub_23F362984();
    _os_log_impl(&dword_23F35A000, v123, v124, "Quotable strings for the current user prompt: \n%s", v125, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }

  sub_23F384A80();
  (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v122, v138);
  return v121;
}

uint64_t Toolbox.getAllowedTools()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[2] = v0;
  sub_23F35D2E8(&qword_256E70238);
  v1[3] = sub_23F366578();
  v2 = sub_23F61B5D8();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = sub_23F366654();
  v1[7] = sub_23F3666CC();
  v1[8] = sub_23F3666CC();
  v3 = sub_23F61B308();
  v1[9] = v3;
  v1[10] = *(_QWORD *)(v3 - 8);
  v1[11] = sub_23F366654();
  v1[12] = sub_23F3666CC();
  v4 = sub_23F384B34();
  v1[13] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[14] = v5;
  v1[15] = *(_QWORD *)(v5 + 64);
  v1[16] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E72B70);
  v1[17] = sub_23F366578();
  sub_23F35D2E8(&qword_256E70760);
  v1[18] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F402F80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  _QWORD *v10;
  uint64_t (*v12)(void);
  uint64_t v13[11];

  v2 = v0[17];
  v1 = v0[18];
  v3 = v0[13];
  v4 = v0[14];
  v5 = v0[2];
  sub_23F61A6E4();
  v13[3] = (uint64_t)&type metadata for PlannerToolboxDelegate;
  v13[4] = sub_23F403ECC();
  PlannerToolboxDelegate.init()(v13);
  v13[8] = (uint64_t)&type metadata for FullPlannerToolboxDelegate;
  v13[9] = sub_23F403F08();
  v6 = sub_23F616E68();
  sub_23F3838D8(v1, v7, v8, v6);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[19] = v9;
  sub_23F362D94(v2, v5, v9);
  sub_23F36196C(v2, 0, 1, v3);
  v0[20] = sub_23F61A6D8();
  v12 = (uint64_t (*)(void))((int)*MEMORY[0x24BE55818] + MEMORY[0x24BE55818]);
  v10 = (_QWORD *)swift_task_alloc();
  v0[21] = v10;
  *v10 = v0;
  v10[1] = sub_23F403100;
  return v12();
}

uint64_t sub_23F403100(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  sub_23F406D10();
  sub_23F3B2010(v4);
  *(_QWORD *)(v2 + 176) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 184) = a1;
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F403158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  void (*v21)(_QWORD, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(unint64_t, unint64_t, uint64_t);
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v36;
  void (*v37)(_QWORD, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 152))(v2, *(_QWORD *)(v0 + 16), v3);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v6 + v5, v2, v3);
  sub_23F3FA05C(v1, (void (*)(uint64_t, uint64_t))sub_23F403F98);
  v8 = v7;
  swift_release();
  sub_23F362984();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + 80);
    v11 = v8 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v38 = *(_QWORD *)(v10 + 72);
    v39 = *(_QWORD *)(v0 + 40);
    v37 = *(void (**)(_QWORD, uint64_t, uint64_t))(v10 + 16);
    v36 = *MEMORY[0x24BE56D38];
    sub_23F383E5C();
    v12 = MEMORY[0x24BEE4AF8];
    do
    {
      v13 = *(_QWORD *)(v0 + 88);
      v14 = *(_QWORD *)(v0 + 72);
      v37(*(_QWORD *)(v0 + 96), v11, v14);
      sub_23F406D30();
      v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88))(v13, v14);
      v16 = *(_QWORD *)(v0 + 72);
      if (v15 == v36)
      {
        v17 = *(_QWORD *)(v0 + 56);
        v19 = *(_QWORD *)(v0 + 24);
        v18 = *(_QWORD *)(v0 + 32);
        (*(void (**)(_QWORD, uint64_t))(v10 + 96))(*(_QWORD *)(v0 + 88), v16);
        v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32);
        sub_23F406D30();
        v20(v19, v17, v18);
        sub_23F36196C(v19, 0, 1, v18);
        v21 = *(void (**)(_QWORD, uint64_t))(v10 + 8);
      }
      else
      {
        v23 = *(_QWORD *)(v0 + 24);
        v22 = *(_QWORD *)(v0 + 32);
        v21 = *(void (**)(_QWORD, uint64_t))(v10 + 8);
        v21(*(_QWORD *)(v0 + 88), v16);
        sub_23F36196C(v23, 1, 1, v22);
      }
      v25 = *(_QWORD *)(v0 + 24);
      v24 = *(_QWORD *)(v0 + 32);
      v21(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
      if (sub_23F36195C(v25, 1, v24) == 1)
      {
        sub_23F3625D8(*(_QWORD *)(v0 + 24), &qword_256E70238);
      }
      else
      {
        v26 = *(_QWORD *)(v0 + 64);
        v27 = *(_QWORD *)(v0 + 48);
        v28 = *(_QWORD *)(v0 + 32);
        v29 = *(void (**)(unint64_t, unint64_t, uint64_t))(v39 + 32);
        v29(v26, *(_QWORD *)(v0 + 24), v28);
        v29(v27, v26, v28);
        if ((sub_23F3B1CDC() & 1) == 0)
        {
          sub_23F406DC0();
          v12 = v33;
        }
        v30 = *(_QWORD *)(v12 + 16);
        if (v30 >= *(_QWORD *)(v12 + 24) >> 1)
        {
          sub_23F406DC0();
          v12 = v34;
        }
        v31 = *(_QWORD *)(v0 + 48);
        v32 = *(_QWORD *)(v0 + 32);
        *(_QWORD *)(v12 + 16) = v30 + 1;
        v29(v12+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v30, v31, v32);
      }
      v11 += v38;
      --v9;
    }
    while (v9);
    sub_23F384A80();
    swift_release();
  }
  else
  {
    swift_release();
    sub_23F3837B0();
    v12 = MEMORY[0x24BEE4AF8];
  }
  sub_23F406780();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
}

uint64_t sub_23F403474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t (*v12)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F3836F0();
  swift_release();
  sub_23F406780();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3843EC();
  return v12(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10, a11, a12);
}

uint64_t sub_23F4034DC(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, _OWORD *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v10;

  *(_QWORD *)(v7 + 520) = v6;
  *(_QWORD *)(v7 + 504) = a4;
  *(_QWORD *)(v7 + 512) = a6;
  *(_QWORD *)(v7 + 488) = a1;
  *(_QWORD *)(v7 + 496) = a3;
  *(_QWORD *)(v7 + 528) = type metadata accessor for FullPlannerPreferences();
  *(_QWORD *)(v7 + 536) = sub_23F366578();
  *(_BYTE *)(v7 + 578) = *a2;
  v10 = a5[1];
  *(_OWORD *)(v7 + 544) = *a5;
  *(_OWORD *)(v7 + 560) = v10;
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F403544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t (*v30)(void);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int16 v52;

  v1 = *(_QWORD *)(v0 + 520);
  if ((*(_BYTE *)(v0 + 578) & 1) == 0)
  {
    v19 = sub_23F40580C();
    v20 = *(_QWORD *)(v1 + *(int *)(v19 + 32));
    *(_QWORD *)(v0 + 352) = sub_23F617510();
    *(_QWORD *)(v0 + 360) = &protocol witness table for Tokenizer;
    *(_QWORD *)(v0 + 328) = v20;
    v21 = *(int *)(v19 + 24);
    v22 = qword_256E6EE90;
    swift_retain();
    if (v22 != -1)
      swift_once();
    v46 = v1 + v21;
    v23 = *(_QWORD *)(v0 + 536);
    v24 = sub_23F361498(*(_QWORD *)(v0 + 528), (uint64_t)qword_256E7FE90);
    sub_23F3C08CC();
    sub_23F38F530(v24, v23, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F35D2E8(&qword_256E6F5A0);
    sub_23F617C48();
    v43 = *(_QWORD *)(v0 + 472);
    v48 = *(_QWORD *)(v0 + 480);
    sub_23F3663AC(v23, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    if (qword_256E6F060 != -1)
      swift_once();
    v25 = qword_256E6F068;
    v41 = qword_256E77B18;
    sub_23F617BA0();
    if (v25 != -1)
      swift_once();
    v26 = *(_QWORD *)(v0 + 536);
    v27 = *(_QWORD *)algn_256E77B28;
    v36 = qword_256E77B20;
    v38 = *(_QWORD *)(v0 + 520);
    sub_23F40668C(v24, v26);
    sub_23F384B00();
    sub_23F35D2E8(&qword_256E6F5A8);
    sub_23F617C48();
    v28 = *(_BYTE *)(v0 + 576);
    sub_23F406684(v26);
    sub_23F40668C(v24, v26);
    sub_23F617C48();
    v29 = *(_BYTE *)(v0 + 577);
    sub_23F406684(v26);
    BYTE1(v34) = v29;
    LOBYTE(v34) = v28;
    static StandaloneGrammarGenerator.defaultGenerator(tokenizer:renderer:toolbox:rootRuleIdentifier:quotableStringIdentifier:staticTools:baseGrammar:printBuiltinSupported:progressiveDisclosureEnabled:)(v0 + 328, v46, v38, 0x6E6E616C705F6569, 0xEA00000000007265, v43, v48, v41, v36, v27, v34, v36, v38, v39, v41, v43, v0 + 577, v46, v48,
      v0 + 328,
      v0 + 16,
      v51,
      v52,
      SHIBYTE(v52));
    sub_23F384364();
    sub_23F362D18();
    sub_23F362984();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 328);
    static StandaloneGrammarGenerator.assistantSchemasForTools(tools:)();
    sub_23F384A00();
    sub_23F471124();
    sub_23F384120();
    StandaloneGrammarGenerator.generateGrammar(quotableStrings:tools:schemas:plannerGrammar:renderingState:)();
    sub_23F3668FC();
    sub_23F362984();
    sub_23F404FE0((uint64_t *)(v0 + 16));
    goto LABEL_17;
  }
  v2 = *(_QWORD *)(v1 + *(int *)(sub_23F40580C() + 32));
  *(_QWORD *)(v0 + 392) = sub_23F617510();
  *(_QWORD *)(v0 + 400) = &protocol witness table for Tokenizer;
  *(_QWORD *)(v0 + 368) = v2;
  v3 = qword_256E6F070;
  swift_retain();
  if (v3 != -1)
    swift_once();
  v4 = *(_QWORD *)algn_256E77B38;
  v50 = qword_256E77B30;
  v5 = qword_256E6EE90;
  sub_23F389CDC();
  if (v5 != -1)
    swift_once();
  v6 = *(_QWORD *)(v0 + 536);
  v7 = sub_23F361498(*(_QWORD *)(v0 + 528), (uint64_t)qword_256E7FE90);
  sub_23F3C08CC();
  sub_23F38F530(v7, v6, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F617C48();
  v9 = *(_QWORD *)(v0 + 456);
  v8 = *(_QWORD *)(v0 + 464);
  sub_23F3663AC(v6, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  if (v4)
  {
    *(_QWORD *)(v0 + 312) = &type metadata for QuotableStringGrammarConverter;
    *(_QWORD *)(v0 + 320) = &protocol witness table for QuotableStringGrammarConverter;
    v10 = swift_allocObject();
    *(_QWORD *)(v0 + 288) = v10;
    sub_23F382FC4(v0 + 368, v10 + 16);
    *(_BYTE *)(v10 + 56) = 1;
    *(_QWORD *)(v0 + 240) = v50;
    *(_QWORD *)(v0 + 248) = v4;
    *(_QWORD *)(v0 + 256) = 0;
    *(_QWORD *)(v0 + 264) = 0;
    *(_QWORD *)(v0 + 272) = v9;
    *(_QWORD *)(v0 + 280) = v8;
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 368);
    v11 = sub_23F3ECB90();
    HybridGrammarGenerator.generateGrammar(quotableStrings:renderingState:)(v11, v12, v13, v14, v15, v16, v17, v18, v32, v33, v34, v35, v37, v39, v40, v42, v44, v45, v47,
      v49);
    sub_23F404FAC((uint64_t *)(v0 + 240));
LABEL_17:
    swift_task_dealloc();
    v30 = (uint64_t (*)(void))sub_23F384760();
    return v30();
  }
  sub_23F404F4C();
  swift_allocError();
  swift_willThrow();
  sub_23F362984();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 368);
  swift_task_dealloc();
  v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_23F403A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F61B14C();
  sub_23F4F31F4();
  v1 = sub_23F3F9E98(v0);
  swift_bridgeObjectRelease();
  v2 = 0;
  if (*(_QWORD *)(v1 + 16) > 1uLL)
    v2 = *(_QWORD *)(v1 + 40);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_23F403AE0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x736C6F6F74 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F403B5C()
{
  sub_23F61CD30();
  sub_23F61CD3C();
  return sub_23F61CD60();
}

uint64_t sub_23F403B9C()
{
  return 0x736C6F6F74;
}

uint64_t sub_23F403BB4()
{
  sub_23F61CD30();
  sub_23F61CD3C();
  return sub_23F61CD60();
}

uint64_t sub_23F403BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F403AE0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F403C1C()
{
  sub_23F403FE4();
  return sub_23F61CDC0();
}

uint64_t sub_23F403C44()
{
  sub_23F403FE4();
  return sub_23F61CDCC();
}

void FullPlannerFeatureStoreTools.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F35D2E8(&qword_256E72B88);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  v6 = v5 - v4;
  sub_23F35EA9C(a1, a1[3]);
  sub_23F403FE4();
  sub_23F61CD90();
  sub_23F35D2E8(&qword_256E72B98);
  sub_23F404020(&qword_256E72BA0, &qword_256E72BA8, MEMORY[0x24BE57580], MEMORY[0x24BEE12A0]);
  sub_23F61CBE0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  sub_23F362870();
}

void FullPlannerFeatureStoreTools.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = sub_23F35D2E8(&qword_256E72BB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  v9 = v8 - v7;
  sub_23F35EA9C(a1, a1[3]);
  sub_23F403FE4();
  sub_23F61CD84();
  if (!v2)
  {
    sub_23F35D2E8(&qword_256E72B98);
    sub_23F404020(&qword_256E72BB8, &qword_256E72BC0, MEMORY[0x24BE57598], MEMORY[0x24BEE12D0]);
    sub_23F61CB44();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v10;
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
  sub_23F362870();
}

void sub_23F403EA4(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  FullPlannerFeatureStoreTools.init(from:)(a1, a2);
}

void sub_23F403EB8(_QWORD *a1)
{
  FullPlannerFeatureStoreTools.encode(to:)(a1);
}

unint64_t sub_23F403ECC()
{
  unint64_t result;

  result = qword_256E72B78;
  if (!qword_256E72B78)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlannerToolboxDelegate, &type metadata for PlannerToolboxDelegate);
    atomic_store(result, (unint64_t *)&qword_256E72B78);
  }
  return result;
}

unint64_t sub_23F403F08()
{
  unint64_t result;

  result = qword_256E72B80;
  if (!qword_256E72B80)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for FullPlannerToolboxDelegate, &type metadata for FullPlannerToolboxDelegate);
    atomic_store(result, (unint64_t *)&qword_256E72B80);
  }
  return result;
}

uint64_t sub_23F403F44()
{
  uint64_t v0;

  v0 = sub_23F384B34();
  sub_23F384274(*(_QWORD *)(v0 - 8));
  sub_23F3840BC();
  return swift_deallocObject();
}

void sub_23F403F98()
{
  sub_23F384B34();
  sub_23F61B314();
  sub_23F362B80();
}

unint64_t sub_23F403FE4()
{
  unint64_t result;

  result = qword_256E72B90;
  if (!qword_256E72B90)
  {
    result = MEMORY[0x242670A44](&unk_23F620860, &type metadata for FullPlannerFeatureStoreTools.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E72B90);
  }
  return result;
}

uint64_t sub_23F404020(unint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v8 = sub_23F35EB74(&qword_256E72B98);
    sub_23F3B121C(a2, (void (*)(uint64_t))MEMORY[0x24BE57570]);
    v10 = v9;
    result = MEMORY[0x242670A44](a4, v8, &v10);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FullPlannerFeatureStoreTools()
{
  return &type metadata for FullPlannerFeatureStoreTools;
}

uint64_t storeEnumTagSinglePayload for FullPlannerFeatureStoreTools.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F4040F4 + 4 * byte_23F620720[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F404114 + 4 * byte_23F620725[v4]))();
}

_BYTE *sub_23F4040F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F404114(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F40411C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F404124(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F40412C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F404134(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FullPlannerFeatureStoreTools.CodingKeys()
{
  return &type metadata for FullPlannerFeatureStoreTools.CodingKeys;
}

unint64_t sub_23F404154()
{
  unint64_t result;

  result = qword_256E72BC8;
  if (!qword_256E72BC8)
  {
    result = MEMORY[0x242670A44](&unk_23F620838, &type metadata for FullPlannerFeatureStoreTools.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E72BC8);
  }
  return result;
}

unint64_t sub_23F404194()
{
  unint64_t result;

  result = qword_256E72BD0;
  if (!qword_256E72BD0)
  {
    result = MEMORY[0x242670A44](&unk_23F6207A8, &type metadata for FullPlannerFeatureStoreTools.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E72BD0);
  }
  return result;
}

unint64_t sub_23F4041D4()
{
  unint64_t result;

  result = qword_256E72BD8;
  if (!qword_256E72BD8)
  {
    result = MEMORY[0x242670A44](&unk_23F6207D0, &type metadata for FullPlannerFeatureStoreTools.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E72BD8);
  }
  return result;
}

char *sub_23F404210(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23F61B32C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *(_QWORD *)&a2[v8 + 24];
    if (v11)
    {
      v12 = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 3) = v11;
      *((_QWORD *)v9 + 4) = v12;
      (**(void (***)(char *, char *))(v11 - 8))(v9, v10);
    }
    else
    {
      v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    }
    v15 = v9 + 40;
    v16 = v10 + 40;
    v17 = *((_QWORD *)v10 + 8);
    if (v17)
    {
      v18 = *((_QWORD *)v10 + 9);
      *((_QWORD *)v9 + 8) = v17;
      *((_QWORD *)v9 + 9) = v18;
      (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v15, v16);
    }
    else
    {
      v19 = *(_OWORD *)(v10 + 56);
      *v15 = *v16;
      *(_OWORD *)(v9 + 56) = v19;
      *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
    }
    v20 = *(_OWORD *)(v10 + 104);
    *(_OWORD *)(v9 + 104) = v20;
    (**(void (***)(uint64_t, uint64_t))(v20 - 8))((uint64_t)(v9 + 80), (uint64_t)(v10 + 80));
    v21 = *((_OWORD *)v10 + 9);
    *((_OWORD *)v9 + 9) = v21;
    (**(void (***)(uint64_t, uint64_t))(v21 - 8))((uint64_t)(v9 + 120), (uint64_t)(v10 + 120));
    v22 = *(_OWORD *)(v10 + 184);
    *(_OWORD *)(v9 + 184) = v22;
    (**(void (***)(uint64_t, uint64_t))(v22 - 8))((uint64_t)(v9 + 160), (uint64_t)(v10 + 160));
    v23 = *((_OWORD *)v10 + 14);
    *((_OWORD *)v9 + 14) = v23;
    (**(void (***)(uint64_t, uint64_t))(v23 - 8))((uint64_t)(v9 + 200), (uint64_t)(v10 + 200));
    v24 = *((_QWORD *)v10 + 33);
    v25 = *((_QWORD *)v10 + 34);
    *((_QWORD *)v9 + 33) = v24;
    *((_QWORD *)v9 + 34) = v25;
    (**(void (***)(uint64_t, uint64_t))(v24 - 8))((uint64_t)(v9 + 240), (uint64_t)(v10 + 240));
    v26 = *((_OWORD *)v10 + 19);
    *((_OWORD *)v9 + 19) = v26;
    (**(void (***)(uint64_t, uint64_t))(v26 - 8))((uint64_t)(v9 + 280), (uint64_t)(v10 + 280));
    v27 = *((_QWORD *)v10 + 43);
    v28 = *((_QWORD *)v10 + 44);
    *((_QWORD *)v9 + 43) = v27;
    *((_QWORD *)v9 + 44) = v28;
    (**(void (***)(uint64_t, uint64_t))(v27 - 8))((uint64_t)(v9 + 320), (uint64_t)(v10 + 320));
    v29 = a3[6];
    v30 = &a1[v29];
    v31 = &a2[v29];
    v32 = *(_OWORD *)&a2[v29 + 24];
    *(_OWORD *)&a1[v29 + 24] = v32;
    (**(void (***)(char *, char *))(v32 - 8))(&a1[v29], &a2[v29]);
    v33 = *((_OWORD *)v31 + 4);
    *((_OWORD *)v30 + 4) = v33;
    (**(void (***)(uint64_t, uint64_t))(v33 - 8))((uint64_t)(v30 + 40), (uint64_t)(v31 + 40));
    v34 = *(_OWORD *)(v31 + 104);
    *(_OWORD *)(v30 + 104) = v34;
    (**(void (***)(uint64_t, uint64_t))(v34 - 8))((uint64_t)(v30 + 80), (uint64_t)(v31 + 80));
    v35 = *((_OWORD *)v31 + 9);
    *((_OWORD *)v30 + 9) = v35;
    (**(void (***)(uint64_t, uint64_t))(v35 - 8))((uint64_t)(v30 + 120), (uint64_t)(v31 + 120));
    v36 = *(_OWORD *)(v31 + 184);
    *(_OWORD *)(v30 + 184) = v36;
    (**(void (***)(uint64_t, uint64_t))(v36 - 8))((uint64_t)(v30 + 160), (uint64_t)(v31 + 160));
    v37 = a3[7];
    v38 = *(_OWORD *)&a2[v37 + 24];
    *(_OWORD *)&a1[v37 + 24] = v38;
    (**(void (***)(void))(v38 - 8))();
    *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  }
  swift_retain();
  return a1;
}

uint64_t sub_23F4044C4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  if (*(_QWORD *)(v5 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[5]);
  if (*(_QWORD *)(v5 + 64))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 120);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 160);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 200);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 240);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 280);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 320);
  v6 = a1 + a2[6];
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v6);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v6 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v6 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v6 + 120);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v6 + 160);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[7]);
  return swift_release();
}

uint64_t sub_23F4045AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 24);
  if (v10)
  {
    v11 = *(_QWORD *)(v9 + 32);
    *(_QWORD *)(v8 + 24) = v10;
    *(_QWORD *)(v8 + 32) = v11;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v8, v9);
  }
  else
  {
    v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v12;
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  }
  v13 = (_OWORD *)(v8 + 40);
  v14 = (_OWORD *)(v9 + 40);
  v15 = *(_QWORD *)(v9 + 64);
  if (v15)
  {
    v16 = *(_QWORD *)(v9 + 72);
    *(_QWORD *)(v8 + 64) = v15;
    *(_QWORD *)(v8 + 72) = v16;
    (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v13, v14);
  }
  else
  {
    v17 = *(_OWORD *)(v9 + 56);
    *v13 = *v14;
    *(_OWORD *)(v8 + 56) = v17;
    *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  }
  v18 = *(_OWORD *)(v9 + 104);
  *(_OWORD *)(v8 + 104) = v18;
  (**(void (***)(uint64_t, uint64_t))(v18 - 8))(v8 + 80, v9 + 80);
  v19 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 144) = v19;
  (**(void (***)(uint64_t, uint64_t))(v19 - 8))(v8 + 120, v9 + 120);
  v20 = *(_OWORD *)(v9 + 184);
  *(_OWORD *)(v8 + 184) = v20;
  (**(void (***)(uint64_t, uint64_t))(v20 - 8))(v8 + 160, v9 + 160);
  v21 = *(_OWORD *)(v9 + 224);
  *(_OWORD *)(v8 + 224) = v21;
  (**(void (***)(uint64_t, uint64_t))(v21 - 8))(v8 + 200, v9 + 200);
  v22 = *(_QWORD *)(v9 + 264);
  v23 = *(_QWORD *)(v9 + 272);
  *(_QWORD *)(v8 + 264) = v22;
  *(_QWORD *)(v8 + 272) = v23;
  (**(void (***)(uint64_t, uint64_t))(v22 - 8))(v8 + 240, v9 + 240);
  v24 = *(_OWORD *)(v9 + 304);
  *(_OWORD *)(v8 + 304) = v24;
  (**(void (***)(uint64_t, uint64_t))(v24 - 8))(v8 + 280, v9 + 280);
  v25 = *(_QWORD *)(v9 + 344);
  v26 = *(_QWORD *)(v9 + 352);
  *(_QWORD *)(v8 + 344) = v25;
  *(_QWORD *)(v8 + 352) = v26;
  (**(void (***)(uint64_t, uint64_t))(v25 - 8))(v8 + 320, v9 + 320);
  v27 = a3[6];
  v28 = (_OWORD *)(a1 + v27);
  v29 = (_OWORD *)(a2 + v27);
  v30 = *(_OWORD *)(a2 + v27 + 24);
  *(_OWORD *)(a1 + v27 + 24) = v30;
  (**(void (***)(uint64_t, uint64_t))(v30 - 8))(a1 + v27, a2 + v27);
  v31 = v29[4];
  v28[4] = v31;
  (**(void (***)(uint64_t, uint64_t))(v31 - 8))((uint64_t)v28 + 40, (uint64_t)v29 + 40);
  v32 = *(_OWORD *)((char *)v29 + 104);
  *(_OWORD *)((char *)v28 + 104) = v32;
  (**(void (***)(uint64_t, uint64_t))(v32 - 8))((uint64_t)(v28 + 5), (uint64_t)(v29 + 5));
  v33 = v29[9];
  v28[9] = v33;
  (**(void (***)(uint64_t, uint64_t))(v33 - 8))((uint64_t)v28 + 120, (uint64_t)v29 + 120);
  v34 = *(_OWORD *)((char *)v29 + 184);
  *(_OWORD *)((char *)v28 + 184) = v34;
  (**(void (***)(uint64_t, uint64_t))(v34 - 8))((uint64_t)(v28 + 10), (uint64_t)(v29 + 10));
  v35 = a3[7];
  v36 = *(_OWORD *)(a2 + v35 + 24);
  *(_OWORD *)(a1 + v35 + 24) = v36;
  (**(void (***)(void))(v36 - 8))();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  return a1;
}

uint64_t sub_23F404838(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 24);
  if (*(_QWORD *)(a1 + v7 + 24))
  {
    if (v10)
    {
      sub_23F361AD0((uint64_t *)v8, (uint64_t *)v9);
      goto LABEL_8;
    }
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8);
  }
  else if (v10)
  {
    *(_QWORD *)(v8 + 24) = v10;
    *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
    (**(void (***)(uint64_t, __int128 *))(v10 - 8))(v8, v9);
    goto LABEL_8;
  }
  v11 = *v9;
  v12 = v9[1];
  *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
  *(_OWORD *)v8 = v11;
  *(_OWORD *)(v8 + 16) = v12;
LABEL_8:
  v13 = *((_QWORD *)v9 + 8);
  if (!*(_QWORD *)(v8 + 64))
  {
    if (v13)
    {
      *(_QWORD *)(v8 + 64) = v13;
      *(_QWORD *)(v8 + 72) = *((_QWORD *)v9 + 9);
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v8 + 40, (uint64_t)v9 + 40);
      goto LABEL_15;
    }
LABEL_14:
    v14 = *(__int128 *)((char *)v9 + 40);
    v15 = *(__int128 *)((char *)v9 + 56);
    *(_QWORD *)(v8 + 72) = *((_QWORD *)v9 + 9);
    *(_OWORD *)(v8 + 40) = v14;
    *(_OWORD *)(v8 + 56) = v15;
    goto LABEL_15;
  }
  if (!v13)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 40);
    goto LABEL_14;
  }
  sub_23F361AD0((uint64_t *)(v8 + 40), (uint64_t *)v9 + 5);
LABEL_15:
  sub_23F361AD0((uint64_t *)(v8 + 80), (uint64_t *)v9 + 10);
  sub_23F361AD0((uint64_t *)(v8 + 120), (uint64_t *)v9 + 15);
  sub_23F361AD0((uint64_t *)(v8 + 160), (uint64_t *)v9 + 20);
  sub_23F361AD0((uint64_t *)(v8 + 200), (uint64_t *)v9 + 25);
  sub_23F361AD0((uint64_t *)(v8 + 240), (uint64_t *)v9 + 30);
  sub_23F361AD0((uint64_t *)(v8 + 280), (uint64_t *)v9 + 35);
  sub_23F361AD0((uint64_t *)(v8 + 320), (uint64_t *)v9 + 40);
  v16 = a3[6];
  v17 = (uint64_t *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  sub_23F361AD0((uint64_t *)(a1 + v16), (uint64_t *)(a2 + v16));
  sub_23F361AD0(v17 + 5, v18 + 5);
  sub_23F361AD0(v17 + 10, v18 + 10);
  sub_23F361AD0(v17 + 15, v18 + 15);
  sub_23F361AD0(v17 + 20, v18 + 20);
  sub_23F361AD0((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23F404A30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  memcpy((void *)(a1 + a3[5]), (const void *)(a2 + a3[5]), 0x168uLL);
  memcpy((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), 0xC8uLL);
  v7 = a3[7];
  v8 = a3[8];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_23F404ACC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  if (*(_QWORD *)(v8 + 64))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 40);
  v11 = *(_OWORD *)(v9 + 56);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
  *(_OWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 80);
  v12 = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 96) = v12;
  *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 120);
  *(_OWORD *)(v8 + 120) = *(_OWORD *)(v9 + 120);
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v9 + 152);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 160);
  v13 = *(_OWORD *)(v9 + 176);
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(_OWORD *)(v8 + 176) = v13;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v9 + 192);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 200);
  *(_OWORD *)(v8 + 200) = *(_OWORD *)(v9 + 200);
  *(_OWORD *)(v8 + 216) = *(_OWORD *)(v9 + 216);
  *(_QWORD *)(v8 + 232) = *(_QWORD *)(v9 + 232);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 240);
  v14 = *(_OWORD *)(v9 + 256);
  *(_OWORD *)(v8 + 240) = *(_OWORD *)(v9 + 240);
  *(_OWORD *)(v8 + 256) = v14;
  *(_QWORD *)(v8 + 272) = *(_QWORD *)(v9 + 272);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 280);
  v15 = *(_OWORD *)(v9 + 296);
  *(_OWORD *)(v8 + 280) = *(_OWORD *)(v9 + 280);
  *(_OWORD *)(v8 + 296) = v15;
  *(_QWORD *)(v8 + 312) = *(_QWORD *)(v9 + 312);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 320);
  v16 = *(_OWORD *)(v9 + 336);
  *(_OWORD *)(v8 + 320) = *(_OWORD *)(v9 + 320);
  *(_OWORD *)(v8 + 336) = v16;
  *(_QWORD *)(v8 + 352) = *(_QWORD *)(v9 + 352);
  v17 = a3[6];
  v18 = a1 + v17;
  v19 = a2 + v17;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v17);
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v18 + 40);
  *(_OWORD *)(v18 + 40) = *(_OWORD *)(v19 + 40);
  *(_OWORD *)(v18 + 56) = *(_OWORD *)(v19 + 56);
  *(_QWORD *)(v18 + 72) = *(_QWORD *)(v19 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v18 + 80);
  v21 = *(_OWORD *)(v19 + 96);
  *(_OWORD *)(v18 + 80) = *(_OWORD *)(v19 + 80);
  *(_OWORD *)(v18 + 96) = v21;
  *(_QWORD *)(v18 + 112) = *(_QWORD *)(v19 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v18 + 120);
  *(_OWORD *)(v18 + 120) = *(_OWORD *)(v19 + 120);
  *(_OWORD *)(v18 + 136) = *(_OWORD *)(v19 + 136);
  *(_QWORD *)(v18 + 152) = *(_QWORD *)(v19 + 152);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v18 + 160);
  v22 = *(_OWORD *)(v19 + 176);
  *(_OWORD *)(v18 + 160) = *(_OWORD *)(v19 + 160);
  *(_OWORD *)(v18 + 176) = v22;
  *(_QWORD *)(v18 + 192) = *(_QWORD *)(v19 + 192);
  v23 = a3[7];
  v24 = a1 + v23;
  v25 = a2 + v23;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v23);
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t sub_23F404D0C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F404D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F384B34();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 104);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F404D90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F404D9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_23F384B34();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23F36196C(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 104) = (a2 - 1);
    sub_23F362B80();
  }
}

uint64_t type metadata accessor for ConversationParser()
{
  uint64_t result;

  result = qword_256E72C38;
  if (!qword_256E72C38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F404E40()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23F404ED4()
{
  unint64_t result;

  result = qword_256E72C88;
  if (!qword_256E72C88)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for FullPlannerFeatureStoreTools, &type metadata for FullPlannerFeatureStoreTools);
    atomic_store(result, (unint64_t *)&qword_256E72C88);
  }
  return result;
}

unint64_t sub_23F404F10()
{
  unint64_t result;

  result = qword_256E72C90;
  if (!qword_256E72C90)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for FullPlannerFeatureStoreTools, &type metadata for FullPlannerFeatureStoreTools);
    atomic_store(result, &qword_256E72C90);
  }
  return result;
}

unint64_t sub_23F404F4C()
{
  unint64_t result;

  result = qword_256E72CA8;
  if (!qword_256E72CA8)
  {
    result = MEMORY[0x242670A44](&unk_23F62B688, &unk_250FDAF18);
    atomic_store(result, (unint64_t *)&qword_256E72CA8);
  }
  return result;
}

uint64_t sub_23F404F88()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t *sub_23F404FAC(uint64_t *a1)
{
  destroy for HybridGrammarGenerator(a1);
  return a1;
}

uint64_t *sub_23F404FE0(uint64_t *a1)
{
  destroy for StandaloneGrammarGenerator(a1);
  return a1;
}

uint64_t sub_23F405014(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v5 = (_QWORD *)((char *)v11 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_23F51394C(0, v4, v5);
    sub_23F40517C(v5, v4, v2);
    v7 = v6;
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v8 = (uint64_t *)swift_slowAlloc();
    sub_23F51394C(0, v4, v8);
    sub_23F40517C(v8, v4, v2);
    v7 = v9;
    swift_release();
    MEMORY[0x242670B70](v8, -1, -1);
  }
  return v7;
}

void sub_23F40517C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_20;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_19:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_20:
    if ((*(_QWORD *)(*(_QWORD *)(a3 + 48) + 32 * v14 + 8) ^ *(_QWORD *)(*(_QWORD *)(a3 + 48) + 32 * v14)) >= 0x4000)
    {
      *(uint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_23F4807E0(a1, a2, v6, a3);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_23F4052F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for UserTurnItem(0);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v7 = v6 - v5;
  sub_23F376970();
  v8 = *(_QWORD *)(*a2 + 16);
  sub_23F376B68(v8);
  sub_23F38F530(a1, v7, type metadata accessor for UserTurnItem);
  return sub_23F4053CC(v8, v7, a2);
}

uint64_t sub_23F405390(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_23F4054A4(a1, a2, a3, type metadata accessor for PlanGenerationAssistantTurnItem, (uint64_t)&off_250FD4A60);
}

uint64_t sub_23F4053A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_23F4054A4(a1, a2, a3, type metadata accessor for AssistantTurnItem, (uint64_t)&off_250FD4A60);
}

uint64_t sub_23F4053B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_23F4054A4(a1, a2, a3, type metadata accessor for EvaluationResultTurnItem, (uint64_t)&off_250FD4990);
}

uint64_t sub_23F4053CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;

  v10 = type metadata accessor for UserTurnItem(0);
  v11 = &off_250FD4AA0;
  v6 = sub_23F36145C((uint64_t *)&v9);
  sub_23F40550C(a2, (uint64_t)v6);
  v7 = *a3;
  *(_QWORD *)(v7 + 16) = a1 + 1;
  return sub_23F362678(&v9, v7 + 40 * a1 + 32);
}

uint64_t sub_23F405448(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E72CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F405490(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_23F4054A4(a1, a2, a3, type metadata accessor for ExternalAgentResponseTurnItem, (uint64_t)&off_250FD4A00);
}

uint64_t sub_23F4054A4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v12 = a4(0);
  v13 = a5;
  *(_QWORD *)&v11 = a2;
  v9 = *a3;
  *(_QWORD *)(v9 + 16) = a1 + 1;
  return sub_23F362678(&v11, v9 + 40 * a1 + 32);
}

uint64_t sub_23F40550C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UserTurnItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F405550@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 - 88) = a1;
  v3 = v1[45];
  *(_QWORD *)(v2 - 128) = v1[48];
  *(_QWORD *)(v2 - 120) = v3;
  v4 = v1[39];
  *(_QWORD *)(v2 - 112) = v1[42];
  *(_QWORD *)(v2 - 104) = v4;
  *(_QWORD *)(v2 - 96) = v1[38];
  return swift_task_dealloc();
}

uint64_t sub_23F405608@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t sub_23F405618()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[52];
  *(_QWORD *)(v1 - 176) = v0[53];
  *(_QWORD *)(v1 - 168) = v2;
  v3 = v0[48];
  *(_QWORD *)(v1 - 160) = v0[51];
  *(_QWORD *)(v1 - 152) = v3;
  v4 = v0[42];
  *(_QWORD *)(v1 - 144) = v0[45];
  *(_QWORD *)(v1 - 136) = v4;
  v5 = v0[38];
  *(_QWORD *)(v1 - 128) = v0[39];
  *(_QWORD *)(v1 - 120) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4056D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[52];
  *(_QWORD *)(v1 - 176) = v0[53];
  *(_QWORD *)(v1 - 168) = v2;
  v3 = v0[48];
  *(_QWORD *)(v1 - 160) = v0[51];
  *(_QWORD *)(v1 - 152) = v3;
  v4 = v0[42];
  *(_QWORD *)(v1 - 144) = v0[45];
  *(_QWORD *)(v1 - 136) = v4;
  v5 = v0[38];
  *(_QWORD *)(v1 - 128) = v0[39];
  *(_QWORD *)(v1 - 120) = v5;
  return swift_task_dealloc();
}

uint64_t sub_23F405784()
{
  return swift_allocObject();
}

uint64_t sub_23F4057A8@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  uint64_t v1;

  return a1(v1);
}

void sub_23F4057B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[99];
  *(_QWORD *)(v1 - 152) = v0[94];
  *(_QWORD *)(v1 - 144) = v0[93];
  *(_QWORD *)(v1 - 136) = v2;
  v0[25] = v0[77];
}

uint64_t sub_23F4057E4()
{
  return swift_allocObject();
}

uint64_t sub_23F40580C()
{
  return type metadata accessor for ConversationParser();
}

void sub_23F405814()
{
  uint64_t v0;
  _QWORD *v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v6 - 128);
  sub_23F362678(v2, v0 + 40 * v4 + 32);
  *v1 = v0;
  sub_23F3663AC(v3, v5);
}

uint64_t sub_23F405848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = *(_QWORD *)(v1 + 296);
  *(_QWORD *)(v2 - 152) = *(_QWORD *)(v1 + 288);
  *(_QWORD *)(v2 - 144) = v0;
  return swift_slowAlloc();
}

uint64_t sub_23F405864()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[51];
  *(_QWORD *)(v1 - 168) = v0[52];
  *(_QWORD *)(v1 - 160) = v2;
  v3 = v0[45];
  *(_QWORD *)(v1 - 152) = v0[48];
  *(_QWORD *)(v1 - 144) = v3;
  v4 = v0[39];
  *(_QWORD *)(v1 - 136) = v0[42];
  *(_QWORD *)(v1 - 128) = v4;
  *(_QWORD *)(v1 - 120) = v0[38];
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F405920(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_23F40592C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 680);
}

uint64_t sub_23F4059A8()
{
  return type metadata accessor for StatementSegment(0);
}

uint64_t sub_23F4059B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + v1);
  *v5 = *(_QWORD *)(v4 - 120);
  v5[1] = v3;
  v5[2] = v0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F4059D4()
{
  return sub_23F619088();
}

uint64_t sub_23F4059F4()
{
  return sub_23F619088();
}

void sub_23F405A14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[51];
  *(_QWORD *)(v1 - 168) = v0[52];
  *(_QWORD *)(v1 - 160) = v2;
  v3 = v0[45];
  *(_QWORD *)(v1 - 152) = v0[48];
  *(_QWORD *)(v1 - 144) = v3;
  v4 = v0[39];
  *(_QWORD *)(v1 - 136) = v0[42];
  *(_QWORD *)(v1 - 128) = v4;
  *(_QWORD *)(v1 - 120) = v0[38];
}

uint64_t sub_23F405AA8()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (char *)v0[103];
  v2 = v0[100];
  v3 = v0[99];
  v4 = v0[94];
  v5 = v0[93];
  v0[109] = *(_QWORD *)v1;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v3, &v1[*(int *)(v2 + 48)], v5);
}

uint64_t sub_23F405AF0()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (char *)v0[103];
  v2 = v0[100];
  v3 = v0[99];
  v4 = v0[94];
  v5 = v0[93];
  v0[109] = *(_QWORD *)v1;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v3, &v1[*(int *)(v2 + 48)], v5);
}

void sub_23F405B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _QWORD *a15)
{
  sub_23F35EA9C(a15, a2);
  JUMPOUT(0x24266DFA8);
}

uint64_t sub_23F405B68()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 672);
}

void sub_23F405B8C()
{
  sub_23F377800();
}

void sub_23F405BA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[48];
  *(_QWORD *)(v1 - 168) = v0[51];
  *(_QWORD *)(v1 - 160) = v2;
  v3 = v0[42];
  *(_QWORD *)(v1 - 152) = v0[45];
  *(_QWORD *)(v1 - 144) = v3;
}

uint64_t sub_23F405C24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 936) = a1;
  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 360);
}

uint64_t sub_23F405C44@<X0>(uint64_t a1@<X8>)
{
  sub_23F35EA9C((_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 104));
  return sub_23F61A8B8();
}

uint64_t sub_23F405C68(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(v1, 1, a1);
}

uint64_t sub_23F405C90(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(v1, 1, a1);
}

void sub_23F405CB8()
{
  sub_23F377800();
}

void sub_23F405CC4()
{
  sub_23F377800();
}

void sub_23F405CDC()
{
  sub_23F377800();
}

void sub_23F405CF4()
{
  sub_23F377800();
}

void sub_23F405D0C()
{
  sub_23F377800();
}

uint64_t sub_23F405D24()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 160) + 8))(*(_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 152));
}

uint64_t sub_23F405D34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 - 120) = v2;
  v4 = v1[67];
  v5 = v1[65];
  v6 = v1[62];
  *(_QWORD *)(v3 - 136) = v1[63];
  *(_QWORD *)(v3 - 128) = v6;
  v7 = v1[33];
  *(_QWORD *)(v3 - 152) = v1[34];
  *(_QWORD *)(v3 - 144) = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 168))(v4, v0, v5);
}

uint64_t sub_23F405D68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 952) = a1;
  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 336);
}

uint64_t sub_23F405D84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_23F405DA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 488);
}

uint64_t sub_23F405DBC(uint64_t a1)
{
  uint64_t v1;

  sub_23F36196C(a1, 0, 1, v1);
  return sub_23F616FF4();
}

_QWORD *sub_23F405DDC(uint64_t a1)
{
  uint64_t v1;

  return sub_23F35EA9C((_QWORD *)(v1 + *(int *)(a1 + 20) + 160), *(_QWORD *)(v1 + *(int *)(a1 + 20) + 184));
}

_QWORD *sub_23F405E00(uint64_t a1)
{
  uint64_t v1;

  return sub_23F35EA9C((_QWORD *)(v1 + *(int *)(a1 + 20) + 280), *(_QWORD *)(v1 + *(int *)(a1 + 20) + 304));
}

uint64_t sub_23F405E24@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_23F405E30()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F405E40()
{
  uint64_t v0;

  return sub_23F405448(*(_QWORD *)(v0 + 816), *(_QWORD *)(v0 + 824));
}

void sub_23F405E54(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F37AE00(0xD00000000000003CLL, a1 | 0x8000000000000000, (uint64_t *)(v1 - 112));
}

_QWORD *sub_23F405E68(uint64_t a1)
{
  uint64_t v1;

  return sub_23F35EA9C((_QWORD *)(v1 + *(int *)(a1 + 20) + 320), *(_QWORD *)(v1 + *(int *)(a1 + 20) + 344));
}

uint64_t sub_23F405E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v5 = (_QWORD *)(v0 + v4);
  *v5 = v2;
  v5[1] = v3;
  v5[2] = v1;
  return swift_storeEnumTagMultiPayload();
}

void sub_23F405EA8()
{
  sub_23F471B2C();
}

uint64_t sub_23F405EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int128 a23)
{
  *(_OWORD *)(a1 + 16) = a23;
  return sub_23F617BA0();
}

uint64_t sub_23F405ED0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36196C(v1, 0, 1, v0);
}

uint64_t sub_23F405EE4(__int128 *a1, uint64_t a2)
{
  sub_23F362678(a1, a2);
  return swift_release();
}

void sub_23F405EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v0 + 528);
  *(_QWORD *)(v2 - 160) = v1 + 40;
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v2 - 176) = v4;
  *(_QWORD *)(v2 - 168) = v5;
}

uint64_t sub_23F405F28()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 464);
}

uint64_t sub_23F405F40()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 408);
}

uint64_t sub_23F405F58(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F405F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F408DF4(a1, a2, a3);
}

uint64_t sub_23F405F90(uint64_t a1, uint64_t a2)
{
  return sub_23F3ED108(a1, a2);
}

uint64_t sub_23F405FAC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_23F3B2A1C(a1, a2, a3, a4);
}

uint64_t sub_23F405FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F40A3B4(a1, a2, a3);
}

uint64_t sub_23F405FE4(uint64_t a1, char a2, uint64_t a3)
{
  return sub_23F3CDC94(a1, a2, a3);
}

uint64_t sub_23F406000()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;

  *(_BYTE *)(v1 + v2[5]) = 2;
  *(_BYTE *)(v1 + v2[6]) = 2;
  *(_QWORD *)(v1 + v2[7]) = v0;
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_23F406028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _QWORD *a14)
{
  sub_23F35EA9C(a14, a2);
  JUMPOUT(0x24266DFD8);
}

uint64_t sub_23F406044(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F406060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F408DF4(a1, a2, a3);
}

uint64_t sub_23F40607C(uint64_t a1, uint64_t a2)
{
  return sub_23F3ED108(a1, a2);
}

uint64_t sub_23F406098(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_23F3B2A1C(a1, a2, a3, a4);
}

uint64_t sub_23F4060B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F40A3B4(a1, a2, a3);
}

uint64_t sub_23F4060D0(uint64_t a1, char a2, uint64_t a3)
{
  return sub_23F3CDC94(a1, a2, a3);
}

uint64_t sub_23F4060EC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F406114@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v1[94];
  return (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v3 + 16))(v1[101] + *(int *)(v1[100] + 48), a1+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v2, v1[93]);
}

uint64_t sub_23F40615C()
{
  uint64_t v0;

  return sub_23F36196C(*(_QWORD *)(v0 + 816), 1, 1, *(_QWORD *)(v0 + 800));
}

unint64_t sub_23F406180()
{
  return sub_23F382B28();
}

void sub_23F406188(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  sub_23F35EA9C((_QWORD *)(v3 + *(int *)(a1 + 20) + 80), *(_QWORD *)(v3 + *(int *)(a1 + 20) + 104));
  sub_23F407CBC(v1, v2);
}

__n128 sub_23F4061B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  _DWORD *v30;
  uint64_t v31;
  __n128 result;

  *(_QWORD *)(v31 - 168) = a1;
  *(_QWORD *)(v31 - 112) = a1;
  *v30 = a27;
  sub_23F37AE00(0xD00000000000003CLL, a30, (uint64_t *)(v31 - 112));
  return result;
}

uint64_t sub_23F4061DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t *sub_23F4061EC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t *a15)
{
  uint64_t v15;

  *(_QWORD *)(v15 + 208) = a1;
  return sub_23F36145C(a15);
}

unsigned __int16 sub_23F4061FC@<H0>(unsigned int a1@<W0>)
{
  int32x4_t *v1;

  return vmaxv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_s32(vdupq_n_s32(a1), v1[71])), 0xFuLL)));
}

uint64_t sub_23F406224()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 280) + *(int *)(v0 + 1152) + 40;
}

uint64_t sub_23F40623C()
{
  return sub_23F617F24();
}

uint64_t sub_23F40624C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void sub_23F40625C()
{
  sub_23F471B2C();
}

uint64_t sub_23F40626C()
{
  return sub_23F617F24();
}

uint64_t sub_23F40627C()
{
  uint64_t v0;

  return sub_23F3F3D0C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_23F40628C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 136) + 8))(v0, *(_QWORD *)(v1 - 128));
}

void sub_23F40629C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F35EA9C(v1, v1[3]);
  sub_23F39C9F0(v2, v0, *(uint64_t **)(v3 - 152));
}

uint64_t sub_23F4062C8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F4062D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(int *)(a1 + 20);
  *(_DWORD *)(v1 + 1152) = v3;
  return v2 + v3;
}

void sub_23F4062E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  sub_23F35EA9C((_QWORD *)(v3 + *(int *)(a1 + 20) + 80), *(_QWORD *)(v3 + *(int *)(a1 + 20) + 104));
  sub_23F407CBC(v1, v2);
}

uint64_t sub_23F406314(uint64_t a1)
{
  uint64_t v1;

  sub_23F35EA9C((_QWORD *)(v1 + *(int *)(a1 + 20) + 80), *(_QWORD *)(v1 + *(int *)(a1 + 20) + 104));
  return sub_23F61A8B8();
}

uint64_t sub_23F406340(uint64_t a1)
{
  uint64_t v1;

  sub_23F35EA9C((_QWORD *)(v1 + *(int *)(a1 + 20) + 80), *(_QWORD *)(v1 + *(int *)(a1 + 20) + 104));
  return sub_23F61A8B8();
}

uint64_t sub_23F40636C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

unsigned __int16 sub_23F406374@<H0>(unsigned int a1@<W0>)
{
  int32x4_t *v1;

  return vmaxv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_s32(vdupq_n_s32(a1), v1[71])), 0xFuLL)));
}

uint64_t sub_23F4063D8()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F4063EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 152) + 8))(*(_QWORD *)(v0 - 136), *(_QWORD *)(v0 - 144));
}

uint64_t sub_23F4063FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23F406410(uint64_t a1)
{
  uint64_t v1;

  sub_23F35EA9C((_QWORD *)(v1 + *(int *)(a1 + 20) + 120), *(_QWORD *)(v1 + *(int *)(a1 + 20) + 144));
  return sub_23F61B1B8();
}

uint64_t sub_23F406438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int128 a23)
{
  *(_OWORD *)(a1 + 16) = a23;
  return sub_23F617BA0();
}

void sub_23F40644C()
{
  sub_23F471B2C();
}

uint64_t sub_23F40645C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v33;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a32 + 8))(v32, *(_QWORD *)(v33 - 176));
}

uint64_t sub_23F406478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v33;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a32 + 8))(v32, *(_QWORD *)(v33 - 176));
}

uint64_t sub_23F406494(uint64_t (**a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23F3910C4(v2, a1, *(_QWORD *)(v3 - 144), v1);
}

uint64_t sub_23F4064B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void sub_23F4064B8(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x20u);
}

void sub_23F4064C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 112));
}

uint64_t sub_23F4064C8()
{
  return sub_23F619E8C();
}

void sub_23F4064D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 - 120) = v0;
  v3 = *(_QWORD *)(v1 + 496);
  *(_QWORD *)(v2 - 136) = *(_QWORD *)(v1 + 504);
  *(_QWORD *)(v2 - 128) = v3;
}

uint64_t sub_23F4064F0()
{
  return sub_23F617F9C();
}

uint64_t sub_23F4064F8()
{
  return sub_23F617F90();
}

uint64_t sub_23F406500()
{
  return sub_23F617E10();
}

uint64_t sub_23F40650C()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F35EA9C(*(_QWORD **)(v1 - 160), *(_QWORD *)(v0 + 64));
  return sub_23F61A660();
}

uint64_t sub_23F406530()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F3F3D0C(v0, v1);
}

void sub_23F406548()
{
  sub_23F3F7178();
}

void sub_23F406554()
{
  sub_23F3F7178();
}

uint64_t sub_23F406560()
{
  return swift_retain();
}

uint64_t sub_23F40656C()
{
  return sub_23F618098();
}

uint64_t sub_23F406578()
{
  uint64_t v0;

  *(_WORD *)(v0 + 22) = 2080;
  return sub_23F61B2CC();
}

void sub_23F406590(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F39C9F0(a1, a2, *(uint64_t **)(v2 - 152));
}

uint64_t sub_23F40659C()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F4065A8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 120) = v1;
  return sub_23F3B60F0(a1, v1, v2);
}

uint64_t sub_23F4065C0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 120) = v1;
  return sub_23F3B60F0(a1, v1, v2);
}

uint64_t sub_23F4065D8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 4) = a1;
  *(_WORD *)(v1 + 12) = 2080;
  return sub_23F61B20C();
}

void sub_23F4065E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 792);
  *(_QWORD *)(v1 - 128) = *(_QWORD *)(v0 + 760);
  *(_QWORD *)(v1 - 120) = v2;
}

uint64_t sub_23F406614()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;

  *(_BYTE *)(v1 + v2[5]) = 2;
  *(_BYTE *)(v1 + v2[6]) = 2;
  *(_QWORD *)(v1 + v2[7]) = v0;
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_23F40663C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = *(_QWORD *)(v0 + 776);
}

uint64_t sub_23F406658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_23F519978(a1, a2, a3, a4, a5, a6, a7);
}

void sub_23F406674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v0, v1, (uint64_t *)(v2 - 112));
}

void sub_23F406684(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F3663AC(a1, v1);
}

void sub_23F40668C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F38F530(a1, a2, v2);
}

uint64_t sub_23F406694()
{
  __int16 v0;
  uint64_t v1;

  *(_WORD *)(v1 + 22) = v0;
  return sub_23F61B2CC();
}

uint64_t sub_23F4066A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v0, v1, v3);
}

__n128 sub_23F4066BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  _DWORD *v27;
  uint64_t v28;
  __n128 result;

  *(_QWORD *)(v28 - 112) = a1;
  *v27 = a27;
  sub_23F37AE00(0xD00000000000003CLL, a26, (uint64_t *)(v28 - 112));
  return result;
}

void sub_23F4066E0()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23F4075C8(v0, v1);
}

void sub_23F4066F4()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23F4075C8(v0, v1);
}

uint64_t sub_23F406708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v0, v1, v3);
}

uint64_t sub_23F40671C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

void sub_23F406730()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23F4075C8(v0, v1);
}

uint64_t sub_23F406744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int128 a23)
{
  *(_OWORD *)(a1 + 16) = a23;
  return sub_23F61A2DC();
}

uint64_t sub_23F406758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v0, v1, v3);
}

uint64_t sub_23F40676C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v0);
}

uint64_t sub_23F406780()
{
  return swift_task_dealloc();
}

uint64_t sub_23F406794(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F40679C()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F4067B0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_23F4067BC()
{
  return sub_23F617BA0();
}

uint64_t sub_23F4067C8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  return sub_23F3B60F0(a1, v1, v2);
}

BOOL sub_23F4067DC(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

void sub_23F4067E4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = v1;
  *(_QWORD *)(v2 - 168) = *(_QWORD *)(a1 + 16);
}

void sub_23F40681C()
{
  void *v0;

}

uint64_t sub_23F40682C()
{
  return sub_23F61B458();
}

uint64_t sub_23F40683C()
{
  return sub_23F61B458();
}

BOOL sub_23F40684C(os_log_type_t a1)
{
  NSObject *v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 136) = a1;
  return os_log_type_enabled(v1, a1);
}

void sub_23F40685C()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23F4075C8(v0, v1);
}

uint64_t sub_23F40686C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_23F406878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;

  return a10(v10, v11);
}

void sub_23F406888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v0, v1, (uint64_t *)(v2 - 112));
}

uint64_t sub_23F406898(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4068A8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 4) = a1;
  *(_WORD *)(v1 + 12) = 2080;
  return sub_23F61B20C();
}

uint64_t sub_23F4068B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

uint64_t sub_23F4068C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v0, v2);
}

uint64_t sub_23F4068EC()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F35EA9C(*(_QWORD **)(v1 - 160), *(_QWORD *)(v0 + 64));
  return sub_23F61A660();
}

uint64_t sub_23F406914()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F406930(uint64_t a1)
{
  uint64_t v1;

  sub_23F35EA9C((_QWORD *)(v1 + *(int *)(a1 + 20) + 120), *(_QWORD *)(v1 + *(int *)(a1 + 20) + 144));
  return sub_23F61B1B8();
}

uint64_t sub_23F406958()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F406960(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23F3B60F0(a1, a2, a3);
}

void sub_23F406968()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 856) = v1;
}

uint64_t sub_23F40697C()
{
  return sub_23F61B2CC();
}

uint64_t sub_23F406984(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23F3B60F0(a1, a2, a3);
}

uint64_t sub_23F40698C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23F3B60F0(a1, a2, a3);
}

uint64_t sub_23F406994()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F40699C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F35EA9C(v0, v0[3]);
  return v1;
}

uint64_t sub_23F4069BC()
{
  return sub_23F61B1B8();
}

uint64_t sub_23F4069C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 168))();
}

uint64_t sub_23F4069CC()
{
  uint64_t v0;

  return sub_23F39BB1C(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 328));
}

uint64_t sub_23F406A00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

void sub_23F406A18()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
}

uint64_t sub_23F406A40()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F406AD8()
{
  uint64_t v0;

  return v0;
}

void sub_23F406AF0()
{
  void *v0;

}

uint64_t sub_23F406B2C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F406B48()
{
  return sub_23F61B278();
}

uint64_t sub_23F406B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int128 a23)
{
  *(_OWORD *)(a1 + 16) = a23;
  return sub_23F61A2DC();
}

uint64_t sub_23F406B70(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 896) = result;
  return result;
}

uint64_t sub_23F406B7C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 880) = result;
  return result;
}

uint64_t sub_23F406C00(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F406C8C()
{
  uint64_t (*v0)(_QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(*(_QWORD *)(v2 - 120), v1);
}

uint64_t sub_23F406CBC()
{
  uint64_t (*v0)(_QWORD, _QWORD);
  uint64_t v1;

  return v0(*(_QWORD *)(v1 + 736), *(_QWORD *)(v1 + 712));
}

uint64_t sub_23F406CC8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 248) = result;
  return result;
}

uint64_t sub_23F406CD4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 168) + 8))(*(_QWORD *)(v0 - 152), *(_QWORD *)(v0 - 160));
}

uint64_t sub_23F406CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a29 + 8))(v30, a30);
}

uint64_t sub_23F406D00(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 4) = a1;
  *(_WORD *)(v1 + 12) = 2080;
  return sub_23F61B20C();
}

void sub_23F406D10()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void sub_23F406D20()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23F406D30()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, v1, v3);
}

uint64_t sub_23F406D40()
{
  return sub_23F61B278();
}

void sub_23F406D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v0, v1, (uint64_t *)(v2 - 112));
}

void sub_23F406D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v0, v1, (uint64_t *)(v2 - 112));
}

uint64_t sub_23F406D68(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F406DA8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23F406DB4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 120);
}

void sub_23F406DC0()
{
  sub_23F37796C();
}

uint64_t sub_23F406DCC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 280) + *(int *)(v0 + 1152) + 40;
}

uint64_t sub_23F406DE0(uint64_t a1)
{
  return sub_23F3FA3F4(a1);
}

void sub_23F406DE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 856) = v0;
}

uint64_t sub_23F406DFC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F406E04()
{
  return sub_23F61C628();
}

uint64_t sub_23F406E18()
{
  return swift_retain();
}

uint64_t sub_23F406E24()
{
  return swift_retain();
}

uint64_t sub_23F406E30()
{
  return swift_retain();
}

void sub_23F406E3C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F4805A0(a1, v3, a3, v4);
}

uint64_t sub_23F406E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t))
{
  uint64_t v10;

  return a10(a1, v10);
}

uint64_t sub_23F406E54(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F406E5C()
{
  return sub_23F61C61C();
}

uint64_t sub_23F406E64()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F406E78(uint64_t a1, uint64_t (**isUniquelyReferenced_nonNull_native)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  return sub_23F3910C4(a1, isUniquelyReferenced_nonNull_native, a3, a4);
}

uint64_t sub_23F406E84()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F406E90()
{
  return sub_23F61B278();
}

uint64_t sub_23F406E98(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  if (*(_QWORD *)(a1 + 64))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 200);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 240);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 280);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 320);
}

uint64_t sub_23F406F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = (_OWORD *)(a1 + 40);
  v8 = (_OWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 64);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 56);
    *v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v12 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 80, a2 + 80);
  v13 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 120, a2 + 120);
  v14 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 160, a2 + 160);
  v15 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v15;
  (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 200, a2 + 200);
  v16 = *(_QWORD *)(a2 + 264);
  v17 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v16;
  *(_QWORD *)(a1 + 272) = v17;
  (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 240, a2 + 240);
  v18 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 304) = v18;
  (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1 + 280, a2 + 280);
  v19 = *(_QWORD *)(a2 + 344);
  v20 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v19;
  *(_QWORD *)(a1 + 352) = v20;
  (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 320, a2 + 320);
  return a1;
}

uint64_t sub_23F407074(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      sub_23F361AD0((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  v5 = *a2;
  v6 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  v7 = *((_QWORD *)a2 + 8);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
      goto LABEL_15;
    }
LABEL_14:
    v8 = *(__int128 *)((char *)a2 + 40);
    v9 = *(__int128 *)((char *)a2 + 56);
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = v9;
    goto LABEL_15;
  }
  if (!v7)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
    goto LABEL_14;
  }
  sub_23F361AD0((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
LABEL_15:
  sub_23F361AD0((uint64_t *)(a1 + 80), (uint64_t *)a2 + 10);
  sub_23F361AD0((uint64_t *)(a1 + 120), (uint64_t *)a2 + 15);
  sub_23F361AD0((uint64_t *)(a1 + 160), (uint64_t *)a2 + 20);
  sub_23F361AD0((uint64_t *)(a1 + 200), (uint64_t *)a2 + 25);
  sub_23F361AD0((uint64_t *)(a1 + 240), (uint64_t *)a2 + 30);
  sub_23F361AD0((uint64_t *)(a1 + 280), (uint64_t *)a2 + 35);
  sub_23F361AD0((uint64_t *)(a1 + 320), (uint64_t *)a2 + 40);
  return a1;
}

void *sub_23F4071B8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x168uLL);
}

uint64_t sub_23F4071C0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  if (*(_QWORD *)(a1 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
  v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v7;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 200);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 240);
  v8 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v8;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 280);
  v9 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v9;
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 320);
  v10 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v10;
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  return a1;
}

uint64_t sub_23F4072F4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 360))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 104);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23F407334(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 360) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 104) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 360) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for EventParsers()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaToolResolutionParser()
{
  sub_23F362C18();
}

uint64_t sub_23F4073E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4073F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F61B32C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F407470()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F40747C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  sub_23F40B498();
  result = sub_23F61B32C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(v4, a2, a2, result);
  *(_QWORD *)(v4 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AlphaExternalAgentOutcomeParser()
{
  uint64_t result;

  result = qword_256E72D28;
  if (!qword_256E72D28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F407528()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for AlphaSystemResponseParser()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaActionResponseParser()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaSystemPromptResolutionParser()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaRequestParser()
{
  sub_23F362C18();
}

void sub_23F4075C8(uint64_t a1, uint64_t *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  int v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t);
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v120 = a1;
  v110 = a2;
  v4 = sub_23F61A360();
  v104 = *(_QWORD *)(v4 - 8);
  v105 = v4;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v103 = v6;
  v7 = sub_23F40B4C4();
  v116 = *(_QWORD *)(v7 - 8);
  v117 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3834D0();
  v112 = v9;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v10);
  v113 = (char *)&v100 - v11;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v12);
  v106 = (char *)&v100 - v13;
  sub_23F35D2E8(&qword_256E71E28);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  v111 = v15;
  v16 = sub_23F61AC6C();
  v108 = *(_QWORD *)(v16 - 8);
  v109 = (void *)v16;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F36285C();
  v107 = v18;
  v19 = sub_23F61A300();
  v20 = *(_QWORD *)(v19 - 8);
  v114 = v19;
  v115 = v20;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F38F964();
  v24 = v23 - v22;
  v25 = type metadata accessor for UserTurnItem(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F3842E4();
  v27 = sub_23F61A2E8();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  sub_23F38F964();
  v31 = v30 - v29;
  v32 = sub_23F61A36C();
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  sub_23F3B17BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v3, v120, v32);
  v118 = v33;
  v119 = v3;
  v34 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 88);
  v120 = v32;
  v35 = v34(v3, v32);
  if (v35 == *MEMORY[0x24BE553A8])
  {
    v36 = v113;
    sub_23F619088();
    v37 = sub_23F619E8C();
    v38 = sub_23F61C640();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)sub_23F366668();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_23F35A000, v37, v38, "[AlphaRequestParser] Got stop request", v39, 2u);
      sub_23F366530();
    }

    (*(void (**)(char *, uint64_t))(v116 + 8))(v36, v117);
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v119, v120);
  }
  else
  {
    v40 = v111;
    v41 = v24;
    v43 = v114;
    v42 = v115;
    v101 = (int *)v25;
    v113 = v2;
    if (v35 == *MEMORY[0x24BE553B0])
    {
      sub_23F40B43C();
      v44 = v28;
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32);
      v100 = v27;
      v45(v31, v25, v27);
      sub_23F35D2E8(&qword_256E704B8);
      sub_23F40B50C();
      v46 = sub_23F40B314();
      *(_OWORD *)(v46 + 16) = xmmword_23F61E7E0;
      v47 = (uint64_t *)(v46 + v41);
      v48 = sub_23F61A2DC();
      v50 = v49;
      sub_23F3E3A60((uint64_t)&unk_250FD0DC0);
      v52 = v51;
      sub_23F384A00();
      v53 = v121;
      v54 = sub_23F3B60F0(v52, v48, v50);
      v121 = v53;
      swift_bridgeObjectRelease();
      sub_23F369004(v54);
      *v47 = v48;
      v47[1] = v50;
      v47[2] = v55;
      sub_23F40B400();
      v56 = v101;
      v57 = (uint64_t)v113;
      v58 = (uint64_t)&v113[v101[8]];
      sub_23F61A2D0();
      v59 = sub_23F384040();
      sub_23F40B3E8(v58, v60, v61, v59);
      sub_23F616FF4();
      *(_BYTE *)(v57 + v56[5]) = 2;
      *(_BYTE *)(v57 + v56[6]) = 2;
      *(_QWORD *)(v57 + v56[7]) = v46;
      sub_23F4052F4(v57, v110);
      sub_23F3663AC(v57, type metadata accessor for UserTurnItem);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v31, v100);
    }
    else if (v35 == *MEMORY[0x24BE553B8])
    {
      sub_23F40B43C();
      v62 = v42;
      v63 = v41;
      v64 = sub_23F3840BC();
      v66 = v65(v64);
      v67 = MEMORY[0x24266D804](v66);
      v68 = v40;
      sub_23F36FE58(v67, v40);
      swift_bridgeObjectRelease();
      v69 = v109;
      if (sub_23F36195C(v40, 1, (uint64_t)v109) == 1)
      {
        sub_23F3625D8(v40, &qword_256E71E28);
        v70 = v106;
        sub_23F619088();
        sub_23F619E8C();
        v71 = sub_23F40B504();
        if (sub_23F40B304(v71))
        {
          *(_WORD *)sub_23F366668() = 0;
          sub_23F40B33C(&dword_23F35A000, v72, v73, "No speech candidates found in the request");
          sub_23F366530();
        }

        (*(void (**)(char *, uint64_t))(v116 + 8))(v70, v117);
        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v63, v43);
      }
      else
      {
        v81 = v107;
        (*(void (**)(uint64_t, uint64_t, void *))(v108 + 32))(v107, v68, v69);
        sub_23F35D2E8(&qword_256E704B8);
        sub_23F40B50C();
        v82 = sub_23F40B314();
        *(_OWORD *)(v82 + 16) = xmmword_23F61E7E0;
        v120 = v63;
        v83 = (uint64_t *)(v82 + v68);
        v84 = sub_23F61A2DC();
        v86 = v85;
        sub_23F3E3A60((uint64_t)&unk_250FD0DE8);
        v88 = v87;
        sub_23F384324();
        v89 = sub_23F3B60F0(v88, v84, v86);
        sub_23F384364();
        sub_23F369004(v89);
        *v83 = v84;
        v83[1] = v86;
        v83[2] = v90;
        sub_23F40B400();
        v91 = v101;
        v92 = (uint64_t)v113;
        v93 = (uint64_t)&v113[v101[8]];
        sub_23F61AC60();
        v94 = sub_23F384040();
        sub_23F40B3E8(v93, v95, v96, v94);
        sub_23F616FF4();
        *(_BYTE *)(v92 + v91[5]) = 2;
        *(_BYTE *)(v92 + v91[6]) = 2;
        *(_QWORD *)(v92 + v91[7]) = v82;
        sub_23F4052F4(v92, v110);
        sub_23F3663AC(v92, type metadata accessor for UserTurnItem);
        (*(void (**)(uint64_t, void *))(v108 + 8))(v81, v109);
        (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v120, v114);
      }
    }
    else
    {
      v74 = v110;
      if (v35 == *MEMORY[0x24BE55318])
      {
        (*(void (**)(uint64_t, uint64_t))(v118 + 96))(v119, v120);
        v75 = v103;
        v76 = sub_23F3848D8();
        v77(v76);
        sub_23F35EA9C(v102, v102[3]);
        sub_23F408518(v75, v74);
        v78 = sub_23F3848D8();
      }
      else
      {
        sub_23F619088();
        sub_23F40B4F0();
        v97 = sub_23F40B504();
        if (sub_23F40B304(v97))
        {
          *(_WORD *)sub_23F366668() = 0;
          sub_23F40B33C(&dword_23F35A000, v98, v99, "[AlphaRequestParser] Unsupported RequestContent type");
          sub_23F366530();
        }

        sub_23F40B4F8(v116);
        v78 = v119;
        v80 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
        v79 = v120;
      }
      v80(v78, v79);
    }
  }
  sub_23F362870();
}

void sub_23F407CBC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;

  sub_23F40B498();
  v5 = sub_23F619E98();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B17BC();
  v35 = (int *)type metadata accessor for UserTurnItem(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E71E28);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3842E4();
  v9 = sub_23F61AC6C();
  v10 = *(_QWORD *)(v9 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F38F964();
  v14 = v13 - v12;
  v15 = MEMORY[0x24266D4F8]();
  sub_23F36FE58(v15, v2);
  swift_bridgeObjectRelease();
  if (sub_23F36195C(v2, 1, v9) == 1)
  {
    sub_23F3625D8(v2, &qword_256E71E28);
    sub_23F619088();
    v16 = sub_23F619E8C();
    v17 = sub_23F61C628();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)sub_23F366668();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_23F35A000, v16, v17, "No speech candidates found in the SpeechQuery payload", v18, 2u);
      sub_23F366530();
    }

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v19 = v10;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v14, v2, v9);
    sub_23F35D2E8(&qword_256E704B8);
    v20 = sub_23F40B498();
    type metadata accessor for StatementSegment(v20);
    sub_23F40B3B4();
    v23 = v22 & ~v21;
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_23F61E7E0;
    v25 = (uint64_t *)(v24 + v23);
    v26 = sub_23F61A2DC();
    v28 = v27;
    sub_23F617BA0();
    v29 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v26, v28);
    sub_23F369004(v29);
    *v25 = v26;
    v25[1] = v28;
    v25[2] = v30;
    sub_23F40B400();
    v31 = v3 + v35[8];
    sub_23F61AC60();
    v32 = sub_23F384040();
    sub_23F40B3E8(v31, v33, v34, v32);
    sub_23F616FF4();
    *(_BYTE *)(v3 + v35[5]) = 2;
    *(_BYTE *)(v3 + v35[6]) = 2;
    *(_QWORD *)(v3 + v35[7]) = v24;
    sub_23F4052F4(v3, a2);
    sub_23F3663AC(v3, type metadata accessor for UserTurnItem);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v14, v9);
  }
  sub_23F362870();
}

double sub_23F407F70@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t v27;
  os_log_t v28;
  _BYTE v29[16];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = sub_23F617D08();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F619E98();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v2;
  v30 = a1;
  sub_23F617BA0();
  sub_23F3DDFCC((uint64_t (*)(__int128 *))sub_23F40B2C4, (uint64_t)v29, v13);
  if (*(_QWORD *)(v14 + 16))
  {
    sub_23F36FE20(v14, a2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F619088();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    v16 = sub_23F619E8C();
    v17 = sub_23F61C628();
    if (os_log_type_enabled(v16, v17))
    {
      v28 = v16;
      v18 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v32 = v27;
      v26 = v18;
      *(_DWORD *)v18 = 136315138;
      v25 = v18 + 4;
      sub_23F39E4F0((unint64_t *)&qword_256E6FB60, MEMORY[0x24BE52170]);
      v19 = sub_23F61CC1C();
      sub_23F37AE00(v19, v20, &v32);
      v31 = v21;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v16 = v28;
      v22 = v17;
      v23 = v26;
      _os_log_impl(&dword_23F35A000, v28, v22, "No ProvisionalConversationItem found for statementID: %s", v26, 0xCu);
      v24 = v27;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v24, -1, -1);
      MEMORY[0x242670B70](v23, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_23F408204(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t *v24;
  char v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v33 = a2;
  v3 = sub_23F617D08();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E70A50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(&qword_256E6FFA0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v32 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v30 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - v15;
  v18 = a1[3];
  v17 = a1[4];
  sub_23F35EA9C(a1, v18);
  v19 = *(void (**)(uint64_t, uint64_t))(v17 + 32);
  v20 = v17;
  v21 = v4;
  v19(v18, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v14, v33, v3);
  sub_23F36196C((uint64_t)v14, 0, 1, v3);
  v22 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_23F382EF8((uint64_t)v16, (uint64_t)v8, &qword_256E6FFA0);
  sub_23F382EF8((uint64_t)v14, v22, &qword_256E6FFA0);
  if (sub_23F36195C((uint64_t)v8, 1, v3) == 1)
  {
    sub_23F3625D8((uint64_t)v14, &qword_256E6FFA0);
    sub_23F3625D8((uint64_t)v16, &qword_256E6FFA0);
    v23 = sub_23F36195C(v22, 1, v3);
    if (v23 == 1)
      v24 = &qword_256E6FFA0;
    else
      v24 = &qword_256E70A50;
    if (v23 == 1)
      v25 = -1;
    else
      v25 = 0;
  }
  else
  {
    v26 = (uint64_t)v32;
    sub_23F382EF8((uint64_t)v8, (uint64_t)v32, &qword_256E6FFA0);
    if (sub_23F36195C(v22, 1, v3) == 1)
    {
      sub_23F3625D8((uint64_t)v14, &qword_256E6FFA0);
      sub_23F3625D8((uint64_t)v16, &qword_256E6FFA0);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v26, v3);
      v25 = 0;
      v24 = &qword_256E70A50;
    }
    else
    {
      v27 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v31, v22, v3);
      sub_23F39E4F0((unint64_t *)&qword_256E701E8, MEMORY[0x24BE52160]);
      v25 = sub_23F61C0A0();
      v28 = *(void (**)(char *, uint64_t))(v21 + 8);
      v28(v27, v3);
      v24 = &qword_256E6FFA0;
      sub_23F3625D8((uint64_t)v14, &qword_256E6FFA0);
      sub_23F3625D8((uint64_t)v16, &qword_256E6FFA0);
      v28(v32, v3);
    }
  }
  sub_23F3625D8((uint64_t)v8, v24);
  return v25 & 1;
}

void sub_23F408518(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t (*v29)(uint64_t *, uint64_t);
  int v30;
  uint64_t (*v31)(uint64_t, _QWORD);
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, _QWORD);
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);
  void *v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104[2];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  _QWORD v113[3];
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v97 = a2;
  sub_23F40B498();
  v101 = sub_23F61A360();
  v4 = *(_QWORD *)(v101 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3834D0();
  v89 = v6;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v87 - v8;
  v10 = sub_23F40B4C4();
  v102 = *(_QWORD *)(v10 - 8);
  v103 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3834D0();
  v91 = v12;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v13);
  v15 = ((char *)&v87 - v14);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v16);
  v90 = (char *)&v87 - v17;
  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F36285C();
  v95 = v19;
  v94 = sub_23F617000();
  v93 = *(_QWORD *)(v94 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F36285C();
  v92 = v21;
  v96 = sub_23F384040();
  v22 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  sub_23F383EC4();
  v23 = sub_23F61A330();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3834D0();
  v98 = v25;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (uint64_t *)((char *)&v87 - v27);
  sub_23F61A33C();
  v99 = v24;
  v29 = *(uint64_t (**)(uint64_t *, uint64_t))(v24 + 88);
  v100 = v23;
  v30 = v29(v28, v23);
  if (v30 == *MEMORY[0x24BE55348])
    goto LABEL_9;
  if (v30 == *MEMORY[0x24BE55368])
    goto LABEL_3;
  if (v30 == *MEMORY[0x24BE55350] || v30 == *MEMORY[0x24BE55360])
  {
LABEL_9:
    v33 = v15;
    sub_23F619088();
    v34 = sub_23F3848D8();
    v35 = v101;
    v36(v34);
    v37 = sub_23F619E8C();
    v38 = sub_23F61C610();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = sub_23F366668();
      v96 = (uint64_t)v33;
      v40 = v39;
      v41 = sub_23F366668();
      v88 = v9;
      v95 = v41;
      v104[0] = v41;
      *(_DWORD *)v40 = 136315394;
      sub_23F40B39C((uint64_t)"handle(systemPromptResolution:conversation:)");
      v113[0] = v42;
      sub_23F61C790();
      *(_WORD *)(v40 + 12) = 2080;
      v97 = (uint64_t *)v4;
      v43 = v98;
      sub_23F61A33C();
      v44 = sub_23F61A324();
      v46 = v45;
      sub_23F384430();
      sub_23F40B3C8(v43, v47);
      sub_23F37AE00(v44, v46, v104);
      v113[0] = v48;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      sub_23F384430();
      v49(v88, v35);
      _os_log_impl(&dword_23F35A000, v37, v38, "%s (safely) skipping UserAction %s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      sub_23F366530();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v35);

    (*(void (**)(NSObject *, uint64_t))(v102 + 8))(v33, v103);
    goto LABEL_12;
  }
  if (v30 == *MEMORY[0x24BE55370])
  {
    sub_23F40B3C8((uint64_t)v28, *(uint64_t (**)(uint64_t, _QWORD))(v99 + 96));
    v100 = *v28;
    v50 = v97;
    v51 = *v97;
    v52 = v97[1];
    v53 = v97[2];
    v54 = v97[3];
    v55 = v97[4];
    v101 = v97[5];
    v57 = v97[6];
    v56 = v97[7];
    v104[0] = v51;
    v104[1] = v52;
    v105 = v53;
    v106 = v54;
    v107 = v55;
    v108 = v101;
    v109 = v57;
    v110 = v56;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F384324();
    sub_23F384A00();
    sub_23F617BA0();
    sub_23F617BA0();
    swift_retain();
    sub_23F61A348();
    v58 = sub_23F407F70(v3, (uint64_t)&v111);
    v59 = v96;
    (*(void (**)(uint64_t, uint64_t, double))(v22 + 8))(v3, v96, v58);
    v101 = v104[0];
    v60 = v105;
    swift_release();
    swift_bridgeObjectRelease();
    sub_23F384364();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v112)
    {
      sub_23F362678(&v111, (uint64_t)v113);
      v62 = v114;
      v61 = v115;
      sub_23F35EA9C(v113, v114);
      v63 = v92;
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v62, v61);
      v64 = sub_23F4DDBF4(v63);
      sub_23F384430();
      v65(v63, v94);
      type metadata accessor for PlanGenerationAssistantTurnItem(0);
      v66 = v95;
      sub_23F36196C(v95, 1, 1, v59);
      sub_23F3F5E68(2, v64, v66);
      v68 = v67;
      swift_retain();
      sub_23F376970();
      v69 = *(_QWORD *)(*v50 + 16);
      sub_23F376B68(v69);
      sub_23F405390(v69, v68, v50);
      v70 = *v50;
      swift_release();
      *v50 = v70;
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v113);
    }
    else
    {
      sub_23F3625D8((uint64_t)&v111, &qword_256E70A58);
      sub_23F40B4D0();
      v83 = (void *)sub_23F40B4F0();
      v84 = sub_23F61C610();
      if (sub_23F40B304(v84))
      {
        *(_WORD *)sub_23F366668() = 0;
        sub_23F40B33C(&dword_23F35A000, v85, v86, "Unable to find the last plan generation item. Omitting pick from UserAction");
        sub_23F366530();
      }

      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v60, v103);
    }
  }
  else
  {
    if (v30 == *MEMORY[0x24BE55358])
    {
LABEL_3:
      sub_23F384430();
      sub_23F40B3C8((uint64_t)v28, v31);
      goto LABEL_9;
    }
    if (v30 == *MEMORY[0x24BE55340])
      goto LABEL_9;
    sub_23F40B4D0();
    v71 = (uint64_t *)v4;
    v72 = v89;
    v73 = v101;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v89, v2, v101);
    sub_23F40B4F0();
    v74 = sub_23F40B504();
    if (sub_23F40B304(v74))
    {
      v75 = sub_23F366668();
      v96 = sub_23F366668();
      v104[0] = v96;
      *(_DWORD *)v75 = 136315394;
      LODWORD(v95) = v2;
      sub_23F40B39C((uint64_t)"handle(systemPromptResolution:conversation:)");
      v113[0] = v76;
      sub_23F61C790();
      *(_WORD *)(v75 + 12) = 2080;
      v94 = v75 + 14;
      v77 = v98;
      sub_23F61A33C();
      v78 = sub_23F61A324();
      v97 = v71;
      v80 = v79;
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v77, v100);
      sub_23F37AE00(v78, v80, v104);
      v113[0] = v81;
      sub_23F61C790();
      sub_23F384364();
      sub_23F384430();
      v82(v72, v101);
      _os_log_impl(&dword_23F35A000, v15, (os_log_type_t)v95, "[%s] ❗️ Unsupported user action found. Please file a radar on Full Planner Runtime: %s", (uint8_t *)v75, 0x16u);
      swift_arrayDestroy();
      sub_23F366530();
    }
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v72, v73);

    sub_23F40B4F8(v102);
    (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t))(v99 + 8))(&v116, v28, v100);
  }
LABEL_12:
  sub_23F362870();
}

uint64_t sub_23F408DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3[16] = a2;
  v3[17] = a3;
  v3[15] = a1;
  v4 = sub_23F619E98();
  v3[18] = v4;
  v3[19] = *(_QWORD *)(v4 - 8);
  v3[20] = sub_23F366654();
  v3[21] = sub_23F3666CC();
  v3[22] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E6FFA0);
  v3[23] = sub_23F366578();
  v5 = sub_23F617000();
  v3[24] = v5;
  v3[25] = *(_QWORD *)(v5 - 8);
  v3[26] = sub_23F366578();
  v6 = sub_23F61B5D8();
  v3[27] = v6;
  v3[28] = *(_QWORD *)(v6 - 8);
  v3[29] = sub_23F366578();
  v7 = sub_23F618134();
  v3[30] = v7;
  v3[31] = *(_QWORD *)(v7 - 8);
  v3[32] = sub_23F366578();
  v8 = sub_23F61ACA8();
  v3[33] = v8;
  v3[34] = *(_QWORD *)(v8 - 8);
  v3[35] = sub_23F366578();
  v9 = sub_23F61820C();
  v3[36] = v9;
  v3[37] = *(_QWORD *)(v9 - 8);
  v3[38] = sub_23F366578();
  v10 = sub_23F617D08();
  v3[39] = v10;
  v3[40] = *(_QWORD *)(v10 - 8);
  v3[41] = sub_23F366654();
  v3[42] = sub_23F3666CC();
  v11 = sub_23F61B2C0();
  v3[43] = v11;
  v3[44] = *(_QWORD *)(v11 - 8);
  v3[45] = sub_23F366578();
  v12 = sub_23F61A504();
  v3[46] = v12;
  v3[47] = *(_QWORD *)(v12 - 8);
  v3[48] = sub_23F366578();
  v13 = sub_23F61B2E4();
  v3[49] = v13;
  v3[50] = *(_QWORD *)(v13 - 8);
  v3[51] = sub_23F366654();
  v3[52] = sub_23F3666CC();
  v3[53] = sub_23F35D2E8(&qword_256E72D70);
  v3[54] = sub_23F366654();
  v3[55] = sub_23F3666CC();
  v3[56] = sub_23F3666CC();
  v3[57] = sub_23F3666CC();
  v3[58] = sub_23F3666CC();
  v14 = sub_23F61A3A8();
  v3[59] = v14;
  v3[60] = *(_QWORD *)(v14 - 8);
  v3[61] = sub_23F366654();
  v3[62] = sub_23F3666CC();
  v3[63] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E72D78);
  v3[64] = sub_23F366654();
  v3[65] = sub_23F3666CC();
  v3[66] = sub_23F3666CC();
  v3[67] = sub_23F3666CC();
  v3[68] = sub_23F3666CC();
  v3[69] = sub_23F3666CC();
  return sub_23F3B15DC();
}

void sub_23F409020()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  int v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  _BOOL4 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char v119;
  char v120;
  void (*v121)(uint64_t, uint64_t);
  void (*v122)(uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  double v139;
  void (*v140)(uint64_t, uint64_t, double);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  NSObject *v163;
  os_log_type_t v164;
  _BOOL4 v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint8_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  NSObject *v200;
  os_log_type_t v201;
  int v202;
  _BOOL4 v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t (*v235)(uint64_t, uint64_t, uint64_t);
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint8_t *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  NSObject *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  os_log_type_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t (*v274)(uint64_t, uint64_t, uint64_t);
  void (*v275)(uint64_t, uint64_t, uint64_t);
  uint64_t v276;
  void (*v277)(uint64_t, uint64_t, uint64_t);
  void (*v278)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v279)(void);
  uint64_t v280;
  void (*v281)(void);
  uint64_t (*v282)(void);
  uint64_t (*v283)(void);
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  _QWORD *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t (*v299)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v300)(uint64_t, uint64_t);
  uint64_t (*v301)(uint64_t, uint64_t);
  void (*v302)(uint64_t, uint64_t);
  uint64_t v303;
  int v304;
  uint64_t v305;
  void (*v306)(uint64_t, uint64_t);
  uint64_t v307;
  unint64_t v308;
  uint64_t v309;
  uint64_t v310;
  __int128 *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314[9];

  v1 = v0 + 15;
  v2 = v0[15];
  v3 = v0[63];
  v5 = v0[59];
  v4 = v0[60];
  v6 = sub_23F61B14C();
  v235 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v235(v3, v2, v5);
  v7 = *(_QWORD *)(v6 + 16);
  v287 = v0;
  v248 = (uint64_t)(v0 + 15);
  if (!v7)
  {
    v49 = 1;
LABEL_20:
    v305 = (uint64_t)(v1 - 2);
    v63 = v287;
    v64 = v287[65];
    v65 = v1;
    v66 = v287[60];
    v67 = v287[53];
    sub_23F36196C(v287[69], v49, 1, v67);
    swift_bridgeObjectRelease();
    v68 = *(uint64_t (**)(uint64_t, uint64_t))(v66 + 8);
    v69 = sub_23F3848F0();
    ((void (*)(uint64_t))v68)(v69);
    v70 = sub_23F3840BC();
    sub_23F382EF8(v70, v71, v72);
    v73 = sub_23F36195C(v64, 1, v67);
    v74 = v287[65];
    if (v73 == 1)
    {
      v75 = v65;
      sub_23F3625D8(v287[65], &qword_256E72D78);
      v76 = sub_23F619088();
      sub_23F40B428(v76, v77, v78, v79, v80, v81, v82, v83, v230, v235);
      v63 = v287;
      v84 = sub_23F619E8C();
      v85 = sub_23F61C628();
      v86 = os_log_type_enabled(v84, v85);
      v87 = v287[69];
      v88 = v287[61];
      v309 = v287[59];
      if (v86)
      {
        v89 = v287[28];
        v273 = v287[27];
        v280 = (uint64_t)(v75 - 3);
        sub_23F40B40C();
        v90 = (uint8_t *)sub_23F366668();
        v314[0] = sub_23F366668();
        *(_DWORD *)v90 = 136315138;
        sub_23F61A390();
        v91 = sub_23F61B5A8();
        v300 = v68;
        v93 = v92;
        v94 = sub_23F40B4AC();
        v95(v94, v273);
        sub_23F37AE00(v91, v93, v314);
        *(_QWORD *)(v89 + 96) = v96;
        sub_23F61C790();
        sub_23F3B5F04();
        sub_23F40B3F4(v88, v97, v98, v99, v100, v101, v102, v103, v231, v236, v239, v244, v248, v251, v253, v258, v263, (uint64_t)(v90 + 4), v273,
          v280,
          v87,
          (uint64_t)v287,
          v288,
          v292,
          v295,
          v300,
          v305,
          v309);
        sub_23F38485C(&dword_23F35A000, v84, v85, "Unable to find a tool disambiguation for tool ID %s", v90);
        sub_23F3B17D4();
        sub_23F366530();
      }
      sub_23F40B4DC();

      v68(v88, v309);
      sub_23F40B3D4();
      v154 = v87;
    }
    else
    {
      v264 = (uint64_t)(v65 - 1);
      v310 = v287[56];
      v104 = v287[53];
      v105 = v287[46];
      v106 = v287[47];
      v107 = v287[36];
      v108 = v287[37];
      v109 = v287[29];
      v296 = v287[27];
      v301 = v68;
      v289 = v287[15];
      v293 = v287[28];
      v110 = *(int *)(v104 + 48);
      v111 = v287[57] + v110;
      v112 = v74 + v110;
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v106 + 32))(v287[57], v74, v105);
      sub_23F38426C(v111, v112, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 32));
      v113 = v310 + *(int *)(v104 + 48);
      v281 = *(void (**)(void))(v106 + 16);
      v285 = v104;
      v281();
      v268 = v111;
      v274 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 16);
      v114 = sub_23F38426C(v113, v111, v274);
      v115 = MEMORY[0x24266B710](v114);
      v116 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
      v116(v113, v107);
      sub_23F61A390();
      sub_23F48555C(v109, v115);
      v118 = v117;
      v120 = v119;
      v121 = *(void (**)(uint64_t, uint64_t))(v293 + 8);
      v121(v109, v296);
      swift_bridgeObjectRelease();
      v122 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
      v122(v310, v105);
      if ((v120 & 1) != 0)
      {
        v155 = sub_23F619088();
        sub_23F40B428(v155, v156, v157, v158, v159, v160, v161, v162, v230, v235);
        v163 = sub_23F619E8C();
        v164 = sub_23F61C628();
        v165 = os_log_type_enabled(v163, v164);
        v166 = v287[69];
        v167 = v287[62];
        v312 = v287[59];
        v168 = v287[57];
        if (v165)
        {
          v169 = v287[29];
          v270 = v287[27];
          v286 = v287[19];
          v291 = v287[18];
          v294 = v287[21];
          v298 = v287[69];
          v170 = (uint8_t *)sub_23F366668();
          v276 = sub_23F366668();
          v314[0] = v276;
          *(_DWORD *)v170 = 136315138;
          sub_23F61A390();
          v171 = sub_23F61B5A8();
          v173 = v172;
          v121(v169, v270);
          sub_23F37AE00(v171, v173, v314);
          v287[13] = v174;
          sub_23F61C790();
          sub_23F40B4AC();
          swift_bridgeObjectRelease();
          sub_23F40B3F4(v167, v175, v176, v177, v178, v179, v180, v181, v233, v238, v239, v244, v248, v251, v253, v258, v264, v270, v276,
            v168,
            v286,
            (uint64_t)v287,
            v291,
            v294,
            v298,
            v301,
            v305,
            v312);
          sub_23F38485C(&dword_23F35A000, v163, v164, "Unable to find the tool disambiguation index for tool: %s", v170);
          sub_23F3B17D4();
          sub_23F366530();
        }
        sub_23F40B4DC();

        sub_23F40B3F4(v167, v182, v183, v184, v185, v186, v187, v188, v233, v238, v239, v244, v248, v251, v253, v258, v264, v268, (uint64_t)v274,
          (uint64_t)v281,
          v285,
          (uint64_t)v287,
          v289,
          v293,
          v296,
          v301,
          v305,
          v312);
        sub_23F40B3D4();
        sub_23F3625D8(v168, &qword_256E72D70);
        v154 = v166;
      }
      else
      {
        v306 = v116;
        v311 = (__int128 *)(v248 - 64);
        v129 = v287[56];
        v128 = v287[57];
        v130 = v287[46];
        v254 = v287[42];
        v259 = v287[40];
        v131 = v287[36];
        v290 = v287[39];
        v132 = (uint64_t *)v287[17];
        v133 = v132[1];
        v135 = v132[2];
        v134 = v132[3];
        v136 = v132[4];
        v137 = v132[5];
        v240 = v132[6];
        v245 = v132[7];
        v302 = v122;
        v314[0] = *v132;
        v314[1] = v133;
        v314[2] = v135;
        v314[3] = v134;
        v314[4] = v136;
        v314[5] = v137;
        v138 = v129 + *(int *)(v285 + 48);
        v314[6] = v240;
        v314[7] = v245;
        sub_23F3E5334(v129, v128, v130, v123, v124, v125, v126, v127, v230, v118, v240, v245, v248, v130, v254, v259, v264, v268, (uint64_t)v274,
          (uint64_t (*)(void))v281);
        v275(v138, v269, v131);
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F617BA0();
        sub_23F384B00();
        sub_23F384A00();
        sub_23F617BA0();
        swift_retain();
        sub_23F61A498();
        v302(v129, v252);
        v139 = sub_23F407F70(v255, (uint64_t)v311);
        v140 = *(void (**)(uint64_t, uint64_t, double))(v260 + 8);
        v140(v255, v290, v139);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23F362D08();
        sub_23F3837B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        v306(v138, v131);
        if (v287[10])
        {
          v303 = v287[57];
          v307 = v287[69];
          v297 = v287[39];
          v141 = v287[25];
          v142 = v287[26];
          v144 = v287[23];
          v143 = v287[24];
          v145 = (uint64_t *)v287[17];
          sub_23F362678(v311, v249 - 104);
          v146 = v287[5];
          v147 = v287[6];
          v148 = (_QWORD *)sub_23F384AB4();
          sub_23F35EA9C(v148, v149);
          (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v146, v147);
          v150 = sub_23F4DDBF4(v142);
          (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v142, v143);
          type metadata accessor for PlanGenerationAssistantTurnItem(0);
          sub_23F36196C(v144, 1, 1, v297);
          sub_23F3F5E68(2, v150, v144);
          v152 = v151;
          swift_retain();
          sub_23F376970();
          v153 = *(_QWORD *)(*v145 + 16);
          sub_23F376B68(v153);
          sub_23F405390(v153, v152, v145);
          sub_23F3625D8(v303, &qword_256E72D70);
          sub_23F3625D8(v307, &qword_256E72D78);
          sub_23F40B4AC();
          swift_release();
          _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v249 - 104);
LABEL_34:
          swift_task_dealloc();
          sub_23F3666DC();
          sub_23F3666C4();
          sub_23F3666EC();
          sub_23F366708();
          sub_23F3666E4();
          sub_23F366698();
          sub_23F3666D4();
          sub_23F3666A0();
          sub_23F362CC8();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          sub_23F383978();
          sub_23F383970();
          sub_23F383890();
          swift_task_dealloc();
          sub_23F383880();
          sub_23F383878();
          sub_23F383870();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          ((void (*)(void))v63[1])();
          return;
        }
        v189 = v287[57];
        v190 = v287[55];
        v191 = v287[54];
        v192 = v287[46];
        v193 = v287[36];
        sub_23F3625D8((uint64_t)v311, &qword_256E70A58);
        sub_23F619088();
        v194 = v190 + *(int *)(v285 + 48);
        sub_23F3E5334(v190, v189, v192, v195, v196, v197, v198, v199, v232, v237, v241, v246, v249, v252, v255, v260, v265, v269, (uint64_t)v275,
          v282);
        v277(v194, v271, v193);
        sub_23F383004(v190, v191, &qword_256E72D70);
        v200 = sub_23F619E8C();
        v201 = sub_23F61C628();
        v202 = v201;
        v203 = os_log_type_enabled(v200, v201);
        v204 = v287[69];
        v205 = v287[57];
        if (v203)
        {
          LODWORD(v261) = v202;
          v206 = v287[56];
          v313 = v287[54];
          v207 = v287[46];
          v242 = v287[39];
          v208 = v287[36];
          sub_23F40B40C();
          v256 = (uint64_t)v200;
          v209 = sub_23F366668();
          v210 = sub_23F366668();
          *(_DWORD *)v209 = 136315138;
          v314[0] = v210;
          v211 = *(int *)(v285 + 48);
          v212 = v206 + v211;
          v213 = v313 + v211;
          sub_23F3E5334(v206, v313, v207, v214, v215, v216, v217, v218, v234, v209 + 4, v242, v209, v250, v210, v256, v261, v266, v205, (uint64_t)v277,
            v283);
          v278(v212, v213, v208);
          sub_23F61A498();
          v219 = sub_23F3840BC();
          ((void (*)(uint64_t))v302)(v219);
          v220 = sub_23F3848F0();
          ((void (*)(uint64_t))v306)(v220);
          sub_23F39E4F0((unint64_t *)&qword_256E6FB60, MEMORY[0x24BE52170]);
          sub_23F61CC1C();
          v221 = sub_23F40B4AC();
          ((void (*)(uint64_t, uint64_t))v140)(v221, v243);
          v222 = sub_23F3840BC();
          sub_23F37AE00(v222, v223, v224);
          *(_QWORD *)(v209 + 112) = v225;
          sub_23F61C790();
          swift_bridgeObjectRelease();
          sub_23F3625D8(v313, &qword_256E72D70);
          sub_23F38485C(&dword_23F35A000, v257, v262, "Unable to find provisional conversation item for %s", v247);
          sub_23F3B17D4();
          sub_23F366530();
        }
        v226 = v287[54];
        v227 = v287[22];
        v228 = v287[19];
        v229 = v287[18];

        sub_23F3625D8(v226, &qword_256E72D70);
        v63 = v287;
        (*(void (**)(uint64_t, uint64_t))(v228 + 8))(v227, v229);
        sub_23F3625D8(v205, &qword_256E72D70);
        v154 = v204;
      }
    }
    sub_23F3625D8(v154, &qword_256E72D78);
    goto LABEL_34;
  }
  v8 = v0[50];
  v9 = v0[44];
  v239 = v0[37];
  v244 = v0[53];
  v258 = v0[34];
  v263 = v0[40];
  v253 = v0[31];
  v308 = v6 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v304 = *MEMORY[0x24BE56B98];
  LODWORD(v251) = *MEMORY[0x24BE532E0];
  v267 = v8;
  v272 = v6;
  v10 = v0;
  v292 = v9;
  v284 = v0[47];
  while (1)
  {
    if (v7 > *(_QWORD *)(v6 + 16))
    {
      __break(1u);
      goto LABEL_36;
    }
    v11 = v7 - 1;
    v12 = v10[45];
    v13 = v10[43];
    v295 = v308 + *(_QWORD *)(v8 + 72) * (v7 - 1);
    v299 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    ((void (*)(_QWORD))v299)(v10[51]);
    sub_23F384B00();
    sub_23F61B2CC();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v9 + 88))(v12, v13) != v304)
    {
      (*(void (**)(_QWORD, _QWORD))(v9 + 8))(v10[45], v10[43]);
      v40 = 1;
      goto LABEL_13;
    }
    v288 = v7 - 1;
    v14 = v10[48];
    v16 = v10[45];
    v15 = v10[46];
    v17 = v10[42];
    v18 = v10[41];
    v19 = v9;
    v20 = v10[39];
    (*(void (**)(uint64_t, _QWORD))(v19 + 96))(v16, v10[43]);
    v279 = *(uint64_t (**)(void))(v284 + 32);
    ((void (*)(uint64_t, uint64_t, uint64_t))v279)(v14, v16, v15);
    sub_23F61A480();
    sub_23F61A378();
    LOBYTE(v14) = sub_23F617CD8();
    v21 = *(void (**)(uint64_t, uint64_t))(v263 + 8);
    v21(v18, v20);
    v21(v17, v20);
    if ((v14 & 1) == 0)
    {
      (*(void (**)(_QWORD, _QWORD))(v284 + 8))(v10[48], v10[46]);
LABEL_11:
      v40 = 1;
      goto LABEL_12;
    }
    v22 = v10[35];
    v24 = v10[32];
    v23 = v10[33];
    v25 = v10[30];
    sub_23F61A4F8();
    sub_23F61AC78();
    (*(void (**)(uint64_t, uint64_t))(v258 + 8))(v22, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v253 + 88))(v24, v25) != (_DWORD)v251)
    {
      (*(void (**)(_QWORD, _QWORD))(v284 + 8))(v10[48], v10[46]);
      v41 = sub_23F3840BC();
      v43(v41, v42);
      goto LABEL_11;
    }
    v26 = v10[64];
    v27 = v10[46];
    v28 = v10[38];
    v29 = v10[36];
    v30 = v10[32];
    (*(void (**)(uint64_t, _QWORD))(v253 + 96))(v30, v10[30]);
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v239 + 32);
    v31(v28, v30, v29);
    v32 = v26 + *(int *)(v244 + 48);
    v33 = sub_23F3840BC();
    sub_23F3E5334(v33, v34, v27, v35, v36, v37, v38, v39, v230, (uint64_t)v235, v239, v244, v248, v251, v253, v258, v263, v267, v272,
      v279);
    v31(v32, v28, v29);
    v40 = 0;
LABEL_12:
    v8 = v267;
    v6 = v272;
    v11 = v7 - 1;
LABEL_13:
    v44 = v10[64];
    v45 = v10[53];
    v46 = v10[51];
    v47 = v10[49];
    sub_23F40B4B8(v44, v40);
    v48 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v48(v46, v47);
    swift_bridgeObjectRelease();
    LODWORD(v44) = sub_23F36195C(v44, 1, v45);
    sub_23F3625D8(v10[64], &qword_256E72D78);
    if ((_DWORD)v44 != 1)
      break;
    v7 = v11;
    v9 = v292;
    if (!v11)
    {
      v49 = 1;
      v1 = (_QWORD *)v248;
      goto LABEL_20;
    }
  }
  if (v7 > *(_QWORD *)(v6 + 16))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v50 = v10[68];
  v51 = v10[67];
  v52 = v10[66];
  v53 = v10[63];
  v54 = v10;
  v55 = v10[53];
  v56 = v54[52];
  v57 = v54[49];
  sub_23F38426C(v56, v295, v299);
  sub_23F40A010(v53, v51);
  v48(v56, v57);
  v58 = sub_23F3848D8();
  sub_23F383004(v58, v59, &qword_256E72D78);
  sub_23F382EF8(v50, v52, &qword_256E72D78);
  if (sub_23F36195C(v52, 1, v55) != 1)
  {
    v60 = v54[68];
    sub_23F383004(v54[66], v54[58], &qword_256E72D70);
    sub_23F3625D8(v60, &qword_256E72D78);
    v61 = sub_23F3848D8();
    sub_23F383004(v61, v62, &qword_256E72D70);
    v49 = 0;
    v1 = (_QWORD *)v248;
    goto LABEL_20;
  }
LABEL_37:
  __break(1u);
}

uint64_t sub_23F40A010@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v55 = a1;
  v56 = a2;
  v52 = sub_23F618134();
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v51 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F61ACA8();
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F61820C();
  v6 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  v46 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F617D08();
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v43 - v13;
  v15 = sub_23F61B2C0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F61A504();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61B2CC();
  if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v18, v15) != *MEMORY[0x24BE56B98])
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
LABEL_7:
    v33 = v56;
LABEL_8:
    v41 = sub_23F35D2E8(&qword_256E72D70);
    v39 = v33;
    v40 = 1;
    return sub_23F36196C(v39, v40, 1, v41);
  }
  v44 = v8;
  (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
  v23 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v23(v22, v18, v19);
  sub_23F61A480();
  sub_23F61A378();
  v24 = sub_23F617CD8();
  v25 = v54;
  v26 = *(void (**)(char *, uint64_t))(v53 + 8);
  v26(v12, v54);
  v26(v14, v25);
  v27 = v19;
  if ((v24 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    goto LABEL_7;
  }
  v28 = v47;
  sub_23F61A4F8();
  v29 = v51;
  sub_23F61AC78();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v49);
  v30 = v50;
  v31 = v52;
  v32 = (*(uint64_t (**)(char *, uint64_t))(v50 + 88))(v29, v52);
  v33 = v56;
  if (v32 != *MEMORY[0x24BE532E0])
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v30 + 96))(v29, v31);
  v34 = v45;
  v35 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
  v36 = v44;
  v35(v44, v29, v45);
  v37 = sub_23F35D2E8(&qword_256E72D70);
  v38 = v33 + *(int *)(v37 + 48);
  v23((char *)v33, v22, v27);
  v35((char *)v38, v36, v34);
  v39 = v33;
  v40 = 0;
  v41 = v37;
  return sub_23F36196C(v39, v40, 1, v41);
}

uint64_t sub_23F40A3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[20] = a3;
  v4[21] = v3;
  v4[18] = a1;
  v4[19] = a2;
  v5 = sub_23F61B2C0();
  v4[22] = v5;
  v4[23] = *(_QWORD *)(v5 - 8);
  v4[24] = sub_23F366578();
  v6 = sub_23F61B2E4();
  v4[25] = v6;
  v4[26] = *(_QWORD *)(v6 - 8);
  v4[27] = sub_23F366654();
  v4[28] = sub_23F3666CC();
  v4[29] = sub_23F3666CC();
  v4[30] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E6FD18);
  v4[31] = sub_23F366578();
  v7 = sub_23F6184B8();
  v4[32] = v7;
  v4[33] = *(_QWORD *)(v7 - 8);
  v4[34] = sub_23F366578();
  v4[35] = type metadata accessor for DirectionalTypedValue();
  v4[36] = sub_23F366578();
  v8 = sub_23F619E98();
  v4[37] = v8;
  v4[38] = *(_QWORD *)(v8 - 8);
  v4[39] = sub_23F366654();
  v4[40] = sub_23F3666CC();
  v4[41] = sub_23F3666CC();
  v4[42] = sub_23F3666CC();
  v9 = sub_23F61B92C();
  v4[43] = v9;
  v4[44] = *(_QWORD *)(v9 - 8);
  v4[45] = sub_23F366654();
  v4[46] = sub_23F3666CC();
  v10 = sub_23F617DD4();
  v4[47] = v10;
  v4[48] = *(_QWORD *)(v10 - 8);
  v4[49] = sub_23F366578();
  v11 = sub_23F618134();
  v4[50] = v11;
  v4[51] = *(_QWORD *)(v11 - 8);
  v4[52] = sub_23F366578();
  v4[53] = sub_23F617D08();
  v4[54] = sub_23F366578();
  return sub_23F3B15DC();
}

uint64_t sub_23F40A52C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *, uint64_t);
  uint64_t v32;
  void *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  _BOOL4 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  os_log_type_t v117;
  uint64_t v118[2];

  v1 = (_QWORD *)sub_23F61A8A0();
  if (v1[2])
  {
    v2 = *(uint64_t **)(v0 + 160);
    v3 = v1[4];
    v4 = v1[5];
    sub_23F384B00();
    sub_23F362D08();
    sub_23F35D2E8(&qword_256E704B8);
    type metadata accessor for StatementSegment(0);
    sub_23F40B3B4();
    v7 = v6 & ~v5;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_23F61E7E0;
    v9 = (uint64_t *)(v8 + v7);
    sub_23F3E3A60((uint64_t)&unk_250FD0E10);
    v11 = v10;
    sub_23F384B00();
    v12 = sub_23F3B60F0(v11, v3, v4);
    sub_23F3B5F04();
    sub_23F369004(v12);
    *v9 = v3;
    v9[1] = v4;
    v9[2] = v13;
    sub_23F3B5C30();
    sub_23F61A894();
    type metadata accessor for ExternalAgentResponseTurnItem(0);
    swift_allocObject();
    sub_23F3F7320();
    v15 = v14;
    swift_retain();
    sub_23F376970();
    v16 = *(_QWORD *)(*v2 + 16);
    sub_23F376B68(v16);
    sub_23F405490(v16, v15, v2);
    v17 = *v2;
    swift_release();
    *v2 = v17;
  }
  else
  {
    sub_23F362D08();
  }
  sub_23F61A888();
  v18 = sub_23F384AB4();
  v20 = v19(v18);
  if (v20 == *MEMORY[0x24BE53328])
  {
    v21 = *(_QWORD *)(v0 + 416);
    v22 = *(_QWORD *)(v0 + 392);
    v23 = *(_QWORD *)(v0 + 376);
    v24 = *(_QWORD *)(v0 + 384);
    v25 = *(uint64_t **)(v0 + 360);
    v26 = *(_QWORD *)(v0 + 344);
    v27 = *(_QWORD *)(v0 + 352);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 408) + 96))(v21, *(_QWORD *)(v0 + 400));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v22, v21, v23);
    sub_23F617DA4();
    v28 = sub_23F61B8A8();
    v29 = swift_allocBox();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, *MEMORY[0x24BEB9940], v28);
    *v25 = v29;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v27 + 104))(v25, *MEMORY[0x24BEB9A00], v26);
    LOBYTE(v28) = sub_23F61B920();
    v31 = *(void (**)(uint64_t *, uint64_t))(v27 + 8);
    v31(v25, v26);
    v32 = sub_23F384AB4();
    ((void (*)(uint64_t))v31)(v32);
    if ((v28 & 1) == 0)
    {
      v74 = *(_QWORD *)(v0 + 160);
      v73 = *(_QWORD *)(v0 + 168);
      v75 = type metadata accessor for AlphaExternalAgentOutcomeParser();
      sub_23F35EA9C((_QWORD *)(v73 + *(int *)(v75 + 20) + 80), *(_QWORD *)(v73 + *(int *)(v75 + 20) + 104));
      sub_23F617DA4();
      sub_23F3B5C30();
      v76 = *(_QWORD *)(v74 + 56);
      v77 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 440) = v77;
      *v77 = v0;
      v77[1] = sub_23F40ADF8;
      return sub_23F3AB5E0(v0 + 16, *(_QWORD *)(v0 + 288), 0, v76);
    }
    sub_23F3B2130();
    v33 = (void *)sub_23F619E8C();
    v34 = sub_23F61C610();
    if (sub_23F3F0E3C(v34))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F3F0DF0(&dword_23F35A000, v35, v36, "[ExternalAgentOutcome] Primitive none provided as success value. Skipping rendering.");
      sub_23F366530();
    }

    sub_23F40B488();
    v37 = sub_23F384AB4();
  }
  else if (v20 == *MEMORY[0x24BE532D8]
         || v20 == *MEMORY[0x24BE532E0]
         || v20 == *MEMORY[0x24BE532E8]
         || v20 == *MEMORY[0x24BE53300]
         || v20 == *MEMORY[0x24BE53308]
         || v20 == *MEMORY[0x24BE532F0]
         || v20 == *MEMORY[0x24BE53310]
         || v20 == *MEMORY[0x24BE532D0]
         || v20 == *MEMORY[0x24BE532F8]
         || v20 == *MEMORY[0x24BE53320])
  {
    v50 = *(_QWORD *)(v0 + 232);
    v49 = *(_QWORD *)(v0 + 240);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 408) + 8))(*(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 400));
    sub_23F3B2130();
    sub_23F40B378(v49);
    sub_23F40B378(v50);
    v51 = sub_23F619E8C();
    v52 = sub_23F61C628();
    v53 = sub_23F40B478(v52);
    v55 = *(_QWORD *)(v0 + 232);
    v54 = *(_QWORD *)(v0 + 240);
    v56 = *(_QWORD *)(v0 + 200);
    if (v53)
    {
      v111 = *(_QWORD *)(v0 + 208);
      v113 = *(_QWORD *)(v0 + 184);
      v115 = *(_QWORD *)(v0 + 176);
      v57 = sub_23F366668();
      v118[0] = sub_23F366668();
      *(_DWORD *)v57 = 136315650;
      sub_23F40B384((uint64_t)"handle(outcome:event:conversation:)");
      *(_QWORD *)(v0 + 136) = v58;
      sub_23F40B4A4();
      *(_WORD *)(v57 + 12) = 2080;
      v59 = sub_23F61B20C();
      sub_23F37AE00(v59, v60, v118);
      *(_QWORD *)(v0 + 120) = v61;
      sub_23F40B4A4();
      sub_23F3837B0();
      v62 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
      v62(v54, v56);
      *(_WORD *)(v57 + 22) = 2080;
      sub_23F61B2CC();
      v63 = sub_23F61B278();
      v65 = v64;
      sub_23F40B458(v63, v64, v66, v67, v68, v69, v70, v71, v107, v0 + 136, v0 + 120, v111, v55, v113, v115);
      sub_23F37AE00(v63, v65, v118);
      *(_QWORD *)(v0 + 128) = v72;
      sub_23F40B4A4();
      sub_23F3837B0();
      v62(v55, v56);
      _os_log_impl(&dword_23F35A000, v51, (os_log_type_t)v49, "[%s] Unsupported ExternalAgentOutcome outcome type. Please file a radar on Full Planner Runtime: %s %s", (uint8_t *)v57, 0x20u);
      sub_23F40659C();
      sub_23F366530();
    }
    sub_23F40B450(*(_QWORD *)(v0 + 240));
    sub_23F40B450(v55);

    v37 = sub_23F3848F0();
  }
  else
  {
    v80 = *(_QWORD *)(v0 + 216);
    v79 = *(_QWORD *)(v0 + 224);
    sub_23F3B2130();
    sub_23F40B378(v79);
    sub_23F40B378(v80);
    v81 = sub_23F619E8C();
    v82 = sub_23F61C628();
    v83 = sub_23F40B478(v82);
    v85 = *(_QWORD *)(v0 + 216);
    v84 = *(_QWORD *)(v0 + 224);
    v87 = *(_QWORD *)(v0 + 200);
    v86 = *(_QWORD *)(v0 + 208);
    if (v83)
    {
      v112 = *(_QWORD *)(v0 + 216);
      v114 = *(_QWORD *)(v0 + 184);
      v116 = *(_QWORD *)(v0 + 176);
      v117 = v79;
      v88 = sub_23F366668();
      v118[0] = sub_23F366668();
      *(_DWORD *)v88 = 136315650;
      sub_23F40B384((uint64_t)"handle(outcome:event:conversation:)");
      *(_QWORD *)(v0 + 88) = v89;
      sub_23F61C790();
      *(_WORD *)(v88 + 12) = 2080;
      v90 = sub_23F61B20C();
      sub_23F37AE00(v90, v91, v118);
      *(_QWORD *)(v0 + 96) = v92;
      sub_23F61C790();
      sub_23F3B5F04();
      v93 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
      v93(v84, v87);
      *(_WORD *)(v88 + 22) = 2080;
      v94 = v112;
      sub_23F61B2CC();
      v95 = sub_23F61B278();
      v97 = v96;
      sub_23F40B458(v95, v96, v98, v99, v100, v101, v102, v103, v107, v108, v109, v110, v112, v114, v116);
      sub_23F37AE00(v95, v97, v118);
      *(_QWORD *)(v0 + 104) = v104;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      v93(v94, v87);
      _os_log_impl(&dword_23F35A000, v81, v117, "[%s] Unknown ExternalAgentOutcome outcome type. Please file a radar on Full Planner Runtime: %s %s", (uint8_t *)v88, 0x20u);
      sub_23F40659C();
      sub_23F366530();
    }
    sub_23F40B450(*(_QWORD *)(v0 + 224));
    sub_23F40B450(v85);

    v105 = sub_23F3848F0();
    v106(v105);
    v37 = *(_QWORD *)(v0 + 416);
    v38 = *(_QWORD *)(v0 + 400);
    v39 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 408) + 8);
  }
  v39(v37, v38);
  sub_23F40B350();
  swift_task_dealloc();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  swift_task_dealloc();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F40ADF8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 448) = v0;
  swift_task_dealloc();
  sub_23F3663AC(*(_QWORD *)(v2 + 288), (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  return swift_task_switch();
}

uint64_t sub_23F40AE6C()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, _QWORD, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if ((*(_BYTE *)(v0 + 80) & 1) != 0)
  {
    sub_23F3B2130();
    v1 = (void *)sub_23F619E8C();
    v2 = sub_23F61C610();
    if (sub_23F3F0E3C(v2))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F3F0DF0(&dword_23F35A000, v3, v4, "[ExternalAgentOutcome] Unable to find a prompt reference for success.returnValue");
      sub_23F366530();
    }

    sub_23F40B488();
    v5 = sub_23F384AB4();
    v6(v5);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 16);
    v50 = *(_QWORD *)(v0 + 32);
    v51 = *(_QWORD *)(v0 + 24);
    v46 = *(_QWORD *)(v0 + 48);
    v47 = *(_QWORD *)(v0 + 40);
    v41 = *(_QWORD *)(v0 + 64);
    v43 = *(_QWORD *)(v0 + 56);
    v39 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 432);
    v37 = *(_QWORD *)(v0 + 424);
    v49 = *(_QWORD *)(v0 + 392);
    v45 = *(_QWORD *)(v0 + 384);
    v48 = *(_QWORD *)(v0 + 376);
    v9 = *(_QWORD *)(v0 + 256);
    v35 = *(uint64_t **)(v0 + 272);
    v36 = *(_QWORD *)(v0 + 264);
    v10 = *(uint64_t **)(v0 + 248);
    v11 = *(uint64_t **)(v0 + 160);
    v33 = *(_QWORD *)(v0 + 144);
    v34 = type metadata accessor for EvaluationResultTurnItem(0);
    sub_23F35D2E8(&qword_256E704B8);
    v12 = sub_23F40B498();
    type metadata accessor for StatementSegment(v12);
    sub_23F40B3B4();
    v15 = v14 & ~v13;
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_23F61E7E0;
    v17 = (uint64_t *)(v16 + v15);
    *v17 = v7;
    v17[1] = v51;
    v17[2] = v50;
    sub_23F3B5C30();
    sub_23F617BA0();
    sub_23F384324();
    sub_23F61A894();
    sub_23F3F5EF8(v16, v8);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_23F616FDC();
    *(_QWORD *)(v18 + 24) = v19;
    *v35 = v18;
    v20 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v36 + 104);
    v20(v35, *MEMORY[0x24BE54960], v9);
    v21 = swift_allocBox();
    sub_23F61A894();
    *v10 = v21;
    v20(v10, *MEMORY[0x24BE54918], v9);
    sub_23F40B4B8((uint64_t)v10, 0);
    sub_23F372914((uint64_t)v10, (uint64_t)v35, v22, v23, v24, v25, v26, v27, v32, v33, v34, (uint64_t)v35, v36, v37, v7, v39, v41, v43);
    swift_retain_n();
    sub_23F376970();
    sub_23F376B68(*(_QWORD *)(*v11 + 16));
    v28 = sub_23F384AB4();
    sub_23F4053B8(v28, v29, v11);
    v30 = *v11;
    sub_23F39BA98(v38, v51, v50, v47, v46, v44, v42, v40, 0);
    swift_release();
    *v11 = v30;
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v49, v48);
    swift_release();
  }
  sub_23F40B350();
  swift_task_dealloc();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F40B1C8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 384) + 8))(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 376));
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F40B2C4(_QWORD *a1)
{
  uint64_t v1;

  return sub_23F408204(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_23F40B2E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL sub_23F40B304(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F40B314()
{
  return swift_allocObject();
}

void sub_23F40B33C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_23F40B350()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 432);
}

uint64_t sub_23F40B378(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

void sub_23F40B384(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F37AE00(0xD000000000000023, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 88));
}

void sub_23F40B39C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F37AE00(0xD00000000000002CLL, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 232));
}

uint64_t sub_23F40B3C8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 264));
}

uint64_t sub_23F40B3D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F40B3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F36196C(a1, 0, 1, a4);
}

uint64_t sub_23F40B3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t),uint64_t a27,uint64_t a28)
{
  return a26(a1, a28);
}

uint64_t sub_23F40B400()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F40B428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  return a10(v11, v12, v10);
}

uint64_t sub_23F40B43C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 128) + 96))(*(_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 112));
}

uint64_t sub_23F40B450(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F40B458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a14 + 8))(v15, a15);
}

uint64_t sub_23F40B468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a23 + 8))(a25, a24);
}

BOOL sub_23F40B478(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F40B488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F40B498()
{
  return 0;
}

uint64_t sub_23F40B4A4()
{
  return sub_23F61C790();
}

uint64_t sub_23F40B4AC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F40B4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F36196C(a1, a2, 1, v2);
}

uint64_t sub_23F40B4C4()
{
  return sub_23F619E98();
}

uint64_t sub_23F40B4D0()
{
  return sub_23F619088();
}

uint64_t sub_23F40B4F0()
{
  return sub_23F619E8C();
}

uint64_t sub_23F40B4F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23F40B504()
{
  return sub_23F61C628();
}

uint64_t sub_23F40B50C()
{
  return type metadata accessor for StatementSegment(0);
}

uint64_t sub_23F40B51C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61C730();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23F40B59C()
{
  _QWORD *v0;

  v0 = sub_23F3F6040();
  if (v0[2])
  {
    sub_23F617BA0();
    __asm { BR              X8 }
  }
  qword_256E72D80 = MEMORY[0x24BEE4B00];
  return swift_bridgeObjectRelease();
}

unint64_t sub_23F40B804(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  char *v26;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30[2];
  uint64_t v31;

  v4 = v3;
  sub_23F35D2E8(&qword_256E72F08);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = a1;
  *(_QWORD *)(inited + 24) = a2;
  v30[0] = inited;
  v30[1] = 15;
  if ((a2 & 0x2000000000000000) != 0)
    v9 = HIBYTE(a2) & 0xF;
  else
    v9 = a1 & 0xFFFFFFFFFFFFLL;
  sub_23F617BA0();
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    while (1)
    {
      while (1)
      {
        v11 = sub_23F40BAE0(v30, a3);
        if (v12)
          break;
        v13 = sub_23F40BD78();
        if (!v14)
        {
          swift_bridgeObjectRelease();
          v25 = 3;
          v10 = 0xE000000000000000;
          goto LABEL_25;
        }
        MEMORY[0x24266F784](v13);
        swift_bridgeObjectRelease();
        sub_23F40C368();
        if (v15)
          goto LABEL_19;
      }
      v16 = v11;
      v17 = v12;
      v31 = v4;
      if (qword_256E6EE60 != -1)
        swift_once();
      v18 = sub_23F3685F4(v16, v17, qword_256E72D80);
      swift_bridgeObjectRelease();
      if (v18 == 4)
        break;
      if ((sub_23F40C38C() & 1) == 0)
      {
        sub_23F40C344();
        v10 = v21;
      }
      v19 = *(_QWORD *)(v10 + 16);
      if (v19 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_23F40C35C();
        v10 = v22;
      }
      *(_QWORD *)(v10 + 16) = v19 + 1;
      v20 = v10 + 24 * v19;
      *(_QWORD *)(v20 + 32) = v18;
      *(_QWORD *)(v20 + 40) = 0;
      *(_BYTE *)(v20 + 48) = 0;
      sub_23F40C368();
      v4 = v31;
      if (v15)
        goto LABEL_19;
    }
    swift_bridgeObjectRelease();
    v25 = 0;
LABEL_25:
    swift_bridgeObjectRelease();
    sub_23F40C100();
    swift_allocError();
    *v26 = v25;
    swift_willThrow();
    swift_release();
  }
  else
  {
LABEL_19:
    if ((sub_23F40C38C() & 1) == 0)
    {
      sub_23F40C344();
      v10 = v28;
    }
    v23 = *(_QWORD *)(v10 + 16);
    if (v23 >= *(_QWORD *)(v10 + 24) >> 1)
    {
      sub_23F40C35C();
      v10 = v29;
    }
    *(_QWORD *)(v10 + 16) = v23 + 1;
    v24 = v10 + 24 * v23;
    *(_QWORD *)(v24 + 32) = 0;
    *(_QWORD *)(v24 + 40) = 0xE000000000000000;
    *(_BYTE *)(v24 + 48) = 1;
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_23F40BAE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v2 = a2;
  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_retain();
  if (v6)
  {
    v7 = v2;
LABEL_3:
    v8 = *(_QWORD *)(v7 + 24);
    swift_bridgeObjectRetain_n();
    swift_retain();
    sub_23F61C2A4();
    if (v9)
    {
      do
      {
        while (1)
        {
          v10 = *(_QWORD *)(v4 + 24);
          v11 = HIBYTE(v10) & 0xF;
          if ((v10 & 0x2000000000000000) == 0)
            v11 = *(_QWORD *)(v4 + 16) & 0xFFFFFFFFFFFFLL;
          if (v5 >> 14 != 4 * v11)
            break;
          swift_bridgeObjectRelease();
          sub_23F61C2A4();
          if (!v12)
            goto LABEL_10;
        }
        sub_23F617BA0();
        sub_23F61C334();
        swift_bridgeObjectRelease();
        sub_23F617BA0();
        v5 = sub_23F61C244();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1[1] = v5;
        sub_23F61C2A4();
      }
      while (v13);
    }
LABEL_10:
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = v5;
    while (1)
    {
      v15 = *(_QWORD *)(v4 + 24);
      v16 = HIBYTE(v15) & 0xF;
      if ((v15 & 0x2000000000000000) == 0)
        v16 = *(_QWORD *)(v4 + 16) & 0xFFFFFFFFFFFFLL;
      if (v14 >> 14 == 4 * v16)
        break;
      swift_retain();
      sub_23F617BA0();
      v17 = sub_23F61C334();
      v19 = v18;
      swift_bridgeObjectRelease();
      sub_23F617BA0();
      v14 = sub_23F61C244();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v20 = *(_QWORD *)(v2 + 16);
      if (!*(_QWORD *)(v20 + 16) || (v21 = sub_23F375678(v17, v19), (v22 & 1) == 0))
      {
        swift_release_n();
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      v7 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v21);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release_n();
      v2 = v7;
      if (*(_QWORD *)(v7 + 32))
        goto LABEL_3;
    }
    swift_release();
    swift_release();
    return 0;
  }
  return v8;
}

uint64_t sub_23F40BD78()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*v0 + 24);
  v2 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v2 = *(_QWORD *)(*v0 + 16) & 0xFFFFFFFFFFFFLL;
  if (v0[1] >> 14 == 4 * v2)
    return 0;
  sub_23F617BA0();
  v3 = sub_23F61C334();
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  v4 = sub_23F61C244();
  swift_bridgeObjectRelease();
  v0[1] = v4;
  return v3;
}

uint64_t sub_23F40BE2C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) == 0)
  {
    if ((a6 & 1) == 0)
      __asm { BR              X10 }
    return 0;
  }
  if ((a6 & 1) == 0)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return sub_23F61CC64();
}

uint64_t sub_23F40BF8C(uint64_t a1, uint64_t a2)
{
  return sub_23F40BE2C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

void sub_23F40BFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  v2 = sub_23F61C730();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23F362B80();
}

uint64_t sub_23F40BFFC()
{
  return sub_23F40C0BC(sub_23F40BFA8);
}

uint64_t type metadata accessor for Trie.Node(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F40C13C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Trie.Node);
}

uint64_t sub_23F40C014()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23F40C084()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return v0;
}

uint64_t sub_23F40C0B0()
{
  return sub_23F40C0BC((void (*)(void))sub_23F40C084);
}

uint64_t sub_23F40C0BC(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CopiedByReference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F40C13C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CopiedByReference);
}

uint64_t sub_23F40C0EC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for Trie(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F40C13C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Trie);
}

unint64_t sub_23F40C100()
{
  unint64_t result;

  result = qword_256E72F10;
  if (!qword_256E72F10)
  {
    result = MEMORY[0x242670A44](&unk_23F6227D8, &type metadata for FullPlannerResponseParsingError);
    atomic_store(result, (unint64_t *)&qword_256E72F10);
  }
  return result;
}

uint64_t sub_23F40C13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2426709A8](a1, v6, a5);
}

ValueMetadata *type metadata accessor for ConversationTurnLexer()
{
  return &type metadata for ConversationTurnLexer;
}

uint64_t destroy for ConversationTurnLexer.RoleOrContent(uint64_t a1)
{
  return sub_23F40C18C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_23F40C18C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

void _s30IntelligenceFlowPlannerRuntime21ConversationTurnLexerV13RoleOrContentOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F3F3EB4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23F362B80();
}

uint64_t assignWithCopy for ConversationTurnLexer.RoleOrContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F3F3EB4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23F40C18C(v6, v7, v8);
  return a1;
}

__n128 initializeBufferWithCopyOfBuffer for PromptString.TaggedRange(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ConversationTurnLexer.RoleOrContent(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_23F40C18C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationTurnLexer.RoleOrContent(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConversationTurnLexer.RoleOrContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F40C30C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_23F40C314(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ConversationTurnLexer.RoleOrContent()
{
  return &type metadata for ConversationTurnLexer.RoleOrContent;
}

uint64_t sub_23F40C330()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for TrieMatcher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F40C13C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TrieMatcher);
}

void sub_23F40C344()
{
  sub_23F377BCC();
}

void sub_23F40C35C()
{
  sub_23F377BCC();
}

uint64_t sub_23F40C38C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F40C394()
{
  return 0x6E61747369737361;
}

uint64_t sub_23F40C3A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = type metadata accessor for DateComponentsResolver();
  v2[6] = sub_23F366578();
  v3 = sub_23F619E98();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = sub_23F366578();
  sub_23F35D2E8(&qword_256E72FB8);
  v2[10] = sub_23F366654();
  v2[11] = swift_task_alloc();
  v4 = sub_23F616D00();
  v2[12] = v4;
  v2[13] = *(_QWORD *)(v4 - 8);
  v2[14] = sub_23F366654();
  v2[15] = swift_task_alloc();
  v2[16] = type metadata accessor for NLDateResolver();
  v2[17] = sub_23F366578();
  sub_23F35D2E8(&qword_256E701F0);
  v2[18] = sub_23F366578();
  v2[19] = type metadata accessor for RelativeDateResolver();
  v2[20] = sub_23F366578();
  return sub_23F3B15DC();
}

uint64_t sub_23F40C4A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t (*v9)(uint64_t, uint64_t);
  _QWORD *v10;

  v1 = *(_QWORD **)(v0 + 160);
  v2 = *(uint64_t **)(v0 + 32);
  v3 = *(_DWORD **)(v0 + 40);
  v5 = *v2;
  v4 = v2[1];
  *(_DWORD *)(v0 + 248) = v3[5];
  *(_QWORD *)(v0 + 168) = sub_23F40EBDC();
  sub_23F40EBC8();
  *(_QWORD *)(v0 + 176) = v6;
  sub_23F40EB2C(v6);
  *(_DWORD *)(v0 + 252) = v3[6];
  *(_QWORD *)(v0 + 184) = sub_23F40EBD4();
  sub_23F40EBC8();
  *(_QWORD *)(v0 + 192) = v7;
  sub_23F40EB2C(v7);
  *(_DWORD *)(v0 + 256) = v3[7];
  *(_QWORD *)(v0 + 200) = sub_23F40EB6C();
  sub_23F40EBC8();
  *(_QWORD *)(v0 + 208) = v8;
  sub_23F40EB2C(v8);
  *(_DWORD *)(v0 + 260) = v3[8];
  *(_QWORD *)(v0 + 216) = sub_23F38F984();
  sub_23F40EBC8();
  *(_QWORD *)(v0 + 224) = v9;
  sub_23F40EB2C(v9);
  *v1 = v5;
  v1[1] = v4;
  sub_23F617BA0();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v10;
  *v10 = v0;
  v10[1] = sub_23F40C5D4;
  return sub_23F5708F4(*(_QWORD *)(v0 + 144));
}

uint64_t sub_23F40C5D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return sub_23F3B15DC();
}

uint64_t sub_23F40C630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(char *, char *, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  int *v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = sub_23F61B92C();
  if (sub_23F36195C(v1, 1, v2) == 1)
  {
    v52 = *(_QWORD *)(v0 + 240);
    v49 = *(_QWORD *)(v0 + 216);
    v50 = *(void (**)(char *, char *, uint64_t))(v0 + 224);
    v47 = *(_QWORD *)(v0 + 200);
    v48 = *(void (**)(char *, char *, uint64_t))(v0 + 208);
    v3 = *(void (**)(char *, char *, uint64_t))(v0 + 176);
    v43 = *(_QWORD *)(v0 + 184);
    v44 = *(void (**)(char *, char *, uint64_t))(v0 + 192);
    v4 = *(_QWORD *)(v0 + 168);
    v6 = *(uint64_t **)(v0 + 32);
    v5 = *(_QWORD *)(v0 + 40);
    v45 = (char *)v6 + *(int *)(v0 + 260);
    v7 = *(int **)(v0 + 128);
    v8 = *(char **)(v0 + 136);
    v42 = (char *)v6 + *(int *)(v0 + 256);
    v9 = (char *)v6 + *(int *)(v0 + 252);
    v10 = (char *)v6 + *(int *)(v0 + 248);
    v51 = *(_QWORD *)(v0 + 88);
    sub_23F3B5A28(v1, &qword_256E701F0);
    v11 = v6[1];
    v46 = *v6;
    v3(&v8[v7[5]], v10, v4);
    v44(&v8[v7[6]], v9, v43);
    v48(&v8[v7[7]], v42, v47);
    v50(&v8[v7[8]], v45, v49);
    sub_23F40DEF8((uint64_t)v6 + *(int *)(v5 + 36), (uint64_t)&v8[v7[9]]);
    v12 = *(void **)((char *)v6 + *(int *)(v5 + 40));
    *(_QWORD *)v8 = v46;
    *((_QWORD *)v8 + 1) = v11;
    *(_QWORD *)&v8[v7[10]] = v12;
    v13 = v12;
    sub_23F617BA0();
    sub_23F4A8630(v51);
    if (v52)
    {
      v19 = *(_QWORD *)(v0 + 160);
      v20 = *(_QWORD *)(v0 + 136);
LABEL_11:
      sub_23F3B596C(v20, (uint64_t (*)(_QWORD))type metadata accessor for NLDateResolver);
      sub_23F3B596C(v19, (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateResolver);
      sub_23F40EB74();
      swift_task_dealloc();
      sub_23F3666C4();
      sub_23F3666EC();
      sub_23F366708();
      sub_23F3666E4();
      sub_23F366698();
      sub_23F3666D4();
      swift_task_dealloc();
      v17 = *(uint64_t (**)(void))(v0 + 8);
      return v17();
    }
    v14 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 96);
    if (sub_23F36195C(v14, 1, v15) == 1)
    {
      sub_23F3B5A28(v14, &qword_256E72FB8);
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 120), v14, v15);
      if ((sub_23F40CC34() & 1) == 0)
      {
        v24 = *(_QWORD *)(v0 + 160);
        v25 = *(_QWORD *)(v0 + 136);
        v26 = *(_QWORD *)(v0 + 120);
LABEL_22:
        v40 = *(_QWORD *)(v0 + 96);
        v41 = *(_QWORD *)(v0 + 104);
        sub_23F40CE10(v26, *(uint64_t **)(v0 + 24));
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v26, v40);
        sub_23F3B596C(v25, (uint64_t (*)(_QWORD))type metadata accessor for NLDateResolver);
        sub_23F3B596C(v24, (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateResolver);
        goto LABEL_6;
      }
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
    }
    v18 = *(_QWORD *)(v0 + 80);
    sub_23F617BA0();
    sub_23F40D04C(v18);
    v22 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 80);
    if (sub_23F36195C(v23, 1, v22) == 1)
    {
      sub_23F3B5A28(v23, &qword_256E72FB8);
LABEL_18:
      v27 = *(_QWORD *)(v0 + 48);
      v28 = *(_QWORD *)(v0 + 32);
      sub_23F619094();
      sub_23F40DF40(v28, v27);
      v29 = sub_23F619E8C();
      v30 = sub_23F61C628();
      v31 = os_log_type_enabled(v29, v30);
      v33 = *(_QWORD *)(v0 + 64);
      v32 = *(_QWORD *)(v0 + 72);
      v35 = *(uint64_t **)(v0 + 48);
      v34 = *(_QWORD *)(v0 + 56);
      if (v31)
      {
        v36 = (uint8_t *)swift_slowAlloc();
        v53 = swift_slowAlloc();
        *(_DWORD *)v36 = 136315138;
        v37 = *v35;
        v38 = v35[1];
        sub_23F617BA0();
        sub_23F37AE00(v37, v38, &v53);
        *(_QWORD *)(v0 + 16) = v39;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        sub_23F3B596C((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for DateComponentsResolver);
        _os_log_impl(&dword_23F35A000, v29, v30, "cannot resolve %s to DateComponents", v36, 0xCu);
        swift_arrayDestroy();
        sub_23F366530();
      }
      sub_23F3B596C(*(_QWORD *)(v0 + 48), (uint64_t (*)(_QWORD))type metadata accessor for DateComponentsResolver);

      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
      v19 = *(_QWORD *)(v0 + 160);
      v20 = *(_QWORD *)(v0 + 136);
      type metadata accessor for InterpreterError();
      sub_23F40DF84();
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      goto LABEL_11;
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 112), v23, v22);
    if ((sub_23F40CC34() & 1) != 0)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
      goto LABEL_18;
    }
    v24 = *(_QWORD *)(v0 + 160);
    v25 = *(_QWORD *)(v0 + 136);
    v26 = *(_QWORD *)(v0 + 112);
    goto LABEL_22;
  }
  v16 = *(_QWORD *)(v0 + 24);
  sub_23F3B596C(*(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateResolver);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v16, v1, v2);
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_23F40CBA4()
{
  uint64_t v0;

  sub_23F3B596C(*(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateResolver);
  sub_23F40EB74();
  swift_task_dealloc();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F40CC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char v15;
  char v16;
  int v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v28;

  v0 = sub_23F616D00();
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v1);
  v6 = (char *)&v28 - v5;
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v28 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v28 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v28 - v13;
  sub_23F616C7C();
  v16 = v15;
  sub_23F40EA8C((uint64_t)v14);
  if ((v16 & 1) != 0)
  {
    sub_23F616C94();
    v17 = v18 & 1;
  }
  else
  {
    v17 = 0;
  }
  sub_23F40EB24((uint64_t)v14);
  sub_23F40EA8C((uint64_t)v12);
  if (!v17)
  {
    sub_23F40EB24((uint64_t)v12);
    sub_23F40EA8C((uint64_t)v9);
    goto LABEL_10;
  }
  sub_23F616C40();
  v20 = v19;
  sub_23F40EB24((uint64_t)v12);
  sub_23F40EA8C((uint64_t)v9);
  if ((v20 & 1) == 0)
  {
LABEL_10:
    sub_23F40EB24((uint64_t)v9);
    sub_23F40EA8C((uint64_t)v6);
    goto LABEL_11;
  }
  sub_23F616C64();
  v22 = v21;
  sub_23F40EB24((uint64_t)v9);
  sub_23F40EA8C((uint64_t)v6);
  if ((v22 & 1) == 0)
  {
LABEL_11:
    sub_23F40EB24((uint64_t)v6);
    sub_23F40EA8C((uint64_t)v3);
    goto LABEL_12;
  }
  sub_23F616CAC();
  v24 = v23;
  sub_23F40EB24((uint64_t)v6);
  sub_23F40EA8C((uint64_t)v3);
  if ((v24 & 1) == 0)
  {
LABEL_12:
    v26 = 0;
    goto LABEL_13;
  }
  sub_23F616CC4();
  v26 = v25 & 1;
LABEL_13:
  sub_23F40EB24((uint64_t)v3);
  return v26;
}

uint64_t sub_23F40CE10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t *v26;

  v26 = a2;
  v3 = sub_23F35D2E8(&qword_256E72FC8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61BAC4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F616D00();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v25 - v15, a1, v10);
  type metadata accessor for DateComponentsResolver();
  sub_23F4DD248((uint64_t)v5);
  if (sub_23F36195C((uint64_t)v5, 1, v6) == 1)
  {
    sub_23F3B5A28((uint64_t)v5, &qword_256E72FC8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    sub_23F40D170((uint64_t)v9, (uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v14, v10);
  }
  v17 = sub_23F61B8A8();
  v18 = swift_allocBox();
  v20 = v19;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v19, v16, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v20, *MEMORY[0x24BEB9900], v17);
  v21 = v26;
  *v26 = v18;
  v22 = *MEMORY[0x24BEB9A00];
  v23 = sub_23F61B92C();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v21, v22, v23);
}

uint64_t sub_23F40D04C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  sub_23F35D2E8(&qword_256E72FB8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3842E4();
  v5 = sub_23F61B038();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F383EC4();
  sub_23F61B044();
  sub_23F40D4A0(v2);
  if (v1)
    return sub_23F40EBB8();
  sub_23F40EBB8();
  v7 = sub_23F616D00();
  if (sub_23F36195C(v2, 1, v7))
  {
    sub_23F3B5A28(v2, &qword_256E72FB8);
    v8 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, v2, v7);
    v8 = 0;
  }
  return sub_23F36196C(a1, v8, 1, v7);
}

uint64_t sub_23F40D170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;

  sub_23F35D2E8(&qword_256E72FA0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E72FA8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3842E4();
  v9 = sub_23F61BAC4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F383EC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v2, a1, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88))(v2, v9);
  if (v11 == *MEMORY[0x24BEBA0D8])
  {
    v12 = sub_23F40EB1C();
    v15 = sub_23F40EAFC(v12, v13, v14, v12);
    sub_23F36196C((uint64_t)v7, 1, 1, v15);
    v16 = sub_23F616C64();
    v18 = v17 & 1;
    v19 = sub_23F616CAC();
    v21 = v20 & 1;
    sub_23F616CC4();
    sub_23F40EA98();
    LOBYTE(v45) = v22;
    v44 = v23;
    LOBYTE(v43) = v21;
    v42 = v19;
    LOBYTE(v41) = v18;
    v40 = v16;
    LOBYTE(v39) = 1;
    v38 = 0;
    sub_23F40EB58();
    return sub_23F616CF4();
  }
  v24 = v11;
  if (v11 == *MEMORY[0x24BEBA0D0])
  {
    v25 = sub_23F40EB1C();
    v28 = sub_23F40EAFC(v25, v26, v27, v25);
    sub_23F40EB88(v28);
    sub_23F616C94();
    sub_23F616C40();
    sub_23F40EA58();
    sub_23F40EB58();
    return sub_23F616CF4();
  }
  v47 = *MEMORY[0x24BEBA0C8];
  v30 = sub_23F40EB1C();
  v46 = a2;
  v33 = sub_23F40EAFC(v30, v31, v32, v30);
  v45 = sub_23F40EB88(v33);
  HIDWORD(v44) = v34 & 1;
  v43 = sub_23F616C94();
  HIDWORD(v42) = v35 & 1;
  v41 = sub_23F616C40();
  HIDWORD(v40) = v36 & 1;
  v39 = sub_23F616C64();
  HIDWORD(v38) = v37 & 1;
  sub_23F616CAC();
  sub_23F616CC4();
  sub_23F40EB58();
  result = sub_23F616CF4();
  if (v24 != v47)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v2, v9);
  return result;
}

uint64_t sub_23F40D4A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t **v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  unsigned int (*v32)(uint64_t **, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *, uint64_t);
  uint64_t *v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  char *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char *v53;
  void *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char v84;
  uint64_t v85;
  void *v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v104 = a1;
  sub_23F35D2E8(&qword_256E72FA0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F36285C();
  v97 = v2;
  sub_23F35D2E8(&qword_256E72FA8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v94 = v4;
  v5 = sub_23F619E98();
  v101 = *(_QWORD *)(v5 - 8);
  v102 = v5;
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3834D0();
  v99 = v6;
  MEMORY[0x24BDAC7A8](v7);
  v100 = (char *)&v92 - v8;
  sub_23F35D2E8(&qword_256E702A0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3834D0();
  v105 = v10;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v92 - v12;
  v14 = sub_23F61B02C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3834D0();
  v98 = v16;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v92 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (uint64_t **)((char *)&v92 - v21);
  v103 = sub_23F616D00();
  v96 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  sub_23F36285C();
  v95 = v23;
  sub_23F61B020();
  sub_23F40EB38();
  v24 = v106;
  sub_23F374608(v25, v26, v27, v28, v29);
  result = sub_23F3B5A28((uint64_t)v13, &qword_256E702A0);
  if (!v24)
  {
    v31 = v105;
    v93 = v20;
    v106 = 0;
    v32 = *(unsigned int (**)(uint64_t **, uint64_t))(v15 + 88);
    if (v32(v22, v14) != *MEMORY[0x24BE56640])
    {
      (*(void (**)(uint64_t **, uint64_t))(v15 + 8))(v22, v14);
      v53 = v100;
      sub_23F619094();
      v54 = (void *)sub_23F619E8C();
      v55 = sub_23F61C628();
      if (sub_23F40B304(v55))
      {
        *(_WORD *)sub_23F3EEE70() = 0;
        sub_23F40B33C(&dword_23F35A000, v56, v57, "Unable to parse duration due to unexpected tokens in statement");
        sub_23F40EBA8();
      }

      (*(void (**)(char *, uint64_t))(v101 + 8))(v53, v102);
      goto LABEL_14;
    }
    v100 = *(char **)(v15 + 96);
    ((void (*)(uint64_t **, uint64_t))v100)(v22, v14);
    v92 = *v22;
    v33 = v31;
    v34 = v14;
    v35 = v15;
    sub_23F61B020();
    v36 = v93;
    sub_23F40EB38();
    v37 = v106;
    sub_23F374608(v38, v39, v40, v41, v42);
    result = sub_23F3B5A28(v33, &qword_256E702A0);
    if (v37)
      return result;
    v43 = (void (*)(uint64_t *, uint64_t))v100;
    v44 = v92;
    v45 = v35;
    v106 = 0;
    v46 = v32((uint64_t **)v36, v34);
    v47 = v34;
    v48 = v36;
    if (v46 == *MEMORY[0x24BE56648])
    {
      v49 = v98;
      (*(void (**)(uint64_t *, char *, uint64_t))(v45 + 16))(v98, v36, v34);
      v105 = v34;
      v43(v49, v34);
      v51 = *v49;
      v50 = v49[1];
      if (v51 == 1937334628 && v50 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      if ((sub_23F40EA48() & 1) != 0)
      {
        sub_23F362984();
LABEL_18:
        v61 = sub_23F40EB1C();
        v62 = sub_23F40E9A4(v61);
        sub_23F36196C(v97, 1, 1, v62);
        sub_23F40EA58();
LABEL_26:
        sub_23F40EAD8();
LABEL_27:
        sub_23F616CF4();
        v60 = v103;
        v59 = v104;
LABEL_28:
        v66 = v96;
        (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v105);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v59, v47, v60);
        v58 = 0;
        return sub_23F36196C(v59, v58, 1, v60);
      }
      v63 = v51 == 0x736B656577 && v50 == 0xE500000000000000;
      if (v63 || (sub_23F40EA48() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v64 = sub_23F40EB1C();
        v65 = sub_23F40E9A4(v64);
        sub_23F36196C(v97, 1, 1, v65);
LABEL_25:
        sub_23F40EA58();
        goto LABEL_26;
      }
      v67 = v51 == 0x7368746E6F6DLL && v50 == 0xE600000000000000;
      if (v67
        || (sub_23F40EA48() & 1) != 0
        || (v51 == 0x7372616579 ? (v70 = v50 == 0xE500000000000000) : (v70 = 0), v70 || (sub_23F40EA48() & 1) != 0))
      {
        swift_bridgeObjectRelease();
        v68 = sub_23F40EB1C();
        v69 = sub_23F40E9A4(v68);
        sub_23F36196C(v97, 1, 1, v69);
        sub_23F40E9D0();
        goto LABEL_27;
      }
      if (v51 == 0x7372756F68 && v50 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
      if ((sub_23F40EA48() & 1) != 0)
      {
        sub_23F362984();
        v48 = v93;
LABEL_48:
        v72 = sub_23F40EB1C();
        v73 = sub_23F40E9A4(v72);
        sub_23F36196C(v97, 1, 1, v73);
        goto LABEL_26;
      }
      v74 = v51 == 0x736574756E696DLL && v50 == 0xE700000000000000;
      if (v74 || (sub_23F40EA48() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v75 = sub_23F40EB1C();
        v76 = sub_23F40E9A4(v75);
        sub_23F36196C(v97, 1, 1, v76);
LABEL_62:
        LOBYTE(v95) = 0;
        v94 = 0;
        LOBYTE(v93) = 0;
        v92 = 0;
        sub_23F40EAD8();
        sub_23F616CF4();
        v60 = v103;
        v59 = v104;
        v48 = v93;
        goto LABEL_28;
      }
      v77 = v51 == 0x73646E6F636573 && v50 == 0xE700000000000000;
      if (v77 || (sub_23F40EA48() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v78 = sub_23F40EB1C();
        v79 = sub_23F40E9A4(v78);
        sub_23F36196C(v97, 1, 1, v79);
        sub_23F40EA98();
        LOBYTE(v99) = 0;
        v98 = v44;
LABEL_61:
        LOBYTE(v97) = 0;
        v96 = 0;
        goto LABEL_62;
      }
      v80 = v51 == 0x6F6365736F6E616ELL && v50 == 0xEB0000000073646ELL;
      if (v80 || (sub_23F40EA48() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v81 = sub_23F40EB1C();
        v82 = sub_23F40E9A4(v81);
        sub_23F36196C(v97, 1, 1, v82);
        goto LABEL_61;
      }
      if (v51 == 0x7372657472617571 && v50 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        v48 = v93;
      }
      else
      {
        v84 = sub_23F40EA48();
        sub_23F362984();
        v47 = v105;
        v48 = v93;
        if ((v84 & 1) == 0)
          goto LABEL_74;
      }
      v90 = sub_23F40EB1C();
      v91 = sub_23F40E9A4(v90);
      sub_23F36196C(v97, 1, 1, v91);
      goto LABEL_25;
    }
LABEL_74:
    v85 = v99;
    sub_23F619094();
    v86 = (void *)sub_23F619E8C();
    v87 = sub_23F61C628();
    if (sub_23F40B304(v87))
    {
      *(_WORD *)sub_23F3EEE70() = 0;
      sub_23F40B33C(&dword_23F35A000, v88, v89, "Unable to parse duration due to unexpected tokens in statement");
      sub_23F40EBA8();
    }

    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v85, v102);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v47);
LABEL_14:
    v58 = 1;
    v60 = v103;
    v59 = v104;
    return sub_23F36196C(v59, v58, 1, v60);
  }
  return result;
}

uint64_t type metadata accessor for DateComponentsResolver()
{
  uint64_t result;

  result = qword_256E73028;
  if (!qword_256E73028)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F40DEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E72FC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F40DF40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DateComponentsResolver();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F40DF84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E6FB48;
  if (!qword_256E6FB48)
  {
    v1 = type metadata accessor for InterpreterError();
    result = MEMORY[0x242670A44](&protocol conformance descriptor for InterpreterError, v1);
    atomic_store(result, (unint64_t *)&qword_256E6FB48);
  }
  return result;
}

uint64_t *sub_23F40DFC4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  void *v33;
  id v34;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F61BBA8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_23F617BA0();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23F616FC4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_23F617198();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[8];
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_23F6170CC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    v25 = a3[9];
    v26 = (char *)v4 + v25;
    v27 = (char *)a2 + v25;
    v28 = *(uint64_t *)((char *)a2 + v25 + 24);
    if (v28)
    {
      v29 = *((_QWORD *)v27 + 4);
      *((_QWORD *)v26 + 3) = v28;
      *((_QWORD *)v26 + 4) = v29;
      (**(void (***)(void))(v28 - 8))();
    }
    else
    {
      v31 = *((_OWORD *)v27 + 1);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v31;
      *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
    }
    v32 = a3[10];
    v33 = *(void **)((char *)a2 + v32);
    *(uint64_t *)((char *)v4 + v32) = (uint64_t)v33;
    v34 = v33;
  }
  return v4;
}

void sub_23F40E140(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  v9 = sub_23F617198();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[8];
  v11 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = a1 + a2[9];
  if (*(_QWORD *)(v12 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v12);

}

_QWORD *sub_23F40E21C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  void *v31;
  id v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F61BBA8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_23F617BA0();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23F616FC4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_23F617198();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  v24 = a3[9];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)((char *)a2 + v24 + 24);
  if (v27)
  {
    v28 = *((_QWORD *)v26 + 4);
    *((_QWORD *)v25 + 3) = v27;
    *((_QWORD *)v25 + 4) = v28;
    (**(void (***)(void))(v27 - 8))();
  }
  else
  {
    v29 = *((_OWORD *)v26 + 1);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v29;
    *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
  }
  v30 = a3[10];
  v31 = *(void **)((char *)a2 + v30);
  *(_QWORD *)((char *)a1 + v30) = v31;
  v32 = v31;
  return a1;
}

_QWORD *sub_23F40E36C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F61BBA8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23F616FC4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23F617198();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  v22 = a3[9];
  v23 = (uint64_t)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(_QWORD *)((char *)a2 + v22 + 24);
  if (!*(_QWORD *)((char *)a1 + v22 + 24))
  {
    if (v25)
    {
      *(_QWORD *)(v23 + 24) = v25;
      *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
      (**(void (***)(uint64_t, char *))(v25 - 8))(v23, v24);
      goto LABEL_8;
    }
LABEL_7:
    v26 = *(_OWORD *)v24;
    v27 = *((_OWORD *)v24 + 1);
    *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
    *(_OWORD *)v23 = v26;
    *(_OWORD *)(v23 + 16) = v27;
    goto LABEL_8;
  }
  if (!v25)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v23);
    goto LABEL_7;
  }
  sub_23F361AD0((uint64_t *)v23, (uint64_t *)v24);
LABEL_8:
  v28 = a3[10];
  v29 = *(void **)((char *)a1 + v28);
  v30 = *(void **)((char *)a2 + v28);
  *(_QWORD *)((char *)a1 + v28) = v30;
  v31 = v30;

  return a1;
}

_OWORD *sub_23F40E4F8(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F61BBA8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23F616FC4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23F617198();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  v22 = a3[9];
  v23 = a3[10];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);
  return a1;
}

_QWORD *sub_23F40E60C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  void *v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F61BBA8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23F616FC4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23F617198();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = (char *)a1 + v23;
  if (*(_QWORD *)((char *)a1 + v23 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1 + v23);
  v25 = *(_OWORD *)((char *)a2 + v23 + 16);
  *(_OWORD *)v24 = *(_OWORD *)((char *)a2 + v23);
  *((_OWORD *)v24 + 1) = v25;
  *((_QWORD *)v24 + 4) = *(_QWORD *)((char *)a2 + v23 + 32);
  v26 = a3[10];
  v27 = *(void **)((char *)a1 + v26);
  *(_QWORD *)((char *)a1 + v26) = *(_QWORD *)((char *)a2 + v26);

  return a1;
}

uint64_t sub_23F40E744()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F40E750(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_23F40EBDC();
    sub_23F3F9C58();
    if (v11)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      sub_23F40EBD4();
      sub_23F3F9C58();
      if (v11)
      {
        v9 = v12;
        v10 = a3[6];
      }
      else
      {
        sub_23F40EB6C();
        sub_23F3F9C58();
        if (v13)
        {
          v9 = v14;
          v10 = a3[7];
        }
        else
        {
          v9 = sub_23F38F984();
          v10 = a3[8];
        }
      }
    }
    return sub_23F36195C(a1 + v10, a2, v9);
  }
}

uint64_t sub_23F40E808()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F40E814(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_23F40EBDC();
    sub_23F3F9C68();
    if (v10)
    {
      v8 = v7;
      v9 = a4[5];
    }
    else
    {
      sub_23F40EBD4();
      sub_23F3F9C68();
      if (v10)
      {
        v8 = v11;
        v9 = a4[6];
      }
      else
      {
        sub_23F40EB6C();
        sub_23F3F9C68();
        if (v12)
        {
          v8 = v13;
          v9 = a4[7];
        }
        else
        {
          v8 = sub_23F38F984();
          v9 = a4[8];
        }
      }
    }
    return sub_23F36196C(v5 + v9, a2, a2, v8);
  }
  return result;
}

uint64_t sub_23F40E8C8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = sub_23F61BBA8();
  if (v1 <= 0x3F)
  {
    result = sub_23F616FC4();
    if (v2 <= 0x3F)
    {
      result = sub_23F617198();
      if (v3 <= 0x3F)
      {
        result = sub_23F6170CC();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_23F40E9A4(uint64_t a1)
{
  uint64_t v1;

  sub_23F36196C(*(_QWORD *)(v1 - 176), 1, 1, a1);
  return sub_23F617198();
}

uint64_t sub_23F40E9D0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F40EA48()
{
  return sub_23F61CC64();
}

uint64_t sub_23F40EA8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t sub_23F40EAD8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F40EAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_23F36196C(v4, 1, 1, a4);
  return sub_23F617198();
}

uint64_t sub_23F40EB1C()
{
  return sub_23F617150();
}

uint64_t sub_23F40EB24(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F40EB2C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F40EB58()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F40EB6C()
{
  return sub_23F617198();
}

uint64_t sub_23F40EB74()
{
  return swift_task_dealloc();
}

uint64_t sub_23F40EB88(uint64_t a1)
{
  uint64_t v1;

  sub_23F36196C(v1, 1, 1, a1);
  return sub_23F616C7C();
}

void sub_23F40EBA8()
{
  JUMPOUT(0x242670B70);
}

uint64_t sub_23F40EBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F40EBD4()
{
  return sub_23F616FC4();
}

uint64_t sub_23F40EBDC()
{
  return sub_23F61BBA8();
}

uint64_t sub_23F40EBE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = sub_23F35D2E8(&qword_256E702C8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v17 - v6;
  v8 = sub_23F61B938();
  sub_23F36FE84(v8, (uint64_t)v7);
  swift_bridgeObjectRelease();
  v9 = sub_23F61B9EC();
  if (sub_23F36195C((uint64_t)v7, 1, v9) == 1)
    goto LABEL_8;
  sub_23F40EDAC((uint64_t)v7, (uint64_t)v5);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v5, v9) != *MEMORY[0x24BEB9D18])
  {
    sub_23F3B1DF8((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
LABEL_8:
    v15 = sub_23F61B9BC();
    sub_23F36196C(a1, 1, 1, v15);
    return sub_23F40F810((uint64_t)v7, &qword_256E702C8);
  }
  sub_23F3B1DF8((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 96));
  v11 = sub_23F61B9BC();
  v12 = swift_projectBox();
  v13 = *(_QWORD *)(v11 - 8);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 88))(v12, v11);
  if ((_DWORD)v14 != *MEMORY[0x24BEB9C98] && (_DWORD)v14 != *MEMORY[0x24BEB9C60])
  {
    swift_release();
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 104))(a1, v14, v11);
  sub_23F36196C(a1, 0, 1, v11);
  swift_release();
  return sub_23F40F810((uint64_t)v7, &qword_256E702C8);
}

uint64_t sub_23F40EDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E702C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F40EDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[12] = a5;
  v6[13] = a6;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  sub_23F35D2E8(&qword_256E6FAA0);
  v6[14] = sub_23F3666CC();
  v6[15] = sub_23F3666CC();
  v6[16] = sub_23F3666CC();
  v7 = sub_23F6170B4();
  v6[17] = v7;
  v6[18] = *(_QWORD *)(v7 - 8);
  v6[19] = sub_23F366578();
  sub_23F35D2E8(&qword_256E71D18);
  v6[20] = sub_23F366578();
  return swift_task_switch();
}

uint64_t sub_23F40EEC8()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v2 = v0[9];
  v1 = v0[10];
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2B378]), sel_initWithScannerType_passiveIntent_, 2, 0);
  v4 = v3;
  v5 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v5 = v2;
  v6 = 7;
  if (((v1 >> 60) & ((v2 & 0x800000000000000) == 0)) != 0)
    v6 = 11;
  v0[2] = 15;
  v0[21] = v3;
  v0[3] = v6 | (v5 << 16);
  v0[4] = v2;
  v0[5] = v1;
  sub_23F617BA0();
  sub_23F35D2E8(&qword_256E73080);
  sub_23F40F558();
  sub_23F38813C();
  v7 = sub_23F61C6E8();
  v9 = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[22] = v10;
  v10[2] = v2;
  v10[3] = v1;
  v10[4] = v7;
  v10[5] = v9;
  v10[6] = v4;
  v11 = (_QWORD *)swift_task_alloc();
  v0[23] = v11;
  sub_23F35D2E8(&qword_256E73090);
  *v11 = v0;
  v11[1] = sub_23F40F074;
  return sub_23F61CC28();
}

uint64_t sub_23F40F074()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23F40F110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  void (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 48);
  sub_23F6170C0();
  sub_23F6170A8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  v6 = sub_23F617048();
  v7 = sub_23F36195C(v2, 1, v6);
  v8 = *(_QWORD *)(v0 + 160);
  if (v7 == 1)
  {
    sub_23F40F810(*(_QWORD *)(v0 + 160), &qword_256E71D18);
    v9 = 0;
  }
  else
  {
    sub_23F61703C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v8, v6);
    v9 = (void *)sub_23F61C0E8();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(*(id *)(v0 + 168), sel_setLanguage_, v9);

  sub_23F3E3708((uint64_t)&unk_250FD0E88);
  v11 = v10;
  if (v5 >> 62)
    goto LABEL_23;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v12)
  {
    v13 = 0;
    v51 = v12;
    v52 = v5 & 0xC000000000000001;
    v49 = v11;
    v50 = v5;
    while (1)
    {
      v14 = v52 ? (id)MEMORY[0x24266FE14](v13, v5) : *(id *)(v5 + 8 * v13 + 32);
      v15 = v14;
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        break;
      v17 = objc_msgSend(v14, sel_type);
      v18 = sub_23F61C10C();
      v20 = v19;

      sub_23F3E2B58(v18, v20, v11);
      LOBYTE(v17) = v21;
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
      {
        *(_BYTE *)(v0 + 192) = 0;
        v22 = (void *)sub_23F616F58();
        v23 = (void *)sub_23F617180();
        *(_QWORD *)(v0 + 56) = 0;
        v24 = objc_msgSend(v15, sel_dateFromReferenceDate_referenceTimezone_timezoneRef_allDayRef_, v22, v23, v0 + 56, v0 + 192);

        v25 = *(void **)(v0 + 56);
        if (v24)
        {
          sub_23F616F94();
          v26 = v25;

          v27 = 0;
        }
        else
        {
          v28 = v25;
          v27 = 1;
        }
        v30 = *(_QWORD *)(v0 + 120);
        v29 = *(_QWORD *)(v0 + 128);
        v31 = *(_QWORD *)(v0 + 112);

        v32 = sub_23F616FC4();
        sub_23F3E26A0(v30, v27);
        sub_23F40F7C8(v30, v29);
        sub_23F40F7C8(v29, v31);
        if (sub_23F36195C(v31, 1, v32) != 1)
        {
          v41 = *(_QWORD *)(v0 + 104);
          v40 = *(_QWORD *)(v0 + 112);
          v43 = *(_QWORD *)(v0 + 88);
          v42 = *(_QWORD *)(v0 + 96);
          v44 = *(_QWORD *)(v0 + 64);

          swift_bridgeObjectRelease();
          sub_23F6170CC();
          sub_23F40F93C();
          v45(v41);
          sub_23F617198();
          sub_23F40F93C();
          v46(v42);
          v47 = *(_QWORD *)(v32 - 8);
          sub_23F3B1DF8(v43, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v44, v40, v32);

          v39 = 0;
          goto LABEL_21;
        }
        sub_23F40F810(*(_QWORD *)(v0 + 112), &qword_256E6FAA0);
        v11 = v49;
        v5 = v50;
      }
      else
      {
        v25 = v15;
      }

      ++v13;
      if (v16 == v51)
        goto LABEL_19;
    }
    __break(1u);
LABEL_23:
    sub_23F617BA0();
    v12 = sub_23F61CA6C();
    swift_bridgeObjectRelease();
  }
LABEL_19:
  v34 = *(_QWORD *)(v0 + 96);
  v33 = *(_QWORD *)(v0 + 104);
  v35 = *(_QWORD *)(v0 + 88);

  swift_bridgeObjectRelease();
  sub_23F6170CC();
  sub_23F40F93C();
  v36(v33);
  sub_23F617198();
  sub_23F40F93C();
  v37(v34);
  v38 = sub_23F616FC4();
  sub_23F3B1DF8(v35, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8));
  swift_bridgeObjectRelease();
  v39 = 1;
LABEL_21:
  sub_23F3E26A0(*(_QWORD *)(v0 + 64), v39);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_23F40F558()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E73088;
  if (!qword_256E73088)
  {
    v1 = sub_23F35EB74(&qword_256E73080);
    result = MEMORY[0x242670A44](MEMORY[0x24BEE1BC0], v1);
    atomic_store(result, (unint64_t *)&qword_256E73088);
  }
  return result;
}

void sub_23F40F59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v18 = a6;
  v9 = sub_23F35D2E8(&qword_256E73098);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (void *)objc_opt_self();
  v13 = (void *)sub_23F61C0E8();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_23F40F8A8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23F40F76C;
  aBlock[3] = &unk_250FD5220;
  v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v12, sel_scanString_range_configuration_completionBlock_, v13, a4, a5, v18, v16);
  _Block_release(v16);

}

void sub_23F40F718(uint64_t a1)
{
  uint64_t *v1;

  sub_23F40F59C(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_23F40F728()
{
  sub_23F617BA0();
  sub_23F35D2E8(&qword_256E73098);
  return sub_23F61C448();
}

uint64_t sub_23F40F76C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_23F40F900();
  v2 = sub_23F61C3DC();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F40F7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F40F810(uint64_t a1, uint64_t *a2)
{
  void (*v3)(uint64_t);

  sub_23F35D2E8(a2);
  sub_23F40F93C();
  v3(a1);
  return a1;
}

uint64_t sub_23F40F844()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F35D2E8(&qword_256E73098);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23F40F8A8()
{
  sub_23F35D2E8(&qword_256E73098);
  return sub_23F40F728();
}

uint64_t sub_23F40F8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23F40F8F8()
{
  return swift_release();
}

unint64_t sub_23F40F900()
{
  unint64_t result;

  result = qword_256E730A0;
  if (!qword_256E730A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E730A0);
  }
  return result;
}

void *sub_23F40F94C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  NSObject *v40;
  os_signpost_type_t v41;
  uint8_t *v42;
  os_signpost_id_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  void *v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115[3];

  v94 = sub_23F616DCC();
  v93 = *(_QWORD *)(v94 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F36285C();
  v92 = v1;
  sub_23F39C56C();
  v2 = sub_23F619E98();
  v100 = *(_QWORD *)(v2 - 8);
  v101 = v2;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3834D0();
  v91 = v4;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F383780();
  v99 = v6;
  sub_23F35D2E8(&qword_256E70760);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v110 = v8;
  sub_23F39C56C();
  v113 = sub_23F616E68();
  v98 = *(_QWORD *)(v113 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3834D0();
  v90 = v10;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v11);
  v96 = (char *)&v90 - v12;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F383780();
  v97 = v14;
  sub_23F39C56C();
  v15 = sub_23F619F04();
  v108 = *(_QWORD *)(v15 - 8);
  v109 = v15;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  v107 = v17;
  sub_23F39C56C();
  v18 = sub_23F61A15C();
  v105 = *(_QWORD *)(v18 - 8);
  v106 = v18;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F35D2E8(&qword_256E730C8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F362AAC();
  v23 = v21 - v22;
  MEMORY[0x24BDAC7A8](v24);
  sub_23F383780();
  v112 = v25;
  sub_23F39C56C();
  v26 = sub_23F6170CC();
  v103 = *(_QWORD *)(v26 - 8);
  v104 = v26;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F3834D0();
  v95 = v28;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F383780();
  v111 = v30;
  sub_23F39C56C();
  v31 = sub_23F619E20();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  sub_23F362AAC();
  v35 = v33 - v34;
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v90 - v37;
  if (qword_256E6F080 != -1)
    swift_once();
  v39 = sub_23F619E44();
  sub_23F361498(v39, (uint64_t)qword_256E80338);
  sub_23F619E38();
  sub_23F619DFC();
  v40 = sub_23F619E38();
  v41 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v42 = (uint8_t *)sub_23F3EEE70();
    *(_WORD *)v42 = 0;
    v43 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v40, v41, v43, "DataDetectors.init", "", v42, 2u);
    sub_23F366530();
  }

  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v35, v38, v31);
  sub_23F619E74();
  sub_23F3668A0();
  v44 = sub_23F619E68();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v38, v31);
  sub_23F617948();
  v45 = sub_23F617930();
  if (!v45)
    v45 = sub_23F61793C();
  v46 = v112;
  v102 = v45;
  sub_23F617924();
  sub_23F617954();
  sub_23F366748();
  sub_23F61A150();
  v47 = v107;
  v48 = v108;
  v49 = v109;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v108 + 104))(v107, *MEMORY[0x24BE54B50], v109);
  sub_23F617018();
  sub_23F61A144();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
  sub_23F411514(v105);
  sub_23F4112B0(v46, v23);
  v50 = sub_23F61B38C();
  if (sub_23F36195C(v23, 1, (uint64_t)v50) == 1)
  {
    sub_23F39E4B8(v23, &qword_256E730C8);
    v51 = v110;
    sub_23F36196C(v110, 1, 1, v113);
LABEL_10:
    sub_23F39E4B8(v51, &qword_256E70760);
    v53 = v99;
    sub_23F619094();
    sub_23F619E8C();
    v54 = sub_23F40B504();
    if (sub_23F40B304(v54))
    {
      v55 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v55 = 0;
      sub_23F4114BC(&dword_23F35A000, v50, v53, "No location url present on device for data detectors", v55);
      sub_23F366530();
    }

    sub_23F4114F8();
    v56 = sub_23F411514(v100);
    sub_23F411534(v56, &qword_256E730C8);
    sub_23F4114AC();
    goto LABEL_13;
  }
  v51 = v110;
  sub_23F61B380();
  (*((void (**)(uint64_t, NSObject *))v50[-1].isa + 1))(v23, v50);
  v52 = v113;
  if (sub_23F36195C(v51, 1, v113) == 1)
    goto LABEL_10;
  v109 = v44;
  v59 = v97;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 32))(v97, v51, v52);
  strcpy((char *)v115, "data_detectors");
  HIBYTE(v115[1]) = -18;
  v60 = v93;
  v61 = v92;
  v62 = v94;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v93 + 104))(v92, *MEMORY[0x24BDCD7A0], v94);
  sub_23F38813C();
  v63 = (uint64_t)v96;
  sub_23F616E44();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v62);
  swift_bridgeObjectRelease();
  v64 = sub_23F616E20();
  v66 = v65;
  v67 = v95;
  sub_23F61709C();
  v68 = objc_allocWithZone(MEMORY[0x24BE9E3F8]);
  v69 = sub_23F4111EC(v64, v66, v67);
  if (v69)
  {
    v57 = v69;
    sub_23F4114F8();
    v70 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
    v71 = v113;
    v70(v63, v113);
    v72 = ((uint64_t (*)(uint64_t, uint64_t))v70)(v59, v71);
    sub_23F411534(v72, &qword_256E730C8);
    sub_23F4114AC();
    v73 = v57;
    sub_23F41029C();

    goto LABEL_14;
  }
  v74 = v91;
  sub_23F619094();
  v75 = v90;
  v76 = v113;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16))(v90, v63, v113);
  sub_23F619E8C();
  v77 = sub_23F40B504();
  if (sub_23F411520(0x7465645F61746164))
  {
    v78 = v75;
    v79 = sub_23F366668();
    v110 = sub_23F366668();
    v115[0] = v110;
    *(_DWORD *)v79 = 136315394;
    sub_23F3612C0((unint64_t *)&qword_256E730D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v80 = sub_23F61CC1C();
    sub_23F37AE00(v80, v81, v115);
    v114 = v82;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v108 = *(_QWORD *)(v98 + 8);
    ((void (*)(uint64_t, uint64_t))v108)(v78, v76);
    *(_WORD *)(v79 + 12) = 2080;
    v83 = v95;
    sub_23F61709C();
    sub_23F3612C0(qword_256E730D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEF0]);
    v84 = v104;
    v85 = sub_23F61CC1C();
    v87 = v86;
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v83, v84);
    sub_23F37AE00(v85, v87, v115);
    v114 = v88;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F35A000, (os_log_t)0x7465645F61746164, v77, "missing data detectors for %s and %s", (uint8_t *)v79, 0x16u);
    swift_arrayDestroy();
    sub_23F366530();
  }

  sub_23F4114F8();
  sub_23F41150C(v75);
  (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v74, v101);
  sub_23F41150C(v63);
  v89 = sub_23F41150C(v59);
  sub_23F411534(v89, &qword_256E730C8);
  sub_23F4114AC();
LABEL_13:
  sub_23F41029C();
  v57 = 0;
LABEL_14:
  swift_release();
  return v57;
}

uint64_t sub_23F41029C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  NSObject *v12;
  char v13;
  char v14;
  const char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_signpost_id_t v22;
  void (*v23)(_BYTE *, uint64_t);
  _BYTE v24[12];
  int v25;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_23F619E50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_23F619E20();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v24[-v9];
  if (qword_256E6F080 != -1)
    swift_once();
  v11 = sub_23F619E44();
  sub_23F361498(v11, (uint64_t)qword_256E80338);
  v12 = sub_23F619E38();
  sub_23F619E5C();
  v25 = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v1 + 88))(v3, v0) == *MEMORY[0x24BEE7810])
    {
      v13 = 0;
      v14 = 0;
      v15 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
      v15 = "%s";
      v14 = 2;
      v13 = 1;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v8, v10, v4);
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v27 = v18;
    *(_BYTE *)v17 = v14;
    *(_BYTE *)(v17 + 1) = v13;
    *(_WORD *)(v17 + 2) = 2080;
    v19 = sub_23F61C8F8();
    sub_23F37AE00(v19, v20, &v27);
    v26 = v21;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v22 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v12, (os_signpost_type_t)v25, v22, "DataDetectors.init", v15, (uint8_t *)v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v18, -1, -1);
    MEMORY[0x242670B70](v17, -1, -1);

    v23 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v23(v10, v4);
    return ((uint64_t (*)(_BYTE *, uint64_t))v23)(v8, v4);
  }
  else
  {

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
  }
}

uint64_t sub_23F41057C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _OWORD v18[2];
  id v19;

  v4 = (void *)sub_23F61C0E8();
  v5 = objc_msgSend(a3, sel_matchSpansForUtterance_, v4);

  sub_23F411274();
  v6 = sub_23F61C3DC();

  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_23F617BA0();
    if (v7)
      goto LABEL_3;
LABEL_18:
    v10 = MEMORY[0x24BEE4AF8];
LABEL_19:
    swift_bridgeObjectRelease_n();
    return v10;
  }
  sub_23F617BA0();
  result = sub_23F61CA6C();
  v7 = result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  if (v7 >= 1)
  {
    v9 = 0;
    v10 = MEMORY[0x24BEE4AF8];
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x24266FE14](v9, v6);
      else
        v11 = *(id *)(v6 + 8 * v9 + 32);
      v12 = v11;
      v19 = v11;
      sub_23F410760(&v19, &v16);

      if (v17)
      {
        sub_23F382A70(&v16, v18);
        sub_23F382A70(v18, &v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F411500();
          v10 = v14;
        }
        v13 = *(_QWORD *)(v10 + 16);
        if (v13 >= *(_QWORD *)(v10 + 24) >> 1)
        {
          sub_23F411500();
          v10 = v15;
        }
        *(_QWORD *)(v10 + 16) = v13 + 1;
        sub_23F382A70(&v16, (_OWORD *)(v10 + 32 * v13 + 32));
      }
      else
      {
        sub_23F39E4B8((uint64_t)&v16, &qword_256E6FC98);
      }
      ++v9;
    }
    while (v7 != v9);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void sub_23F410760(id *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v5 = sub_23F619E98();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(*a1, sel_usoGraph);
  v10 = sub_23F61C67C();

  if (v10)
  {
    v23 = v6;
    sub_23F619094();
    swift_retain_n();
    v11 = sub_23F619E8C();
    v12 = sub_23F61C61C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v22 = v2;
      v14 = (uint8_t *)v13;
      v20 = swift_slowAlloc();
      *(_QWORD *)&v24 = v20;
      v21 = v5;
      *(_DWORD *)v14 = 136315138;
      v19[1] = v14 + 4;
      v26 = v10;
      sub_23F617678();
      sub_23F3612C0(&qword_256E730C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA3538], MEMORY[0x24BEA3548]);
      v15 = sub_23F61CC1C();
      sub_23F37AE00(v15, v16, (uint64_t *)&v24);
      v26 = v17;
      sub_23F61C790();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F35A000, v11, v12, "Top graph: %s", v14, 0xCu);
      v18 = v20;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v18, -1, -1);
      MEMORY[0x242670B70](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v21);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v5);
    }
    if (sub_23F6175AC())
    {
      sub_23F617600();
      swift_release();
      swift_release();
      if (v25)
      {
        sub_23F382A70(&v24, a2);
        return;
      }
      sub_23F39E4B8((uint64_t)&v24, &qword_256E6FC98);
    }
    else
    {
      swift_release();
    }
  }
  *a2 = 0u;
  a2[1] = 0u;
}

uint64_t sub_23F410A1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  NSObject *v28;
  uint8_t *v29;
  uint64_t v30;
  os_log_type_t v31;
  _WORD *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(NSObject *, uint64_t);
  NSObject *v36;
  os_log_type_t v37;
  _WORD *v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  NSObject *v45;
  os_log_type_t v46;
  _WORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  os_log_type_t v59;
  _WORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  os_log_type_t v64;
  _WORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[4];
  NSObject *v72;
  _QWORD v73[4];
  _BYTE v74[32];

  sub_23F35D2E8(&qword_256E730A8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F36285C();
  v67 = v3;
  sub_23F35D2E8(&qword_256E730B0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F619E98();
  v69 = *(_QWORD *)(v7 - 8);
  v70 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F362AAC();
  v11 = (v9 - v10);
  MEMORY[0x24BDAC7A8](v12);
  v68 = (char *)&v66 - v13;
  sub_23F383588();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = ((char *)&v66 - v16);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = ((char *)&v66 - v19);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = ((char *)&v66 - v22);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = ((char *)&v66 - v25);
  MEMORY[0x24BDAC7A8](v24);
  v28 = ((char *)&v66 - v27);
  sub_23F382B64(a1, (uint64_t)v74);
  sub_23F6175C4();
  v29 = (uint8_t *)(MEMORY[0x24BEE4AD8] + 8);
  if (sub_23F4114A4())
  {
    if (sub_23F6175B8())
    {
      sub_23F4114C4();
      sub_23F3668A0();
      sub_23F4114DC();
      v30 = sub_23F61787C();
LABEL_23:
      swift_release();
      goto LABEL_24;
    }
    sub_23F619094();
    sub_23F619E8C();
    v41 = sub_23F3F0EEC();
    if (sub_23F411520(v28))
    {
      v42 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v42 = 0;
      sub_23F4114BC(&dword_23F35A000, v28, v41, "USO Common.Date cannot be converted to DateTime", v42);
      sub_23F366530();
    }

    swift_release();
    sub_23F4114D0();
    v36 = v28;
    goto LABEL_17;
  }
  sub_23F6175DC();
  if (sub_23F4114A4())
  {
    sub_23F411528();
    if (!MEMORY[0x24266AAE0]())
    {
      sub_23F619094();
      sub_23F619E8C();
      v31 = sub_23F3F0EEC();
      if (sub_23F384458(v31))
      {
        v32 = (_WORD *)sub_23F3EEE70();
        sub_23F4114EC(v32);
        sub_23F411490(&dword_23F35A000, v33, v34, "USO Common.Time was not converted to DateTime");
        sub_23F366530();
      }

      sub_23F3668FC();
      sub_23F4114D0();
      v36 = v26;
LABEL_17:
      v35(v36, v70);
      goto LABEL_18;
    }
    goto LABEL_21;
  }
  sub_23F617630();
  if (sub_23F4114A4())
  {
    sub_23F411528();
    if (!MEMORY[0x24266AB34]())
    {
      sub_23F619094();
      sub_23F619E8C();
      v37 = sub_23F3F0EEC();
      if (sub_23F384458(v37))
      {
        v38 = (_WORD *)sub_23F3EEE70();
        sub_23F4114EC(v38);
        sub_23F411490(&dword_23F35A000, v39, v40, "USO Common.Time12HourClock was not converted to DateTime");
        sub_23F366530();
      }

      sub_23F3668FC();
      sub_23F4114D0();
      v36 = v23;
      goto LABEL_17;
    }
    goto LABEL_21;
  }
  sub_23F617648();
  if (sub_23F4114A4())
  {
    sub_23F411528();
    if (!MEMORY[0x24266AB4C]())
    {
      sub_23F619094();
      sub_23F619E8C();
      v46 = sub_23F3F0EEC();
      if (sub_23F384458(v46))
      {
        v47 = (_WORD *)sub_23F3EEE70();
        sub_23F4114EC(v47);
        sub_23F411490(&dword_23F35A000, v48, v49, "USO Common.Time24HourClock was not converted to DateTime");
        sub_23F366530();
      }

      sub_23F3668FC();
      sub_23F4114D0();
      v36 = v20;
      goto LABEL_17;
    }
LABEL_21:
    sub_23F4114C4();
    sub_23F3668A0();
    sub_23F4114DC();
    v43 = sub_23F617888();
    goto LABEL_22;
  }
  sub_23F6175F4();
  if (sub_23F4114A4())
  {
    v43 = sub_23F6175E8();
    goto LABEL_22;
  }
  v45 = sub_23F617618();
  if (sub_23F4114A4())
  {
    sub_23F411528();
    if (!sub_23F61760C())
    {
      sub_23F619094();
      sub_23F619E8C();
      v59 = sub_23F3F0EEC();
      if (sub_23F384458(v59))
      {
        v60 = (_WORD *)sub_23F3EEE70();
        sub_23F4114EC(v60);
        sub_23F411490(&dword_23F35A000, v61, v62, "USO Common.DateTimeRange was not converted to DateTime");
        sub_23F366530();
      }

      sub_23F3668FC();
      sub_23F4114D0();
      v36 = v17;
      goto LABEL_17;
    }
    sub_23F4114C4();
    sub_23F3668A0();
    sub_23F4114DC();
    v43 = sub_23F6178B8();
LABEL_22:
    v30 = v43;
    goto LABEL_23;
  }
  sub_23F61766C();
  if (!sub_23F4114A4())
  {
    sub_23F619094();
    sub_23F382B64(a1, (uint64_t)v73);
    v53 = sub_23F619E8C();
    v54 = sub_23F61C628();
    if (sub_23F411520(v53))
    {
      v55 = (uint8_t *)sub_23F366668();
      v72 = sub_23F366668();
      *(_DWORD *)v55 = 136315138;
      sub_23F382B64((uint64_t)v73, (uint64_t)v71);
      v56 = sub_23F61C16C();
      sub_23F37AE00(v56, v57, (uint64_t *)&v72);
      v71[0] = v58;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v73);
      _os_log_impl(&dword_23F35A000, v53, v54, "USO entity is not convertible to a DateTime: %s", v55, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v73);

    sub_23F4114D0();
    v36 = v11;
    goto LABEL_17;
  }
  if (sub_23F617660())
  {
    v50 = sub_23F617654();
    sub_23F366748();
    if (v50)
    {
      swift_retain();
      sub_23F6175A0();
      sub_23F3DDBDC();
      sub_23F617600();
      sub_23F366748();
      if (v73[3])
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v45 = v72;
          if (sub_23F61760C())
          {
            v51 = sub_23F617894();
            sub_23F36196C((uint64_t)v6, 1, 1, v51);
            v52 = sub_23F6178C4();
            sub_23F36196C(v67, 1, 1, v52);
            sub_23F6178DC();
            sub_23F3668A0();
            swift_retain();
            swift_retain();
            v30 = sub_23F617870();
            swift_release();
            sub_23F3668FC();
            sub_23F383EDC();
            goto LABEL_23;
          }
          sub_23F383EDC();
        }
        swift_release();
      }
      else
      {
        sub_23F383EDC();
        sub_23F39E4B8((uint64_t)v73, &qword_256E6FC98);
      }
    }
  }
  v63 = v68;
  sub_23F619094();
  sub_23F619E8C();
  v64 = sub_23F40B504();
  if (sub_23F40B304(v64))
  {
    v65 = (_WORD *)sub_23F3EEE70();
    sub_23F4114EC(v65);
    sub_23F4114BC(&dword_23F35A000, v45, (os_log_type_t)v63, "USO Common.RecurringDateTimeRange was not converted to DateTime", v29);
    sub_23F366530();
  }

  sub_23F3DDBDC();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v63, v70);
LABEL_18:
  v30 = 0;
LABEL_24:
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v74);
  return v30;
}

id sub_23F4111EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  v4 = v3;
  v6 = (void *)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_23F617060();
  v8 = objc_msgSend(v4, sel_initLoadFromDataDetectorsDirectoryPath_forLocale_, v6, v7);

  v9 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a3, v9);
  return v8;
}

unint64_t sub_23F411274()
{
  unint64_t result;

  result = qword_256E730B8;
  if (!qword_256E730B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E730B8);
  }
  return result;
}

uint64_t sub_23F4112B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E730C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for OnDeviceDataDetectors(id *a1)
{

  return swift_bridgeObjectRelease();
}

void _s30IntelligenceFlowPlannerRuntime21OnDeviceDataDetectorsVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v3;
  a1[2] = *(_QWORD *)(a2 + 16);
  v4 = v2;
  sub_23F617BA0();
  sub_23F362928();
}

uint64_t assignWithCopy for OnDeviceDataDetectors(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OnDeviceDataDetectors(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OnDeviceDataDetectors(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnDeviceDataDetectors(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnDeviceDataDetectors()
{
  return &type metadata for OnDeviceDataDetectors;
}

void sub_23F411490(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_23F4114A4()
{
  return swift_dynamicCast();
}

uint64_t sub_23F4114AC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 200) + 8))(v0, *(_QWORD *)(v1 - 192));
}

void sub_23F4114BC(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 2u);
}

uint64_t sub_23F4114C4()
{
  return sub_23F6178DC();
}

uint64_t sub_23F4114DC()
{
  uint64_t v0;

  return v0;
}

_WORD *sub_23F4114EC(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23F4114F8()
{
  return swift_release();
}

void sub_23F411500()
{
  sub_23F377BE0();
}

uint64_t sub_23F41150C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F411514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

BOOL sub_23F411520(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

void sub_23F411534(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F39E4B8(v2, a2);
}

void sub_23F41153C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[9];
  uint64_t v17;
  _QWORD v18[5];
  char v19;

  v4 = sub_23F61B32C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F412294();
  v8 = _s15DeltaComponentsVMa();
  v9 = a1 + *(int *)(v8 + 32);
  v10 = *(void **)v9;
  if ((*(_BYTE *)(v9 + 32) & 1) != 0)
  {
    v16[0] = *(_QWORD *)v9;
    v11 = v10;
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
    sub_23F38BB88((uint64_t)&v17);
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 40) = 1;
  }
  else
  {
    v12 = v8;
    v13 = *(_QWORD *)(v9 + 8);
    v14 = *(_QWORD *)(v9 + 16);
    v15 = *(_QWORD *)(v9 + 24);
    v16[5] = *(_QWORD *)v9;
    v16[6] = v13;
    v16[7] = v14;
    v16[8] = v15;
    sub_23F3CB7DC((uint64_t)v10);
    sub_23F411820((uint64_t)v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v12 + 24), v4);
    v18[3] = &type metadata for PromptMapperResolver;
    v18[4] = &off_250FDB498;
    v18[0] = swift_allocObject();
    sub_23F51CF9C();
    v19 = 0;
    sub_23F3CD9FC((uint64_t)v18, a2, &qword_256E705F8);
  }
}

double sub_23F4116C0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  double result;
  uint64_t v5;
  __int128 v6;
  _BYTE v7[25];

  sub_23F411BFC(a1, &v5, (uint64_t *)&v6);
  v7[24] = 0;
  v3 = *(_OWORD *)v7;
  *a2 = v6;
  a2[1] = v3;
  result = *(double *)&v7[9];
  *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)&v7[9];
  return result;
}

uint64_t sub_23F411728@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  __int128 v9[2];
  char v10;

  sub_23F413134();
  if ((v8 & 1) != 0)
  {
    v2 = v7;
    sub_23F35D2E8(&qword_256E70370);
    result = swift_willThrowTypedImpl();
    *(_BYTE *)(a1 + 40) = 1;
  }
  else
  {
    sub_23F362678(&v7, (uint64_t)v9);
    v4 = sub_23F35D2E8(&qword_256E73220);
    sub_23F389844(&qword_256E73228, &qword_256E73220, (uint64_t)&unk_23F622690);
    v6 = v5;
    v2 = swift_allocObject();
    sub_23F413498();
    result = sub_23F362678(v9, v2 + 16);
    v10 = 0;
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v6;
    *(_BYTE *)(a1 + 40) = 0;
  }
  *(_QWORD *)a1 = v2;
  return result;
}

uint64_t sub_23F411820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;

  v3 = _s15DeltaComponentsVMa();
  v4 = v1 + *(int *)(v3 + 40);
  sub_23F38F124(v4, (uint64_t)&v9, &qword_256E70738);
  if (!v10)
  {
    sub_23F3625D8((uint64_t)&v9, &qword_256E70738);
    v10 = type metadata accessor for AlphaAppNameRenderer(0);
    v11 = &off_250FD31D8;
    v5 = sub_23F36145C((uint64_t *)&v9);
    v6 = v1 + *(int *)(v3 + 20);
    v7 = sub_23F6170CC();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    sub_23F36196C((uint64_t)v5, 0, 1, v7);
    sub_23F3625D8(v4, &qword_256E70738);
    sub_23F382FC4((uint64_t)&v9, v4);
  }
  return sub_23F362678(&v9, a1);
}

void sub_23F41191C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  int *v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  __n128 *v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  _QWORD v35[5];

  *a5 = 0x61746C6544;
  a5[1] = 0xE500000000000000;
  v9 = (int *)_s15DeltaComponentsVMa();
  *(double *)&v10 = sub_23F3CDAA8(v9[10]);
  v12 = (char *)a5 + *(int *)(v11 + 44);
  *((_QWORD *)v12 + 4) = 0;
  *(_OWORD *)v12 = v10;
  *((_OWORD *)v12 + 1) = v10;
  v12[40] = -1;
  bzero((char *)a5 + *(int *)(v11 + 48), 0xC8uLL);
  bzero((char *)a5 + v9[13], 0x168uLL);
  v13.n128_f64[0] = sub_23F3CDAA8(v9[14]);
  *(_BYTE *)(v14 + 40) = -1;
  v15 = (__n128 *)((char *)a5 + v9[15]);
  v15[2].n128_u64[0] = 0;
  *v15 = v13;
  v15[1] = v13;
  sub_23F3CDA48(v9[16], v13);
  sub_23F3CDA48(v9[17], v16);
  sub_23F3CDA48(v9[18], v17);
  sub_23F3CDA48(v9[19], v18);
  v19 = (char *)a5 + v9[5];
  v20 = sub_23F38F984();
  v29 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v19, a1, v20);
  v21 = (char *)a5 + v9[6];
  v22 = sub_23F384B34();
  v23 = *(_QWORD *)(v22 - 8);
  v31 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, a2, v22);
  v30 = a3;
  sub_23F382FC4(a3, (uint64_t)a5 + v9[7]);
  v32 = a1;
  sub_23F3C905C(a1, &v34, (uint64_t)v35);
  v25 = v35[0];
  v24 = v35[1];
  v26 = v35[2];
  v27 = v35[3];
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v30);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v31, v22);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v20);
  v28 = (char *)a5 + v9[8];
  *(_QWORD *)v28 = v25;
  *((_QWORD *)v28 + 1) = v24;
  *((_QWORD *)v28 + 2) = v26;
  *((_QWORD *)v28 + 3) = v27;
  v28[32] = 0;
  sub_23F3CD9FC(a4, (uint64_t)a5 + v9[9], &qword_256E705E0);
}

uint64_t _s15DeltaComponentsVMa()
{
  uint64_t result;

  result = qword_256E73138;
  if (!qword_256E73138)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23F411B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v3 = v1 + *(int *)(sub_23F413E80() + 44);
  sub_23F38FA10();
  if (v13)
  {
    sub_23F38F9FC();
  }
  else if ((v12 & 1) != 0)
  {
    sub_23F38F9D4();
    *(_QWORD *)&v25 = v2;
    v29 = 1;
  }
  else
  {
    sub_23F38F9E0(v4, v5, v6, v7, v8, v9, v10, v11, v25);
    v29 = 0;
  }
  sub_23F38F938();
  if (v13)
  {
    v22 = sub_23F38FA50();
    sub_23F4116C0(v22, v23);
    sub_23F38FA10();
    if (!v13)
    {
      if ((v24 & 1) != 0)

      else
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v3);
    }
    if ((*(_BYTE *)(v0 + 40) & 1) != 0)
    {
      sub_23F38FA30();
      *(_QWORD *)v3 = v0;
      *(_BYTE *)(v3 + 40) = 1;
    }
    else
    {
      sub_23F3CDA9C();
      *(_BYTE *)(v3 + 40) = 0;
    }
  }
  else
  {
    sub_23F38FA5C(v14, v15, v16, v17, v18, v19, v20, v21, v25, v26, v27, v28, v29);
  }
  sub_23F38F98C();
}

void sub_23F411BFC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  char v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  const char *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v60 = a1;
  v62 = a3;
  v4 = sub_23F619E98();
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v54 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)&v52 - v7;
  v8 = sub_23F35D2E8(&qword_256E705E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for FullPlannerGMSClientConfiguration(0);
  v11 = MEMORY[0x24BDAC7A8](v61);
  v59 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v58 = (uint64_t)&v52 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v52 - v15;
  v17 = type metadata accessor for FullPlannerPreferences();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256E6EE90 != -1)
    swift_once();
  v20 = sub_23F361498(v17, (uint64_t)qword_256E7FE90);
  swift_beginAccess();
  sub_23F38F530(v20, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F617C48();
  v21 = v63;
  sub_23F3663AC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  if (v21 == 1)
  {
    v22 = sub_23F35D2E8(&qword_256E73210);
    v23 = v62;
    v62[3] = v22;
    sub_23F389844(&qword_256E73218, &qword_256E73210, (uint64_t)&unk_23F630E08);
    v23[4] = v24;
    return;
  }
  v53 = a2;
  sub_23F38F530(v20, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F617C48();
  v26 = v63;
  v25 = v64;
  sub_23F3663AC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  v27 = v26 == 0x6E65476E656B6F74 && v25 == 0xEE00726F74617265;
  if (!v27 && (sub_23F61CC64() & 1) == 0)
  {
    if (v26 == 0x65696C4370747468 && v25 == 0xEA0000000000746ELL)
    {
      swift_bridgeObjectRelease();
      v43 = v53;
      v46 = v55;
    }
    else
    {
      v45 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      v43 = v53;
      v46 = v55;
      if ((v45 & 1) == 0)
      {
        v46 = v54;
        sub_23F619088();
        v47 = sub_23F619E8C();
        v48 = sub_23F61C628();
        if (os_log_type_enabled(v47, v48))
        {
          v49 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v49 = 0;
LABEL_25:
          _os_log_impl(&dword_23F35A000, v47, v48, v50, v49, 2u);
          MEMORY[0x242670B70](v49, -1, -1);
          goto LABEL_26;
        }
        goto LABEL_26;
      }
    }
    sub_23F619088();
    v47 = sub_23F619E8C();
    v48 = sub_23F61C628();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v49 = 0;
      v50 = "HTTPClient not supported";
      goto LABEL_25;
    }
LABEL_26:

    (*(void (**)(char *, uint64_t))(v56 + 8))(v46, v57);
    sub_23F38F04C();
    v42 = swift_allocError();
    *v51 = 0;
    v51[1] = 0;
    swift_willThrow();
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  v28 = _s15DeltaComponentsVMa();
  sub_23F38F124(v60 + *(int *)(v28 + 36), (uint64_t)v10, &qword_256E705E0);
  sub_23F38F530(v20, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F617C48();
  v29 = v63;
  sub_23F3663AC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F38F530(v20, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F617C48();
  v30 = v63;
  sub_23F3663AC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F3CD9FC((uint64_t)v10, (uint64_t)v16, &qword_256E705E0);
  v31 = v61;
  v16[*(int *)(v61 + 20)] = v29;
  v16[*(int *)(v31 + 24)] = v30;
  sub_23F38F530(v20, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F617C48();
  v32 = v63;
  sub_23F3663AC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  if (v32 == 1)
  {
    v33 = v58;
    sub_23F38F530((uint64_t)v16, v58, type metadata accessor for FullPlannerGMSClientConfiguration);
    v34 = type metadata accessor for FullPlannerTokenGeneratorConstrainedDecodingInterface(0);
    v35 = v62;
    v62[3] = v34;
    v35[4] = (uint64_t)&off_256E745A8;
    v36 = sub_23F36145C(v35);
    v37 = v65;
    sub_23F441698(v33, (uint64_t)v36);
  }
  else
  {
    v38 = v59;
    sub_23F38F530((uint64_t)v16, v59, type metadata accessor for FullPlannerGMSClientConfiguration);
    v39 = sub_23F35D2E8(qword_256E707D8);
    v35 = v62;
    v62[3] = v39;
    sub_23F389844(&qword_256E73208, qword_256E707D8, (uint64_t)&unk_23F622390);
    v35[4] = v40;
    v41 = sub_23F36145C(v35);
    v37 = v65;
    sub_23F38D000(v38, (uint64_t)v41);
  }
  v42 = v37;
  sub_23F3663AC((uint64_t)v16, type metadata accessor for FullPlannerGMSClientConfiguration);
  v43 = v53;
  if (v37)
  {
    sub_23F38F0AC((uint64_t)v35);
LABEL_27:
    *v43 = v42;
  }
}

_OWORD *sub_23F412294()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[26];

  v2 = sub_23F413E80();
  v3 = (_OWORD *)(v1 + *(int *)(v2 + 48));
  sub_23F38F908(v2, v4, &qword_256E707D0, v5, v6, v7, v8, v9, v13[0]);
  if (v13[3])
    return memcpy(v0, v13, 0xC8uLL);
  sub_23F38F900((uint64_t)v13);
  v11 = sub_23F38FA50();
  sub_23F41231C(v11, v12);
  sub_23F38F900((uint64_t)v3);
  return sub_23F38F144(v0, v3);
}

uint64_t sub_23F41231C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  _UNKNOWN **v57;
  __int128 v58;
  void *v59;
  _UNKNOWN **v60;
  __int128 v61;
  void *v62;
  _UNKNOWN **v63;
  __int128 v64;
  uint64_t v65;
  _UNKNOWN **v66;
  __int128 v67[2];
  _QWORD v68[5];
  uint64_t v69[5];
  uint64_t v70[5];
  uint64_t v71[5];
  uint64_t v72;
  void *v73;
  _UNKNOWN **v74;
  uint64_t v75;
  _BYTE v76[40];
  _QWORD v77[5];
  uint64_t v78;
  _QWORD v79[5];
  uint64_t v80;
  void *v81;
  _UNKNOWN **v82;
  void *v83;
  _UNKNOWN **v84;
  _QWORD v85[5];
  uint64_t v86;
  void *v87;
  _UNKNOWN **v88;
  void *v89;
  _UNKNOWN **v90;
  _QWORD v91[5];
  uint64_t v92;
  void *v93;
  _UNKNOWN **v94;
  uint64_t v95;
  void *v96;
  _UNKNOWN **v97;
  uint64_t v98;
  void *v99;
  _UNKNOWN **v100;
  void *v101;
  _UNKNOWN **v102;
  _QWORD v103[5];
  uint64_t v104[5];
  uint64_t v105;
  void *v106;
  _UNKNOWN **v107;
  uint64_t v108[15];
  uint64_t v109[10];
  _QWORD v110[5];
  uint64_t v111;
  void *v112;
  _UNKNOWN **v113;
  _QWORD v114[10];
  _BYTE v115[24];
  void *v116;
  _UNKNOWN **v117;
  _BYTE v118[24];
  void *v119;
  _UNKNOWN **v120;

  v50 = a2;
  v49 = type metadata accessor for BravoEntityIdentifierValuePromptRenderer(0);
  MEMORY[0x24BDAC7A8](v49);
  v48 = (uint64_t *)((char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = type metadata accessor for BravoRenderableToolDefinitionPromptRenderer(0);
  MEMORY[0x24BDAC7A8](v54);
  v5 = (uint64_t *)((char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = type metadata accessor for BravoEntityValuePromptRenderer(0);
  MEMORY[0x24BDAC7A8](v53);
  v52 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v119 = &unk_250FD5778;
  v120 = &off_250FD57E0;
  v116 = &unk_250FD5758;
  v117 = &off_250FD57C8;
  v110[3] = &unk_250FD4528;
  v110[4] = &off_250FD4588;
  v110[0] = swift_allocObject();
  sub_23F3E7D4C((uint64_t)v115, v110[0] + 16);
  v112 = &unk_250FD4528;
  v113 = &off_250FD4588;
  v111 = swift_allocObject();
  sub_23F3E7D4C((uint64_t)v115, v111 + 16);
  v51 = a1;
  sub_23F411820((uint64_t)v114);
  v114[8] = &unk_250FD5758;
  v114[9] = &off_250FD57C8;
  v9[3] = (uint64_t)&unk_250FD44A0;
  v9[4] = (uint64_t)&off_250FD4568;
  v10 = swift_allocObject();
  *v9 = v10;
  sub_23F3E7DB8((uint64_t)v110, v10 + 16);
  v9[8] = (uint64_t)&unk_250FD2F20;
  v9[9] = (uint64_t)&off_250FD3190;
  v11 = swift_allocObject();
  v9[5] = v11;
  sub_23F38F1E8((uint64_t)v118, v11 + 16);
  v9[13] = (uint64_t)&unk_250FD3228;
  v9[14] = (uint64_t)&off_250FD3238;
  sub_23F411820((uint64_t)(v9 + 15));
  v9[23] = (uint64_t)&unk_250FD56F8;
  v9[24] = (uint64_t)&off_250FD5788;
  v47 = _s15DeltaComponentsVMa();
  v12 = a1 + *(int *)(v47 + 24);
  v13 = (char *)v9 + *(int *)(v7 + 36);
  v14 = sub_23F61B32C();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v44 = v14;
  v45 = v12;
  v15(v13, v12, v14);
  v43 = v15;
  v109[3] = v7;
  v109[4] = (uint64_t)&off_250FD3D60;
  v16 = sub_23F36145C(v109);
  sub_23F38F530((uint64_t)v9, (uint64_t)v16, type metadata accessor for BravoTypeIdentifierRenderer);
  v109[8] = (uint64_t)&unk_250FD5738;
  v109[9] = (uint64_t)&off_250FD57B8;
  v108[3] = v7;
  v108[4] = (uint64_t)&off_250FD3D60;
  v17 = sub_23F36145C(v108);
  sub_23F38F530((uint64_t)v9, (uint64_t)v17, type metadata accessor for BravoTypeIdentifierRenderer);
  v108[8] = (uint64_t)&unk_250FD2B58;
  v108[9] = (uint64_t)&off_250FD3060;
  v108[13] = (uint64_t)&unk_250FD2B38;
  v108[14] = (uint64_t)&off_250FD3050;
  v104[3] = v7;
  v46 = v7;
  v104[4] = (uint64_t)&off_250FD3D60;
  v18 = sub_23F36145C(v104);
  sub_23F38F530((uint64_t)v9, (uint64_t)v18, type metadata accessor for BravoTypeIdentifierRenderer);
  v106 = &unk_250FD2B08;
  v107 = &off_250FD3040;
  v105 = swift_allocObject();
  sub_23F38F43C((uint64_t)v108, v105 + 16);
  v19 = v52;
  v52[3] = v7;
  v19[4] = (uint64_t)&off_250FD3D48;
  v20 = v19;
  v21 = sub_23F36145C(v19);
  sub_23F38F530((uint64_t)v9, (uint64_t)v21, type metadata accessor for BravoTypeIdentifierRenderer);
  v20[8] = (uint64_t)&unk_250FD3CE8;
  v20[9] = (uint64_t)&off_250FD3DC0;
  v22 = swift_allocObject();
  v20[5] = v22;
  sub_23F3CD7F4((uint64_t)v104, v22 + 16);
  v47 = v51 + *(int *)(v47 + 28);
  sub_23F382FC4(v47, (uint64_t)(v20 + 10));
  v15((char *)v20 + *(int *)(v53 + 28), v12, v14);
  v103[3] = &unk_250FD5758;
  v103[4] = &off_250FD57C8;
  v91[3] = &unk_250FD4420;
  v91[4] = &off_250FD4558;
  v91[0] = swift_allocObject();
  sub_23F3E7E2C((uint64_t)v103, v91[0] + 16);
  v93 = &unk_250FD2E80;
  v94 = &off_250FD3140;
  v92 = swift_allocObject();
  sub_23F38F248((uint64_t)v109, v92 + 16);
  v96 = &unk_250FD4420;
  v97 = &off_250FD4558;
  v95 = swift_allocObject();
  sub_23F3E7E2C((uint64_t)v103, v95 + 16);
  v99 = &unk_250FD2E80;
  v100 = &off_250FD3140;
  v98 = swift_allocObject();
  sub_23F38F248((uint64_t)v109, v98 + 16);
  v101 = &unk_250FD5758;
  v102 = &off_250FD57C8;
  v85[3] = &unk_250FD2E80;
  v85[4] = &off_250FD3140;
  v85[0] = swift_allocObject();
  sub_23F38F248((uint64_t)v109, v85[0] + 16);
  v87 = &unk_250FD4398;
  v88 = &off_250FD4540;
  v86 = swift_allocObject();
  sub_23F3E7EBC((uint64_t)v91, v86 + 16);
  v89 = &unk_250FD5718;
  v90 = &off_250FD57A8;
  v79[3] = &unk_250FD2D78;
  v79[4] = &off_250FD3108;
  v79[0] = swift_allocObject();
  sub_23F38F2C8((uint64_t)v85, v79[0] + 16);
  v81 = &unk_250FD2CF8;
  v82 = &off_250FD30F0;
  v80 = swift_allocObject();
  sub_23F411820(v80 + 16);
  v83 = &unk_250FD5718;
  v84 = &off_250FD5798;
  v77[3] = &unk_250FD2C70;
  v77[4] = &off_250FD30B8;
  v77[0] = swift_allocObject();
  sub_23F38F360((uint64_t)v79, v77[0] + 16);
  sub_23F411820((uint64_t)&v78);
  sub_23F411820((uint64_t)v76);
  v5[3] = (uint64_t)&unk_250FD2C70;
  v5[4] = (uint64_t)&off_250FD30B8;
  v23 = swift_allocObject();
  *v5 = v23;
  sub_23F38F360((uint64_t)v79, v23 + 16);
  v5[8] = (uint64_t)&unk_250FD2BF8;
  v5[9] = (uint64_t)&off_250FD3098;
  v5[13] = (uint64_t)&unk_250FD2BD0;
  v5[14] = (uint64_t)&off_250FD3070;
  v24 = swift_allocObject();
  v5[10] = v24;
  sub_23F38F3C0((uint64_t)v77, v24 + 16);
  v5[18] = (uint64_t)&unk_250FD3B00;
  v5[19] = (uint64_t)&off_250FD3B18;
  v25 = swift_allocObject();
  v5[15] = v25;
  sub_23F38F3FC((uint64_t)v76, v25 + 16);
  v5[23] = (uint64_t)&unk_250FD3C68;
  v5[24] = (uint64_t)&off_250FD3DA0;
  v26 = swift_allocObject();
  v5[20] = v26;
  sub_23F411820(v26 + 16);
  v28 = v44;
  v27 = v45;
  v29 = v43;
  v43((char *)v5 + *(int *)(v54 + 36), v45, v44);
  v30 = v48;
  v31 = v46;
  v48[3] = v46;
  v30[4] = (uint64_t)&off_250FD3D48;
  v32 = sub_23F36145C(v30);
  sub_23F38F530((uint64_t)v9, (uint64_t)v32, type metadata accessor for BravoTypeIdentifierRenderer);
  v33 = v49;
  v29((char *)v30 + *(int *)(v49 + 20), v27, v28);
  v71[3] = v31;
  v34 = v31;
  v71[4] = (uint64_t)&off_250FD3D60;
  v35 = sub_23F36145C(v71);
  sub_23F38F530((uint64_t)v9, (uint64_t)v35, type metadata accessor for BravoTypeIdentifierRenderer);
  v73 = &unk_250FD2B08;
  v74 = &off_250FD3040;
  v72 = swift_allocObject();
  sub_23F38F43C((uint64_t)v108, v72 + 16);
  sub_23F382FC4(v47, (uint64_t)&v75);
  v68[3] = &unk_250FD2A80;
  v68[4] = &off_250FD3030;
  v68[0] = swift_allocObject();
  sub_23F38F47C((uint64_t)v71, v68[0] + 16);
  v69[3] = v53;
  v69[4] = (uint64_t)&off_250FD3D90;
  v36 = sub_23F36145C(v69);
  v37 = (uint64_t)v52;
  sub_23F38F530((uint64_t)v52, (uint64_t)v36, type metadata accessor for BravoEntityValuePromptRenderer);
  v70[3] = v33;
  v70[4] = (uint64_t)&off_250FD3D80;
  v38 = sub_23F36145C(v70);
  sub_23F38F530((uint64_t)v30, (uint64_t)v38, type metadata accessor for BravoEntityIdentifierValuePromptRenderer);
  sub_23F411820((uint64_t)v67);
  v65 = v54;
  v66 = &off_250FD3D20;
  v39 = sub_23F36145C((uint64_t *)&v64);
  sub_23F38F530((uint64_t)v5, (uint64_t)v39, type metadata accessor for BravoRenderableToolDefinitionPromptRenderer);
  v62 = &unk_250FD28F8;
  v63 = &off_250FD2FD8;
  *(_QWORD *)&v61 = swift_allocObject();
  sub_23F38F580((uint64_t)v68, v61 + 16);
  v59 = &unk_250FD4398;
  v60 = &off_250FD4540;
  *(_QWORD *)&v58 = swift_allocObject();
  sub_23F3E7EBC((uint64_t)v91, v58 + 16);
  v56 = v34;
  v57 = &off_250FD3D60;
  v40 = sub_23F36145C((uint64_t *)&v55);
  sub_23F3CD8C8((uint64_t)v9, (uint64_t)v40);
  sub_23F38F600((uint64_t)v68);
  sub_23F38F634((uint64_t)v71);
  sub_23F3663AC((uint64_t)v30, type metadata accessor for BravoEntityIdentifierValuePromptRenderer);
  sub_23F3663AC((uint64_t)v5, type metadata accessor for BravoRenderableToolDefinitionPromptRenderer);
  sub_23F38F6D0((uint64_t)v76);
  sub_23F38F704((uint64_t)v77);
  sub_23F38F738((uint64_t)v79);
  sub_23F38F76C((uint64_t)v85);
  sub_23F3E7F2C((uint64_t)v91);
  sub_23F3E7F60((uint64_t)v103);
  sub_23F3663AC(v37, type metadata accessor for BravoEntityValuePromptRenderer);
  sub_23F3CD90C((uint64_t)v104);
  sub_23F38F668((uint64_t)v108);
  sub_23F38F808((uint64_t)v109);
  sub_23F3E7F94((uint64_t)v110);
  sub_23F3E7FC8((uint64_t)v115);
  sub_23F38F870((uint64_t)v118);
  v41 = v50;
  sub_23F362678(v67, v50);
  sub_23F362678(&v64, v41 + 40);
  sub_23F362678(&v61, v41 + 80);
  sub_23F362678(&v58, v41 + 120);
  return sub_23F362678(&v55, v41 + 160);
}

void *sub_23F412DD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  int *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  __int128 v26[2];
  __int128 v27;
  uint64_t v28;
  _UNKNOWN **v29;
  __int128 v30;
  void *v31;
  _UNKNOWN **v32;
  uint64_t v33[5];
  _BYTE v34[32];
  uint64_t v35;
  _QWORD v36[46];

  v3 = sub_23F384B34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)_s15DeltaComponentsVMa();
  v8 = v1 + v7[13];
  sub_23F38F124(v8, (uint64_t)v36, &qword_256E707B8);
  if (v36[13])
    return memcpy(a1, v36, 0x168uLL);
  v25 = v8;
  sub_23F3625D8((uint64_t)v36, &qword_256E707B8);
  v35 = 0;
  memset(v34, 0, sizeof(v34));
  v10 = v1 + v7[6];
  v11 = type metadata accessor for BravoContextEventPromptGenerator();
  v33[3] = v11;
  v33[4] = (uint64_t)&off_250FD3A78;
  v12 = sub_23F36145C(v33);
  v24 = v4;
  v13 = *(_QWORD *)(v4 + 16);
  sub_23F3CDA68((uint64_t)v12);
  sub_23F412294();
  sub_23F382FC4(v1 + v7[7], (uint64_t)v12 + *(int *)(v11 + 24));
  v31 = &unk_250FD4EE0;
  v32 = &off_250FD4F48;
  v14 = swift_allocObject();
  *(_QWORD *)&v30 = v14;
  *(_QWORD *)(v14 + 40) = &unk_250FD4E68;
  *(_QWORD *)(v14 + 48) = &off_250FD4F38;
  v28 = type metadata accessor for AlphaProgramStatementParser();
  v29 = &off_250FD2850;
  v15 = sub_23F36145C((uint64_t *)&v27);
  v23[0] = v13;
  v23[1] = v10;
  sub_23F3CDA68((uint64_t)v15);
  sub_23F3CDA68((uint64_t)v6);
  sub_23F412294();
  sub_23F382FC4((uint64_t)&v36[5], (uint64_t)v26);
  sub_23F38BB88((uint64_t)v36);
  a1[18] = (uint64_t)&type metadata for AlphaPlanParser;
  a1[19] = (uint64_t)&off_250FD2840;
  v16 = (uint64_t *)swift_allocObject();
  v17 = (uint64_t)(v16 + 2);
  a1[15] = (uint64_t)v16;
  v18 = (int *)type metadata accessor for AlphaExpressionParser(0);
  v16[10] = (uint64_t)v18;
  v16[11] = (uint64_t)&off_250FD26C0;
  v19 = sub_23F36145C(v16 + 7);
  sub_23F411820((uint64_t)v19 + v18[7]);
  *(_BYTE *)v19 = 1;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))((char *)v19 + v18[5], v6, v3);
  sub_23F362678(v26, (uint64_t)v19 + v18[6]);
  sub_23F362678(&v27, v17);
  a1[23] = type metadata accessor for AlphaStatementResultParser();
  a1[24] = (uint64_t)&off_250FD3308;
  v20 = sub_23F36145C(a1 + 20);
  sub_23F3CDA90((uint64_t)v20);
  sub_23F413E8C();
  a1[28] = (uint64_t)&unk_250FD4E48;
  a1[29] = (uint64_t)&off_250FD4F28;
  a1[33] = (uint64_t)&unk_250FD4E28;
  a1[34] = (uint64_t)&off_250FD4F18;
  a1[38] = type metadata accessor for AlphaExternalAgentOutcomeParser();
  a1[39] = (uint64_t)&off_250FD4F08;
  v21 = sub_23F36145C(a1 + 35);
  sub_23F3CDA90((uint64_t)v21);
  sub_23F413E8C();
  a1[43] = (uint64_t)&unk_250FD4E08;
  a1[44] = (uint64_t)&off_250FD4EF8;
  sub_23F3CD9FC((uint64_t)v34, (uint64_t)a1, &qword_256E707C0);
  sub_23F3CD9FC((uint64_t)v33, (uint64_t)(a1 + 5), &qword_256E707C8);
  sub_23F362678(&v30, (uint64_t)(a1 + 10));
  v22 = v25;
  sub_23F3625D8(v25, &qword_256E707B8);
  return (void *)sub_23F38F0E8((uint64_t)a1, v22);
}

void sub_23F413134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18[6];

  v1 = sub_23F413E80();
  v2 = v0 + *(int *)(v1 + 56);
  sub_23F38F908(v1, v3, &qword_256E707B0, v4, v5, v6, v7, v8, v18[0]);
  sub_23F38F938();
  if (v16)
  {
    sub_23F38F900((uint64_t)v18);
    sub_23F3CDA74(v17, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t *))sub_23F4131B4);
    sub_23F38F900(v2);
    sub_23F38F99C();
  }
  else
  {
    sub_23F3CDA5C(v9, v10, &qword_256E705E8, v11, v12, v13, v14, v15, v18[0]);
  }
  sub_23F38F8EC();
}

uint64_t sub_23F4131B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  int *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  _UNKNOWN **v34;
  _BYTE v35[200];
  uint64_t v36[46];
  uint64_t v37;

  v24 = a3;
  v25 = a2;
  v4 = sub_23F6170CC();
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B32C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = _s15DeltaComponentsVMa();
  v10 = a1 + *(int *)(v26 + 24);
  v37 = v7;
  v11 = *(void (**)(void))(v7 + 16);
  v31 = v9;
  ((void (*)(char *, uint64_t, uint64_t))v11)(v9, v10, v6);
  sub_23F412DD4(v36);
  sub_23F412294();
  v12 = type metadata accessor for BravoToolRenderer();
  v33 = v12;
  v34 = &off_250FD3E20;
  v13 = sub_23F36145C((uint64_t *)&v32);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v11)(v13, v10, v6);
  sub_23F412294();
  v14 = (uint64_t *)((char *)v13 + *(int *)(v12 + 24));
  v14[3] = type metadata accessor for AlphaToolRenderer();
  v14[4] = (uint64_t)&off_250FD3328;
  sub_23F36145C(v14);
  v11();
  sub_23F412294();
  v15 = (uint64_t *)((char *)v13 + *(int *)(v12 + 28));
  if (qword_256E6F060 != -1)
    swift_once();
  v16 = qword_256E77B18;
  v15[3] = (uint64_t)&unk_250FD5670;
  v15[4] = (uint64_t)&off_250FD5688;
  *v15 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v29, a1 + *(int *)(v26 + 20), v28);
  sub_23F617510();
  swift_allocObject();
  sub_23F617BA0();
  v17 = v30;
  v18 = sub_23F617504();
  if (v17)
  {
    sub_23F38BB88((uint64_t)v35);
    sub_23F38BBBC((uint64_t)v36);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v6);
    result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v32);
    *v25 = v17;
  }
  else
  {
    v20 = v18;
    v21 = (int *)type metadata accessor for ConversationParser();
    v22 = v24;
    v24[3] = (uint64_t)v21;
    v22[4] = (uint64_t)&off_250FD4C58;
    v23 = sub_23F36145C(v22);
    (*(void (**)(uint64_t *, char *, uint64_t))(v37 + 32))(v23, v31, v6);
    memcpy((char *)v23 + v21[5], v36, 0x168uLL);
    memcpy((char *)v23 + v21[6], v35, 0xC8uLL);
    result = sub_23F362678(&v32, (uint64_t)v23 + v21[7]);
    *(uint64_t *)((char *)v23 + v21[8]) = v20;
  }
  return result;
}

void sub_23F413498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _UNKNOWN **v6;

  v2 = v1 + *(int *)(sub_23F413E80() + 60);
  if (*(_QWORD *)(v2 + 24))
  {
    sub_23F382FC4(v2, (uint64_t)&v4);
  }
  else
  {
    v3 = *(_OWORD *)(v2 + 16);
    v4 = *(_OWORD *)v2;
    v5 = v3;
    v6 = *(_UNKNOWN ***)(v2 + 32);
  }
  if (!*((_QWORD *)&v5 + 1))
  {
    *((_QWORD *)&v5 + 1) = &unk_250FD4790;
    v6 = &off_256E71E88;
    if (*(_QWORD *)(v2 + 24))
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v2);
    sub_23F382FC4((uint64_t)&v4, v2);
  }
  sub_23F362678(&v4, v0);
  sub_23F38FA3C();
}

void sub_23F413528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v3 = v1 + *(int *)(sub_23F413E80() + 64);
  sub_23F38FA10();
  if (v13)
  {
    sub_23F38F9FC();
  }
  else if ((v12 & 1) != 0)
  {
    sub_23F38F9D4();
    *(_QWORD *)&v24 = v2;
    v28 = 1;
  }
  else
  {
    sub_23F38F9E0(v4, v5, v6, v7, v8, v9, v10, v11, v24);
    v28 = 0;
  }
  sub_23F38F938();
  if (v13)
  {
    sub_23F38FA50();
    sub_23F411728(v22);
    sub_23F38FA10();
    if (!v13)
    {
      if ((v23 & 1) != 0)

      else
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v3);
    }
    if ((*(_BYTE *)(v0 + 40) & 1) != 0)
    {
      sub_23F38FA30();
      *(_QWORD *)v3 = v0;
      *(_BYTE *)(v3 + 40) = 1;
    }
    else
    {
      sub_23F3CDA9C();
      *(_BYTE *)(v3 + 40) = 0;
    }
  }
  else
  {
    sub_23F38FA5C(v14, v15, v16, v17, v18, v19, v20, v21, v24, v25, v26, v27, v28);
  }
  sub_23F38F98C();
}

void sub_23F4135DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13[6];

  v2 = v1 + *(int *)(sub_23F413E80() + 68);
  sub_23F38F124(v2, (uint64_t)v13, &qword_256E70740);
  sub_23F38F938();
  if (v10)
  {
    sub_23F3625D8((uint64_t)v13, &qword_256E70740);
    if (qword_256E6EE60 != -1)
      swift_once();
    v11 = sub_23F617BA0();
    v12 = sub_23F38ED40(v11);
    *(_QWORD *)(v0 + 24) = &type metadata for FullPlannerResponseParser;
    *(_QWORD *)(v0 + 32) = &off_250FD6EC8;
    *(_QWORD *)v0 = v12;
    *(_BYTE *)(v0 + 40) = 0;
    sub_23F3625D8(v2, &qword_256E70740);
    sub_23F38F124(v0, v2, &qword_256E705F0);
  }
  else
  {
    sub_23F3CDA5C(v3, v4, &qword_256E705F0, v5, v6, v7, v8, v9, v13[0]);
  }
  sub_23F38FA3C();
}

void sub_23F4136B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[6];

  v2 = sub_23F413E80();
  v3 = v1 + *(int *)(v2 + 72);
  sub_23F38F908(v2, v4, &qword_256E70730, v5, v6, v7, v8, v9, v20[0]);
  sub_23F38F938();
  if (v17)
  {
    sub_23F38F900((uint64_t)v20);
    v18 = sub_23F38FA50();
    sub_23F41153C(v18, v19);
    sub_23F38F900(v3);
    sub_23F38F124(v0, v3, &qword_256E705F8);
  }
  else
  {
    sub_23F3CDA5C(v10, v11, &qword_256E705F8, v12, v13, v14, v15, v16, v20[0]);
  }
  sub_23F38F98C();
}

void sub_23F413734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18[6];

  v1 = sub_23F413E80();
  v2 = v0 + *(int *)(v1 + 76);
  sub_23F38F908(v1, v3, &qword_256E70720, v4, v5, v6, v7, v8, v18[0]);
  sub_23F38F938();
  if (v16)
  {
    sub_23F38F900((uint64_t)v18);
    sub_23F3CDA74(v17, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t *))sub_23F4137B4);
    sub_23F38F900(v2);
    sub_23F38F99C();
  }
  else
  {
    sub_23F3CDA5C(v9, v10, &qword_256E70600, v11, v12, v13, v14, v15, v18[0]);
  }
  sub_23F38F8EC();
}

uint64_t sub_23F4137B4@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[5];
  _QWORD v19[5];
  _QWORD v20[5];
  __int128 v21[2];
  char v22;
  _BYTE v23[48];
  uint64_t v24;

  sub_23F413528();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v20[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    result = swift_willThrowTypedImpl();
LABEL_11:
    *a1 = v4;
    return result;
  }
  sub_23F362678(v21, (uint64_t)v23);
  sub_23F411B48();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v19[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
LABEL_10:
    result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v23);
    goto LABEL_11;
  }
  sub_23F362678(v21, (uint64_t)v20);
  sub_23F4135DC();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v18[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
LABEL_9:
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v20);
    goto LABEL_10;
  }
  sub_23F362678(v21, (uint64_t)v19);
  sub_23F4136B4();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v24 = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v19);
    goto LABEL_9;
  }
  sub_23F362678(v21, (uint64_t)v18);
  v6 = sub_23F35D2E8(&qword_256E73200);
  v7 = (_QWORD *)swift_allocObject();
  v8 = sub_23F38EB10((uint64_t)v19, v19[3]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (_QWORD *)((char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  v12 = sub_23F38EB10((uint64_t)v18, v18[3]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  v16 = sub_23F420668((uint64_t)v23, (uint64_t)v20, *v10, v14, v7);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v18);
  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v19);
  a2[3] = v6;
  a2[4] = &off_250FD6288;
  *a2 = v16;
  return result;
}

uint64_t sub_23F413A64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F413A70(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F38F984();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      v11 = sub_23F384B34();
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == (_DWORD)a2)
      {
        v9 = v11;
        v10 = a3[6];
      }
      else
      {
        v9 = sub_23F35D2E8(&qword_256E705E0);
        v10 = a3[9];
      }
    }
    return sub_23F36195C(a1 + v10, a2, v9);
  }
}

uint64_t sub_23F413B28()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F413B34(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23F38F984();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = a4[5];
    }
    else
    {
      v11 = sub_23F384B34();
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
      {
        v9 = v11;
        v10 = a4[6];
      }
      else
      {
        v9 = sub_23F35D2E8(&qword_256E705E0);
        v10 = a4[9];
      }
    }
    return sub_23F36196C(v5 + v10, a2, a2, v9);
  }
  return result;
}

void sub_23F413BE8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6170CC();
  if (v0 <= 0x3F)
  {
    sub_23F61B32C();
    if (v1 <= 0x3F)
    {
      sub_23F38C624();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

unint64_t sub_23F413CE0()
{
  unint64_t result;

  result = qword_256E731A8;
  if (!qword_256E731A8)
  {
    result = MEMORY[0x242670A44](&unk_23F6201BC, &unk_250FD4758);
    atomic_store(result, (unint64_t *)&qword_256E731A8);
  }
  return result;
}

uint64_t sub_23F413D20()
{
  uint64_t v0;

  sub_23F38F944();
  if (*(_QWORD *)(v0 + 160))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
  return swift_deallocObject();
}

uint64_t sub_23F413D60()
{
  uint64_t v0;

  sub_23F38F9F4();
  if (*(_QWORD *)(v0 + 80))
    sub_23F38F9EC();
  return swift_deallocObject();
}

uint64_t sub_23F413D8C()
{
  uint64_t v0;

  sub_23F3E8094();
  if (*(_QWORD *)(v0 + 200))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 176);
  return swift_deallocObject();
}

uint64_t sub_23F413DC0()
{
  sub_23F38F9F4();
  return swift_deallocObject();
}

uint64_t sub_23F413DF0()
{
  uint64_t v0;

  sub_23F3E8094();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 176);
  swift_release();
  if (*(_QWORD *)(v0 + 224))
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 256);
  return swift_deallocObject();
}

uint64_t sub_23F413E4C()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F38F9EC();
  return swift_deallocObject();
}

uint64_t sub_23F413E80()
{
  return _s15DeltaComponentsVMa();
}

_OWORD *sub_23F413E8C()
{
  return sub_23F412294();
}

_QWORD *initializeBufferWithCopyOfBuffer for StandaloneGrammarGenerator.QuotableStringConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_23F617BA0();
  return a1;
}

uint64_t destroy for EventRule()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for StandaloneGrammarGenerator.QuotableStringConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for StandaloneGrammarGenerator.QuotableStringConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F413F34(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23F413F74(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for DeltaToolListGrammarGenerator()
{
  sub_23F362C18();
}

void sub_23F413FBC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  _OWORD *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t inited;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD *v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;

  v78 = a2;
  v79 = a1;
  v77 = a5;
  v82 = *MEMORY[0x24BDAC8D0];
  v75 = sub_23F619E98();
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v73 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  v76 = a3;
  *(_QWORD *)&v80 = a4;
  if (v8)
  {
    v81 = MEMORY[0x24BEE4AF8];
    sub_23F4161C0();
    v9 = v81;
    v10 = (uint64_t *)(a3 + 40);
    v11 = v8;
    do
    {
      v13 = *(v10 - 1);
      v12 = *v10;
      v14 = sub_23F36682C();
      *(_QWORD *)(v14 + 16) = v13;
      *(_QWORD *)(v14 + 24) = v12;
      v81 = v9;
      v16 = *(_QWORD *)(v9 + 16);
      v15 = *(_QWORD *)(v9 + 24);
      sub_23F383738();
      if (v16 >= v15 >> 1)
      {
        sub_23F4161C8();
        v9 = v81;
      }
      v10 += 4;
      *(_QWORD *)(v9 + 16) = v16 + 1;
      *(_QWORD *)(v9 + 8 * v16 + 32) = v14 | 0x4000000000000000;
      --v11;
    }
    while (v11);
    a4 = v80;
  }
  v17 = *(_QWORD *)(a4 + 16);
  if (v17)
  {
    v81 = MEMORY[0x24BEE4AF8];
    sub_23F389CDC();
    sub_23F4161C0();
    v18 = v81;
    v19 = (uint64_t *)(a4 + 40);
    do
    {
      v20 = *(v19 - 1);
      v21 = *v19;
      v22 = sub_23F36682C();
      *(_QWORD *)(v22 + 16) = v20;
      *(_QWORD *)(v22 + 24) = v21;
      v81 = v18;
      v24 = *(_QWORD *)(v18 + 16);
      v23 = *(_QWORD *)(v18 + 24);
      sub_23F383738();
      if (v24 >= v23 >> 1)
      {
        sub_23F4161C8();
        v18 = v81;
      }
      v19 += 2;
      *(_QWORD *)(v18 + 16) = v24 + 1;
      *(_QWORD *)(v18 + 8 * v24 + 32) = v22 | 0x4000000000000000;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  v81 = v9;
  sub_23F386D2C();
  v25 = v81;
  if (!*(_QWORD *)(v81 + 16))
  {
    sub_23F362D18();
    v51 = v73;
    sub_23F619088();
    v52 = sub_23F619E8C();
    v53 = sub_23F61C628();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v54 = 0;
      _os_log_impl(&dword_23F35A000, v52, v53, "DeltaToolGrammarGenerator has an empty tool list!", v54, 2u);
      MEMORY[0x242670B70](v54, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v74 + 8))(v51, v75);
    v55 = v77;
    *v77 = 0u;
    v55[1] = 0u;
LABEL_48:
    sub_23F362948();
    return;
  }
  v75 = sub_23F36682C();
  *(_QWORD *)(v75 + 16) = v25;
  v26 = &unk_23F61E000;
  if (!v8)
  {
    v56 = v78;
    sub_23F383EB0();
LABEL_47:
    v57 = v75 | 0x8000000000000000;
    *(_QWORD *)&v80 = v75 | 0x8000000000000000;
    sub_23F35D2E8(&qword_256E70310);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v26[126];
    *(_QWORD *)(inited + 32) = v79;
    *(_QWORD *)(inited + 40) = v56;
    *(_QWORD *)(inited + 48) = v57;
    v81 = inited;
    sub_23F4161E8();
    sub_23F384324();
    sub_23F383EB0();
    sub_23F385E18();
    sub_23F5159BC(v81);
    sub_23F51078C(v59, v60, v61);
    v63 = sub_23F510D3C(1, v62);
    v65 = v64;
    v67 = v66;
    v69 = v68;
    sub_23F383EB0();
    sub_23F4161E8();
    v70 = sub_23F510678(v63, v65, v67, v69);
    sub_23F38432C();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    v71 = v77;
    *(_QWORD *)v77 = v79;
    v71[1] = v56;
    v71[2] = v80;
    v71[3] = v70;
    goto LABEL_48;
  }
  sub_23F617BA0();
  v27 = (uint64_t *)(sub_23F617BA0() + 56);
  v28 = MEMORY[0x24BEE4AF8];
  v80 = xmmword_23F61E7E0;
  while (1)
  {
    v29 = *(v27 - 3);
    v30 = *(v27 - 2);
    v31 = *(v27 - 1);
    v32 = *v27;
    sub_23F35D2E8(&qword_256E70310);
    v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = v80;
    v34 = (_QWORD *)(v33 + 16);
    *(_QWORD *)(v33 + 32) = v29;
    *(_QWORD *)(v33 + 40) = v30;
    *(_QWORD *)(v33 + 48) = v31;
    v35 = *(_QWORD *)(v32 + 16);
    sub_23F389CDC();
    swift_retain();
    sub_23F383E5C();
    if (!v35)
      goto LABEL_17;
    sub_23F376C6C();
    if (!*(_QWORD *)(v32 + 16))
      break;
    v33 = v46;
    sub_23F416198();
    if (v47 < v35)
      goto LABEL_53;
    sub_23F416170();
    if (!v42 && v48 < v49)
      goto LABEL_56;
    v34 = (_QWORD *)(v33 + 16);
    swift_arrayInitWithCopy();
    if (__OFADD__(*(_QWORD *)(v33 + 16), v35))
      goto LABEL_54;
    *v34 = *(_QWORD *)(v33 + 16) + v35;
LABEL_17:
    swift_bridgeObjectRelease();
    v36 = *(_QWORD *)(v33 + 16);
    v37 = *(_QWORD *)(v28 + 16);
    if (__OFADD__(v37, v36))
    {
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v37 + v36 > *(_QWORD *)(v28 + 24) >> 1)
    {
      sub_23F376C6C();
      v28 = v38;
    }
    if (*v34)
    {
      sub_23F416198();
      if (v39 < v36)
        goto LABEL_51;
      sub_23F416170();
      v42 = v42 || v40 >= v41;
      if (!v42)
        goto LABEL_56;
      swift_arrayInitWithCopy();
      if (v36)
      {
        v43 = *(_QWORD *)(v28 + 16);
        v44 = __OFADD__(v43, v36);
        v45 = v43 + v36;
        if (v44)
          goto LABEL_52;
        *(_QWORD *)(v28 + 16) = v45;
      }
    }
    else if (v36)
    {
      goto LABEL_50;
    }
    swift_bridgeObjectRelease();
    v27 += 4;
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      v56 = v78;
      v26 = (_OWORD *)&unk_23F61E000;
      goto LABEL_47;
    }
  }
  __break(1u);
LABEL_56:
  sub_23F416180();
  sub_23F416158();
  __break(1u);
}

void sub_23F4145E0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = *a3;
  v7 = a3[1];
  v9 = a3[2];
  sub_23F383E5C();
  sub_23F61C280();
  sub_23F61C280();
  sub_23F61C280();
  v10 = sub_23F36682C();
  sub_23F35D2E8(&qword_256E70070);
  v11 = sub_23F36682C();
  *(_OWORD *)(v11 + 16) = xmmword_23F61EBC0;
  v12 = sub_23F36682C();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(_QWORD *)(v11 + 32) = v12;
  v13 = sub_23F36682C();
  *(_QWORD *)(v13 + 16) = 61;
  *(_QWORD *)(v13 + 24) = 0xE100000000000000;
  *(_QWORD *)(v11 + 40) = v13;
  v14 = sub_23F36682C();
  *(_QWORD *)(v14 + 16) = v8;
  *(_QWORD *)(v14 + 24) = v7;
  *(_QWORD *)(v11 + 48) = v14 | 0x4000000000000000;
  *(_QWORD *)(v10 + 16) = v11;
  sub_23F35D2E8(&qword_256E70310);
  v15 = sub_23F36682C();
  *(_OWORD *)(v15 + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(v15 + 32) = v8;
  *(_QWORD *)(v15 + 40) = v7;
  *(_QWORD *)(v15 + 48) = v9;
  v16 = v15;
  swift_retain();
  sub_23F389CDC();
  sub_23F617BA0();
  sub_23F383E5C();
  sub_23F385E18();
  *a4 = 0x5F6D61726170;
  a4[1] = 0xE600000000000000;
  a4[2] = v10 | 0xC000000000000000;
  a4[3] = v16;
}

void sub_23F41477C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  BOOL v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v78 = *MEMORY[0x24BDAC8D0];
  v75 = 0x5F6C6F6F74;
  v76 = 0xE500000000000000;
  sub_23F61C1FC();
  sub_23F61C280();
  sub_23F362D18();
  v8 = 0x5F6C6F6F74;
  v9 = 0xE500000000000000;
  v10 = *(_QWORD *)(a3 + 16);
  if (!v10)
  {
    v61 = sub_23F36682C();
    sub_23F35D2E8(&qword_256E70070);
    v62 = sub_23F36682C();
    *(_OWORD *)(v62 + 16) = xmmword_23F61E980;
    v63 = sub_23F36682C();
    *(_QWORD *)(v63 + 16) = 0x766E695F6C6F6F74;
    *(_QWORD *)(v63 + 24) = 0xEF6E6F697461636FLL;
    *(_QWORD *)(v62 + 32) = v63 | 0x4000000000000000;
    v64 = sub_23F36682C();
    sub_23F383EB0();
    sub_23F61C280();
    *(_QWORD *)(v64 + 16) = a1;
    *(_QWORD *)(v64 + 24) = a2;
    *(_QWORD *)(v62 + 40) = v64;
    *(_QWORD *)(v61 + 16) = v62;
    v60 = v61 | 0xC000000000000000;
    v59 = MEMORY[0x24BEE4AF8];
LABEL_31:
    *a4 = v8;
    a4[1] = v9;
    a4[2] = v60;
    a4[3] = v59;
    sub_23F362948();
    return;
  }
  v67 = a4;
  sub_23F61C8E0();
  sub_23F3B1EA4();
  sub_23F362D18();
  v75 = 0x5F6C6F6F74;
  v76 = 0xE500000000000000;
  sub_23F61C280();
  sub_23F414E58(0x5F6C6F6F74, 0xE500000000000000, a3, &v75);
  sub_23F362D18();
  v11 = v75;
  v12 = v76;
  v13 = v77;
  v75 = 0x5F6C6F6F74;
  v76 = 0xE500000000000000;
  sub_23F3B1EA4();
  sub_23F61C280();
  v70 = v13;
  swift_retain();
  sub_23F384324();
  v14 = sub_23F4161A4();
  sub_23F415110(v14, v15, v16, v17, v18, v19);
  swift_release();
  sub_23F38432C();
  sub_23F362984();
  v68 = v75;
  v74 = v77;
  v72 = v76;
  v75 = 0x5F6C6F6F74;
  v76 = 0xE500000000000000;
  sub_23F3B1EA4();
  sub_23F61C280();
  sub_23F384324();
  swift_retain();
  v20 = sub_23F4161A4();
  sub_23F415378(v20, v21, v22, v23, v24, v25);
  swift_release();
  sub_23F38432C();
  sub_23F362984();
  v27 = v75;
  v26 = v76;
  v69 = v77;
  v75 = 0x5F6C6F6F74;
  v76 = 0xE500000000000000;
  sub_23F61C280();
  v73 = v75;
  v66 = v76;
  v28 = sub_23F36682C();
  sub_23F35D2E8(&qword_256E70070);
  v29 = sub_23F36682C();
  *(_OWORD *)(v29 + 16) = xmmword_23F61E980;
  v30 = sub_23F36682C();
  *(_QWORD *)(v30 + 16) = v68;
  *(_QWORD *)(v30 + 24) = v72;
  *(_QWORD *)(v29 + 32) = v30 | 0x4000000000000000;
  v31 = sub_23F36682C();
  *(_QWORD *)(v31 + 16) = v27;
  *(_QWORD *)(v31 + 24) = v26;
  *(_QWORD *)(v29 + 40) = v31 | 0x4000000000000000;
  *(_QWORD *)(v28 + 16) = v29;
  v65 = v28 | 0x8000000000000000;
  sub_23F35D2E8(&qword_256E70310);
  v32 = sub_23F36682C();
  *(_OWORD *)(v32 + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(v32 + 32) = v68;
  *(_QWORD *)(v32 + 40) = v72;
  *(_QWORD *)(v32 + 48) = v74;
  v75 = v32;
  swift_retain();
  sub_23F617BA0();
  swift_bridgeObjectRetain_n();
  sub_23F383EB0();
  sub_23F385E18();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(inited + 32) = v27;
  *(_QWORD *)(inited + 40) = v26;
  *(_QWORD *)(inited + 48) = v69;
  v75 = inited;
  swift_retain();
  sub_23F389CDC();
  sub_23F383EB0();
  sub_23F385E18();
  sub_23F4161D0();
  v34 = swift_initStackObject();
  *(_OWORD *)(v34 + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(v34 + 32) = v11;
  *(_QWORD *)(v34 + 40) = v12;
  *(_QWORD *)(v34 + 48) = v70;
  v75 = v34;
  sub_23F384324();
  swift_retain();
  sub_23F617BA0();
  sub_23F385E18();
  sub_23F4161D0();
  v71 = v75;
  v35 = (uint64_t *)(sub_23F617BA0() + 56);
  v36 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v37 = *(v35 - 3);
    v38 = *(v35 - 2);
    v40 = *(v35 - 1);
    v39 = *v35;
    v41 = swift_initStackObject();
    *(_OWORD *)(v41 + 16) = xmmword_23F61E7E0;
    v42 = (_QWORD *)(v41 + 16);
    *(_QWORD *)(v41 + 32) = v37;
    *(_QWORD *)(v41 + 40) = v38;
    *(_QWORD *)(v41 + 48) = v40;
    v43 = *(_QWORD *)(v39 + 16);
    sub_23F3B1EA4();
    swift_retain();
    sub_23F617BA0();
    if (!v43)
      goto LABEL_4;
    sub_23F376C6C();
    if (!*(_QWORD *)(v39 + 16))
      break;
    v41 = v54;
    sub_23F416198();
    if (v55 < v43)
      goto LABEL_36;
    sub_23F416170();
    if (!v50 && v56 < v57)
      goto LABEL_39;
    v42 = (_QWORD *)(v41 + 16);
    swift_arrayInitWithCopy();
    if (__OFADD__(*(_QWORD *)(v41 + 16), v43))
      goto LABEL_37;
    *v42 = *(_QWORD *)(v41 + 16) + v43;
LABEL_4:
    sub_23F362C60();
    v44 = *(_QWORD *)(v41 + 16);
    v45 = *(_QWORD *)(v36 + 16);
    if (__OFADD__(v45, v44))
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v45 + v44 > *(_QWORD *)(v36 + 24) >> 1)
    {
      sub_23F4161DC();
      v36 = v46;
    }
    if (*v42)
    {
      sub_23F416198();
      if (v47 < v44)
        goto LABEL_34;
      sub_23F416170();
      v50 = v50 || v48 >= v49;
      if (!v50)
        goto LABEL_39;
      swift_arrayInitWithCopy();
      if (v44)
      {
        v51 = *(_QWORD *)(v36 + 16);
        v52 = __OFADD__(v51, v44);
        v53 = v51 + v44;
        if (v52)
          goto LABEL_35;
        *(_QWORD *)(v36 + 16) = v53;
      }
    }
    else if (v44)
    {
      goto LABEL_33;
    }
    sub_23F362D18();
    v35 += 4;
    if (!--v10)
    {
      swift_bridgeObjectRelease();
      v75 = v71;
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F385E18();
      sub_23F362D18();
      sub_23F384364();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v59 = v75;
      v9 = v66;
      a4 = v67;
      v8 = v73;
      v60 = v65;
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_39:
  sub_23F416180();
  sub_23F416158();
  __break(1u);
}

uint64_t sub_23F414E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v6 = a1;
  sub_23F617BA0();
  sub_23F61C280();
  v8 = a2;
  v31 = a1;
  v9 = *(_QWORD *)(a3 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v28 = v6;
    v29 = a4;
    v33 = MEMORY[0x24BEE4AF8];
    sub_23F37B92C();
    v10 = v33;
    v11 = (uint64_t *)(a3 + 40);
    do
    {
      v13 = *(v11 - 1);
      v12 = *v11;
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v13;
      *(_QWORD *)(v14 + 24) = v12;
      v15 = *(_QWORD *)(v33 + 16);
      v16 = *(_QWORD *)(v33 + 24);
      sub_23F617BA0();
      if (v15 >= v16 >> 1)
        sub_23F37B92C();
      v11 += 4;
      *(_QWORD *)(v33 + 16) = v15 + 1;
      *(_QWORD *)(v33 + 8 * v15 + 32) = v14 | 0x4000000000000000;
      --v9;
    }
    while (v9);
    v6 = v28;
    a4 = v29;
    v8 = a2;
  }
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v10;
  v30 = v17 | 0x8000000000000000;
  v18 = swift_allocObject();
  sub_23F35D2E8(&qword_256E70070);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_23F61E980;
  v20 = swift_allocObject();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_23F61EBC0;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v6;
  *(_QWORD *)(v22 + 24) = a2;
  *(_QWORD *)(v21 + 32) = v22 | 0x4000000000000000;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = 8236;
  *(_QWORD *)(v23 + 24) = 0xE200000000000000;
  *(_QWORD *)(v21 + 40) = v23;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v31;
  *(_QWORD *)(v24 + 24) = v8;
  *(_QWORD *)(v21 + 48) = v24 | 0x4000000000000000;
  *(_QWORD *)(v20 + 16) = v21;
  *(_QWORD *)(v19 + 32) = v20 | 0xC000000000000000;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v31;
  *(_QWORD *)(v25 + 24) = v8;
  *(_QWORD *)(v19 + 40) = v25 | 0x4000000000000000;
  *(_QWORD *)(v18 + 16) = v19;
  sub_23F35D2E8(&qword_256E70310);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(v26 + 32) = v31;
  *(_QWORD *)(v26 + 40) = v8;
  *(_QWORD *)(v26 + 48) = v30;
  *a4 = v6;
  a4[1] = a2;
  a4[2] = v18 | 0x8000000000000000;
  a4[3] = v26;
  swift_bridgeObjectRetain_n();
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23F415110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  uint64_t v26;

  v8 = *a5;
  v9 = a5[1];
  v26 = *a5;
  sub_23F617BA0();
  sub_23F61C280();
  v10 = swift_allocObject();
  sub_23F35D2E8(&qword_256E70070);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23F61E980;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v8;
  *(_QWORD *)(v12 + 24) = v9;
  *(_QWORD *)(v11 + 32) = v12 | 0x4000000000000000;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0xE000000000000000;
  *(_QWORD *)(v11 + 40) = v13;
  *(_QWORD *)(v10 + 16) = v11;
  v22 = v10 | 0x8000000000000000;
  v14 = swift_allocObject();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_23F61D990;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0x766E695F6C6F6F74;
  *(_QWORD *)(v16 + 24) = 0xEF6E6F697461636FLL;
  *(_QWORD *)(v15 + 32) = v16 | 0x4000000000000000;
  v17 = swift_allocObject();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F61C280();
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a4;
  *(_QWORD *)(v15 + 40) = v17;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v26;
  *(_QWORD *)(v18 + 24) = v9;
  *(_QWORD *)(v15 + 48) = v18 | 0x4000000000000000;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 41;
  *(_QWORD *)(v19 + 24) = 0xE100000000000000;
  *(_QWORD *)(v15 + 56) = v19;
  *(_QWORD *)(v14 + 16) = v15;
  sub_23F35D2E8(&qword_256E70310);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(v20 + 32) = v26;
  *(_QWORD *)(v20 + 40) = v9;
  *(_QWORD *)(v20 + 48) = v22;
  *a6 = a1;
  a6[1] = a2;
  a6[2] = v14 | 0xC000000000000000;
  a6[3] = v20;
  return sub_23F617BA0();
}

uint64_t sub_23F415378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v11 = *a5;
  v10 = a5[1];
  v12 = swift_allocObject();
  sub_23F35D2E8(&qword_256E70070);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_23F61E8A0;
  v14 = swift_allocObject();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F61C280();
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  *(_QWORD *)(v13 + 32) = v14;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0xD000000000000015;
  *(_QWORD *)(v15 + 24) = 0x800000023F635750;
  *(_QWORD *)(v13 + 40) = v15 | 0x4000000000000000;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 8236;
  *(_QWORD *)(v16 + 24) = 0xE200000000000000;
  *(_QWORD *)(v13 + 48) = v16;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v11;
  *(_QWORD *)(v17 + 24) = v10;
  *(_QWORD *)(v13 + 56) = v17 | 0x4000000000000000;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 41;
  *(_QWORD *)(v18 + 24) = 0xE100000000000000;
  *(_QWORD *)(v13 + 64) = v18;
  *(_QWORD *)(v12 + 16) = v13;
  *a6 = a1;
  a6[1] = a2;
  v19 = MEMORY[0x24BEE4AF8];
  a6[2] = v12 | 0xC000000000000000;
  a6[3] = v19;
  return sub_23F617BA0();
}

uint64_t sub_23F41550C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t result;
  uint64_t v23;
  uint64_t v25;

  v3 = *a1;
  v2 = a1[1];
  v23 = a1[2];
  sub_23F383EB0();
  sub_23F61C280();
  sub_23F617BA0();
  sub_23F61C280();
  v25 = sub_23F36682C();
  sub_23F35D2E8(&qword_256E70070);
  v4 = sub_23F36682C();
  *(_OWORD *)(v4 + 16) = xmmword_23F61EBC0;
  v5 = sub_23F36682C();
  v6 = sub_23F36682C();
  *(_OWORD *)(v6 + 16) = xmmword_23F61EBC0;
  v7 = sub_23F36682C();
  *(_QWORD *)(v7 + 16) = 91;
  *(_QWORD *)(v7 + 24) = 0xE100000000000000;
  *(_QWORD *)(v6 + 32) = v7;
  v8 = sub_23F36682C();
  *(_QWORD *)(v8 + 16) = 0x5F7473696CLL;
  *(_QWORD *)(v8 + 24) = 0xE500000000000000;
  *(_QWORD *)(v6 + 40) = v8 | 0x4000000000000000;
  v9 = sub_23F36682C();
  *(_QWORD *)(v9 + 16) = 93;
  *(_QWORD *)(v9 + 24) = 0xE100000000000000;
  *(_QWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v4 + 32) = v5 | 0xC000000000000000;
  v10 = sub_23F36682C();
  *(_QWORD *)(v10 + 16) = v3;
  *(_QWORD *)(v10 + 24) = v2;
  *(_QWORD *)(v4 + 40) = v10 | 0x4000000000000000;
  v11 = sub_23F36682C();
  *(_QWORD *)(v11 + 16) = 23899;
  *(_QWORD *)(v11 + 24) = 0xE200000000000000;
  *(_QWORD *)(v4 + 48) = v11;
  *(_QWORD *)(v25 + 16) = v4;
  v12 = sub_23F36682C();
  v13 = sub_23F36682C();
  *(_OWORD *)(v13 + 16) = xmmword_23F61E980;
  v14 = sub_23F36682C();
  v15 = sub_23F36682C();
  *(_OWORD *)(v15 + 16) = xmmword_23F61EBC0;
  v16 = sub_23F36682C();
  *(_QWORD *)(v16 + 16) = 0x5F7473696CLL;
  *(_QWORD *)(v16 + 24) = 0xE500000000000000;
  *(_QWORD *)(v15 + 32) = v16 | 0x4000000000000000;
  v17 = sub_23F36682C();
  *(_QWORD *)(v17 + 16) = 8236;
  *(_QWORD *)(v17 + 24) = 0xE200000000000000;
  *(_QWORD *)(v15 + 40) = v17;
  v18 = sub_23F36682C();
  *(_QWORD *)(v18 + 16) = v3;
  *(_QWORD *)(v18 + 24) = v2;
  *(_QWORD *)(v15 + 48) = v18 | 0x4000000000000000;
  *(_QWORD *)(v14 + 16) = v15;
  *(_QWORD *)(v13 + 32) = v14 | 0xC000000000000000;
  v19 = sub_23F36682C();
  *(_QWORD *)(v19 + 16) = v3;
  *(_QWORD *)(v19 + 24) = v2;
  *(_QWORD *)(v13 + 40) = v19 | 0x4000000000000000;
  *(_QWORD *)(v12 + 16) = v13;
  sub_23F35D2E8(&qword_256E70310);
  v20 = sub_23F36682C();
  *(_OWORD *)(v20 + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(v20 + 32) = 0x5F7473696CLL;
  *(_QWORD *)(v20 + 40) = 0xE500000000000000;
  *(_QWORD *)(v20 + 48) = v12 | 0x8000000000000000;
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = v23;
  swift_retain();
  sub_23F384324();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_23F389CDC();
  swift_retain();
  sub_23F4161E8();
  sub_23F385E18();
  sub_23F617BA0();
  sub_23F383EB0();
  sub_23F385E18();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23F362C60();
  result = sub_23F384364();
  *a2 = 0x5F7473696CLL;
  a2[1] = 0xE500000000000000;
  a2[2] = v25 | 0x8000000000000000;
  a2[3] = v20;
  return result;
}

uint64_t sub_23F41589C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = sub_23F36682C();
  sub_23F35D2E8(&qword_256E70070);
  v3 = sub_23F36682C();
  *(_OWORD *)(v3 + 16) = xmmword_23F61E980;
  v4 = sub_23F36682C();
  strcpy((char *)(v4 + 16), "quoted_string");
  *(_WORD *)(v4 + 30) = -4864;
  *(_QWORD *)(v3 + 32) = v4 | 0x4000000000000000;
  result = sub_23F36682C();
  *(_QWORD *)(result + 16) = 0xD000000000000011;
  *(_QWORD *)(result + 24) = 0x800000023F6356F0;
  *(_QWORD *)(v3 + 40) = result | 0x4000000000000000;
  *(_QWORD *)(v2 + 16) = v3;
  *a1 = 0xD000000000000012;
  a1[1] = 0x800000023F635770;
  v6 = MEMORY[0x24BEE4AF8];
  a1[2] = v2 | 0x8000000000000000;
  a1[3] = v6;
  return result;
}

uint64_t sub_23F415994@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;

  sub_23F415B24(a1);
  v4 = v3;
  TypeIdentifier.PrimitiveTypeIdentifier.selfLoggingTypeName.getter();
  sub_23F61C1FC();
  sub_23F362984();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_23F4161C0();
    v7 = v15;
    v8 = (uint64_t *)(v4 + 40);
    do
    {
      v10 = *(v8 - 1);
      v9 = *v8;
      v11 = sub_23F36682C();
      *(_QWORD *)(v11 + 16) = v10;
      *(_QWORD *)(v11 + 24) = v9;
      v13 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      sub_23F383738();
      if (v13 >= v12 >> 1)
        sub_23F4161C8();
      v8 += 2;
      *(_QWORD *)(v15 + 16) = v13 + 1;
      *(_QWORD *)(v15 + 8 * v13 + 32) = v11 | 0x4000000000000000;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
  }
  result = sub_23F36682C();
  *(_QWORD *)(result + 16) = v7;
  *a2 = 0x766974696D697270;
  a2[1] = 0xEA00000000005F65;
  a2[2] = result | 0x8000000000000000;
  a2[3] = v6;
  return result;
}

double sub_23F415B24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v11;
  double result;
  uint64_t v13;

  v2 = sub_23F61B9BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x24BEB9C90])
  {
    v7 = 0xE700000000000000;
    v8 = 0x6E61656C6F6F62;
  }
  else if (v6 == *MEMORY[0x24BEB9C80])
  {
    v7 = 0xE700000000000000;
    v8 = 0x72656765746E69;
  }
  else if (v6 == *MEMORY[0x24BEB9CB0] || v6 == *MEMORY[0x24BEB9CC8])
  {
    v7 = 0xE500000000000000;
    v8 = 0x74616F6C66;
  }
  else if (v6 == *MEMORY[0x24BEB9CC0] || v6 == *MEMORY[0x24BEB9C70])
  {
    v8 = 0xD000000000000012;
    v7 = 0x800000023F635710;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v7 = 0xED0000676E697274;
    v8 = 0x735F6465746F7571;
  }
  sub_23F35D2E8(&qword_256E700E8);
  v11 = swift_allocObject();
  *(_QWORD *)&result = 2;
  *(_OWORD *)(v11 + 16) = xmmword_23F61E980;
  *(_QWORD *)(v11 + 32) = v8;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = 0xD000000000000011;
  *(_QWORD *)(v11 + 56) = 0x800000023F6356F0;
  return result;
}

uint64_t sub_23F415CF0@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X8>)
{
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  _QWORD *v41;
  __int128 v42;
  uint64_t v43;

  sub_23F61C1FC();
  sub_23F61C280();
  sub_23F362C60();
  v3 = &unk_23F61E000;
  v4 = a1[2];
  v41 = a1;
  if (v4)
  {
    v43 = MEMORY[0x24BEE4AF8];
    sub_23F4161C0();
    v5 = v43;
    v6 = a1 + 5;
    v7 = v4;
    do
    {
      v8 = *(v6 - 1);
      v9 = *v6;
      v10 = sub_23F36682C();
      *(_QWORD *)(v10 + 16) = v8;
      *(_QWORD *)(v10 + 24) = v9;
      v12 = *(_QWORD *)(v43 + 16);
      v11 = *(_QWORD *)(v43 + 24);
      sub_23F383738();
      if (v12 >= v11 >> 1)
        sub_23F4161C8();
      v6 += 4;
      *(_QWORD *)(v43 + 16) = v12 + 1;
      *(_QWORD *)(v43 + 8 * v12 + 32) = v10 | 0x4000000000000000;
      --v7;
    }
    while (v7);
    a1 = v41;
    v3 = (_OWORD *)&unk_23F61E000;
  }
  else
  {
    sub_23F35D2E8(&qword_256E70070);
    v5 = sub_23F36682C();
    *(_OWORD *)(v5 + 16) = xmmword_23F61E7E0;
    v13 = sub_23F36682C();
    *(_QWORD *)(v13 + 16) = 0x6D756E655F796E61;
    *(_QWORD *)(v13 + 24) = 0xE800000000000000;
    *(_QWORD *)(v5 + 32) = v13 | 0x4000000000000000;
  }
  result = sub_23F36682C();
  *(_QWORD *)(result + 16) = v5;
  if (!v4)
  {
    v16 = MEMORY[0x24BEE4AF8];
LABEL_38:
    *a2 = 0x7079745F6D756E65;
    a2[1] = 0xEA00000000005F65;
    a2[2] = result | 0x8000000000000000;
    a2[3] = v16;
    return result;
  }
  v39 = result;
  sub_23F617BA0();
  v15 = a1 + 7;
  v16 = MEMORY[0x24BEE4AF8];
  v42 = v3[126];
  while (1)
  {
    v17 = *(v15 - 3);
    v18 = *(v15 - 2);
    v19 = *(v15 - 1);
    v20 = *v15;
    sub_23F35D2E8(&qword_256E70310);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v42;
    v22 = (_QWORD *)(inited + 16);
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v18;
    *(_QWORD *)(inited + 48) = v19;
    v23 = *(_QWORD *)(v20 + 16);
    sub_23F389CDC();
    swift_retain();
    sub_23F617BA0();
    if (!v23)
      goto LABEL_11;
    sub_23F4161DC();
    if (!*(_QWORD *)(v20 + 16))
      break;
    inited = v34;
    sub_23F416198();
    if (v35 < v23)
      goto LABEL_43;
    sub_23F416170();
    if (!v30 && v36 < v37)
      goto LABEL_46;
    v22 = (_QWORD *)(inited + 16);
    swift_arrayInitWithCopy();
    if (__OFADD__(*(_QWORD *)(inited + 16), v23))
      goto LABEL_44;
    *v22 = *(_QWORD *)(inited + 16) + v23;
LABEL_11:
    swift_bridgeObjectRelease();
    v24 = *(_QWORD *)(inited + 16);
    v25 = *(_QWORD *)(v16 + 16);
    if (__OFADD__(v25, v24))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v25 + v24 > *(_QWORD *)(v16 + 24) >> 1)
    {
      sub_23F376C6C();
      v16 = v26;
    }
    if (*v22)
    {
      sub_23F416198();
      if (v27 < v24)
        goto LABEL_41;
      sub_23F416170();
      v30 = v30 || v28 >= v29;
      if (!v30)
        goto LABEL_46;
      swift_arrayInitWithCopy();
      if (v24)
      {
        v31 = *(_QWORD *)(v16 + 16);
        v32 = __OFADD__(v31, v24);
        v33 = v31 + v24;
        if (v32)
          goto LABEL_42;
        *(_QWORD *)(v16 + 16) = v33;
      }
    }
    else if (v24)
    {
      goto LABEL_40;
    }
    sub_23F384364();
    v15 += 4;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      result = v39;
      goto LABEL_38;
    }
  }
  __break(1u);
LABEL_46:
  sub_23F416180();
  result = sub_23F416158();
  __break(1u);
  return result;
}

uint64_t sub_23F4160D0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F4160F4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void type metadata accessor for DeltaEntityTypeGrammarGenerator()
{
  sub_23F362C18();
}

void type metadata accessor for DeltaToolGrammarGenerator()
{
  sub_23F362C18();
}

void type metadata accessor for DeltaCollectionGrammarGenerator()
{
  sub_23F362C18();
}

void type metadata accessor for DeltaGrammarEnumerationGenerator()
{
  sub_23F362C18();
}

void type metadata accessor for DeltaPrimitiveTypeGrammarGenerator()
{
  sub_23F362C18();
}

uint64_t sub_23F416158()
{
  return sub_23F61CA9C();
}

uint64_t sub_23F4161A4()
{
  uint64_t v0;

  return v0;
}

void sub_23F4161C0()
{
  sub_23F37B92C();
}

void sub_23F4161C8()
{
  sub_23F37B92C();
}

void sub_23F4161D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = v0;
  sub_23F385E18();
}

void sub_23F4161DC()
{
  sub_23F376C6C();
}

uint64_t sub_23F4161E8()
{
  return swift_retain();
}

uint64_t sub_23F4161F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_23F6181DC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  v6 = v5 - v4;
  v7 = sub_23F6182FC();
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v25 = v9 - v8;
  v10 = sub_23F617E4C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F38F964();
  v14 = v13 - v12;
  v15 = sub_23F61814C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  sub_23F38F964();
  v19 = v18 - v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v18 - v17, a1, v15);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v19, v15);
  if (v20 == *MEMORY[0x24BE53360])
  {
    sub_23F416950();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v19, v2);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v6, v2);
    if (v21 == *MEMORY[0x24BE53530])
      return 6;
    if (v21 == *MEMORY[0x24BE53500])
      return 2;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
    return 24;
  }
  if (v20 == *MEMORY[0x24BE53358])
  {
    sub_23F416950();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v14, v19, v10);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 88))(v14, v10);
    if (v23 == *MEMORY[0x24BE525E0])
      return 18;
    if (v23 == *MEMORY[0x24BE525E8])
      return 0;
    if (v23 == *MEMORY[0x24BE525F0])
      return 21;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
    return 24;
  }
  if (v20 != *MEMORY[0x24BE53350])
  {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v15);
    return 24;
  }
  sub_23F416950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v25, v19, v27);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 88))(v25, v27);
  if (v24 == *MEMORY[0x24BE53978])
    return 19;
  if (v24 == *MEMORY[0x24BE539A8])
    return 17;
  if (v24 == *MEMORY[0x24BE53970])
    return 15;
  if (v24 == *MEMORY[0x24BE53998])
    return 10;
  if (v24 == *MEMORY[0x24BE53980])
    return 23;
  if (v24 == *MEMORY[0x24BE539A0])
    return 4;
  if (v24 == *MEMORY[0x24BE53988])
    return 13;
  if (v24 != *MEMORY[0x24BE53990])
  {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    return 24;
  }
  return 5;
}

uint64_t sub_23F416588(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v2 = sub_23F617D14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  v6 = v5 - v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5 - v4, a1, v2);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x24BE52248])
    return 16;
  if (v7 == *MEMORY[0x24BE522B8])
    return 14;
  if (v7 == *MEMORY[0x24BE52298])
    return 9;
  if (v7 == *MEMORY[0x24BE52268])
    return 22;
  if (v7 == *MEMORY[0x24BE522A0])
    return 3;
  if (v7 == *MEMORY[0x24BE52250])
    return 11;
  if (v7 == *MEMORY[0x24BE52258])
    return 12;
  if (v7 == *MEMORY[0x24BE522A8])
    return 20;
  if (v7 == *MEMORY[0x24BE522C0])
    return 8;
  if (v7 == *MEMORY[0x24BE52278])
    return 7;
  if (v7 == *MEMORY[0x24BE52290])
    return 1;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  return 24;
}

uint64_t sub_23F41674C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F416788 + 4 * byte_23F620FB4[a1]))(0xD000000000000014, 0x800000023F6359E0);
}

uint64_t sub_23F416788()
{
  uint64_t v0;

  return v0 - 10;
}

uint64_t sub_23F416950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

uint64_t sub_23F416960(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_23F61B8A8();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = sub_23F366578();
  sub_23F35D2E8(&qword_256E732E8);
  v2[8] = sub_23F366578();
  sub_23F35D2E8(&qword_256E701F0);
  v2[9] = sub_23F366578();
  v4 = sub_23F61B89C();
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 - 8);
  v2[12] = sub_23F366578();
  v5 = sub_23F619E98();
  v2[13] = v5;
  v2[14] = *(_QWORD *)(v5 - 8);
  v2[15] = sub_23F366578();
  return swift_task_switch();
}

uint64_t sub_23F416A1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BOOL8 v62;
  uint64_t v63;
  uint64_t v64;

  if (*(_QWORD *)(v0[4] + 16))
  {
    sub_23F35D2E8(&qword_256E71D50);
    v1 = sub_23F618AE8();
    v2 = *(_QWORD *)(v1 - 8);
    v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_23F61E7E0;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v2 + 104))(v4 + v3, *MEMORY[0x24BE57270], v1);
    swift_retain();
    v7 = sub_23F6191D8();
    sub_23F384120();
    sub_23F6190DC();
    swift_bridgeObjectRetain_n();
    v8 = sub_23F619E8C();
    v9 = sub_23F61C61C();
    v10 = os_log_type_enabled(v8, v9);
    v12 = v0[14];
    v11 = v0[15];
    v13 = v0[13];
    if (v10)
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      *(_DWORD *)v14 = 136315138;
      v15 = sub_23F618D28();
      v16 = sub_23F617BA0();
      v17 = MEMORY[0x24266F8F8](v16, v15);
      v19 = v18;
      swift_bridgeObjectRelease();
      sub_23F37AE00(v17, v19, &v64);
      v0[2] = v20;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      sub_23F4170FC();
      _os_log_impl(&dword_23F35A000, v8, v9, "On device location context: %s", v14, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }
    sub_23F4170FC();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    v21 = v0[8];
    sub_23F36FD2C(v7, v21);
    swift_bridgeObjectRelease();
    v22 = sub_23F618D28();
    v23 = sub_23F36195C(v21, 1, v22);
    v24 = v0[8];
    v25 = v0[9];
    if (v23 == 1)
    {
      sub_23F3CFCB0(v0[8], &qword_256E732E8);
      v26 = sub_23F61B92C();
      sub_23F36196C(v25, 1, 1, v26);
LABEL_9:
      v28 = v0[9];
      sub_23F3668FC();
      sub_23F3CFCB0(v28, &qword_256E701F0);
LABEL_10:
      v29 = (_OWORD *)v0[3];
      *v29 = xmmword_23F620FD0;
      v29[1] = 0u;
      v29[2] = 0u;
      *(_OWORD *)((char *)v29 + 41) = 0u;
LABEL_11:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v6 = (uint64_t (*)(void))v0[1];
      return v6();
    }
    sub_23F618CE0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v24, v22);
    v27 = sub_23F61B92C();
    if (sub_23F36195C(v25, 1, v27) == 1)
      goto LABEL_9;
    v31 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(_QWORD, uint64_t))(v31 + 88))(v0[9], v27) != *MEMORY[0x24BEB9A00])
    {
      sub_23F3668FC();
      sub_23F417108(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
      goto LABEL_10;
    }
    v33 = v0[6];
    v32 = v0[7];
    v34 = v0[5];
    sub_23F417108(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 96));
    v35 = swift_projectBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v35, v34);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v33 + 88))(v32, v34) != *MEMORY[0x24BEB9968])
    {
      v49 = v0[6];
      v48 = v0[7];
      v50 = v0[5];
      sub_23F3668FC();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
      swift_release();
      goto LABEL_10;
    }
    v37 = v0[11];
    v36 = v0[12];
    v38 = v0[10];
    v39 = v0[7];
    (*(void (**)(uint64_t, _QWORD))(v0[6] + 96))(v39, v0[5]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v36, v39, v38);
    swift_release();
    v40 = (void *)sub_23F61B890();
    v41 = sub_23F41709C(v40);
    v43 = v42;
    v44 = sub_23F61C10C();
    if (v43)
    {
      if (v41 == v44 && v43 == v45)
      {
        sub_23F384120();
      }
      else
      {
        v47 = sub_23F61CC64();
        sub_23F384120();
        if ((v47 & 1) == 0)
          goto LABEL_27;
      }
      swift_bridgeObjectRelease();
      v41 = 0;
      v43 = 0;
    }
    else
    {
      sub_23F384120();
    }
LABEL_27:
    v51 = objc_msgSend(v40, sel_location);
    v52 = v51;
    if (v51)
    {
      objc_msgSend(v51, sel_coordinate);
      v54 = v53;
      v56 = v55;

    }
    else
    {
      v54 = 0;
      v56 = 0;
    }
    v57 = objc_msgSend(v40, sel_name);
    if (v57)
    {
      v58 = v57;
      v59 = sub_23F61C10C();
      v61 = v60;
      sub_23F3668FC();

    }
    else
    {
      sub_23F3668FC();

      v59 = 0;
      v61 = 0;
    }
    v62 = v52 == 0;
    v63 = v0[3];
    (*(void (**)(_QWORD, _QWORD))(v0[11] + 8))(v0[12], v0[10]);
    *(_QWORD *)v63 = v59;
    *(_QWORD *)(v63 + 8) = v61;
    *(_QWORD *)(v63 + 16) = v41;
    *(_QWORD *)(v63 + 24) = v43;
    *(_QWORD *)(v63 + 32) = v54;
    *(_QWORD *)(v63 + 40) = v62;
    *(_QWORD *)(v63 + 48) = v56;
    *(_BYTE *)(v63 + 56) = v62;
    goto LABEL_11;
  }
  sub_23F366414();
  swift_allocError();
  *v5 = 0xD000000000000026;
  v5[1] = 0x800000023F635A50;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_23F417058()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DeviceContextClient()
{
  return objc_opt_self();
}

uint64_t sub_23F41709C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_category);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_23F61C10C();

  return v3;
}

uint64_t sub_23F4170FC()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F417108@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t ToolKitDeviceUnlockStateProvider.isDeviceUnlocked.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_23F61BB00();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *MEMORY[0x24BEBA140];
  v5 = sub_23F61BAE8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v3, v4, v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEBA150], v0);
  LOBYTE(v4) = sub_23F61BAF4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_23F4171D8()
{
  return ToolKitDeviceUnlockStateProvider.isDeviceUnlocked.getter() & 1;
}

uint64_t dispatch thunk of DeviceUnlockStateProviding.isDeviceUnlocked.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for ToolKitDeviceUnlockStateProvider()
{
  return &type metadata for ToolKitDeviceUnlockStateProvider;
}

uint64_t *sub_23F417208(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F617F90();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_23F4172A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_23F617F90();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_23F41730C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F617F90();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_23F41737C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F617F90();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_23F4173EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F617F90();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_23F41745C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F617F90();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_23F4174CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4174D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F4175D8();
  return sub_23F36195C(v1, v0, v2);
}

uint64_t sub_23F417500()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F41750C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F4175D8();
  return sub_23F36196C(v1, v0, v0, v2);
}

uint64_t type metadata accessor for DialogOutput()
{
  uint64_t result;

  result = qword_256E73348;
  if (!qword_256E73348)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F417570()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F617F90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F4175D8()
{
  return sub_23F617F90();
}

ValueMetadata *type metadata accessor for SuccessRequiresOptInDialogPolicy()
{
  return &type metadata for SuccessRequiresOptInDialogPolicy;
}

ValueMetadata *type metadata accessor for AlwaysDialogPolicy()
{
  return &type metadata for AlwaysDialogPolicy;
}

uint64_t sub_23F41760C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v2 = sub_23F61A504();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v24 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - v6;
  v8 = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  if (v9)
  {
    v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v11 = *(_QWORD *)(v3 + 72);
    v20[1] = a1;
    v21 = v11;
    v22 = v10;
    v23 = v3;
    v12 = a1 + v10;
    v13 = v11;
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v14(v7, v12, v2);
      if ((sub_23F4177E8() & 1) != 0)
      {
        v15 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
        v15(v24, v7, v2);
        v16 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37C028();
          v16 = v25;
        }
        v17 = *(_QWORD *)(v16 + 16);
        if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
        {
          sub_23F37C028();
          v16 = v25;
        }
        *(_QWORD *)(v16 + 16) = v17 + 1;
        v18 = v16 + v22 + v17 * v21;
        v13 = v21;
        v15((char *)v18, v24, v2);
        v25 = v16;
        v3 = v23;
      }
      else
      {
        sub_23F417C4C();
      }
      v12 += v13;
      --v9;
    }
    while (v9);
    v8 = v25;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23F4177E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v0 = sub_23F35D2E8(&qword_256E71CF8);
  MEMORY[0x24BDAC7A8](v0);
  v38 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_23F618134();
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F61ACA8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v36 - v9;
  v11 = sub_23F35D2E8(&qword_256E6FB18);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v37 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v39 = (char *)&v36 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v36 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v36 - v19;
  sub_23F61A4F8();
  sub_23F61AC9C();
  v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22 = v10;
  v23 = v3;
  v21(v22, v4);
  sub_23F61A4F8();
  sub_23F61AC78();
  v24 = v8;
  v25 = v40;
  v21(v24, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v25 + 88))(v3, v41) == *MEMORY[0x24BE53328])
  {
    v27 = (uint64_t)v37;
    v26 = (uint64_t)v38;
    sub_23F417C04((uint64_t)v20, (uint64_t)v18);
    v28 = sub_23F61811C();
    v29 = (uint64_t)v20;
    if (sub_23F36195C((uint64_t)v18, 1, v28) == 1)
    {
      sub_23F3CFCB0((uint64_t)v18, &qword_256E6FB18);
      v30 = sub_23F617F0C();
      sub_23F36196C(v26, 1, 1, v30);
      v31 = (uint64_t)v39;
    }
    else
    {
      sub_23F618104();
      v29 = (uint64_t)v20;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v18, v28);
      v33 = sub_23F617F0C();
      v34 = sub_23F36195C(v26, 1, v33);
      v31 = (uint64_t)v39;
      if (v34 != 1)
      {
        sub_23F3CFCB0(v26, &qword_256E71CF8);
        sub_23F417C04(v29, v31);
        sub_23F3CFCB0(v31, &qword_256E6FB18);
        sub_23F3CFCB0(v29, &qword_256E6FB18);
        goto LABEL_11;
      }
    }
    sub_23F3CFCB0(v26, &qword_256E71CF8);
    sub_23F417C04(v29, v31);
    sub_23F417C04(v31, v27);
    if (sub_23F36195C(v27, 1, v28) == 1)
    {
      sub_23F3CFCB0(v31, &qword_256E6FB18);
      sub_23F3CFCB0(v29, &qword_256E6FB18);
      sub_23F3CFCB0(v27, &qword_256E6FB18);
      v32 = 0;
      goto LABEL_12;
    }
    v32 = MEMORY[0x24266B5F0]();
    sub_23F3CFCB0(v31, &qword_256E6FB18);
    sub_23F3CFCB0(v29, &qword_256E6FB18);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
    if (!v32)
      goto LABEL_12;
    swift_bridgeObjectRelease();
LABEL_11:
    v32 = 1;
    goto LABEL_12;
  }
  sub_23F3CFCB0((uint64_t)v20, &qword_256E6FB18);
  v32 = 1;
LABEL_12:
  (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v41);
  return v32;
}

uint64_t sub_23F417C04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FB18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F417C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F417C5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F35D2E8(&qword_256E73540);
    v3 = sub_23F61CA90();
  }
  else
  {
    v3 = MEMORY[0x24BEE4B00];
  }
  v6 = v3;
  sub_23F41B028(a1, 1, &v6);
  v4 = v6;
  if (v1)
    swift_release();
  return v4;
}

uint64_t sub_23F417CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_23F41B3C4(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = v4;
  sub_23F41B738(a2, v2 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime12DialogValues_typedValueFormatter);
  return v2;
}

_QWORD *sub_23F417D48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint8_t *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;

  v2 = sub_23F61BC5C();
  v56 = *(_QWORD *)(v2 - 8);
  v57 = v2;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v55 = v4;
  sub_23F39C56C();
  v5 = type metadata accessor for EntitySalientContent();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v59 = v7;
  sub_23F39C56C();
  v64 = sub_23F61B7AC();
  v61 = *(_QWORD *)(v64 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v60 = v9;
  sub_23F39C56C();
  v10 = sub_23F61B7C4();
  v62 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  v68 = v12;
  sub_23F39C56C();
  v13 = sub_23F61B92C();
  v14 = *(_QWORD **)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v54 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v53 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v53 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v53 - v23;
  v25 = a1;
  sub_23F3C0690((uint64_t)v22, a1);
  v26 = (uint64_t (*)(char *, uint64_t))v14[11];
  v27 = v26(v22, v13);
  v28 = *MEMORY[0x24BEB99E8];
  v58 = v5;
  v67 = v14;
  if (v27 == v28)
  {
    v53 = v25;
    v65 = v24;
    sub_23F362A28((uint64_t)v22, (uint64_t (*)(uint64_t, uint64_t))v14[12]);
    v29 = swift_projectBox();
    v31 = v62;
    v30 = v63;
    v14 = v68;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v62 + 16))(v68, v29, v63);
    swift_release();
    sub_23F368640((uint64_t)v14, *(_QWORD *)(v69 + 16));
    if (!v32)
    {
      sub_23F41BAA8();
      sub_23F362D64();
      *v46 = 0;
      swift_willThrow();
      (*(void (**)(_QWORD *, uint64_t))(v31 + 8))(v68, v30);
      return v14;
    }
    v33 = v32;
    (*(void (**)(_QWORD *, uint64_t))(v31 + 8))(v68, v30);
    v24 = v65;
    sub_23F3C0690((uint64_t)v65, v33+ OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime12DialogValuesP33_C6AF0A8DD37723F6A810D22336ACBF4C13ResolvedValue_resolvedTypedValue);
    swift_release();
    v34 = v53;
  }
  else
  {
    sub_23F362A28((uint64_t)v22, (uint64_t (*)(uint64_t, uint64_t))v14[1]);
    sub_23F3C0690((uint64_t)v24, v25);
    v34 = v25;
  }
  sub_23F3C0690((uint64_t)v19, v34);
  if (v26(v19, v13) != *MEMORY[0x24BEB99E0])
  {
    sub_23F41C54C((uint64_t)v19);
    v44 = v66;
    v45 = sub_23F600510((uint64_t)v24);
    if (v44)
    {
      sub_23F41C54C((uint64_t)v24);
      return v14;
    }
    v14 = v45;
    v47 = (uint64_t)v24;
LABEL_18:
    sub_23F41C54C(v47);
    return v14;
  }
  v65 = v24;
  v35 = v67;
  sub_23F362A28((uint64_t)v19, (uint64_t (*)(uint64_t, uint64_t))v67[12]);
  v36 = swift_projectBox();
  v38 = v60;
  v37 = v61;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v60, v36, v64);
  swift_release();
  v14 = v59;
  sub_23F426538(v38, v59);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v48 = v55;
    v49 = v56;
    v50 = v57;
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v56 + 32))(v55, v14, v57);
    v14 = (_QWORD *)sub_23F61BC2C();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v64);
    sub_23F362A28((uint64_t)v65, (uint64_t (*)(uint64_t, uint64_t))v35[1]);
    return v14;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_23F41BAA8();
    sub_23F362D64();
    *v51 = 1;
    swift_willThrow();
    sub_23F41C4AC();
    ((void (*)(char *, uint64_t))v35[1])(v65, v13);
    return v14;
  }
  swift_bridgeObjectRelease();
  v40 = sub_23F35D2E8(&qword_256E6FE48);
  v41 = (uint64_t)v54;
  ((void (*)(char *, char *, uint64_t))v35[4])(v54, (char *)v14 + *(int *)(v40 + 48), v13);
  v42 = v66;
  v43 = sub_23F417D48(v41);
  if (!v42)
  {
    v14 = (_QWORD *)v43;
    sub_23F41C54C(v41);
    sub_23F41C4AC();
    v47 = (uint64_t)v65;
    goto LABEL_18;
  }
  v14 = (_QWORD *)v35[1];
  ((void (*)(uint64_t, uint64_t))v14)(v41, v13);
  sub_23F41C4AC();
  ((void (*)(char *, uint64_t))v14)(v65, v13);
  return v14;
}

uint64_t sub_23F418208()
{
  sub_23F41C15C();
  return sub_23F61CCAC();
}

uint64_t sub_23F418230()
{
  sub_23F41C15C();
  return sub_23F61CCA0();
}

uint64_t sub_23F418258()
{
  uint64_t v0;

  v0 = qword_256E73380;
  sub_23F617BA0();
  return v0;
}

uint64_t sub_23F41828C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime12DialogValuesP33_C6AF0A8DD37723F6A810D22336ACBF4C13ResolvedValue_resolvedTypedValue;
  v2 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t DialogValues.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_23F3663AC(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime12DialogValues_typedValueFormatter, type metadata accessor for TypedValueFormatter);
  return v0;
}

uint64_t DialogValues.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_23F3663AC(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime12DialogValues_typedValueFormatter, type metadata accessor for TypedValueFormatter);
  return swift_deallocClassInstance();
}

uint64_t sub_23F418350()
{
  return type metadata accessor for DialogValues(0);
}

uint64_t type metadata accessor for DialogValues(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E733C0);
}

uint64_t sub_23F41836C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TypedValueFormatter(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DialogValues()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_23F4183F4()
{
  return type metadata accessor for DialogValues.ResolvedValue(0);
}

uint64_t type metadata accessor for DialogValues.ResolvedValue(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E73488);
}

uint64_t sub_23F418410()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B92C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23F41847C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v4 = sub_23F384048();
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = sub_23F366578();
  v5 = sub_23F61B7C4();
  v3[13] = v5;
  v3[14] = *(_QWORD *)(v5 - 8);
  v3[15] = sub_23F366578();
  sub_23F35D2E8(&qword_256E73518);
  v3[16] = sub_23F366578();
  v6 = sub_23F35D2E8(&qword_256E6FE10);
  v3[17] = v6;
  v3[18] = *(_QWORD *)(v6 - 8);
  v3[19] = sub_23F366654();
  v3[20] = sub_23F3666CC();
  v7 = sub_23F35D2E8(&qword_256E6FE30);
  v3[21] = v7;
  v3[22] = *(_QWORD *)(v7 - 8);
  v3[23] = sub_23F366654();
  v3[24] = sub_23F3666CC();
  v3[25] = sub_23F3666CC();
  type metadata accessor for TypedValueFormatter(0);
  v3[26] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F418564()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);

  sub_23F418BD8(*(_QWORD *)(v0 + 72), v0 + 16);
  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 216) = v1;
  v2 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(v0 + 48);
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256E73530 + dword_256E73530);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v3;
  *v3 = v0;
  v3[1] = sub_23F418608;
  return v5((uint64_t)&unk_256E73528, v1, *(_QWORD *)(v0 + 56));
}

uint64_t sub_23F418608(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc();
  swift_release();
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F418660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = MEMORY[0x24BEE4AF8];
  v69 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = v1 + 32;
    sub_23F617BA0();
    do
    {
      v4 += 8;
      sub_23F617BA0();
      sub_23F386DE4();
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v2 = v69;
  }
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v2 + 16);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v48 = MEMORY[0x24BEE4AF8];
    goto LABEL_24;
  }
  v7 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 176);
  v56 = *(_QWORD *)(v0 + 144);
  v54 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 88);
  v10 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v60 = *(_QWORD *)(v6 + 72);
  v59 = *MEMORY[0x24BEB99E8];
  sub_23F383738();
  v67 = MEMORY[0x24BEE4AF8];
  v11 = type metadata accessor for DialogValuesResolver.CollectedValue;
  v61 = v7;
  v12 = v9;
  v66 = v9;
  v55 = v8;
  do
  {
    v13 = v11;
    v14 = *(_QWORD *)(v0 + 192);
    v15 = *(_QWORD *)(v0 + 200);
    v16 = *(_QWORD *)(v0 + 80);
    v68 = v10;
    sub_23F3D96EC(v10, v15, &qword_256E6FE30);
    v17 = *(int *)(v7 + 48);
    v18 = v14 + v17;
    v19 = v7;
    v20 = v15 + v17;
    v21 = v15;
    v11 = v13;
    v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    v62(v14, v21, v16);
    v64 = v20;
    sub_23F41C5C4(v20);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 88))(v14, v16) != v59)
    {
      v29 = (uint64_t *)(v0 + 192);
      goto LABEL_11;
    }
    v22 = v19;
    v58 = v5;
    v23 = *(_QWORD *)(v0 + 200);
    v24 = *(_QWORD *)(v0 + 184);
    v25 = *(_QWORD *)(v0 + 120);
    v57 = *(_QWORD *)(v0 + 104);
    v26 = *(_QWORD *)(v0 + 80);
    sub_23F383E88(*(_QWORD *)(v0 + 192), *(uint64_t (**)(uint64_t, uint64_t))(v12 + 96));
    v27 = sub_23F41C60C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v25, v27, v57);
    swift_release();
    sub_23F3663AC(v18, v13);
    v18 = v24 + *(int *)(v22 + 48);
    v28 = v24;
    v11 = v13;
    v62(v28, v23, v26);
    sub_23F41C5C4(v64);
    if (sub_23F36195C(v18, 1, v26) == 1)
    {
      (*(void (**)(_QWORD, _QWORD))(v55 + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
      v29 = (uint64_t *)(v0 + 184);
      v5 = v58;
      v12 = v66;
LABEL_11:
      v30 = *v29;
      sub_23F3663AC(v18, v11);
      sub_23F383E88(v30, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
      v31 = 1;
      goto LABEL_13;
    }
    v32 = *(_QWORD *)(v0 + 184);
    v33 = *(_QWORD *)(v0 + 128);
    v34 = *(_QWORD *)(v0 + 96);
    v63 = *(_QWORD *)(v0 + 104);
    v65 = *(_QWORD *)(v0 + 120);
    v35 = *(_QWORD *)(v0 + 80);
    v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32);
    v36(v34, v18, v35);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v32, v35);
    v37 = v33 + *(int *)(v54 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32))(v33, v65, v63);
    v36(v37, v34, v35);
    v31 = 0;
    v5 = v58;
LABEL_13:
    v38 = *(_QWORD *)(v0 + 200);
    v40 = *(_QWORD *)(v0 + 128);
    v39 = *(_QWORD *)(v0 + 136);
    sub_23F40B4B8(v40, v31);
    sub_23F3625D8(v38, &qword_256E6FE30);
    if (sub_23F36195C(v40, 1, v39) == 1)
    {
      sub_23F3625D8(*(_QWORD *)(v0 + 128), &qword_256E73518);
      v7 = v61;
      v12 = v66;
    }
    else
    {
      v41 = *(_QWORD *)(v0 + 152);
      v42 = *(_QWORD *)(v0 + 160);
      sub_23F41A8DC(*(_QWORD *)(v0 + 128), v42);
      sub_23F41A8DC(v42, v41);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v43 = v67;
      }
      else
      {
        sub_23F41C59C();
        sub_23F377BFC();
        v43 = v46;
      }
      v12 = v66;
      v44 = *(_QWORD *)(v43 + 16);
      v7 = v61;
      if (v44 >= *(_QWORD *)(v43 + 24) >> 1)
      {
        sub_23F377BFC();
        v43 = v47;
      }
      v45 = *(_QWORD *)(v0 + 152);
      *(_QWORD *)(v43 + 16) = v44 + 1;
      v67 = v43;
      sub_23F41A8DC(v45, v43+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v44);
    }
    v10 = v68 + v60;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease_n();
  v48 = v67;
LABEL_24:
  v49 = *(_QWORD *)(v0 + 208);
  v50 = *(_QWORD *)(v0 + 64);
  v51 = sub_23F417C5C(v48);
  sub_23F38F530(v50, v49, type metadata accessor for TypedValueFormatter);
  type metadata accessor for DialogValues(0);
  v52 = swift_allocObject();
  sub_23F417CE8(v51, v49);
  sub_23F3666A0();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3666D4();
  sub_23F366698();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v52);
}

uint64_t sub_23F418B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_23F418B70;
  return sub_23F418CCC(a2);
}

uint64_t sub_23F418B70(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F418BC0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F418BD8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyActionRequirementEvaluating(a2, a1);
  return a2;
}

uint64_t sub_23F418C0C()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_23F418C30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23F418C98;
  return sub_23F418B1C(a1, a2);
}

uint64_t sub_23F418C98()
{
  uint64_t v0;

  sub_23F3B1998();
  sub_23F3E0168();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F418CCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

uint64_t sub_23F418CE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[4];
  v0[2] = MEMORY[0x24BEE4B00];
  sub_23F35D2E8(&qword_256E6FC28);
  v2 = *(_QWORD *)(sub_23F384048() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23F61E7E0;
  sub_23F383C64(v4 + v3, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v0[3] = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_23F418DBC;
  return sub_23F418F84((uint64_t)(v0 + 2), (uint64_t)(v0 + 3));
}

uint64_t sub_23F418DBC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  sub_23F41C4A0(&v2);
  swift_bridgeObjectRelease();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F418E00()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23F418E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a1;
  v3[5] = a2;
  v3[2] = a3;
  return swift_task_switch();
}

uint64_t sub_23F418E24()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  sub_23F35D2E8(&qword_256E6FE40);
  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  v2 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v0 + 16;
  *(_OWORD *)(v1 + 24) = v2;
  sub_23F35D2E8(&qword_256E73560);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_23F418EE4;
  return sub_23F61CAC0();
}

uint64_t sub_23F418EE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F418F44()
{
  uint64_t v0;

  return sub_23F41C52C(*(_QWORD *)(v0 + 24), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F418F50()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F418F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  sub_23F35D2E8(&qword_256E701F0);
  v3[9] = swift_task_alloc();
  v3[10] = sub_23F35D2E8(&qword_256E6FE48);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v4 = sub_23F61B7AC();
  v3[14] = v4;
  v3[15] = *(_QWORD *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v5 = sub_23F61B6E0();
  v3[17] = v5;
  v3[18] = *(_QWORD *)(v5 - 8);
  v3[19] = swift_task_alloc();
  v6 = sub_23F619E98();
  v3[20] = v6;
  v3[21] = *(_QWORD *)(v6 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v7 = sub_23F61B7C4();
  v3[25] = v7;
  v3[26] = *(_QWORD *)(v7 - 8);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E6FE50);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v8 = sub_23F61B92C();
  v3[33] = v8;
  v3[34] = *(_QWORD *)(v8 - 8);
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F4191CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  _QWORD *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  _QWORD *v56;
  uint64_t (*v57)();
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(_QWORD, _QWORD);
  void (*v67)(uint64_t, uint64_t);
  _QWORD *v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  unint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  sub_23F41C420();
  v1 = **(_QWORD **)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    goto LABEL_8;
  v3 = *(uint64_t **)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 256);
  v8 = *(_DWORD *)(v6 + 80);
  *(_DWORD *)(v0 + 512) = v8;
  v9 = v1 + ((v8 + 32) & ~(unint64_t)v8);
  v10 = *(_QWORD *)(v6 + 72);
  *(_QWORD *)(v0 + 352) = v10;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  *(_QWORD *)(v0 + 360) = v11;
  v11(v4, v9 + v10 * (v2 - 1), v5);
  sub_23F36867C(v4, *v3);
  *(_QWORD *)(v0 + 368) = type metadata accessor for DialogValuesResolver.CollectedValue(0);
  LODWORD(v4) = sub_23F41C5E8(v7);
  sub_23F3625D8(v7, &qword_256E6FE50);
  if ((_DWORD)v4 != 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 264));
    goto LABEL_8;
  }
  v12 = *(_QWORD *)(v0 + 336);
  v13 = *(_QWORD *)(v0 + 264);
  v14 = *(_QWORD *)(v0 + 272);
  v11(v12, *(_QWORD *)(v0 + 344), v13);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 88);
  *(_QWORD *)(v0 + 376) = v15;
  v16 = v15(v12, v13);
  v17 = *(_QWORD *)(v0 + 336);
  v18 = *(_QWORD *)(v0 + 264);
  v19 = *(_QWORD *)(v0 + 272);
  if (v16 != *MEMORY[0x24BEB99E8])
  {
    (*(void (**)(_QWORD, uint64_t))(v19 + 8))(*(_QWORD *)(v0 + 336), v18);
LABEL_11:
    v41 = *(_QWORD *)(v0 + 264);
    v42 = *(_QWORD **)(v0 + 248);
    v11(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 344), v41);
    sub_23F40B4B8((uint64_t)v42, 1);
    sub_23F41C5B8((uint64_t)v42, 0);
    sub_23F3729F4();
    sub_23F41C480();
    v43 = sub_23F41C5F4();
    if (v43 == *MEMORY[0x24BEB99E0])
    {
      sub_23F41C4BC();
      v44 = sub_23F41C5D0();
      sub_23F3B1518(v44);
      v45 = sub_23F61B770();
      v46 = (_QWORD *)sub_23F41C43C(v45);
      if (v48)
      {
        sub_23F41C56C();
LABEL_14:
        *(_QWORD *)(v0 + 480) = v50;
        *(_QWORD *)(v0 + 488) = v51;
        v52 = *(_QWORD **)(v0 + 360);
        v53 = *(_QWORD *)(v0 + 264);
        v54 = *(_QWORD *)(v0 + 80);
        sub_23F41C310(v49, *(_QWORD *)(v0 + 352));
        sub_23F41C33C();
        sub_23F41C46C(*(int *)(v54 + 48));
        sub_23F41C520();
        if ((sub_23F3F5E54() & 1) == 0)
        {
          sub_23F41C3D8();
          v53 = v73;
        }
        sub_23F41C554();
        if (v55)
        {
          sub_23F41C3FC();
          v53 = v74;
        }
        sub_23F41C2E4();
        *v52 = v53;
        v56 = (_QWORD *)swift_task_alloc();
        v57 = sub_23F419F3C;
        *(_QWORD *)(v0 + 504) = v56;
LABEL_26:
        sub_23F41C37C(v56, (uint64_t)v57);
        return sub_23F41C22C();
      }
      v62 = 63 - v47;
      if (v62 > 0x7F)
      {
        if (v46[9])
        {
LABEL_30:
          sub_23F41C584();
          goto LABEL_14;
        }
        if (v62 >= 0xC0)
        {
          if (v46[10])
            goto LABEL_30;
          if (v62 >= 0x100)
          {
            if (v46[11])
              goto LABEL_30;
            if (v62 >= 0x140)
            {
              if (v46[12])
                goto LABEL_30;
              v70 = v62 >> 6;
              v71 = 13;
              while (v71 - 8 < v70)
              {
                if (v46[v71++])
                  goto LABEL_30;
              }
            }
          }
        }
      }
      sub_23F41C408();
      sub_23F40B488();
      v69 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
      goto LABEL_44;
    }
    if (v43 == *MEMORY[0x24BEB9988])
    {
      sub_23F41C4D8();
      v58 = sub_23F41C5DC();
      sub_23F3B1518(v58);
      v59 = v41;
      v60 = sub_23F61B6D4();
      *(_QWORD *)(v0 + 432) = v60;
      v61 = *(_QWORD *)(v60 + 16);
      *(_QWORD *)(v0 + 440) = v61;
      if (v61)
      {
        sub_23F41C394(v60);
        if ((sub_23F41C514() & 1) == 0)
        {
          sub_23F41C3C0();
          v59 = v75;
        }
        sub_23F41C534();
        if (v55)
        {
          sub_23F41C3F0();
          v59 = v76;
        }
        sub_23F41C2B4();
        *v42 = v59;
        v56 = (_QWORD *)swift_task_alloc();
        v57 = sub_23F419DC8;
        *(_QWORD *)(v0 + 456) = v56;
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
      sub_23F41C360();
      v69 = (uint64_t (*)(uint64_t, uint64_t))v42[1];
LABEL_44:
      sub_23F366764(v69);
      sub_23F366748();
      goto LABEL_8;
    }
    sub_23F41C4F4();
    sub_23F41C5F4();
LABEL_8:
    sub_23F41C1A0();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3668E4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F41C50C();
    return sub_23F41C210(*(uint64_t (**)(void))(v0 + 8));
  }
  v20 = *(_QWORD *)(v0 + 240);
  v21 = *(_QWORD *)(v0 + 200);
  v22 = *(_QWORD *)(v0 + 208);
  v23 = *(uint64_t **)(v0 + 56);
  (*(void (**)(_QWORD, uint64_t))(v19 + 96))(*(_QWORD *)(v0 + 336), v18);
  v24 = sub_23F41C60C();
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  *(_QWORD *)(v0 + 384) = v25;
  v25(v20, v24, v21);
  swift_release();
  v26 = sub_23F41A560(*v23);
  v27 = *(_QWORD *)(v0 + 240);
  if ((v26 & 1) == 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 200));
    goto LABEL_11;
  }
  v28 = *(_QWORD *)(v0 + 232);
  v29 = *(_QWORD *)(v0 + 200);
  sub_23F619124();
  v25(v28, v27, v29);
  v30 = sub_23F619E8C();
  v31 = sub_23F61C61C();
  v32 = os_log_type_enabled(v30, v31);
  v33 = *(_QWORD *)(v0 + 232);
  if (v32)
  {
    v34 = *(_QWORD *)(v0 + 224);
    v35 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 208);
    v36 = (uint8_t *)sub_23F366668();
    sub_23F366668();
    *(_DWORD *)v36 = 136315138;
    v25(v34, v33, v35);
    v37 = sub_23F61C16C();
    sub_23F41C5B0(v37, v38);
    *(_QWORD *)(v0 + 40) = v39;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v33, v35);
    _os_log_impl(&dword_23F35A000, v30, v31, "Resolving deferred value %s", v36, 0xCu);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v63 = *(_QWORD *)(v0 + 192);
  v64 = *(_QWORD *)(v0 + 160);
  v65 = *(_QWORD *)(v0 + 168);
  v66 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8);
  v66(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 200));

  v67 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v67(v63, v64);
  *(_QWORD *)(v0 + 392) = v67;
  *(_QWORD *)(v0 + 400) = v66;
  sub_23F35EA9C(*(_QWORD **)(v0 + 64), *(_QWORD *)(*(_QWORD *)(v0 + 64) + 24));
  v68 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v68;
  *v68 = v0;
  v68[1] = sub_23F419824;
  return sub_23F61AFFC();
}

uint64_t sub_23F419824()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F3B1998();
  *v2 = *v1;
  *(_QWORD *)(v3 + 416) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F419874()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t (*v38)();
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  unint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  void (*v54)(uint64_t, uint64_t, uint64_t);
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_23F41C420();
  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 264);
  sub_23F619124();
  v1(v2, v3, v4);
  v5 = sub_23F619E8C();
  v6 = sub_23F61C61C();
  if (os_log_type_enabled(v5, v6))
  {
    v8 = *(_QWORD *)(v0 + 312);
    v7 = *(_QWORD *)(v0 + 320);
    v9 = *(_QWORD *)(v0 + 264);
    v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360);
    v56 = *(_QWORD *)(v0 + 272);
    v10 = (uint8_t *)sub_23F366668();
    sub_23F366668();
    *(_DWORD *)v10 = 136315138;
    v54(v8, v7, v9);
    v11 = sub_23F61C16C();
    sub_23F41C5B0(v11, v12);
    *(_QWORD *)(v0 + 32) = v13;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v7, v9);
    _os_log_impl(&dword_23F35A000, v5, v6, "Deferred value resolved to %s", v10, 0xCu);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
  v15 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 160);
  v53 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 272) + 8);
  v53(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 264));

  v14(v15, v16);
  v17 = *(_QWORD *)(v0 + 344);
  v18 = *(uint64_t **)(v0 + 328);
  v19 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 248);
  v57 = *(_QWORD *)(v0 + 352);
  v55 = (*(unsigned __int8 *)(v0 + 512) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 512);
  v21 = *(uint64_t **)(v0 + 56);
  sub_23F41C544(*(_QWORD *)(v0 + 312), v17);
  sub_23F41C544(v20, (uint64_t)v18);
  sub_23F36196C(v20, 0, 1, v19);
  sub_23F40B4B8(v20, 0);
  sub_23F3729F4();
  v53(v17, v19);
  sub_23F41C544(v17, (uint64_t)v18);
  sub_23F5B9F8C(1, *v21);
  sub_23F383738();
  swift_unknownObjectRelease();
  sub_23F376954();
  v22 = *(_QWORD *)(*v21 + 16);
  sub_23F376B4C(v22);
  v23 = *v21;
  *(_QWORD *)(v23 + 16) = v22 + 1;
  sub_23F41C544(v23 + v55 + v22 * v57, v17);
  *v21 = v23;
  v53((uint64_t)v18, v19);
  sub_23F41C564();
  sub_23F41C480();
  v24 = sub_23F41C5F4();
  if (v24 == *MEMORY[0x24BEB99E0])
  {
    sub_23F41C4BC();
    v25 = sub_23F41C5D0();
    sub_23F3B1518(v25);
    v26 = sub_23F61B770();
    v27 = (_QWORD *)sub_23F41C43C(v26);
    if (v29)
    {
      sub_23F41C56C();
LABEL_6:
      *(_QWORD *)(v0 + 480) = v31;
      *(_QWORD *)(v0 + 488) = v32;
      v33 = *(_QWORD **)(v0 + 360);
      v34 = *(_QWORD *)(v0 + 264);
      v35 = *(_QWORD *)(v0 + 80);
      sub_23F41C310(v30, *(_QWORD *)(v0 + 352));
      sub_23F41C33C();
      sub_23F41C46C(*(int *)(v35 + 48));
      sub_23F41C520();
      if ((sub_23F3F5E54() & 1) == 0)
      {
        sub_23F41C3D8();
        v34 = v49;
      }
      sub_23F41C554();
      if (v36)
      {
        sub_23F41C3FC();
        v34 = v50;
      }
      sub_23F41C2E4();
      *v33 = v34;
      v37 = (_QWORD *)swift_task_alloc();
      v38 = sub_23F419F3C;
      *(_QWORD *)(v0 + 504) = v37;
LABEL_18:
      sub_23F41C37C(v37, (uint64_t)v38);
      return sub_23F41C22C();
    }
    v44 = 63 - v28;
    if (v44 > 0x7F)
    {
      if (v27[9])
      {
LABEL_22:
        sub_23F41C584();
        goto LABEL_6;
      }
      if (v44 >= 0xC0)
      {
        if (v27[10])
          goto LABEL_22;
        if (v44 >= 0x100)
        {
          if (v27[11])
            goto LABEL_22;
          if (v44 >= 0x140)
          {
            if (v27[12])
              goto LABEL_22;
            v46 = v44 >> 6;
            v47 = 13;
            while (v47 - 8 < v46)
            {
              if (v27[v47++])
                goto LABEL_22;
            }
          }
        }
      }
    }
    sub_23F41C408();
    sub_23F40B488();
    v45 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
    goto LABEL_35;
  }
  if (v24 == *MEMORY[0x24BEB9988])
  {
    sub_23F41C4D8();
    v39 = sub_23F41C5DC();
    sub_23F3B1518(v39);
    v40 = v22;
    v41 = sub_23F61B6D4();
    *(_QWORD *)(v0 + 432) = v41;
    v42 = *(_QWORD *)(v41 + 16);
    *(_QWORD *)(v0 + 440) = v42;
    if (v42)
    {
      sub_23F41C394(v41);
      if ((sub_23F41C514() & 1) == 0)
      {
        sub_23F41C3C0();
        v40 = v51;
      }
      sub_23F41C534();
      if (v36)
      {
        sub_23F41C3F0();
        v40 = v52;
      }
      sub_23F41C2B4();
      *v18 = v40;
      v37 = (_QWORD *)swift_task_alloc();
      v38 = sub_23F419DC8;
      *(_QWORD *)(v0 + 456) = v37;
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    sub_23F41C360();
    v45 = (uint64_t (*)(uint64_t, uint64_t))v18[1];
LABEL_35:
    sub_23F366764(v45);
    sub_23F366748();
    goto LABEL_36;
  }
  sub_23F41C4F4();
  sub_23F41C5F4();
LABEL_36:
  sub_23F41C1A0();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F41C50C();
  return sub_23F41C210(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F419DC8()
{
  sub_23F3B1998();
  sub_23F3E0168();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F419DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F41C420();
  v2 = *(_QWORD *)(v0 + 448) + 1;
  if (v2 == *(_QWORD *)(v0 + 440))
  {
    swift_bridgeObjectRelease();
    sub_23F41C360();
    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_23F366748();
    sub_23F41C248();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F41C50C();
    swift_task_dealloc();
    return sub_23F41C210(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    *(_QWORD *)(v0 + 448) = v2;
    v4 = *(_QWORD *)(v0 + 56);
    (*(void (**)(_QWORD, unint64_t, _QWORD))(v0 + 360))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 432)+ ((*(unsigned __int8 *)(v0 + 512) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 512))+ *(_QWORD *)(v0 + 352) * v2, *(_QWORD *)(v0 + 264));
    if ((sub_23F41C514() & 1) == 0)
    {
      sub_23F41C3C0();
      v4 = v7;
    }
    sub_23F41C534();
    if (v5)
    {
      sub_23F41C3F0();
      v4 = v8;
    }
    sub_23F41C2B4();
    *(_QWORD *)v1 = v4;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 456) = v6;
    sub_23F41C37C(v6, (uint64_t)sub_23F419DC8);
    return sub_23F41C22C();
  }
}

uint64_t sub_23F419F3C()
{
  sub_23F3B1998();
  sub_23F3E0168();
  sub_23F36679C();
  return sub_23F3B15DC();
}

void sub_23F419F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_23F41C420();
  v2 = **(_QWORD **)(v0 + 56);
  if (*(_QWORD *)(v2 + 16))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F4924B8();
      v2 = v29;
    }
    v3 = *(_QWORD *)(v2 + 16);
    if (!v3)
    {
      __break(1u);
      goto LABEL_30;
    }
    v1 = *(_QWORD *)(v0 + 496);
    v5 = *(_QWORD *)(v0 + 280);
    v4 = *(_QWORD *)(v0 + 288);
    v6 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD **)(v0 + 56);
    v8 = v3 - 1;
    sub_23F3DDBA4(v5, v2+ ((*(unsigned __int8 *)(v0 + 512) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 512))+ *(_QWORD *)(v0 + 352) * (v3 - 1));
    *(_QWORD *)(v2 + 16) = v8;
    *v7 = v2;
    sub_23F3DDBA4(v4, v5);
    sub_23F3DDBA4(v6, v4);
    v9 = 0;
  }
  else
  {
    v9 = 1;
  }
  v10 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  sub_23F36196C(v11, v9, 1, *(_QWORD *)(v0 + 264));
  sub_23F3625D8(v11, &qword_256E701F0);
  sub_23F3625D8(v10, &qword_256E6FE48);
  v12 = *(_QWORD *)(v0 + 480);
  v13 = *(_QWORD *)(v0 + 488);
  if (!v13)
  {
    v21 = v12 + 1;
    if (!__OFADD__(v12, 1))
    {
      v22 = (1 << *(_BYTE *)(v0 + 516)) + 63;
      v15 = *(_QWORD *)(v0 + 472);
      if (v21 >= (uint64_t)(v22 >> 6))
        goto LABEL_28;
      v23 = v15 + 64;
      v24 = *(_QWORD *)(v15 + 64 + 8 * v21);
      ++v12;
      if (v24)
      {
LABEL_17:
        v14 = (v24 - 1) & v24;
        goto LABEL_9;
      }
      v25 = v22 >> 6;
      v12 = v21 + 1;
      if (v21 + 1 >= v25)
        goto LABEL_28;
      v24 = *(_QWORD *)(v23 + 8 * v12);
      if (v24)
        goto LABEL_17;
      v12 = v21 + 2;
      if (v21 + 2 >= v25)
        goto LABEL_28;
      v24 = *(_QWORD *)(v23 + 8 * v12);
      if (v24)
        goto LABEL_17;
      v26 = v21 + 3;
      if (v26 >= v25)
      {
LABEL_28:
        sub_23F41C408();
        sub_23F40B488();
        sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
        sub_23F366748();
        sub_23F41C248();
        sub_23F3666EC();
        sub_23F366708();
        sub_23F3666E4();
        sub_23F366698();
        sub_23F3666D4();
        sub_23F3666A0();
        sub_23F362CC8();
        sub_23F3666DC();
        sub_23F3666C4();
        sub_23F3668DC();
        sub_23F3668D4();
        sub_23F383980();
        sub_23F3667E0();
        sub_23F383898();
        sub_23F383978();
        sub_23F383970();
        sub_23F383890();
        sub_23F383888();
        sub_23F383880();
        sub_23F383878();
        sub_23F383870();
        sub_23F41C50C();
        swift_task_dealloc();
        sub_23F41C210(*(uint64_t (**)(void))(v0 + 8));
        return;
      }
      v24 = *(_QWORD *)(v23 + 8 * v26);
      if (v24)
      {
        v12 = v26;
        goto LABEL_17;
      }
      while (1)
      {
        v12 = v26 + 1;
        if (__OFADD__(v26, 1))
          break;
        if (v12 >= v25)
          goto LABEL_28;
        v24 = *(_QWORD *)(v23 + 8 * v12);
        ++v26;
        if (v24)
          goto LABEL_17;
      }
LABEL_31:
      __break(1u);
      return;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v14 = (v13 - 1) & v13;
  v15 = *(_QWORD *)(v0 + 472);
LABEL_9:
  *(_QWORD *)(v0 + 480) = v12;
  *(_QWORD *)(v0 + 488) = v14;
  v16 = *(_QWORD **)(v0 + 360);
  v17 = *(_QWORD *)(v0 + 264);
  v18 = *(_QWORD *)(v0 + 80);
  sub_23F41C310(v15, *(_QWORD *)(v0 + 352));
  sub_23F41C33C();
  sub_23F41C46C(*(int *)(v18 + 48));
  sub_23F41C520();
  if ((sub_23F3F5E54() & 1) == 0)
  {
    sub_23F41C3D8();
    v17 = v27;
  }
  sub_23F41C554();
  if (v19)
  {
    sub_23F41C3FC();
    v17 = v28;
  }
  sub_23F41C2E4();
  *v16 = v17;
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 504) = v20;
  sub_23F41C37C(v20, (uint64_t)sub_23F419F3C);
  sub_23F41C22C();
}

uint64_t sub_23F41A254()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  void *v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  void (*v20)(uint64_t, uint64_t);
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F41C420();
  v1 = *(void **)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 216);
  sub_23F619124();
  sub_23F3DDBA4(v3, v2);
  v4 = v1;
  v5 = v1;
  v6 = sub_23F619E8C();
  v7 = sub_23F61C634();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(void **)(v0 + 416);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 384);
    v10 = *(_QWORD *)(v0 + 216);
    v11 = *(_QWORD *)(v0 + 224);
    v12 = *(_QWORD *)(v0 + 200);
    v13 = sub_23F366668();
    v29 = (_QWORD *)sub_23F366668();
    sub_23F366668();
    *(_DWORD *)v13 = 136315394;
    v9(v11, v10, v12);
    v14 = sub_23F61C16C();
    sub_23F41C5B0(v14, v15);
    *(_QWORD *)(v0 + 16) = v16;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F41C564();
    *(_WORD *)(v13 + 12) = 2112;
    v17 = v8;
    v18 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v18;
    sub_23F61C790();
    *v29 = v18;
    sub_23F41C618();
    sub_23F41C618();
    _os_log_impl(&dword_23F35A000, v6, v7, "Could not resolve %s: %@", (uint8_t *)v13, 0x16u);
    sub_23F35D2E8(&qword_256E6FAB0);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v20 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
  v19 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
  v31 = *(_QWORD *)(v0 + 344);
  v21 = v6;
  v22 = *(_QWORD *)(v0 + 272);
  v30 = *(_QWORD *)(v0 + 264);
  v23 = *(_QWORD *)(v0 + 240);
  v24 = *(_QWORD *)(v0 + 216);
  v25 = *(_QWORD *)(v0 + 200);
  v26 = *(_QWORD *)(v0 + 176);
  v27 = *(_QWORD *)(v0 + 160);

  sub_23F3665E8();
  sub_23F3665E8();
  v19(v24, v25);
  sub_23F3665E8();
  v20(v26, v27);
  v19(v23, v25);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v31, v30);
  sub_23F41C1A0();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F41C50C();
  return sub_23F41C210(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F41A560(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, unint64_t, uint64_t);
  unsigned int (*v23)(char *, uint64_t);
  void (*v24)(char *, uint64_t);
  void (*v25)(char *, uint64_t);
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void (*v37)(uint64_t, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;

  v45 = type metadata accessor for EntitySalientContent();
  MEMORY[0x24BDAC7A8](v45);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F61B7AC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F61B92C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v39 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v39 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v39 - v16;
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v41 = v17;
    v42 = v5;
    v43 = v3;
    v44 = v4;
    v20 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v21 = *(_QWORD *)(v8 + 72);
    v22 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    v22((char *)&v39 - v16, v20 + v21 * (v19 - 1), v7);
    v22(v15, (unint64_t)v18, v7);
    v23 = *(unsigned int (**)(char *, uint64_t))(v8 + 88);
    if (v23(v15, v7) == *MEMORY[0x24BEB99E8])
    {
      v40 = v12;
      v24 = *(void (**)(char *, uint64_t))(v8 + 96);
      v24(v15, v7);
      swift_release();
      if (v19 >= 2)
      {
        v27 = v20 + v21 * (v19 - 2);
        v28 = v40;
        v22(v40, v27, v7);
        if (v23(v28, v7) == *MEMORY[0x24BEB99E0])
        {
          v24(v28, v7);
          v29 = swift_projectBox();
          v30 = v42;
          v31 = (uint64_t)v46;
          v32 = v44;
          (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v46, v29, v44);
          swift_release();
          v33 = v43;
          sub_23F426538(v31, v43);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            swift_bridgeObjectRelease();
            v34 = sub_23F35D2E8(&qword_256E6FE48);
            v35 = v41;
            (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v41, &v33[*(int *)(v34 + 48)], v7);
            v36 = sub_23F61B920();
            v37 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
            v37(v35, v7);
            (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
            v37((uint64_t)v18, v7);
            if ((v36 & 1) != 0)
              return 1;
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
            (*(void (**)(char *, uint64_t))(v8 + 8))(v18, v7);
            sub_23F3663AC((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for EntitySalientContent);
          }
        }
        else
        {
          v38 = *(void (**)(char *, uint64_t))(v8 + 8);
          v38(v18, v7);
          v38(v28, v7);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v18, v7);
      }
    }
    else
    {
      v25 = *(void (**)(char *, uint64_t))(v8 + 8);
      v25(v18, v7);
      v25(v15, v7);
    }
  }
  return 0;
}

uint64_t type metadata accessor for DialogValuesResolver.CollectedValue(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E73620);
}

uint64_t sub_23F41A8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FE10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F41A924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  v5 = sub_23F35D2E8(&qword_256E73570);
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v6 = sub_23F61B92C();
  v4[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[18] = v7;
  v4[19] = *(_QWORD *)(v7 + 64);
  v4[20] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E717A8);
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F41A9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 144);
    v4 = *(unsigned __int8 *)(v3 + 80);
    v5 = v1 + ((v4 + 32) & ~v4);
    v21 = *(_QWORD *)(v3 + 72);
    v22 = v3;
    v20 = (v4 + 48) & ~v4;
    v6 = sub_23F61C490();
    sub_23F383738();
    do
    {
      v7 = *(_QWORD *)(v0 + 176);
      v25 = *(_QWORD *)(v0 + 168);
      v8 = *(_QWORD *)(v0 + 160);
      v9 = *(_QWORD *)(v0 + 104);
      v23 = v2;
      v24 = *(_QWORD *)(v0 + 96);
      sub_23F41C5B8(v7, 1);
      sub_23F383C64(v8, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
      v10 = (_QWORD *)swift_allocObject();
      v10[2] = 0;
      v10[3] = 0;
      v10[4] = v24;
      v10[5] = v9;
      sub_23F383C64((uint64_t)v10 + v20, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32));
      sub_23F3D96EC(v7, v25, &qword_256E717A8);
      v11 = sub_23F41C5E8(v25);
      swift_retain();
      v12 = *(_QWORD *)(v0 + 168);
      if (v11 == 1)
      {
        sub_23F41C600();
      }
      else
      {
        sub_23F61C484();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v12, v6);
      }
      if (v10[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v13 = sub_23F61C43C();
        v15 = v14;
        swift_unknownObjectRelease();
      }
      else
      {
        v13 = 0;
        v15 = 0;
      }
      v16 = **(_QWORD **)(v0 + 80);
      sub_23F35D2E8(&qword_256E6FE40);
      v17 = v15 | v13;
      if (v15 | v13)
      {
        v17 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v13;
        *(_QWORD *)(v0 + 40) = v15;
      }
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v17;
      *(_QWORD *)(v0 + 64) = v16;
      swift_task_create();
      swift_release();
      sub_23F41C600();
      v5 += v21;
      v2 = v23 - 1;
    }
    while (v23 != 1);
    swift_bridgeObjectRelease();
  }
  sub_23F35D2E8(&qword_256E6FE40);
  sub_23F35D2E8(&qword_256E70370);
  sub_23F61C4CC();
  *(_QWORD *)(v0 + 184) = sub_23F41BA64();
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v18;
  *v18 = v0;
  v18[1] = sub_23F41ACD4;
  return sub_23F61C46C();
}

uint64_t sub_23F41ACD4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;

  v2 = (_QWORD *)*v1;
  v4 = (_QWORD *)*v1;
  sub_23F41C4A0(&v4);
  if (v0)
  {
    v2[26] = v0;
    (*(void (**)(_QWORD, _QWORD))(v2[15] + 8))(v2[16], v2[14]);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2[25] = MEMORY[0x24BEE4AF8];
  }
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F41AD4C()
{
  uint64_t v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 72);
  if (v1)
  {
    sub_23F617BA0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v3 = *(_QWORD *)(v0 + 200);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23F41C59C();
      sub_23F377C24();
      v3 = v7;
    }
    v4 = *(_QWORD *)(v3 + 16);
    if (v4 >= *(_QWORD *)(v3 + 24) >> 1)
    {
      sub_23F377C24();
      v3 = v8;
    }
    *(_QWORD *)(v0 + 216) = v3;
    *(_QWORD *)(v3 + 16) = v4 + 1;
    *(_QWORD *)(v3 + 8 * v4 + 32) = v1;
    swift_bridgeObjectRelease();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v5;
    *v5 = v0;
    v5[1] = sub_23F41AED0;
    return sub_23F61C46C();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    swift_bridgeObjectRelease();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 200));
  }
}

uint64_t sub_23F41AE80()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F41AED0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;

  v4 = (_QWORD *)*v1;
  v2 = v4;
  sub_23F41C4A0(&v4);
  if (v0)
  {
    v2[26] = v0;
    (*(void (**)(_QWORD, _QWORD))(v2[15] + 8))(v2[16], v2[14]);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2[25] = v2[27];
  }
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F41AF50(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 24) = v7;
  *v7 = v5;
  v7[1] = sub_23F41AFC4;
  return v9(v5 + 16, a5);
}

uint64_t sub_23F41AFC4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F3B1998();
  *v2 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F41B014()
{
  uint64_t v0;

  return sub_23F41C52C(*(_QWORD *)(v0 + 16), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F41B01C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F41B028(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  char v32;
  _QWORD *v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t result;
  _QWORD v48[3];
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD *v59;
  char *v60;

  v4 = v3;
  v59 = a3;
  v7 = sub_23F61B92C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)v48 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v58 = (char *)v48 - v13;
  v14 = sub_23F61B7C4();
  v56 = *(_QWORD *)(v14 - 8);
  v57 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v60 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F35D2E8(&qword_256E6FE10);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a1 + 16);
  if (!v21)
    return swift_bridgeObjectRelease();
  v48[1] = a1;
  v48[2] = v4;
  v54 = &v20[*(int *)(v17 + 48)];
  v22 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v51 = *(_QWORD *)(v18 + 72);
  sub_23F617BA0();
  v52 = v20;
  v53 = v7;
  while (1)
  {
    v55 = v21;
    sub_23F3D96EC(v22, (uint64_t)v20, &qword_256E6FE10);
    v23 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
    v23(v60, v20, v57);
    v24 = v8;
    v25 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v25(v58, v54, v7);
    v26 = *v59;
    sub_23F375814();
    v29 = v28;
    v30 = *(_QWORD *)(v26 + 16);
    v31 = (v27 & 1) == 0;
    if (__OFADD__(v30, v31))
      break;
    v32 = v27;
    if (*(_QWORD *)(v26 + 24) >= v30 + v31)
    {
      if ((a2 & 1) != 0)
      {
        v33 = v59;
      }
      else
      {
        sub_23F35D2E8(&qword_256E73548);
        v33 = v59;
        sub_23F61CA24();
      }
    }
    else
    {
      v33 = v59;
      sub_23F514A38();
      sub_23F375814();
      if ((v32 & 1) != (v35 & 1))
        goto LABEL_20;
      v29 = v34;
    }
    v36 = (_QWORD *)*v33;
    if ((v32 & 1) != 0)
    {
      v37 = v36[7];
      v8 = v24;
      v38 = *(_QWORD *)(v24 + 72) * v29;
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
      v40 = v50;
      v7 = v53;
      v39(v50, v37 + v38, v53);
      v41 = v49;
      v39(v49, (uint64_t)v40, v7);
      v42 = *(void (**)(char *, uint64_t))(v8 + 8);
      v42(v40, v7);
      v42(v58, v7);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v60, v57);
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(*(_QWORD *)(*v33 + 56) + v38, v41, v7);
    }
    else
    {
      v36[(v29 >> 6) + 8] |= 1 << v29;
      v23((char *)(v36[6] + *(_QWORD *)(v56 + 72) * v29), v60, v57);
      v8 = v24;
      v43 = v36[7] + *(_QWORD *)(v24 + 72) * v29;
      v7 = v53;
      v25((char *)v43, v58, v53);
      v44 = v36[2];
      v45 = __OFADD__(v44, 1);
      v46 = v44 + 1;
      if (v45)
        goto LABEL_19;
      v36[2] = v46;
    }
    v20 = v52;
    v22 += v51;
    a2 = 1;
    v21 = v55 - 1;
    if (v55 == 1)
      return swift_bridgeObjectRelease_n();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F41B3C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t i;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t (*v37)(unint64_t, char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  unint64_t v59;

  v2 = sub_23F61B92C();
  v3 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  v54 = v3;
  v4 = MEMORY[0x24BDAC7A8](v2);
  v55 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)&v43 - v6;
  v7 = sub_23F61B7C4();
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v49 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v48 = (char *)&v43 - v10;
  sub_23F35D2E8(&qword_256E73538);
  result = sub_23F61CA78();
  v12 = (_QWORD *)result;
  v13 = 0;
  v56 = a1;
  v16 = *(_QWORD *)(a1 + 64);
  v15 = a1 + 64;
  v14 = v16;
  v17 = 1 << *(_BYTE *)(v15 - 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v14;
  v44 = v15;
  v45 = (unint64_t)(v17 + 63) >> 6;
  v46 = result + 64;
  v47 = (_QWORD *)result;
  v20 = v51;
  v22 = v53;
  v21 = v54;
  v23 = v49;
  if (!v19)
    goto LABEL_5;
LABEL_4:
  v57 = (v19 - 1) & v19;
  v58 = v13;
  for (i = __clz(__rbit64(v19)) | (v13 << 6); ; i = __clz(__rbit64(v26)) + (v27 << 6))
  {
    v29 = v56;
    v30 = *(_QWORD *)(v56 + 48);
    v31 = v50;
    v59 = *(_QWORD *)(v50 + 72) * i;
    v32 = v48;
    (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v48, v30 + v59, v20);
    v33 = *(_QWORD *)(v29 + 56) + *(_QWORD *)(v21 + 72) * i;
    v34 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
    v35 = v52;
    v34(v52, v33, v22);
    v36 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    v36(v23, v32, v20);
    v37 = (uint64_t (*)(unint64_t, char *, uint64_t))v36;
    v38 = v55;
    v34(v55, (unint64_t)v35, v22);
    type metadata accessor for DialogValues.ResolvedValue(0);
    v39 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v39+ OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime12DialogValuesP33_C6AF0A8DD37723F6A810D22336ACBF4C13ResolvedValue_resolvedTypedValue, v38, v22);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v35, v22);
    v12 = v47;
    *(_QWORD *)(v46 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    result = v37(v12[6] + v59, v23, v20);
    *(_QWORD *)(v12[7] + 8 * i) = v39;
    v40 = v12[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v12[2] = v42;
    v19 = v57;
    v13 = v58;
    if (v57)
      goto LABEL_4;
LABEL_5:
    v25 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_24;
    if (v25 >= v45)
      return (uint64_t)v12;
    v26 = *(_QWORD *)(v44 + 8 * v25);
    v27 = v13 + 1;
    if (!v26)
    {
      v27 = v13 + 2;
      if (v13 + 2 >= v45)
        return (uint64_t)v12;
      v26 = *(_QWORD *)(v44 + 8 * v27);
      if (!v26)
      {
        v27 = v13 + 3;
        if (v13 + 3 >= v45)
          return (uint64_t)v12;
        v26 = *(_QWORD *)(v44 + 8 * v27);
        if (!v26)
          break;
      }
    }
LABEL_18:
    v57 = (v26 - 1) & v26;
    v58 = v27;
  }
  v28 = v13 + 4;
  if (v13 + 4 >= v45)
    return (uint64_t)v12;
  v26 = *(_QWORD *)(v44 + 8 * v28);
  if (v26)
  {
    v27 = v13 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v27 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v27 >= v45)
      return (uint64_t)v12;
    v26 = *(_QWORD *)(v44 + 8 * v27);
    ++v28;
    if (v26)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23F41B738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TypedValueFormatter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F41B77C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  _QWORD *v10;

  *(_QWORD *)(v5 + 16) = a1;
  v9 = *a3;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 24) = v10;
  *v10 = v5;
  v10[1] = sub_23F41B7EC;
  return sub_23F41A924(a2, v9, a4, a5);
}

uint64_t sub_23F41B7EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v4 = *v2;
  v6 = *v2;
  sub_23F41C4A0(&v6);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return ((uint64_t (*)(void))v2[1])();
}

uint64_t sub_23F41B840(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = (uint64_t *)v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_23F41C198;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))((char *)&dword_256E73550
                                                                                + dword_256E73550))(a1, a2, v6, v7, v8);
}

uint64_t sub_23F41B8C8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v12;

  *(_QWORD *)(v6 + 16) = a1;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v12;
  *v12 = v6;
  v12[1] = sub_23F41C19C;
  return sub_23F41AF50(a2, a3, a4, a5, a6);
}

uint64_t sub_23F41B948()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23F384048() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  swift_release();
  sub_23F383E88(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return swift_deallocObject();
}

uint64_t sub_23F41B9BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F384048() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = (int *)v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23F41C198;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_256E73578
                                                                                     + dword_256E73578))(a1, v5, v6, v7, v8, v9);
}

unint64_t sub_23F41BA64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E73588;
  if (!qword_256E73588)
  {
    v1 = sub_23F35EB74(&qword_256E73570);
    result = MEMORY[0x242670A44](MEMORY[0x24BEE6BD8], v1);
    atomic_store(result, &qword_256E73588);
  }
  return result;
}

unint64_t sub_23F41BAA8()
{
  unint64_t result;

  result = qword_256E735A8;
  if (!qword_256E735A8)
  {
    result = MEMORY[0x242670A44](&unk_23F621280, &type metadata for DialogValues.DialogValuesError);
    atomic_store(result, (unint64_t *)&qword_256E735A8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DialogValues.DialogValuesError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F41BB30 + 4 * byte_23F621145[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F41BB64 + 4 * byte_23F621140[v4]))();
}

uint64_t sub_23F41BB64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F41BB6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F41BB74);
  return result;
}

uint64_t sub_23F41BB80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F41BB88);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F41BB8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F41BB94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DialogValues.DialogValuesError()
{
  return &type metadata for DialogValues.DialogValuesError;
}

uint64_t *sub_23F41BBB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B92C();
    if (sub_23F36195C((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      sub_23F36196C((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_23F41BC68(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23F61B92C();
  result = sub_23F36195C(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

void *sub_23F41BCC0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B92C();
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_23F41BD54(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v6 = sub_23F61B92C();
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  sub_23F36196C((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_23F41BE38(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B92C();
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_23F41BECC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v6 = sub_23F61B92C();
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  sub_23F36196C((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_23F41BFB0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F41BFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_23F384048();
  v5 = sub_23F36195C(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_23F41BFFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F41C008(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_23F384048();
  return sub_23F36196C(a1, v5, a3, v6);
}

uint64_t sub_23F41C04C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61B92C();
  return sub_23F36195C(a1, 1, v2);
}

uint64_t sub_23F41C07C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B92C();
  return sub_23F36196C(a1, a2, 1, v4);
}

uint64_t sub_23F41C0B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B92C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DialogValuesResolver()
{
  return &type metadata for DialogValuesResolver;
}

unint64_t sub_23F41C120()
{
  unint64_t result;

  result = qword_256E73630;
  if (!qword_256E73630)
  {
    result = MEMORY[0x242670A44](&unk_23F621258, &type metadata for DialogValues.DialogValuesError);
    atomic_store(result, (unint64_t *)&qword_256E73630);
  }
  return result;
}

unint64_t sub_23F41C15C()
{
  unint64_t result;

  result = qword_256E73638;
  if (!qword_256E73638)
  {
    result = MEMORY[0x242670A44](&unk_23F6211D8, &type metadata for DialogValues.DialogValuesError);
    atomic_store(result, (unint64_t *)&qword_256E73638);
  }
  return result;
}

uint64_t sub_23F41C1A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = *(_QWORD *)(v0 + 72);
  return swift_task_dealloc();
}

uint64_t sub_23F41C210(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F41C22C()
{
  return sub_23F418F84();
}

uint64_t sub_23F41C248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v1 - 88) = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v1 - 80) = v2;
  return swift_task_dealloc();
}

uint64_t sub_23F41C2B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(v3 + 352);
  v5 = *(unsigned __int8 *)(v3 + 512);
  v6 = *(_QWORD *)(v3 + 296);
  v7 = *(_QWORD *)(v3 + 264);
  v8 = *(_QWORD *)(v3 + 272);
  *(_QWORD *)(v1 + 16) = v0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v1 + ((v5 + 32) & ~v5) + v4 * v2, v6, v7);
}

uint64_t sub_23F41C2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 352);
  v7 = *(unsigned __int8 *)(v3 + 512);
  v8 = *(_QWORD *)(v3 + 264);
  *(_QWORD *)(v0 + 16) = v2;
  return v5(v0 + ((v7 + 32) & ~v7) + v6 * v4, v1, v8);
}

uint64_t sub_23F41C310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(char *, uint64_t, uint64_t);
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v7 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v2);
  v8 = v7[1];
  *(_QWORD *)v3 = *v7;
  *((_QWORD *)v3 + 1) = v8;
  return v5(&v3[*(int *)(v6 + 48)], *(_QWORD *)(a1 + 56) + a2 * v2, v4);
}

uint64_t sub_23F41C33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);

  v8 = (char *)v5 + *(int *)(v7 + 48);
  *v5 = v6;
  v5[1] = v2;
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 32);
  *(_QWORD *)(v3 + 496) = v9;
  return v9(v8, v1, v0);
}

uint64_t sub_23F41C360()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[18] + 8))(v0[19], v0[17]);
}

uint64_t sub_23F41C37C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 48);
}

uint64_t sub_23F41C394(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  v2 = (*(unsigned __int8 *)(v1 + 512) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 512);
  *(_QWORD *)(v1 + 448) = 0;
  return (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v1 + 360))(*(_QWORD *)(v1 + 296), a1 + v2, *(_QWORD *)(v1 + 264));
}

void sub_23F41C3C0()
{
  sub_23F377314();
}

void sub_23F41C3D8()
{
  sub_23F377314();
}

void sub_23F41C3F0()
{
  sub_23F377314();
}

void sub_23F41C3FC()
{
  sub_23F377314();
}

uint64_t sub_23F41C408()
{
  return swift_release();
}

uint64_t sub_23F41C43C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 472) = result;
  *(_BYTE *)(v1 + 516) = *(_BYTE *)(result + 32);
  return result;
}

uint64_t sub_23F41C46C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v1 + a1, v3, v2);
}

uint64_t sub_23F41C480()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 360))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 264));
}

uint64_t sub_23F41C4A0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_task_dealloc();
}

uint64_t sub_23F41C4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23F41C4BC()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[34] + 96))(v0[38], v0[33]);
}

uint64_t sub_23F41C4D8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[34] + 96))(v0[38], v0[33]);
}

uint64_t sub_23F41C4F4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[34] + 8))(v0[43], v0[33]);
}

uint64_t sub_23F41C50C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F41C514()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F41C520()
{
  return sub_23F617BA0();
}

uint64_t sub_23F41C52C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23F41C544(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F41C54C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F41C564()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 88))();
}

uint64_t sub_23F41C59C()
{
  return 0;
}

void sub_23F41C5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 80));
}

uint64_t sub_23F41C5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F36196C(a1, a2, 1, v2);
}

void sub_23F41C5C4(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F38F530(a1, v2, v1);
}

uint64_t sub_23F41C5D0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 464) = *v0;
  return swift_projectBox();
}

uint64_t sub_23F41C5DC()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 424) = *v0;
  return swift_projectBox();
}

uint64_t sub_23F41C5E8(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, v1);
}

uint64_t sub_23F41C5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void sub_23F41C600()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23F3625D8(v0, v1);
}

uint64_t sub_23F41C60C()
{
  return swift_projectBox();
}

void sub_23F41C618()
{
  void *v0;

}

uint64_t sub_23F41C620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = sub_23F619E98();
  v5 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  sub_23F38F964();
  v8 = v7 - v6;
  v9 = sub_23F35D2E8(&qword_256E73640);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F38F964();
  v12 = v11 - v10;
  v13 = sub_23F35D2E8(qword_256E70D80);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F38F964();
  v17 = v16 - v15;
  sub_23F617BA0();
  result = sub_23F41C960(v12);
  if (!v31)
  {
    if (sub_23F36195C(v12, 1, v13) == 1)
    {
      sub_23F3CFCB0(v12, &qword_256E73640);
      sub_23F619094();
      swift_bridgeObjectRetain_n();
      v19 = sub_23F619E8C();
      v20 = sub_23F61C628();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v32 = swift_slowAlloc();
        *(_DWORD *)v21 = 136315138;
        sub_23F617BA0();
        sub_23F37AE00(a1, a2, &v32);
        sub_23F61C790();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23F35A000, v19, v20, "cannot resolve duration from input %s", v21, 0xCu);
        swift_arrayDestroy();
        sub_23F366530();
      }

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v30);
      type metadata accessor for InterpreterError();
      sub_23F40DF84();
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
    else
    {
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
      v22(v17, v12, v13);
      v23 = sub_23F61B8A8();
      v24 = swift_allocBox();
      v26 = v25;
      v22(v25, v17, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v26, *MEMORY[0x24BEB98E8], v23);
      *a3 = v24;
      v27 = *MEMORY[0x24BEB9A00];
      v28 = sub_23F61B92C();
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(a3, v27, v28);
    }
  }
  return result;
}

uint64_t sub_23F41C960@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD, _QWORD);
  double v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  int v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void (*v58)(unint64_t, char *, uint64_t);
  char *v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  BOOL v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  BOOL v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t *v72;
  BOOL v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  BOOL v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  BOOL v83;
  id v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v91;
  id v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  char *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t, uint64_t);
  char *v116;
  uint64_t v117;
  unint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD v129[4];
  char *v130;
  char *v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  int v138;
  void (*v139)(_QWORD, _QWORD, _QWORD);
  char *v140;
  int v141;
  char *v142;
  char *v143;
  int v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;

  v135 = a1;
  v1 = sub_23F35D2E8(&qword_256E702C0);
  v148 = *(_QWORD *)(v1 - 8);
  v149 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v150 = (char *)v129 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F35D2E8(&qword_256E702B0);
  v4 = *(_QWORD *)(v3 - 8);
  v151 = v3;
  v152 = v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  v147 = (char *)v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v130 = (char *)v129 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v129 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v129[1] = (char *)v129 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v129[2] = (char *)v129 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v129[3] = (char *)v129 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v131 = (char *)v129 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v137 = (char *)v129 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v143 = (char *)v129 - v22;
  v23 = sub_23F35D2E8(&qword_256E702A0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v129 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23F61B02C();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v142 = (char *)v129 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v140 = (char *)v129 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)v129 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)v129 - v35;
  v134 = sub_23F61B038();
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v38 = (char *)v129 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = (uint64_t)v25;
  sub_23F61B044();
  v145 = v38;
  sub_23F61B020();
  v40 = 1;
  if (sub_23F36195C((uint64_t)v25, 1, v26) != 1)
  {
    v129[0] = v11;
    v146 = MEMORY[0x24BEE4AF8];
    v44 = *(void (**)(_QWORD, _QWORD, _QWORD))(v27 + 32);
    v144 = *MEMORY[0x24BE56648];
    v141 = *MEMORY[0x24BE56640];
    v138 = *MEMORY[0x24BE56658];
    v132 = *MEMORY[0x24BE56650];
    v45 = 1.0;
    v139 = v44;
    while (1)
    {
      v46 = v39;
      v44(v36, v39, v26);
      v47 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
      v47(v34, v36, v26);
      v48 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v34, v26);
      if (v48 == v144)
        break;
      if (v48 == v141 || v48 == v138)
      {
        v60 = *(void (**)(char *, uint64_t))(v27 + 8);
        v60(v36, v26);
        v61 = v140;
        v47(v140, v34, v26);
        (*(void (**)(char *, uint64_t))(v27 + 96))(v61, v26);
        v40 = 0;
        v44 = v139;
        v45 = 1.0;
      }
      else
      {
        if (v48 != v132)
          goto LABEL_117;
        v60 = *(void (**)(char *, uint64_t))(v27 + 8);
        v60(v36, v26);
        v45 = -v45;
      }
LABEL_33:
      v60(v34, v26);
      v39 = v46;
      sub_23F61B020();
      if (sub_23F36195C(v46, 1, v26) == 1)
        goto LABEL_3;
    }
    v49 = (uint64_t *)v142;
    v47(v142, v34, v26);
    (*(void (**)(uint64_t *, uint64_t))(v27 + 96))(v49, v26);
    v51 = *v49;
    v50 = v49[1];
    v52 = v51 == 0x7372756F68 && v50 == 0xE500000000000000;
    if (v52 || (sub_23F61CC64() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if ((v40 & 1) != 0)
        goto LABEL_117;
      v53 = objc_msgSend((id)objc_opt_self(), sel_hours);
      sub_23F3C2EA0(0, qword_256E73658);
      sub_23F616B5C();
      v54 = v146;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377C38();
        v54 = v88;
      }
      v55 = *(_QWORD *)(v54 + 16);
      if (v55 >= *(_QWORD *)(v54 + 24) >> 1)
      {
        sub_23F377C38();
        v54 = v89;
      }
      *(_QWORD *)(v54 + 16) = v55 + 1;
      v56 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
      v146 = v54;
      v57 = v54 + v56 + *(_QWORD *)(v152 + 72) * v55;
      v58 = *(void (**)(unint64_t, char *, uint64_t))(v152 + 32);
      v59 = v143;
    }
    else
    {
      v62 = v51 == 0x736574756E696DLL && v50 == 0xE700000000000000;
      if (v62 || (sub_23F61CC64() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if ((v40 & 1) != 0)
          goto LABEL_117;
        v63 = objc_msgSend((id)objc_opt_self(), sel_minutes);
        sub_23F3C2EA0(0, qword_256E73658);
        sub_23F616B5C();
        v64 = v146;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F377C38();
          v64 = v96;
        }
        v65 = *(_QWORD *)(v64 + 16);
        if (v65 >= *(_QWORD *)(v64 + 24) >> 1)
        {
          sub_23F377C38();
          v64 = v97;
        }
        *(_QWORD *)(v64 + 16) = v65 + 1;
        v66 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
        v146 = v64;
        (*(void (**)(unint64_t, char *, uint64_t))(v152 + 32))(v64 + v66 + *(_QWORD *)(v152 + 72) * v65, v137, v151);
        goto LABEL_22;
      }
      v67 = v51 == 0x73646E6F636573 && v50 == 0xE700000000000000;
      if (v67 || (sub_23F61CC64() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if ((v40 & 1) != 0)
          goto LABEL_117;
        v68 = objc_msgSend((id)objc_opt_self(), sel_seconds);
        sub_23F3C2EA0(0, qword_256E73658);
        sub_23F616B5C();
        v69 = v146;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F377C38();
          v69 = v98;
        }
        v70 = *(_QWORD *)(v69 + 16);
        if (v70 >= *(_QWORD *)(v69 + 24) >> 1)
        {
          sub_23F377C38();
          v69 = v99;
        }
        *(_QWORD *)(v69 + 16) = v70 + 1;
        v71 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
        v146 = v69;
        v57 = v69 + v71 + *(_QWORD *)(v152 + 72) * v70;
        v58 = *(void (**)(unint64_t, char *, uint64_t))(v152 + 32);
        v72 = &v158;
      }
      else
      {
        v73 = v51 == 0x636573696C6C696DLL && v50 == 0xEC00000073646E6FLL;
        if (v73 || (sub_23F61CC64() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          if ((v40 & 1) != 0)
            goto LABEL_117;
          v74 = objc_msgSend((id)objc_opt_self(), sel_milliseconds);
          sub_23F3C2EA0(0, qword_256E73658);
          sub_23F616B5C();
          v75 = v146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F377C38();
            v75 = v100;
          }
          v76 = *(_QWORD *)(v75 + 16);
          if (v76 >= *(_QWORD *)(v75 + 24) >> 1)
          {
            sub_23F377C38();
            v75 = v101;
          }
          *(_QWORD *)(v75 + 16) = v76 + 1;
          v77 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
          v146 = v75;
          v57 = v75 + v77 + *(_QWORD *)(v152 + 72) * v76;
          v58 = *(void (**)(unint64_t, char *, uint64_t))(v152 + 32);
          v72 = &v157;
        }
        else
        {
          v78 = v51 == 0x6365736F7263696DLL && v50 == 0xEC00000073646E6FLL;
          if (v78 || (sub_23F61CC64() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            if ((v40 & 1) != 0)
              goto LABEL_117;
            v79 = objc_msgSend((id)objc_opt_self(), sel_microseconds);
            sub_23F3C2EA0(0, qword_256E73658);
            sub_23F616B5C();
            v80 = v146;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23F377C38();
              v80 = v102;
            }
            v81 = *(_QWORD *)(v80 + 16);
            if (v81 >= *(_QWORD *)(v80 + 24) >> 1)
            {
              sub_23F377C38();
              v80 = v103;
            }
            *(_QWORD *)(v80 + 16) = v81 + 1;
            v82 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
            v146 = v80;
            v57 = v80 + v82 + *(_QWORD *)(v152 + 72) * v81;
            v58 = *(void (**)(unint64_t, char *, uint64_t))(v152 + 32);
            v72 = &v156;
          }
          else
          {
            v83 = v51 == 0x6F6365736F6E616ELL && v50 == 0xEB0000000073646ELL;
            if (v83 || (sub_23F61CC64() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              if ((v40 & 1) != 0)
                goto LABEL_117;
              v84 = objc_msgSend((id)objc_opt_self(), sel_nanoseconds);
              sub_23F3C2EA0(0, qword_256E73658);
              sub_23F616B5C();
              v85 = v146;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_23F377C38();
                v85 = v104;
              }
              v86 = *(_QWORD *)(v85 + 16);
              if (v86 >= *(_QWORD *)(v85 + 24) >> 1)
              {
                sub_23F377C38();
                v85 = v105;
              }
              *(_QWORD *)(v85 + 16) = v86 + 1;
              v87 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
              v146 = v85;
              v57 = v85 + v87 + *(_QWORD *)(v152 + 72) * v86;
              v58 = *(void (**)(unint64_t, char *, uint64_t))(v152 + 32);
              v72 = &v155;
            }
            else
            {
              if (v51 == 0x6F6365736F636970 && v50 == 0xEB0000000073646ELL)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                v91 = sub_23F61CC64();
                swift_bridgeObjectRelease();
                if ((v91 & 1) == 0)
                  goto LABEL_117;
              }
              if ((v40 & 1) != 0)
              {
LABEL_117:
                v125 = *(void (**)(char *, uint64_t))(v27 + 8);
                v125(v36, v26);
                (*(void (**)(char *, uint64_t))(v133 + 8))(v145, v134);
                swift_bridgeObjectRelease();
                v125(v34, v26);
                v124 = 1;
                v43 = v135;
                goto LABEL_119;
              }
              v92 = objc_msgSend((id)objc_opt_self(), sel_picoseconds, v129[0]);
              sub_23F3C2EA0(0, qword_256E73658);
              sub_23F616B5C();
              v93 = v146;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_23F377C38();
                v93 = v106;
              }
              v94 = *(_QWORD *)(v93 + 16);
              if (v94 >= *(_QWORD *)(v93 + 24) >> 1)
              {
                sub_23F377C38();
                v93 = v107;
              }
              *(_QWORD *)(v93 + 16) = v94 + 1;
              v95 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
              v146 = v93;
              v57 = v93 + v95 + *(_QWORD *)(v152 + 72) * v94;
              v58 = *(void (**)(unint64_t, char *, uint64_t))(v152 + 32);
              v72 = &v154;
            }
          }
        }
      }
      v59 = (char *)*(v72 - 32);
    }
    v58(v57, v59, v151);
LABEL_22:
    v60 = *(void (**)(char *, uint64_t))(v27 + 8);
    v60(v36, v26);
    v40 = 1;
    goto LABEL_33;
  }
  v146 = MEMORY[0x24BEE4AF8];
LABEL_3:
  sub_23F3CFCB0(v39, &qword_256E702A0);
  if ((v40 & 1) != 0)
  {
    v41 = v146;
    v43 = v135;
    v42 = v136;
  }
  else
  {
    v41 = v146;
    v43 = v135;
    v42 = v136;
    if (!*(_QWORD *)(v146 + 16))
    {
      v108 = objc_msgSend((id)objc_opt_self(), sel_seconds);
      sub_23F3C2EA0(0, qword_256E73658);
      v109 = v130;
      sub_23F616B5C();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377C38();
        v41 = v127;
      }
      v110 = *(_QWORD *)(v41 + 16);
      if (v110 >= *(_QWORD *)(v41 + 24) >> 1)
      {
        sub_23F377C38();
        v41 = v128;
      }
      *(_QWORD *)(v41 + 16) = v110 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v152 + 32))(v41+ ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80))+ *(_QWORD *)(v152 + 72) * v110, v109, v151);
    }
  }
  v111 = *(_QWORD *)(v41 + 16);
  v112 = MEMORY[0x24BEE4AF8];
  v146 = v41;
  if (v111)
  {
    v153 = MEMORY[0x24BEE4AF8];
    sub_23F617BA0();
    sub_23F37C05C();
    v113 = v41 + ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80));
    v114 = *(_QWORD *)(v152 + 72);
    v115 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 16);
    do
    {
      v116 = v147;
      v117 = v151;
      v115(v147, v113, v151);
      sub_23F616B68();
      sub_23F616B50();
      sub_23F3C2EA0(0, (unint64_t *)&qword_256E73648);
      sub_23F616B5C();
      (*(void (**)(char *, uint64_t))(v152 + 8))(v116, v117);
      v112 = v153;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37C05C();
        v112 = v153;
      }
      v118 = *(_QWORD *)(v112 + 16);
      if (v118 >= *(_QWORD *)(v112 + 24) >> 1)
      {
        sub_23F37C05C();
        v112 = v153;
      }
      *(_QWORD *)(v112 + 16) = v118 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v148 + 32))(v112+ ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80))+ *(_QWORD *)(v148 + 72) * v118, v150, v149);
      v113 += v114;
      --v111;
    }
    while (v111);
    swift_bridgeObjectRelease();
    v43 = v135;
    v42 = v136;
  }
  v119 = objc_msgSend((id)objc_opt_self(), sel_picoseconds);
  sub_23F4A7864(v112, v119);
  v121 = v134;
  if (v42)
  {

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v145, v121);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v123 = v120;

    swift_bridgeObjectRelease();
    if (v123)
    {
      sub_23F3C2EA0(0, &qword_256E73650);
      sub_23F616B5C();
      (*(void (**)(char *, uint64_t))(v133 + 8))(v145, v121);
      swift_bridgeObjectRelease();
      v124 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v133 + 8))(v145, v121);
      swift_bridgeObjectRelease();
      v124 = 1;
    }
LABEL_119:
    v126 = sub_23F35D2E8(qword_256E70D80);
    return sub_23F36196C(v43, v124, 1, v126);
  }
}

void sub_23F41DBB0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[9];
  uint64_t v17;
  _QWORD v18[5];
  char v19;

  v4 = sub_23F61B32C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F41E904();
  v8 = _s14EchoComponentsVMa();
  v9 = a1 + *(int *)(v8 + 32);
  v10 = *(void **)v9;
  if ((*(_BYTE *)(v9 + 32) & 1) != 0)
  {
    v16[0] = *(_QWORD *)v9;
    v11 = v10;
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
    sub_23F38BB88((uint64_t)&v17);
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 40) = 1;
  }
  else
  {
    v12 = v8;
    v13 = *(_QWORD *)(v9 + 8);
    v14 = *(_QWORD *)(v9 + 16);
    v15 = *(_QWORD *)(v9 + 24);
    v16[5] = *(_QWORD *)v9;
    v16[6] = v13;
    v16[7] = v14;
    v16[8] = v15;
    sub_23F3CB7DC((uint64_t)v10);
    sub_23F41DE94((uint64_t)v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v12 + 24), v4);
    v18[3] = &type metadata for PromptMapperResolver;
    v18[4] = &off_250FDB498;
    v18[0] = swift_allocObject();
    sub_23F51CF9C();
    v19 = 0;
    sub_23F3CD9FC((uint64_t)v18, a2, &qword_256E705F8);
  }
}

double sub_23F41DD34@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  double result;
  uint64_t v5;
  __int128 v6;
  _BYTE v7[25];

  sub_23F41E26C(a1, &v5, (uint64_t *)&v6);
  v7[24] = 0;
  v3 = *(_OWORD *)v7;
  *a2 = v6;
  a2[1] = v3;
  result = *(double *)&v7[9];
  *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)&v7[9];
  return result;
}

uint64_t sub_23F41DD9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  __int128 v9[2];
  char v10;

  sub_23F41F8F8();
  if ((v8 & 1) != 0)
  {
    v2 = v7;
    sub_23F35D2E8(&qword_256E70370);
    result = swift_willThrowTypedImpl();
    *(_BYTE *)(a1 + 40) = 1;
  }
  else
  {
    sub_23F362678(&v7, (uint64_t)v9);
    v4 = sub_23F35D2E8(&qword_256E73220);
    sub_23F389844(&qword_256E73228, &qword_256E73220, (uint64_t)&unk_23F622690);
    v6 = v5;
    v2 = swift_allocObject();
    sub_23F41FC5C();
    result = sub_23F362678(v9, v2 + 16);
    v10 = 0;
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v6;
    *(_BYTE *)(a1 + 40) = 0;
  }
  *(_QWORD *)a1 = v2;
  return result;
}

uint64_t sub_23F41DE94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;

  v3 = _s14EchoComponentsVMa();
  v4 = v1 + *(int *)(v3 + 40);
  sub_23F38F124(v4, (uint64_t)&v9, &qword_256E70738);
  if (!v10)
  {
    sub_23F3625D8((uint64_t)&v9, &qword_256E70738);
    v10 = type metadata accessor for AlphaAppNameRenderer(0);
    v11 = &off_250FD31D8;
    v5 = sub_23F36145C((uint64_t *)&v9);
    v6 = v1 + *(int *)(v3 + 20);
    v7 = sub_23F6170CC();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    sub_23F36196C((uint64_t)v5, 0, 1, v7);
    sub_23F3625D8(v4, &qword_256E70738);
    sub_23F382FC4((uint64_t)&v9, v4);
  }
  return sub_23F362678(&v9, a1);
}

void sub_23F41DF90(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  int *v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  __n128 *v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  _QWORD v35[5];

  *a5 = 1869112133;
  a5[1] = 0xE400000000000000;
  v9 = (int *)_s14EchoComponentsVMa();
  *(double *)&v10 = sub_23F3CDAA8(v9[10]);
  v12 = (char *)a5 + *(int *)(v11 + 44);
  *((_QWORD *)v12 + 4) = 0;
  *(_OWORD *)v12 = v10;
  *((_OWORD *)v12 + 1) = v10;
  v12[40] = -1;
  bzero((char *)a5 + *(int *)(v11 + 48), 0xC8uLL);
  bzero((char *)a5 + v9[13], 0x168uLL);
  v13.n128_f64[0] = sub_23F3CDAA8(v9[14]);
  *(_BYTE *)(v14 + 40) = -1;
  v15 = (__n128 *)((char *)a5 + v9[15]);
  v15[2].n128_u64[0] = 0;
  *v15 = v13;
  v15[1] = v13;
  sub_23F3CDA48(v9[16], v13);
  sub_23F3CDA48(v9[17], v16);
  sub_23F3CDA48(v9[18], v17);
  sub_23F3CDA48(v9[19], v18);
  v19 = (char *)a5 + v9[5];
  v20 = sub_23F38F984();
  v29 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v19, a1, v20);
  v21 = (char *)a5 + v9[6];
  v22 = sub_23F384B34();
  v23 = *(_QWORD *)(v22 - 8);
  v31 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, a2, v22);
  v30 = a3;
  sub_23F382FC4(a3, (uint64_t)a5 + v9[7]);
  v32 = a1;
  sub_23F3C905C(a1, &v34, (uint64_t)v35);
  v25 = v35[0];
  v24 = v35[1];
  v26 = v35[2];
  v27 = v35[3];
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v30);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v31, v22);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v20);
  v28 = (char *)a5 + v9[8];
  *(_QWORD *)v28 = v25;
  *((_QWORD *)v28 + 1) = v24;
  *((_QWORD *)v28 + 2) = v26;
  *((_QWORD *)v28 + 3) = v27;
  v28[32] = 0;
  sub_23F3CD9FC(a4, (uint64_t)a5 + v9[9], &qword_256E705E0);
}

uint64_t _s14EchoComponentsVMa()
{
  uint64_t result;

  result = qword_256E736B8;
  if (!qword_256E736B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23F41E1B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v3 = v1 + *(int *)(sub_23F4207F8() + 44);
  sub_23F38FA10();
  if (v6)
  {
    sub_23F38F9FC();
  }
  else if ((v5 & 1) != 0)
  {
    sub_23F38F9D4();
    *(_QWORD *)&v18 = v2;
    v22 = 1;
  }
  else
  {
    sub_23F420804(v4, (uint64_t)&v18);
    v22 = 0;
  }
  sub_23F38F938();
  if (v6)
  {
    v15 = sub_23F38FA50();
    sub_23F41DD34(v15, v16);
    sub_23F38FA10();
    if (!v6)
    {
      if ((v17 & 1) != 0)

      else
        sub_23F38FA48();
    }
    if ((*(_BYTE *)(v0 + 40) & 1) != 0)
    {
      sub_23F38FA30();
      *(_QWORD *)v3 = v0;
      *(_BYTE *)(v3 + 40) = 1;
    }
    else
    {
      sub_23F3CDA9C();
      *(_BYTE *)(v3 + 40) = 0;
    }
  }
  else
  {
    sub_23F38FA5C(v7, v8, v9, v10, v11, v12, v13, v14, v18, v19, v20, v21, v22);
  }
  sub_23F38F98C();
}

void sub_23F41E26C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  char v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  const char *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v60 = a1;
  v62 = a3;
  v4 = sub_23F619E98();
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v54 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)&v52 - v7;
  v8 = sub_23F35D2E8(&qword_256E705E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for FullPlannerGMSClientConfiguration(0);
  v11 = MEMORY[0x24BDAC7A8](v61);
  v59 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v58 = (uint64_t)&v52 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v52 - v15;
  v17 = type metadata accessor for FullPlannerPreferences();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256E6EE90 != -1)
    swift_once();
  v20 = sub_23F361498(v17, (uint64_t)qword_256E7FE90);
  swift_beginAccess();
  sub_23F38F530(v20, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F617C48();
  v21 = v63;
  sub_23F3663AC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  if (v21 == 1)
  {
    v22 = sub_23F35D2E8(&qword_256E73210);
    v23 = v62;
    v62[3] = v22;
    sub_23F389844(&qword_256E73218, &qword_256E73210, (uint64_t)&unk_23F630E08);
    v23[4] = v24;
    return;
  }
  v53 = a2;
  sub_23F38F530(v20, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F617C48();
  v26 = v63;
  v25 = v64;
  sub_23F3663AC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  v27 = v26 == 0x6E65476E656B6F74 && v25 == 0xEE00726F74617265;
  if (!v27 && (sub_23F61CC64() & 1) == 0)
  {
    if (v26 == 0x65696C4370747468 && v25 == 0xEA0000000000746ELL)
    {
      swift_bridgeObjectRelease();
      v43 = v53;
      v46 = v55;
    }
    else
    {
      v45 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      v43 = v53;
      v46 = v55;
      if ((v45 & 1) == 0)
      {
        v46 = v54;
        sub_23F619088();
        v47 = sub_23F619E8C();
        v48 = sub_23F61C628();
        if (os_log_type_enabled(v47, v48))
        {
          v49 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v49 = 0;
LABEL_25:
          _os_log_impl(&dword_23F35A000, v47, v48, v50, v49, 2u);
          MEMORY[0x242670B70](v49, -1, -1);
          goto LABEL_26;
        }
        goto LABEL_26;
      }
    }
    sub_23F619088();
    v47 = sub_23F619E8C();
    v48 = sub_23F61C628();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v49 = 0;
      v50 = "HTTPClient not supported";
      goto LABEL_25;
    }
LABEL_26:

    (*(void (**)(char *, uint64_t))(v56 + 8))(v46, v57);
    sub_23F38F04C();
    v42 = swift_allocError();
    *v51 = 0;
    v51[1] = 0;
    swift_willThrow();
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  v28 = _s14EchoComponentsVMa();
  sub_23F38F124(v60 + *(int *)(v28 + 36), (uint64_t)v10, &qword_256E705E0);
  sub_23F38F530(v20, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F617C48();
  v29 = v63;
  sub_23F3663AC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F38F530(v20, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F617C48();
  v30 = v63;
  sub_23F3663AC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F3CD9FC((uint64_t)v10, (uint64_t)v16, &qword_256E705E0);
  v31 = v61;
  v16[*(int *)(v61 + 20)] = v29;
  v16[*(int *)(v31 + 24)] = v30;
  sub_23F38F530(v20, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F617C48();
  v32 = v63;
  sub_23F3663AC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  if (v32 == 1)
  {
    v33 = v58;
    sub_23F38F530((uint64_t)v16, v58, type metadata accessor for FullPlannerGMSClientConfiguration);
    v34 = type metadata accessor for FullPlannerTokenGeneratorConstrainedDecodingInterface(0);
    v35 = v62;
    v62[3] = v34;
    v35[4] = (uint64_t)&off_256E745A8;
    v36 = sub_23F36145C(v35);
    v37 = v65;
    sub_23F441698(v33, (uint64_t)v36);
  }
  else
  {
    v38 = v59;
    sub_23F38F530((uint64_t)v16, v59, type metadata accessor for FullPlannerGMSClientConfiguration);
    v39 = sub_23F35D2E8(qword_256E707D8);
    v35 = v62;
    v62[3] = v39;
    sub_23F389844(&qword_256E73208, qword_256E707D8, (uint64_t)&unk_23F622390);
    v35[4] = v40;
    v41 = sub_23F36145C(v35);
    v37 = v65;
    sub_23F38D000(v38, (uint64_t)v41);
  }
  v42 = v37;
  sub_23F3663AC((uint64_t)v16, type metadata accessor for FullPlannerGMSClientConfiguration);
  v43 = v53;
  if (v37)
  {
    sub_23F38F0AC((uint64_t)v35);
LABEL_27:
    *v43 = v42;
  }
}

_OWORD *sub_23F41E904()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[26];

  v2 = sub_23F4207F8();
  v3 = (_OWORD *)(v1 + *(int *)(v2 + 48));
  sub_23F38F908(v2, v4, &qword_256E707D0, v5, v6, v7, v8, v9, v13[0]);
  if (v13[3])
    return memcpy(v0, v13, 0xC8uLL);
  sub_23F38F900((uint64_t)v13);
  v11 = sub_23F38FA50();
  sub_23F41E98C(v11, v12);
  sub_23F38F900((uint64_t)v3);
  return sub_23F38F144(v0, v3);
}

uint64_t sub_23F41E98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t *v66;
  char *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  _UNKNOWN **v81;
  __int128 v82;
  void *v83;
  _UNKNOWN **v84;
  __int128 v85;
  void *v86;
  _UNKNOWN **v87;
  __int128 v88;
  uint64_t v89;
  _UNKNOWN **v90;
  __int128 v91[2];
  _QWORD v92[5];
  uint64_t v93[5];
  uint64_t v94[5];
  uint64_t v95[5];
  uint64_t v96;
  void *v97;
  _UNKNOWN **v98;
  uint64_t v99;
  _BYTE v100[40];
  _QWORD v101[5];
  uint64_t v102;
  _QWORD v103[5];
  uint64_t v104;
  void *v105;
  _UNKNOWN **v106;
  void *v107;
  _UNKNOWN **v108;
  uint64_t v109[5];
  uint64_t v110;
  void *v111;
  _UNKNOWN **v112;
  void *v113;
  _UNKNOWN **v114;
  _QWORD v115[5];
  uint64_t v116[5];
  uint64_t v117;
  void *v118;
  _UNKNOWN **v119;
  uint64_t v120[10];
  _QWORD v121[5];
  uint64_t v122[5];
  uint64_t v123;
  void *v124;
  _UNKNOWN **v125;
  uint64_t v126[15];
  _QWORD v127[5];
  uint64_t v128;
  void *v129;
  _UNKNOWN **v130;
  _QWORD v131[10];
  _BYTE v132[24];
  void *v133;
  _UNKNOWN **v134;
  _BYTE v135[24];
  void *v136;
  _UNKNOWN **v137;

  v70 = a2;
  v69 = type metadata accessor for BravoEntityIdentifierValuePromptRenderer(0);
  MEMORY[0x24BDAC7A8](v69);
  v68 = (uint64_t *)((char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v76 = type metadata accessor for EchoRenderableToolDefinitionPromptRenderer(0);
  MEMORY[0x24BDAC7A8](v76);
  v66 = (uint64_t *)((char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v77 = type metadata accessor for BravoEntityValuePromptRenderer(0);
  MEMORY[0x24BDAC7A8](v77);
  v73 = (uint64_t *)((char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v74 = type metadata accessor for EchoTypeInstanceRenderer(0);
  MEMORY[0x24BDAC7A8](v74);
  v78 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for EchoTypeIdentifierRenderer(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  MEMORY[0x24BDAC7A8](v75);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = &unk_250FD5778;
  v137 = &off_250FD57E0;
  v133 = &unk_250FD5758;
  v134 = &off_250FD57C8;
  v127[3] = &unk_250FD4528;
  v127[4] = &off_250FD4588;
  v127[0] = swift_allocObject();
  sub_23F3E7D4C((uint64_t)v132, v127[0] + 16);
  v129 = &unk_250FD4528;
  v130 = &off_250FD4588;
  v128 = swift_allocObject();
  sub_23F3E7D4C((uint64_t)v132, v128 + 16);
  sub_23F41DE94((uint64_t)v131);
  v131[8] = &unk_250FD5758;
  v131[9] = &off_250FD57C8;
  *((_QWORD *)v11 + 3) = &unk_250FD44A0;
  *((_QWORD *)v11 + 4) = &off_250FD4568;
  v12 = swift_allocObject();
  *(_QWORD *)v11 = v12;
  sub_23F3E7DB8((uint64_t)v127, v12 + 16);
  *((_QWORD *)v11 + 8) = &unk_250FD2F20;
  *((_QWORD *)v11 + 9) = &off_250FD3190;
  v13 = swift_allocObject();
  *((_QWORD *)v11 + 5) = v13;
  sub_23F38F1E8((uint64_t)v135, v13 + 16);
  *((_QWORD *)v11 + 13) = &unk_250FD3228;
  *((_QWORD *)v11 + 14) = &off_250FD3238;
  sub_23F41DE94((uint64_t)(v11 + 120));
  v14 = _s14EchoComponentsVMa();
  v65 = v14;
  *((_OWORD *)v11 + 10) = 0u;
  *((_OWORD *)v11 + 11) = 0u;
  *((_QWORD *)v11 + 24) = 0;
  v15 = a1 + *(int *)(v14 + 24);
  v16 = &v11[*(int *)(v75 + 36)];
  v67 = v11;
  v17 = sub_23F61B32C();
  v75 = v17;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v16, v15, v17);
  v63 = v15;
  v18(v9, v15, v17);
  v62 = (void (*)(uint64_t, uint64_t, uint64_t))v18;
  sub_23F38F530((uint64_t)v11, (uint64_t)&v9[v7[5]], type metadata accessor for BravoTypeIdentifierRenderer);
  v19 = (uint64_t *)&v9[v7[6]];
  v19[3] = (uint64_t)&unk_250FD44A0;
  v19[4] = (uint64_t)&off_250FD4568;
  v20 = swift_allocObject();
  *v19 = v20;
  sub_23F3E7DB8((uint64_t)v127, v20 + 16);
  v21 = (uint64_t *)&v9[v7[7]];
  v21[3] = (uint64_t)&unk_250FD2F20;
  v21[4] = (uint64_t)&off_250FD3190;
  v22 = swift_allocObject();
  *v21 = v22;
  sub_23F38F1E8((uint64_t)v135, v22 + 16);
  v23 = &v9[v7[8]];
  *((_QWORD *)v23 + 3) = &unk_250FD3228;
  *((_QWORD *)v23 + 4) = &off_250FD3238;
  v24 = (uint64_t)&v9[v7[9]];
  v25 = a1;
  v71 = a1;
  sub_23F41DE94(v24);
  v26 = v78;
  sub_23F38F530((uint64_t)v9, v78, type metadata accessor for EchoTypeIdentifierRenderer);
  v27 = v26 + *(int *)(v74 + 20);
  *(_QWORD *)(v27 + 24) = &unk_250FD5738;
  *(_QWORD *)(v27 + 32) = &off_250FD57B8;
  v126[3] = (uint64_t)v7;
  v126[4] = (uint64_t)&off_250FD5F50;
  v28 = sub_23F36145C(v126);
  sub_23F38F530((uint64_t)v9, (uint64_t)v28, type metadata accessor for EchoTypeIdentifierRenderer);
  v126[8] = (uint64_t)&unk_250FD2B58;
  v126[9] = (uint64_t)&off_250FD3060;
  v126[13] = (uint64_t)&unk_250FD2B38;
  v126[14] = (uint64_t)&off_250FD3050;
  v122[3] = (uint64_t)v7;
  v64 = v7;
  v122[4] = (uint64_t)&off_250FD5F50;
  v29 = sub_23F36145C(v122);
  v72 = v9;
  sub_23F38F530((uint64_t)v9, (uint64_t)v29, type metadata accessor for EchoTypeIdentifierRenderer);
  v124 = &unk_250FD2B08;
  v125 = &off_250FD3040;
  v123 = swift_allocObject();
  sub_23F38F43C((uint64_t)v126, v123 + 16);
  v30 = v73;
  v73[3] = (uint64_t)v7;
  v30[4] = (uint64_t)&off_250FD5F38;
  v31 = v30;
  v32 = sub_23F36145C(v30);
  sub_23F38F530((uint64_t)v9, (uint64_t)v32, type metadata accessor for EchoTypeIdentifierRenderer);
  v31[8] = (uint64_t)&unk_250FD3CE8;
  v31[9] = (uint64_t)&off_250FD3DC0;
  v33 = swift_allocObject();
  v31[5] = v33;
  sub_23F3CD7F4((uint64_t)v122, v33 + 16);
  v65 = v25 + *(int *)(v65 + 28);
  sub_23F382FC4(v65, (uint64_t)(v31 + 10));
  v18((char *)v31 + *(int *)(v77 + 28), v15, v75);
  v121[3] = &unk_250FD5758;
  v121[4] = &off_250FD57C8;
  v115[3] = &unk_250FD4420;
  v115[4] = &off_250FD4558;
  v115[0] = swift_allocObject();
  sub_23F3E7E2C((uint64_t)v121, v115[0] + 16);
  v34 = v74;
  v116[3] = v74;
  v116[4] = (uint64_t)&off_250FD5F18;
  v35 = sub_23F36145C(v116);
  v36 = v78;
  sub_23F38F530(v78, (uint64_t)v35, type metadata accessor for EchoTypeInstanceRenderer);
  v118 = &unk_250FD4420;
  v119 = &off_250FD4558;
  v117 = swift_allocObject();
  sub_23F3E7E2C((uint64_t)v121, v117 + 16);
  v120[3] = v34;
  v120[4] = (uint64_t)&off_250FD5F18;
  v37 = sub_23F36145C(v120);
  sub_23F38F530(v36, (uint64_t)v37, type metadata accessor for EchoTypeInstanceRenderer);
  v120[8] = (uint64_t)&unk_250FD5758;
  v120[9] = (uint64_t)&off_250FD57C8;
  v109[3] = v34;
  v109[4] = (uint64_t)&off_250FD5F18;
  v38 = sub_23F36145C(v109);
  sub_23F38F530(v36, (uint64_t)v38, type metadata accessor for EchoTypeInstanceRenderer);
  v111 = &unk_250FD4398;
  v112 = &off_250FD4540;
  v110 = swift_allocObject();
  sub_23F3E7EBC((uint64_t)v115, v110 + 16);
  v113 = &unk_250FD5718;
  v114 = &off_250FD57A8;
  v103[3] = &unk_250FD2D78;
  v103[4] = &off_250FD3108;
  v103[0] = swift_allocObject();
  sub_23F38F2C8((uint64_t)v109, v103[0] + 16);
  v105 = &unk_250FD2CF8;
  v106 = &off_250FD30F0;
  v104 = swift_allocObject();
  sub_23F41DE94(v104 + 16);
  v107 = &unk_250FD5718;
  v108 = &off_250FD5798;
  v101[3] = &type metadata for EchoToolDefinitionRenderer;
  v101[4] = &off_250FD5EE0;
  v101[0] = swift_allocObject();
  sub_23F4205A8((uint64_t)v103, v101[0] + 16);
  sub_23F41DE94((uint64_t)&v102);
  sub_23F41DE94((uint64_t)v100);
  v39 = v66;
  v66[3] = (uint64_t)&type metadata for EchoToolDefinitionRenderer;
  v39[4] = (uint64_t)&off_250FD5EE0;
  v40 = swift_allocObject();
  *v39 = v40;
  sub_23F4205A8((uint64_t)v103, v40 + 16);
  v39[8] = (uint64_t)&type metadata for EchoAssistantSchemaIdentifierRenderer;
  v39[9] = (uint64_t)&off_250FD5EC0;
  v39[13] = (uint64_t)&unk_250FD2BD0;
  v39[14] = (uint64_t)&off_250FD3070;
  v41 = swift_allocObject();
  v39[10] = v41;
  sub_23F38F3C0((uint64_t)v101, v41 + 16);
  v39[18] = (uint64_t)&unk_250FD3B00;
  v39[19] = (uint64_t)&off_250FD3B18;
  v42 = swift_allocObject();
  v39[15] = v42;
  sub_23F38F3FC((uint64_t)v100, v42 + 16);
  v39[23] = (uint64_t)&unk_250FD3C68;
  v39[24] = (uint64_t)&off_250FD3DA0;
  v43 = swift_allocObject();
  v39[20] = v43;
  sub_23F41DE94(v43 + 16);
  v44 = v75;
  v46 = v62;
  v45 = v63;
  v62((uint64_t)v39 + *(int *)(v76 + 36), v63, v75);
  v47 = v68;
  v48 = (uint64_t)v64;
  v68[3] = (uint64_t)v64;
  v47[4] = (uint64_t)&off_250FD5F38;
  v49 = (uint64_t)v47;
  v50 = sub_23F36145C(v47);
  v51 = (uint64_t)v72;
  sub_23F38F530((uint64_t)v72, (uint64_t)v50, type metadata accessor for EchoTypeIdentifierRenderer);
  v52 = v69;
  v46(v49 + *(int *)(v69 + 20), v45, v44);
  v95[3] = v48;
  v95[4] = (uint64_t)&off_250FD5F50;
  v53 = sub_23F36145C(v95);
  sub_23F38F530(v51, (uint64_t)v53, type metadata accessor for EchoTypeIdentifierRenderer);
  v97 = &unk_250FD2B08;
  v98 = &off_250FD3040;
  v96 = swift_allocObject();
  sub_23F38F43C((uint64_t)v126, v96 + 16);
  sub_23F382FC4(v65, (uint64_t)&v99);
  v92[3] = &unk_250FD2A80;
  v92[4] = &off_250FD3030;
  v92[0] = swift_allocObject();
  sub_23F38F47C((uint64_t)v95, v92[0] + 16);
  v93[3] = v77;
  v93[4] = (uint64_t)&off_250FD3D90;
  v54 = sub_23F36145C(v93);
  v55 = (uint64_t)v73;
  sub_23F38F530((uint64_t)v73, (uint64_t)v54, type metadata accessor for BravoEntityValuePromptRenderer);
  v94[3] = v52;
  v94[4] = (uint64_t)&off_250FD3D80;
  v56 = sub_23F36145C(v94);
  sub_23F38F530(v49, (uint64_t)v56, type metadata accessor for BravoEntityIdentifierValuePromptRenderer);
  sub_23F41DE94((uint64_t)v91);
  v89 = v76;
  v90 = &off_250FD5E98;
  v57 = sub_23F36145C((uint64_t *)&v88);
  sub_23F38F530((uint64_t)v39, (uint64_t)v57, type metadata accessor for EchoRenderableToolDefinitionPromptRenderer);
  v86 = &unk_250FD28F8;
  v87 = &off_250FD2FD8;
  *(_QWORD *)&v85 = swift_allocObject();
  sub_23F38F580((uint64_t)v92, v85 + 16);
  v83 = &unk_250FD4398;
  v84 = &off_250FD4540;
  *(_QWORD *)&v82 = swift_allocObject();
  sub_23F3E7EBC((uint64_t)v115, v82 + 16);
  v80 = v48;
  v81 = &off_250FD5F50;
  v58 = sub_23F36145C((uint64_t *)&v79);
  sub_23F4205F0((uint64_t)v72, (uint64_t)v58);
  sub_23F38F600((uint64_t)v92);
  sub_23F38F634((uint64_t)v95);
  sub_23F3663AC(v49, type metadata accessor for BravoEntityIdentifierValuePromptRenderer);
  sub_23F3663AC((uint64_t)v39, type metadata accessor for EchoRenderableToolDefinitionPromptRenderer);
  sub_23F38F6D0((uint64_t)v100);
  sub_23F38F704((uint64_t)v101);
  sub_23F420634((uint64_t)v103);
  sub_23F38F76C((uint64_t)v109);
  sub_23F3E7F2C((uint64_t)v115);
  sub_23F3E7F60((uint64_t)v121);
  sub_23F3663AC(v55, type metadata accessor for BravoEntityValuePromptRenderer);
  sub_23F3CD90C((uint64_t)v122);
  sub_23F38F668((uint64_t)v126);
  sub_23F3663AC(v78, type metadata accessor for EchoTypeInstanceRenderer);
  sub_23F3663AC((uint64_t)v67, type metadata accessor for BravoTypeIdentifierRenderer);
  sub_23F3E7F94((uint64_t)v127);
  sub_23F3E7FC8((uint64_t)v132);
  sub_23F38F870((uint64_t)v135);
  v59 = v70;
  sub_23F362678(v91, v70);
  sub_23F362678(&v88, v59 + 40);
  sub_23F362678(&v85, v59 + 80);
  sub_23F362678(&v82, v59 + 120);
  return sub_23F362678(&v79, v59 + 160);
}

void *sub_23F41F5A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  int *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  __int128 v26[2];
  __int128 v27;
  uint64_t v28;
  _UNKNOWN **v29;
  __int128 v30;
  void *v31;
  _UNKNOWN **v32;
  uint64_t v33[5];
  _BYTE v34[32];
  uint64_t v35;
  _QWORD v36[46];

  v3 = sub_23F384B34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)_s14EchoComponentsVMa();
  v8 = v1 + v7[13];
  sub_23F38F124(v8, (uint64_t)v36, &qword_256E707B8);
  if (v36[13])
    return memcpy(a1, v36, 0x168uLL);
  v25 = v8;
  sub_23F3625D8((uint64_t)v36, &qword_256E707B8);
  v35 = 0;
  memset(v34, 0, sizeof(v34));
  v10 = v1 + v7[6];
  v11 = type metadata accessor for BravoContextEventPromptGenerator();
  v33[3] = v11;
  v33[4] = (uint64_t)&off_250FD3A78;
  v12 = sub_23F36145C(v33);
  v24 = v4;
  v13 = *(_QWORD *)(v4 + 16);
  sub_23F3CDA68((uint64_t)v12);
  sub_23F41E904();
  sub_23F382FC4(v1 + v7[7], (uint64_t)v12 + *(int *)(v11 + 24));
  v31 = &unk_250FD4EE0;
  v32 = &off_250FD4F48;
  v14 = sub_23F36682C();
  *(_QWORD *)&v30 = v14;
  *(_QWORD *)(v14 + 40) = &unk_250FD4E68;
  *(_QWORD *)(v14 + 48) = &off_250FD4F38;
  v28 = type metadata accessor for AlphaProgramStatementParser();
  v29 = &off_250FD2850;
  v15 = sub_23F36145C((uint64_t *)&v27);
  v23[0] = v13;
  v23[1] = v10;
  sub_23F3CDA68((uint64_t)v15);
  sub_23F3CDA68((uint64_t)v6);
  sub_23F41E904();
  sub_23F382FC4((uint64_t)&v36[5], (uint64_t)v26);
  sub_23F38BB88((uint64_t)v36);
  a1[18] = (uint64_t)&type metadata for AlphaPlanParser;
  a1[19] = (uint64_t)&off_250FD2840;
  v16 = (uint64_t *)sub_23F36682C();
  v17 = (uint64_t)(v16 + 2);
  a1[15] = (uint64_t)v16;
  v18 = (int *)type metadata accessor for AlphaExpressionParser(0);
  v16[10] = (uint64_t)v18;
  v16[11] = (uint64_t)&off_250FD26C0;
  v19 = sub_23F36145C(v16 + 7);
  sub_23F41DE94((uint64_t)v19 + v18[7]);
  *(_BYTE *)v19 = 1;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))((char *)v19 + v18[5], v6, v3);
  sub_23F362678(v26, (uint64_t)v19 + v18[6]);
  sub_23F362678(&v27, v17);
  a1[23] = type metadata accessor for AlphaStatementResultParser();
  a1[24] = (uint64_t)&off_250FD3308;
  v20 = sub_23F36145C(a1 + 20);
  sub_23F3CDA90((uint64_t)v20);
  sub_23F42080C();
  a1[28] = (uint64_t)&unk_250FD4E48;
  a1[29] = (uint64_t)&off_250FD4F28;
  a1[33] = (uint64_t)&unk_250FD4E28;
  a1[34] = (uint64_t)&off_250FD4F18;
  a1[38] = type metadata accessor for AlphaExternalAgentOutcomeParser();
  a1[39] = (uint64_t)&off_250FD4F08;
  v21 = sub_23F36145C(a1 + 35);
  sub_23F3CDA90((uint64_t)v21);
  sub_23F42080C();
  a1[43] = (uint64_t)&unk_250FD4E08;
  a1[44] = (uint64_t)&off_250FD4EF8;
  sub_23F3CD9FC((uint64_t)v34, (uint64_t)a1, &qword_256E707C0);
  sub_23F3CD9FC((uint64_t)v33, (uint64_t)(a1 + 5), &qword_256E707C8);
  sub_23F362678(&v30, (uint64_t)(a1 + 10));
  v22 = v25;
  sub_23F3625D8(v25, &qword_256E707B8);
  return (void *)sub_23F38F0E8((uint64_t)a1, v22);
}

void sub_23F41F8F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18[6];

  v1 = sub_23F4207F8();
  v2 = v0 + *(int *)(v1 + 56);
  sub_23F38F908(v1, v3, &qword_256E707B0, v4, v5, v6, v7, v8, v18[0]);
  sub_23F38F938();
  if (v16)
  {
    sub_23F38F900((uint64_t)v18);
    sub_23F3CDA74(v17, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t *))sub_23F41F978);
    sub_23F38F900(v2);
    sub_23F38F99C();
  }
  else
  {
    sub_23F3CDA5C(v9, v10, &qword_256E705E8, v11, v12, v13, v14, v15, v18[0]);
  }
  sub_23F38F8EC();
}

uint64_t sub_23F41F978@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  int *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  _UNKNOWN **v34;
  _BYTE v35[200];
  uint64_t v36[46];
  uint64_t v37;

  v24 = a3;
  v25 = a2;
  v4 = sub_23F6170CC();
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B32C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = _s14EchoComponentsVMa();
  v10 = a1 + *(int *)(v26 + 24);
  v37 = v7;
  v11 = *(void (**)(void))(v7 + 16);
  v31 = v9;
  ((void (*)(char *, uint64_t, uint64_t))v11)(v9, v10, v6);
  sub_23F41F5A0(v36);
  sub_23F41E904();
  v12 = type metadata accessor for BravoToolRenderer();
  v33 = v12;
  v34 = &off_250FD3E20;
  v13 = sub_23F36145C((uint64_t *)&v32);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v11)(v13, v10, v6);
  sub_23F41E904();
  v14 = (uint64_t *)((char *)v13 + *(int *)(v12 + 24));
  v14[3] = type metadata accessor for AlphaToolRenderer();
  v14[4] = (uint64_t)&off_250FD3328;
  sub_23F36145C(v14);
  v11();
  sub_23F41E904();
  v15 = (uint64_t *)((char *)v13 + *(int *)(v12 + 28));
  if (qword_256E6F060 != -1)
    swift_once();
  v16 = qword_256E77B18;
  v15[3] = (uint64_t)&unk_250FD5670;
  v15[4] = (uint64_t)&off_250FD5688;
  *v15 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v29, a1 + *(int *)(v26 + 20), v28);
  sub_23F617510();
  swift_allocObject();
  sub_23F617BA0();
  v17 = v30;
  v18 = sub_23F617504();
  if (v17)
  {
    sub_23F38BB88((uint64_t)v35);
    sub_23F38BBBC((uint64_t)v36);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v6);
    result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v32);
    *v25 = v17;
  }
  else
  {
    v20 = v18;
    v21 = (int *)type metadata accessor for ConversationParser();
    v22 = v24;
    v24[3] = (uint64_t)v21;
    v22[4] = (uint64_t)&off_250FD4C58;
    v23 = sub_23F36145C(v22);
    (*(void (**)(uint64_t *, char *, uint64_t))(v37 + 32))(v23, v31, v6);
    memcpy((char *)v23 + v21[5], v36, 0x168uLL);
    memcpy((char *)v23 + v21[6], v35, 0xC8uLL);
    result = sub_23F362678(&v32, (uint64_t)v23 + v21[7]);
    *(uint64_t *)((char *)v23 + v21[8]) = v20;
  }
  return result;
}

void sub_23F41FC5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _UNKNOWN **v6;

  v2 = v1 + *(int *)(sub_23F4207F8() + 60);
  if (*(_QWORD *)(v2 + 24))
  {
    sub_23F382FC4(v2, (uint64_t)&v4);
  }
  else
  {
    v3 = *(_OWORD *)(v2 + 16);
    v4 = *(_OWORD *)v2;
    v5 = v3;
    v6 = *(_UNKNOWN ***)(v2 + 32);
  }
  if (!*((_QWORD *)&v5 + 1))
  {
    *((_QWORD *)&v5 + 1) = &unk_250FD4790;
    v6 = &off_256E71E88;
    if (*(_QWORD *)(v2 + 24))
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v2);
    sub_23F382FC4((uint64_t)&v4, v2);
  }
  sub_23F362678(&v4, v0);
  sub_23F38FA3C();
}

void sub_23F41FCEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v3 = v1 + *(int *)(sub_23F4207F8() + 64);
  sub_23F38FA10();
  if (v6)
  {
    sub_23F38F9FC();
  }
  else if ((v5 & 1) != 0)
  {
    sub_23F38F9D4();
    *(_QWORD *)&v17 = v2;
    v21 = 1;
  }
  else
  {
    sub_23F420804(v4, (uint64_t)&v17);
    v21 = 0;
  }
  sub_23F38F938();
  if (v6)
  {
    sub_23F38FA50();
    sub_23F41DD9C(v15);
    sub_23F38FA10();
    if (!v6)
    {
      if ((v16 & 1) != 0)

      else
        sub_23F38FA48();
    }
    if ((*(_BYTE *)(v0 + 40) & 1) != 0)
    {
      sub_23F38FA30();
      *(_QWORD *)v3 = v0;
      *(_BYTE *)(v3 + 40) = 1;
    }
    else
    {
      sub_23F3CDA9C();
      *(_BYTE *)(v3 + 40) = 0;
    }
  }
  else
  {
    sub_23F38FA5C(v7, v8, v9, v10, v11, v12, v13, v14, v17, v18, v19, v20, v21);
  }
  sub_23F38F98C();
}

void sub_23F41FDA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13[6];

  v2 = v1 + *(int *)(sub_23F4207F8() + 68);
  sub_23F38F124(v2, (uint64_t)v13, &qword_256E70740);
  sub_23F38F938();
  if (v10)
  {
    sub_23F3625D8((uint64_t)v13, &qword_256E70740);
    if (qword_256E6EE60 != -1)
      swift_once();
    v11 = sub_23F617BA0();
    v12 = sub_23F38ED40(v11);
    *(_QWORD *)(v0 + 24) = &type metadata for FullPlannerResponseParser;
    *(_QWORD *)(v0 + 32) = &off_250FD6EC8;
    *(_QWORD *)v0 = v12;
    *(_BYTE *)(v0 + 40) = 0;
    sub_23F3625D8(v2, &qword_256E70740);
    sub_23F38F124(v0, v2, &qword_256E705F0);
  }
  else
  {
    sub_23F3CDA5C(v3, v4, &qword_256E705F0, v5, v6, v7, v8, v9, v13[0]);
  }
  sub_23F38FA3C();
}

void sub_23F41FE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[6];

  v2 = sub_23F4207F8();
  v3 = v1 + *(int *)(v2 + 72);
  sub_23F38F908(v2, v4, &qword_256E70730, v5, v6, v7, v8, v9, v20[0]);
  sub_23F38F938();
  if (v17)
  {
    sub_23F38F900((uint64_t)v20);
    v18 = sub_23F38FA50();
    sub_23F41DBB0(v18, v19);
    sub_23F38F900(v3);
    sub_23F38F124(v0, v3, &qword_256E705F8);
  }
  else
  {
    sub_23F3CDA5C(v10, v11, &qword_256E705F8, v12, v13, v14, v15, v16, v20[0]);
  }
  sub_23F38F98C();
}

void sub_23F41FEF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18[6];

  v1 = sub_23F4207F8();
  v2 = v0 + *(int *)(v1 + 76);
  sub_23F38F908(v1, v3, &qword_256E70720, v4, v5, v6, v7, v8, v18[0]);
  sub_23F38F938();
  if (v16)
  {
    sub_23F38F900((uint64_t)v18);
    sub_23F3CDA74(v17, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t *))sub_23F41FF78);
    sub_23F38F900(v2);
    sub_23F38F99C();
  }
  else
  {
    sub_23F3CDA5C(v9, v10, &qword_256E70600, v11, v12, v13, v14, v15, v18[0]);
  }
  sub_23F38F8EC();
}

uint64_t sub_23F41FF78@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[5];
  _QWORD v19[5];
  _QWORD v20[5];
  __int128 v21[2];
  char v22;
  _BYTE v23[48];
  uint64_t v24;

  sub_23F41FCEC();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v20[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    result = swift_willThrowTypedImpl();
LABEL_11:
    *a1 = v4;
    return result;
  }
  sub_23F362678(v21, (uint64_t)v23);
  sub_23F41E1B8();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v19[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
LABEL_10:
    result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v23);
    goto LABEL_11;
  }
  sub_23F362678(v21, (uint64_t)v20);
  sub_23F41FDA0();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v18[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
LABEL_9:
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v20);
    goto LABEL_10;
  }
  sub_23F362678(v21, (uint64_t)v19);
  sub_23F41FE78();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v24 = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v19);
    goto LABEL_9;
  }
  sub_23F362678(v21, (uint64_t)v18);
  v6 = sub_23F35D2E8(&qword_256E73200);
  v7 = (_QWORD *)swift_allocObject();
  v8 = sub_23F38EB10((uint64_t)v19, v19[3]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (_QWORD *)((char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  v12 = sub_23F38EB10((uint64_t)v18, v18[3]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  v16 = sub_23F420668((uint64_t)v23, (uint64_t)v20, *v10, v14, v7);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v18);
  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v19);
  a2[3] = v6;
  a2[4] = &off_250FD6288;
  *a2 = v16;
  return result;
}

uint64_t sub_23F420228()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F420234(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F38F984();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      v11 = sub_23F384B34();
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == (_DWORD)a2)
      {
        v9 = v11;
        v10 = a3[6];
      }
      else
      {
        v9 = sub_23F35D2E8(&qword_256E705E0);
        v10 = a3[9];
      }
    }
    return sub_23F36195C(a1 + v10, a2, v9);
  }
}

uint64_t sub_23F4202EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4202F8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23F38F984();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = a4[5];
    }
    else
    {
      v11 = sub_23F384B34();
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
      {
        v9 = v11;
        v10 = a4[6];
      }
      else
      {
        v9 = sub_23F35D2E8(&qword_256E705E0);
        v10 = a4[9];
      }
    }
    return sub_23F36196C(v5 + v10, a2, a2, v9);
  }
  return result;
}

void sub_23F4203AC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6170CC();
  if (v0 <= 0x3F)
  {
    sub_23F61B32C();
    if (v1 <= 0x3F)
    {
      sub_23F38C624();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_23F4204A4()
{
  uint64_t v0;

  sub_23F38F944();
  if (*(_QWORD *)(v0 + 160))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
  return swift_deallocObject();
}

uint64_t sub_23F4204E4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_23F420510()
{
  uint64_t v0;

  sub_23F3E8094();
  if (*(_QWORD *)(v0 + 200))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 176);
  return swift_deallocObject();
}

uint64_t sub_23F420544()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_23F42056C()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 56);
  if (*(_QWORD *)(v0 + 120))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 96);
  return swift_deallocObject();
}

uint64_t sub_23F4205A8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for EchoToolDefinitionRenderer(a2, a1);
  return a2;
}

uint64_t sub_23F4205F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EchoTypeIdentifierRenderer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F420634(uint64_t a1)
{
  destroy for EchoToolDefinitionRenderer(a1);
  return a1;
}

_QWORD *sub_23F420668(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, _QWORD *a5)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  ValueMetadata *v13;
  _UNKNOWN **v14;
  __int128 v15;
  ValueMetadata *v16;
  _UNKNOWN **v17;

  *(_QWORD *)&v15 = a3;
  v16 = &type metadata for FullPlannerResponseParser;
  v17 = &off_250FD6EC8;
  v13 = &type metadata for PromptMapperResolver;
  v14 = &off_250FDB498;
  *(_QWORD *)&v12 = sub_23F36682C();
  v8 = memcpy((void *)(v12 + 16), a4, 0x118uLL);
  sub_23F420804((uint64_t)v8, (uint64_t)(a5 + 2));
  sub_23F382FC4(a2, (uint64_t)(a5 + 7));
  v9 = a5[10];
  v10 = a5[11];
  sub_23F35EA9C(a5 + 7, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a2);
  sub_23F38FA48();
  sub_23F362678(&v15, (uint64_t)(a5 + 12));
  sub_23F362678(&v12, (uint64_t)(a5 + 17));
  return a5;
}

uint64_t sub_23F420764()
{
  uint64_t v0;

  sub_23F3E8094();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 176);
  swift_release();
  if (*(_QWORD *)(v0 + 224))
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 256);
  return swift_deallocObject();
}

uint64_t sub_23F4207C0()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 56);
  return swift_deallocObject();
}

uint64_t sub_23F4207F8()
{
  return _s14EchoComponentsVMa();
}

void sub_23F420804(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F382FC4(v2, a2);
}

_OWORD *sub_23F42080C()
{
  return sub_23F41E904();
}

ValueMetadata *type metadata accessor for EchoAssistantSchemaIdentifierRenderer()
{
  return &type metadata for EchoAssistantSchemaIdentifierRenderer;
}

uint64_t destroy for EchoToolDefinitionRenderer(uint64_t a1)
{
  uint64_t result;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  if (*(_QWORD *)(a1 + 104))
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  return result;
}

uint64_t initializeWithCopy for EchoToolDefinitionRenderer(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = (_OWORD *)(a1 + 80);
  v7 = (_OWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 104);
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = v8;
    *(_QWORD *)(a1 + 112) = v9;
    (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(v6, v7);
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 96);
    *v6 = *v7;
    *(_OWORD *)(a1 + 96) = v10;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  }
  return a1;
}

uint64_t assignWithCopy for EchoToolDefinitionRenderer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  sub_23F361AD0((uint64_t *)a1, (uint64_t *)a2);
  sub_23F361AD0((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  v4 = *(_QWORD *)(a2 + 104);
  if (!*(_QWORD *)(a1 + 104))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 104) = v4;
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 80, a2 + 80);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 80);
    v6 = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v5;
    *(_OWORD *)(a1 + 96) = v6;
    return a1;
  }
  if (!v4)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
    goto LABEL_7;
  }
  sub_23F361AD0((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  return a1;
}

uint64_t assignWithTake for EchoToolDefinitionRenderer(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 104))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for EchoToolDefinitionRenderer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EchoToolDefinitionRenderer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EchoToolDefinitionRenderer()
{
  return &type metadata for EchoToolDefinitionRenderer;
}

char *sub_23F420AD0(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B32C();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *(_OWORD *)&a2[v9 + 24];
    *(_OWORD *)&a1[v9 + 24] = v12;
    (**(void (***)(char *, char *))(v12 - 8))(&a1[v9], &a2[v9]);
    v13 = *((_OWORD *)v11 + 4);
    *((_OWORD *)v10 + 4) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)(v10 + 40), (uint64_t)(v11 + 40));
    v14 = *(_OWORD *)(v11 + 104);
    *(_OWORD *)(v10 + 104) = v14;
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(v10 + 80), (uint64_t)(v11 + 80));
    v15 = *((_OWORD *)v11 + 9);
    *((_OWORD *)v10 + 9) = v15;
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))((uint64_t)(v10 + 120), (uint64_t)(v11 + 120));
    v16 = v10 + 160;
    v17 = v11 + 160;
    v18 = *((_QWORD *)v11 + 23);
    if (v18)
    {
      v19 = *((_QWORD *)v11 + 24);
      *((_QWORD *)v10 + 23) = v18;
      *((_QWORD *)v10 + 24) = v19;
      (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v16, v17);
    }
    else
    {
      v21 = *((_OWORD *)v11 + 11);
      *v16 = *v17;
      *((_OWORD *)v10 + 11) = v21;
      *((_QWORD *)v10 + 24) = *((_QWORD *)v11 + 24);
    }
    v22 = type metadata accessor for BravoTypeIdentifierRenderer(0);
    v8(&v10[*(int *)(v22 + 36)], &v11[*(int *)(v22 + 36)], v7);
    v23 = a3[6];
    v24 = *(_OWORD *)&a2[v23 + 24];
    *(_OWORD *)&a1[v23 + 24] = v24;
    (**(void (***)(void))(v24 - 8))();
    v25 = a3[7];
    v26 = *(_OWORD *)&a2[v25 + 24];
    *(_OWORD *)&a1[v25 + 24] = v26;
    (**(void (***)(void))(v26 - 8))();
    v27 = a3[8];
    v28 = *(_OWORD *)&a2[v27 + 24];
    *(_OWORD *)&a1[v27 + 24] = v28;
    (**(void (***)(void))(v28 - 8))();
    v29 = a3[9];
    v30 = *(_OWORD *)&a2[v29 + 24];
    *(_OWORD *)&a1[v29 + 24] = v30;
    (**(void (***)(void))(v30 - 8))();
  }
  return a1;
}

uint64_t sub_23F420CD0(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23F61B32C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v6);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v6 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v6 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v6 + 120);
  if (*(_QWORD *)(v6 + 184))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v6 + 160);
  v7 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  v5(v6 + *(int *)(v7 + 36), v4);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[6]);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[7]);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[8]);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[9]);
}

uint64_t sub_23F420D9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;

  v6 = sub_23F61B32C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_OWORD *)(a2 + v8 + 24);
  *(_OWORD *)(a1 + v8 + 24) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + v8, a2 + v8);
  v12 = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 64) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v9 + 40, v10 + 40);
  v13 = *(_OWORD *)(v10 + 104);
  *(_OWORD *)(v9 + 104) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v9 + 80, v10 + 80);
  v14 = *(_OWORD *)(v10 + 144);
  *(_OWORD *)(v9 + 144) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))(v9 + 120, v10 + 120);
  v15 = (_OWORD *)(v9 + 160);
  v16 = (_OWORD *)(v10 + 160);
  v17 = *(_QWORD *)(v10 + 184);
  if (v17)
  {
    v18 = *(_QWORD *)(v10 + 192);
    *(_QWORD *)(v9 + 184) = v17;
    *(_QWORD *)(v9 + 192) = v18;
    (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v15, v16);
  }
  else
  {
    v19 = *(_OWORD *)(v10 + 176);
    *v15 = *v16;
    *(_OWORD *)(v9 + 176) = v19;
    *(_QWORD *)(v9 + 192) = *(_QWORD *)(v10 + 192);
  }
  v20 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  v7(v9 + *(int *)(v20 + 36), v10 + *(int *)(v20 + 36), v6);
  v21 = a3[6];
  v22 = *(_OWORD *)(a2 + v21 + 24);
  *(_OWORD *)(a1 + v21 + 24) = v22;
  (**(void (***)(void))(v22 - 8))();
  v23 = a3[7];
  v24 = *(_OWORD *)(a2 + v23 + 24);
  *(_OWORD *)(a1 + v23 + 24) = v24;
  (**(void (***)(void))(v24 - 8))();
  v25 = a3[8];
  v26 = *(_OWORD *)(a2 + v25 + 24);
  *(_OWORD *)(a1 + v25 + 24) = v26;
  (**(void (***)(void))(v26 - 8))();
  v27 = a3[9];
  v28 = *(_OWORD *)(a2 + v27 + 24);
  *(_OWORD *)(a1 + v27 + 24) = v28;
  (**(void (***)(void))(v28 - 8))();
  return a1;
}

uint64_t sub_23F420F70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v6 = sub_23F61B32C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  sub_23F361AD0((uint64_t *)(a1 + v8), (uint64_t *)(a2 + v8));
  sub_23F361AD0((uint64_t *)(v9 + 40), (uint64_t *)(v10 + 40));
  sub_23F361AD0((uint64_t *)(v9 + 80), (uint64_t *)(v10 + 80));
  sub_23F361AD0((uint64_t *)(v9 + 120), (uint64_t *)(v10 + 120));
  v11 = *(_QWORD *)(v10 + 184);
  if (!*(_QWORD *)(v9 + 184))
  {
    if (v11)
    {
      *(_QWORD *)(v9 + 184) = v11;
      *(_QWORD *)(v9 + 192) = *(_QWORD *)(v10 + 192);
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v9 + 160, v10 + 160);
      goto LABEL_8;
    }
LABEL_7:
    v12 = *(_OWORD *)(v10 + 160);
    v13 = *(_OWORD *)(v10 + 176);
    *(_QWORD *)(v9 + 192) = *(_QWORD *)(v10 + 192);
    *(_OWORD *)(v9 + 160) = v12;
    *(_OWORD *)(v9 + 176) = v13;
    goto LABEL_8;
  }
  if (!v11)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v9 + 160);
    goto LABEL_7;
  }
  sub_23F361AD0((uint64_t *)(v9 + 160), (uint64_t *)(v10 + 160));
LABEL_8:
  v14 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  v7(v9 + *(int *)(v14 + 36), v10 + *(int *)(v14 + 36), v6);
  sub_23F361AD0((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  sub_23F361AD0((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  sub_23F361AD0((uint64_t *)(a1 + a3[8]), (uint64_t *)(a2 + a3[8]));
  sub_23F361AD0((uint64_t *)(a1 + a3[9]), (uint64_t *)(a2 + a3[9]));
  return a1;
}

uint64_t sub_23F4210DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 *v29;
  __int128 v30;
  __int128 v31;

  v6 = sub_23F61B32C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_OWORD *)(a2 + v8 + 16);
  *(_OWORD *)v9 = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(a2 + v8 + 32);
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(a2 + v8 + 40);
  *(_OWORD *)(v9 + 56) = *(_OWORD *)(a2 + v8 + 56);
  *(_QWORD *)(v9 + 72) = *(_QWORD *)(a2 + v8 + 72);
  v12 = *(_OWORD *)(a2 + v8 + 96);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(a2 + v8 + 80);
  *(_OWORD *)(v9 + 96) = v12;
  *(_QWORD *)(v9 + 112) = *(_QWORD *)(a2 + v8 + 112);
  *(_QWORD *)(v9 + 152) = *(_QWORD *)(a2 + v8 + 152);
  *(_OWORD *)(v9 + 136) = *(_OWORD *)(a2 + v8 + 136);
  *(_OWORD *)(v9 + 120) = *(_OWORD *)(a2 + v8 + 120);
  *(_QWORD *)(v9 + 192) = *(_QWORD *)(a2 + v8 + 192);
  v13 = *(_OWORD *)(a2 + v8 + 176);
  *(_OWORD *)(v9 + 160) = *(_OWORD *)(a2 + v8 + 160);
  *(_OWORD *)(v9 + 176) = v13;
  v14 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  v7(v9 + *(int *)(v14 + 36), v10 + *(int *)(v14 + 36), v6);
  v15 = a3[6];
  v16 = a3[7];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  v20 = a1 + v16;
  v21 = a2 + v16;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  v23 = a3[8];
  v24 = a3[9];
  v25 = a1 + v23;
  v26 = a2 + v23;
  v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
  v28 = a1 + v24;
  v29 = (__int128 *)(a2 + v24);
  v30 = *v29;
  v31 = v29[1];
  *(_QWORD *)(v28 + 32) = *((_QWORD *)v29 + 4);
  *(_OWORD *)v28 = v30;
  *(_OWORD *)(v28 + 16) = v31;
  return a1;
}

uint64_t sub_23F421230(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;

  v6 = sub_23F61B32C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v8);
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v9 + 40);
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
  *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
  *(_QWORD *)(v9 + 72) = *(_QWORD *)(v10 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v9 + 80);
  v12 = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 96) = v12;
  *(_QWORD *)(v9 + 112) = *(_QWORD *)(v10 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v9 + 120);
  *(_OWORD *)(v9 + 120) = *(_OWORD *)(v10 + 120);
  *(_OWORD *)(v9 + 136) = *(_OWORD *)(v10 + 136);
  *(_QWORD *)(v9 + 152) = *(_QWORD *)(v10 + 152);
  if (*(_QWORD *)(v9 + 184))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v9 + 160);
  v13 = *(_OWORD *)(v10 + 176);
  *(_OWORD *)(v9 + 160) = *(_OWORD *)(v10 + 160);
  *(_OWORD *)(v9 + 176) = v13;
  *(_QWORD *)(v9 + 192) = *(_QWORD *)(v10 + 192);
  v14 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  v7(v9 + *(int *)(v14 + 36), v10 + *(int *)(v14 + 36), v6);
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v15);
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  v19 = a3[7];
  v20 = a1 + v19;
  v21 = a2 + v19;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v19);
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v23);
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v27);
  v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v30;
  *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
  return a1;
}

uint64_t sub_23F4213E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4213EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23F384B34();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
LABEL_5:
    sub_23F3B1A44(v8, a2, v7);
    return;
  }
  v9 = sub_23F424510();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  sub_23F3F9B80(*(_QWORD *)(a1 + *(int *)(a3 + 24) + 24));
  sub_23F362B80();
}

uint64_t sub_23F42146C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F421478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_23F384B34();
  sub_23F3F9C68();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    sub_23F424510();
    sub_23F3F9C68();
    if (!v10)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      sub_23F362B80();
      return;
    }
    v8 = v11;
    v9 = a1 + *(int *)(a4 + 20);
  }
  sub_23F38370C(v9, a2, a2, v8);
}

uint64_t type metadata accessor for EchoTypeIdentifierRenderer(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E737D0);
}

uint64_t sub_23F421504()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for BravoTypeIdentifierRenderer(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_23F421598(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B32C();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for EchoTypeIdentifierRenderer(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = *(_OWORD *)&a2[v10 + 24];
    *(_OWORD *)&a1[v10 + 24] = v13;
    (**(void (***)(char *, char *))(v13 - 8))(&a1[v10], &a2[v10]);
    v14 = *((_OWORD *)v12 + 4);
    *((_OWORD *)v11 + 4) = v14;
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(v11 + 40), (uint64_t)(v12 + 40));
    v15 = *(_OWORD *)(v12 + 104);
    *(_OWORD *)(v11 + 104) = v15;
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))((uint64_t)(v11 + 80), (uint64_t)(v12 + 80));
    v16 = *((_OWORD *)v12 + 9);
    *((_OWORD *)v11 + 9) = v16;
    (**(void (***)(uint64_t, uint64_t))(v16 - 8))((uint64_t)(v11 + 120), (uint64_t)(v12 + 120));
    v17 = v11 + 160;
    v18 = v12 + 160;
    v19 = *((_QWORD *)v12 + 23);
    if (v19)
    {
      v20 = *((_QWORD *)v12 + 24);
      *((_QWORD *)v11 + 23) = v19;
      *((_QWORD *)v11 + 24) = v20;
      (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v17, v18);
    }
    else
    {
      v22 = *((_OWORD *)v12 + 11);
      *v17 = *v18;
      *((_OWORD *)v11 + 11) = v22;
      *((_QWORD *)v11 + 24) = *((_QWORD *)v12 + 24);
    }
    v23 = type metadata accessor for BravoTypeIdentifierRenderer(0);
    v8(&v11[*(int *)(v23 + 36)], &v12[*(int *)(v23 + 36)], v7);
    v24 = v9[6];
    v25 = *(_OWORD *)&a2[v24 + 24];
    *(_OWORD *)&a1[v24 + 24] = v25;
    (**(void (***)(void))(v25 - 8))();
    v26 = v9[7];
    v27 = *(_OWORD *)&a2[v26 + 24];
    *(_OWORD *)&a1[v26 + 24] = v27;
    (**(void (***)(void))(v27 - 8))();
    v28 = v9[8];
    v29 = *(_OWORD *)&a2[v28 + 24];
    *(_OWORD *)&a1[v28 + 24] = v29;
    (**(void (***)(void))(v29 - 8))();
    v30 = v9[9];
    v31 = *(_OWORD *)&a2[v30 + 24];
    *(_OWORD *)&a1[v30 + 24] = v31;
    (**(void (***)(void))(v31 - 8))();
    v32 = *(int *)(a3 + 20);
    v33 = &a1[v32];
    v34 = &a2[v32];
    v35 = *(_QWORD *)&a2[v32 + 24];
    if (v35)
    {
      v36 = *((_QWORD *)v34 + 4);
      *((_QWORD *)v33 + 3) = v35;
      *((_QWORD *)v33 + 4) = v36;
      (**(void (***)(void))(v35 - 8))();
    }
    else
    {
      v37 = *((_OWORD *)v34 + 1);
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *((_OWORD *)v33 + 1) = v37;
      *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
    }
  }
  return a1;
}

uint64_t sub_23F4217E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = sub_23F61B32C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = (int *)type metadata accessor for EchoTypeIdentifierRenderer(0);
  v7 = a1 + v6[5];
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v7);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v7 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v7 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v7 + 120);
  if (*(_QWORD *)(v7 + 184))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v7 + 160);
  v8 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  v5(v7 + *(int *)(v8 + 36), v4);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v6[6]);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v6[7]);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v6[8]);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v6[9]);
  result = a1 + *(int *)(a2 + 20);
  if (*(_QWORD *)(result + 24))
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(result);
  return result;
}

uint64_t sub_23F4218E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;

  v6 = sub_23F61B32C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for EchoTypeIdentifierRenderer(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_OWORD *)(a2 + v9 + 24);
  *(_OWORD *)(a1 + v9 + 24) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + v9, a2 + v9);
  v13 = *(_OWORD *)(v11 + 64);
  *(_OWORD *)(v10 + 64) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v10 + 40, v11 + 40);
  v14 = *(_OWORD *)(v11 + 104);
  *(_OWORD *)(v10 + 104) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))(v10 + 80, v11 + 80);
  v15 = *(_OWORD *)(v11 + 144);
  *(_OWORD *)(v10 + 144) = v15;
  (**(void (***)(uint64_t, uint64_t))(v15 - 8))(v10 + 120, v11 + 120);
  v16 = (_OWORD *)(v10 + 160);
  v17 = (_OWORD *)(v11 + 160);
  v18 = *(_QWORD *)(v11 + 184);
  if (v18)
  {
    v19 = *(_QWORD *)(v11 + 192);
    *(_QWORD *)(v10 + 184) = v18;
    *(_QWORD *)(v10 + 192) = v19;
    (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v16, v17);
  }
  else
  {
    v20 = *(_OWORD *)(v11 + 176);
    *v16 = *v17;
    *(_OWORD *)(v10 + 176) = v20;
    *(_QWORD *)(v10 + 192) = *(_QWORD *)(v11 + 192);
  }
  v21 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  v7(v10 + *(int *)(v21 + 36), v11 + *(int *)(v21 + 36), v6);
  v22 = v8[6];
  v23 = *(_OWORD *)(a2 + v22 + 24);
  *(_OWORD *)(a1 + v22 + 24) = v23;
  (**(void (***)(void))(v23 - 8))();
  v24 = v8[7];
  v25 = *(_OWORD *)(a2 + v24 + 24);
  *(_OWORD *)(a1 + v24 + 24) = v25;
  (**(void (***)(void))(v25 - 8))();
  v26 = v8[8];
  v27 = *(_OWORD *)(a2 + v26 + 24);
  *(_OWORD *)(a1 + v26 + 24) = v27;
  (**(void (***)(void))(v27 - 8))();
  v28 = v8[9];
  v29 = *(_OWORD *)(a2 + v28 + 24);
  *(_OWORD *)(a1 + v28 + 24) = v29;
  (**(void (***)(void))(v29 - 8))();
  v30 = *(int *)(a3 + 20);
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_QWORD *)(a2 + v30 + 24);
  if (v33)
  {
    v34 = *(_QWORD *)(v32 + 32);
    *(_QWORD *)(v31 + 24) = v33;
    *(_QWORD *)(v31 + 32) = v34;
    (**(void (***)(void))(v33 - 8))();
  }
  else
  {
    v35 = *(_OWORD *)(v32 + 16);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *(_OWORD *)(v31 + 16) = v35;
    *(_QWORD *)(v31 + 32) = *(_QWORD *)(v32 + 32);
  }
  return a1;
}

uint64_t sub_23F421AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;

  v6 = sub_23F61B32C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for EchoTypeIdentifierRenderer(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  sub_23F361AD0((uint64_t *)(a1 + v9), (uint64_t *)(a2 + v9));
  sub_23F361AD0((uint64_t *)(v10 + 40), (uint64_t *)(v11 + 40));
  sub_23F361AD0((uint64_t *)(v10 + 80), (uint64_t *)(v11 + 80));
  sub_23F361AD0((uint64_t *)(v10 + 120), (uint64_t *)(v11 + 120));
  v12 = *(_QWORD *)(v11 + 184);
  if (*(_QWORD *)(v10 + 184))
  {
    if (v12)
    {
      sub_23F361AD0((uint64_t *)(v10 + 160), (uint64_t *)(v11 + 160));
      goto LABEL_8;
    }
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v10 + 160);
  }
  else if (v12)
  {
    *(_QWORD *)(v10 + 184) = v12;
    *(_QWORD *)(v10 + 192) = *(_QWORD *)(v11 + 192);
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v10 + 160, v11 + 160);
    goto LABEL_8;
  }
  v13 = *(_OWORD *)(v11 + 160);
  v14 = *(_OWORD *)(v11 + 176);
  *(_QWORD *)(v10 + 192) = *(_QWORD *)(v11 + 192);
  *(_OWORD *)(v10 + 160) = v13;
  *(_OWORD *)(v10 + 176) = v14;
LABEL_8:
  v15 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  v7(v10 + *(int *)(v15 + 36), v11 + *(int *)(v15 + 36), v6);
  sub_23F361AD0((uint64_t *)(a1 + v8[6]), (uint64_t *)(a2 + v8[6]));
  sub_23F361AD0((uint64_t *)(a1 + v8[7]), (uint64_t *)(a2 + v8[7]));
  sub_23F361AD0((uint64_t *)(a1 + v8[8]), (uint64_t *)(a2 + v8[8]));
  sub_23F361AD0((uint64_t *)(a1 + v8[9]), (uint64_t *)(a2 + v8[9]));
  v16 = *(int *)(a3 + 20);
  v17 = a1 + v16;
  v18 = (__int128 *)(a2 + v16);
  v19 = *((_QWORD *)v18 + 3);
  if (!*(_QWORD *)(a1 + v16 + 24))
  {
    if (v19)
    {
      *(_QWORD *)(v17 + 24) = v19;
      *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
      (**(void (***)(uint64_t, __int128 *))(v19 - 8))(v17, v18);
      return a1;
    }
LABEL_14:
    v20 = *v18;
    v21 = v18[1];
    *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
    *(_OWORD *)v17 = v20;
    *(_OWORD *)(v17 + 16) = v21;
    return a1;
  }
  if (!v19)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v17);
    goto LABEL_14;
  }
  sub_23F361AD0((uint64_t *)v17, (uint64_t *)v18);
  return a1;
}

uint64_t sub_23F421CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;

  v6 = sub_23F61B32C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for EchoTypeIdentifierRenderer(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_OWORD *)(a2 + v9 + 16);
  *(_OWORD *)v10 = *(_OWORD *)(a2 + v9);
  *(_OWORD *)(v10 + 16) = v12;
  *(_QWORD *)(v10 + 32) = *(_QWORD *)(a2 + v9 + 32);
  *(_OWORD *)(v10 + 40) = *(_OWORD *)(a2 + v9 + 40);
  *(_OWORD *)(v10 + 56) = *(_OWORD *)(a2 + v9 + 56);
  *(_QWORD *)(v10 + 72) = *(_QWORD *)(a2 + v9 + 72);
  v13 = *(_OWORD *)(a2 + v9 + 96);
  *(_OWORD *)(v10 + 80) = *(_OWORD *)(a2 + v9 + 80);
  *(_OWORD *)(v10 + 96) = v13;
  *(_QWORD *)(v10 + 112) = *(_QWORD *)(a2 + v9 + 112);
  *(_QWORD *)(v10 + 152) = *(_QWORD *)(a2 + v9 + 152);
  *(_OWORD *)(v10 + 136) = *(_OWORD *)(a2 + v9 + 136);
  *(_OWORD *)(v10 + 120) = *(_OWORD *)(a2 + v9 + 120);
  *(_QWORD *)(v10 + 192) = *(_QWORD *)(a2 + v9 + 192);
  v14 = *(_OWORD *)(a2 + v9 + 176);
  *(_OWORD *)(v10 + 160) = *(_OWORD *)(a2 + v9 + 160);
  *(_OWORD *)(v10 + 176) = v14;
  v15 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  v7(v10 + *(int *)(v15 + 36), v11 + *(int *)(v15 + 36), v6);
  v16 = v8[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = v8[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  v24 = v8[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
  v28 = v8[9];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  v32 = *(int *)(a3 + 20);
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  return a1;
}

uint64_t sub_23F421E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;

  v6 = sub_23F61B32C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for EchoTypeIdentifierRenderer(0);
  v9 = v8[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v9);
  v12 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v12;
  *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v10 + 40);
  *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
  *(_OWORD *)(v10 + 56) = *(_OWORD *)(v11 + 56);
  *(_QWORD *)(v10 + 72) = *(_QWORD *)(v11 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v10 + 80);
  v13 = *(_OWORD *)(v11 + 96);
  *(_OWORD *)(v10 + 80) = *(_OWORD *)(v11 + 80);
  *(_OWORD *)(v10 + 96) = v13;
  *(_QWORD *)(v10 + 112) = *(_QWORD *)(v11 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v10 + 120);
  *(_OWORD *)(v10 + 120) = *(_OWORD *)(v11 + 120);
  *(_OWORD *)(v10 + 136) = *(_OWORD *)(v11 + 136);
  *(_QWORD *)(v10 + 152) = *(_QWORD *)(v11 + 152);
  if (*(_QWORD *)(v10 + 184))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v10 + 160);
  v14 = *(_OWORD *)(v11 + 176);
  *(_OWORD *)(v10 + 160) = *(_OWORD *)(v11 + 160);
  *(_OWORD *)(v10 + 176) = v14;
  *(_QWORD *)(v10 + 192) = *(_QWORD *)(v11 + 192);
  v15 = type metadata accessor for BravoTypeIdentifierRenderer(0);
  v7(v10 + *(int *)(v15 + 36), v11 + *(int *)(v15 + 36), v6);
  v16 = v8[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v16);
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = v8[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v20);
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  v24 = v8[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v24);
  v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
  v28 = v8[9];
  v29 = a1 + v28;
  v30 = a2 + v28;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v28);
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  v32 = *(int *)(a3 + 20);
  v33 = a1 + v32;
  if (*(_QWORD *)(a1 + v32 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v32);
  v34 = *(_OWORD *)(a2 + v32 + 16);
  *(_OWORD *)v33 = *(_OWORD *)(a2 + v32);
  *(_OWORD *)(v33 + 16) = v34;
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(a2 + v32 + 32);
  return a1;
}

uint64_t sub_23F422058()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F422064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EchoTypeIdentifierRenderer(0);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    sub_23F3B1A44(a1, a2, v4);
  else
    sub_23F362B80();
}

uint64_t sub_23F4220DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4220E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;

  type metadata accessor for EchoTypeIdentifierRenderer(0);
  sub_23F3F9C68();
  if (v8)
  {
    sub_23F38370C(a1, a2, a2, v7);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = a2;
    sub_23F362B80();
  }
}

uint64_t type metadata accessor for EchoTypeInstanceRenderer(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E73870);
}

uint64_t sub_23F42215C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for EchoTypeIdentifierRenderer(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F4221CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v6 = *(_OWORD *)(a2 + 176);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  v10 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F422280()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F42228C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F3F9B80(*(_QWORD *)(a1 + 24));
    sub_23F362B80();
  }
  else
  {
    v6 = sub_23F384B34();
    sub_23F3B1A44(a1 + *(int *)(a3 + 36), a2, v6);
  }
}

uint64_t sub_23F4222E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4222EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
    sub_23F362B80();
  }
  else
  {
    v7 = sub_23F384B34();
    sub_23F38370C(a1 + *(int *)(a4 + 36), a2, a2, v7);
  }
}

uint64_t type metadata accessor for EchoRenderableToolDefinitionPromptRenderer(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E73900);
}

uint64_t sub_23F422358()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23F4223D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  type metadata accessor for BravoRenderableToolDefinitionPromptRenderer(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F382FC4(v0, (uint64_t)v3);
  sub_23F382FC4(v0 + 40, (uint64_t)(v3 + 40));
  sub_23F382FC4(v0 + 80, (uint64_t)(v3 + 80));
  sub_23F382FC4(v0 + 120, (uint64_t)(v3 + 120));
  sub_23F382FC4(v0 + 160, (uint64_t)(v3 + 160));
  v4 = v0 + *(int *)(type metadata accessor for EchoRenderableToolDefinitionPromptRenderer(0) + 36);
  sub_23F384B34();
  v5 = sub_23F4244FC();
  v6(v5, v4);
  sub_23F3D10B0();
  sub_23F424518();
  sub_23F383568();
}

void sub_23F4224C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  _QWORD v42[10];

  sub_23F362ABC();
  v40 = v3;
  *(_QWORD *)&v41 = v2;
  *(_QWORD *)&v39 = v4;
  v6 = v5;
  v7 = sub_23F61B4F4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v11 = v10 - v9;
  v12 = sub_23F618C68();
  v34 = *(_QWORD *)(v12 - 8);
  v35 = v12;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  sub_23F3B13F0(v14);
  v36 = sub_23F61BCE0();
  v15 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  sub_23F38F964();
  v18 = v17 - v16;
  v19 = sub_23F61B5D8();
  v37 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)&v38 = v19;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F3B1630();
  type metadata accessor for RenderableTool();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F38F964();
  v24 = v23 - v22;
  sub_23F38F530(v6, v23 - v22, v25);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23F35D2E8(&qword_256E708E0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v24, v7);
    sub_23F3B1424(v0 + 20, v0[23]);
    sub_23F3D1978();
    sub_23F3837B0();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
LABEL_5:
    sub_23F362948();
    return;
  }
  v26 = sub_23F618BB4();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 88))(v24, v26);
  if (v28 == *MEMORY[0x24BE57550])
  {
LABEL_4:
    sub_23F424364();
    sub_23F3D9A58();
    v29 = sub_23F424374();
    v30(v29);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v24);
    goto LABEL_5;
  }
  if (v28 == *MEMORY[0x24BE57558])
  {
    sub_23F424364();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v18, v24, v36);
    v31 = v0[8];
    v27 = v0[9];
    sub_23F3B1424(v0 + 5, v31);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(v27 + 8))(v42, v18, v31, v27);
    sub_23F3D9978();
    v32 = sub_23F61BFEC();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v36);
LABEL_8:
    *(_OWORD *)v40 = v41;
    *(_OWORD *)(v40 + 16) = v39;
    *(_OWORD *)(v40 + 32) = v38;
    *(_QWORD *)(v40 + 48) = v0;
    *(_QWORD *)(v40 + 56) = v27;
    *(_BYTE *)(v40 + 64) = v24;
    *(_QWORD *)(v40 + 72) = v32;
    goto LABEL_5;
  }
  if (v28 == *MEMORY[0x24BE57548])
  {
    sub_23F424364();
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v37 + 32))(v1, v24, v38);
    sub_23F3B1424(v0 + 10, v0[13]);
    sub_23F3A2220(v1, v39, v41);
    (*(void (**)(uint64_t, _QWORD))(v37 + 8))(v1, v38);
    goto LABEL_5;
  }
  if (v28 == *MEMORY[0x24BE57540])
    goto LABEL_4;
  if (v28 == *MEMORY[0x24BE57568])
  {
    sub_23F424364();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v33, v24, v35);
    sub_23F3B1424(v0 + 15, v0[18]);
    sub_23F3D73D4((uint64_t)v42);
    sub_23F3D9978();
    v32 = sub_23F61BFEC();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    goto LABEL_8;
  }
  sub_23F61CC58();
  __break(1u);
}

void sub_23F42288C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for BravoRenderableToolDefinitionPromptRenderer(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F362930();
  sub_23F382FC4(v0, v1);
  sub_23F382FC4(v0 + 40, v1 + 40);
  sub_23F382FC4(v0 + 80, v1 + 80);
  sub_23F382FC4(v0 + 120, v1 + 120);
  sub_23F382FC4(v0 + 160, v1 + 160);
  v4 = v0 + *(int *)(type metadata accessor for EchoRenderableToolDefinitionPromptRenderer(0) + 36);
  v5 = v1 + *(int *)(v2 + 36);
  v6 = sub_23F384B34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, v4, v6);
  sub_23F3D14AC();
  sub_23F42432C(v1, type metadata accessor for BravoRenderableToolDefinitionPromptRenderer);
  sub_23F383568();
}

double sub_23F422988@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  sub_23F61BCD4();
  v2 = sub_23F61C1FC();
  v4 = v3;
  sub_23F362984();
  sub_23F617BA0();
  v5 = sub_23F4244F0(MEMORY[0x24BEE4B08], v2);
  sub_23F369004(v5);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 49) = 0u;
  return result;
}

uint64_t sub_23F422A18(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[40];
  uint64_t v4;
  uint64_t v5;

  sub_23F4244A0(a1, (uint64_t)v3);
  sub_23F382FC4(v1 + 40, (uint64_t)&v4);
  sub_23F3D96EC(v1 + 80, (uint64_t)&v5, &qword_256E70D28);
  sub_23F39FC90();
  return sub_23F38F738((uint64_t)v3);
}

uint64_t sub_23F422AF4(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[40];
  uint64_t v4;
  uint64_t v5;

  sub_23F4244A0(a1, (uint64_t)v3);
  sub_23F382FC4(v1 + 40, (uint64_t)&v4);
  sub_23F3D96EC(v1 + 80, (uint64_t)&v5, &qword_256E70D28);
  sub_23F39FC90();
  return sub_23F38F738((uint64_t)v3);
}

void sub_23F422BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64[5];
  _QWORD v65[5];
  uint64_t v66;
  char v67;
  unint64_t v68[5];
  _QWORD v69[5];
  uint64_t v70;

  sub_23F362ABC();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_23F61B5D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3E2718();
  v51 = *(_QWORD *)(v3 + 8);
  v52 = *(_QWORD *)v3;
  v60 = *(_QWORD *)(v3 + 16);
  v61 = *(_QWORD *)(v3 + 24);
  v10 = *(_QWORD *)(v3 + 48);
  v62 = *(_QWORD *)(v3 + 32);
  v63 = *(_QWORD *)(v3 + 40);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(unsigned __int8 *)(v3 + 64);
  sub_23F4205A8(v0, (uint64_t)v68);
  sub_23F4244A8(v1, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  if (v12 != 255)
  {
    v16 = v51;
    v14 = v52;
    v41 = v60;
    sub_23F39B9D8(v52, v51, v60, v61, v62, v63, v10, v11, v12 & 1);
    sub_23F42443C();
    sub_23F420634((uint64_t)v68);
    v42 = v10;
    if ((v12 & 1) != 0)
    {
      v38 = 1;
      v58 = v51;
      v59 = v52;
      v39 = v61;
      v56 = v62;
      v57 = v60;
      v54 = v42;
      v55 = v63;
      v40 = v42;
      goto LABEL_6;
    }
    v45 = v62;
    v44 = v63;
    v46 = v61;
LABEL_9:
    v54 = v42;
    v60 = v41;
    v61 = v46;
    v62 = v45;
    v63 = v44;
    v68[0] = v14;
    v68[1] = v16;
    v68[2] = v41;
    v68[3] = v46;
    v68[4] = v45;
    v69[0] = v44;
    v69[1] = v42;
    v69[2] = v11;
    sub_23F422F84(v68, (uint64_t *)v64);
    sub_23F3B79EC(0xAuLL, 0xE100000000000000, v64[0]);
    v58 = v48;
    v59 = v47;
    v57 = v49;
    sub_23F362984();
    v38 = 0;
    v55 = 0;
    v56 = 0;
    v40 = 0;
    v43 = 0;
    v39 = MEMORY[0x24BEE4B00];
    goto LABEL_10;
  }
  sub_23F382FC4((uint64_t)v68, (uint64_t)v64);
  sub_23F382FC4((uint64_t)v69, (uint64_t)v65);
  sub_23F3D96EC((uint64_t)&v70, (uint64_t)&v66, &qword_256E70D28);
  sub_23F3B1424(v65, v65[3]);
  sub_23F3A2544();
  v14 = v13;
  v16 = v15;
  sub_23F617BA0();
  v17 = sub_23F4244F0(MEMORY[0x24BEE4B08], v14);
  sub_23F369004(v17);
  v19 = v18;
  type metadata accessor for ParameterPromptMap(0);
  sub_23F61BFEC();
  v67 = 0;
  sub_23F38F738((uint64_t)v64);
  sub_23F42443C();
  sub_23F420634((uint64_t)v68);
  v20 = v67;
  v21 = sub_23F4243D4();
  sub_23F39B9D8(v21, v22, v23, v24, v25, v26, v27, v28, v51);
  v29 = sub_23F4243D4();
  sub_23F39BA98(v29, v30, v31, v32, v33, v34, v35, v36, v53);
  sub_23F362984();
  v11 = 0;
  if ((v20 & 1) == 0)
  {
    v42 = 0;
    v44 = 0;
    v45 = 0;
    v46 = 0;
    v41 = v19;
    goto LABEL_9;
  }
  v37 = v19;
  v38 = 1;
  v54 = 0;
  v55 = 0;
  v62 = 0;
  v63 = 0;
  v60 = v37;
  v61 = 0;
  v58 = v16;
  v59 = v14;
  v56 = 0;
  v57 = v37;
  v39 = 0;
  v40 = 0;
LABEL_6:
  v43 = v11;
LABEL_10:
  type metadata accessor for ParameterPromptMap(0);
  v50 = sub_23F61BFEC();
  sub_23F39BA98(v14, v16, v60, v61, v62, v63, v54, v11, v38);
  *(_QWORD *)v7 = v59;
  *(_QWORD *)(v7 + 8) = v58;
  *(_QWORD *)(v7 + 16) = v57;
  *(_QWORD *)(v7 + 24) = v39;
  *(_QWORD *)(v7 + 32) = v56;
  *(_QWORD *)(v7 + 40) = v55;
  *(_QWORD *)(v7 + 48) = v40;
  *(_QWORD *)(v7 + 56) = v43;
  *(_BYTE *)(v7 + 64) = v38;
  *(_QWORD *)(v7 + 72) = v50;
  sub_23F362948();
}

void sub_23F422F10(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _BYTE v5[80];
  uint64_t v6;

  sub_23F4244A0(a1, (uint64_t)v5);
  sub_23F4244C0();
  sub_23F3D96EC(v2 + 80, (uint64_t)&v6, &qword_256E70D28);
  sub_23F3A1BF8(a1, a2);
  sub_23F38F738((uint64_t)v5);
  sub_23F42446C();
}

uint64_t sub_23F422F84@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v21;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  sub_23F35D2E8(&qword_256E6FD50);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61E980;
  v6 = MEMORY[0x24BEE4B08];
  v21 = MEMORY[0x24BEE4B08];
  sub_23F35D2E8(&qword_256E70898);
  sub_23F61C55C();
  sub_23F61C55C();
  sub_23F61C280();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F528350(0, 0xE000000000000000, v21, v2, v3, v4);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  *(_QWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 40) = v10;
  *(_QWORD *)(v5 + 48) = v12;
  sub_23F61C55C();
  sub_23F61C55C();
  sub_23F61C280();
  sub_23F61B584();
  sub_23F617BA0();
  sub_23F61C280();
  swift_bridgeObjectRelease_n();
  sub_23F61C280();
  v13 = sub_23F61C1E4();
  v15 = v14;
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  v16 = sub_23F52481C(v6, 0, 0xE000000000000000, v6, v13, v15);
  sub_23F369004(v16);
  v18 = v17;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + 56) = v13;
  *(_QWORD *)(v5 + 64) = v15;
  *(_QWORD *)(v5 + 72) = v18;
  *a2 = v5;
  return result;
}

void sub_23F4231E4(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[40];
  uint64_t v4;
  uint64_t v5;

  sub_23F4244A0(a1, (uint64_t)v3);
  sub_23F382FC4(v1 + 40, (uint64_t)&v4);
  sub_23F3D96EC(v1 + 80, (uint64_t)&v5, &qword_256E70D28);
  sub_23F3A1BF8(a1, 0);
  sub_23F38F738((uint64_t)v3);
  sub_23F42446C();
}

uint64_t sub_23F423270()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _UNKNOWN **v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v8[5];
  uint64_t v9;
  uint64_t v10[3];
  uint64_t v11;
  _UNKNOWN **v12;
  _BYTE v13[40];

  v11 = sub_23F4243BC();
  v12 = &off_250FD5F38;
  v1 = sub_23F36145C(v10);
  sub_23F424490((uint64_t)v1);
  v2 = v0 + *(int *)(type metadata accessor for EchoTypeInstanceRenderer(0) + 20);
  sub_23F3D96EC(v2, (uint64_t)v13, &qword_256E70CF0);
  v3 = v11;
  v4 = v12;
  v5 = sub_23F35EA9C(v10, v11);
  v8[3] = v3;
  v8[4] = (uint64_t)v4[1];
  v6 = sub_23F36145C(v8);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v6, v5, v3);
  sub_23F3D96EC((uint64_t)v13, (uint64_t)&v9, &qword_256E70CF0);
  sub_23F424428();
  sub_23F3A31EC();
  sub_23F38F808((uint64_t)v8);
  return sub_23F3CD940((uint64_t)v10);
}

#error "23F4234A8: call analysis failed (funcsize=121)"

void sub_23F423550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  os_log_type_t v86;
  _DWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t (*v135)(uint64_t, _QWORD);
  uint64_t v136;
  uint64_t v137;
  void *v138;
  os_log_type_t v139;
  _DWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t);
  uint64_t (*v147)(uint64_t, _QWORD);
  _BYTE v148[16];
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _BYTE *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  int *v163;
  void (*v164)(uint64_t, uint64_t, uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char v186;

  sub_23F362ABC();
  a19 = v23;
  a20 = v24;
  v151 = v25;
  v177 = v26;
  v175 = v27;
  v28 = type metadata accessor for EchoTypeIdentifierRenderer(0);
  sub_23F383E7C(v28, (uint64_t)&a12);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F3B13F0((uint64_t)&v148[-v32]);
  v33 = sub_23F619E98();
  sub_23F383E7C(v33, (uint64_t)&v185);
  v154 = v34;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F3B13F0((uint64_t)&v148[-v37]);
  v38 = sub_23F61B9BC();
  sub_23F383E7C(v38, (uint64_t)&a11);
  v161 = v39;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F36285C();
  sub_23F3B13F0(v41);
  v42 = sub_23F61B9EC();
  v43 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  sub_23F36285C();
  sub_23F3B13F0(v44);
  v45 = sub_23F61BC8C();
  sub_23F383E7C(v45, (uint64_t)&v178);
  v159 = v46;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F36285C();
  v158 = v48;
  v172 = sub_23F35D2E8(&qword_256E70A68);
  v49 = *(_QWORD *)(v172 - 8);
  MEMORY[0x24BDAC7A8](v172);
  sub_23F38F964();
  v52 = (uint64_t *)(v51 - v50);
  v53 = sub_23F61BBD8();
  v54 = *(_QWORD *)(v53 - 8);
  v173 = v53;
  v174 = v54;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F389880();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F35D2E8(&qword_256E70A70);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F362930();
  v58 = sub_23F61B998();
  sub_23F383E7C(v58, (uint64_t)&a15);
  v157 = v59;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v61);
  v155 = &v148[-v62];
  v169 = v20;
  sub_23F61B2FC();
  v171 = v182;
  v170 = sub_23F35EA9C(&v178, v181);
  sub_23F61BBB4();
  swift_getKeyPath();
  v63 = swift_allocBox();
  v176 = v43;
  v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
  v168 = v42;
  v164 = v64;
  v64(v65, v177, v42);
  *v52 = v63;
  v66 = v172;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v49 + 104))(v52, *MEMORY[0x24BEB8F00], v172);
  sub_23F424268();
  sub_23F4242A8();
  sub_23F61B6A4();
  v67 = v173;
  swift_release();
  (*(void (**)(uint64_t *, uint64_t))(v49 + 8))(v52, v66);
  (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v22, v67);
  sub_23F61A018();
  v68 = v156;
  v69 = (uint64_t)v155;
  v70 = v157;
  v71 = v158;
  v72 = v159;
  sub_23F4244CC();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v178);
  v73 = v166;
  if (sub_23F36195C(v21, 1, v166) == 1)
  {
    v74 = v168;
    v75 = v167;
    v76 = v176;
    sub_23F4242EC(v21);
  }
  else
  {
    v125 = v70;
    v126 = v21;
    v127 = v69;
    sub_23F4244A8(v69, v126, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 32));
    sub_23F4244A8(v68, v69, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 16));
    v128 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 88))(v68, v73);
    v74 = v168;
    v75 = v167;
    v76 = v176;
    if (v128 == *MEMORY[0x24BEB9B20])
    {
      (*(void (**)(uint64_t, uint64_t))(v125 + 96))(v68, v73);
      v129 = v127;
      v130 = v71;
      sub_23F3B15C8(v71, v68, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v72 + 32));
      v131 = (_QWORD *)(v169 + v163[6]);
      v132 = v125;
      v133 = v131[3];
      v134 = v131[4];
      sub_23F3B1424(v131, v133);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 16))(v130, v151, v133, v134);
      sub_23F362A28(v130, *(uint64_t (**)(uint64_t, uint64_t))(v72 + 8));
      (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v129, v73);
      goto LABEL_21;
    }
    v146 = *(void (**)(uint64_t, uint64_t))(v125 + 8);
    v146(v127, v73);
    v146(v68, v73);
  }
  v77 = v165;
  v78 = v169;
  v164(v75, v177, v74);
  v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 88))(v75, v74);
  if (v79 == *MEMORY[0x24BEB9D18])
  {
    sub_23F424418();
    v80 = swift_projectBox();
    v81 = v161;
    v82 = v160;
    sub_23F3B15C8(v160, v80, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v161 + 16));
    sub_23F3B1424((_QWORD *)(v78 + v163[7]), *(_QWORD *)(v78 + v163[7] + 24));
    sub_23F3A883C(v82, (uint64_t)&v178);
    if ((v186 & 1) != 0)
    {
      sub_23F362A28(v82, *(uint64_t (**)(uint64_t, uint64_t))(v81 + 8));
      sub_23F3668FC();
LABEL_16:
      sub_23F424450();
      goto LABEL_21;
    }
    v94 = v184;
    v93 = v185;
    v96 = v182;
    v95 = v183;
    v98 = v180;
    v97 = v181;
    v100 = v178;
    v99 = v179;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F39BA98(v100, v99, v98, v97, v96, v95, v94, v93, 0);
    v101 = MEMORY[0x24BEE4B08];
    sub_23F528350(0x207373616C63uLL, 0xE600000000000000, MEMORY[0x24BEE4B08], v100, v99, v98);
    v103 = v102;
    v105 = v104;
    v107 = v106;
    sub_23F384364();
    swift_bridgeObjectRelease();
    v108 = sub_23F3B60F0(v101, 0x456C61626F6C4728, 0xEE0029797469746ELL);
    sub_23F369004(v108);
    sub_23F528350(v103, v105, v107, 0x456C61626F6C4728uLL, 0xEE0029797469746ELL, v109);
    v111 = v110;
    v113 = v112;
    v115 = v114;
    swift_bridgeObjectRelease();
    sub_23F3837B0();
    sub_23F362984();
    (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v160, v162);
    sub_23F3668FC();
    v116 = v175;
    *v175 = v111;
    v116[1] = v113;
    v116[2] = v115;
    goto LABEL_12;
  }
  if (v79 == *MEMORY[0x24BEB9D00])
  {
    sub_23F424418();
    swift_release();
    v83 = v153;
    sub_23F619088();
    v84 = v152;
    sub_23F38F530(v78, v152, type metadata accessor for EchoTypeIdentifierRenderer);
    v85 = (void *)sub_23F619E8C();
    v86 = sub_23F61C61C();
    if (sub_23F3B1604(v86))
    {
      v87 = (_DWORD *)sub_23F366668();
      v178 = sub_23F366668();
      *v87 = 136315138;
      sub_23F38F530(v84, v150, type metadata accessor for EchoTypeIdentifierRenderer);
      v88 = sub_23F4244B0();
      sub_23F4244E4(v88, v89);
      sub_23F4243FC(v90);
      sub_23F384364();
      sub_23F42432C(v84, type metadata accessor for EchoTypeIdentifierRenderer);
      sub_23F3B14F0(&dword_23F35A000, v91, v92, "%s .builtin: Unsupported type in action");
      sub_23F3B16C0();
      sub_23F366530();
    }
    sub_23F42432C(v84, type metadata accessor for EchoTypeIdentifierRenderer);

    sub_23F424480();
    sub_23F4244D8(v83, v135);
    goto LABEL_16;
  }
  if (v79 == *MEMORY[0x24BEB9CF8])
  {
    sub_23F424418();
    sub_23F35EA9C((_QWORD *)(v78 + v163[9]), *(_QWORD *)(v78 + v163[9] + 24));
    sub_23F3A2898();
    v117 = sub_23F61C1D8();
    v119 = v118;
    sub_23F362984();
    v178 = v117;
    v179 = v119;
    sub_23F617BA0();
    sub_23F61C280();
    swift_bridgeObjectRelease();
    v178 = 0;
    v179 = 0xE000000000000000;
    sub_23F61C8E0();
    swift_bridgeObjectRelease();
    v178 = 0x207373616C63;
    v179 = 0xE600000000000000;
    sub_23F61C280();
    sub_23F3837B0();
    sub_23F61C280();
    v120 = v178;
    v121 = v179;
    sub_23F617BA0();
    v122 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v120, v121);
    sub_23F369004(v122);
    v124 = v123;
    sub_23F3668FC();
    v116 = v175;
    *v175 = v120;
    v116[1] = v121;
    v116[2] = v124;
LABEL_12:
    *(_OWORD *)(v116 + 3) = 0u;
    *(_OWORD *)(v116 + 5) = 0u;
    *(_OWORD *)((char *)v116 + 49) = 0u;
    goto LABEL_21;
  }
  sub_23F619088();
  v136 = v78;
  v137 = v149;
  sub_23F38F530(v136, v149, type metadata accessor for EchoTypeIdentifierRenderer);
  v138 = (void *)sub_23F619E8C();
  v139 = sub_23F61C61C();
  if (sub_23F3B1604(v139))
  {
    v140 = (_DWORD *)sub_23F366668();
    v178 = sub_23F366668();
    *v140 = 136315138;
    sub_23F38F530(v137, v150, type metadata accessor for EchoTypeIdentifierRenderer);
    v141 = sub_23F4244B0();
    sub_23F4244E4(v141, v142);
    sub_23F4243FC(v143);
    sub_23F384364();
    sub_23F42432C(v137, type metadata accessor for EchoTypeIdentifierRenderer);
    sub_23F3B14F0(&dword_23F35A000, v144, v145, "%s unknown: Unsupported type in action");
    sub_23F3B16C0();
    sub_23F366530();
  }
  sub_23F42432C(v137, type metadata accessor for EchoTypeIdentifierRenderer);

  sub_23F424480();
  sub_23F4244D8(v77, v147);
  sub_23F424450();
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v74);
LABEL_21:
  sub_23F362948();
}

uint64_t sub_23F42401C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4[5];
  uint64_t v5;

  v4[3] = sub_23F4243BC();
  v4[4] = (uint64_t)&off_250FD5F38;
  v1 = sub_23F36145C(v4);
  sub_23F424490((uint64_t)v1);
  v2 = type metadata accessor for EchoTypeInstanceRenderer(0);
  sub_23F3D96EC(v0 + *(int *)(v2 + 20), (uint64_t)&v5, &qword_256E70CF0);
  sub_23F424428();
  sub_23F3D7204();
  return sub_23F3CD940((uint64_t)v4);
}

#error "23F424170: call analysis failed (funcsize=49)"

#error "23F4241C8: call analysis failed (funcsize=27)"

#error "23F424248: call analysis failed (funcsize=25)"

unint64_t sub_23F424268()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E70A78;
  if (!qword_256E70A78)
  {
    v1 = sub_23F61BBD8();
    result = MEMORY[0x242670A44](MEMORY[0x24BEBA3A0], v1);
    atomic_store(result, (unint64_t *)&qword_256E70A78);
  }
  return result;
}

unint64_t sub_23F4242A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E70A80;
  if (!qword_256E70A80)
  {
    v1 = sub_23F35EB74(&qword_256E70A68);
    result = MEMORY[0x242670A44](MEMORY[0x24BEB8F10], v1);
    atomic_store(result, (unint64_t *)&qword_256E70A80);
  }
  return result;
}

uint64_t sub_23F4242EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E70A70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23F42432C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_23F362928();
}

uint64_t sub_23F424364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v2, v0);
}

uint64_t sub_23F424374()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35EA9C(v0, v0[3]);
  *(_OWORD *)(v2 - 128) = 0u;
  *(_OWORD *)(v2 - 112) = 0u;
  *(_OWORD *)(v2 - 160) = 0u;
  *(_OWORD *)(v2 - 144) = 0u;
  *(_BYTE *)(v2 - 96) = -1;
  return v1;
}

uint64_t sub_23F4243BC()
{
  return type metadata accessor for EchoTypeIdentifierRenderer(0);
}

uint64_t sub_23F4243D4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4243FC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F424418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v2, v1);
}

uint64_t sub_23F424428()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F42443C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 56) + 8))(v2, v1);
}

double sub_23F424450()
{
  uint64_t v0;
  double result;
  uint64_t v2;

  result = 0.0;
  v2 = *(_QWORD *)(v0 - 216);
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_BYTE *)(v2 + 64) = 1;
  return result;
}

void sub_23F424490(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_23F38F530(v1, a1, v2);
}

void sub_23F4244A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F382FC4(v2, a2);
}

uint64_t sub_23F4244A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F4244B0()
{
  return sub_23F61C16C();
}

void sub_23F4244C0()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F382FC4(v0 + 40, v1 + 40);
}

uint64_t sub_23F4244CC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t sub_23F4244D8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 384));
}

void sub_23F4244E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 184));
}

uint64_t sub_23F4244F0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  return sub_23F3B60F0(a1, a2, v2);
}

uint64_t sub_23F4244FC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F424510()
{
  return type metadata accessor for BravoTypeIdentifierRenderer(0);
}

void sub_23F424518()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_23F42432C(v1, v0);
}

uint64_t sub_23F424524()
{
  uint64_t result;

  sub_23F61AB40();
  result = sub_23F61AB34();
  qword_256E7FE80 = result;
  return result;
}

BOOL sub_23F42455C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v14;

  v2 = sub_23F61B9EC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v14 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v14 - v7, a1, v2);
  if (sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88)) == *MEMORY[0x24BEB9D18])
  {
    v9(v6, (uint64_t)v8, v2);
    (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
    v10 = sub_23F61B9BC();
    v11 = swift_projectBox();
    v12 = (*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 88))(v11, v10) == *MEMORY[0x24BEB9CB8];
    swift_release();
  }
  else
  {
    v12 = 0;
  }
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  return v12;
}

uint64_t sub_23F424688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  v5 = sub_23F61BADC();
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = sub_23F366578();
  v6 = sub_23F61B95C();
  v4[17] = v6;
  v4[18] = *(_QWORD *)(v6 - 8);
  v4[19] = sub_23F366578();
  v7 = sub_23F617840();
  v4[20] = v7;
  v4[21] = *(_QWORD *)(v7 - 8);
  v4[22] = sub_23F366578();
  v8 = sub_23F617828();
  v4[23] = v8;
  v4[24] = *(_QWORD *)(v8 - 8);
  v4[25] = sub_23F366578();
  v9 = sub_23F35D2E8(&qword_256E6FC18);
  v4[26] = v9;
  v4[27] = *(_QWORD *)(v9 - 8);
  v4[28] = sub_23F366578();
  v10 = sub_23F6176B4();
  v4[29] = v10;
  v4[30] = *(_QWORD *)(v10 - 8);
  v4[31] = sub_23F366578();
  v11 = sub_23F61778C();
  v4[32] = v11;
  v4[33] = *(_QWORD *)(v11 - 8);
  v4[34] = sub_23F366578();
  sub_23F617738();
  v4[35] = sub_23F366578();
  v12 = sub_23F617720();
  v4[36] = v12;
  v4[37] = *(_QWORD *)(v12 - 8);
  v4[38] = sub_23F366578();
  v13 = sub_23F6170CC();
  v4[39] = v13;
  v4[40] = *(_QWORD *)(v13 - 8);
  v4[41] = sub_23F3666CC();
  v4[42] = sub_23F3666CC();
  v14 = sub_23F61B9EC();
  v4[43] = v14;
  v4[44] = *(_QWORD *)(v14 - 8);
  v4[45] = sub_23F3666CC();
  v4[46] = sub_23F3666CC();
  v15 = sub_23F619E98();
  v4[47] = v15;
  v4[48] = *(_QWORD *)(v15 - 8);
  v4[49] = sub_23F3666CC();
  v4[50] = sub_23F3666CC();
  v4[51] = sub_23F3666CC();
  v4[52] = sub_23F3666CC();
  v4[53] = sub_23F3666CC();
  v4[54] = sub_23F3666CC();
  v4[55] = sub_23F3666CC();
  return sub_23F3B15DC();
}

void sub_23F42486C()
{
  unint64_t *v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v45;
  BOOL v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  void *v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char v85;
  id v86;
  id v87;
  id v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  _BOOL4 v102;
  uint64_t v103;
  uint64_t v104;
  _DWORD *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t);
  void *v115;
  os_log_type_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  void (*v130)(unint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t *v138;
  uint64_t (*v139)(uint64_t, uint64_t);
  unint64_t v140;
  void (*v141)(uint64_t);
  unsigned int v142;
  unint64_t v143;
  uint64_t v144;
  void (*v145)(unint64_t);
  unint64_t v146;
  void (*v147)(unint64_t, uint64_t, uint64_t);
  unint64_t v148;
  void (*v149)(unint64_t, unint64_t);
  unint64_t v150;
  unint64_t *v151;
  uint64_t v152[2];

  v1 = (void *)v0[55];
  sub_23F3E0278();
  sub_23F3E0254();
  sub_23F619E8C();
  v2 = sub_23F4264F8();
  v151 = v0;
  if (sub_23F366874(v2))
  {
    v4 = v0[11];
    v3 = v0[12];
    v5 = (_DWORD *)sub_23F366668();
    v152[0] = sub_23F366668();
    *v5 = 136315138;
    sub_23F617BA0();
    sub_23F37AE00(v4, v3, v152);
    v0[9] = v6;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    sub_23F426464(&dword_23F35A000, v7, v8, "Running SiriEntityMatcher search with stringQuery: %s");
    sub_23F3B17D4();
    sub_23F366530();
  }
  v9 = v0[48];
  sub_23F384A80();

  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
  v11 = sub_23F384AB4();
  v12 = ((uint64_t (*)(uint64_t))v10)(v11);
  v0[56] = (unint64_t)v10;
  v13 = v0[44];
  sub_23F42650C(v12, v0[10]);
  v14 = sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 88));
  if ((_DWORD)v14 != *MEMORY[0x24BEB9D18])
  {
LABEL_7:
    if (qword_256E6EE68 == -1)
      goto LABEL_8;
    goto LABEL_71;
  }
  v15 = v0[44];
  sub_23F42650C(v14, v0[46]);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 96));
  v16 = sub_23F61B9BC();
  v17 = swift_projectBox();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 88))(v17, v16) != *MEMORY[0x24BEB9CB8])
  {
    swift_release();
    goto LABEL_7;
  }
  v139 = v10;
  v19 = v0[41];
  v18 = v0[42];
  v21 = v0[39];
  v20 = v0[40];
  v23 = v0[34];
  v22 = v0[35];
  v24 = v0[32];
  v25 = v0[33];
  v26 = v0[31];
  v140 = v0[30];
  v143 = v0[29];
  sub_23F61700C();
  (*(void (**)(unint64_t, unint64_t, unint64_t))(v20 + 16))(v19, v18, v21);
  sub_23F61772C();
  (*(void (**)(uint64_t, _QWORD, unint64_t))(v25 + 104))(v23, *MEMORY[0x24BE939D8], v24);
  (*(void (**)(uint64_t, _QWORD, unint64_t))(v140 + 104))(v26, *MEMORY[0x24BE937B0], v143);
  v133 = v23;
  v134 = v26;
  v132 = v22;
  sub_23F617714();
  v27 = sub_23F617690();
  v30 = v27;
  v31 = *(_QWORD *)(v27 + 16);
  v32 = MEMORY[0x24BEE4AF8];
  if (!v31)
  {
    v0 = (unint64_t *)MEMORY[0x24BEE4AF8];
    v33 = v151;
LABEL_29:
    v138 = v33 + 7;
    sub_23F362984();
    v152[0] = v32;
    v48 = v0[2];
    if (v48)
    {
      v49 = v33[27];
      v146 = v33[21];
      v148 = v33[24];
      v50 = (char *)v0 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
      v144 = *(_QWORD *)(v49 + 72);
      v150 = v49;
      v141 = *(void (**)(uint64_t))(v49 + 16);
      sub_23F617BA0();
      do
      {
        v51 = v33[28];
        v52 = v33[26];
        v53 = v33[22];
        v54 = v151[20];
        v55 = sub_23F384AB4();
        v141(v55);
        sub_23F6177E0();
        sub_23F617834();
        v56 = v54;
        v33 = v151;
        (*(void (**)(unint64_t, unint64_t))(v146 + 8))(v53, v56);
        v57 = sub_23F61781C();
        sub_23F42652C(*(uint64_t (**)(uint64_t, uint64_t))(v148 + 8));
        (*(void (**)(unint64_t, unint64_t))(v150 + 8))(v51, v52);
        sub_23F386DC0(v57);
        v50 += v144;
        --v48;
      }
      while (v48);
      sub_23F384A80();
      v58 = v152[0];
    }
    else
    {
      swift_bridgeObjectRelease();
      v58 = MEMORY[0x24BEE4AF8];
    }
    *v138 = v58;
    if (v58 >> 62)
    {
      sub_23F617BA0();
      v60 = sub_23F61CA6C();
      v59 = v60;
      if (v60)
      {
LABEL_36:
        v62 = v33[18];
        v61 = v33[19];
        v64 = v33[16];
        v63 = v33[17];
        v66 = v33[14];
        v65 = (_QWORD *)v33[15];
        MEMORY[0x24266F0AC](v60);
        v67 = sub_23F61B950();
        v149 = *(void (**)(unint64_t, unint64_t))(v62 + 8);
        v149(v61, v63);
        v68 = *MEMORY[0x24BEBA0F8];
        v69 = sub_23F61BAD0();
        v147 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 104);
        v147(v64, v68, v69);
        v142 = *MEMORY[0x24BEB9F88];
        v145 = (void (*)(unint64_t))v65[13];
        v145(v64);
        sub_23F3E3000();
        LOBYTE(v68) = v70;
        sub_23F362984();
        v71 = (char *)v65[1];
        v72 = ((uint64_t (*)(unint64_t, unint64_t))v71)(v64, v66);
        if ((v68 & 1) != 0)
        {
          v152[0] = MEMORY[0x24BEE4AF8];
          if (v59 < 1)
          {
            __break(1u);
          }
          else
          {
            sub_23F4264D8();
            do
            {
              v73 = sub_23F4264CC();
              v74 = sub_23F4264C0(v73);
              if (v74 && (v75 = sub_23F4264EC(v74), (id)v67, v75 == (id)1))
              {
                v67 = (uint64_t)v152;
                sub_23F61C94C();
                sub_23F426478();
                sub_23F426500();
                sub_23F61C958();
              }
              else
              {

              }
              ++v71;
            }
            while ((char *)v59 != v71);
            sub_23F3837B0();
            sub_23F426498();
            *(_QWORD *)v71 = v67;
            if ((v67 & 0x8000000000000000) == 0 && (v67 & 0x4000000000000000) == 0)
            {
              if (!*(_QWORD *)(v67 + 16))
              {
LABEL_47:
                v76 = (void *)v33[53];
                sub_23F3E0278();
                sub_23F619E8C();
                v77 = sub_23F3F0EEC();
                if (sub_23F384458(v77))
                {
                  *(_WORD *)sub_23F366668() = 0;
                  sub_23F3B1B58(&dword_23F35A000, v78, v79, "No candidates had valid email addresses.");
                  sub_23F366530();
                }
LABEL_63:

                sub_23F426488(v92, v93, v94, v95, v96, v97, v98, v99, v132, v133, v134, 0, 0, v135, v136, v137, (uint64_t)v138, v139);
              }
LABEL_65:
              v100 = v33[51];
              sub_23F3E0278();
              sub_23F3E0254();
              sub_23F619E8C();
              v101 = sub_23F4264F8();
              v102 = os_log_type_enabled(v100, v101);
              v103 = v33[51];
              v104 = v33[47];
              if (v102)
              {
                v105 = (_DWORD *)sub_23F366668();
                v152[0] = sub_23F366668();
                *v105 = 136315138;
                v106 = sub_23F4262C0();
                v107 = sub_23F617BA0();
                v108 = MEMORY[0x24266F8F8](v107, v106);
                v110 = v109;
                swift_bridgeObjectRelease();
                sub_23F37AE00(v108, v110, v152);
                v151[8] = v111;
                sub_23F61C790();
                swift_bridgeObjectRelease();
                sub_23F384A80();
                sub_23F4264A8(&dword_23F35A000, v100, v101, "UnifiedCandidateGenerator results: %s");
                sub_23F3B17D4();
                sub_23F366530();
              }
              sub_23F384A80();

              v139(v103, v104);
              v112 = v33[37];
              swift_beginAccess();
              sub_23F4259D0(v33[7]);
              swift_bridgeObjectRelease();
              sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v112 + 8));
              v113 = sub_23F384AB4();
              v114(v113);
              goto LABEL_78;
            }
          }
          swift_retain();
          sub_23F61CA6C();
          sub_23F4264B4();
          if (v65)
            goto LABEL_65;
          goto LABEL_47;
        }
        v80 = v33[19];
        v81 = (void *)v33[16];
        v82 = v33[17];
        v83 = v33[14];
        MEMORY[0x24266F0AC](v72);
        v84 = sub_23F61B950();
        v149(v80, v82);
        v147((unint64_t)v81, *MEMORY[0x24BEBA100], v69);
        ((void (*)(void *, _QWORD, unint64_t))v145)(v81, v142, v83);
        sub_23F3E3000();
        LOBYTE(v80) = v85;
        sub_23F362984();
        ((void (*)(void *, unint64_t))v71)(v81, v83);
        if ((v80 & 1) == 0)
        {
          sub_23F3837B0();
          v33 = v151;
          goto LABEL_65;
        }
        v152[0] = MEMORY[0x24BEE4AF8];
        if (v59 < 1)
        {
          __break(1u);
        }
        else
        {
          sub_23F4264D8();
          do
          {
            v86 = sub_23F4264CC();
            v87 = sub_23F4264C0(v86);
            if (v87 && (v88 = sub_23F4264EC(v87), (id)v84, v88 == (id)2))
            {
              v84 = (uint64_t)v152;
              sub_23F61C94C();
              sub_23F426478();
              sub_23F426500();
              sub_23F61C958();
            }
            else
            {

            }
            ++v71;
          }
          while ((char *)v59 != v71);
          sub_23F3837B0();
          sub_23F426498();
          *(_QWORD *)v71 = v84;
          if ((v84 & 0x8000000000000000) == 0 && (v84 & 0x4000000000000000) == 0)
          {
            if (*(_QWORD *)(v84 + 16))
              goto LABEL_65;
LABEL_61:
            v76 = (void *)v33[52];
            sub_23F3E0278();
            sub_23F619E8C();
            v89 = sub_23F3F0EEC();
            if (sub_23F384458(v89))
            {
              *(_WORD *)sub_23F366668() = 0;
              sub_23F3B1B58(&dword_23F35A000, v90, v91, "No candidates had valid phone numbers.");
              sub_23F366530();
            }
            goto LABEL_63;
          }
        }
        swift_retain();
        sub_23F61CA6C();
        sub_23F4264B4();
        if (v81)
          goto LABEL_65;
        goto LABEL_61;
      }
    }
    else
    {
      v59 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
      v60 = sub_23F617BA0();
      if (v59)
        goto LABEL_36;
    }
    v115 = (void *)v33[54];
    sub_23F384A80();
    sub_23F3E0278();
    sub_23F619E8C();
    v116 = sub_23F3F0EEC();
    if (sub_23F384458(v116))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F3B1B58(&dword_23F35A000, v117, v118, "UnifiedCandidateGenerator found no candidates");
      sub_23F366530();
    }
    v119 = v33[40];
    v120 = v33[37];

    sub_23F426488(v121, v122, v123, v124, v125, v126, v127, v128, v132, v133, v134, 0, 0, v135, v136, v137, (uint64_t)v138, v139);
    sub_23F42652C(*(uint64_t (**)(uint64_t, uint64_t))(v120 + 8));
    sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v119 + 8));
LABEL_78:
    swift_release();
    v129 = v33[46];
    sub_23F426408();
    v130(v129);
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23F3D99EC();
    __asm { BR              X1 }
  }
  v33 = v0;
  v34 = v0[27];
  sub_23F617BA0();
  v35 = 0;
  v0 = (unint64_t *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v36 = *(_QWORD *)(v30 + 8 * v35 + 32);
    v37 = *(_QWORD *)(v36 + 16);
    v38 = v0[2];
    if (__OFADD__(v38, v37))
    {
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      swift_once();
LABEL_8:
      v28 = (_QWORD *)swift_task_alloc();
      v0[57] = (unint64_t)v28;
      *v28 = v0;
      v28[1] = sub_23F4255A0;
      sub_23F3D99EC();
      __asm { BR              X2 }
    }
    sub_23F617BA0();
    if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t)(v38 + v37) > (uint64_t)(v0[3] >> 1))
    {
      sub_23F377AEC();
      v0 = v39;
    }
    if (!*(_QWORD *)(v36 + 16))
    {
      if (v37)
        goto LABEL_69;
      goto LABEL_26;
    }
    v40 = v0[2];
    if ((uint64_t)((v0[3] >> 1) - v40) < v37)
      goto LABEL_70;
    v41 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    v42 = *(_QWORD *)(v34 + 72);
    v43 = (char *)v0 + v41 + v42 * v40;
    if (v36 + v41 < (unint64_t)&v43[v42 * v37] && (unint64_t)v43 < v36 + v41 + v42 * v37)
      goto LABEL_73;
    swift_arrayInitWithCopy();
    if (!v37)
      goto LABEL_26;
    v45 = v0[2];
    v46 = __OFADD__(v45, v37);
    v47 = v45 + v37;
    if (v46)
      break;
    v0[2] = v47;
LABEL_26:
    sub_23F362D08();
    if (v31 == ++v35)
    {
      sub_23F362984();
      v32 = MEMORY[0x24BEE4AF8];
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_73:
  sub_23F61CA9C();
  sub_23F3D99EC();
}

uint64_t sub_23F4255A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 464) = a1;
  *(_QWORD *)(v3 + 472) = v1;
  swift_task_dealloc();
  return sub_23F3B15DC();
}

uint64_t sub_23F425604()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  sub_23F619148();
  sub_23F617BA0();
  v1 = sub_23F619E8C();
  v2 = sub_23F61C61C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 464);
    *(_DWORD *)sub_23F366668() = 134217984;
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v3 + 16);
    sub_23F61C790();
    sub_23F362D08();
    sub_23F4264A8(&dword_23F35A000, v1, v2, "Found %ld matches");
    sub_23F366530();
  }
  swift_bridgeObjectRelease();

  v4 = *(void **)(v0 + 392);
  (*(void (**)(_QWORD, _QWORD))(v0 + 448))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 376));
  sub_23F619148();
  sub_23F3E0254();
  v5 = v4;
  sub_23F619E8C();
  v6 = sub_23F4264F8();
  v7 = sub_23F366874(v6);
  v8 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
  v9 = *(_QWORD *)(v0 + 392);
  v10 = *(_QWORD *)(v0 + 376);
  if (v7)
  {
    v11 = (_DWORD *)sub_23F366668();
    sub_23F366668();
    *v11 = 136315138;
    v12 = sub_23F618D88();
    v13 = sub_23F617BA0();
    MEMORY[0x24266F8F8](v13, v12);
    swift_bridgeObjectRelease();
    v14 = sub_23F384AB4();
    sub_23F37AE00(v14, v15, v16);
    *(_QWORD *)(v0 + 40) = v17;
    sub_23F61C790();
    sub_23F362D08();
    sub_23F384A80();
    sub_23F426464(&dword_23F35A000, v18, v19, "Siri Entity Matcher results: %s");
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F384A80();

  v8(v9, v10);
  v20 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(swift_task_alloc() + 16) = v20;
  sub_23F36F470();
  v23 = v21;
  sub_23F362984();
  sub_23F3666DC();
  sub_23F4263B4();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v23);
}

uint64_t sub_23F425904()
{
  uint64_t v0;

  sub_23F4263B4();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23F4259D0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;

  v2 = sub_23F617D08();
  MEMORY[0x24BDAC7A8](v2);
  v42 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F61B3A4();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B3EC();
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61B92C();
  v35 = *(_QWORD *)(v9 - 8);
  v36 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = sub_23F61B404();
  v12 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    sub_23F617BA0();
    v15 = sub_23F61CA6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v15)
  {
    v43 = MEMORY[0x24BEE4AF8];
    sub_23F37BDF4();
    if (v15 < 0)
    {
      __break(1u);
    }
    else
    {
      v16 = 0;
      v17 = v43;
      v31 = a1 & 0xC000000000000001;
      v30 = *MEMORY[0x24BEB9950];
      v29 = *MEMORY[0x24BEB9A00];
      v28 = *MEMORY[0x24BE56E68];
      v27 = *MEMORY[0x24BE56E00];
      v32 = v15;
      v33 = a1;
      do
      {
        if (v31)
          v18 = (id)MEMORY[0x24266FE14](v16, a1);
        else
          v18 = *(id *)(a1 + 8 * v16 + 32);
        v19 = v18;
        v20 = sub_23F61B8A8();
        v21 = swift_allocBox();
        v23 = v22;
        v24 = v19;
        sub_23F61B860();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v23, v30, v20);
        *v11 = v21;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v35 + 104))(v11, v29, v36);
        (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v8, v28, v38);
        (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v39, v27, v41);
        sub_23F617CC0();
        sub_23F61B3D4();

        v43 = v17;
        v25 = *(_QWORD *)(v17 + 16);
        if (v25 >= *(_QWORD *)(v17 + 24) >> 1)
        {
          sub_23F37BDF4();
          v17 = v43;
        }
        ++v16;
        *(_QWORD *)(v17 + 16) = v25 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v25, v14, v34);
        a1 = v33;
      }
      while (v32 != v16);
    }
  }
}

uint64_t sub_23F425D3C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a1;
  v30 = a2;
  v2 = sub_23F617D08();
  MEMORY[0x24BDAC7A8](v2);
  v28 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F61B3EC();
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v27 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B9EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F61B92C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v25 - v18;
  sub_23F618D64();
  if (sub_23F36195C((uint64_t)v12, 1, v13) == 1)
  {
    sub_23F4262FC((uint64_t)v12);
LABEL_6:
    v22 = 1;
    v21 = v30;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
  sub_23F61B8CC();
  v20 = sub_23F61B9D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v20 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v27, *MEMORY[0x24BE56E68], v26);
  sub_23F617CC0();
  v21 = v30;
  sub_23F61B3C8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  v22 = 0;
LABEL_7:
  v23 = sub_23F61B404();
  return sub_23F36196C(v21, v22, 1, v23);
}

uint64_t sub_23F425FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime31EntityMatcherCandidateGenerator_parameter;
  v2 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23F42602C()
{
  return type metadata accessor for EntityMatcherCandidateGenerator();
}

uint64_t type metadata accessor for EntityMatcherCandidateGenerator()
{
  uint64_t result;

  result = qword_256E73970;
  if (!qword_256E73970)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F42606C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61BBA8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23F4260D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F426140;
  return sub_23F424688(a1, a2, a3);
}

uint64_t sub_23F426140(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

BOOL sub_23F426194(uint64_t a1)
{
  return sub_23F42455C(a1);
}

void sub_23F4261AC()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;

  v1 = sub_23F426450();
  v2 = (_QWORD *)sub_23F426518((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_23F42623C(v2, v3, v4);
  sub_23F362B80();
}

void sub_23F4261E0()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;

  v1 = sub_23F426450();
  v2 = (_QWORD *)sub_23F426518((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_23F42633C(v2, v3, v4);
  sub_23F362B80();
}

void sub_23F426210(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_23F42623C(_QWORD *a1, unint64_t a2, uint64_t a3))()
{
  unint64_t v6;
  id v7;

  v6 = a3 & 0xC000000000000001;
  sub_23F3753DC(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6)
    v7 = (id)MEMORY[0x24266FE14](a2, a3);
  else
    v7 = *(id *)(a3 + 8 * a2 + 32);
  *a1 = v7;
  return sub_23F4263B0;
}

uint64_t sub_23F4262A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F425D3C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23F4262C0()
{
  unint64_t result;

  result = qword_256E70FB0;
  if (!qword_256E70FB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E70FB0);
  }
  return result;
}

uint64_t sub_23F4262FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E701F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void (*sub_23F42633C(_QWORD *a1, unint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v6;
  id v7;

  v6 = a3 & 0xC000000000000001;
  sub_23F3753DC(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6)
    v7 = (id)MEMORY[0x24266FE14](a2, a3);
  else
    v7 = *(id *)(a3 + 8 * a2 + 32);
  *a1 = v7;
  return sub_23F4263A8;
}

void sub_23F4263A8(id *a1)
{

}

uint64_t sub_23F4263B4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 352) + 8))(v1, *(_QWORD *)(v0 + 344));
}

void sub_23F426408()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = *(_QWORD *)(v0 + 128);
}

void *sub_23F426450()
{
  return malloc(0x28uLL);
}

void sub_23F426464(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t sub_23F426478()
{
  return sub_23F61C970();
}

uint64_t sub_23F426488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t (*a18)(uint64_t, uint64_t))
{
  uint64_t v18;
  uint64_t v19;

  return a18(v18, v19);
}

uint64_t sub_23F426498()
{
  return swift_bridgeObjectRelease();
}

void sub_23F4264A8(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_23F4264B4()
{
  return swift_release();
}

id sub_23F4264C0(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 2103));
}

id sub_23F4264CC()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v1 + 8 * v0 + 32);
}

id sub_23F4264EC(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 72));
}

uint64_t sub_23F4264F8()
{
  return sub_23F61C640();
}

uint64_t sub_23F426500()
{
  return sub_23F61C97C();
}

uint64_t sub_23F42650C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v3, a2, v2);
}

uint64_t sub_23F426518(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_23F42652C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F426538@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD, _QWORD, _QWORD);
  BOOL v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t (**v48)(uint64_t, uint64_t);
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint8_t *v58;
  void (*v59)(uint8_t *, char *, uint64_t);
  _QWORD v60[2];
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint8_t *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;

  v68 = sub_23F61B7AC();
  v72 = *(char **)(v68 - 8);
  sub_23F362850();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v64 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v67 = (char *)v60 - v7;
  v8 = sub_23F619E98();
  v70 = *(_QWORD *)(v8 - 8);
  v71 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v69 = v10;
  sub_23F35D2E8(&qword_256E70CE8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F61BC5C();
  v65 = *(_QWORD *)(v14 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F36285C();
  v66 = v16;
  sub_23F35D2E8(qword_256E73A08);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (_QWORD *)((char *)v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_23F35D2E8(&qword_256E6FE48);
  sub_23F362850();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (_QWORD *)((char *)v60 - v26);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (_QWORD *)((char *)v60 - v28);
  v30 = *(_QWORD *)(sub_23F61B770() + 16);
  swift_bridgeObjectRelease();
  if (v30 == 1)
  {
    sub_23F61B770();
    sub_23F36FF18();
    swift_bridgeObjectRelease();
    if (sub_23F36195C((uint64_t)v19, 1, v20) == 1)
    {
      sub_23F3CFCB0((uint64_t)v19, qword_256E73A08);
    }
    else
    {
      v60[0] = v24;
      v31 = *(int *)(v20 + 48);
      v32 = (char *)v29 + v31;
      v62 = (uint64_t *)((char *)v19 + v31);
      v63 = a2;
      v34 = *v19;
      v33 = v19[1];
      *v29 = *v19;
      v29[1] = v33;
      v35 = sub_23F61B92C();
      v36 = *(_QWORD *)(v35 - 8);
      v60[1] = v32;
      v61 = v36;
      v37 = (void (*)(_QWORD, _QWORD, _QWORD))v62;
      v62 = *(_QWORD **)(v36 + 32);
      ((void (*)(char *, _QWORD, uint64_t))v62)(v32, v37, v35);
      v38 = v34 == 0x65756C6176 && v33 == 0xE500000000000000;
      if (v38 || (sub_23F61CC64() & 1) != 0)
      {
        v39 = *(int *)(v20 + 48);
        v40 = v63;
        v41 = (uint64_t)v27 + v39;
        v71 = (uint64_t)v63 + v39;
        v72 = (char *)v27 + v39;
        *v27 = v34;
        v27[1] = v33;
        v42 = v61;
        sub_23F4270BC(v41);
        *v40 = v34;
        v40[1] = v33;
        v43 = *(int *)(v20 + 48);
        v44 = v60[0];
        v45 = v60[0] + v43;
        *(_QWORD *)v60[0] = v34;
        *(_QWORD *)(v44 + 8) = v33;
        sub_23F4270BC(v44 + v43);
        swift_bridgeObjectRetain_n();
        sub_23F3CFCB0((uint64_t)v29, &qword_256E6FE48);
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t, uint64_t))v62)(v71, v45, v35);
        sub_23F4270C8();
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v72, v35);
      }
      sub_23F3CFCB0((uint64_t)v29, &qword_256E6FE48);
      a2 = v63;
    }
  }
  sub_23F61B77C();
  if (sub_23F36195C((uint64_t)v13, 1, v14) == 1)
  {
    sub_23F3CFCB0((uint64_t)v13, &qword_256E70CE8);
    v47 = v69;
    sub_23F619124();
    v48 = (uint64_t (**)(uint64_t, uint64_t))v72;
    v49 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v72 + 2);
    v50 = v67;
    v51 = v68;
    v49(v67, a1, v68);
    v52 = sub_23F619E8C();
    v53 = sub_23F61C61C();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      v74 = swift_slowAlloc();
      v63 = a2;
      *(_DWORD *)v54 = 136315138;
      v66 = v54 + 4;
      v49(v64, (uint64_t)v50, v51);
      v55 = sub_23F61C16C();
      sub_23F37AE00(v55, v56, &v74);
      v73 = v57;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      sub_23F4270D0(*((uint64_t (**)(uint64_t, uint64_t))v72 + 1));
      _os_log_impl(&dword_23F35A000, v52, v53, "Entity %s does not have a display representation", v54, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }
    sub_23F4270D0(v48[1]);

    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v47, v71);
    sub_23F4270C8();
  }
  else
  {
    v58 = v66;
    v59 = *(void (**)(uint8_t *, char *, uint64_t))(v65 + 32);
    v59(v66, v13, v14);
    v59((uint8_t *)a2, (char *)v58, v14);
    sub_23F4270C8();
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for EntitySalientContent()
{
  uint64_t result;

  result = qword_256E73A80;
  if (!qword_256E73A80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_23F426AB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      sub_23F617BA0();
      v11 = *(int *)(sub_23F35D2E8(&qword_256E6FE48) + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23F61B92C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v8 = sub_23F61BC5C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F426BC4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    a1 += *(int *)(sub_23F35D2E8(&qword_256E6FE48) + 48);
    v3 = sub_23F61B92C();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_23F61BC5C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

_QWORD *sub_23F426C3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    sub_23F617BA0();
    v9 = *(int *)(sub_23F35D2E8(&qword_256E6FE48) + 48);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23F61B92C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = sub_23F61BC5C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23F426D20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_23F426E1C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_23F617BA0();
      v8 = *(int *)(sub_23F35D2E8(&qword_256E6FE48) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23F61B92C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = sub_23F61BC5C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F426E1C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EntitySalientContent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_23F426E58(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v8 = *(int *)(sub_23F35D2E8(&qword_256E6FE48) + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F61B92C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = sub_23F61BC5C();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_23F426F38(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_23F426E1C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v8 = *(int *)(sub_23F35D2E8(&qword_256E6FE48) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23F61B92C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = sub_23F61BC5C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F427028()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  _QWORD v3[6];

  result = sub_23F61BC5C();
  if (v1 <= 0x3F)
  {
    v3[4] = *(_QWORD *)(result - 8) + 64;
    result = sub_23F61B92C();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v3[5] = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23F4270BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_23F4270C8()
{
  return type metadata accessor for EntitySalientContent();
}

uint64_t sub_23F4270D0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F4270DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  uint64_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v94 = a1;
  v2 = type metadata accessor for EnumResolver();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3834D0();
  v98 = v4;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v96 = (char *)&v85 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v95 = (char *)&v85 - v8;
  v102 = sub_23F619E98();
  v100 = *(_QWORD *)(v102 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3834D0();
  v99 = v10;
  MEMORY[0x24BDAC7A8](v11);
  v97 = (char *)&v85 - v12;
  sub_23F35D2E8(&qword_256E70CE8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F38F964();
  v93 = v15 - v14;
  v16 = sub_23F61B9EC();
  v91 = *(_QWORD *)(v16 - 8);
  v92 = v16;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F38F964();
  v20 = v19 - v18;
  v101 = sub_23F61B998();
  v21 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  sub_23F38F964();
  v24 = v23 - v22;
  v25 = sub_23F61BC8C();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  sub_23F38F964();
  v29 = v28 - v27;
  v30 = v103;
  result = sub_23F61B344();
  if (!v30)
  {
    v86 = v20;
    v87 = v2;
    v88 = v29;
    v89 = v26;
    v90 = v25;
    v103 = v1;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v21 + 88))(v24, v101) == *MEMORY[0x24BEB9B20])
    {
      v99 = 0;
      sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 96));
      v32 = v88;
      v33 = v89;
      v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v88, v24, v90);
      v35 = MEMORY[0x24266F190](v34);
      v36 = *(_QWORD *)(v35 + 16);
      if (v36)
      {
        v37 = *(_QWORD *)(sub_23F61BD10() - 8);
        v38 = v35 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
        v39 = (uint64_t *)(v103 + *(int *)(v87 + 20));
        v40 = *v39;
        v41 = v39[1];
        v42 = *(_QWORD *)(v37 + 72);
        while (sub_23F61BD04() != v40 || v43 != v41)
        {
          v45 = sub_23F61CC64();
          swift_bridgeObjectRelease();
          if ((v45 & 1) != 0)
            goto LABEL_20;
          v38 += v42;
          if (!--v36)
          {
            swift_bridgeObjectRelease();
            v46 = v100;
            v47 = v103;
            v33 = v89;
            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease();
LABEL_20:
        swift_bridgeObjectRelease();
        sub_23F61B710();
        v80 = swift_allocBox();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 16))(v86, v103, v92);
        v81 = sub_23F61BC5C();
        sub_23F36196C(v93, 1, 1, v81);
        sub_23F617BA0();
        sub_23F61B6F8();
        (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v32, v90);
        v82 = v94;
        *v94 = v80;
        v83 = *MEMORY[0x24BEB9990];
        v84 = sub_23F61B92C();
        return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 104))(v82, v83, v84);
      }
      else
      {
        sub_23F362984();
        v46 = v100;
        v47 = v103;
LABEL_16:
        v60 = (uint64_t)v96;
        v59 = v97;
        v61 = (uint64_t)v95;
        sub_23F619094();
        sub_23F42786C(v47, v61);
        sub_23F42786C(v47, v60);
        v62 = sub_23F619E8C();
        v63 = sub_23F61C628();
        if (os_log_type_enabled(v62, v63))
        {
          v64 = sub_23F366668();
          v103 = sub_23F366668();
          v105 = v103;
          *(_DWORD *)v64 = 136315394;
          v65 = sub_23F61B9E0();
          sub_23F3ECBE4(v65, v66);
          v104 = v67;
          sub_23F61C790();
          sub_23F362984();
          sub_23F4278B0(v61);
          *(_WORD *)(v64 + 12) = 2080;
          v68 = (uint64_t *)(v60 + *(int *)(v87 + 20));
          v69 = *v68;
          v70 = v68[1];
          sub_23F617BA0();
          sub_23F37AE00(v69, v70, &v105);
          v104 = v71;
          sub_23F61C790();
          swift_bridgeObjectRelease();
          sub_23F4278B0(v60);
          _os_log_impl(&dword_23F35A000, v62, v63, "AppEnum case not found: %s.%s", (uint8_t *)v64, 0x16u);
          swift_arrayDestroy();
          sub_23F366530();
        }
        sub_23F4278B0(v61);
        sub_23F4278B0(v60);

        (*(void (**)(char *, uint64_t))(v46 + 8))(v59, v102);
        v72 = v87;
        type metadata accessor for InterpreterError();
        sub_23F40DF84();
        sub_23F362D64();
        v74 = v73;
        v75 = sub_23F61B9E0();
        v76 = (uint64_t *)(v47 + *(int *)(v72 + 20));
        v77 = *v76;
        v78 = v76[1];
        *v74 = v75;
        v74[1] = v79;
        v74[2] = v77;
        v74[3] = v78;
        swift_storeEnumTagMultiPayload();
        sub_23F617BA0();
        swift_willThrow();
        return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v88, v90);
      }
    }
    else
    {
      sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
      v48 = v99;
      sub_23F619094();
      v49 = v98;
      sub_23F42786C(v103, v98);
      v50 = sub_23F619E8C();
      v51 = sub_23F61C628();
      v52 = os_log_type_enabled(v50, v51);
      v53 = v102;
      if (v52)
      {
        v54 = v49;
        v55 = (uint8_t *)sub_23F366668();
        v105 = sub_23F366668();
        *(_DWORD *)v55 = 136315138;
        v56 = sub_23F61B9C8();
        sub_23F3ECBE4(v56, v57);
        v104 = v58;
        sub_23F61C790();
        sub_23F362984();
        sub_23F4278B0(v54);
        _os_log_impl(&dword_23F35A000, v50, v51, "type is not a valid AppEnum: %s", v55, 0xCu);
        swift_arrayDestroy();
        sub_23F366530();
      }
      sub_23F4278B0(v49);

      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v48, v53);
      type metadata accessor for InterpreterError();
      sub_23F40DF84();
      sub_23F362D64();
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t type metadata accessor for EnumResolver()
{
  uint64_t result;

  result = qword_256E73B10;
  if (!qword_256E73B10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F42786C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EnumResolver();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F4278B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EnumResolver();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_23F4278EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B9EC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = sub_23F61B32C();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    sub_23F617BA0();
    v16(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_23F4279B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23F61B9EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_23F61B32C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_23F427A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F61B9EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = sub_23F61B32C();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  sub_23F617BA0();
  v15(v12, v13, v14);
  return a1;
}

uint64_t sub_23F427AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23F61B9EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_23F427B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B9EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F427BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23F61B9EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_23F427C88()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F427C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = sub_23F427E50();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_23F36195C(v8, v3, v7);
  }
  if ((_DWORD)v3 != 0x7FFFFFFF)
  {
    v7 = sub_23F61B32C();
    v8 = v4 + *(int *)(a3 + 24);
    return sub_23F36195C(v8, v3, v7);
  }
  v9 = *(_QWORD *)(v4 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23F427D28()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F427D34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = sub_23F427E50();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 20) + 8) = (v4 - 1);
      return result;
    }
    v9 = sub_23F61B32C();
    v10 = v5 + *(int *)(a4 + 24);
  }
  return sub_23F36196C(v10, v4, v4, v9);
}

uint64_t sub_23F427DC4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F61B9EC();
  if (v1 <= 0x3F)
  {
    result = sub_23F61B32C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23F427E50()
{
  return sub_23F61B9EC();
}

void Session.Event.init(planText:prompt:sessionState:overrideId:source:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23F362C98();
  v32 = v0;
  v33 = v2;
  v37 = v3;
  v34 = v4;
  v29 = v5;
  v30 = v6;
  v38 = v7;
  v9 = v8;
  v11 = v10;
  v27 = v12;
  v36 = sub_23F428ADC();
  v13 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  sub_23F38F964();
  v16 = v15 - v14;
  v35 = sub_23F428AC4();
  v17 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3D9B88();
  v31 = sub_23F6184E8();
  v18 = *(_QWORD *)(v31 - 8);
  v19 = MEMORY[0x24BDAC7A8](v31);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v26 - v22;
  v28 = v11;
  v24 = v32;
  sub_23F61B0C8();
  if (v24)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F389D0C();
    sub_23F428AEC();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v38, v35);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v1, v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v31);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v37, v36);
    Session.Event.init(planText:prompt:sessionState:fullyResolvedProgram:overrideId:source:)(v28, v9, v29, v33, v1, (uint64_t)v21, v30, v34, v16, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34,
      v35,
      v36);
    sub_23F428AEC();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v38, v35);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v31);
  }
  sub_23F362870();
}

void Session.Event.init(planText:prompt:sessionState:fullyResolvedProgram:overrideId:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  sub_23F362C98();
  v25 = v24;
  v27 = v26;
  v57 = sub_23F6184E8();
  v56 = *(_QWORD *)(v57 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F36285C();
  v29 = sub_23F428ADC();
  v54 = *(_QWORD *)(v29 - 8);
  v55 = v29;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F36285C();
  v49 = v31;
  v32 = sub_23F61B2C0();
  v50 = *(_QWORD *)(v32 - 8);
  v51 = v32;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E702E0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F36285C();
  v52 = v35;
  v36 = sub_23F428AE4();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  sub_23F362838();
  v38 = sub_23F61B2E4();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  sub_23F36285C();
  v53 = v40;
  v59 = sub_23F61A87C();
  v58 = *(_QWORD *)(v59 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F38F964();
  v44 = v43 - v42;
  sub_23F61B134();
  sub_23F61A864();
  sub_23F61A870();
  if (v22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F389D0C();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(a21, v55);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v25, v57);
    v45 = sub_23F428AC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v27, v45);
  }
  else
  {
    sub_23F61B128();
    v46 = sub_23F61B14C();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v21, v36);
    sub_23F3F1328(v46, v52);
    swift_bridgeObjectRelease();
    sub_23F37462C(0xD00000000000007ELL, 0x800000023F635BE0, 41, 0xD00000000000004ALL, 0x800000023F635C60);
    sub_23F4283FC(v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v49, a21, v55);
    sub_23F61B1DC();
    v47 = sub_23F61B1D0();
    sub_23F428ACC(v47, *MEMORY[0x24BE56AC8]);
    sub_23F61B23C();
    sub_23F383CA8(a21, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
    sub_23F428AB0();
    v48 = sub_23F428AC4();
    sub_23F428A9C(v48);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v23, v51);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v53, v38);
  }
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v44, v59);
  sub_23F362870();
}

uint64_t sub_23F4283FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E702E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void Session.Event.init(programStatements:transcript:overrideId:source:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F362C98();
  v22 = v5;
  sub_23F6184E8();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3E2718();
  v7 = sub_23F428ADC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B164C();
  v9 = sub_23F61B2C0();
  v20 = *(_QWORD *)(v9 - 8);
  v21 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E702E0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3D9B88();
  v12 = sub_23F61B2E4();
  v18 = *(_QWORD *)(v12 - 8);
  v19 = v12;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F362838();
  v14 = sub_23F61B14C();
  sub_23F3F1328(v14, v4);
  swift_bridgeObjectRelease();
  sub_23F37462C(0xD00000000000007ELL, 0x800000023F635BE0, 61, 0xD000000000000035, 0x800000023F635CB0);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F383CA8(v22, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    v15 = sub_23F428AE4();
    sub_23F428A9C(v15);
    sub_23F4283FC(v4);
  }
  else
  {
    sub_23F4283FC(v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, v22, v7);
    sub_23F61B1DC();
    v16 = sub_23F61B1D0();
    sub_23F428ACC(v16, *MEMORY[0x24BE56AC8]);
    sub_23F61B23C();
    sub_23F383CA8(v22, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    v17 = sub_23F428AE4();
    sub_23F428A9C(v17);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v2, v21);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v0, v19);
  }
  sub_23F362870();
}

void Session.Event.formingResponse(prompt:response:errorDescription:transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23F362C98();
  v27 = v2;
  v21 = v4;
  v22 = v3;
  v23 = v5;
  v24 = v6;
  v7 = sub_23F61B2C0();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F383EC4();
  v9 = sub_23F61B188();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3B164C();
  v11 = sub_23F61B1A0();
  v12 = *(_QWORD *)(v11 - 8);
  v20 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F61B194();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v1, v14, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v1, *MEMORY[0x24BE569A0], v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v0, v1, v9);
  v15 = *MEMORY[0x24BE56898];
  v16 = sub_23F61B170();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v0, v15, v16);
  v18 = v25;
  v17 = v26;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 104))(v0, *MEMORY[0x24BE56B78], v26);
  sub_23F61B23C();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v0, v17);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  sub_23F362870();
}

uint64_t sub_23F428830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v3 = sub_23F61B2C0();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v7 = v6 - v5;
  v8 = sub_23F617000();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F38F964();
  v12 = v11 - v10;
  v13 = sub_23F61B2E4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3E2718();
  v15 = sub_23F61B14C();
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v23 = a1;
    v29 = v15 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v26 = *MEMORY[0x24BE56AF8];
    a1 = v15;
    v24 = v12;
    v25 = v15;
    while (v16 <= *(_QWORD *)(a1 + 16))
    {
      --v16;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))(v1, v29 + *(_QWORD *)(v14 + 72) * v16, v13);
      sub_23F61B260();
      v17 = sub_23F616FE8();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
      if ((v17 & 1) != 0)
      {
        sub_23F61B2CC();
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v13);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v27 + 88))(v7, v28) == v26)
        {
          swift_bridgeObjectRelease();
          sub_23F428AF8(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 96));
          v21 = sub_23F61B0BC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v23, v7, v21);
          v19 = v23;
          v20 = 0;
          v18 = v21;
          return sub_23F36196C(v19, v20, 1, v18);
        }
        sub_23F428AF8(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
        v12 = v24;
        a1 = v25;
        if (!v16)
          goto LABEL_9;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v13);
        if (!v16)
        {
LABEL_9:
          swift_bridgeObjectRelease();
          a1 = v23;
          goto LABEL_10;
        }
      }
    }
    __break(1u);
  }
  swift_bridgeObjectRelease();
LABEL_10:
  v18 = sub_23F61B0BC();
  v19 = a1;
  v20 = 1;
  return sub_23F36196C(v19, v20, 1, v18);
}

uint64_t sub_23F428A9C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(*(_QWORD *)(v1 - 72), a1);
}

uint64_t sub_23F428AB0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 152) + 8))(*(_QWORD *)(v0 - 168), *(_QWORD *)(v0 - 128));
}

uint64_t sub_23F428AC4()
{
  return sub_23F61B140();
}

uint64_t sub_23F428ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v2, a2, v3);
}

uint64_t sub_23F428ADC()
{
  return sub_23F61B1C4();
}

uint64_t sub_23F428AE4()
{
  return sub_23F61B164();
}

uint64_t sub_23F428AEC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 88), *(_QWORD *)(v1 - 96));
}

uint64_t sub_23F428AF8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_23F428B04()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  sub_23F61A60C();
  sub_23F428E78();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F428E40(v1, v3);
  v2 = sub_23F428E68();
  if (v2 == *MEMORY[0x24BE55750] || v2 == *MEMORY[0x24BE55758] || v2 == *MEMORY[0x24BE55748])
  {
    sub_23F362B80();
  }
  else
  {
    sub_23F428E8C();
    __break(1u);
  }
}

void sub_23F428B9C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  sub_23F61A438();
  sub_23F428E78();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F428E40(v1, v3);
  v2 = sub_23F428E68();
  if (v2 == *MEMORY[0x24BE554D8]
    || v2 == *MEMORY[0x24BE554C0]
    || v2 == *MEMORY[0x24BE55510]
    || v2 == *MEMORY[0x24BE55508]
    || v2 == *MEMORY[0x24BE554A0]
    || v2 == *MEMORY[0x24BE554E0]
    || v2 == *MEMORY[0x24BE55488]
    || v2 == *MEMORY[0x24BE554F8]
    || v2 == *MEMORY[0x24BE55498]
    || v2 == *MEMORY[0x24BE554E8]
    || v2 == *MEMORY[0x24BE554D0]
    || v2 == *MEMORY[0x24BE55500]
    || v2 == *MEMORY[0x24BE554B0]
    || v2 == *MEMORY[0x24BE554A8]
    || v2 == *MEMORY[0x24BE55480]
    || v2 == *MEMORY[0x24BE55490]
    || v2 == *MEMORY[0x24BE554F0]
    || v2 == *MEMORY[0x24BE554C8]
    || v2 == *MEMORY[0x24BE554B8])
  {
    sub_23F362B80();
  }
  else
  {
    sub_23F428E8C();
    __break(1u);
  }
}

uint64_t sub_23F428E40@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v2);
}

uint64_t sub_23F428E68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v0);
}

uint64_t sub_23F428E8C()
{
  return sub_23F61CC58();
}

void sub_23F428E98(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v1;
  v6 = type metadata accessor for TranscriptValueFetcher(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B17BC();
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3B1C68();
  v9 = sub_23F61B164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v3, v4, v9);
  *(_QWORD *)(v3 + *(int *)(v6 + 20)) = *(_QWORD *)(v4
                                                  + *(int *)(type metadata accessor for ExpressionEvaluator(0) + 20));
  sub_23F617BA0();
  sub_23F5F782C(a1, v2);
  sub_23F3663AC(v3, type metadata accessor for TranscriptValueFetcher);
  sub_23F374500(0xD000000000000092, 0x800000023F6349A0, 25, 0x6C6176286C617665, 0xEC000000293A6575);
  sub_23F3625D8((uint64_t)v2, &qword_256E701F0);
  sub_23F362870();
}

uint64_t type metadata accessor for ExpressionEvaluator(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E73C90);
}

void sub_23F428FE8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void (*v2)(uint64_t **, uint64_t);
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t **, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t **, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t **, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  uint64_t v25;
  void (*v26)(uint64_t **, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t *v32;
  void (*v33)(_QWORD, uint64_t);
  void (*v34)(uint64_t **, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  void (*v46)(uint64_t **, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t **, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t **, uint64_t);
  uint64_t v55;
  uint64_t v56;

  v5 = sub_23F61A630();
  v55 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v54 = v7;
  sub_23F39C56C();
  v8 = sub_23F61A42C();
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v46 = v10;
  sub_23F39C56C();
  v11 = sub_23F61A180();
  v50 = *(_QWORD *)(v11 - 8);
  v51 = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v49 = v13;
  sub_23F39C56C();
  v14 = sub_23F61A468();
  v52 = *(_QWORD *)(v14 - 8);
  v53 = v14;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F362930();
  v16 = sub_23F61A570();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3B1C68();
  v18 = sub_23F619FAC();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  sub_23F38F964();
  v22 = v21 - v20;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  v23(v21 - v20, a1, v18);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 88))(v22, v18);
  if (v24 != *MEMORY[0x24BE54D08])
  {
    if (v24 == *MEMORY[0x24BE54D18])
    {
      sub_23F42F418();
      v26 = v54;
      v25 = v55;
      v27 = sub_23F42F468();
      v28 = v56;
      sub_23F38426C(v27, v29, v30);
      v31 = sub_23F42F458();
      sub_23F42C688(v31, v32);
    }
    else
    {
      if (v24 == *MEMORY[0x24BE54D00])
      {
        sub_23F42F418();
        v28 = v53;
        sub_23F38426C((uint64_t)v2, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 32));
        sub_23F42931C(v2, a2);
        v33 = *(void (**)(_QWORD, uint64_t))(v52 + 8);
        v34 = v2;
LABEL_12:
        v33(v34, v28);
        goto LABEL_13;
      }
      if (v24 == *MEMORY[0x24BE54CC8])
      {
        sub_23F42F418();
        v26 = v49;
        v25 = v50;
        v35 = sub_23F42F468();
        v28 = v51;
        sub_23F38426C(v35, v36, v37);
        v38 = sub_23F42F458();
        sub_23F42B628(v38, v39);
      }
      else
      {
        if (v24 != *MEMORY[0x24BE54CF8])
        {
          type metadata accessor for ExpressionEvaluatorError(0);
          sub_23F3612C0(&qword_256E73B60, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621684);
          swift_allocError();
          v23(v45, a1, v18);
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v18);
          goto LABEL_13;
        }
        sub_23F42F418();
        v26 = v46;
        v25 = v47;
        v40 = sub_23F42F468();
        v28 = v48;
        sub_23F38426C(v40, v41, v42);
        v43 = sub_23F42F458();
        sub_23F42BAB4(v43, v44);
      }
    }
    v33 = *(void (**)(_QWORD, uint64_t))(v25 + 8);
    v34 = v26;
    goto LABEL_12;
  }
  sub_23F42F418();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v3, v22, v16);
  sub_23F428E98(v3);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v3, v16);
LABEL_13:
  sub_23F362870();
}

uint64_t type metadata accessor for ExpressionEvaluatorError(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E73C00);
}

uint64_t sub_23F42931C@<X0>(void (*a1)(uint64_t **, uint64_t)@<X0>, uint64_t *a2@<X8>)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  void (*v100)(char *, char *, uint64_t);
  char *v101;
  int v102;
  _QWORD *v103;
  uint64_t v104;
  char *v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t result;
  char *v111;
  char *v112;
  uint64_t *v113;
  uint64_t (*v114)(char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t **v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t, uint64_t);
  int v124;
  double *v125;
  void (*v126)(double *, uint64_t);
  double v127;
  char *v128;
  char *v129;
  uint64_t **v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  double *v135;
  double v136;
  uint64_t v137;
  double *v138;
  uint64_t *v139;
  uint64_t v140;
  void (*v141)(char *, uint64_t);
  char *v142;
  char *v143;
  uint64_t (*v144)(char *, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t **v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t (*v153)(uint64_t, uint64_t);
  int v154;
  double *v155;
  void (*v156)(double *, uint64_t);
  double v157;
  char *v158;
  char *v159;
  uint64_t **v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  double *v164;
  double v165;
  uint64_t v166;
  double *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t *v171;
  uint64_t (*v172)(char *, uint64_t);
  uint64_t v173;
  uint64_t v174;
  uint64_t **v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t (*v180)(uint64_t, uint64_t);
  int v181;
  double *v182;
  void (*v183)(double *, uint64_t);
  double v184;
  char *v185;
  uint64_t v186;
  uint64_t **v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  double *v191;
  uint64_t v192;
  double v193;
  uint64_t v194;
  double *v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(char *, uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void (*v208)(uint64_t, uint64_t);
  uint64_t v209;
  uint64_t v210;
  int v211;
  char *v212;
  uint64_t *v213;
  uint64_t (*v214)(char *, uint64_t);
  int v215;
  char *v216;
  void (*v217)(char *, uint64_t);
  uint64_t v218;
  uint64_t (*v219)(uint64_t, uint64_t);
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  double *v223;
  uint64_t v224;
  uint64_t v225;
  long double v226;
  int v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  double *v231;
  uint64_t v232;
  long double v233;
  uint64_t v234;
  long double *v235;
  long double *v236;
  uint64_t *v237;
  uint64_t v238;
  uint64_t v239;
  void (*v240)(char *, uint64_t);
  uint64_t v241;
  _BYTE *v242;
  _BYTE *v243;
  uint64_t v244;
  char *v245;
  void (*v246)(char *, uint64_t);
  uint64_t (*v247)(void);
  uint64_t v248;
  uint64_t v249;
  BOOL *v250;
  BOOL *v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  char v255;
  uint64_t v256;
  void (*v257)(char *, uint64_t);
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  void (*v271)(char *, char *, uint64_t);
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t v278;
  char v279;
  void (*v280)(uint64_t, char *, uint64_t);
  uint64_t v281;
  char v282;
  double v283;
  uint64_t v284;
  char v285;
  double v286;
  double v287;
  uint64_t v288;
  char *v289;
  uint64_t v290;
  char *v291;
  BOOL v292;
  char v293;
  uint64_t v294;
  void (*v295)(char *, uint64_t);
  char *v296;
  char *v297;
  uint64_t v298;
  char v299;
  double v300;
  uint64_t v301;
  char v302;
  double v303;
  double v304;
  BOOL v305;
  uint64_t v306;
  uint64_t v307;
  void (*v308)(char *, uint64_t);
  uint64_t v309;
  char v310;
  double v311;
  uint64_t v312;
  char v313;
  double v314;
  double v315;
  uint64_t v316;
  uint64_t v317;
  char *v318;
  char *v319;
  uint64_t v320;
  void (*v321)(char *, uint64_t);
  uint64_t v322;
  uint64_t v323;
  char v324;
  double v325;
  uint64_t v326;
  char v327;
  double v328;
  double v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  void (*v336)(uint64_t, char *, uint64_t);
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  char *v344;
  uint64_t (*v345)(char *, uint64_t);
  int v346;
  int v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  void (*v351)(char *, uint64_t, uint64_t);
  char *v352;
  uint64_t (*v353)(char *, uint64_t);
  uint64_t v354;
  uint64_t v355;
  char *v356;
  void (*v357)(char *, uint64_t);
  char *v358;
  uint64_t v359;
  uint64_t v360;
  char *v361;
  uint64_t v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  _BYTE *v366;
  _BYTE *v367;
  uint64_t v368;
  uint64_t v369;
  char *v370;
  uint64_t (*v371)(char *, uint64_t);
  int v372;
  int v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  void (*v377)(char *, uint64_t, uint64_t);
  char *v378;
  uint64_t (*v379)(char *, uint64_t);
  uint64_t v380;
  char *v381;
  void (*v382)(char *, uint64_t);
  char *v383;
  uint64_t v384;
  uint64_t v385;
  char *v386;
  uint64_t v387;
  char *v388;
  _BYTE *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  void (*v397)(uint64_t, char *, uint64_t);
  uint64_t v398;
  char *v399;
  uint64_t v400;
  char *v401;
  char *v402;
  char *v403;
  char *v404;
  char *v405;
  char *v406;
  char *v407;
  char *v408;
  char *v409;
  uint64_t *v410;
  char *v411;
  char *v412;
  uint64_t v413;
  uint64_t v414;
  char *v415;
  uint64_t *v416;
  double *v417;
  char *v418;
  uint64_t **v419;
  uint64_t *v420;
  double *v421;
  char *v422;
  uint64_t **v423;
  uint64_t **v424;
  uint64_t *v425;
  double *v426;
  double *v427;
  uint64_t **v428;
  uint64_t **v429;
  char *v430;
  double *v431;
  char *v432;
  uint64_t **v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  char *v437;
  uint64_t *v438;
  void (*v439)(char *, char *, uint64_t);
  uint64_t v440;
  uint64_t *v441;
  void (*v442)(uint64_t **, uint64_t);
  char *v443;
  uint64_t v444;
  uint64_t v445;
  char *v446;
  uint64_t *v447;
  uint64_t v448;
  char *v449;
  uint64_t v450;
  uint64_t v451;
  char *v452;
  uint64_t v453;

  v3 = v2;
  v438 = a2;
  v414 = sub_23F61B6E0();
  v413 = *(_QWORD *)(v414 - 8);
  MEMORY[0x24BDAC7A8](v414);
  v412 = (char *)&v400 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B8A8();
  v7 = *(_QWORD *)(v6 - 8);
  v434 = v6;
  v435 = v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v403 = (char *)&v400 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v407 = (char *)&v400 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v402 = (char *)&v400 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v406 = (char *)&v400 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v417 = (double *)((char *)&v400 - v17);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v421 = (double *)((char *)&v400 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v426 = (double *)((char *)&v400 - v21);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v427 = (double *)((char *)&v400 - v23);
  MEMORY[0x24BDAC7A8](v22);
  v431 = (double *)((char *)&v400 - v24);
  v436 = sub_23F35D2E8(&qword_256E73B68);
  v25 = MEMORY[0x24BDAC7A8](v436);
  v422 = (char *)&v400 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v430 = (char *)&v400 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v432 = (char *)&v400 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v437 = (char *)&v400 - v31;
  v453 = sub_23F617D08();
  v448 = *(_QWORD *)(v453 - 8);
  MEMORY[0x24BDAC7A8](v453);
  v33 = (char *)&v400 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for TranscriptValueFetcher(0);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v400 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_23F35D2E8(&qword_256E701F0);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v441 = (uint64_t *)((char *)&v400 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v38);
  v447 = (uint64_t *)((char *)&v400 - v40);
  v41 = sub_23F61B92C();
  v42 = *(_QWORD *)(v41 - 8);
  v444 = v41;
  v445 = v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v405 = (char *)&v400 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v409 = (char *)&v400 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v404 = (char *)&v400 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v408 = (char *)&v400 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v415 = (char *)&v400 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v411 = (char *)&v400 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v418 = (char *)&v400 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v410 = (uint64_t *)((char *)&v400 - v58);
  v59 = MEMORY[0x24BDAC7A8](v57);
  v419 = (uint64_t **)((char *)&v400 - v60);
  v61 = MEMORY[0x24BDAC7A8](v59);
  v423 = (uint64_t **)((char *)&v400 - v62);
  v63 = MEMORY[0x24BDAC7A8](v61);
  v416 = (uint64_t *)((char *)&v400 - v64);
  v65 = MEMORY[0x24BDAC7A8](v63);
  v424 = (uint64_t **)((char *)&v400 - v66);
  v67 = MEMORY[0x24BDAC7A8](v65);
  v428 = (uint64_t **)((char *)&v400 - v68);
  v69 = MEMORY[0x24BDAC7A8](v67);
  v420 = (uint64_t *)((char *)&v400 - v70);
  v71 = MEMORY[0x24BDAC7A8](v69);
  v429 = (uint64_t **)((char *)&v400 - v72);
  v73 = MEMORY[0x24BDAC7A8](v71);
  v433 = (uint64_t **)((char *)&v400 - v74);
  v75 = MEMORY[0x24BDAC7A8](v73);
  v425 = (uint64_t *)((char *)&v400 - v76);
  v77 = MEMORY[0x24BDAC7A8](v75);
  v446 = (char *)&v400 - v78;
  MEMORY[0x24BDAC7A8](v77);
  v80 = (char *)&v400 - v79;
  v81 = sub_23F61A438();
  v82 = *(_QWORD *)(v81 - 8);
  v450 = v81;
  v451 = v82;
  v83 = MEMORY[0x24BDAC7A8](v81);
  v85 = (char *)&v400 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v83);
  v452 = (char *)&v400 - v86;
  sub_23F61A45C();
  v87 = sub_23F61B164();
  v439 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16);
  v439(v36, v3, v87);
  v88 = *(int *)(type metadata accessor for ExpressionEvaluator(0) + 20);
  v443 = v3;
  v89 = *(_QWORD *)&v3[v88];
  v440 = v34;
  *(_QWORD *)&v36[*(int *)(v34 + 20)] = v89;
  sub_23F617BA0();
  v442 = a1;
  sub_23F61A444();
  v90 = v447;
  sub_23F5F7CC8((uint64_t)v33, v447);
  v91 = *(void (**)(char *, uint64_t))(v448 + 8);
  v448 = (uint64_t)v33;
  v91(v33, v453);
  sub_23F3663AC((uint64_t)v36, type metadata accessor for TranscriptValueFetcher);
  v92 = (uint64_t)v449;
  sub_23F374500(0xD000000000000092, 0x800000023F6349A0, 66, 0x69666E496C617665, 0xED0000293A5F2878);
  if (v92)
  {
    sub_23F3625D8((uint64_t)v90, &qword_256E701F0);
LABEL_3:
    v94 = v450;
    v93 = v451;
    v95 = v452;
    return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v95, v94);
  }
  v401 = v85;
  v449 = v80;
  sub_23F3625D8((uint64_t)v90, &qword_256E701F0);
  v96 = v443;
  v439(v36, v443, v87);
  *(_QWORD *)&v36[*(int *)(v440 + 20)] = *(_QWORD *)&v96[v88];
  sub_23F617BA0();
  v97 = v448;
  sub_23F61A450();
  v98 = v441;
  sub_23F5F7CC8(v97, v441);
  v91((char *)v97, v453);
  sub_23F3663AC((uint64_t)v36, type metadata accessor for TranscriptValueFetcher);
  v99 = (uint64_t)v446;
  sub_23F374500(0xD000000000000092, 0x800000023F6349A0, 69, 0x69666E496C617665, 0xED0000293A5F2878);
  sub_23F3625D8((uint64_t)v98, &qword_256E701F0);
  v93 = v451;
  v95 = v452;
  v100 = *(void (**)(char *, char *, uint64_t))(v451 + 16);
  v101 = v401;
  v94 = v450;
  v100(v401, v452, v450);
  v102 = (*(uint64_t (**)(char *, uint64_t))(v93 + 88))(v101, v94);
  v104 = v444;
  v103 = (_QWORD *)v445;
  if (v102 == *MEMORY[0x24BE554D8])
    goto LABEL_5;
  if (v102 == *MEMORY[0x24BE554C0])
  {
    v107 = v445;
    v108 = (uint64_t)v449;
    sub_23F42CEAC((uint64_t)v449, v99, v438);
    v109 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
    v109(v99, v104);
    v109(v108, v104);
    return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v95, v94);
  }
  if (v102 == *MEMORY[0x24BE55510])
    goto LABEL_5;
  if (v102 == *MEMORY[0x24BE55508])
  {
    v448 = (uint64_t)v100;
    v453 = 0;
    v111 = v437;
    v112 = &v437[*(int *)(v436 + 48)];
    v113 = *(uint64_t **)(v445 + 16);
    ((void (*)(char *, char *, uint64_t))v113)(v437, v449, v444);
    ((void (*)(char *, uint64_t, uint64_t))v113)(v112, v99, v104);
    v114 = (uint64_t (*)(char *, uint64_t))v103[11];
    v115 = v114(v111, v104);
    if ((_DWORD)v115 == *MEMORY[0x24BEB9A00])
    {
      v116 = v115;
      v443 = v112;
      v117 = v433;
      v447 = v113;
      ((void (*)(uint64_t **, char *, uint64_t))v113)(v433, v111, v104);
      v442 = (void (*)(uint64_t **, uint64_t))v103[12];
      v442(v117, v104);
      v118 = *v117;
      v119 = v104;
      v120 = swift_projectBox();
      v121 = v434;
      v122 = v435;
      v123 = *(uint64_t (**)(uint64_t, uint64_t))(v435 + 88);
      v124 = v123(v120, v434);
      if (v124 == *MEMORY[0x24BEB9948])
      {
        LODWORD(v440) = v124;
        v441 = v118;
        v125 = v431;
        v439 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
        v439((char *)v431, (char *)v120, v121);
        v126 = *(void (**)(double *, uint64_t))(v122 + 96);
        v126(v125, v121);
        v127 = *v125;
        v128 = v443;
        if (v114(v443, v119) == (_DWORD)v116)
        {
          v436 = (uint64_t)v126;
          v129 = v128;
          v130 = v429;
          ((void (*)(uint64_t **, char *, uint64_t))v447)(v429, v129, v119);
          v442(v130, v119);
          v131 = v119;
          v132 = swift_projectBox();
          v133 = v123(v132, v121);
          v134 = v440;
          if (v133 == (_DWORD)v440)
          {
            v135 = v427;
            v439((char *)v427, (char *)v132, v121);
            ((void (*)(double *, uint64_t))v436)(v135, v121);
            v136 = *v135;
            v137 = swift_allocBox();
            *v138 = v127 - v136;
            (*(void (**)(double *, uint64_t, uint64_t))(v435 + 104))(v138, v134, v121);
            v139 = v425;
            *v425 = v137;
            v140 = v445;
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v445 + 104))(v139, v116, v131);
            swift_release();
            swift_release();
            v141 = *(void (**)(char *, uint64_t))(v140 + 8);
            v141(v443, v131);
            v142 = v437;
LABEL_16:
            v141(v142, v131);
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v140 + 32))(v438, v139, v131);
            v141((char *)v99, v131);
            v141(v449, v131);
            return (*(uint64_t (**)(char *, uint64_t))(v451 + 8))(v452, v450);
          }
          swift_release();
        }
      }
      swift_release();
      v104 = v444;
      v94 = v450;
      v111 = v437;
LABEL_36:
      v113 = v447;
      goto LABEL_37;
    }
    goto LABEL_37;
  }
  if (v102 == *MEMORY[0x24BE554A0])
    goto LABEL_5;
  if (v102 == *MEMORY[0x24BE554E0])
  {
    v448 = (uint64_t)v100;
    v453 = 0;
    v111 = v432;
    v143 = &v432[*(int *)(v436 + 48)];
    v113 = *(uint64_t **)(v445 + 16);
    ((void (*)(char *, char *, uint64_t))v113)(v432, v449, v444);
    ((void (*)(char *, uint64_t, uint64_t))v113)(v143, v99, v104);
    v144 = (uint64_t (*)(char *, uint64_t))v103[11];
    v145 = v144(v111, v104);
    if ((_DWORD)v145 == *MEMORY[0x24BEB9A00])
    {
      v146 = v145;
      v443 = v143;
      v147 = v428;
      v447 = v113;
      ((void (*)(uint64_t **, char *, uint64_t))v113)(v428, v111, v104);
      v442 = (void (*)(uint64_t **, uint64_t))v103[12];
      v442(v147, v104);
      v148 = *v147;
      v149 = v104;
      v150 = swift_projectBox();
      v151 = v434;
      v152 = v435;
      v153 = *(uint64_t (**)(uint64_t, uint64_t))(v435 + 88);
      v154 = v153(v150, v434);
      if (v154 == *MEMORY[0x24BEB9948])
      {
        LODWORD(v440) = v154;
        v441 = v148;
        v155 = v426;
        v439 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
        v439((char *)v426, (char *)v150, v151);
        v156 = *(void (**)(double *, uint64_t))(v152 + 96);
        v156(v155, v151);
        v157 = *v155;
        v158 = v443;
        if (v144(v443, v149) == (_DWORD)v146)
        {
          v437 = (char *)v156;
          v159 = v158;
          v160 = v424;
          ((void (*)(uint64_t **, char *, uint64_t))v447)(v424, v159, v149);
          v442(v160, v149);
          v131 = v149;
          v161 = swift_projectBox();
          v162 = v153(v161, v151);
          v163 = v440;
          if (v162 == (_DWORD)v440)
          {
            v164 = v427;
            v439((char *)v427, (char *)v161, v151);
            ((void (*)(double *, uint64_t))v437)(v164, v151);
            v165 = *v164;
            v166 = swift_allocBox();
            *v167 = v157 / v165;
            (*(void (**)(double *, uint64_t, uint64_t))(v435 + 104))(v167, v163, v151);
            v139 = v420;
            *v420 = v166;
            v140 = v445;
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v445 + 104))(v139, v146, v131);
            swift_release();
            swift_release();
            v141 = *(void (**)(char *, uint64_t))(v140 + 8);
            v141(v443, v131);
            v142 = v432;
            goto LABEL_16;
          }
          swift_release();
        }
      }
      swift_release();
      v104 = v444;
      v94 = v450;
      v111 = v432;
      goto LABEL_36;
    }
LABEL_37:
    v450 = type metadata accessor for ExpressionEvaluatorError(0);
    sub_23F3612C0(&qword_256E73B60, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621684);
    v453 = swift_allocError();
    v201 = v200;
    v202 = sub_23F35D2E8(&qword_256E73B70);
    v203 = v201 + *(int *)(v202 + 48);
    v204 = v201 + *(int *)(v202 + 64);
    v95 = v452;
    ((void (*)(uint64_t, char *, uint64_t))v448)(v201, v452, v94);
    v205 = v203;
    v206 = (uint64_t)v449;
    ((void (*)(uint64_t, char *, uint64_t))v113)(v205, v449, v104);
    ((void (*)(uint64_t, uint64_t, uint64_t))v113)(v204, v99, v104);
LABEL_38:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v207 = (uint64_t)v111;
LABEL_39:
    sub_23F3625D8(v207, &qword_256E73B68);
    v208 = *(void (**)(uint64_t, uint64_t))(v445 + 8);
    v208(v99, v104);
    v209 = v206;
    v210 = v104;
LABEL_40:
    v208(v209, v210);
    v93 = v451;
    return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v95, v94);
  }
  if (v102 == *MEMORY[0x24BE55488])
    goto LABEL_5;
  if (v102 == *MEMORY[0x24BE554F8])
  {
    v448 = (uint64_t)v100;
    v453 = 0;
    v168 = v445;
    v169 = v430;
    v170 = &v430[*(int *)(v436 + 48)];
    v171 = *(uint64_t **)(v445 + 16);
    ((void (*)(char *, char *, uint64_t))v171)(v430, v449, v444);
    ((void (*)(char *, uint64_t, uint64_t))v171)(v170, v99, v104);
    v172 = *(uint64_t (**)(char *, uint64_t))(v168 + 88);
    v173 = v172(v169, v104);
    if ((_DWORD)v173 == *MEMORY[0x24BEB9A00])
    {
      v174 = v173;
      v443 = v170;
      v175 = v423;
      v447 = v171;
      ((void (*)(uint64_t **, char *, uint64_t))v171)(v423, v169, v104);
      v442 = *(void (**)(uint64_t **, uint64_t))(v445 + 96);
      v442(v175, v104);
      v176 = *v175;
      v177 = swift_projectBox();
      v178 = v434;
      v179 = v435;
      v180 = *(uint64_t (**)(uint64_t, uint64_t))(v435 + 88);
      v181 = v180(v177, v434);
      if (v181 == *MEMORY[0x24BEB9948])
      {
        LODWORD(v440) = v181;
        v441 = v176;
        v182 = v421;
        v439 = *(void (**)(char *, char *, uint64_t))(v179 + 16);
        v439((char *)v421, (char *)v177, v178);
        v183 = *(void (**)(double *, uint64_t))(v179 + 96);
        v183(v182, v178);
        v184 = *v182;
        v185 = v443;
        if (v172(v443, v104) == (_DWORD)v174)
        {
          v186 = v174;
          v187 = v419;
          v188 = v444;
          ((void (*)(uint64_t **, char *, uint64_t))v447)(v419, v185, v444);
          v442(v187, v188);
          v189 = swift_projectBox();
          v190 = v180(v189, v178);
          if (v190 == (_DWORD)v440)
          {
            v191 = v427;
            v192 = v434;
            v439((char *)v427, (char *)v189, v434);
            v183(v191, v192);
            v193 = *v191;
            v194 = swift_allocBox();
            *v195 = v184 * v193;
            (*(void (**)(double *, _QWORD, uint64_t))(v435 + 104))(v195, v440, v192);
            v196 = v416;
            *v416 = v194;
            v197 = v444;
            v198 = v445;
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v445 + 104))(v196, v186, v444);
            swift_release();
            swift_release();
            v199 = *(void (**)(char *, uint64_t))(v198 + 8);
            v199(v443, v197);
            v199(v430, v197);
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v198 + 32))(v438, v196, v197);
            v199((char *)v99, v197);
            v199(v449, v197);
            return (*(uint64_t (**)(char *, uint64_t))(v451 + 8))(v452, v450);
          }
          swift_release();
        }
      }
      swift_release();
      v104 = v444;
      v94 = v450;
      v171 = v447;
    }
    type metadata accessor for ExpressionEvaluatorError(0);
    sub_23F3612C0(&qword_256E73B60, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621684);
    v453 = swift_allocError();
    v265 = v264;
    v266 = sub_23F35D2E8(&qword_256E73B70);
    v267 = v265 + *(int *)(v266 + 48);
    v268 = v265 + *(int *)(v266 + 64);
    v95 = v452;
    ((void (*)(uint64_t, char *, uint64_t))v448)(v265, v452, v94);
    v269 = v267;
    v206 = (uint64_t)v449;
    ((void (*)(uint64_t, char *, uint64_t))v171)(v269, v449, v104);
    ((void (*)(uint64_t, uint64_t, uint64_t))v171)(v268, v99, v104);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v207 = (uint64_t)v430;
    goto LABEL_39;
  }
  if (v102 == *MEMORY[0x24BE55498])
  {
LABEL_5:
    type metadata accessor for ExpressionEvaluatorError(0);
    sub_23F3612C0(&qword_256E73B60, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621684);
    swift_allocError();
    v100(v105, v95, v94);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v106 = (void (*)(char *, uint64_t))v103[1];
    v106(v446, v104);
    v106(v449, v104);
    return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v95, v94);
  }
  v211 = *MEMORY[0x24BE554E8];
  v453 = 0;
  if (v102 == v211)
  {
    v448 = (uint64_t)v100;
    v111 = v422;
    v212 = &v422[*(int *)(v436 + 48)];
    v213 = *(uint64_t **)(v445 + 16);
    ((void (*)(char *, char *, uint64_t))v213)(v422, v449, v444);
    ((void (*)(char *, uint64_t, uint64_t))v213)(v212, v99, v104);
    v214 = (uint64_t (*)(char *, uint64_t))v103[11];
    v215 = v214(v111, v104);
    if (v215 == *MEMORY[0x24BEB9A00])
    {
      LODWORD(v443) = v215;
      v216 = v418;
      v447 = v213;
      ((void (*)(char *, char *, uint64_t))v213)(v418, v111, v104);
      v217 = (void (*)(char *, uint64_t))v103[12];
      v217(v216, v104);
      v218 = swift_projectBox();
      v219 = *(uint64_t (**)(uint64_t, uint64_t))(v435 + 88);
      v220 = v219(v218, v434);
      if ((_DWORD)v220 == *MEMORY[0x24BEB9948])
      {
        v221 = v220;
        v222 = v435;
        v223 = v417;
        v224 = v218;
        v225 = v434;
        v442 = *(void (**)(uint64_t **, uint64_t))(v435 + 16);
        ((void (*)(double *, uint64_t, uint64_t))v442)(v417, v224, v434);
        v441 = *(uint64_t **)(v222 + 96);
        ((void (*)(double *, uint64_t))v441)(v223, v225);
        v226 = *v223;
        v227 = v214(v212, v444);
        if (v227 == (_DWORD)v443)
        {
          v228 = v411;
          v229 = v444;
          ((void (*)(char *, char *, uint64_t))v447)(v411, v212, v444);
          v217(v228, v229);
          v230 = swift_projectBox();
          if (v219(v230, v434) == (_DWORD)v221)
          {
            v231 = v427;
            v232 = v434;
            ((void (*)(double *, uint64_t, uint64_t))v442)(v427, v230, v434);
            ((void (*)(double *, uint64_t))v441)(v231, v232);
            v233 = *v231;
            v234 = swift_allocBox();
            v236 = v235;
            *v235 = pow(v226, v233);
            (*(void (**)(long double *, uint64_t, uint64_t))(v435 + 104))(v236, v221, v232);
            v237 = v410;
            *v410 = v234;
            v238 = v444;
            v239 = v445;
            (*(void (**)(uint64_t *, _QWORD, uint64_t))(v445 + 104))(v237, v443, v444);
            swift_release();
            swift_release();
            v240 = *(void (**)(char *, uint64_t))(v239 + 8);
            v240(v212, v238);
            v240(v422, v238);
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v239 + 32))(v438, v237, v238);
            v240(v446, v238);
            v240(v449, v238);
            return (*(uint64_t (**)(char *, uint64_t))(v451 + 8))(v452, v450);
          }
          swift_release();
        }
      }
      swift_release();
      v104 = v444;
      v94 = v450;
      v99 = (uint64_t)v446;
      v213 = v447;
      v111 = v422;
    }
    v450 = type metadata accessor for ExpressionEvaluatorError(0);
    sub_23F3612C0(&qword_256E73B60, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621684);
    v453 = swift_allocError();
    v259 = v258;
    v260 = sub_23F35D2E8(&qword_256E73B70);
    v261 = v259 + *(int *)(v260 + 48);
    v262 = v259 + *(int *)(v260 + 64);
    v95 = v452;
    ((void (*)(uint64_t, char *, uint64_t))v448)(v259, v452, v94);
    v263 = v261;
    v206 = (uint64_t)v449;
    ((void (*)(uint64_t, char *, uint64_t))v213)(v263, v449, v104);
    ((void (*)(uint64_t, uint64_t, uint64_t))v213)(v262, v99, v104);
    goto LABEL_38;
  }
  if (v102 == *MEMORY[0x24BE554D0])
  {
    v241 = v445;
    v448 = swift_allocBox();
    v243 = v242;
    v244 = (uint64_t)v449;
    v245 = v446;
    LODWORD(v447) = sub_23F61B920();
    v246 = *(void (**)(char *, uint64_t))(v241 + 8);
    v246(v245, v104);
    v246((char *)v244, v104);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v94);
    *v243 = v447 & 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v435 + 104))(v243, *MEMORY[0x24BEB9928], v434);
    *v438 = v448;
    v247 = *(uint64_t (**)(void))(v241 + 104);
    return v247();
  }
  if (v102 == *MEMORY[0x24BE55500])
  {
    v248 = v434;
    v249 = swift_allocBox();
    v251 = v250;
    sub_23F3612C0(&qword_256E6FE68, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A38]);
    v252 = (uint64_t)v449;
    v253 = v446;
    v254 = v444;
    v255 = sub_23F61C0A0();
    v256 = v445;
    v257 = *(void (**)(char *, uint64_t))(v445 + 8);
    v257(v253, v254);
    v257((char *)v252, v254);
    (*(void (**)(char *, uint64_t))(v451 + 8))(v452, v450);
    *v251 = (v255 & 1) == 0;
    (*(void (**)(BOOL *, _QWORD, uint64_t))(v435 + 104))(v251, *MEMORY[0x24BEB9928], v248);
    *v438 = v249;
    v247 = *(uint64_t (**)(void))(v256 + 104);
    return v247();
  }
  if (v102 == *MEMORY[0x24BE554B0])
  {
    v270 = v445;
    v271 = *(void (**)(char *, char *, uint64_t))(v445 + 16);
    v272 = v415;
    v273 = v444;
    v271(v415, v446, v444);
    if ((*(unsigned int (**)(char *, uint64_t))(v270 + 88))(v272, v273) != *MEMORY[0x24BEB9988])
    {
      v294 = v444;
      v295 = *(void (**)(char *, uint64_t))(v445 + 8);
      v295(v415, v444);
      type metadata accessor for InterpreterError();
      sub_23F3612C0((unint64_t *)&qword_256E6FB48, (uint64_t (*)(uint64_t))type metadata accessor for InterpreterError, (uint64_t)&protocol conformance descriptor for InterpreterError);
      swift_allocError();
      v296 = v446;
      v271(v297, v446, v294);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      v295(v296, v294);
      v295(v449, v294);
      goto LABEL_3;
    }
    (*(void (**)(char *, uint64_t))(v445 + 96))(v415, v444);
    v274 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v413 + 16))(v412, v274, v414);
    swift_release();
    v275 = sub_23F61B6D4();
    v276 = *(_QWORD *)(v275 + 16);
    if (v276)
    {
      v277 = v275 + ((*(unsigned __int8 *)(v445 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v445 + 80));
      v278 = *(_QWORD *)(v445 + 72);
      sub_23F3612C0(&qword_256E6FE68, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A38]);
      while ((sub_23F61C0A0() & 1) == 0)
      {
        v277 += v278;
        if (!--v276)
          goto LABEL_70;
      }
      swift_bridgeObjectRelease();
      v279 = 1;
    }
    else
    {
LABEL_70:
      swift_bridgeObjectRelease();
      v279 = 0;
    }
    v316 = v434;
    v317 = swift_allocBox();
    v319 = v318;
    (*(void (**)(char *, uint64_t))(v413 + 8))(v412, v414);
    v320 = v445;
    v321 = *(void (**)(char *, uint64_t))(v445 + 8);
    v322 = v444;
    v321(v446, v444);
    v321(v449, v322);
    (*(void (**)(char *, uint64_t))(v451 + 8))(v452, v450);
    *v319 = v279;
    (*(void (**)(char *, _QWORD, uint64_t))(v435 + 104))(v319, *MEMORY[0x24BEB9928], v316);
    *v438 = v317;
    v247 = *(uint64_t (**)(void))(v320 + 104);
    return v247();
  }
  v280 = (void (*)(uint64_t, char *, uint64_t))v100;
  if (v102 == *MEMORY[0x24BE554A8])
  {
    v281 = sub_23F61B8D8();
    if ((v282 & 1) == 0)
    {
      v283 = *(double *)&v281;
      *(double *)&v284 = COERCE_DOUBLE(sub_23F61B8D8());
      if ((v285 & 1) == 0)
      {
        v286 = v283;
        v287 = *(double *)&v284;
        v288 = v434;
        v290 = swift_allocBox();
        v291 = v289;
        v292 = v287 > v286;
        goto LABEL_75;
      }
    }
    goto LABEL_99;
  }
  if (v102 == *MEMORY[0x24BE55480])
  {
    v298 = sub_23F61B8D8();
    if ((v299 & 1) == 0)
    {
      v300 = *(double *)&v298;
      *(double *)&v301 = COERCE_DOUBLE(sub_23F61B8D8());
      if ((v302 & 1) == 0)
      {
        v303 = v300;
        v304 = *(double *)&v301;
        v288 = v434;
        v290 = swift_allocBox();
        v291 = v289;
        v305 = v304 < v303;
        goto LABEL_84;
      }
    }
    goto LABEL_99;
  }
  if (v102 == *MEMORY[0x24BE55490])
  {
    v309 = sub_23F61B8D8();
    if ((v310 & 1) == 0)
    {
      v311 = *(double *)&v309;
      *(double *)&v312 = COERCE_DOUBLE(sub_23F61B8D8());
      if ((v313 & 1) == 0)
      {
        v314 = v311;
        v315 = *(double *)&v312;
        v288 = v434;
        v290 = swift_allocBox();
        v291 = v289;
        v292 = v314 > v315;
LABEL_75:
        v293 = !v292;
LABEL_87:
        *v289 = v293;
        (*(void (**)(char *, _QWORD, uint64_t))(v435 + 104))(v291, *MEMORY[0x24BEB9928], v288);
        *v438 = v290;
        v307 = v444;
        v306 = v445;
        (*(void (**)(void))(v445 + 104))();
        v308 = *(void (**)(char *, uint64_t))(v306 + 8);
        v308(v446, v307);
LABEL_88:
        v308(v449, v307);
        return (*(uint64_t (**)(char *, uint64_t))(v451 + 8))(v452, v450);
      }
    }
    goto LABEL_99;
  }
  if (v102 == *MEMORY[0x24BE554F0])
  {
    v323 = sub_23F61B8D8();
    if ((v324 & 1) == 0)
    {
      v325 = *(double *)&v323;
      *(double *)&v326 = COERCE_DOUBLE(sub_23F61B8D8());
      if ((v327 & 1) == 0)
      {
        v328 = v325;
        v329 = *(double *)&v326;
        v288 = v434;
        v290 = swift_allocBox();
        v291 = v289;
        v305 = v328 < v329;
LABEL_84:
        v293 = v305;
        goto LABEL_87;
      }
    }
LABEL_99:
    type metadata accessor for ExpressionEvaluatorError(0);
    sub_23F3612C0(&qword_256E73B60, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621684);
    v453 = swift_allocError();
    v331 = v330;
    v332 = sub_23F35D2E8(&qword_256E73B70);
    v333 = v331 + *(int *)(v332 + 48);
    v334 = v331 + *(int *)(v332 + 64);
    v95 = v452;
    v94 = v450;
    v280(v331, v452, v450);
    v335 = v445;
    v336 = *(void (**)(uint64_t, char *, uint64_t))(v445 + 16);
    v337 = v333;
    v338 = (uint64_t)v449;
    v339 = v444;
    v336(v337, v449, v444);
    v340 = v334;
    v341 = v446;
    v336(v340, v446, v339);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v208 = *(void (**)(uint64_t, uint64_t))(v335 + 8);
    v208((uint64_t)v341, v339);
LABEL_100:
    v209 = v338;
    v210 = v339;
    goto LABEL_40;
  }
  if (v102 == *MEMORY[0x24BE554C8])
  {
    v342 = v444;
    v343 = v445;
    v344 = v408;
    v448 = *(_QWORD *)(v445 + 16);
    ((void (*)(char *, char *, uint64_t))v448)(v408, v449, v444);
    v345 = *(uint64_t (**)(char *, uint64_t))(v343 + 88);
    v346 = v345(v344, v342);
    if (v346 == *MEMORY[0x24BEB9A00])
    {
      v347 = v346;
      v447 = *(uint64_t **)(v445 + 96);
      ((void (*)(char *, uint64_t))v447)(v408, v444);
      v348 = swift_projectBox();
      v349 = v434;
      v350 = v435;
      v351 = *(void (**)(char *, uint64_t, uint64_t))(v435 + 16);
      v352 = v406;
      v351(v406, v348, v434);
      v353 = *(uint64_t (**)(char *, uint64_t))(v350 + 88);
      v354 = v353(v352, v349);
      if ((_DWORD)v354 == *MEMORY[0x24BEB9928])
      {
        v355 = v354;
        v356 = v406;
        v357 = *(void (**)(char *, uint64_t))(v435 + 96);
        v357(v406, v434);
        LODWORD(v443) = *v356;
        swift_release();
        v358 = v404;
        v359 = v444;
        ((void (*)(char *, char *, uint64_t))v448)(v404, v446, v444);
        if (v345(v358, v359) != v347)
        {
          (*(void (**)(char *, uint64_t))(v445 + 8))(v404, v444);
          goto LABEL_119;
        }
        ((void (*)(char *, uint64_t))v447)(v404, v444);
        v360 = swift_projectBox();
        v361 = v402;
        v362 = v434;
        v351(v402, v360, v434);
        if (v353(v361, v362) == (_DWORD)v355)
        {
          v363 = v402;
          v364 = v434;
          v357(v402, v434);
          LOBYTE(v363) = *v363;
          swift_release();
          LOBYTE(v363) = v443 & v363;
          v365 = swift_allocBox();
          v367 = v366;
          *v366 = (_BYTE)v363;
LABEL_113:
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v435 + 104))(v367, v355, v364);
          *v438 = v365;
          v307 = v444;
          v390 = v445;
          (*(void (**)(void))(v445 + 104))();
          v308 = *(void (**)(char *, uint64_t))(v390 + 8);
          v308(v446, v307);
          goto LABEL_88;
        }
        (*(void (**)(char *, uint64_t))(v435 + 8))(v402, v434);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v435 + 8))(v406, v434);
      }
      goto LABEL_118;
    }
    (*(void (**)(char *, uint64_t))(v445 + 8))(v408, v444);
    goto LABEL_119;
  }
  if (v102 == *MEMORY[0x24BE554B8])
  {
    v368 = v444;
    v369 = v445;
    v370 = v409;
    v448 = *(_QWORD *)(v445 + 16);
    ((void (*)(char *, char *, uint64_t))v448)(v409, v449, v444);
    v371 = *(uint64_t (**)(char *, uint64_t))(v369 + 88);
    v372 = v371(v370, v368);
    if (v372 == *MEMORY[0x24BEB9A00])
    {
      v373 = v372;
      v447 = *(uint64_t **)(v445 + 96);
      ((void (*)(char *, uint64_t))v447)(v409, v444);
      v374 = swift_projectBox();
      v375 = v434;
      v376 = v435;
      v377 = *(void (**)(char *, uint64_t, uint64_t))(v435 + 16);
      v378 = v407;
      v377(v407, v374, v434);
      v379 = *(uint64_t (**)(char *, uint64_t))(v376 + 88);
      v380 = v379(v378, v375);
      if ((_DWORD)v380 == *MEMORY[0x24BEB9928])
      {
        v355 = v380;
        v381 = v407;
        v382 = *(void (**)(char *, uint64_t))(v435 + 96);
        v382(v407, v434);
        LODWORD(v443) = *v381;
        swift_release();
        v383 = v405;
        v384 = v444;
        ((void (*)(char *, char *, uint64_t))v448)(v405, v446, v444);
        if (v371(v383, v384) != v373)
        {
          (*(void (**)(char *, uint64_t))(v445 + 8))(v405, v444);
          goto LABEL_119;
        }
        ((void (*)(char *, uint64_t))v447)(v405, v444);
        v385 = swift_projectBox();
        v386 = v403;
        v387 = v434;
        v377(v403, v385, v434);
        if (v379(v386, v387) == (_DWORD)v355)
        {
          v388 = v403;
          v364 = v434;
          v382(v403, v434);
          LOBYTE(v388) = *v388;
          swift_release();
          LOBYTE(v388) = v443 | v388;
          v365 = swift_allocBox();
          v367 = v389;
          *v389 = v388 & 1;
          goto LABEL_113;
        }
        (*(void (**)(char *, uint64_t))(v435 + 8))(v403, v434);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v435 + 8))(v407, v434);
      }
LABEL_118:
      swift_release();
      goto LABEL_119;
    }
    (*(void (**)(char *, uint64_t))(v445 + 8))(v409, v444);
LABEL_119:
    type metadata accessor for ExpressionEvaluatorError(0);
    sub_23F3612C0(&qword_256E73B60, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621684);
    swift_allocError();
    v392 = v391;
    v393 = sub_23F35D2E8(&qword_256E73B70);
    v394 = v392 + *(int *)(v393 + 48);
    v395 = v392 + *(int *)(v393 + 64);
    v95 = v452;
    v94 = v450;
    v280(v392, v452, v450);
    v396 = v394;
    v397 = (void (*)(uint64_t, char *, uint64_t))v448;
    v338 = (uint64_t)v449;
    v339 = v444;
    ((void (*)(uint64_t, char *, uint64_t))v448)(v396, v449, v444);
    v398 = v395;
    v399 = v446;
    v397(v398, v446, v339);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v208 = *(void (**)(uint64_t, uint64_t))(v445 + 8);
    v208((uint64_t)v399, v339);
    goto LABEL_100;
  }
  result = sub_23F61CC58();
  __break(1u);
  return result;
}

void sub_23F42B628(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v57 = a1;
  v48 = a2;
  v3 = sub_23F61B7AC();
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F617D08();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TranscriptValueFetcher(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F35D2E8(&qword_256E701F0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v49 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v47 - v15);
  v17 = sub_23F61B92C();
  v18 = *(_QWORD *)(v17 - 8);
  v53 = v17;
  v54 = v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v47 - v22;
  v24 = sub_23F61B164();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v11, v2, v24);
  *(_QWORD *)&v11[*(int *)(v9 + 20)] = *(_QWORD *)(v2
                                                 + *(int *)(type metadata accessor for ExpressionEvaluator(0) + 20));
  v25 = sub_23F617BA0();
  MEMORY[0x24266D678](v25);
  sub_23F5F7CC8((uint64_t)v8, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_23F3663AC((uint64_t)v11, type metadata accessor for TranscriptValueFetcher);
  v55 = v23;
  v26 = v56;
  sub_23F374500(0xD000000000000092, 0x800000023F6349A0, 168, 0x28746F446C617665, 0xEB00000000293A5FLL);
  sub_23F3625D8((uint64_t)v16, &qword_256E701F0);
  if (!v26)
  {
    v27 = v50;
    v28 = v51;
    v29 = v52;
    v30 = v53;
    v31 = (uint64_t)v49;
    v32 = v54;
    v33 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
    v33(v21, v55, v53);
    if ((*(unsigned int (**)(char *, uint64_t))(v32 + 88))(v21, v30) == *MEMORY[0x24BEB99E0])
    {
      (*(void (**)(char *, uint64_t))(v32 + 96))(v21, v30);
      v34 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v27, v34, v29);
      swift_release();
      v35 = sub_23F61B770();
      v36 = sub_23F61A174();
      sub_23F3684B0(v36, v37, v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = v54;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v29);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v55, v30);
      v39 = sub_23F36195C(v31, 1, v30);
      v40 = v48;
      if (v39 == 1)
      {
        v41 = sub_23F61B8A8();
        v42 = swift_allocBox();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v43, *MEMORY[0x24BEB9940], v41);
        *v40 = v42;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v38 + 104))(v40, *MEMORY[0x24BEB9A00], v30);
        sub_23F3625D8(v31, &qword_256E701F0);
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v38 + 32))(v48, v31, v30);
      }
    }
    else
    {
      v44 = *(void (**)(char *, uint64_t))(v32 + 8);
      v44(v21, v30);
      type metadata accessor for ExpressionEvaluatorError(0);
      sub_23F3612C0(&qword_256E73B60, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621684);
      swift_allocError();
      v45 = v55;
      v33(v46, v55, v30);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      v44(v45, v30);
    }
  }
}

void sub_23F42BAB4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  _DWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double *v63;
  double v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void (*v77)(char *, uint64_t);
  char *v78;
  char *v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  int v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  void (*v103)(char *, uint64_t);
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t *v110;
  uint64_t *v111;
  double *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  _QWORD *v132;
  char *v133;
  uint64_t v134;

  v134 = a1;
  v3 = v2;
  v110 = a2;
  v114 = sub_23F61B7AC();
  v121 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v120 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_23F61B8A8();
  v115 = *(_QWORD *)(v118 - 8);
  v5 = MEMORY[0x24BDAC7A8](v118);
  v111 = (uint64_t *)((char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v112 = (double *)((char *)&v108 - v7);
  v116 = sub_23F61B6E0();
  v119 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v117 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F617D08();
  v132 = *(_QWORD **)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptValueFetcher(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F35D2E8(&qword_256E701F0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v109 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v128 = (uint64_t *)((char *)&v108 - v19);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (uint64_t *)((char *)&v108 - v20);
  v130 = sub_23F61B92C();
  v126 = *(_QWORD *)(v130 - 8);
  v22 = MEMORY[0x24BDAC7A8](v130);
  v123 = (char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v122 = (char *)&v108 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v113 = (char *)&v108 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v124 = (char *)&v108 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v131 = (char *)&v108 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v108 - v32;
  v34 = sub_23F61B164();
  v125 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v34 - 8) + 16);
  v125(v14, v3, v34);
  v35 = *(int *)(type metadata accessor for ExpressionEvaluator(0) + 20);
  v129 = v3;
  v36 = *(_QWORD *)&v3[v35];
  v127 = v12;
  *(_QWORD *)&v14[*(int *)(v12 + 20)] = v36;
  v37 = sub_23F617BA0();
  MEMORY[0x24266D924](v37);
  sub_23F5F7CC8((uint64_t)v11, v21);
  v38 = (void (*)(_QWORD, _QWORD))v132[1];
  v132 = (_QWORD *)v9;
  v38(v11, v9);
  sub_23F3663AC((uint64_t)v14, type metadata accessor for TranscriptValueFetcher);
  v39 = v133;
  sub_23F374500(0xD000000000000092, 0x800000023F6349A0, 178, 0x65646E496C617665, 0xED0000293A5F2878);
  sub_23F3625D8((uint64_t)v21, &qword_256E701F0);
  if (!v39)
  {
    v133 = v33;
    v40 = v126;
    v41 = v129;
    v125(v14, v129, v34);
    *(_QWORD *)&v14[*(int *)(v127 + 20)] = *(_QWORD *)&v41[v35];
    sub_23F617BA0();
    sub_23F61A420();
    v42 = v128;
    sub_23F5F7CC8((uint64_t)v11, v128);
    v38(v11, v132);
    sub_23F3663AC((uint64_t)v14, type metadata accessor for TranscriptValueFetcher);
    v43 = v131;
    sub_23F374500(0xD000000000000092, 0x800000023F6349A0, 181, 0x65646E496C617665, 0xED0000293A5F2878);
    sub_23F3625D8((uint64_t)v42, &qword_256E701F0);
    v44 = v40;
    v45 = *(_QWORD **)(v40 + 16);
    v46 = v124;
    v47 = v130;
    ((void (*)(char *, char *, uint64_t))v45)(v124, v133, v130);
    v48 = *(char **)(v44 + 88);
    v49 = ((uint64_t (*)(char *, uint64_t))v48)(v46, v47);
    v50 = *MEMORY[0x24BEB9988];
    v51 = (_DWORD *)MEMORY[0x24BEB9A00];
    v134 = 0;
    if (v49 != v50)
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v47);
      v67 = v123;
      goto LABEL_22;
    }
    v128 = *(uint64_t **)(v44 + 96);
    ((void (*)(char *, uint64_t))v128)(v46, v47);
    v52 = swift_projectBox();
    v53 = v119;
    v54 = v117;
    v55 = v44;
    v56 = v116;
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v117, v52, v116);
    swift_release();
    v57 = v48;
    v58 = v113;
    v132 = v45;
    ((void (*)(char *, char *, uint64_t))v45)(v113, v43, v47);
    v129 = v57;
    v59 = ((uint64_t (*)(char *, uint64_t))v57)(v58, v47);
    v60 = v118;
    v61 = v115;
    if (v59 == *MEMORY[0x24BEB9A00])
    {
      LODWORD(v127) = v59;
      v44 = v55;
      ((void (*)(char *, uint64_t))v128)(v58, v47);
      v62 = swift_projectBox();
      v63 = v112;
      (*(void (**)(double *, uint64_t, uint64_t))(v61 + 16))(v112, v62, v60);
      if ((*(unsigned int (**)(double *, uint64_t))(v61 + 88))(v63, v60) == *MEMORY[0x24BEB9948])
      {
        (*(void (**)(double *, uint64_t))(v61 + 96))(v63, v60);
        v64 = *v63;
        swift_release();
        v65 = v117;
        v66 = v119;
        v45 = v132;
        v67 = v123;
        if (v64 == floor(v64))
        {
          if ((~*(_QWORD *)&v64 & 0x7FF0000000000000) != 0)
          {
            v68 = v116;
            if (v64 > -9.22337204e18)
            {
              if (v64 < 9.22337204e18)
              {
                v69 = (uint64_t)v64;
                v70 = (uint64_t)v64;
                if ((uint64_t)v64 < 0)
                {
                  v70 = -(uint64_t)v69;
                  if (__OFSUB__(0, v69))
                    goto LABEL_41;
                }
                v71 = *(_QWORD *)(sub_23F61B6D4() + 16);
                swift_bridgeObjectRelease();
                if (v70 >= v71)
                {
                  (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v68);
                  v104 = *(void (**)(_QWORD, _QWORD))(v44 + 8);
                  v104(v131, v47);
                  v104(v133, v47);
                  v105 = v118;
                  v106 = swift_allocBox();
                  (*(void (**)(uint64_t, _QWORD, uint64_t))(v61 + 104))(v107, *MEMORY[0x24BEB9940], v105);
                  *v110 = v106;
                  (*(void (**)(void))(v44 + 104))();
                  return;
                }
                v72 = v68;
                v73 = v133;
                if ((v69 & 0x8000000000000000) != 0)
                {
                  v74 = *(_QWORD *)(sub_23F61B6D4() + 16);
                  swift_bridgeObjectRelease();
                  v69 += v74;
                }
                v75 = sub_23F61B6D4();
                v76 = v131;
                if ((v69 & 0x8000000000000000) == 0)
                {
                  if (v69 < *(_QWORD *)(v75 + 16))
                  {
                    ((void (*)(uint64_t *, unint64_t, uint64_t))v132)(v110, v75+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v69, v47);
                    swift_bridgeObjectRelease();
                    (*(void (**)(char *, uint64_t))(v119 + 8))(v65, v72);
                    v77 = *(void (**)(_QWORD, _QWORD))(v44 + 8);
                    v77(v76, v47);
                    v77(v73, v47);
                    return;
                  }
                  goto LABEL_40;
                }
LABEL_39:
                __break(1u);
LABEL_40:
                __break(1u);
LABEL_41:
                __break(1u);
                return;
              }
LABEL_38:
              __break(1u);
              goto LABEL_39;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_38;
        }
        (*(void (**)(char *, uint64_t))(v119 + 8))(v117, v116);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v119 + 8))(v117, v116);
      (*(void (**)(double *, uint64_t))(v61 + 8))(v63, v60);
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v56);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v47);
      v44 = v55;
    }
    v45 = v132;
    v67 = v123;
LABEL_21:
    v48 = v129;
    v51 = (_DWORD *)MEMORY[0x24BEB9A00];
LABEL_22:
    v78 = v122;
    ((void (*)(char *, char *, uint64_t))v45)(v122, v133, v47);
    if (((unsigned int (*)(char *, uint64_t))v48)(v78, v47) == *MEMORY[0x24BEB99E0])
    {
      v79 = v48;
      v80 = *(void (**)(_QWORD, _QWORD))(v44 + 96);
      v80(v78, v47);
      v81 = swift_projectBox();
      v82 = v114;
      (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v120, v81, v114);
      swift_release();
      ((void (*)(char *, char *, uint64_t))v45)(v67, v131, v47);
      v83 = ((uint64_t (*)(char *, uint64_t))v79)(v67, v47);
      if (v83 == *v51)
      {
        v84 = v83;
        v80(v67, v47);
        v85 = swift_projectBox();
        v86 = v115;
        v87 = v111;
        v88 = v118;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v115 + 16))(v111, v85, v118);
        v89 = (*(uint64_t (**)(uint64_t *, uint64_t))(v86 + 88))(v87, v88);
        v90 = v133;
        if (v89 == *MEMORY[0x24BEB9958])
        {
          LODWORD(v129) = v84;
          (*(void (**)(uint64_t *, uint64_t))(v86 + 96))(v87, v88);
          v91 = v87[1];
          v132 = (_QWORD *)*v87;
          swift_release();
          v92 = v120;
          v93 = sub_23F61B770();
          v94 = (uint64_t)v109;
          sub_23F3684B0((uint64_t)v132, v91, v93);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v121 + 8))(v92, v114);
          v95 = *(void (**)(_QWORD, _QWORD))(v44 + 8);
          v95(v131, v47);
          v95(v90, v47);
          if (sub_23F36195C(v94, 1, v47) == 1)
          {
            v96 = swift_allocBox();
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v86 + 104))(v97, *MEMORY[0x24BEB9940], v88);
            *v110 = v96;
            (*(void (**)(void))(v44 + 104))();
            sub_23F3625D8(v94, &qword_256E701F0);
          }
          else
          {
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v44 + 32))(v110, v94, v47);
          }
          return;
        }
        (*(void (**)(char *, uint64_t))(v121 + 8))(v120, v114);
        (*(void (**)(uint64_t *, uint64_t))(v86 + 8))(v87, v88);
        swift_release();
LABEL_30:
        type metadata accessor for ExpressionEvaluatorError(0);
        sub_23F3612C0(&qword_256E73B60, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621684);
        swift_allocError();
        v99 = v98;
        v100 = v98 + *(int *)(sub_23F35D2E8(&qword_256E73B78) + 48);
        ((void (*)(uint64_t, char *, uint64_t))v45)(v99, v90, v47);
        v101 = v100;
        v102 = v131;
        ((void (*)(uint64_t, char *, uint64_t))v45)(v101, v131, v47);
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        v103 = *(void (**)(_QWORD, _QWORD))(v44 + 8);
        v103(v102, v47);
        v103(v90, v47);
        return;
      }
      (*(void (**)(char *, uint64_t))(v121 + 8))(v120, v82);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v67, v47);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v78, v47);
    }
    v90 = v133;
    goto LABEL_30;
  }
}

void sub_23F42C688(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(_QWORD, _QWORD);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char *v45;
  void (*v46)(uint64_t, char *, uint64_t);
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t (*v58)(uint64_t, uint64_t);
  int v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double *v66;
  double v67;
  double *v68;
  double *v69;
  int v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  BOOL *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(_QWORD, _QWORD);

  v99 = a1;
  v89 = a2;
  v3 = sub_23F61B8A8();
  v90 = *(_QWORD *)(v3 - 8);
  v91 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v88 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_23F35D2E8(&qword_256E73B80);
  MEMORY[0x24BDAC7A8](v93);
  v98 = (uint64_t)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_23F61A60C();
  v96 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v97 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F617D08();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TranscriptValueFetcher(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v92 = sub_23F61B92C();
  v95 = *(_QWORD *)(v92 - 8);
  v17 = MEMORY[0x24BDAC7A8](v92);
  v86 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v87 = (char *)&v83 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v83 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v83 - v24;
  v26 = sub_23F61B164();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v13, v2, v26);
  *(_QWORD *)&v13[*(int *)(v11 + 20)] = *(_QWORD *)(v2
                                                  + *(int *)(type metadata accessor for ExpressionEvaluator(0) + 20));
  sub_23F617BA0();
  sub_23F61A618();
  sub_23F5F7CC8((uint64_t)v10, v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v27 = (uint64_t)v13;
  v28 = v25;
  sub_23F3663AC(v27, type metadata accessor for TranscriptValueFetcher);
  v29 = v100;
  sub_23F374500(0xD000000000000092, 0x800000023F6349A0, 48, 0x666572506C617665, 0xEE00293A5F287869);
  sub_23F3625D8((uint64_t)v16, &qword_256E701F0);
  if (!v29)
  {
    v84 = (uint64_t *)v23;
    v30 = v97;
    sub_23F61A45C();
    v31 = v98;
    v32 = v98 + *(int *)(v93 + 48);
    v33 = v96;
    v34 = v30;
    v35 = v94;
    v100 = *(void (**)(_QWORD, _QWORD))(v96 + 16);
    ((void (*)(uint64_t, char *, uint64_t))v100)(v98, v34, v94);
    v36 = v95;
    v37 = v92;
    v38 = *(void (**)(uint64_t, char *, uint64_t))(v95 + 16);
    v38(v32, v28, v92);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 88))(v31, v35);
    v40 = *MEMORY[0x24BE55750];
    v41 = v35;
    v42 = v37;
    v43 = v36;
    v85 = v28;
    if (v39 == v40)
    {
      v44 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))((char *)v32, v37);
      v45 = (char *)v32;
      v46 = v38;
      if (v44 == *MEMORY[0x24BEB9A00])
      {
        LODWORD(v93) = v44;
        v47 = v84;
        v38((uint64_t)v84, v45, v37);
        (*(void (**)(uint64_t *, uint64_t))(v43 + 96))(v47, v37);
        v99 = *v47;
        v48 = swift_projectBox();
        v50 = v90;
        v49 = v91;
        v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 88))(v48, v91);
        if ((_DWORD)v51 == *MEMORY[0x24BEB9948])
        {
          v52 = v51;
          v100 = *(void (**)(_QWORD, _QWORD))(v96 + 8);
          v100(v97, v41);
          v53 = *(void (**)(char *, uint64_t))(v95 + 8);
          v53(v85, v42);
          v54 = v88;
          (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v88, v48, v49);
          (*(void (**)(char *, uint64_t))(v50 + 96))(v54, v49);
          v55 = *(_QWORD *)v54;
          v56 = swift_allocBox();
          *v57 = v55;
          (*(void (**)(_QWORD *, uint64_t, uint64_t))(v50 + 104))(v57, v52, v49);
LABEL_15:
          *v89 = v56;
          (*(void (**)(void))(v95 + 104))();
          swift_release();
          v53(v45, v42);
          v100(v98, v94);
          return;
        }
        goto LABEL_16;
      }
LABEL_17:
      type metadata accessor for ExpressionEvaluatorError(0);
      v76 = v43;
      sub_23F3612C0(&qword_256E73B60, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621684);
      swift_allocError();
      v78 = v77;
      v79 = v77 + *(int *)(sub_23F35D2E8(qword_256E73B88) + 48);
      v80 = v97;
      ((void (*)(uint64_t, char *, uint64_t))v100)(v78, v97, v41);
      v81 = v79;
      v82 = v85;
      v46(v81, v85, v42);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v80, v41);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v82, v42);
      sub_23F3625D8(v98, &qword_256E73B80);
      return;
    }
    if (v39 == *MEMORY[0x24BE55758])
    {
      v58 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 88);
      v45 = (char *)v32;
      v59 = v58(v32, v37);
      v46 = v38;
      if (v59 != *MEMORY[0x24BEB9A00])
        goto LABEL_17;
      LODWORD(v93) = v59;
      v60 = (uint64_t *)v87;
      v38((uint64_t)v87, v45, v37);
      (*(void (**)(uint64_t *, uint64_t))(v43 + 96))(v60, v37);
      v99 = *v60;
      v61 = swift_projectBox();
      v63 = v90;
      v62 = v91;
      v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 88))(v61, v91);
      if ((_DWORD)v64 != *MEMORY[0x24BEB9948])
      {
LABEL_16:
        v43 = v95;
        swift_release();
        goto LABEL_17;
      }
      v65 = v64;
      v100 = *(void (**)(_QWORD, _QWORD))(v96 + 8);
      v100(v97, v41);
      v53 = *(void (**)(char *, uint64_t))(v95 + 8);
      v53(v85, v42);
      v66 = (double *)v88;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v88, v61, v62);
      (*(void (**)(double *, uint64_t))(v63 + 96))(v66, v62);
      v67 = *v66;
      v56 = swift_allocBox();
      v69 = v68;
      *v68 = -v67;
    }
    else
    {
      v45 = (char *)v32;
      v46 = v38;
      if (v39 != *MEMORY[0x24BE55748])
        goto LABEL_17;
      v70 = (*(uint64_t (**)(char *, uint64_t))(v43 + 88))(v45, v37);
      if (v70 != *MEMORY[0x24BEB9A00])
        goto LABEL_17;
      LODWORD(v93) = v70;
      v71 = (uint64_t *)v86;
      v38((uint64_t)v86, v45, v37);
      (*(void (**)(uint64_t *, uint64_t))(v43 + 96))(v71, v37);
      v99 = *v71;
      v72 = swift_projectBox();
      v63 = v90;
      v62 = v91;
      v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 88))(v72, v91);
      if ((_DWORD)v73 != *MEMORY[0x24BEB9928])
        goto LABEL_16;
      v65 = v73;
      v100 = *(void (**)(_QWORD, _QWORD))(v96 + 8);
      v100(v97, v41);
      v53 = *(void (**)(char *, uint64_t))(v95 + 8);
      v53(v85, v42);
      v74 = v88;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v88, v72, v62);
      (*(void (**)(char *, uint64_t))(v63 + 96))(v74, v62);
      LOBYTE(v74) = *v74;
      v56 = swift_allocBox();
      v69 = (double *)v75;
      *v75 = (v74 & 1) == 0;
    }
    (*(void (**)(double *, uint64_t, uint64_t))(v63 + 104))(v69, v65, v62);
    goto LABEL_15;
  }
}

void sub_23F42CEAC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  double **v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t (*v45)(char *, uint64_t);
  int v46;
  int v47;
  double *v48;
  void (*v49)(double **, uint64_t);
  double *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, _QWORD *);
  _QWORD *v54;
  int v55;
  void (*v56)(double *, uint64_t, _QWORD *);
  void (*v57)(double *, _QWORD *);
  double v58;
  _QWORD *v59;
  int v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  double *v67;
  double v68;
  uint64_t v69;
  double *v70;
  _QWORD *v71;
  void (*v72)(_QWORD *, uint64_t);
  uint64_t v73;
  _QWORD *v74;
  void (*v75)(uint64_t *, uint64_t);
  uint64_t v76;
  uint64_t *v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, void (*)(_QWORD, _QWORD));
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  void (*v94)(char **, uint64_t, _QWORD *);
  char **v95;
  void (*v96)(char **, _QWORD *);
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  uint64_t v100;
  int v101;
  char *v102;
  uint64_t v103;
  int v104;
  double *v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  _QWORD *v110;
  void (*v111)(_QWORD *, uint64_t);
  char *v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t *v117;
  char *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t *, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  void (*v139)(char *, uint64_t, uint64_t);
  void (*v140)(char *, _QWORD);
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  double *v146;
  char *v147;
  uint64_t *v148;
  char *v149;
  uint64_t v150;
  char **v151;
  uint64_t v152;
  char *v153;
  uint64_t *v154;
  void (*v155)(uint64_t, uint64_t);
  char *v156;
  char *v157;
  uint64_t v158;
  void (*v159)(char *, uint64_t, uint64_t);
  char *v160;
  _QWORD *v161;
  double *v162;
  _QWORD *v163;
  int v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;

  v154 = a3;
  v171 = a2;
  v168 = a1;
  v3 = sub_23F35D2E8(&qword_256E701F0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v145 = (uint64_t)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v152 = (uint64_t)&v143 - v6;
  v7 = sub_23F35D2E8(&qword_256E702C8);
  MEMORY[0x24BDAC7A8](v7);
  v147 = (char *)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_23F61B9EC();
  v150 = *(_QWORD *)(v158 - 8);
  v9 = MEMORY[0x24BDAC7A8](v158);
  v149 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v144 = (char *)&v143 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v148 = (uint64_t *)((char *)&v143 - v13);
  v14 = sub_23F61B6E0();
  v15 = *(char **)(v14 - 8);
  v155 = (void (*)(uint64_t, uint64_t))v14;
  v156 = v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v153 = (char *)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v159 = (void (*)(char *, uint64_t, uint64_t))((char *)&v143 - v19);
  MEMORY[0x24BDAC7A8](v18);
  v157 = (char *)&v143 - v20;
  v163 = (_QWORD *)sub_23F61B8A8();
  v165 = *(v163 - 1);
  v21 = MEMORY[0x24BDAC7A8](v163);
  v151 = (char **)((char *)&v143 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = MEMORY[0x24BDAC7A8](v21);
  v146 = (double *)((char *)&v143 - v24);
  MEMORY[0x24BDAC7A8](v23);
  v162 = (double *)((char *)&v143 - v25);
  v26 = sub_23F61B92C();
  v27 = *(_QWORD **)(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (uint64_t *)((char *)&v143 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v143 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v143 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v38 = (double **)((char *)&v143 - v37);
  v39 = sub_23F35D2E8(&qword_256E73B68);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v143 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = &v42[*(int *)(v40 + 48)];
  v44 = (void (*)(char *, uint64_t, uint64_t))v27[2];
  v44(v42, v168, v26);
  v166 = v43;
  v44(v43, v171, v26);
  v45 = (uint64_t (*)(char *, uint64_t))v27[11];
  v46 = v45(v42, v26);
  v47 = *MEMORY[0x24BEB9A00];
  v167 = v26;
  v161 = v27;
  if (v46 == v47)
  {
    v158 = (uint64_t)v36;
    v159 = v44;
    v48 = v162;
    v156 = v33;
    v164 = v46;
    v160 = v42;
    v44((char *)v38, (uint64_t)v42, v26);
    v49 = (void (*)(double **, uint64_t))v27[12];
    v49(v38, v26);
    v50 = *v38;
    v51 = swift_projectBox();
    v52 = v165;
    v53 = *(uint64_t (**)(uint64_t, _QWORD *))(v165 + 88);
    v54 = v163;
    v55 = v53(v51, v163);
    if (v55 == *MEMORY[0x24BEB9948])
    {
      v155 = (void (*)(uint64_t, uint64_t))v49;
      LODWORD(v157) = v55;
      v56 = *(void (**)(double *, uint64_t, _QWORD *))(v52 + 16);
      v56(v48, v51, v54);
      v57 = *(void (**)(double *, _QWORD *))(v52 + 96);
      v57(v48, v54);
      v58 = *v48;
      v59 = v166;
      v60 = v45((char *)v166, v26);
      if (v60 == v164)
      {
        v162 = v50;
        v61 = v158;
        v62 = v159;
        v159((char *)v158, (uint64_t)v59, v26);
        v155(v61, v26);
        v63 = swift_projectBox();
        v64 = v53(v63, v54);
        v65 = v157;
        if (v64 == (_DWORD)v157)
        {
          v66 = v26;
          v67 = v146;
          v56(v146, v63, v54);
          v57(v67, v54);
          v68 = *v67;
          v69 = swift_allocBox();
          *v70 = v58 + v68;
          (*(void (**)(double *, uint64_t, _QWORD *))(v165 + 104))(v70, v65, v54);
          *v154 = v69;
          v71 = v161;
          ((void (*)(void))v161[13])();
          swift_release();
          swift_release();
          v72 = (void (*)(_QWORD *, uint64_t))v71[1];
          v72(v59, v66);
          v72(v160, v66);
          return;
        }
        swift_release();
        swift_release();
        v42 = v160;
        v44 = v62;
        goto LABEL_26;
      }
    }
    else if (v55 == *MEMORY[0x24BEB9958])
    {
      v155 = (void (*)(uint64_t, uint64_t))v49;
      LODWORD(v157) = v55;
      v162 = v50;
      v94 = *(void (**)(char **, uint64_t, _QWORD *))(v52 + 16);
      v95 = v151;
      v94(v151, v51, v54);
      v96 = *(void (**)(char **, _QWORD *))(v52 + 96);
      v96(v95, v54);
      v98 = *v95;
      v97 = (uint64_t)v95[1];
      v99 = v166;
      v100 = v167;
      v101 = v45((char *)v166, v167);
      if (v101 == v164)
      {
        v153 = v98;
        v158 = v97;
        v102 = v156;
        v159(v156, (uint64_t)v99, v100);
        v155((uint64_t)v102, v100);
        v103 = swift_projectBox();
        v104 = v53(v103, v54);
        if (v104 == (_DWORD)v157)
        {
          v105 = v146;
          v94((char **)v146, v103, v54);
          v96((char **)v105, v54);
          v106 = swift_allocBox();
          v108 = v107;
          v169 = v153;
          v170 = v158;
          sub_23F617BA0();
          sub_23F61C280();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v109 = v170;
          *v108 = v169;
          v108[1] = v109;
          (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v165 + 104))(v108, v157, v54);
          *v154 = v106;
          v110 = v161;
          ((void (*)(void))v161[13])();
          swift_release();
          swift_release();
          v111 = (void (*)(_QWORD *, uint64_t))v110[1];
          v111(v166, v100);
          v111(v160, v100);
          return;
        }
        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
      }
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    swift_release();
LABEL_25:
    v44 = v159;
    v42 = v160;
    goto LABEL_26;
  }
  if (v46 != *MEMORY[0x24BEB9988])
  {
LABEL_26:
    type metadata accessor for ExpressionEvaluatorError(0);
    sub_23F3612C0(&qword_256E73B60, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621684);
    swift_allocError();
    v125 = v124;
    v126 = sub_23F35D2E8(&qword_256E73B70);
    v127 = (char *)(v125 + *(int *)(v126 + 48));
    v128 = (char *)(v125 + *(int *)(v126 + 64));
    v129 = *MEMORY[0x24BE554C0];
    v130 = sub_23F61A438();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 104))(v125, v129, v130);
    v131 = v167;
    v44(v127, v168, v167);
    v44(v128, v171, v131);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23F3625D8((uint64_t)v42, &qword_256E73B68);
    return;
  }
  v164 = v46;
  v160 = v42;
  v73 = v167;
  v44((char *)v30, (uint64_t)v42, v167);
  v74 = v161;
  v75 = (void (*)(uint64_t *, uint64_t))v161[12];
  v75(v30, v73);
  v76 = *v30;
  v77 = v166;
  v78 = v45((char *)v166, v73);
  if (v78 != v164)
  {
    swift_release();
    v42 = v160;
    goto LABEL_26;
  }
  v171 = v76;
  v79 = swift_projectBox();
  v75(v77, v73);
  v80 = *v77;
  v81 = swift_projectBox();
  v82 = (void (*)(char *, uint64_t, void (*)(_QWORD, _QWORD)))*((_QWORD *)v156 + 2);
  v83 = v79;
  v84 = v155;
  v82(v157, v83, v155);
  v82((char *)v159, v81, v84);
  v85 = sub_23F61B6D4();
  v86 = v152;
  sub_23F36FD38(v85, v152);
  swift_bridgeObjectRelease();
  v87 = sub_23F36195C(v86, 1, v73);
  v168 = v80;
  if (v87 == 1)
  {
    sub_23F3625D8(v86, &qword_256E701F0);
    v88 = 1;
    v90 = v158;
    v89 = (char *)v159;
    v91 = v150;
    v92 = v155;
    v93 = (uint64_t)v147;
  }
  else
  {
    v93 = (uint64_t)v147;
    sub_23F61B8CC();
    ((void (*)(uint64_t, uint64_t))v74[1])(v86, v73);
    v88 = 0;
    v90 = v158;
    v89 = (char *)v159;
    v91 = v150;
    v92 = v155;
  }
  sub_23F36196C(v93, v88, 1, v90);
  v112 = v153;
  v82(v153, (uint64_t)v89, v92);
  if (sub_23F36195C(v93, 1, v90) == 1)
  {
    v113 = sub_23F61B6D4();
    v114 = v145;
    sub_23F36FD38(v113, v145);
    swift_bridgeObjectRelease();
    v115 = sub_23F36195C(v114, 1, v73);
    v116 = v91;
    v117 = v148;
    if (v115 == 1)
    {
      v118 = v112;
      v119 = (_QWORD *)*((_QWORD *)v156 + 1);
      ((void (*)(char *, _QWORD))v119)(v118, v92);
      sub_23F3625D8(v114, &qword_256E701F0);
      v120 = sub_23F61B9BC();
      v121 = swift_allocBox();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v120 - 8) + 104))(v122, *MEMORY[0x24BEB9CA8], v120);
      *v117 = v121;
      v90 = v158;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v116 + 104))(v117, *MEMORY[0x24BEB9D18], v158);
    }
    else
    {
      v132 = v144;
      sub_23F61B8CC();
      v133 = v112;
      v119 = (_QWORD *)*((_QWORD *)v156 + 1);
      ((void (*)(char *, _QWORD))v119)(v133, v92);
      ((void (*)(uint64_t, uint64_t))v161[1])(v114, v73);
      v90 = v158;
      (*(void (**)(uint64_t *, char *, uint64_t))(v116 + 32))(v117, v132, v158);
    }
    v163 = v119;
    sub_23F3625D8(v93, &qword_256E702C8);
  }
  else
  {
    v163 = (_QWORD *)*((_QWORD *)v156 + 1);
    ((void (*)(char *, _QWORD))v163)(v112, v92);
    v116 = v91;
    v123 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v91 + 32);
    v117 = v148;
    v123(v148, v93, v90);
  }
  v134 = v149;
  v135 = swift_allocBox();
  v165 = v136;
  v166 = (_QWORD *)v135;
  (*(void (**)(char *, uint64_t *, uint64_t))(v116 + 16))(v134, v117, v90);
  v137 = v157;
  v138 = sub_23F61B6D4();
  v139 = (char *)v159;
  sub_23F61B6D4();
  v169 = (char *)v138;
  sub_23F387450();
  sub_23F61B6BC();
  (*(void (**)(uint64_t *, uint64_t))(v116 + 8))(v117, v158);
  v140 = (void (*)(char *, _QWORD))v163;
  ((void (*)(void (*)(char *, uint64_t, uint64_t), _QWORD))v163)((void (*)(char *, uint64_t, uint64_t))v139, v92);
  v140(v137, v92);
  v141 = v167;
  *v154 = (uint64_t)v166;
  v142 = v161;
  ((void (*)(void))v161[13])();
  swift_release();
  swift_release();
  ((void (*)(char *, uint64_t))v142[1])(v160, v141);
}

void sub_23F42DAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  type metadata accessor for ExpressionEvaluatorError(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F38F964();
  sub_23F42F3D4(v0, v3 - v2);
  v4 = (char *)sub_23F42DB28 + 4 * byte_23F6215D0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F42DB28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + *(int *)(sub_23F35D2E8(qword_256E73B88) + 48);
  v2 = sub_23F384048();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = sub_23F61A60C();
  sub_23F362B6C(v3);
  return 1;
}

void sub_23F42DC5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;

  v2 = sub_23F619FAC();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  v15 = sub_23F61A438();
  v17 = *(_QWORD *)(v15 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v16 = v4;
  v5 = sub_23F384048();
  v6 = *(_QWORD *)(v5 - 8);
  v18 = v5;
  v19 = v6;
  sub_23F362850();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v14 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v20 = (char *)&v14 - v10;
  sub_23F39C56C();
  v11 = sub_23F61A60C();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3B17BC();
  type metadata accessor for ExpressionEvaluatorError(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F362930();
  sub_23F42F3D4(v0, v1);
  v13 = (char *)sub_23F42DDB0 + 4 * word_23F6215D6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F42DDB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 *inited;
  __n128 *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;

  v5 = v2 + *(int *)(sub_23F35D2E8(qword_256E73B88) + 48);
  (*(void (**)(uint64_t, uint64_t, unint64_t))(v1 + 32))(v4, v2, v3);
  v7 = v0[5];
  v6 = v0[6];
  v8 = v0[4];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
  sub_23F35D2E8(qword_256E71B18);
  inited = (__n128 *)swift_initStackObject();
  v10 = sub_23F42F428(inited, (__n128)xmmword_23F61E980);
  inited[4].n128_u64[1] = v3;
  v11 = sub_23F36145C((uint64_t *)v10);
  (*(void (**)(uint64_t *, uint64_t, unint64_t))(v1 + 16))(v11, v4, v3);
  v12 = sub_23F42F448((uint64_t *)&inited[6], 0x65756C6176);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v12, v6, v8);
  v13 = sub_23F42F440();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, unint64_t))(v1 + 8))(v4, v3);
  return v13;
}

uint64_t sub_23F42E2AC()
{
  sub_23F3612C0(&qword_256E73CC8, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621644);
  return sub_23F61CCAC();
}

uint64_t sub_23F42E2EC()
{
  sub_23F3612C0(&qword_256E73CC8, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621644);
  return sub_23F61CCA0();
}

uint64_t sub_23F42E32C()
{
  uint64_t v0;

  v0 = qword_256E73B50;
  sub_23F617BA0();
  return v0;
}

uint64_t sub_23F42E368(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F42E3C0 + 4 * byte_23F6215E2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_23F42E5CC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_23F61A60C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      a1 += *(int *)(sub_23F35D2E8(qword_256E73B88) + 48);
      goto LABEL_3;
    case 1:
      v5 = sub_23F61A438();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      v6 = sub_23F35D2E8(&qword_256E73B70);
      v7 = a1 + *(int *)(v6 + 48);
      v8 = sub_23F61B92C();
      v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v12(v7, v8);
      v9 = a1 + *(int *)(v6 + 64);
      v10 = v8;
      goto LABEL_7;
    case 2:
      v4 = sub_23F61A438();
      goto LABEL_9;
    case 3:
LABEL_3:
      v4 = sub_23F61B92C();
      goto LABEL_9;
    case 4:
      v11 = sub_23F61B92C();
      v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
      v12(a1, v11);
      v9 = a1 + *(int *)(sub_23F35D2E8(&qword_256E73B78) + 48);
      v10 = v11;
LABEL_7:
      result = ((uint64_t (*)(uint64_t, uint64_t))v12)(v9, v10);
      break;
    case 5:
      v4 = sub_23F619FAC();
LABEL_9:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
    default:
      return result;
  }
  return result;
}

void sub_23F42E748()
{
  char *v0;

  v0 = (char *)sub_23F42E79C + 4 * byte_23F6215EE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F42E79C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F61A60C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  v3 = *(int *)(sub_23F35D2E8(qword_256E73B88) + 48);
  v4 = v0 + v3;
  v5 = v1 + v3;
  v6 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v5, v6);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23F42E918(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F3663AC(result, type metadata accessor for ExpressionEvaluatorError);
    v2 = (char *)&loc_23F42E984 + 4 * byte_23F6215F4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_23F42EB00()
{
  char *v0;

  v0 = (char *)sub_23F42EB54 + 4 * byte_23F6215FA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F42EB54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F61A60C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = *(int *)(sub_23F35D2E8(qword_256E73B88) + 48);
  v4 = v0 + v3;
  v5 = v1 + v3;
  v6 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v4, v5, v6);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23F42ECD0(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F3663AC(result, type metadata accessor for ExpressionEvaluatorError);
    v2 = (char *)&loc_23F42ED3C + 4 * byte_23F621600[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23F42EEB8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  char v12;
  char v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;

  v0 = sub_23F61A60C();
  if (v1 <= 0x3F)
  {
    v2 = sub_23F61B92C();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      v4 = *(_QWORD *)(v2 - 8) + 64;
      swift_getTupleTypeLayout2();
      v14 = &v13;
      v5 = sub_23F61A438();
      v0 = v5;
      if (v6 <= 0x3F)
      {
        v7 = *(_QWORD *)(v5 - 8) + 64;
        swift_getTupleTypeLayout3();
        v15 = &v12;
        v16 = v7;
        v17 = v4;
        swift_getTupleTypeLayout2();
        v18 = &v11;
        v8 = sub_23F619FAC();
        v0 = v8;
        if (v9 <= 0x3F)
        {
          v19 = *(_QWORD *)(v8 - 8) + 64;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return v0;
}

uint64_t *sub_23F42EFD4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B164();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    sub_23F617BA0();
  }
  return a1;
}

uint64_t sub_23F42F060(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61B164();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F42F0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F42F104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F42F170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23F42F1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F42F230()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F42F23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F61B164();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F42F2B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F42F2C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23F61B164();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23F42F334()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B164();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23F42F3A8()
{
  sub_23F3612C0(&qword_256E73B60, type metadata accessor for ExpressionEvaluatorError, (uint64_t)&unk_23F621684);
}

uint64_t sub_23F42F3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExpressionEvaluatorError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F42F418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

__n128 *sub_23F42F428(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  __n128 *result;

  a1[1] = a2;
  result = a1 + 3;
  *(_QWORD *)(v2 + 32) = 28783;
  *(_QWORD *)(v2 + 40) = 0xE200000000000000;
  return result;
}

uint64_t sub_23F42F440()
{
  return sub_23F61BFEC();
}

uint64_t *sub_23F42F448@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v2[10] = a2;
  v2[11] = 0xE500000000000000;
  v2[15] = v3;
  return sub_23F36145C(a1);
}

uint64_t sub_23F42F458()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F42F468()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F42F478(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t destroy for FallbackDialogGenerator(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
}

ValueMetadata *type metadata accessor for FallbackDialogGenerator()
{
  return &type metadata for FallbackDialogGenerator;
}

uint64_t sub_23F42F4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_23F432514(a1, (uint64_t)sub_23F4324E0, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_23F42F520(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t i;
  uint64_t v27;
  int64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _OWORD v32[2];
  _OWORD v33[2];
  _OWORD v34[2];
  __int128 v35;
  _OWORD v36[2];
  __int128 v37;
  _OWORD v38[2];
  _QWORD v39[6];
  uint64_t v40;

  v1 = MEMORY[0x24BEE4B00];
  v40 = MEMORY[0x24BEE4B00];
  sub_23F38231C(a1, v39);
  v2 = v39[0];
  v3 = v39[3];
  v4 = v39[4];
  v27 = v39[1];
  v28 = (unint64_t)(v39[2] + 64) >> 6;
  result = sub_23F617BA0();
  for (i = v2; ; v2 = i)
  {
    while (1)
    {
      if (v4)
      {
        v6 = __clz(__rbit64(v4));
        v4 &= v4 - 1;
        v7 = v6 | (v3 << 6);
      }
      else
      {
        v8 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_41;
        if (v8 >= v28)
          goto LABEL_39;
        v9 = *(_QWORD *)(v27 + 8 * v8);
        v10 = v3 + 1;
        if (!v9)
        {
          v10 = v3 + 2;
          if (v3 + 2 >= v28)
            goto LABEL_39;
          v9 = *(_QWORD *)(v27 + 8 * v10);
          if (!v9)
          {
            v10 = v3 + 3;
            if (v3 + 3 >= v28)
              goto LABEL_39;
            v9 = *(_QWORD *)(v27 + 8 * v10);
            if (!v9)
            {
              v10 = v3 + 4;
              if (v3 + 4 >= v28)
                goto LABEL_39;
              v9 = *(_QWORD *)(v27 + 8 * v10);
              if (!v9)
              {
                v10 = v3 + 5;
                if (v3 + 5 >= v28)
                  goto LABEL_39;
                v9 = *(_QWORD *)(v27 + 8 * v10);
                if (!v9)
                {
                  v11 = v3 + 6;
                  while (v11 < v28)
                  {
                    v9 = *(_QWORD *)(v27 + 8 * v11++);
                    if (v9)
                    {
                      v10 = v11 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_39:
                  sub_23F382E18();
                  return v1;
                }
              }
            }
          }
        }
LABEL_19:
        v4 = (v9 - 1) & v9;
        v7 = __clz(__rbit64(v9)) + (v10 << 6);
        v3 = v10;
      }
      v12 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v7);
      v14 = *v12;
      v13 = v12[1];
      sub_23F382B64(*(_QWORD *)(v2 + 56) + 32 * v7, (uint64_t)v38);
      *(_QWORD *)&v37 = v14;
      *((_QWORD *)&v37 + 1) = v13;
      v35 = v37;
      v36[0] = v38[0];
      v36[1] = v38[1];
      sub_23F382B64((uint64_t)v36, (uint64_t)&v31);
      sub_23F617BA0();
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        sub_23F382B64((uint64_t)v36, (uint64_t)&v31);
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v31);
        goto LABEL_24;
      }
      sub_23F382B64((uint64_t)v36, (uint64_t)&v31);
      sub_23F382A70(&v31, v33);
      sub_23F35D2E8(&qword_256E70580);
      if ((swift_dynamicCast() & 1) != 0)
        break;
      v29 = 0u;
      v30 = 0u;
LABEL_30:
      sub_23F3CFCB0((uint64_t)&v35, &qword_256E73D48);
      result = sub_23F3CFCB0((uint64_t)&v29, &qword_256E6FC98);
    }
    swift_bridgeObjectRelease();
LABEL_24:
    sub_23F382B64((uint64_t)v36, (uint64_t)&v29);
    if (!*((_QWORD *)&v30 + 1))
      goto LABEL_30;
    sub_23F382A70(&v29, v34);
    v15 = v35;
    v31 = v35;
    sub_23F382A70(v36, v32);
    sub_23F382A70(v34, v33);
    v16 = *(_QWORD *)(v1 + 16);
    if (*(_QWORD *)(v1 + 24) <= v16)
    {
      sub_23F514DCC(v16 + 1, 1);
      v1 = v40;
    }
    sub_23F61CD30();
    sub_23F61C22C();
    result = sub_23F61CD60();
    v17 = v1 + 64;
    v18 = -1 << *(_BYTE *)(v1 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v1 + 64 + 8 * (v19 >> 6))) == 0)
      break;
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v1 + 64 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_38:
    *(_QWORD *)(v17 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_OWORD *)(*(_QWORD *)(v1 + 48) + 16 * v21) = v15;
    sub_23F382A70(v33, (_OWORD *)(*(_QWORD *)(v1 + 56) + 32 * v21));
    ++*(_QWORD *)(v1 + 16);
    result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v32);
  }
  v22 = 0;
  v23 = (unint64_t)(63 - v18) >> 6;
  while (++v20 != v23 || (v22 & 1) == 0)
  {
    v24 = v20 == v23;
    if (v20 == v23)
      v20 = 0;
    v22 |= v24;
    v25 = *(_QWORD *)(v17 + 8 * v20);
    if (v25 != -1)
    {
      v21 = __clz(__rbit64(~v25)) + (v20 << 6);
      goto LABEL_38;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23F42F954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  return sub_23F362A4C();
}

uint64_t sub_23F42F968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 104) + 16);
  *(_QWORD *)(v0 + 112) = v1;
  if (!v1)
    return sub_23F4328D4(MEMORY[0x24BEE4AF8], *(uint64_t (**)(void))(v0 + 8));
  *(_DWORD *)(v0 + 84) = *(_DWORD *)(*(_QWORD *)(sub_23F61B92C() - 8) + 80);
  sub_23F4329C0();
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 128) = 0;
  *(_QWORD *)(v0 + 136) = v2;
  *(_QWORD *)(v0 + 120) = v3;
  sub_23F383738();
  v4 = (_QWORD *)sub_23F432A40();
  *(_QWORD *)(v0 + 144) = v4;
  *v4 = v0;
  v4[1] = sub_23F42FA18;
  v5 = sub_23F432B04();
  return sub_23F4328E0(v5, v6, v7);
}

uint64_t sub_23F42FA18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  sub_23F3B2010(&v4);
  *(_QWORD *)(v2 + 152) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F42FA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, unint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v21 = *(_QWORD *)(v0 + 64);
  v22 = *(_QWORD *)(v0 + 16);
  v20 = *(_QWORD *)(v0 + 72);
  v19 = *(_BYTE *)(v0 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *(_QWORD *)(v0 + 136);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23F432A94();
    sub_23F3778CC();
    v7 = v17;
  }
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 >= *(_QWORD *)(v7 + 24) >> 1)
  {
    sub_23F3778CC();
    v7 = v18;
  }
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 128) + 1;
  *(_QWORD *)(v7 + 16) = v8 + 1;
  v11 = v7 + 72 * v8;
  *(_QWORD *)(v11 + 32) = v22;
  *(_QWORD *)(v11 + 40) = v1;
  *(_QWORD *)(v11 + 48) = v2;
  *(_QWORD *)(v11 + 56) = v3;
  *(_QWORD *)(v11 + 64) = v4;
  *(_QWORD *)(v11 + 72) = v5;
  *(_QWORD *)(v11 + 80) = v21;
  *(_QWORD *)(v11 + 88) = v20;
  *(_BYTE *)(v11 + 96) = v19;
  if (v10 == v9)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 128) + 1;
    *(_QWORD *)(v0 + 128) = v14;
    *(_QWORD *)(v0 + 136) = v7;
    v15 = *(_QWORD *)(v0 + 104)
        + ((*(unsigned __int8 *)(v0 + 84) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 84))
        + v13 * v14;
    v23 = (uint64_t (*)(uint64_t, unint64_t))(**(int **)(v0 + 88) + *(_QWORD *)(v0 + 88));
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v16;
    *v16 = v0;
    v16[1] = sub_23F42FA18;
    return v23(v0 + 16, v15);
  }
}

uint64_t sub_23F42FC14()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F42FC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return sub_23F362A4C();
}

uint64_t sub_23F42FC54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 16);
  *(_QWORD *)(v0 + 64) = v1;
  if (!v1)
    return sub_23F4328D4(MEMORY[0x24BEE4AF8], *(uint64_t (**)(void))(v0 + 8));
  *(_DWORD *)(v0 + 112) = *(_DWORD *)(*(_QWORD *)(sub_23F61B92C() - 8) + 80);
  sub_23F4329C0();
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 72) = v3;
  sub_23F383738();
  v4 = sub_23F432A40();
  v5 = (_QWORD *)sub_23F432A34(v4);
  *v5 = v0;
  v5[1] = sub_23F42FD00;
  v6 = sub_23F432B04();
  return sub_23F4328E0(v6, v7, v8);
}

uint64_t sub_23F42FD00()
{
  uint64_t v0;

  sub_23F432928();
  if (v0)
    sub_23F432AF0();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F42FD44()
{
  uint64_t v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v1 = *(_QWORD *)(v0 + 16);
  v13 = *(_OWORD *)(v0 + 24);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v3 = *(_QWORD *)(v0 + 88);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23F432A94();
    sub_23F377438();
    v3 = v11;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 >= *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_23F377438();
    v3 = v12;
  }
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 80) + 1;
  *(_QWORD *)(v3 + 16) = v4 + 1;
  v7 = v3 + 24 * v4;
  *(_QWORD *)(v7 + 32) = v1;
  *(_OWORD *)(v7 + 40) = v13;
  if (v6 == v5)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  else
  {
    ++*(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 88) = v3;
    v9 = sub_23F432904();
    v10 = (_QWORD *)sub_23F432A34(v9);
    *v10 = v0;
    v10[1] = sub_23F42FD00;
    return ((uint64_t (*)(uint64_t, uint64_t))v13)(v0 + 16, v3);
  }
}

uint64_t sub_23F42FE70()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F42FE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_23F617F0C();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F42FF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(void);

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 64) = v2;
  if (v2)
  {
    v3 = *(int **)(v0 + 16);
    *(_DWORD *)(v0 + 112) = *(_DWORD *)(*(_QWORD *)(sub_23F432B24() - 8) + 80);
    sub_23F4329C0();
    v4 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v0 + 80) = 0;
    *(_QWORD *)(v0 + 88) = v4;
    *(_QWORD *)(v0 + 72) = v5;
    v7 = v1 + v6;
    v11 = (uint64_t (*)(void))((char *)v3 + *v3);
    sub_23F383738();
    v8 = swift_task_alloc();
    v9 = (_QWORD *)sub_23F432A34(v8);
    *v9 = v0;
    v9[1] = sub_23F42FFC8;
    return sub_23F4328E0(*(_QWORD *)(v0 + 56), v7, v11);
  }
  else
  {
    sub_23F432A7C();
    return sub_23F4328D4(MEMORY[0x24BEE4AF8], *(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_23F42FFC8()
{
  uint64_t v0;

  sub_23F432928();
  if (v0)
    sub_23F432AF0();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F43000C()
{
  uint64_t v0;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2 = *(_QWORD *)(v0 + 88);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23F432AAC();
    sub_23F377C60();
    v2 = v15;
  }
  v3 = *(_QWORD *)(v2 + 16);
  if (v3 >= *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_23F377C60();
    v2 = v16;
  }
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 80) + 1;
  *(_QWORD *)(v2 + 16) = v3 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v2+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v3, v4, v6);
  if (v8 == v5)
  {
    sub_23F432B4C();
    sub_23F432A7C();
    return sub_23F4328D4(v2, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    ++*(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 88) = v2;
    v10 = sub_23F432904();
    v11 = (_QWORD *)sub_23F432A34(v10);
    v12 = sub_23F432A18(v11);
    return sub_23F4328E0(v12, v13, v14);
  }
}

uint64_t sub_23F430114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_23F618C20();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F430160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int *v12;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 64) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(int **)(v0 + 16);
    v5 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 112) = v5;
    v6 = *(_QWORD *)(v3 + 72);
    v7 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v0 + 80) = 0;
    *(_QWORD *)(v0 + 88) = v7;
    *(_QWORD *)(v0 + 72) = v6;
    v8 = v1 + ((v5 + 32) & ~(unint64_t)v5);
    v12 = (int *)((char *)v4 + *v4);
    sub_23F617BA0();
    v9 = swift_task_alloc();
    v10 = (_QWORD *)sub_23F432A34(v9);
    *v10 = v0;
    v10[1] = sub_23F430238;
    return ((uint64_t (*)(_QWORD, uint64_t))v12)(*(_QWORD *)(v0 + 56), v8);
  }
  else
  {
    sub_23F432A7C();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
  }
}

uint64_t sub_23F430238()
{
  uint64_t v0;

  sub_23F432928();
  if (v0)
    sub_23F432AF0();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F43027C()
{
  uint64_t v0;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2 = *(_QWORD *)(v0 + 88);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23F432AAC();
    sub_23F377E30();
    v2 = v17;
  }
  v3 = *(_QWORD *)(v2 + 16);
  if (v3 >= *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_23F377E30();
    v2 = v18;
  }
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(unsigned __int8 *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 80) + 1;
  *(_QWORD *)(v2 + 16) = v3 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v2 + ((v5 + 32) & ~v5) + v4 * v3, v6, v8);
  if (v10 == v7)
  {
    sub_23F432B4C();
    sub_23F432A7C();
    return sub_23F4328D4(v2, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    ++*(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 88) = v2;
    v12 = sub_23F432904();
    v13 = (_QWORD *)sub_23F432A34(v12);
    v14 = sub_23F432A18(v13);
    return sub_23F4328E0(v14, v15, v16);
  }
}

uint64_t sub_23F430380()
{
  uint64_t v0;

  sub_23F432B4C();
  sub_23F362CC8();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F4303B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  sub_23F35D2E8(&qword_256E70760);
  v4[6] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F4303F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[6];
  v2 = sub_23F432B2C();
  sub_23F3838D8(v1, v3, v4, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23F430468;
  return sub_23F43051C(v0[2], v0[3], v0[4], 0, 0, v0[6]);
}

uint64_t sub_23F430468()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *v1;
  v5 = v2;
  v3 = *(_QWORD *)(v2 + 48);
  sub_23F3B2010(&v5);
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  sub_23F3CFCB0(v3, &qword_256E70760);
  if (v0)
  {
    sub_23F36679C();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    return ((uint64_t (*)(void))v1[1])();
  }
}

uint64_t sub_23F4304F0()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43051C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[12] = a6;
  v7[13] = v6;
  v7[10] = a4;
  v7[11] = a5;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  v8 = sub_23F61A0D8();
  v7[14] = v8;
  v7[15] = *(_QWORD *)(v8 - 8);
  v7[16] = sub_23F366654();
  v7[17] = sub_23F3666CC();
  v9 = sub_23F6170CC();
  v7[18] = v9;
  v7[19] = *(_QWORD *)(v9 - 8);
  v7[20] = sub_23F366654();
  v7[21] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E73CF8);
  v7[22] = sub_23F366578();
  v10 = sub_23F432B24();
  v7[23] = v10;
  v7[24] = *(_QWORD *)(v10 - 8);
  v7[25] = sub_23F366578();
  v11 = sub_23F619E98();
  v7[26] = v11;
  v7[27] = *(_QWORD *)(v11 - 8);
  v7[28] = sub_23F366654();
  v7[29] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F4305F0()
{
  int8x16_t *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int8x16_t v17;

  sub_23F3F0F00();
  v1 = sub_23F619E8C();
  v2 = sub_23F61C61C();
  if (os_log_type_enabled(v1, v2))
  {
    *(_WORD *)sub_23F366668() = 0;
    sub_23F432948(&dword_23F35A000, v1, v3, "DefaultFallbackDialogGenerator.generateFallback: Generating fallback for ResponseGenerationInput");
    sub_23F366530();
  }
  v5 = v0[11].i64[0];
  v4 = v0[11].i64[1];

  sub_23F432AF8();
  v6 = sub_23F61AD98();
  sub_23F36FF2C(v6, v5);
  sub_23F362984();
  if (sub_23F36195C(v5, 1, v4) == 1)
  {
    sub_23F3CFCB0(v0[11].i64[0], &qword_256E73CF8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[12].i64[0] + 32))(v0[12].i64[1], v0[11].i64[0], v0[11].i64[1]);
    v7 = *(_QWORD *)(sub_23F61AD98() + 16);
    swift_bridgeObjectRelease();
    if (v7 == 1)
    {
      sub_23F61AD74();
      sub_23F61AD68();
      v8 = (_QWORD *)swift_task_alloc();
      v0[15].i64[0] = (uint64_t)v8;
      *v8 = v0;
      v8[1] = sub_23F430864;
      return sub_23F431044(v0[3].i64[1], v0[12].i64[1], v0[4].i64[1], v0[5].i64[0], v0[5].i64[1], v0[6].i64[0], v0[10].i64[1], v0[8].i64[1]);
    }
    sub_23F432998();
  }
  sub_23F3F0F00();
  v10 = sub_23F619E8C();
  v11 = sub_23F61C61C();
  if (sub_23F3F0E3C(v11))
  {
    *(_WORD *)sub_23F366668() = 0;
    sub_23F432948(&dword_23F35A000, v10, v12, "DefaultFallbackDialogGenerator.generateFallback: multi tool output, using conjunction response fallback");
    sub_23F366530();
  }
  v13 = v0[6].i64[1];
  v17 = v0[4];

  sub_23F432AF8();
  v14 = sub_23F61AD98();
  v0[16].i64[0] = v14;
  v15 = swift_task_alloc();
  v0[16].i64[1] = v15;
  *(_QWORD *)(v15 + 16) = v13;
  *(int8x16_t *)(v15 + 24) = vextq_s8(v17, v17, 8uLL);
  v17.i64[0] = (uint64_t)&dword_256E73D10 + dword_256E73D10;
  v16 = (_QWORD *)swift_task_alloc();
  v0[17].i64[0] = (uint64_t)v16;
  *v16 = v0;
  v16[1] = sub_23F430944;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17.i64[0])((uint64_t)&unk_256E73D08, v15, v14);
}

uint64_t sub_23F430864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F432AC4();
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F4308FC()
{
  uint64_t (*v0)(void);

  sub_23F432AC4();
  sub_23F432998();
  sub_23F4329A8();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  v0 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F4328EC(v0);
}

uint64_t sub_23F430944()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F4329EC();
  v9 = v2;
  v10 = v3;
  v8 = v1;
  v5 = v4;
  v6 = *v1;
  v8 = (uint64_t *)*v1;
  sub_23F3B2010(&v8);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23F3666C4();
  if (v0)
  {
    swift_task_dealloc();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    return sub_23F4328BC((uint64_t (*)(void))v1[1]);
  }
  else
  {
    *(_QWORD *)(v6 + 280) = v5;
    sub_23F36679C();
    return sub_23F36664C();
  }
}

uint64_t sub_23F4309F4()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_23F361418(v0[13], (uint64_t)(v0 + 2));
  sub_23F61AD74();
  sub_23F61AD68();
  v1 = (_QWORD *)swift_task_alloc();
  v0[36] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23F430A84;
  return sub_23F3EF0C4(v0[7], v0[35], v0[20], v0[16]);
}

uint64_t sub_23F430A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F4329EC();
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  sub_23F362D18();
  sub_23F4062C8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F430B14()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23F432AC4();
  sub_23F432364(v0 + 16);
  sub_23F4329A8();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  v1 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F4328EC(v1);
}

uint64_t sub_23F430B60()
{
  uint64_t v0;

  sub_23F4329EC();
  sub_23F432364(v0 + 16);
  sub_23F4329D4();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  return sub_23F4328BC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F430BB0()
{
  uint64_t v0;

  sub_23F4329EC();
  sub_23F432998();
  sub_23F4329D4();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  return sub_23F4328BC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F430BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = sub_23F61A0D8();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v7 = sub_23F6170CC();
  v5[10] = v7;
  v5[11] = *(_QWORD *)(v7 - 8);
  v5[12] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E70760);
  v5[13] = swift_task_alloc();
  v8 = sub_23F61ACA8();
  v5[14] = v8;
  v5[15] = *(_QWORD *)(v8 - 8);
  v5[16] = swift_task_alloc();
  v9 = sub_23F61A504();
  v5[17] = v9;
  v5[18] = *(_QWORD *)(v9 - 8);
  v5[19] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E6FB18);
  v5[20] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E71CF8);
  v5[21] = swift_task_alloc();
  v10 = sub_23F617F0C();
  v5[22] = v10;
  v5[23] = *(_QWORD *)(v10 - 8);
  v5[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F430D70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v17)(void);

  sub_23F4329EC();
  v1 = v0[18];
  v2 = v0[15];
  sub_23F61AB4C();
  sub_23F432B40();
  sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F432B18();
  sub_23F4062C8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v3 = sub_23F61811C();
  v4 = sub_23F432A68(v3);
  v6 = v0[21];
  v5 = v0[22];
  if (v4 == 1)
  {
    sub_23F3CFCB0(v0[20], &qword_256E6FB18);
    sub_23F432A04();
LABEL_4:
    v7 = v0[13];
    sub_23F3CFCB0(v0[21], &qword_256E71CF8);
    v8 = sub_23F432B2C();
    sub_23F3838D8(v7, v9, v10, v8);
    sub_23F61AD74();
    sub_23F61AD68();
    v11 = (_QWORD *)swift_task_alloc();
    v0[25] = (uint64_t)v11;
    *v11 = v0;
    v11[1] = sub_23F430F00;
    return sub_23F431044(v0[2], v0[3], v0[5], 0, 0, v0[13], v0[12], v0[9]);
  }
  sub_23F618104();
  sub_23F432A54();
  if (sub_23F36195C(v6, 1, v5) == 1)
    goto LABEL_4;
  v13 = v0[24];
  v14 = v0[22];
  v15 = v0[2];
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[23] + 32);
  v16(v13, v0[21], v14);
  v16(v15, v13, v14);
  sub_23F43297C();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  v17 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F4328BC(v17);
}

uint64_t sub_23F430F00()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v7)(void);
  _QWORD *v8;

  v2 = (_QWORD *)*v1;
  v8 = v2;
  v3 = v2[13];
  v4 = v2[11];
  v5 = v2[8];
  sub_23F3B2010(&v8);
  v2[26] = v0;
  swift_task_dealloc();
  sub_23F4062C8(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F3CFCB0(v3, &qword_256E70760);
  if (v0)
  {
    sub_23F36679C();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    v7 = (uint64_t (*)(void))sub_23F384760();
    return v7();
  }
}

uint64_t sub_23F430FFC()
{
  uint64_t v0;

  sub_23F432AC4();
  sub_23F43297C();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  return sub_23F4328EC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F431044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v9[12] = a8;
  v9[13] = v8;
  v9[10] = a6;
  v9[11] = a7;
  v9[8] = a4;
  v9[9] = a5;
  v9[6] = a2;
  v9[7] = a3;
  v9[5] = a1;
  sub_23F35D2E8(&qword_256E70760);
  v9[14] = sub_23F366578();
  v10 = sub_23F61A21C();
  v9[15] = v10;
  v9[16] = *(_QWORD *)(v10 - 8);
  v9[17] = sub_23F366578();
  v9[18] = sub_23F35D2E8(&qword_256E73D20);
  v9[19] = sub_23F366578();
  sub_23F35D2E8(&qword_256E73D28);
  v9[20] = sub_23F366654();
  v9[21] = sub_23F3666CC();
  v9[22] = sub_23F3666CC();
  v11 = sub_23F618134();
  v9[23] = v11;
  v9[24] = *(_QWORD *)(v11 - 8);
  v9[25] = sub_23F366654();
  v9[26] = sub_23F3666CC();
  v9[27] = sub_23F3666CC();
  v9[28] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E73D30);
  v9[29] = sub_23F366578();
  v12 = sub_23F432B24();
  v9[30] = v12;
  v9[31] = *(_QWORD *)(v12 - 8);
  v9[32] = sub_23F366654();
  v9[33] = sub_23F3666CC();
  v13 = sub_23F619E98();
  v9[34] = v13;
  v9[35] = *(_QWORD *)(v13 - 8);
  v9[36] = sub_23F366654();
  v9[37] = sub_23F3666CC();
  v9[38] = sub_23F3666CC();
  v14 = sub_23F61ACA8();
  v9[39] = v14;
  v9[40] = *(_QWORD *)(v14 - 8);
  v9[41] = sub_23F366654();
  v9[42] = sub_23F3666CC();
  v15 = sub_23F61A504();
  v9[43] = v15;
  v9[44] = *(_QWORD *)(v15 - 8);
  v9[45] = sub_23F366654();
  v9[46] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E6FB18);
  v9[47] = sub_23F366578();
  sub_23F35D2E8(&qword_256E71CF8);
  v9[48] = sub_23F366578();
  v16 = sub_23F617F0C();
  v9[49] = v16;
  v9[50] = *(_QWORD *)(v16 - 8);
  v9[51] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F431224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(void);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  const char *v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  void (*v96)(uint64_t, uint64_t);
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  _BOOL4 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint8_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t);
  void (*v131)(uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136[2];

  v1 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 352);
  v4 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 320);
  sub_23F61AB4C();
  sub_23F432B40();
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v1, v2);
  sub_23F432B18();
  v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v8(v4, v5);
  v9 = sub_23F61811C();
  v10 = sub_23F432A68(v9);
  v12 = *(_QWORD *)(v0 + 384);
  v11 = *(_QWORD *)(v0 + 392);
  if (v10 == 1)
  {
    sub_23F3CFCB0(*(_QWORD *)(v0 + 376), &qword_256E6FB18);
    sub_23F432A04();
  }
  else
  {
    sub_23F6180EC();
    sub_23F432A54();
    if (sub_23F36195C(v12, 1, v11) != 1)
    {
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 400) + 32);
      v46(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 392));
      sub_23F3F0F00();
      v47 = sub_23F619E8C();
      v48 = sub_23F61C610();
      if (sub_23F3F0E3C(v48))
      {
        *(_WORD *)sub_23F366668() = 0;
        sub_23F432948(&dword_23F35A000, v47, v49, "DefaultFallbackDialogGenerator.generateFallback: generating fallback with provided fallback dialog.");
        sub_23F366530();
      }
      v50 = *(_QWORD *)(v0 + 408);
      v51 = *(_QWORD *)(v0 + 392);
      v52 = *(_QWORD *)(v0 + 280);
      v53 = *(_QWORD *)(v0 + 40);

      sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 8));
      v46(v53, v50, v51);
      sub_23F432958();
      swift_task_dealloc();
      sub_23F3666C4();
      sub_23F3666EC();
      sub_23F366708();
      sub_23F3666E4();
      sub_23F366698();
      sub_23F3666D4();
      sub_23F3666A0();
      sub_23F362CC8();
      sub_23F3666DC();
      sub_23F3668D4();
      sub_23F383980();
      sub_23F3667E0();
      sub_23F383898();
      sub_23F383978();
      sub_23F383970();
      sub_23F383890();
      sub_23F383888();
      sub_23F383880();
      sub_23F383878();
      sub_23F383870();
      swift_task_dealloc();
      swift_task_dealloc();
      v54 = (uint64_t (*)(void))sub_23F384760();
      return v54();
    }
  }
  v130 = v8;
  v131 = v7;
  v13 = *(_QWORD *)(v0 + 264);
  v14 = *(_QWORD *)(v0 + 240);
  v15 = *(_QWORD *)(v0 + 248);
  v16 = *(_QWORD *)(v0 + 72);
  v17 = *(_QWORD *)(v0 + 48);
  sub_23F3CFCB0(*(_QWORD *)(v0 + 384), &qword_256E71CF8);
  sub_23F3F0F00();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v19 = v17;
  v20 = v16;
  v18(v13, v19, v14);
  swift_bridgeObjectRetain_n();
  v21 = sub_23F619E8C();
  v22 = sub_23F61C610();
  v23 = sub_23F3F0E3C(v22);
  v24 = *(_QWORD *)(v0 + 296);
  v25 = *(_QWORD *)(v0 + 280);
  v133 = *(_QWORD *)(v0 + 272);
  v26 = *(_QWORD *)(v0 + 264);
  if (v23)
  {
    v128 = *(_QWORD *)(v0 + 248);
    v126 = *(_QWORD *)(v0 + 256);
    v127 = *(_QWORD *)(v0 + 240);
    v28 = *(_QWORD *)(v0 + 64);
    v27 = *(_QWORD *)(v0 + 72);
    v29 = sub_23F366668();
    v136[0] = sub_23F366668();
    *(_DWORD *)v29 = 136315394;
    if (v27)
    {
      v30 = v20;
    }
    else
    {
      v28 = 7104878;
      v30 = 0xE300000000000000;
    }
    sub_23F617BA0();
    sub_23F37AE00(v28, v30, v136);
    *(_QWORD *)(v0 + 24) = v31;
    sub_23F61C790();
    sub_23F362D08();
    sub_23F432B34();
    *(_WORD *)(v29 + 12) = 2080;
    v18(v126, v26, v127);
    v32 = sub_23F61C16C();
    sub_23F37AE00(v32, v33, v136);
    *(_QWORD *)(v0 + 32) = v34;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F432ADC(*(uint64_t (**)(uint64_t, uint64_t))(v128 + 8));
    _os_log_impl(&dword_23F35A000, v21, (os_log_type_t)v13, "DefaultFallbackDialogGenerator.generateFallback: generating fallback with customCatId: %s ToolResult: \n%s.", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v35 = *(_QWORD *)(v0 + 248);
  sub_23F432B34();
  sub_23F432ADC(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));

  v36 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v36(v24, v133);
  v37 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 56);
  v39 = type metadata accessor for TypedValueFormatter(0);
  sub_23F3838D8(v37, v40, v41, v39);
  sub_23F5CDCB4(v38, v37);
  v42 = v20;
  v43 = *(_QWORD *)(v0 + 88);
  v44 = *(_QWORD *)(v0 + 56);
  sub_23F3CFCB0(*(_QWORD *)(v0 + 232), &qword_256E73D30);
  v45 = sub_23F5C8F10(v44, v43);
  v56 = *(_QWORD *)(v0 + 72);
  v57 = sub_23F42F520(v45);
  sub_23F362984();
  sub_23F585678();
  v59 = v58;
  sub_23F362D18();
  sub_23F42F4A4(v57, v59);
  if (v56)
  {
    sub_23F35EA9C(*(_QWORD **)(v0 + 104), *(_QWORD *)(*(_QWORD *)(v0 + 104) + 24));
    sub_23F585D9C();
    v61 = v60;
    *(_QWORD *)(v0 + 416) = v60;
    sub_23F362D08();
    v62 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 424) = v62;
    *v62 = v0;
    v62[1] = sub_23F431E90;
    return sub_23F3E4588(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64), v42, v61, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  }
  v63 = *(_QWORD *)(v0 + 360);
  v64 = *(_QWORD *)(v0 + 344);
  v65 = *(_QWORD *)(v0 + 328);
  v134 = *(_QWORD *)(v0 + 312);
  v67 = *(_QWORD *)(v0 + 216);
  v66 = *(_QWORD *)(v0 + 224);
  v69 = *(_QWORD *)(v0 + 184);
  v68 = *(_QWORD *)(v0 + 192);
  sub_23F61AB4C();
  sub_23F61A4F8();
  v131(v63, v64);
  sub_23F61AC78();
  v130(v65, v134);
  v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16);
  v70(v67, v66, v69);
  v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 88))(v67, v69);
  if (v71 == *MEMORY[0x24BE53328])
  {
    v73 = *(_QWORD *)(v0 + 168);
    v72 = *(_QWORD *)(v0 + 176);
    v75 = *(_QWORD *)(v0 + 144);
    v74 = *(_QWORD *)(v0 + 152);
    v76 = *(_QWORD *)(v0 + 120);
    v77 = *(_QWORD *)(v0 + 128);
    sub_23F61AB58();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v77 + 104))(v73, *MEMORY[0x24BE551B8], v76);
    sub_23F36196C(v73, 0, 1, v76);
    v78 = v74 + *(int *)(v75 + 48);
    sub_23F432458(v72, v74);
    sub_23F432458(v73, v78);
    if (sub_23F36195C(v74, 1, v76) == 1)
    {
      v79 = *(_QWORD *)(v0 + 176);
      v80 = *(_QWORD *)(v0 + 120);
      sub_23F3CFCB0(*(_QWORD *)(v0 + 168), &qword_256E73D28);
      sub_23F3CFCB0(v79, &qword_256E73D28);
      if (sub_23F36195C(v78, 1, v80) == 1)
      {
        sub_23F3CFCB0(*(_QWORD *)(v0 + 152), &qword_256E73D28);
LABEL_29:
        v81 = 0xD00000000000001DLL;
        v82 = "responseGeneration#actionUndo";
        goto LABEL_30;
      }
    }
    else
    {
      v83 = *(_QWORD *)(v0 + 120);
      sub_23F432458(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
      v84 = sub_23F36195C(v78, 1, v83);
      v86 = *(_QWORD *)(v0 + 168);
      v85 = *(_QWORD *)(v0 + 176);
      v87 = *(_QWORD *)(v0 + 160);
      if (v84 != 1)
      {
        v91 = *(_QWORD *)(v0 + 152);
        v93 = *(_QWORD *)(v0 + 128);
        v92 = *(_QWORD *)(v0 + 136);
        v94 = *(_QWORD *)(v0 + 120);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 32))(v92, v78, v94);
        sub_23F4324A0();
        v95 = sub_23F61C0A0();
        v96 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
        v96(v92, v94);
        sub_23F432AE8(v86);
        sub_23F432AE8(v85);
        v96(v87, v94);
        sub_23F432AE8(v91);
        if ((v95 & 1) != 0)
          goto LABEL_29;
        goto LABEL_25;
      }
      v88 = *(_QWORD *)(v0 + 120);
      v89 = *(_QWORD *)(v0 + 128);
      sub_23F3CFCB0(*(_QWORD *)(v0 + 168), &qword_256E73D28);
      sub_23F3CFCB0(v85, &qword_256E73D28);
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v87, v88);
    }
    sub_23F3CFCB0(*(_QWORD *)(v0 + 152), &qword_256E73D20);
LABEL_25:
    v81 = 0xD000000000000020;
    v82 = "responseGeneration#actionSuccess";
    goto LABEL_30;
  }
  v81 = 0xD000000000000026;
  if (v71 == *MEMORY[0x24BE532D8])
  {
    v81 = 0xD000000000000025;
    v82 = "responseGeneration#actionConfirmation";
LABEL_30:
    v90 = (char *)(v82 - 32);
    goto LABEL_31;
  }
  v90 = "on#parameterNotAllowed";
  if (v71 != *MEMORY[0x24BE532E0])
  {
    if (v71 == *MEMORY[0x24BE532E8])
      goto LABEL_34;
    if (v71 == *MEMORY[0x24BE53300])
    {
      v81 = 0xD000000000000028;
      v82 = "responseGeneration#parameterConfirmation";
      goto LABEL_30;
    }
    if (v71 == *MEMORY[0x24BE53308])
      goto LABEL_27;
    if (v71 == *MEMORY[0x24BE532F0])
    {
      v82 = "responseGeneration#parameterNotAllowed";
      goto LABEL_30;
    }
    if (v71 == *MEMORY[0x24BE53310])
    {
LABEL_34:
      v97 = 0x800000023F635D50;
      goto LABEL_32;
    }
    if (v71 == *MEMORY[0x24BE532D0])
    {
      v81 = 0xD000000000000024;
      v82 = "responseGeneration#actionRequirement";
      goto LABEL_30;
    }
    if (v71 == *MEMORY[0x24BE532F8])
      goto LABEL_27;
    if (v71 == *MEMORY[0x24BE53320])
    {
      v81 = 0xD000000000000020;
      v82 = "responseGeneration#actionFailure";
      goto LABEL_30;
    }
    v109 = *(_QWORD *)(v0 + 224);
    v110 = *(_QWORD *)(v0 + 208);
    v111 = *(_QWORD *)(v0 + 184);
    swift_bridgeObjectRelease();
    sub_23F3F0F00();
    v70(v110, v109, v111);
    v112 = sub_23F619E8C();
    v113 = sub_23F61C628();
    v114 = os_log_type_enabled(v112, v113);
    v135 = *(_QWORD *)(v0 + 288);
    v132 = *(_QWORD *)(v0 + 272);
    v115 = *(_QWORD *)(v0 + 208);
    if (v114)
    {
      v116 = *(_QWORD *)(v0 + 200);
      v129 = *(_QWORD *)(v0 + 192);
      v117 = *(_QWORD *)(v0 + 184);
      v118 = (uint8_t *)sub_23F366668();
      v136[0] = sub_23F366668();
      *(_DWORD *)v118 = 136315138;
      v70(v116, v115, v117);
      v119 = sub_23F61C16C();
      sub_23F37AE00(v119, v120, v136);
      *(_QWORD *)(v0 + 16) = v121;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v115, v117);
      _os_log_impl(&dword_23F35A000, v112, v113, "DefaultFallbackDialogGenerator.generateFallback: no fallback for unknown outcome %s", v118, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }
    v122 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 192) + 8);
    v122(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));

    v36(v135, v132);
    v123 = *(_QWORD *)(v0 + 216);
    v124 = *(_QWORD *)(v0 + 224);
    v125 = *(_QWORD *)(v0 + 184);
    sub_23F43241C();
    swift_allocError();
    swift_willThrow();
    v122(v124, v125);
    v122(v123, v125);
    swift_task_dealloc();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666EC();
    sub_23F3666C4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    swift_task_dealloc();
    v54 = *(uint64_t (**)(void))(v0 + 8);
    return v54();
  }
LABEL_27:
  v81 = 0xD00000000000002ALL;
LABEL_31:
  v97 = (unint64_t)v90 | 0x8000000000000000;
LABEL_32:
  *(_QWORD *)(v0 + 440) = v97;
  v98 = *(_QWORD *)(v0 + 216);
  v99 = *(_QWORD *)(v0 + 184);
  v101 = *(_QWORD **)(v0 + 104);
  v100 = *(_QWORD *)(v0 + 112);
  v102 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 192) + 8);
  *(_QWORD *)(v0 + 448) = v102;
  v102(v98, v99);
  sub_23F35EA9C(v101, v101[3]);
  sub_23F585D9C();
  v104 = v103;
  *(_QWORD *)(v0 + 456) = v103;
  sub_23F362984();
  v105 = sub_23F432B2C();
  sub_23F3838D8(v100, v106, v107, v105);
  v108 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 464) = v108;
  *v108 = v0;
  v108[1] = sub_23F432080;
  return sub_23F3E4588(*(_QWORD *)(v0 + 40), v81, v97, v104, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_23F431E90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v4)(void);
  uint64_t v5;

  v5 = *v1;
  v2 = v5;
  sub_23F3B2010(&v5);
  *(_QWORD *)(v2 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_23F36679C();
    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    swift_task_dealloc();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    swift_task_dealloc();
    sub_23F3666DC();
    v4 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F3B5B9C(v4);
  }
}

uint64_t sub_23F431FE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_23F43284C(*(_QWORD *)(v0 + 432));
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  swift_task_dealloc();
  return sub_23F41C210(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F432080()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  sub_23F3B2010(&v4);
  *(_QWORD *)(v2 + 472) = v0;
  swift_task_dealloc();
  sub_23F3CFCB0(*(_QWORD *)(v2 + 112), &qword_256E70760);
  sub_23F362D18();
  sub_23F362D08();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F432100()
{
  uint64_t (*v0)(void);

  sub_23F432A84();
  sub_23F432958();
  swift_task_dealloc();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  swift_task_dealloc();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  swift_task_dealloc();
  v0 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3B5B9C(v0);
}

uint64_t sub_23F4321E4()
{
  uint64_t v0;

  sub_23F432A84();
  sub_23F43284C(*(_QWORD *)(v0 + 472));
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  swift_task_dealloc();
  return sub_23F41C210(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F432280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F3609AC;
  return sub_23F4303B0(a1, a2, a3);
}

uint64_t sub_23F4322E8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_23F3609AC;
  return sub_23F430BFC(a1, a2, v6, v7, v8);
}

uint64_t sub_23F432364(uint64_t a1)
{
  destroy for AnyActionRequirementEvaluating();
  return a1;
}

uint64_t sub_23F432398()
{
  sub_23F43280C();
  return sub_23F61CCAC();
}

uint64_t sub_23F4323C0()
{
  sub_23F43280C();
  return sub_23F61CCA0();
}

uint64_t sub_23F4323E8()
{
  uint64_t v0;

  v0 = qword_256E73CD0;
  sub_23F617BA0();
  return v0;
}

unint64_t sub_23F43241C()
{
  unint64_t result;

  result = qword_256E73D38;
  if (!qword_256E73D38)
  {
    result = MEMORY[0x242670A44](&unk_23F6217D0, &type metadata for FallbackDialogGenerationError);
    atomic_store(result, (unint64_t *)&qword_256E73D38);
  }
  return result;
}

uint64_t sub_23F432458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E73D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F4324A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E73D40;
  if (!qword_256E73D40)
  {
    v1 = sub_23F61A21C();
    result = MEMORY[0x242670A44](MEMORY[0x24BE551D0], v1);
    atomic_store(result, (unint64_t *)&qword_256E73D40);
  }
  return result;
}

void sub_23F4324E0(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F5E1C70();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23F432514(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  _OWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  sub_23F5E2968(&v29, a1, a2, a3);
  sub_23F617BA0();
  swift_retain();
  sub_23F5E31C0(&v27);
  v7 = *((_QWORD *)&v27 + 1);
  if (!*((_QWORD *)&v27 + 1))
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23F382E18();
    return swift_release();
  }
  while (1)
  {
    v8 = v27;
    sub_23F382A70(&v28, v26);
    v9 = *a5;
    v11 = sub_23F3754D4(v8, v7);
    v12 = *(_QWORD *)(v9 + 16);
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
      break;
    v15 = v10;
    if (*(_QWORD *)(v9 + 24) >= v14)
    {
      if ((a4 & 1) != 0)
      {
        if ((v10 & 1) != 0)
          goto LABEL_9;
      }
      else
      {
        sub_23F35D2E8(&qword_256E6FCA0);
        sub_23F61CA24();
        if ((v15 & 1) != 0)
          goto LABEL_9;
      }
    }
    else
    {
      sub_23F514DCC(v14, a4 & 1);
      v16 = sub_23F3754D4(v8, v7);
      if ((v15 & 1) != (v17 & 1))
        goto LABEL_17;
      v11 = v16;
      if ((v15 & 1) != 0)
      {
LABEL_9:
        sub_23F382B64((uint64_t)v26, (uint64_t)v25);
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v26);
        swift_bridgeObjectRelease();
        v18 = (_OWORD *)(*(_QWORD *)(*a5 + 56) + 32 * v11);
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v18);
        sub_23F382A70(v25, v18);
        goto LABEL_13;
      }
    }
    v19 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v20 = (uint64_t *)(v19[6] + 16 * v11);
    *v20 = v8;
    v20[1] = v7;
    sub_23F382A70(v26, (_OWORD *)(v19[7] + 32 * v11));
    v21 = v19[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_16;
    v19[2] = v23;
LABEL_13:
    sub_23F5E31C0(&v27);
    v7 = *((_QWORD *)&v27 + 1);
    a4 = 1;
    if (!*((_QWORD *)&v27 + 1))
      goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for FallbackDialogGenerationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F43276C + 4 * byte_23F6216D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F43278C + 4 * byte_23F6216D5[v4]))();
}

_BYTE *sub_23F43276C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F43278C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F432794(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F43279C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F4327A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F4327AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FallbackDialogGenerationError()
{
  return &type metadata for FallbackDialogGenerationError;
}

unint64_t sub_23F4327D0()
{
  unint64_t result;

  result = qword_256E73D58;
  if (!qword_256E73D58)
  {
    result = MEMORY[0x242670A44](&unk_23F6217A8, &type metadata for FallbackDialogGenerationError);
    atomic_store(result, (unint64_t *)&qword_256E73D58);
  }
  return result;
}

unint64_t sub_23F43280C()
{
  unint64_t result;

  result = qword_256E73D60;
  if (!qword_256E73D60)
  {
    result = MEMORY[0x242670A44](&unk_23F621728, &type metadata for FallbackDialogGenerationError);
    atomic_store(result, (unint64_t *)&qword_256E73D60);
  }
  return result;
}

uint64_t sub_23F43284C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 80) = a1;
  *(_QWORD *)(v2 - 88) = *(_QWORD *)(v1 + 112);
  return swift_task_dealloc();
}

uint64_t sub_23F4328BC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F4328D4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23F4328E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23F4328EC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F432904()
{
  return swift_task_alloc();
}

uint64_t sub_23F432928()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 104) = v0;
  return swift_task_dealloc();
}

void sub_23F432948(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  uint8_t *v5;

  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

uint64_t sub_23F432958()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 408);
}

uint64_t sub_23F43297C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F432998()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[24] + 8))(v0[25], v0[23]);
}

uint64_t sub_23F4329A8()
{
  return swift_task_dealloc();
}

uint64_t sub_23F4329D4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F432A04()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36196C(v1, 1, 1, v0);
}

uint64_t sub_23F432A18(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 56);
}

uint64_t sub_23F432A34(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = result;
  return result;
}

uint64_t sub_23F432A40()
{
  return swift_task_alloc();
}

uint64_t sub_23F432A54()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t sub_23F432A68(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(v1, 1, a1);
}

uint64_t sub_23F432A7C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F432A84()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 448))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 184));
}

uint64_t sub_23F432A94()
{
  return 0;
}

uint64_t sub_23F432AAC()
{
  return 0;
}

uint64_t sub_23F432ADC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F432AE8(uint64_t a1)
{
  uint64_t *v1;

  return sub_23F3CFCB0(a1, v1);
}

uint64_t sub_23F432AF0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F432AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F432B04()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F432B18()
{
  return sub_23F61AC9C();
}

uint64_t sub_23F432B24()
{
  return sub_23F61AB94();
}

uint64_t sub_23F432B2C()
{
  return sub_23F616E68();
}

uint64_t sub_23F432B34()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F432B40()
{
  return sub_23F61A4F8();
}

uint64_t sub_23F432B4C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F432B54()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23F432B98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = sub_23F619E98();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = sub_23F366578();
  v5 = sub_23F61B2C0();
  v3[9] = v5;
  v3[10] = *(_QWORD *)(v5 - 8);
  v3[11] = sub_23F366578();
  sub_23F35D2E8(&qword_256E702E0);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v6 = sub_23F61B164();
  v3[14] = v6;
  v3[15] = *(_QWORD *)(v6 - 8);
  v3[16] = sub_23F366578();
  v7 = sub_23F61B2E4();
  v3[17] = v7;
  v3[18] = *(_QWORD *)(v7 - 8);
  v3[19] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F432C6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  _QWORD *v16;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v26;

  v1 = v0[16];
  v2 = v0[14];
  v3 = v0[15];
  v4 = v0[13];
  sub_23F61B128();
  sub_23F61B14C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_23F435BF0(v4);
  sub_23F362984();
  sub_23F3C84F4(v4);
  if (v8)
  {
    sub_23F39E4B8(v0[13], &qword_256E702E0);
  }
  else
  {
    v2 = v0[10];
    v5 = v0[11];
    v6 = v0[9];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[18] + 32))(v0[19], v0[13], v0[17]);
    sub_23F61B2CC();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v5, v6);
    v8 = v7 == *MEMORY[0x24BE56B10] || v7 == *MEMORY[0x24BE56B20];
    if (v8
      || v7 == *MEMORY[0x24BE56B60]
      || v7 == *MEMORY[0x24BE56B38]
      || v7 == *MEMORY[0x24BE56B88]
      || v7 == *MEMORY[0x24BE56B98]
      || v7 == *MEMORY[0x24BE56B30]
      || v7 == *MEMORY[0x24BE56C10]
      || v7 == *MEMORY[0x24BE56B68])
    {
      sub_23F384274(v0[10]);
      v16 = (_QWORD *)swift_task_alloc();
      v0[20] = v16;
      *v16 = v0;
      v16[1] = sub_23F432F5C;
      return sub_23F433098(v0[12], v0[4]);
    }
    v18 = v0[10];
    sub_23F384274(v0[18]);
    sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  }
  v19 = v0[8];
  sub_23F3B2130();
  sub_23F619E8C();
  v20 = sub_23F3F0EEC();
  v21 = sub_23F366874(v20);
  v22 = v0[7];
  if (v21)
  {
    v23 = (uint8_t *)sub_23F366668();
    v26 = sub_23F366668();
    *(_DWORD *)v23 = 136315138;
    sub_23F37AE00(0xD000000000000015, 0x800000023F635EE0, &v26);
    v0[2] = v24;
    sub_23F435C2C();
    sub_23F38485C(&dword_23F35A000, v19, (os_log_type_t)v2, "%s Returning without producing a plan", v23);
    sub_23F3B17D4();
    sub_23F366530();
  }

  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_23F36196C(v0[3], 1, 1, v0[17]);
  sub_23F435B98();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  v25 = (uint64_t (*)(void))sub_23F384760();
  return v25();
}

uint64_t sub_23F432F5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F432FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t (*v4)(void);

  sub_23F384274(*(_QWORD *)(v0 + 144));
  v1 = sub_23F3840BC();
  sub_23F435730(v1, v2, v3);
  sub_23F435B98();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  v4 = (uint64_t (*)(void))sub_23F384760();
  return v4();
}

uint64_t sub_23F433028()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F433098(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  v4 = *v2;
  v3[28] = *v2;
  v5 = sub_23F61B1C4();
  v3[29] = v5;
  v3[30] = *(_QWORD *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v6 = sub_23F61B140();
  v3[32] = v6;
  v3[33] = *(_QWORD *)(v6 - 8);
  v3[34] = swift_task_alloc();
  type metadata accessor for ResolvedProgram();
  v3[35] = swift_task_alloc();
  v7 = sub_23F6184E8();
  v3[36] = v7;
  v3[37] = *(_QWORD *)(v7 - 8);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  v8 = sub_23F619E50();
  v3[41] = v8;
  v3[42] = *(_QWORD *)(v8 - 8);
  v3[43] = swift_task_alloc();
  v9 = sub_23F619F28();
  v3[44] = v9;
  v3[45] = *(_QWORD *)(v9 - 8);
  v3[46] = swift_task_alloc();
  v10 = sub_23F619F4C();
  v3[47] = v10;
  v3[48] = *(_QWORD *)(v10 - 8);
  v3[49] = swift_task_alloc();
  v11 = sub_23F619E20();
  v3[50] = v11;
  v3[51] = *(_QWORD *)(v11 - 8);
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  v3[54] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E702E0);
  v3[55] = swift_task_alloc();
  v3[56] = swift_task_alloc();
  v3[57] = swift_task_alloc();
  v12 = *(_QWORD *)(sub_23F35D2E8(&qword_256E73E10) - 8);
  v3[58] = v12;
  v3[59] = *(_QWORD *)(v12 + 64);
  v3[60] = swift_task_alloc();
  v3[61] = swift_task_alloc();
  v13 = sub_23F619E98();
  v3[62] = v13;
  v3[63] = *(_QWORD *)(v13 - 8);
  v3[64] = swift_task_alloc();
  v3[65] = swift_task_alloc();
  v3[66] = swift_task_alloc();
  v3[67] = swift_task_alloc();
  v3[68] = swift_task_alloc();
  v14 = sub_23F61B164();
  v3[69] = v14;
  v3[70] = *(_QWORD *)(v14 - 8);
  v3[71] = swift_task_alloc();
  v3[72] = swift_task_alloc();
  v3[73] = swift_task_alloc();
  v3[74] = swift_task_alloc();
  v3[75] = swift_task_alloc();
  v3[76] = swift_task_alloc();
  v3[77] = swift_task_alloc();
  v15 = *(_QWORD *)(v4 + 80);
  v3[78] = v15;
  v18 = type metadata accessor for FullPlannerPromptGeneratorOutput(0, v15, v16, v17);
  v3[79] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v3[80] = v19;
  v3[81] = *(_QWORD *)(v19 + 64);
  v3[82] = swift_task_alloc();
  v3[83] = swift_task_alloc();
  v3[84] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F4333E8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v1 = (_QWORD *)v0[27];
  v2 = v1[5];
  v3 = v1[6];
  sub_23F35EA9C(v1 + 2, v2);
  sub_23F61B128();
  v4 = (_QWORD *)sub_23F3629C0();
  v0[85] = v4;
  *v4 = v0;
  v4[1] = sub_23F433468;
  return sub_23F435B84(v0[84], v0[77], v2, v3, v6);
}

uint64_t sub_23F433468()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 688) = v0;
  swift_task_dealloc();
  v3 = v2[77];
  v4 = v2[69];
  v5 = *(void (**)(uint64_t, uint64_t))(v2[70] + 8);
  if (!v0)
    v2[87] = v5;
  v5(v3, v4);
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F4334E0()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD);
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_signpost_type_t v33;
  uint8_t *v34;
  os_signpost_id_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t (*v48)(uint64_t);
  uint64_t (*v49)(uint64_t);
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;

  v1 = (void (*)(uint64_t, uint64_t))v0[87];
  v2 = v0[84];
  v65 = v0[83];
  v63 = v0[80];
  v64 = v0[79];
  v3 = v0[78];
  v4 = v0[76];
  v5 = v0[69];
  v6 = v0[28];
  sub_23F61B128();
  sub_23F5F44D4();
  v1(v4, v5);
  sub_23F61724C();
  v7 = *(_QWORD *)(v6 + 88);
  v0[88] = v7;
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  v0[89] = v8;
  v0[11] = v8(v3, v7);
  v0[12] = v9;
  v11 = type metadata accessor for FullPlanner.FullPlannerPromptFeature(0, v3, v7, v10);
  MEMORY[0x242670A44](&unk_23F621940, v11);
  MEMORY[0x242670A44](&unk_23F621918, v11);
  sub_23F617240();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F3B2130();
  v12 = v65;
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
  v66(v12, v2, v64);
  v13 = sub_23F619E8C();
  v14 = sub_23F61C610();
  v67 = (void (*)(uint64_t, uint64_t))v8;
  v68 = v7;
  if (os_log_type_enabled(v13, v14))
  {
    v15 = v0[83];
    v59 = v0[80];
    v60 = v0[79];
    v16 = v0[78];
    v17 = (uint8_t *)sub_23F366668();
    v69 = sub_23F366668();
    *(_DWORD *)v17 = 136315138;
    v18 = v8(v16, v7);
    sub_23F37AE00(v18, v19, &v69);
    v0[24] = v20;
    sub_23F435C14();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v15, v60);
    sub_23F38485C(&dword_23F35A000, v13, v14, "Full Planner Prompt:\n\"%s\"", v17);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v21 = v0[63];
  v22 = *(void (**)(_QWORD, _QWORD))(v0[80] + 8);
  v22(v0[83], v0[79]);

  v23 = *(void (**)(uint64_t))(v21 + 8);
  v24 = sub_23F3840BC();
  v23(v24);
  v0[91] = v22;
  v0[90] = v23;
  v25 = v0[57];
  sub_23F61B128();
  sub_23F61B14C();
  sub_23F435C38();
  sub_23F435BF0(v25);
  sub_23F362984();
  v26 = sub_23F61B2E4();
  v0[92] = v26;
  sub_23F3C84F4(v25);
  if (v27)
  {
    sub_23F39E4B8(v0[57], &qword_256E702E0);
    v28 = 1;
  }
  else
  {
    sub_23F61B248();
    sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8));
    v28 = 0;
  }
  v29 = v0[61];
  v30 = sub_23F619310();
  sub_23F36196C(v29, v28, 1, v30);
  if (qword_256E6EEC0 != -1)
    swift_once();
  v31 = sub_23F619E44();
  v0[93] = sub_23F361498(v31, (uint64_t)qword_256E7FEE8);
  sub_23F619E38();
  sub_23F619DFC();
  v32 = sub_23F619E38();
  v33 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v34 = (uint8_t *)sub_23F366668();
    *(_WORD *)v34 = 0;
    v35 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v32, v33, v35, "FullPlannerModelInterface.completion", "", v34, 2u);
    sub_23F366530();
  }
  v36 = v0[84];
  v58 = v0[80];
  v52 = (void (*)(uint64_t))v0[87];
  v53 = v0[79];
  v55 = v0[61];
  v56 = v0[82];
  v54 = v0[60];
  v61 = v0[81];
  v57 = v0[58];
  v37 = v0[53];
  v38 = v0[54];
  v39 = v0[50];
  v40 = v0[51];
  v51 = v0[78];
  v62 = v0[27];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v37, v38, v39);
  sub_23F619E74();
  swift_allocObject();
  v0[94] = sub_23F619E68();
  v41 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8);
  v0[95] = v41;
  sub_23F3B1CC8(v38, v41);
  sub_23F61B128();
  sub_23F5F4714();
  v0[96] = v42;
  v43 = sub_23F389F14();
  v52(v43);
  v67(v51, v68);
  sub_23F619F1C();
  v66(v56, v36, v53);
  sub_23F4355C8(v55, v54);
  v44 = (*(unsigned __int8 *)(v58 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  v45 = (v61 + *(unsigned __int8 *)(v57 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v46 = (char *)swift_allocObject();
  v0[97] = v46;
  *((_QWORD *)v46 + 2) = v51;
  *((_QWORD *)v46 + 3) = v68;
  *((_QWORD *)v46 + 4) = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(&v46[v44], v56, v53);
  sub_23F435730(v54, (uint64_t)&v46[v45], &qword_256E73E10);
  swift_retain();
  v47 = (_QWORD *)swift_task_alloc();
  v0[98] = v47;
  v48 = (uint64_t (*)(uint64_t))MEMORY[0x24BE54BC8];
  sub_23F3612C0(&qword_256E73E28, (uint64_t (*)(uint64_t))MEMORY[0x24BE54BC8], MEMORY[0x24BE54BD8]);
  sub_23F3612C0(&qword_256E73E30, v48, MEMORY[0x24BE54BD0]);
  v49 = (uint64_t (*)(uint64_t))MEMORY[0x24BE54BF0];
  sub_23F3612C0(&qword_256E73E38, (uint64_t (*)(uint64_t))MEMORY[0x24BE54BF0], MEMORY[0x24BE54C00]);
  sub_23F3612C0(qword_256E73E40, v49, MEMORY[0x24BE54BF8]);
  *v47 = v0;
  v47[1] = sub_23F433B94;
  return sub_23F617258();
}

uint64_t sub_23F433B94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 792) = v0;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v2 + 360));
  sub_23F3668FC();
  swift_bridgeObjectRelease();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F433C18()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  NSObject *v4;
  os_signpost_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint8_t *v10;
  os_signpost_id_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t *v21;
  void *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(void);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163[3];

  v1 = sub_23F619F40();
  v3 = v2;
  v4 = sub_23F619E38();
  sub_23F619E5C();
  v5 = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 336);
    v6 = *(_QWORD *)(v0 + 344);
    v8 = *(_QWORD *)(v0 + 328);
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v7 + 88))(v6, v8) == *MEMORY[0x24BEE7810])
    {
      v9 = "[Error] Interval already ended";
    }
    else
    {
      sub_23F384274(*(_QWORD *)(v0 + 336));
      v9 = "";
    }
    v10 = (uint8_t *)sub_23F366668();
    *(_WORD *)v10 = 0;
    v11 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v4, v5, v11, "FullPlannerModelInterface.completion", v9, v10, 2u);
    sub_23F366530();
  }
  v12 = *(void (**)(uint64_t, uint64_t))(v0 + 760);
  v13 = *(_QWORD *)(v0 + 416);
  v14 = *(_QWORD *)(v0 + 400);

  v12(v13, v14);
  sub_23F3B2130();
  swift_bridgeObjectRetain_n();
  v15 = sub_23F619E8C();
  v16 = sub_23F61C610();
  if (sub_23F366874(v16))
  {
    v17 = (uint8_t *)sub_23F366668();
    v163[0] = sub_23F366668();
    *(_DWORD *)v17 = 136642819;
    sub_23F617BA0();
    sub_23F37AE00(v1, v3, v163);
    *(_QWORD *)(v0 + 184) = v18;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    sub_23F38485C(&dword_23F35A000, v15, (os_log_type_t)v14, "Raw model response follows on next line:\n%{sensitive}s", v17);
    sub_23F3B17D4();
    sub_23F366530();
  }
  swift_bridgeObjectRelease_n();

  sub_23F435C38();
  v19 = *(void **)(v0 + 792);
  v20 = *(_QWORD *)(v0 + 312);
  v21 = sub_23F35EA9C((_QWORD *)(*(_QWORD *)(v0 + 216) + 96), *(_QWORD *)(*(_QWORD *)(v0 + 216) + 120));
  sub_23F446FF4(v1, v3, *v21, v20);
  v160 = v3;
  if (!v19)
  {
    v29 = *(_QWORD *)(v0 + 672);
    v30 = *(_QWORD *)(v0 + 632);
    v31 = *(_QWORD *)(v0 + 216);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 32))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 288));
    sub_23F35EA9C((_QWORD *)(v31 + 136), *(_QWORD *)(v31 + 160));
    v32 = (__int128 *)(v29 + *(int *)(v30 + 28));
    v33 = *v32;
    v34 = v32[2];
    *(_OWORD *)(v0 + 32) = v32[1];
    *(_OWORD *)(v0 + 48) = v34;
    *(_OWORD *)(v0 + 16) = v33;
    v35 = *(_QWORD *)(v0 + 40);
    v36 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 120) = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 128) = v35;
    *(int8x16_t *)(v0 + 104) = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
    *(_QWORD *)(v0 + 160) = v36;
    *(_QWORD *)(v0 + 136) = *(_QWORD *)(v0 + 56);
    sub_23F39B940(v0 + 120);
    sub_23F39B940(v0 + 112);
    sub_23F39B940(v0 + 104);
    sub_23F39B940(v0 + 128);
    sub_23F39B940(v0 + 160);
    sub_23F39B940(v0 + 136);
    swift_retain();
    sub_23F51D818();
    v121 = *(_QWORD *)(v0 + 704);
    v125 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 712);
    v54 = *(_QWORD *)(v0 + 304);
    v144 = *(_QWORD *)(v0 + 288);
    v129 = *(_QWORD *)(v0 + 296);
    v133 = *(_QWORD *)(v0 + 280);
    v109 = *(_QWORD *)(v0 + 624);
    v113 = *(_QWORD *)(v0 + 272);
    v105 = *(_QWORD *)(v0 + 264);
    v55 = *(_QWORD *)(v0 + 248);
    v117 = *(_QWORD *)(v0 + 256);
    v137 = *(_QWORD *)(v0 + 240);
    v151 = *(_QWORD *)(v0 + 232);
    v101 = *(_QWORD *)(v0 + 208);
    swift_release();
    sub_23F39B968(v0 + 120);
    sub_23F39B968(v0 + 112);
    sub_23F39B968(v0 + 104);
    sub_23F39B968(v0 + 128);
    sub_23F39B968(v0 + 160);
    sub_23F39B968(v0 + 136);
    sub_23F617BA0();
    v56 = v125(v109, v121);
    v58 = v57;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 16))(v113, v101, v117);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 16))(v54, v133, v144);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v137 + 104))(v55, *MEMORY[0x24BE569D8], v151);
    Session.Event.init(planText:prompt:sessionState:fullyResolvedProgram:overrideId:source:)(v1, v160, v56, v58, v113, v54, 0, 0, v55, v97, v101, v105, v109, v113, v117, v121, (uint64_t)v125, v129, v133,
      v137,
      v0 + 160);
    v162 = *(_QWORD *)(v0 + 736);
    v86 = *(_QWORD *)(v0 + 488);
    v87 = *(_QWORD *)(v0 + 320);
    v88 = *(_QWORD *)(v0 + 296);
    v89 = *(_QWORD *)(v0 + 280);
    v158 = *(_QWORD *)(v0 + 200);
    swift_release();
    sub_23F384364();
    sub_23F435860(v89);
    sub_23F3B1CC8(v87, *(uint64_t (**)(uint64_t, uint64_t))(v88 + 8));
    v90 = sub_23F389F14();
    v91(v90);
    sub_23F39E4B8(v86, &qword_256E73E10);
    sub_23F435BE0();
    v92 = v158;
    v93 = 0;
LABEL_15:
    v83 = v162;
    goto LABEL_16;
  }
  v22 = v19;
  sub_23F3B2130();
  sub_23F3E274C();
  sub_23F3E274C();
  v23 = sub_23F619E8C();
  v24 = sub_23F61C628();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)sub_23F366668();
    v26 = (_QWORD *)sub_23F366668();
    *(_DWORD *)v25 = 138412290;
    v27 = v22;
    v28 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v28;
    sub_23F435C14();
    *v26 = v28;
    sub_23F435BE8();
    sub_23F435BE8();
    sub_23F38485C(&dword_23F35A000, v23, v24, "Hit an issue when trying to parse the program: %@. Returning PlanError event.", v25);
    sub_23F35D2E8(&qword_256E6FAB0);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F435BE8();
  sub_23F435BE8();
  v37 = v23;
  v38 = *(_QWORD *)(v0 + 736);
  v39 = *(void (**)(uint64_t))(v0 + 720);
  v40 = *(void (**)(uint64_t, uint64_t))(v0 + 696);
  v41 = *(_QWORD *)(v0 + 592);
  v42 = *(_QWORD *)(v0 + 552);
  v43 = *(_QWORD *)(v0 + 448);

  v44 = sub_23F389F14();
  v39(v44);
  sub_23F61B128();
  sub_23F61B14C();
  v40(v41, v42);
  sub_23F435BF0(v43);
  sub_23F362984();
  v45 = sub_23F36195C(v43, 1, v38);
  v46 = *(_QWORD *)(v0 + 672);
  v47 = *(_QWORD *)(v0 + 448);
  if (v45 == 1)
  {
    v162 = *(_QWORD *)(v0 + 736);
    v48 = *(void (**)(uint64_t, uint64_t))(v0 + 728);
    v49 = *(_QWORD *)(v0 + 632);
    v50 = *(_QWORD *)(v0 + 488);
    v51 = *(_QWORD *)(v0 + 384);
    v52 = *(_QWORD *)(v0 + 392);
    v53 = *(_QWORD *)(v0 + 200);
    swift_release();
    sub_23F435C1C();
    sub_23F389D0C();
    sub_23F3B1CC8(v52, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
    sub_23F39E4B8(v50, &qword_256E73E10);
    v48(v46, v49);
    sub_23F39E4B8(v47, &qword_256E702E0);
    v92 = v53;
    v93 = 1;
    goto LABEL_15;
  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 712))(*(_QWORD *)(v0 + 624), *(_QWORD *)(v0 + 704));
  sub_23F61B128();
  Session.Event.formingResponse(prompt:response:errorDescription:transcript:)();
  v161 = *(_QWORD *)(v0 + 736);
  v156 = *(_QWORD *)(v0 + 632);
  v157 = *(_QWORD *)(v0 + 672);
  v150 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 696);
  v154 = *(_QWORD *)(v0 + 488);
  v159 = *(_QWORD *)(v0 + 448);
  v59 = *(_QWORD *)(v0 + 200);
  swift_bridgeObjectRelease();
  swift_release();
  sub_23F435C1C();
  v60 = sub_23F384364();
  sub_23F435BF8(v60, v61, v62, v63, v64, v65, v66, v67, v94, v97, v100, v104, v108, v112, v116, v120, v124, v128, v132,
    v136,
    v140,
    v143,
    v147,
    v150);
  v68 = sub_23F435BB0();
  sub_23F435C24(v68, &qword_256E73E10, v69, v70, v71, v72, v73, v74, v95, v98, v102, v106, v110, v114, v118, v122, v126, v130, v134,
    v138,
    v141,
    v145,
    v148,
    v152,
    v154);
  sub_23F435C08(v75, v76, v77, v78, v79, v80, v81, v82, v96, v99, v103, v107, v111, v115, v119, v123, v127, v131, v135,
    v139,
    v142,
    v146,
    v149,
    v153,
    v155,
    v156,
    v157);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 8))(v159, v161);
  v92 = v59;
  v93 = 0;
  v83 = v161;
LABEL_16:
  sub_23F36196C(v92, v93, 1, v83);
  sub_23F435B60();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  v84 = (uint64_t (*)(void))sub_23F384760();
  return v84();
}

uint64_t sub_23F434CD8()
{
  uint64_t v0;

  sub_23F435A90(*(_QWORD *)(v0 + 688));
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  swift_task_dealloc();
  return sub_23F3D05C8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F434D94()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(v0 + 728);
  v2 = *(_QWORD *)(v0 + 488);
  swift_release();
  sub_23F39E4B8(v2, &qword_256E73E10);
  v3 = sub_23F3840BC();
  v1(v3);
  sub_23F435A90(*(_QWORD *)(v0 + 792));
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  swift_task_dealloc();
  return sub_23F3D05C8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F434E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a1;
  v5[5] = a3;
  v6 = sub_23F616BA4();
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F434EE4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[5];
  v2 = v1[10];
  v3 = v1[11];
  sub_23F35EA9C(v1 + 7, v2);
  v4 = (_QWORD *)sub_23F3629C0();
  v0[11] = v4;
  *v4 = v0;
  v4[1] = sub_23F434F58;
  return v6(v0[6], v0[7], v2, v3);
}

uint64_t sub_23F434F58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v3;
  v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    return sub_23F435B58(*(uint64_t (**)(void))(v7 + 8));
  }
  else
  {
    *(_QWORD *)(v6 + 96) = a2;
    *(_QWORD *)(v6 + 104) = a1;
    sub_23F36679C();
    return sub_23F36664C();
  }
}

uint64_t sub_23F434FD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = v0[12];
  v2 = v0[9];
  v0[2] = v0[13];
  v0[3] = v1;
  sub_23F616B80();
  sub_23F38813C();
  sub_23F61C7C0();
  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  swift_bridgeObjectRelease();
  sub_23F619F1C();
  sub_23F3666DC();
  v3 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F435B58(v3);
}

uint64_t sub_23F435070(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F4350EC()
{
  return 0x74706D6F7270;
}

uint64_t sub_23F435100(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  v12[1] = a3;
  v6 = type metadata accessor for FullPlanner.FullPlannerPromptFeature.CodingKeys(255, a4, a5, a4);
  MEMORY[0x242670A44](&unk_23F621A40, v6);
  v7 = sub_23F61CBF8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - v9;
  sub_23F35EA9C(a1, a1[3]);
  sub_23F61CD90();
  sub_23F61CBB0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_23F435214(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v6 = type metadata accessor for FullPlanner.FullPlannerPromptFeature.CodingKeys(255, a2, a3, a4);
  MEMORY[0x242670A44](&unk_23F621A40, v6);
  v7 = sub_23F61CB68();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - v9;
  v11 = (uint64_t)sub_23F35EA9C(a1, a1[3]);
  sub_23F61CD84();
  if (!v4)
  {
    v11 = sub_23F61CB14();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
  return v11;
}

uint64_t sub_23F435354()
{
  return sub_23F35E43C();
}

uint64_t sub_23F43535C()
{
  return sub_23F403B5C();
}

uint64_t sub_23F435368()
{
  return sub_23F35E444();
}

uint64_t sub_23F435374()
{
  sub_23F61CD30();
  sub_23F35E444();
  return sub_23F61CD60();
}

uint64_t sub_23F4353B4()
{
  return sub_23F4350EC();
}

uint64_t sub_23F4353C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F435070(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F4353F0()
{
  return sub_23F35E2B8();
}

uint64_t sub_23F435410@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F35E43C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23F435440(uint64_t a1)
{
  MEMORY[0x242670A44](&unk_23F621A40, a1);
  return sub_23F61CDC0();
}

uint64_t sub_23F435474(uint64_t a1)
{
  MEMORY[0x242670A44](&unk_23F621A40, a1);
  return sub_23F61CDCC();
}

uint64_t sub_23F4354A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;

  result = sub_23F435214(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
  }
  return result;
}

uint64_t sub_23F4354D8(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_23F435100(a1, *v2, v2[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_23F4354F8()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 56);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 96);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
  return v0;
}

uint64_t sub_23F43552C()
{
  sub_23F4354F8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FullPlanner(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F40C13C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FullPlanner);
}

uint64_t sub_23F435558(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23F3609AC;
  return sub_23F432B98(a1, a2);
}

uint64_t type metadata accessor for FullPlanner.FullPlannerPromptFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F40C13C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FullPlanner.FullPlannerPromptFeature);
}

uint64_t sub_23F4355C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E73E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F435610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(type metadata accessor for FullPlannerPromptGeneratorOutput(0, v5, a3, a4) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E73E10) - 8) + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v7, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v10 = sub_23F619310();
  if (!sub_23F36195C(v4 + ((v7 + v8 + v9) & ~v9), 1, v10))
    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8));
  return swift_deallocObject();
}

void sub_23F435730(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23F35D2E8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  sub_23F362928();
}

uint64_t sub_23F435770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = *(_QWORD *)(type metadata accessor for FullPlannerPromptGeneratorOutput(0, *(_QWORD *)(v4 + 16), a3, a4) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E73E10) - 8) + 80);
  v12 = v9 + v10 + v11;
  v13 = *(_QWORD *)(v4 + 32);
  v14 = v4 + v9;
  v15 = v4 + (v12 & ~v11);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v16;
  *v16 = v5;
  v16[1] = sub_23F3609AC;
  return sub_23F434E80(a1, a2, v13, v14, v15);
}

uint64_t sub_23F435830(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return sub_23F617BA0();
  return result;
}

uint64_t sub_23F435848(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23F435860(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ResolvedProgram();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for FullPlannerVersionHandlerError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_23F617BA0();
  return a1;
}

uint64_t destroy for FullPlannerVersionHandlerError()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for FullPlannerVersionHandlerError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FullPlannerVersionHandlerError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JointResolverError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JointResolverError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for FullPlanner.FullPlannerPromptFeature.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F40C13C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FullPlanner.FullPlannerPromptFeature.CodingKeys);
}

uint64_t sub_23F4359C8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23F4359D0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F435A10 + 4 * byte_23F621820[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F435A30 + 4 * byte_23F621825[v4]))();
}

_BYTE *sub_23F435A10(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F435A30(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F435A38(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F435A40(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F435A48(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F435A50(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_23F435A5C()
{
  JUMPOUT(0x242670A44);
}

void sub_23F435A6C()
{
  JUMPOUT(0x242670A44);
}

void sub_23F435A7C()
{
  JUMPOUT(0x242670A44);
}

uint64_t sub_23F435A90@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 - 88) = a1;
  v3 = v1[38];
  *(_QWORD *)(v2 - 128) = v1[39];
  *(_QWORD *)(v2 - 120) = v3;
  v4 = v1[34];
  *(_QWORD *)(v2 - 112) = v1[35];
  *(_QWORD *)(v2 - 104) = v4;
  *(_QWORD *)(v2 - 96) = v1[31];
  return swift_task_dealloc();
}

uint64_t sub_23F435B48()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  return sub_23F435848(v0, v1, v2);
}

uint64_t sub_23F435B58(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F435B60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[38];
  *(_QWORD *)(v1 - 136) = v0[39];
  *(_QWORD *)(v1 - 128) = v2;
  v3 = v0[34];
  *(_QWORD *)(v1 - 120) = v0[35];
  *(_QWORD *)(v1 - 112) = v3;
  *(_QWORD *)(v1 - 104) = v0[31];
  return swift_task_dealloc();
}

uint64_t sub_23F435B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_23F435B98()
{
  return swift_task_dealloc();
}

uint64_t sub_23F435BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23F435BC0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  return sub_23F435830(v0, v1, v2);
}

void sub_23F435BD0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F51D3FC(v0, v1, v2);
}

uint64_t sub_23F435BE0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 120))();
}

void sub_23F435BE8()
{
  void *v0;

}

uint64_t sub_23F435BF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F3F1328(v1, a1);
}

uint64_t sub_23F435BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t (*a24)(uint64_t, uint64_t))
{
  uint64_t v24;
  uint64_t v25;

  return a24(v24, v25);
}

uint64_t sub_23F435C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v27 - 128))(a27, a26);
}

uint64_t sub_23F435C14()
{
  return sub_23F61C790();
}

void sub_23F435C1C()
{
  uint64_t v0;

}

void sub_23F435C24(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  sub_23F39E4B8(a25, a2);
}

uint64_t sub_23F435C2C()
{
  return sub_23F61C790();
}

uint64_t sub_23F435C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

void FullPlannerPreferences.fullPlannerEndAfterPromptGeneration.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A3A8();
  sub_23F43A384();
}

uint64_t type metadata accessor for FullPlannerPreferences()
{
  uint64_t result;

  result = qword_256E74080;
  if (!qword_256E74080)
    return swift_getSingletonMetadata();
  return result;
}

void static Preferences.subscript.getter(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  MEMORY[0x24BDAC7A8](a1);
  v3 = (char *)&v5 - v2;
  if (qword_256E6EE90 != -1)
    swift_once();
  v4 = sub_23F361498(v1, (uint64_t)qword_256E7FE90);
  sub_23F3B1450();
  sub_23F4388B4(v4, (uint64_t)v3);
  swift_getAtKeyPath();
  sub_23F4388F8((uint64_t)v3);
  sub_23F362B80();
}

{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*a1 + *MEMORY[0x24BEE46A8]);
  MEMORY[0x24BDAC7A8](a1);
  v3 = (char *)&v5 - v2;
  if (qword_256E6F0B8 != -1)
    swift_once();
  v4 = sub_23F361498(v1, (uint64_t)qword_256E803F8);
  sub_23F3B1450();
  sub_23F58C090(v4, (uint64_t)v3);
  swift_getAtKeyPath();
  sub_23F58C0D4((uint64_t)v3);
  sub_23F362B80();
}

uint64_t FullPlannerPreferences.fullPlannerServerBasePath.getter()
{
  uint64_t v1;

  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A3B0();
  return v1;
}

void FullPlannerPreferences.fullPlannerModelInterface.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A3B0();
  sub_23F43A384();
}

void FullPlannerPreferences.fullPlannerUseGMSTemplate.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A3A8();
  sub_23F43A384();
}

void FullPlannerPreferences.fullPlannerUseLLMDraftCache.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A3A8();
  sub_23F43A384();
}

void FullPlannerPreferences.fullPlannerModelName.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A3B0();
  sub_23F43A384();
}

void FullPlannerPreferences.fullPlannerEnumCaseLimit.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E70CB8);
  sub_23F617C48();
  sub_23F43A384();
}

void FullPlannerPreferences.fullPlannerDynamicEnumCaseLimit.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E70CB8);
  sub_23F617C48();
  sub_23F43A384();
}

void FullPlannerPreferences.fullPlannerEnforcePlannerStringsAreQuotes.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A3A8();
  sub_23F43A384();
}

void FullPlannerPreferences.fullPlannerHideUnseenSpanTypes.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A3A8();
  sub_23F43A384();
}

void FullPlannerPreferences.fullPlannerEnforceConstrainedDecoding.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A3A8();
  sub_23F43A384();
}

uint64_t sub_23F435FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_23F619F04();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F61A15C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E730C8);
  sub_23F3F3F64(v8, qword_256E73F48);
  sub_23F361498(v8, (uint64_t)qword_256E73F48);
  sub_23F61A150();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE54B48], v0);
  sub_23F61A144();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23F4360E4()
{
  uint64_t result;

  sub_23F43A17C();
  result = sub_23F61C64C();
  qword_256E73F60 = result;
  return result;
}

uint64_t static FullPlannerPreferencesDomain.userDefaultsContainer.getter()
{
  uint64_t v0;
  id v1;

  if (qword_256E6EE78 != -1)
    swift_once();
  sub_23F3B1450();
  v0 = qword_256E73F60;
  v1 = (id)qword_256E73F60;
  return v0;
}

void static FullPlannerPreferencesDomain.userDefaultsContainer.setter(uint64_t a1)
{
  void *v2;

  if (qword_256E6EE78 != -1)
    swift_once();
  sub_23F3B1450();
  v2 = (void *)qword_256E73F60;
  qword_256E73F60 = a1;

}

uint64_t (*static FullPlannerPreferencesDomain.userDefaultsContainer.modify())()
{
  if (qword_256E6EE78 != -1)
    swift_once();
  sub_23F3B1450();
  return j__swift_endAccess;
}

uint64_t sub_23F43625C()
{
  uint64_t result;

  result = sub_23F436278();
  qword_256E73F68 = result;
  return result;
}

uint64_t sub_23F436278()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  ValueMetadata *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];
  ValueMetadata *v42;

  v0 = sub_23F616DCC();
  v37 = *(_QWORD *)(v0 - 8);
  v38 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F619E98();
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E730C8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(&qword_256E70760);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F616E68();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  if (qword_256E6EE70 != -1)
    swift_once();
  v22 = sub_23F361498(v6, (uint64_t)qword_256E73F48);
  sub_23F4112B0(v22, (uint64_t)v8);
  v23 = sub_23F61B38C();
  if (sub_23F36195C((uint64_t)v8, 1, v23) == 1)
  {
    sub_23F3CFCB0((uint64_t)v8, &qword_256E730C8);
    sub_23F36196C((uint64_t)v11, 1, 1, v12);
  }
  else
  {
    sub_23F61B380();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v8, v23);
    if (sub_23F36195C((uint64_t)v11, 1, v12) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v11, v12);
      v41[0] = 0xD000000000000015;
      v41[1] = 0x800000023F635FE0;
      v33 = v37;
      v32 = v38;
      (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v2, *MEMORY[0x24BDCD7A0], v38);
      sub_23F38813C();
      sub_23F616E50();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v2, v32);
      swift_bridgeObjectRelease();
      sub_23F616E08();
      v34 = *(void (**)(char *, uint64_t))(v13 + 8);
      v34(v16, v12);
      type metadata accessor for FullPlannerPreferencesDomain.FullPlannerResourceModel();
      v31 = sub_23F4366F8();
      v34(v19, v12);
      v34(v21, v12);
      return v31;
    }
  }
  sub_23F3CFCB0((uint64_t)v11, &qword_256E70760);
  sub_23F619088();
  v24 = sub_23F619E8C();
  v25 = sub_23F61C610();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    *(_DWORD *)v26 = 136315138;
    v41[0] = v27;
    v42 = &type metadata for FullPlannerPreferencesDomain;
    sub_23F35D2E8(&qword_256E74138);
    v28 = sub_23F61C16C();
    sub_23F37AE00(v28, v29, v41);
    v42 = v30;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F35A000, v24, v25, "%s MobileAssets not available", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v27, -1, -1);
    MEMORY[0x242670B70](v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v40);
  return 0;
}

uint64_t sub_23F4366F8()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F3B17A4();
  sub_23F616E98();
  sub_23F616D84();
  swift_allocObject();
  sub_23F616D78();
  sub_23F43A140();
  sub_23F616D6C();
  swift_release();
  sub_23F43A420();
  return v2;
}

uint64_t static FullPlannerPreferencesDomain.otaResource.getter()
{
  return sub_23F436C20(&qword_256E6EE80);
}

uint64_t sub_23F43693C()
{
  uint64_t result;

  result = sub_23F436958();
  qword_256E73F70 = result;
  return result;
}

uint64_t sub_23F436958()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t ObjCClassFromMetadata;
  id v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v22;
  uint64_t v23;

  v23 = sub_23F619E98();
  v0 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F35D2E8(&qword_256E70760);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F616E68();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - v11;
  type metadata accessor for FullPlannerPreferencesDomain.FullPlannerResourceModel();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v15 = sub_23F5AA774(0xD000000000000015, 0x800000023F635FE0, 0x7473696C70, 0xE500000000000000, v14);

  if (v15)
  {
    sub_23F616E14();

    v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v16(v5, v10, v6);
    sub_23F36196C((uint64_t)v5, 0, 1, v6);
    if (sub_23F36195C((uint64_t)v5, 1, v6) != 1)
    {
      v16(v12, v5, v6);
      v17 = sub_23F4366F8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      return v17;
    }
  }
  else
  {
    sub_23F36196C((uint64_t)v5, 1, 1, v6);
  }
  sub_23F3CFCB0((uint64_t)v5, &qword_256E70760);
  sub_23F619088();
  v18 = sub_23F619E8C();
  v19 = sub_23F61C628();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_23F35A000, v18, v19, "Error loading bundle resource file - failed to unwrap URL", v20, 2u);
    MEMORY[0x242670B70](v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v23);
  return 0;
}

uint64_t static FullPlannerPreferencesDomain.bundleResource.getter()
{
  return sub_23F436C20(&qword_256E6EE88);
}

uint64_t sub_23F436C20(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

BOOL sub_23F436C58()
{
  uint64_t v0;

  v0 = sub_23F61CAB4();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_23F436C9C()
{
  return sub_23F436C58();
}

uint64_t sub_23F436CB4()
{
  return 0x6D5F746567726174;
}

BOOL sub_23F436CE0@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_23F436C58();
  *a1 = result;
  return result;
}

void sub_23F436D10(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_23F436CB4();
  a1[1] = v2;
  sub_23F362928();
}

BOOL sub_23F436D34@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_23F436C9C();
  *a1 = result;
  return result;
}

uint64_t sub_23F436D5C()
{
  sub_23F438934();
  return sub_23F61CDC0();
}

uint64_t sub_23F436D84()
{
  sub_23F438934();
  return sub_23F61CDCC();
}

unint64_t sub_23F436DAC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = 0xD00000000000006ALL;
  if (v1 != 1)
    v2 = 0;
  if (v1 == 2)
    return 0xD000000000000026;
  else
    return v2;
}

uint64_t sub_23F436DF8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = 0xD00000000000001ELL;
  if (v1 != 1)
    v2 = 0;
  if (v1 == 2)
    return 0x2D72656E6E616C70;
  else
    return v2;
}

uint64_t sub_23F436E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = 0x6168706C61;
  if (v1 != 1)
    v2 = 0;
  if (v1 == 2)
    return 0x6F76617262;
  else
    return v2;
}

uint64_t sub_23F436E88()
{
  uint64_t v0;

  if ((unint64_t)(*(_QWORD *)(v0 + 16) - 1) >= 2)
    return 0;
  else
    return 0x6E65476E656B6F74;
}

unint64_t sub_23F436EC0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = 0xD000000000000030;
  if (v1 != 1)
    v2 = 0;
  if (v1 == 2)
    return 0xD000000000000033;
  else
    return v2;
}

uint64_t sub_23F436F14()
{
  return 0x696C43796C6C7566;
}

uint64_t sub_23F436F34()
{
  uint64_t v0;

  return 2 * ((unint64_t)(*(_QWORD *)(v0 + 16) - 1) > 1);
}

uint64_t sub_23F436F4C()
{
  uint64_t v0;

  if ((unint64_t)(*(_QWORD *)(v0 + 16) - 3) >= 0xFFFFFFFFFFFFFFFELL)
    return 10;
  else
    return 0;
}

uint64_t sub_23F436F68()
{
  uint64_t v0;

  if ((unint64_t)(*(_QWORD *)(v0 + 16) - 3) >= 0xFFFFFFFFFFFFFFFELL)
    return 20;
  else
    return 0;
}

uint64_t FullPlannerPreferencesDomain.FullPlannerResourceModel.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FullPlannerPreferencesDomain.FullPlannerResourceModel.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t FullPlannerPreferencesDomain.FullPlannerResourceModel.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FullPlannerPreferencesDomain.FullPlannerResourceModel.init(from:)(a1);
  return v2;
}

_QWORD *FullPlannerPreferencesDomain.FullPlannerResourceModel.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];

  v3 = v1;
  v11[1] = *v1;
  v5 = sub_23F35D2E8(&qword_256E73F78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35EA9C(a1, a1[3]);
  sub_23F438934();
  sub_23F61CD84();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v9 = sub_23F61CB38();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v3[2] = v9;
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_23F437110@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = FullPlannerPreferencesDomain.FullPlannerResourceModel.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23F43713C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static FullPlannerPreferencesDomain.otaResource.getter();
  *a1 = result;
  return result;
}

uint64_t sub_23F437160@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static FullPlannerPreferencesDomain.bundleResource.getter();
  *a1 = result;
  return result;
}

uint64_t FullPlannerPreferences.$fullPlannerServerBasePath.getter()
{
  sub_23F35D2E8(&qword_256E6F5A0);
  return sub_23F617C54();
}

void FullPlannerPreferences.$fullPlannerServerBasePath.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F617C60();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerServerBasePath.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = malloc(0x30uLL);
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  sub_23F617C54();
  sub_23F362B80();
}

void sub_23F43726C(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  void *v3;
  void *v4;

  sub_23F43A3B8(a1);
  v3 = (void *)v1[4];
  v4 = (void *)v1[5];
  if ((v2 & 1) != 0)
  {
    sub_23F43A400();
    sub_23F43A410();
    sub_23F3D09D0((uint64_t)v3);
  }
  else
  {
    sub_23F43A410();
  }
  sub_23F3D09D0((uint64_t)v4);
  free(v4);
  free(v3);
  sub_23F43A418();
  sub_23F43A390(v1);
}

void FullPlannerPreferences.$fullPlannerModelName.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerModelName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerModelName.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 20));
  sub_23F362B80();
}

void FullPlannerPreferences.fullPlannerPrompt.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A3B0();
  sub_23F43A384();
}

void FullPlannerPreferences.$fullPlannerPrompt.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerPrompt.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerPrompt.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 24));
  sub_23F362B80();
}

void FullPlannerPreferences.$fullPlannerModelInterface.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerModelInterface.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerModelInterface.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 28));
  sub_23F362B80();
}

void FullPlannerPreferences.fullPlannerModelBundleIdentifier.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A3B0();
  sub_23F43A384();
}

void FullPlannerPreferences.$fullPlannerModelBundleIdentifier.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerModelBundleIdentifier.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerModelBundleIdentifier.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 32));
  sub_23F362B80();
}

void FullPlannerPreferences.$fullPlannerEnforcePlannerStringsAreQuotes.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerEnforcePlannerStringsAreQuotes.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerEnforcePlannerStringsAreQuotes.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A8);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 36));
  sub_23F362B80();
}

void FullPlannerPreferences.$fullPlannerEnforceConstrainedDecoding.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerEnforceConstrainedDecoding.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerEnforceConstrainedDecoding.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A8);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 40));
  sub_23F362B80();
}

void FullPlannerPreferences.fullPlannerConstrainedDecodingMode.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A3B0();
  sub_23F43A384();
}

void FullPlannerPreferences.$fullPlannerConstrainedDecodingMode.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerConstrainedDecodingMode.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerConstrainedDecodingMode.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 44));
  sub_23F362B80();
}

void FullPlannerPreferences.fullPlannerConstrainedDecodingWithProgressiveDisclosure.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A3A8();
  sub_23F43A384();
}

void FullPlannerPreferences.$fullPlannerConstrainedDecodingWithProgressiveDisclosure.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerConstrainedDecodingWithProgressiveDisclosure.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerConstrainedDecodingWithProgressiveDisclosure.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A8);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 48));
  sub_23F362B80();
}

void FullPlannerPreferences.fullPlannerConstrainedDecodingSupportsPrintBuiltin.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A3A8();
  sub_23F43A384();
}

void FullPlannerPreferences.$fullPlannerConstrainedDecodingSupportsPrintBuiltin.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerConstrainedDecodingSupportsPrintBuiltin.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerConstrainedDecodingSupportsPrintBuiltin.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A8);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 52));
  sub_23F362B80();
}

void FullPlannerPreferences.fullPlannerGrammarQuotableNonTerminal.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A3B0();
  sub_23F43A384();
}

void FullPlannerPreferences.$fullPlannerGrammarQuotableNonTerminal.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerGrammarQuotableNonTerminal.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerGrammarQuotableNonTerminal.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 56));
  sub_23F362B80();
}

void FullPlannerPreferences.$fullPlannerHideUnseenSpanTypes.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerHideUnseenSpanTypes.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerHideUnseenSpanTypes.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A8);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 60));
  sub_23F362B80();
}

void FullPlannerPreferences.$fullPlannerEnumCaseLimit.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E70CB8);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerEnumCaseLimit.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E70CB8);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerEnumCaseLimit.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E70CB8);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 64));
  sub_23F362B80();
}

void FullPlannerPreferences.$fullPlannerDynamicEnumCaseLimit.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E70CB8);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerDynamicEnumCaseLimit.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E70CB8);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerDynamicEnumCaseLimit.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E70CB8);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 68));
  sub_23F362B80();
}

void FullPlannerPreferences.$fullPlannerUseLLMDraftCache.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerUseLLMDraftCache.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerUseLLMDraftCache.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A8);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 72));
  sub_23F362B80();
}

void FullPlannerPreferences.$fullPlannerUseGMSTemplate.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A37C();
  sub_23F362928();
}

void FullPlannerPreferences.$fullPlannerUseGMSTemplate.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerUseGMSTemplate.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A8);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 76));
  sub_23F362B80();
}

void FullPlannerPreferences.$fullPlannerEndAfterPromptGeneration.getter()
{
  sub_23F362D8C();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A37C();
  sub_23F362928();
}

void sub_23F43820C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;

  v9 = sub_23F35D2E8(a5);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3B17A4();
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v6, a1);
  a6(v6);
  sub_23F362B80();
}

void FullPlannerPreferences.$fullPlannerEndAfterPromptGeneration.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F362D8C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void FullPlannerPreferences.$fullPlannerEndAfterPromptGeneration.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E6F5A8);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F362D8C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 80));
  sub_23F362B80();
}

void sub_23F438328(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  void *v3;
  void *v4;

  sub_23F43A3B8(a1);
  v3 = (void *)v1[4];
  v4 = (void *)v1[5];
  if ((v2 & 1) != 0)
  {
    sub_23F43A400();
    sub_23F43A410();
    sub_23F3D09D0((uint64_t)v3);
  }
  else
  {
    sub_23F43A410();
  }
  sub_23F3D09D0((uint64_t)v4);
  free(v4);
  free(v3);
  sub_23F43A418();
  sub_23F43A390(v1);
}

uint64_t sub_23F4383B0()
{
  swift_getKeyPath();
  sub_23F439EF0();
  sub_23F43A36C();
  sub_23F362D8C();
  swift_getKeyPath();
  sub_23F43A36C();
  swift_getKeyPath();
  sub_23F43A36C();
  swift_getKeyPath();
  sub_23F43A36C();
  swift_getKeyPath();
  sub_23F43A36C();
  swift_getKeyPath();
  sub_23F43A3F4();
  sub_23F43A35C();
  swift_getKeyPath();
  sub_23F43A3F4();
  sub_23F43A35C();
  swift_getKeyPath();
  sub_23F43A36C();
  swift_getKeyPath();
  sub_23F43A3F4();
  sub_23F43A35C();
  swift_getKeyPath();
  sub_23F43A3F4();
  sub_23F43A35C();
  sub_23F43A36C();
  swift_getKeyPath();
  sub_23F43A3F4();
  sub_23F43A35C();
  swift_getKeyPath();
  sub_23F43A3D0();
  swift_getKeyPath();
  sub_23F43A3D0();
  sub_23F43A35C();
  sub_23F43A35C();
  return sub_23F43A35C();
}

void sub_23F438874()
{
  uint64_t v0;

  v0 = sub_23F362D8C();
  sub_23F3F3F64(v0, qword_256E7FE90);
  sub_23F361498(v0, (uint64_t)qword_256E7FE90);
  sub_23F4383B0();
  sub_23F362928();
}

uint64_t sub_23F4388B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FullPlannerPreferences();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F4388F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FullPlannerPreferences();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23F438934()
{
  unint64_t result;

  result = qword_256E73F80;
  if (!qword_256E73F80)
  {
    result = MEMORY[0x242670A44](&unk_23F621C84, &type metadata for FullPlannerPreferencesDomain.FullPlannerResourceModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E73F80);
  }
  return result;
}

uint64_t static Preferences.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  void (*v5)(_BYTE *, _QWORD);
  _BYTE v7[32];

  v3 = *a1;
  if (qword_256E6EE90 != -1)
    swift_once();
  v4 = (_QWORD *)MEMORY[0x24BEE2B70];
  sub_23F361498(*(_QWORD *)(v3 + *MEMORY[0x24BEE2B70]), (uint64_t)qword_256E7FE90);
  sub_23F3B1450();
  v5 = (void (*)(_BYTE *, _QWORD))swift_readAtKeyPath();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*v4 + v3 + 8) - 8) + 16))(a2);
  v5(v7, 0);
  return swift_endAccess();
}

{
  uint64_t v3;
  _QWORD *v4;
  void (*v5)(_BYTE *, _QWORD);
  _BYTE v7[32];

  v3 = *a1;
  if (qword_256E6F0B8 != -1)
    swift_once();
  v4 = (_QWORD *)MEMORY[0x24BEE2B70];
  sub_23F361498(*(_QWORD *)(v3 + *MEMORY[0x24BEE2B70]), (uint64_t)qword_256E803F8);
  sub_23F3B1450();
  v5 = (void (*)(_BYTE *, _QWORD))swift_readAtKeyPath();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*v4 + v3 + 8) - 8) + 16))(a2);
  v5(v7, 0);
  return swift_endAccess();
}

uint64_t static Preferences.subscript.setter(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v3 = *a2;
  v4 = (uint64_t *)MEMORY[0x24BEE2B70];
  v5 = *(_QWORD *)(*MEMORY[0x24BEE2B70] + *a2 + 8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v11 - v8;
  if (qword_256E6EE90 != -1)
  {
    swift_once();
    v7 = *v4;
  }
  sub_23F361498(*(_QWORD *)(v3 + v7), (uint64_t)qword_256E7FE90);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  sub_23F3B1450();
  swift_setAtWritableKeyPath();
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v3 = *a2;
  v4 = (uint64_t *)MEMORY[0x24BEE2B70];
  v5 = *(_QWORD *)(*MEMORY[0x24BEE2B70] + *a2 + 8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v11 - v8;
  if (qword_256E6F0B8 != -1)
  {
    swift_once();
    v7 = *v4;
  }
  sub_23F361498(*(_QWORD *)(v3 + v7), (uint64_t)qword_256E803F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  sub_23F3B1450();
  swift_setAtWritableKeyPath();
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

void static Preferences.subscript.modify(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  *v4 = a2;
  v5 = *(_QWORD *)(*MEMORY[0x24BEE2B70] + *a2 + 8);
  v4[1] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[2] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v4[3] = malloc(v7);
  v8 = malloc(v7);
  v4[4] = v8;
  static Preferences.subscript.getter(a2, (uint64_t)v8);
  sub_23F362B80();
}

{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  *v4 = a2;
  v5 = *(_QWORD *)(*MEMORY[0x24BEE2B70] + *a2 + 8);
  v4[1] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[2] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v4[3] = malloc(v7);
  v8 = malloc(v7);
  v4[4] = v8;
  static Preferences.subscript.getter(a2, (uint64_t)v8);
  sub_23F362B80();
}

void sub_23F438BE8(uint64_t ***a1, char a2)
{
  uint64_t **v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (uint64_t)(*a1)[4];
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    v7 = *v2;
    ((void (*)(uint64_t *, uint64_t, uint64_t *))v6[2])((*a1)[3], v4, v5);
    swift_retain();
    static Preferences.subscript.setter((uint64_t)v3, v7);
    ((void (*)(uint64_t, uint64_t *))v6[1])(v4, v5);
  }
  else
  {
    v8 = *v2;
    swift_retain();
    static Preferences.subscript.setter(v4, v8);
  }
  sub_23F43A418();
  free(v3);
  free(v2);
}

void sub_23F438C88()
{
  FullPlannerPreferences.$fullPlannerServerBasePath.getter();
  sub_23F362928();
}

void sub_23F438CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A0, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerServerBasePath.setter);
}

void sub_23F438CC8()
{
  FullPlannerPreferences.$fullPlannerModelName.getter();
  sub_23F362928();
}

void sub_23F438CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A0, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerModelName.setter);
}

void sub_23F438D08()
{
  FullPlannerPreferences.$fullPlannerPrompt.getter();
  sub_23F362928();
}

void sub_23F438D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A0, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerPrompt.setter);
}

void sub_23F438D48()
{
  FullPlannerPreferences.$fullPlannerModelInterface.getter();
  sub_23F362928();
}

void sub_23F438D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A0, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerModelInterface.setter);
}

void sub_23F438D88()
{
  FullPlannerPreferences.$fullPlannerModelBundleIdentifier.getter();
  sub_23F362928();
}

void sub_23F438DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A0, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerModelBundleIdentifier.setter);
}

void sub_23F438DC8()
{
  FullPlannerPreferences.$fullPlannerEnforcePlannerStringsAreQuotes.getter();
  sub_23F362928();
}

void sub_23F438DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A8, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerEnforcePlannerStringsAreQuotes.setter);
}

void sub_23F438E08()
{
  FullPlannerPreferences.$fullPlannerEnforceConstrainedDecoding.getter();
  sub_23F362928();
}

void sub_23F438E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A8, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerEnforceConstrainedDecoding.setter);
}

void sub_23F438E48()
{
  FullPlannerPreferences.$fullPlannerConstrainedDecodingMode.getter();
  sub_23F362928();
}

void sub_23F438E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A0, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerConstrainedDecodingMode.setter);
}

void sub_23F438E88()
{
  FullPlannerPreferences.$fullPlannerConstrainedDecodingWithProgressiveDisclosure.getter();
  sub_23F362928();
}

void sub_23F438EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A8, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerConstrainedDecodingWithProgressiveDisclosure.setter);
}

void sub_23F438EC8()
{
  FullPlannerPreferences.$fullPlannerConstrainedDecodingSupportsPrintBuiltin.getter();
  sub_23F362928();
}

void sub_23F438EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A8, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerConstrainedDecodingSupportsPrintBuiltin.setter);
}

void sub_23F438F08()
{
  FullPlannerPreferences.$fullPlannerGrammarQuotableNonTerminal.getter();
  sub_23F362928();
}

void sub_23F438F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A0, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerGrammarQuotableNonTerminal.setter);
}

void sub_23F438F48()
{
  FullPlannerPreferences.$fullPlannerHideUnseenSpanTypes.getter();
  sub_23F362928();
}

void sub_23F438F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A8, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerHideUnseenSpanTypes.setter);
}

void sub_23F438F88()
{
  FullPlannerPreferences.$fullPlannerEnumCaseLimit.getter();
  sub_23F362928();
}

void sub_23F438FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E70CB8, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerEnumCaseLimit.setter);
}

void sub_23F438FC8()
{
  FullPlannerPreferences.$fullPlannerDynamicEnumCaseLimit.getter();
  sub_23F362928();
}

void sub_23F438FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E70CB8, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerDynamicEnumCaseLimit.setter);
}

void sub_23F439008()
{
  FullPlannerPreferences.$fullPlannerUseLLMDraftCache.getter();
  sub_23F362928();
}

void sub_23F439024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A8, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerUseLLMDraftCache.setter);
}

void sub_23F439048()
{
  FullPlannerPreferences.$fullPlannerUseGMSTemplate.getter();
  sub_23F362928();
}

void sub_23F439064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A8, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerUseGMSTemplate.setter);
}

void sub_23F439088()
{
  FullPlannerPreferences.$fullPlannerEndAfterPromptGeneration.getter();
  sub_23F362928();
}

void sub_23F4390A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F43820C(a1, a2, a3, a4, &qword_256E6F5A8, (void (*)(uint64_t))FullPlannerPreferences.$fullPlannerEndAfterPromptGeneration.setter);
}

ValueMetadata *type metadata accessor for FullPlannerPreferencesDomain()
{
  return &type metadata for FullPlannerPreferencesDomain;
}

uint64_t type metadata accessor for FullPlannerPreferencesDomain.FullPlannerResourceModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for FullPlannerPreferencesDomain.FullPlannerResourceModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FullPlannerPreferencesDomain.FullPlannerResourceModel.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

char *initializeBufferWithCopyOfBuffer for FullPlannerPreferences(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F35D2E8(&qword_256E6F5A0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8(&a1[a3[5]], &a2[a3[5]], v7);
    v8(&a1[a3[6]], &a2[a3[6]], v7);
    v8(&a1[a3[7]], &a2[a3[7]], v7);
    v8(&a1[a3[8]], &a2[a3[8]], v7);
    v9 = a3[9];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_23F35D2E8(&qword_256E6F5A8);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13(&a1[a3[10]], &a2[a3[10]], v12);
    v8(&a1[a3[11]], &a2[a3[11]], v7);
    v13(&a1[a3[12]], &a2[a3[12]], v12);
    v13(&a1[a3[13]], &a2[a3[13]], v12);
    v8(&a1[a3[14]], &a2[a3[14]], v7);
    v13(&a1[a3[15]], &a2[a3[15]], v12);
    v14 = a3[16];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = sub_23F35D2E8(&qword_256E70CB8);
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v18(&a1[a3[17]], &a2[a3[17]], v17);
    v13(&a1[a3[18]], &a2[a3[18]], v12);
    v13(&a1[a3[19]], &a2[a3[19]], v12);
    v13(&a1[a3[20]], &a2[a3[20]], v12);
  }
  return a1;
}

uint64_t destroy for FullPlannerPreferences(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t);

  v4 = sub_23F35D2E8(&qword_256E6F5A0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v5(a1 + a2[6], v4);
  v5(a1 + a2[7], v4);
  v5(a1 + a2[8], v4);
  v6 = a1 + a2[9];
  v7 = sub_23F35D2E8(&qword_256E6F5A8);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v12(v6, v7);
  v12(a1 + a2[10], v7);
  v5(a1 + a2[11], v4);
  v12(a1 + a2[12], v7);
  v12(a1 + a2[13], v7);
  v5(a1 + a2[14], v4);
  v12(a1 + a2[15], v7);
  v8 = a1 + a2[16];
  v9 = sub_23F35D2E8(&qword_256E70CB8);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(a1 + a2[17], v9);
  v12(a1 + a2[18], v7);
  v12(a1 + a2[19], v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v12)(a1 + a2[20], v7);
}

uint64_t initializeWithCopy for FullPlannerPreferences(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F35D2E8(&qword_256E6F5A0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v8 = a3[9];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23F35D2E8(&qword_256E6F5A8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v12(a1 + a3[10], a2 + a3[10], v11);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v12(a1 + a3[12], a2 + a3[12], v11);
  v12(a1 + a3[13], a2 + a3[13], v11);
  v7(a1 + a3[14], a2 + a3[14], v6);
  v12(a1 + a3[15], a2 + a3[15], v11);
  v13 = a3[16];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23F35D2E8(&qword_256E70CB8);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v17(v14, v15, v16);
  v17(a1 + a3[17], a2 + a3[17], v16);
  v12(a1 + a3[18], a2 + a3[18], v11);
  v12(a1 + a3[19], a2 + a3[19], v11);
  v12(a1 + a3[20], a2 + a3[20], v11);
  return a1;
}

uint64_t assignWithCopy for FullPlannerPreferences(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F35D2E8(&qword_256E6F5A0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v8 = a3[9];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23F35D2E8(&qword_256E6F5A8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  v12(a1 + a3[10], a2 + a3[10], v11);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v12(a1 + a3[12], a2 + a3[12], v11);
  v12(a1 + a3[13], a2 + a3[13], v11);
  v7(a1 + a3[14], a2 + a3[14], v6);
  v12(a1 + a3[15], a2 + a3[15], v11);
  v13 = a3[16];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23F35D2E8(&qword_256E70CB8);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v17(a1 + a3[17], a2 + a3[17], v16);
  v12(a1 + a3[18], a2 + a3[18], v11);
  v12(a1 + a3[19], a2 + a3[19], v11);
  v12(a1 + a3[20], a2 + a3[20], v11);
  return a1;
}

uint64_t initializeWithTake for FullPlannerPreferences(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F35D2E8(&qword_256E6F5A0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v8 = a3[9];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23F35D2E8(&qword_256E6F5A8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + a3[10], a2 + a3[10], v11);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v12(a1 + a3[12], a2 + a3[12], v11);
  v12(a1 + a3[13], a2 + a3[13], v11);
  v7(a1 + a3[14], a2 + a3[14], v6);
  v12(a1 + a3[15], a2 + a3[15], v11);
  v13 = a3[16];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23F35D2E8(&qword_256E70CB8);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  v17(a1 + a3[17], a2 + a3[17], v16);
  v12(a1 + a3[18], a2 + a3[18], v11);
  v12(a1 + a3[19], a2 + a3[19], v11);
  v12(a1 + a3[20], a2 + a3[20], v11);
  return a1;
}

uint64_t assignWithTake for FullPlannerPreferences(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F35D2E8(&qword_256E6F5A0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v8 = a3[9];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23F35D2E8(&qword_256E6F5A8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(a1 + a3[10], a2 + a3[10], v11);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v12(a1 + a3[12], a2 + a3[12], v11);
  v12(a1 + a3[13], a2 + a3[13], v11);
  v7(a1 + a3[14], a2 + a3[14], v6);
  v12(a1 + a3[15], a2 + a3[15], v11);
  v13 = a3[16];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23F35D2E8(&qword_256E70CB8);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  v17(a1 + a3[17], a2 + a3[17], v16);
  v12(a1 + a3[18], a2 + a3[18], v11);
  v12(a1 + a3[19], a2 + a3[19], v11);
  v12(a1 + a3[20], a2 + a3[20], v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for FullPlannerPreferences()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F439CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F35D2E8(&qword_256E6F5A0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v9 = sub_23F35D2E8(&qword_256E6F5A8);
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v9;
      v10 = *(int *)(a3 + 36);
    }
    else
    {
      v7 = sub_23F35D2E8(&qword_256E70CB8);
      v10 = *(int *)(a3 + 64);
    }
    v8 = a1 + v10;
  }
  return sub_23F36195C(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for FullPlannerPreferences()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F439D5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_23F35D2E8(&qword_256E6F5A0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v11 = sub_23F35D2E8(&qword_256E6F5A8);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = *(int *)(a4 + 36);
    }
    else
    {
      v9 = sub_23F35D2E8(&qword_256E70CB8);
      v12 = *(int *)(a4 + 64);
    }
    v10 = a1 + v12;
  }
  return sub_23F36196C(v10, a2, a2, v9);
}

void sub_23F439DFC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F439F2C(319, &qword_256E74090);
  if (v0 <= 0x3F)
  {
    sub_23F439F2C(319, &qword_256E740A0);
    if (v1 <= 0x3F)
    {
      sub_23F439F2C(319, qword_256E740A8);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

unint64_t sub_23F439EF0()
{
  unint64_t result;

  result = qword_256E74098;
  if (!qword_256E74098)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for FullPlannerPreferencesDomain, &type metadata for FullPlannerPreferencesDomain);
    atomic_store(result, (unint64_t *)&qword_256E74098);
  }
  return result;
}

void sub_23F439F2C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    sub_23F439EF0();
    v3 = sub_23F617C90();
    if (!v4)
      atomic_store(v3, a2);
  }
  sub_23F362B80();
}

uint64_t storeEnumTagSinglePayload for FullPlannerPreferencesDomain.FullPlannerResourceModel.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F439FC4 + 4 * byte_23F621A90[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F439FE4 + 4 * byte_23F621A95[v4]))();
}

_BYTE *sub_23F439FC4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F439FE4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F439FEC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F439FF4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F439FFC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F43A004(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FullPlannerPreferencesDomain.FullPlannerResourceModel.CodingKeys()
{
  return &type metadata for FullPlannerPreferencesDomain.FullPlannerResourceModel.CodingKeys;
}

unint64_t sub_23F43A024()
{
  unint64_t result;

  result = qword_256E74118;
  if (!qword_256E74118)
  {
    result = MEMORY[0x242670A44](&unk_23F621C5C, &type metadata for FullPlannerPreferencesDomain.FullPlannerResourceModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74118);
  }
  return result;
}

unint64_t sub_23F43A064()
{
  unint64_t result;

  result = qword_256E74120;
  if (!qword_256E74120)
  {
    result = MEMORY[0x242670A44](&unk_23F621B94, &type metadata for FullPlannerPreferencesDomain.FullPlannerResourceModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74120);
  }
  return result;
}

unint64_t sub_23F43A0A4()
{
  unint64_t result;

  result = qword_256E74128;
  if (!qword_256E74128)
  {
    result = MEMORY[0x242670A44](&unk_23F621BBC, &type metadata for FullPlannerPreferencesDomain.FullPlannerResourceModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E74128);
  }
  return result;
}

uint64_t sub_23F43A0E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_23F436F4C();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23F43A110@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_23F436F68();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

unint64_t sub_23F43A140()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E74130;
  if (!qword_256E74130)
  {
    v1 = type metadata accessor for FullPlannerPreferencesDomain.FullPlannerResourceModel();
    result = MEMORY[0x242670A44](&protocol conformance descriptor for FullPlannerPreferencesDomain.FullPlannerResourceModel, v1);
    atomic_store(result, (unint64_t *)&qword_256E74130);
  }
  return result;
}

unint64_t sub_23F43A17C()
{
  unint64_t result;

  result = qword_256E74140;
  if (!qword_256E74140)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E74140);
  }
  return result;
}

void sub_23F43A1B8()
{
  unint64_t *v0;
  unint64_t v1;

  sub_23F43A3E8();
  *v0 = sub_23F436DAC();
  v0[1] = v1;
  sub_23F362928();
}

void sub_23F43A1D8()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23F43A3E8();
  *v0 = sub_23F436DF8();
  v0[1] = v1;
  sub_23F362928();
}

void sub_23F43A1F8()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23F43A3E8();
  *v0 = sub_23F436E48();
  v0[1] = v1;
  sub_23F362928();
}

void sub_23F43A218()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23F43A3E8();
  *v0 = sub_23F436E88();
  v0[1] = v1;
  sub_23F362928();
}

void sub_23F43A238()
{
  unint64_t *v0;
  unint64_t v1;

  sub_23F43A3E8();
  *v0 = sub_23F436EC0();
  v0[1] = v1;
  sub_23F362928();
}

void sub_23F43A258()
{
  _BYTE *v0;

  sub_23F43A3E8();
  *v0 = sub_23F436F34();
  sub_23F362928();
}

double sub_23F43A278@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 6.7607392e199;
  *a1 = xmmword_23F621EE0;
  return result;
}

void sub_23F43A288(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void sub_23F43A290(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_23F43A2AC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v3);
}

void *sub_23F43A2D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = a1;
  v2 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v1 + 16) = v2;
  return malloc(*(_QWORD *)(v2 + 64));
}

uint64_t sub_23F43A2F0@<X0>(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 48) = a1;
  return sub_23F617C54();
}

void *sub_23F43A304()
{
  size_t v0;

  return malloc(v0);
}

uint64_t sub_23F43A30C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F43A330()
{
  return sub_23F617C60();
}

_QWORD *sub_23F43A340(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = result;
  *result = v2;
  return result;
}

void *sub_23F43A350()
{
  return malloc(0x38uLL);
}

uint64_t sub_23F43A35C()
{
  return sub_23F617C78();
}

uint64_t sub_23F43A36C()
{
  return sub_23F617C78();
}

uint64_t sub_23F43A37C()
{
  return sub_23F617C54();
}

void sub_23F43A390(void *a1)
{
  free(a1);
}

uint64_t sub_23F43A3A8()
{
  return sub_23F617C48();
}

uint64_t sub_23F43A3B0()
{
  return sub_23F617C48();
}

uint64_t sub_23F43A3B8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 16) + 16))(*(_QWORD *)(*(_QWORD *)a1 + 32), *(_QWORD *)(*(_QWORD *)a1 + 40), *(_QWORD *)(*(_QWORD *)a1 + 8));
}

uint64_t sub_23F43A3D0()
{
  return sub_23F617C78();
}

uint64_t sub_23F43A400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t sub_23F43A410()
{
  return sub_23F617C60();
}

void sub_23F43A418()
{
  void *v0;

  free(v0);
}

uint64_t sub_23F43A420()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F3F3D0C(v1, v0);
}

unint64_t static FullPlannerError.errorDomain.getter()
{
  return 0xD000000000000010;
}

uint64_t FullPlannerError.errorCode.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL static FullPlannerError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FullPlannerError.hash(into:)()
{
  return sub_23F61CD3C();
}

uint64_t FullPlannerError.hashValue.getter()
{
  sub_23F61CD30();
  sub_23F61CD3C();
  return sub_23F61CD60();
}

unint64_t sub_23F43A4E0()
{
  unint64_t result;

  result = qword_256E74148;
  if (!qword_256E74148)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for FullPlannerError, &type metadata for FullPlannerError);
    atomic_store(result, (unint64_t *)&qword_256E74148);
  }
  return result;
}

uint64_t sub_23F43A51C()
{
  sub_23F43A720();
  return sub_23F61CCAC();
}

uint64_t sub_23F43A544()
{
  sub_23F43A720();
  return sub_23F61CCA0();
}

unint64_t sub_23F43A570()
{
  unint64_t result;

  result = qword_256E74150;
  if (!qword_256E74150)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for FullPlannerError, &type metadata for FullPlannerError);
    atomic_store(result, (unint64_t *)&qword_256E74150);
  }
  return result;
}

unint64_t sub_23F43A5AC()
{
  static FullPlannerError.errorDomain.getter();
  return 0xD000000000000010;
}

uint64_t getEnumTagSinglePayload for FullPlannerError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FullPlannerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23F43A6A0 + 4 * byte_23F621EF5[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23F43A6D4 + 4 * byte_23F621EF0[v4]))();
}

uint64_t sub_23F43A6D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F43A6DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F43A6E4);
  return result;
}

uint64_t sub_23F43A6F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F43A6F8);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23F43A6FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F43A704(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FullPlannerError()
{
  return &type metadata for FullPlannerError;
}

unint64_t sub_23F43A720()
{
  unint64_t result;

  result = qword_256E74158;
  if (!qword_256E74158)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for FullPlannerError, &type metadata for FullPlannerError);
    atomic_store(result, (unint64_t *)&qword_256E74158);
  }
  return result;
}

uint64_t sub_23F43A75C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = sub_23F617A38();
  v3 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v13 = v1;
    v15 = MEMORY[0x24BEE4AF8];
    sub_23F37C0F8();
    v7 = v15;
    v8 = *(_QWORD *)(sub_23F617A50() - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_23F617A44();
      v15 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      if (v11 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_23F37C0F8();
        v7 = v15;
      }
      *(_QWORD *)(v7 + 16) = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v11, v5, v14);
      v9 += v10;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_23F43A8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v2 = v13;
    v4 = *(_QWORD *)(sub_23F61BE00() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_23F61BDF4();
      v9 = v8;
      v10 = *(_QWORD *)(v13 + 16);
      if (v10 >= *(_QWORD *)(v13 + 24) >> 1)
        sub_23F37B47C();
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

unint64_t sub_23F43A9B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v13;

  v1 = sub_23F61B104();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F35D2E8(&qword_256E705E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39E478(a1, (uint64_t)v7, &qword_256E705E0);
  LOBYTE(a1) = 1;
  if (sub_23F36195C((uint64_t)v7, 1, v1) == 1)
  {
    v9 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    v10 = sub_23F445604();
    v11 = v10;
    a1 = HIDWORD(v10) & 1;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v9 = v11;
  }
  return v9 | ((unint64_t)a1 << 32);
}

uint64_t sub_23F43AAD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (**v30)(uint64_t, uint64_t);
  unint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD, _QWORD, _QWORD);
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  _DWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  char *v64;
  void (*v65)(_QWORD, _QWORD, _QWORD);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;

  v2 = sub_23F617A20();
  v69 = *(_QWORD *)(v2 - 8);
  v70 = v2;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v68 = v4;
  sub_23F39C56C();
  v5 = sub_23F617A38();
  v71 = *(_QWORD *)(v5 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F362AAC();
  v9 = v7 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v57 - v11;
  v13 = sub_23F3B1728();
  v60 = *(_QWORD *)(v13 - 8);
  v61 = v13;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  v63 = v15;
  sub_23F39C56C();
  v16 = sub_23F6179FC();
  v58 = *(_QWORD *)(v16 - 8);
  v59 = v16;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F36285C();
  v57[1] = v18;
  sub_23F35D2E8(&qword_256E74288);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F38F964();
  v22 = v21 - v20;
  v23 = sub_23F617A08();
  sub_23F36FF38(v23, v22);
  sub_23F362984();
  v24 = sub_23F617A68();
  v25 = sub_23F4413B4(v22);
  if (v26)
  {
    sub_23F3D9844(v22, &qword_256E74288);
    v28 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v27 = MEMORY[0x24266AF6C](v25);
    sub_23F383CA8(v22, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8));
    v28 = sub_23F43A75C(v27);
    sub_23F362984();
  }
  v29 = *(_QWORD *)(v28 + 16);
  v30 = (uint64_t (**)(uint64_t, uint64_t))v71;
  v62 = a1;
  if (v29)
  {
    v31 = v28 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
    v32 = *(_QWORD *)(v71 + 72);
    v33 = *(void (**)(_QWORD, _QWORD, _QWORD))(v71 + 16);
    v72 = *MEMORY[0x24BEB8230];
    v57[0] = v28;
    sub_23F617BA0();
    v34 = MEMORY[0x24BEE4AF8];
    v66 = v32;
    v67 = v9;
    v64 = v12;
    v65 = v33;
    do
    {
      v33(v12, v31, v5);
      v33(v9, v12, v5);
      v35 = v30[11](v9, v5);
      if (v35 == v72)
      {
        sub_23F38456C(v9, v30[12]);
        v36 = v68;
        v37 = v69;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32))(v68, v9, v70);
        v38 = sub_23F617A14();
        v40 = v39;
        v41 = v36;
        v30 = (uint64_t (**)(uint64_t, uint64_t))v71;
        sub_23F383E88(v41, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
        sub_23F38456C((uint64_t)v12, v30[1]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F441424();
          v34 = v45;
        }
        v42 = *(_QWORD *)(v34 + 16);
        if (v42 >= *(_QWORD *)(v34 + 24) >> 1)
        {
          sub_23F441424();
          v34 = v46;
        }
        *(_QWORD *)(v34 + 16) = v42 + 1;
        v43 = v34 + 16 * v42;
        *(_QWORD *)(v43 + 32) = v38;
        *(_QWORD *)(v43 + 40) = v40;
        v32 = v66;
        v9 = v67;
        v12 = v64;
        v33 = v65;
      }
      else
      {
        v44 = v30[1];
        v44(v9, v5);
        v44((uint64_t)v12, v5);
      }
      v31 += v32;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease_n();
    a1 = v62;
  }
  else
  {
    sub_23F362D18();
    v34 = MEMORY[0x24BEE4AF8];
  }
  v74 = v34;
  sub_23F35D2E8(&qword_256E70580);
  sub_23F3EC7C8();
  v47 = sub_23F61C088();
  swift_bridgeObjectRelease();
  sub_23F617A2C();
  v48 = sub_23F6179F0();
  v50 = v49;
  sub_23F3C3DC8(v58);
  v51 = v63;
  sub_23F619088();
  swift_bridgeObjectRetain_n();
  sub_23F619E8C();
  v52 = sub_23F3B1A04();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (_DWORD *)sub_23F366668();
    v74 = sub_23F366668();
    *v53 = 136315138;
    sub_23F383EB0();
    sub_23F37AE00(v48, v50, &v74);
    v73 = v54;
    sub_23F435C2C();
    swift_bridgeObjectRelease_n();
    sub_23F4264A8(&dword_23F35A000, v51, v52, "Inference request via GMS completed with model identifier: %s");
    swift_arrayDestroy();
    sub_23F366530();
  }
  swift_bridgeObjectRelease_n();

  v55 = sub_23F4413E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(a1, v55);
  (*(void (**)(NSObject *, uint64_t))(v60 + 8))(v51, v61);
  return v47;
}

uint64_t sub_23F43AFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  v9[2] = a1;
  sub_23F35D2E8(&qword_256E74258);
  v9[11] = sub_23F366578();
  v10 = sub_23F4414A8();
  v9[12] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[13] = v11;
  v9[14] = *(_QWORD *)(v11 + 64);
  v9[15] = sub_23F4411DC();
  v9[16] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F43B06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(void);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F432AC4();
  v10 = v9[6];
  if (v10)
  {
    v11 = v9[5];
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = v10;
    sub_23F617BA0();
    sub_23F377C74();
    v14 = v13;
    v15 = *(_QWORD *)(v13 + 16);
    if (v15 >= *(_QWORD *)(v13 + 24) >> 1)
    {
      sub_23F441188();
      v14 = v29;
    }
    *(_QWORD *)(v14 + 16) = v15 + 1;
    v16 = v14 + 16 * v15;
    *(_QWORD *)(v16 + 32) = sub_23F4404FC;
    *(_QWORD *)(v16 + 40) = v12;
  }
  else
  {
    v14 = MEMORY[0x24BEE4AF8];
  }
  v18 = v9[11];
  v17 = v9[12];
  sub_23F39E478(v9[7], v18, &qword_256E74258);
  if (sub_23F36195C(v18, 1, v17) == 1)
  {
    sub_23F3D9844(v9[11], &qword_256E74258);
  }
  else
  {
    v20 = v9[15];
    v19 = v9[16];
    v21 = v9[13];
    v22 = *(void (**)(void))(v21 + 32);
    ((void (*)(uint64_t, uint64_t, uint64_t))v22)(v19, v9[11], v9[12]);
    sub_23F383C64(v20, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16));
    v23 = swift_allocObject();
    sub_23F4411EC();
    v22();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F441188();
      v14 = v30;
    }
    v24 = *(_QWORD *)(v14 + 16);
    if (v24 >= *(_QWORD *)(v14 + 24) >> 1)
    {
      sub_23F441188();
      v14 = v31;
    }
    v25 = v9[13];
    *(_QWORD *)(v14 + 16) = v24 + 1;
    v26 = v14 + 16 * v24;
    *(_QWORD *)(v26 + 32) = sub_23F440490;
    *(_QWORD *)(v26 + 40) = v23;
    sub_23F384274(v25);
  }
  v9[17] = v14;
  v27 = (_QWORD *)sub_23F3629C0();
  v9[18] = (uint64_t)v27;
  *v27 = v9;
  v27[1] = sub_23F43B26C;
  return sub_23F4410BC(v9[2], v9[3], v9[4], v14, v9[8], v9[9], a9);
}

uint64_t sub_23F43B26C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F432AC4();
  v13 = v2;
  v14 = v3;
  v12 = v1;
  v5 = v4;
  v12 = (_QWORD *)*v1;
  v6 = v12;
  sub_23F3B2010(&v12);
  v6[19] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_23F36679C();
    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F362CC8();
    sub_23F3666E4();
    sub_23F366698();
    v8 = sub_23F441408();
    return sub_23F441194(v8, v9, v10, v5, v11);
  }
}

uint64_t sub_23F43B310()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  return sub_23F3B182C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43B354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v5 = sub_23F35D2E8(&qword_256E74260);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v8 = a2;
  v8[1] = a3;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE3C3E0], v5);
  sub_23F61BEFC();
  sub_23F3612C0(&qword_256E74268, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A7E0], MEMORY[0x24BE7A7D8]);
  sub_23F617BA0();
  sub_23F61BF80();
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23F43B450(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_23F35D2E8(&qword_256E74270);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F617AD4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a2, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE3C3E0], v3);
  sub_23F61BEFC();
  sub_23F3612C0(&qword_256E74268, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A7E0], MEMORY[0x24BE7A7D8]);
  sub_23F61BF74();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23F43B54C()
{
  return sub_23F6179A8();
}

uint64_t sub_23F43B56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a2;
  v6 = sub_23F4413E0();
  v5[6] = v6;
  v5[7] = *(_QWORD *)(v6 - 8);
  v5[8] = sub_23F366578();
  v7 = sub_23F4413E8();
  v5[9] = v7;
  v5[10] = *(_QWORD *)(v7 - 8);
  v5[11] = sub_23F4411DC();
  v5[12] = sub_23F3666CC();
  v8 = sub_23F3B1728();
  v5[13] = v8;
  v5[14] = *(_QWORD *)(v8 - 8);
  v5[15] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F43B5F0()
{
  uint64_t *v0;
  void *v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = (void *)v0[15];
  sub_23F3B2130();
  sub_23F619E8C();
  v2 = sub_23F3B1A04();
  if (sub_23F3F0E3C(v2))
  {
    v3 = (_WORD *)sub_23F3EEE70();
    sub_23F3F0EF4(v3);
    sub_23F3F0DF0(&dword_23F35A000, v4, v5, "Running completion request using TokenGeneration");
    sub_23F366530();
  }
  v6 = v0[14];

  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  v0[16] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = sub_23F43B69C;
  return sub_23F43B7F0(v0[8], v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_23F43B69C()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B201C();
  *(_QWORD *)(v1 + 136) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F43B6F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F3836F0();
  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  sub_23F617960();
  sub_23F441488(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F38431C(v2, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v5 = sub_23F43AAD8(v2);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_23F383D74(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F3668E4();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F362CC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8))(v5, v7, v9, v11);
}

uint64_t sub_23F43B7AC()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  return sub_23F3B182C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43B7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[17] = a4;
  v5[18] = a5;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  v6 = sub_23F35D2E8(&qword_256E74290);
  v5[19] = v6;
  v5[20] = *(_QWORD *)(v6 - 8);
  v5[21] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E74298);
  v5[22] = swift_task_alloc();
  v5[23] = sub_23F35D2E8(&qword_256E742A0);
  v5[24] = swift_task_alloc();
  v7 = sub_23F6187C4();
  v5[25] = v7;
  v5[26] = *(_QWORD *)(v7 - 8);
  v5[27] = swift_task_alloc();
  v8 = sub_23F6187D0();
  v5[28] = v8;
  v5[29] = *(_QWORD *)(v8 - 8);
  v5[30] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E742A8);
  v5[31] = swift_task_alloc();
  v9 = sub_23F619DF0();
  v5[32] = v9;
  v5[33] = *(_QWORD *)(v9 - 8);
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  v10 = sub_23F61BEFC();
  v5[36] = v10;
  v5[37] = *(_QWORD *)(v10 - 8);
  v5[38] = swift_task_alloc();
  v5[39] = swift_task_alloc();
  v5[40] = swift_task_alloc();
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v5[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F43B9BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  void (*v14)(void);
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = v0[41];
  v2 = v0[42];
  v3 = v0[36];
  v4 = v0[37];
  v5 = v0[16];
  v6 = v0[17];
  v7 = v0[15];
  v8 = swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v5;
  sub_23F61BF08();
  sub_23F366708();
  sub_23F383C64(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  v9 = *(_QWORD *)(v6 + 16);
  v10 = v0[37];
  if (v9)
  {
    v11 = sub_23F617BA0() + 40;
    do
    {
      v12 = v0[41];
      v3 = v0[36];
      v13 = *(void (**)(uint64_t))(v11 - 8);
      swift_retain();
      v13(v12);
      swift_release();
      sub_23F383CA8(v12, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
      v14 = *(void (**)(void))(v10 + 32);
      sub_23F4411EC();
      v14();
      v11 += 16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    v10 = v0[37];
  }
  else
  {
    v14 = *(void (**)(void))(v10 + 32);
  }
  v0[44] = v14;
  v15 = v0[42];
  sub_23F4414D4();
  v14();
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  v0[45] = v16;
  sub_23F383E88(v15, v16);
  v17 = sub_23F619DE4();
  sub_23F3838D8(v3, v18, v19, v17);
  sub_23F4411AC();
  v20 = (_QWORD *)swift_task_alloc();
  v0[46] = v20;
  sub_23F441260(v20);
  return sub_23F441210();
}

uint64_t sub_23F43BB24()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1998();
  sub_23F3B201C();
  *(_QWORD *)(v1 + 376) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F43BB70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t inited;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v32)(uint64_t);
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t);

  v1 = *(_QWORD *)(v0 + 176);
  v2 = sub_23F35D2E8(&qword_256E742B0);
  if (sub_23F36195C(v1, 1, v2) == 1)
  {
    sub_23F3D9844(v1, &qword_256E74298);
  }
  else
  {
    v47 = *(void (**)(uint64_t))(v0 + 352);
    sub_23F4412F4();
    v37 = v4;
    v38 = v3;
    v39 = *(_QWORD *)(v0 + 256);
    v40 = v5;
    v43 = v6;
    v44 = *(_QWORD *)(v0 + 232);
    v7 = *(_QWORD *)(v0 + 224);
    v35 = *(_QWORD *)(v0 + 240);
    v36 = *(_QWORD *)(v0 + 216);
    v8 = *(_QWORD *)(v0 + 200);
    v9 = *(_QWORD *)(v0 + 208);
    v11 = *(_QWORD *)(v0 + 184);
    v10 = *(_QWORD *)(v0 + 192);
    v41 = *(_QWORD *)(v0 + 120);
    v42 = *(_QWORD *)(v0 + 128);
    v12 = v1 + *(int *)(v2 + 48);
    v13 = v10 + *(int *)(v11 + 48);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32);
    v14(v10, v1, v7);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    v15(v13, v12, v8);
    v16 = v10 + *(int *)(v11 + 48);
    v14(v35, v10, v7);
    v15(v36, v16, v8);
    sub_23F6187B8();
    sub_23F3E26DC(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
    sub_23F4412E0();
    sub_23F35D2E8(&qword_256E742C0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
    v18 = (_QWORD *)sub_23F4413F0(inited);
    v19 = MEMORY[0x24BE7AD80];
    v18[9] = MEMORY[0x24BEE0D00];
    v18[10] = v19;
    v18[6] = v41;
    *(_QWORD *)(inited + 56) = v42;
    sub_23F617BA0();
    sub_23F35D2E8(&qword_256E742C8);
    sub_23F441444();
    sub_23F441444();
    sub_23F6187AC();
    sub_23F362984();
    sub_23F362D18();
    sub_23F38456C(v36, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    sub_23F3D98EC(v35, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
    sub_23F4413D0(v45, v20, v21, v22, v23, v24, v25, v26, v35, v36, v37, v38, v39, v40, v41, v42, v0 + 16, v9, v43,
      v44,
      v45,
      v46);
    v27 = sub_23F441408();
    v47(v27);
  }
  v28 = *(_QWORD *)(v0 + 376);
  sub_23F3612C0(&qword_256E74268, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A7E0], MEMORY[0x24BE7A7D8]);
  sub_23F4414BC();
  sub_23F4412CC();
  if (v28)
  {
    v29 = *(_QWORD *)(v0 + 344);
    v30 = *(_QWORD *)(v0 + 264);
    sub_23F441234(*(_QWORD *)(v0 + 304));
    sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    sub_23F441234(v29);
    sub_23F4413A4();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return sub_23F441150(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v32 = *(void (**)(uint64_t))(v0 + 360);
    sub_23F441298(*(_QWORD *)(v0 + 304));
    sub_23F441394();
    v33 = (uint64_t (*)(uint64_t))MEMORY[0x24BEB8040];
    sub_23F3B1AC4();
    sub_23F61BF8C();
    v34 = sub_23F38422C();
    v32(v34);
    sub_23F4413E0();
    *(_QWORD *)(v0 + 384) = swift_task_alloc();
    sub_23F3612C0(&qword_256E742B8, v33, MEMORY[0x24BEB8018]);
    sub_23F44127C((uint64_t)sub_23F43BF10);
    return sub_23F44116C();
  }
}

uint64_t sub_23F43BF10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 392) = v1;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v0 + 160));
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F43BF6C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  sub_23F3B15E8();
  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 360);
  v2 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 288);
  sub_23F3C3DC8(*(_QWORD *)(v0 + 264));
  v1(v2, v3);
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  swift_task_dealloc();
  return sub_23F3B13B0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43C024()
{
  uint64_t v0;

  sub_23F3B14B8();
  sub_23F441140();
  sub_23F41C5F4();
  sub_23F44110C();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  return sub_23F3B1350(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43C098()
{
  uint64_t v0;

  sub_23F3B14B8();
  sub_23F441140();
  sub_23F41C5F4();
  sub_23F44110C();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  return sub_23F3B1350(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43C10C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v13[5];

  v4 = sub_23F61BF2C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[3] = MEMORY[0x24BEE0D00];
  v13[4] = MEMORY[0x24BE7AD80];
  v13[0] = a1;
  v13[1] = a2;
  sub_23F617BA0();
  v8 = MEMORY[0x24BE7AB78];
  sub_23F61BF20();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v13);
  sub_23F35D2E8(&qword_256E742D0);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23F61E7E0;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 16))(v10 + v9, v7, v4);
  MEMORY[0x24266F424](v10, v4, v8);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23F43C24C()
{
  return sub_23F43B54C();
}

uint64_t sub_23F43C254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v9 = *v4;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_23F43C2C0;
  return sub_23F43B56C(a1, a2, v11, a4, v9);
}

uint64_t sub_23F43C2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  v8 = sub_23F3629E8();
  v12 = *(uint64_t (**)(void))(v5 + 8);
  if (!v4)
  {
    v8 = sub_23F4414B0();
    v10 = a3;
    v11 = a4;
  }
  return sub_23F435B84(v8, v9, v10, v11, v12);
}

uint64_t sub_23F43C30C()
{
  uint64_t result;

  result = sub_23F61BFEC();
  qword_256E74160 = result;
  return result;
}

uint64_t sub_23F43C348()
{
  sub_23F441078();
  return sub_23F61CCAC();
}

uint64_t sub_23F43C370()
{
  sub_23F441078();
  return sub_23F61CCA0();
}

unint64_t sub_23F43C398()
{
  return 0xD000000000000022;
}

uint64_t sub_23F43C3B4(uint64_t a1, const char *a2)
{
  NSObject *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;

  v5 = sub_23F3B1728();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B17A4();
  v7 = sub_23F617AEC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v9 = sub_23F38422C();
  sub_23F38431C(v9, v10, v11);
  sub_23F6179B4();
  swift_allocObject();
  v12 = sub_23F617990();
  sub_23F619088();
  sub_23F619E8C();
  v13 = sub_23F3B1A04();
  if (os_log_type_enabled(v2, v13))
  {
    v14 = (uint8_t *)sub_23F3EEE70();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_23F35A000, v2, v13, a2, v14, 2u);
    sub_23F366530();
  }

  sub_23F383D74(a1, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_23F383E88((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  return v12;
}

uint64_t sub_23F43C4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[15] = a4;
  v5[16] = a5;
  v5[13] = a1;
  v5[14] = a2;
  v6 = sub_23F4413E0();
  v5[17] = v6;
  v5[18] = *(_QWORD *)(v6 - 8);
  v5[19] = sub_23F366578();
  v7 = sub_23F4413E8();
  v5[20] = v7;
  v5[21] = *(_QWORD *)(v7 - 8);
  v5[22] = sub_23F4411DC();
  v5[23] = sub_23F3666CC();
  v8 = sub_23F6192A4();
  v5[24] = v8;
  v5[25] = *(_QWORD *)(v8 - 8);
  v5[26] = sub_23F366578();
  v9 = sub_23F3B1728();
  v5[27] = v9;
  v5[28] = *(_QWORD *)(v9 - 8);
  v5[29] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F43C59C()
{
  _QWORD *v0;
  void *v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  sub_23F432AC4();
  v1 = (void *)v0[29];
  sub_23F3B2130();
  sub_23F619E8C();
  v2 = sub_23F3B1A04();
  if (sub_23F3F0E3C(v2))
  {
    v3 = (_WORD *)sub_23F3EEE70();
    sub_23F3F0EF4(v3);
    sub_23F3F0DF0(&dword_23F35A000, v4, v5, "Running completion request using templated TokenGeneration");
    sub_23F366530();
  }
  v6 = v0[28];
  v7 = v0[26];
  v9 = v0[13];
  v8 = v0[14];

  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v10 = sub_23F43C8E0(v7, v9, v8);
  v12 = v11;
  sub_23F35D2E8(&qword_256E742C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(inited + 32) = 0x746E65746E6F63;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v14 = MEMORY[0x24BE7AD80];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 80) = v14;
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = v12;
  sub_23F35D2E8(&qword_256E742C8);
  v15 = sub_23F61BFEC();
  v0[30] = v15;
  v16 = (_QWORD *)swift_task_alloc();
  v0[31] = v16;
  *v16 = v0;
  v16[1] = sub_23F43C73C;
  return sub_23F43CEFC(v0[19], v0[26], v15, v0[15], v0[16]);
}

uint64_t sub_23F43C73C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 256) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F43C794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F3B14B8();
  v1 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 144);
  sub_23F617960();
  sub_23F3B1CC8(v5, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v2, v6);
  v8 = sub_23F43AAD8(v4);
  v10 = v9;
  v15 = v11;
  v13 = v12;
  sub_23F3D98EC(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v17);
  sub_23F3667E0();
  sub_23F3666C4();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F362CC8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8))(v8, v10, v15, v13);
}

uint64_t sub_23F43C874()
{
  uint64_t v0;

  sub_23F384274(*(_QWORD *)(v0 + 200));
  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F43C8E0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  void *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71[2];
  uint64_t v72;

  v61 = a1;
  v5 = sub_23F6192A4();
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v62 = v7;
  sub_23F39C56C();
  v8 = sub_23F619E98();
  v67 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F362AAC();
  v12 = v10 - v11;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v65 = (char *)&v59 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v66 = (char *)&v59 - v16;
  sub_23F39C56C();
  v17 = type metadata accessor for FullPlannerPreferences();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F38F964();
  v21 = v20 - v19;
  sub_23F35D2E8(&qword_256E74340);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3B17A4();
  v69 = a2;
  v70 = a3;
  v71[0] = 0xD000000000000016;
  v71[1] = 0x800000023F6364C0;
  sub_23F440EE8();
  sub_23F440F24();
  if ((sub_23F61C070() & 1) != 0)
  {
    v23 = (0x800000023F6364C0 & 0xF00000000000000) >> 40;
    if ((0x800000023F6364C0 & 0x2000000000000000) == 0)
      v23 = 1441792;
    v24 = 11;
    if ((0x800000023F6364C0 & 0x1000000000000000) == 0)
      v24 = 7;
    v25 = v23 | v24;
    sub_23F617BA0();
    sub_23F3BB76C(v25, a2, a3);
    swift_bridgeObjectRelease();
    v26 = sub_23F4412AC();
    v27 = MEMORY[0x24266F6AC](v26);
    v59 = v28;
    v60 = v27;
    swift_bridgeObjectRelease();
    if (qword_256E6EE90 != -1)
      swift_once();
    v29 = sub_23F361498(v17, (uint64_t)qword_256E7FE90);
    sub_23F3C08CC();
    sub_23F4388B4(v29, v21);
    sub_23F35D2E8(&qword_256E6F5A0);
    sub_23F617C48();
    sub_23F4388F8(v21);
    sub_23F61745C();
    sub_23F3612C0(&qword_256E74360, (uint64_t (*)(uint64_t))MEMORY[0x24BE68860], MEMORY[0x24BE68858]);
    sub_23F617444();
    v30 = v65;
    v31 = v64;
    v32 = v62;
    if (qword_256E6EE98 != -1)
      swift_once();
    sub_23F617BA0();
    v33 = v61;
    sub_23F619298();
    sub_23F619088();
    v34 = (void *)sub_23F619E8C();
    v35 = sub_23F61C61C();
    v36 = sub_23F40B304(v35);
    v37 = v63;
    if (v36)
    {
      *(_WORD *)sub_23F3EEE70() = 0;
      sub_23F40B33C(&dword_23F35A000, v38, v39, "Prompt converted into template and bindings.");
      sub_23F366530();
    }

    v40 = v68;
    v67 = *(_QWORD *)(v67 + 8);
    ((void (*)(char *, uint64_t))v67)(v66, v68);
    sub_23F619088();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v32, v33, v31);
    swift_bridgeObjectRetain_n();
    v41 = sub_23F619E8C();
    v42 = sub_23F61C61C();
    v43 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      v44 = swift_slowAlloc();
      v66 = (char *)swift_slowAlloc();
      v71[0] = (uint64_t)v66;
      *(_DWORD *)v44 = 136315650;
      LODWORD(v61) = v43;
      sub_23F37AE00(0xD000000000000039, 0x800000023F633940, v71);
      v72 = v45;
      sub_23F441364();
      *(_WORD *)(v44 + 12) = 2080;
      v46 = sub_23F61928C();
      if (v47)
      {
        v48 = v47;
      }
      else
      {
        v46 = 0x756F4620746F4E3CLL;
        v48 = 0xEB000000003E646ELL;
      }
      sub_23F37AE00(v46, v48, v71);
      v72 = v49;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v32, v31);
      *(_WORD *)(v44 + 22) = 2080;
      sub_23F617BA0();
      v50 = sub_23F4414B0();
      sub_23F37AE00(v50, v51, v52);
      v72 = v53;
      sub_23F441364();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23F35A000, v41, (os_log_type_t)v61, "    Template ID: %s\n    Client Template: \"%s\"\n    Content: \"%s\"", (uint8_t *)v44, 0x20u);
      swift_arrayDestroy();
      sub_23F366530();
    }
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v32, v31);

    swift_bridgeObjectRelease_n();
    ((void (*)(char *, uint64_t))v67)(v30, v40);
    return v60;
  }
  else
  {
    sub_23F619088();
    v54 = (void *)sub_23F619E8C();
    v55 = sub_23F61C628();
    if (sub_23F40B304(v55))
    {
      *(_WORD *)sub_23F3EEE70() = 0;
      sub_23F40B33C(&dword_23F35A000, v56, v57, "Prompt does not match GMS template. Unable to reform prompt to send to GMS.");
      sub_23F366530();
    }

    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v12, v68);
    sub_23F440F60();
    sub_23F362D64();
    swift_willThrow();
  }
  return v12;
}

uint64_t sub_23F43CEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[17] = a4;
  v5[18] = a5;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  v6 = sub_23F35D2E8(&qword_256E74290);
  v5[19] = v6;
  v5[20] = *(_QWORD *)(v6 - 8);
  v5[21] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E74298);
  v5[22] = swift_task_alloc();
  v5[23] = sub_23F35D2E8(&qword_256E742A0);
  v5[24] = swift_task_alloc();
  v7 = sub_23F6187C4();
  v5[25] = v7;
  v5[26] = *(_QWORD *)(v7 - 8);
  v5[27] = swift_task_alloc();
  v8 = sub_23F6187D0();
  v5[28] = v8;
  v5[29] = *(_QWORD *)(v8 - 8);
  v5[30] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E742A8);
  v5[31] = swift_task_alloc();
  v9 = sub_23F619DF0();
  v5[32] = v9;
  v5[33] = *(_QWORD *)(v9 - 8);
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  v10 = sub_23F61BEFC();
  v5[36] = v10;
  v5[37] = *(_QWORD *)(v10 - 8);
  v5[38] = swift_task_alloc();
  v5[39] = swift_task_alloc();
  v5[40] = swift_task_alloc();
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v5[43] = swift_task_alloc();
  v5[44] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F43D0D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  void (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  sub_23F3836F0();
  v2 = v0[42];
  v1 = v0[43];
  v3 = v0[41];
  v4 = v0[36];
  v5 = v0[37];
  v6 = v0[17];
  v7 = v0[15];
  *(_QWORD *)(swift_task_alloc() + 16) = v7;
  sub_23F61BF08();
  sub_23F366698();
  sub_23F3612C0(&qword_256E74268, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A7E0], MEMORY[0x24BE7A7D8]);
  v0[45] = v8;
  sub_23F61BF98();
  v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v0[46] = v9;
  v9(v2, v4);
  sub_23F38431C(v3, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  v10 = *(_QWORD *)(v6 + 16);
  v11 = v0[37];
  if (v10)
  {
    v12 = sub_23F617BA0() + 40;
    do
    {
      v13 = v0[41];
      v3 = v0[36];
      v14 = *(void (**)(uint64_t))(v12 - 8);
      swift_retain();
      v14(v13);
      swift_release();
      v9(v13, v3);
      v15 = *(void (**)(void))(v11 + 32);
      sub_23F4411EC();
      v15();
      v12 += 16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(void (**)(void))(v11 + 32);
  }
  v0[47] = v15;
  v16 = v0[43];
  sub_23F4414D4();
  v15();
  sub_23F441234(v16);
  v17 = sub_23F619DE4();
  sub_23F3838D8(v3, v18, v19, v17);
  sub_23F4411AC();
  v20 = (_QWORD *)swift_task_alloc();
  v0[48] = v20;
  sub_23F441260(v20);
  return sub_23F441210();
}

uint64_t sub_23F43D270()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1998();
  sub_23F3B201C();
  *(_QWORD *)(v1 + 392) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F43D2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  void (*v15)(void);
  uint64_t inited;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v33)(uint64_t, _QWORD);
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);

  v1 = *(_QWORD *)(v0 + 176);
  v2 = sub_23F35D2E8(&qword_256E742B0);
  sub_23F4413B4(v1);
  if (v3)
  {
    sub_23F3D9844(v1, &qword_256E74298);
  }
  else
  {
    v49 = *(void (**)(uint64_t))(v0 + 376);
    sub_23F4412F4();
    v39 = v5;
    v40 = v4;
    v41 = *(_QWORD *)(v0 + 256);
    v42 = v6;
    v45 = v7;
    v46 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 224);
    v37 = *(_QWORD *)(v0 + 240);
    v38 = *(_QWORD *)(v0 + 216);
    v9 = *(_QWORD *)(v0 + 208);
    v36 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 192);
    v43 = *(_QWORD *)(v0 + 120);
    v44 = v9;
    v11 = v1 + *(int *)(v2 + 48);
    v12 = v10 + *(int *)(*(_QWORD *)(v0 + 184) + 48);
    v13 = *(void (**)(uint64_t))(v46 + 32);
    v14 = sub_23F3B1AC4();
    v13(v14);
    v15 = *(void (**)(void))(v9 + 32);
    ((void (*)(uint64_t, uint64_t, uint64_t))v15)(v12, v11, v36);
    ((void (*)(uint64_t, uint64_t, uint64_t))v13)(v37, v10, v8);
    sub_23F4411EC();
    v15();
    sub_23F6187B8();
    sub_23F3E26DC(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
    sub_23F4412E0();
    sub_23F35D2E8(&qword_256E742C0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
    sub_23F4413F0(inited);
    v17 = sub_23F6192A4();
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3C680];
    *(_QWORD *)(inited + 72) = v17;
    sub_23F3612C0(&qword_256E74338, v18, MEMORY[0x24BE3C630]);
    *(_QWORD *)(inited + 80) = v19;
    v20 = sub_23F36145C((uint64_t *)(inited + 48));
    sub_23F383C64((uint64_t)v20, v43, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16));
    sub_23F35D2E8(&qword_256E742C8);
    sub_23F441418();
    sub_23F441418();
    sub_23F6187AC();
    sub_23F362D18();
    swift_bridgeObjectRelease();
    sub_23F3B1CC8(v38, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
    sub_23F3D98EC(v37, *(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
    sub_23F4413D0(v47, v21, v22, v23, v24, v25, v26, v27, v36, v37, v38, v39, v40, v41, v42, v0 + 16, v43, v44, v45,
      v46,
      v47,
      v48);
    v28 = sub_23F4412AC();
    v49(v28);
  }
  v29 = *(_QWORD *)(v0 + 392);
  sub_23F4414BC();
  sub_23F4412CC();
  if (v29)
  {
    v30 = *(_QWORD *)(v0 + 352);
    v31 = *(_QWORD *)(v0 + 264);
    sub_23F441234(*(_QWORD *)(v0 + 304));
    sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
    sub_23F441234(v30);
    sub_23F4413A4();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return sub_23F441150(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v33 = *(void (**)(uint64_t, _QWORD))(v0 + 368);
    v34 = *(_QWORD *)(v0 + 312);
    sub_23F441298(*(_QWORD *)(v0 + 304));
    sub_23F441394();
    v35 = (uint64_t (*)(uint64_t))MEMORY[0x24BEB8040];
    sub_23F3B1AC4();
    sub_23F61BF8C();
    v33(v34, 0);
    sub_23F4413E0();
    *(_QWORD *)(v0 + 400) = swift_task_alloc();
    sub_23F3612C0(&qword_256E742B8, v35, MEMORY[0x24BEB8018]);
    sub_23F44127C((uint64_t)sub_23F43D670);
    return sub_23F44116C();
  }
}

uint64_t sub_23F43D670()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 408) = v1;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v0 + 160));
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F43D6CC()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 368);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256));
  v2 = sub_23F3B1AC4();
  v1(v2);
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668DC();
  sub_23F3666EC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F43D7BC()
{
  uint64_t v0;

  sub_23F3B15E8();
  sub_23F441140();
  sub_23F41C5F4();
  sub_23F4410D4();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  return sub_23F3B13B0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43D834()
{
  uint64_t v0;

  sub_23F3B15E8();
  sub_23F441140();
  sub_23F41C5F4();
  sub_23F4410D4();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  return sub_23F3B13B0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43D8AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v14[5];

  v2 = sub_23F61BF2C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F6192A4();
  v14[3] = v6;
  sub_23F3612C0(&qword_256E74338, (uint64_t (*)(uint64_t))MEMORY[0x24BE3C680], MEMORY[0x24BE3C630]);
  v14[4] = v7;
  v8 = sub_23F36145C(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v8, a1, v6);
  v9 = MEMORY[0x24BE7AB78];
  sub_23F61BF20();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v14);
  sub_23F35D2E8(&qword_256E742D0);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23F61E7E0;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 16))(v11 + v10, v5, v2);
  MEMORY[0x24266F424](v11, v2, v9);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23F43DA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v9 = *v4;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_23F4410B4;
  return sub_23F43C4FC(a1, a2, v11, a4, v9);
}

uint64_t sub_23F43DA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v7 = sub_23F432B2C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E717A8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3B1F34();
  sub_23F382FC4(a1, (uint64_t)(a3 + 1));
  v12 = sub_23F61C490();
  sub_23F3838D8(v3, v13, v14, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, v10, v7);
  sub_23F43DEA8(v3, (uint64_t)&unk_256E74188, v16, &qword_256E74190);
  v18 = v17;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  *a3 = v18;
  return result;
}

uint64_t sub_23F43DBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[2] = a1;
  v4[3] = a4;
  v5 = sub_23F616E68();
  v4[4] = v5;
  v4[5] = *(_QWORD *)(v5 - 8);
  v4[6] = swift_task_alloc();
  v6 = sub_23F61BE60();
  v4[7] = v6;
  v4[8] = *(_QWORD *)(v6 - 8);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F43DC54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[8];
  v1 = v0[9];
  v4 = v0[6];
  v3 = v0[7];
  v5 = v0[5];
  v6 = v0[3];
  v0[10] = sub_23F61BDC4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BE5EAE0], v3);
  sub_23F383C64(v4, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  v0[11] = v7;
  *v7 = v0;
  v7[1] = sub_23F43DD0C;
  sub_23F4414C8(v0[9]);
  return sub_23F61BDB8();
}

uint64_t sub_23F43DD0C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v7)(void);
  _QWORD *v8;

  v8 = (_QWORD *)*v2;
  v4 = v8;
  sub_23F3B2010(&v8);
  v4[12] = a1;
  v4[13] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23F36679C();
    return swift_task_switch();
  }
  else
  {
    v6 = (_QWORD *)sub_23F3629C0();
    v4[14] = v6;
    *v6 = v2;
    v6[1] = sub_23F43DDA4;
    return v7();
  }
}

uint64_t sub_23F43DDA4()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1998();
  sub_23F3B201C();
  *(_QWORD *)(v1 + 120) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F43DDF0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD **)(v0 + 16);
  v3 = MEMORY[0x24BE5EA20];
  v2[3] = *(_QWORD *)(v0 + 80);
  v2[4] = v3;
  *v2 = v1;
  swift_task_dealloc();
  sub_23F362CC8();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43DE3C()
{
  uint64_t v0;

  sub_23F441450();
  sub_23F3666DC();
  return sub_23F4411F8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43DE68()
{
  uint64_t v0;

  swift_release();
  sub_23F441450();
  sub_23F3666DC();
  return sub_23F4411F8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F43DE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F43DEA8(a1, a2, a3, qword_256E74198);
}

void sub_23F43DEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void (*v10)(uint64_t);

  sub_23F4412B8();
  v7 = sub_23F4413B4(v5);
  if (v8)
  {
    sub_23F441494(v7, &qword_256E717A8);
  }
  else
  {
    sub_23F61C484();
    v9 = sub_23F4412AC();
    v10(v9);
  }
  if (*(_QWORD *)(v4 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23F61C43C();
    swift_unknownObjectRelease();
  }
  sub_23F35D2E8(a4);
  sub_23F44149C();
  sub_23F3840C8();
}

void sub_23F43DF94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23F4412B8();
  v3 = sub_23F36195C(v1, 1, v2);
  if ((_DWORD)v3 == 1)
  {
    sub_23F441494(v3, &qword_256E717A8);
  }
  else
  {
    sub_23F61C484();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  }
  if (*(_QWORD *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23F61C43C();
    swift_unknownObjectRelease();
  }
  sub_23F61A6E4();
  sub_23F44149C();
  sub_23F3840C8();
}

void sub_23F43E08C()
{
  uint64_t v0;

  sub_23F44123C((_QWORD *)(v0 + 8));
  sub_23F362B80();
}

uint64_t sub_23F43E0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[26] = a4;
  v5[27] = v4;
  v5[24] = a2;
  v5[25] = a3;
  v5[23] = a1;
  v6 = *(_QWORD *)(sub_23F35D2E8(&qword_256E73E10) - 8);
  v5[28] = v6;
  v5[29] = *(_QWORD *)(v6 + 64);
  v5[30] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E717A8);
  v5[31] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F43E128()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = **(_QWORD **)(v0 + 216);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 256) = v2;
  *v2 = v0;
  v2[1] = sub_23F43E190;
  return sub_23F43E688(v0 + 16, v1);
}

uint64_t sub_23F43E190()
{
  sub_23F3B1998();
  sub_23F3E0168();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F43E1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v3;
  v4 = *(_OWORD *)(v0 + 192);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_OWORD *)(v3 + 32) = v4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v5;
  sub_23F35D2E8(&qword_256E742F8);
  sub_23F35D2E8(&qword_256E70580);
  *v5 = v0;
  v5[1] = sub_23F43E280;
  return sub_23F61C724();
}

uint64_t sub_23F43E280()
{
  sub_23F3B1998();
  sub_23F3E0168();
  sub_23F362CC8();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F43E2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;

  sub_23F432AC4();
  v10 = (_QWORD *)v9[27];
  if (v9[22])
    v11 = v9[22];
  else
    v11 = MEMORY[0x24BEE4AF8];
  v12 = swift_allocObject();
  v9[35] = v12;
  *(_QWORD *)(v12 + 16) = v11;
  v13 = v10[4];
  v14 = v10[5];
  sub_23F35EA9C(v10 + 1, v13);
  swift_retain_n();
  sub_23F383EB0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = v9[26];
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23F441188();
    v16 = v21;
  }
  v17 = *(_QWORD *)(v16 + 16);
  if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
  {
    sub_23F441188();
    v16 = v22;
  }
  v9[36] = v16;
  *(_QWORD *)(v16 + 16) = v17 + 1;
  v18 = v16 + 16 * v17;
  *(_QWORD *)(v18 + 32) = sub_23F4405C0;
  *(_QWORD *)(v18 + 40) = v12;
  swift_release();
  v19 = (_QWORD *)sub_23F3629C0();
  v9[37] = v19;
  *v19 = v9;
  v19[1] = sub_23F43E3D8;
  return sub_23F4410BC(v9[23], v9[24], v9[25], v16, v13, v14, a9);
}

uint64_t sub_23F43E3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v6 = (_QWORD *)*v5;
  v6[38] = a1;
  v6[39] = a2;
  v6[40] = a3;
  v6[41] = a4;
  v6[42] = v4;
  swift_task_dealloc();
  sub_23F362D18();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F43E448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = sub_23F38422C();
  sub_23F39E478(v1, v2, v3);
  if (*(_QWORD *)(v0 + 120))
  {
    v26 = *(_QWORD *)(v0 + 320);
    v27 = *(_QWORD *)(v0 + 328);
    v24 = *(_QWORD *)(v0 + 304);
    v25 = *(_QWORD *)(v0 + 312);
    v5 = *(_QWORD *)(v0 + 240);
    v4 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 224);
    v6 = *(_QWORD *)(v0 + 232);
    v9 = *(_QWORD *)(v0 + 192);
    v8 = *(_QWORD *)(v0 + 200);
    v23 = *(_QWORD *)(v0 + 184);
    sub_23F362678((__int128 *)(v0 + 96), v0 + 56);
    v10 = sub_23F61C490();
    sub_23F3838D8(v4, v11, v12, v10);
    sub_23F39E478(v8, v5, &qword_256E73E10);
    sub_23F382FC4(v0 + 56, v0 + 136);
    v13 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v14 = (v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    v15 = (v14 + 47) & 0xFFFFFFFFFFFFFFF8;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = 0;
    *(_QWORD *)(v16 + 24) = 0;
    sub_23F440694(v5, v16 + v13);
    sub_23F362678((__int128 *)(v0 + 136), v16 + v14);
    v17 = (_QWORD *)(v16 + v15);
    *v17 = v23;
    v17[1] = v9;
    v18 = (_QWORD *)(v16 + ((v15 + 23) & 0xFFFFFFFFFFFFFFF8));
    *v18 = v24;
    v18[1] = v25;
    v18[2] = v26;
    v18[3] = v27;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F586634(v4, (uint64_t)&unk_256E74308, v16);
    swift_release();
    swift_release();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 56);
    v19 = v0 + 16;
  }
  else
  {
    v20 = sub_23F4412AC();
    sub_23F3D9844(v20, v21);
    swift_release();
    v19 = v0 + 96;
  }
  sub_23F3D9844(v19, &qword_256E742F8);
  swift_task_dealloc();
  sub_23F362CC8();
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 328));
}

uint64_t sub_23F43E63C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_release();
  sub_23F441494(v1, &qword_256E742F8);
  sub_23F3666DC();
  sub_23F3666C4();
  return sub_23F3B182C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43E688(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_23F619E98();
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F43E6F8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t v8;

  if (*(_QWORD *)(v0 + 80))
  {
    v1 = *(NSObject **)(v0 + 112);
    swift_retain();
    sub_23F3B2130();
    sub_23F619E8C();
    v2 = sub_23F3B1A04();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_23F35A000, v1, v2, "Waiting for LLMCacheManager.init, LLMCacheManager.warmup to finish", v3, 2u);
      sub_23F366530();
    }
    v4 = *(_QWORD *)(v0 + 96);

    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    *(_QWORD *)(v0 + 120) = v5;
    sub_23F3838CC(v5);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v6;
    sub_23F35D2E8(&qword_256E74190);
    sub_23F35D2E8(&qword_256E70370);
    *v6 = v0;
    v6[1] = sub_23F43E848;
    return sub_23F61C4A8();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v8 + 32) = 0;
    *(_OWORD *)v8 = 0u;
    *(_OWORD *)(v8 + 16) = 0u;
    swift_task_dealloc();
    sub_23F362CC8();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23F43E848()
{
  sub_23F3E0168();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F43E884()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _DWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F3836F0();
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    v1 = *(NSObject **)(v0 + 104);
    sub_23F3B2130();
    sub_23F441468();
    sub_23F441468();
    sub_23F619E8C();
    v2 = sub_23F3F0EEC();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (_DWORD *)swift_slowAlloc();
      v4 = (_QWORD *)sub_23F366668();
      *v3 = 138412290;
      sub_23F441468();
      v5 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 64) = v5;
      sub_23F435C2C();
      *v4 = v5;
      sub_23F3665E8();
      sub_23F3665E8();
      sub_23F4264A8(&dword_23F35A000, v1, v2, "LLMCacheManager failed to set up: %@");
      sub_23F35D2E8(&qword_256E6FAB0);
      swift_arrayDestroy();
      sub_23F366530();
    }
    swift_release();
    sub_23F3665E8();
    sub_23F3665E8();
    sub_23F3665E8();

    v7 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, _QWORD))(v0 + 120))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)v7 = 0u;
    *(_OWORD *)(v7 + 16) = 0u;
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 72);
    swift_release();
    sub_23F362678((__int128 *)(v0 + 16), v6);
  }
  swift_task_dealloc();
  sub_23F362CC8();
  return sub_23F38346C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43EA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[11] = a5;
  v6[12] = a6;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  return swift_task_switch();
}

uint64_t sub_23F43EA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_23F441470(*(_QWORD **)(v2 + 64));
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = v1;
  v4 = sub_23F36145C((uint64_t *)(v2 + 16));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v4, v3, v0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 104) = v5;
  *v5 = v2;
  v5[1] = sub_23F43EABC;
  v6 = sub_23F4414C8(*(_QWORD *)(v2 + 80));
  return sub_23F4407C8(v6, v7, (uint64_t)v4, v8, v9, v0, v1);
}

uint64_t sub_23F43EABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)v1 + 16;
  *(_QWORD *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v2);
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F43EB18()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 56) = *(_QWORD *)(v0 + 112);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F43EB30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v3 = sub_23F35D2E8(&qword_256E74310);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = a2;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE3C3E0], v3);
  sub_23F61BEFC();
  sub_23F3612C0(&qword_256E74268, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A7E0], MEMORY[0x24BE7A7D8]);
  sub_23F617BA0();
  sub_23F61BF50();
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23F43EC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v8[6] = a8;
  v8[7] = v17;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  v9 = sub_23F619E98();
  v8[8] = v9;
  v8[9] = *(_QWORD *)(v9 - 8);
  v8[10] = swift_task_alloc();
  v10 = sub_23F61A198();
  v8[11] = v10;
  v8[12] = *(_QWORD *)(v10 - 8);
  v8[13] = swift_task_alloc();
  v11 = sub_23F619FDC();
  v8[14] = v11;
  v8[15] = *(_QWORD *)(v11 - 8);
  v8[16] = swift_task_alloc();
  v12 = sub_23F619FA0();
  v8[17] = v12;
  v8[18] = *(_QWORD *)(v12 - 8);
  v8[19] = swift_task_alloc();
  v13 = sub_23F61BE54();
  v8[20] = v13;
  v8[21] = *(_QWORD *)(v13 - 8);
  v8[22] = swift_task_alloc();
  v14 = sub_23F61A0FC();
  v8[23] = v14;
  v8[24] = *(_QWORD *)(v14 - 8);
  v8[25] = swift_task_alloc();
  v15 = sub_23F617000();
  v8[26] = v15;
  v8[27] = *(_QWORD *)(v15 - 8);
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F43ED90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v9)(uint64_t, uint64_t);
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  sub_23F3B15E8();
  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v12 = *(_QWORD *)(v0 + 232);
  v13 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD **)(v0 + 24);
  *(_QWORD *)(v0 + 240) = sub_23F61A900();
  v6 = *MEMORY[0x24BE55CC0];
  *(_DWORD *)(v0 + 288) = v6;
  v7 = sub_23F61AA74();
  *(_QWORD *)(v0 + 248) = v7;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104);
  *(_QWORD *)(v0 + 256) = v8;
  v8(v3, v6, v7);
  sub_23F441324(*MEMORY[0x24BE54FB8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104));
  sub_23F616FF4();
  sub_23F441408();
  sub_23F61A8E8();
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 264) = v9;
  sub_23F3B1CC8(v1, v9);
  sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F35EA9C(v5, v5[3]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v12, v13);
  sub_23F617BA0();
  sub_23F383EB0();
  sub_23F61BE48();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v10;
  *v10 = v0;
  v10[1] = sub_23F43EF14;
  sub_23F4414C8(*(_QWORD *)(v0 + 176));
  sub_23F4411EC();
  return sub_23F61BDDC();
}

uint64_t sub_23F43EF14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F3B1998();
  v2 = *(_QWORD *)(v1 + 168);
  sub_23F3B201C();
  *(_QWORD *)(v3 + 280) = v0;
  swift_task_dealloc();
  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F43EF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F3836F0();
  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 256))(v1, *(unsigned int *)(v0 + 288), *(_QWORD *)(v0 + 248));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BE54C88], v3);
  sub_23F61A8D0();
  sub_23F441430();
  sub_23F3D9D78(v4);
  sub_23F44145C();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F362CC8();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3668E4();
  return sub_23F38346C(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F43F02C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _WORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  sub_23F44134C();
  v4(v1);
  sub_23F441324(*MEMORY[0x24BE54DA8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  sub_23F616D90();
  sub_23F61A18C();
  v5 = sub_23F44121C();
  sub_23F441384(v5, v6, v7, v8, v9, v10, v11, v12, v19, v20);
  sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F619088();
  sub_23F619E8C();
  v13 = sub_23F3F0EEC();
  if (sub_23F3F0E3C(v13))
  {
    v14 = (_WORD *)sub_23F3EEE70();
    sub_23F3F0EF4(v14);
    sub_23F3F0DF0(&dword_23F35A000, v15, v16, "Failed to insert the LLM response to the plan cache. Continuing.");
    sub_23F366530();
  }

  sub_23F441430();
  sub_23F3D9D78(v17);
  sub_23F44145C();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3668D4();
  sub_23F362CC8();
  sub_23F441330();
  __asm { BR              X0 }
}

uint64_t sub_23F43F150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23F4410B4;
  return sub_23F43E0B0(a1, a2, a3, a4);
}

void sub_23F43F1C4()
{
  _QWORD *v0;

  sub_23F44123C(v0);
  sub_23F362B80();
}

uint64_t sub_23F43F1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = sub_23F617000();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F43F238()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  sub_23F441470(*(_QWORD **)(v0 + 48));
  v1 = (_QWORD *)sub_23F3629C0();
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_23F43F2A0;
  v2 = sub_23F4414C8(*(_QWORD *)(v0 + 16));
  return v4(v2);
}

uint64_t sub_23F43F2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v10;
  _QWORD *v12;

  v12 = (_QWORD *)*v5;
  v10 = v12;
  sub_23F3B2010(&v12);
  v10[11] = v4;
  swift_task_dealloc();
  if (!v4)
  {
    v10[12] = a4;
    v10[13] = a3;
    v10[14] = a2;
    v10[15] = a1;
  }
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F43F320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F432AC4();
  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  type metadata accessor for PnRTelemetryGMSPromptClient();
  sub_23F61AD44();
  sub_23F383CA8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F3666C4();
  return sub_23F441194(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 96), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43F394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  type metadata accessor for PnRTelemetryGMSPromptClient();
  sub_23F61AD50();
  sub_23F383E88(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  swift_willThrow();
  sub_23F362CC8();
  return sub_23F441204(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F43F414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23F4410B4;
  return sub_23F43F1E8(a1, a2, a3, a4);
}

uint64_t sub_23F43F488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD v6[2];

  v0 = sub_23F616DCC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F616E68();
  sub_23F3F3F64(v4, qword_256E7FEA8);
  sub_23F361498(v4, (uint64_t)qword_256E7FEA8);
  if (qword_256E6EEA8 != -1)
    swift_once();
  sub_23F361498(v4, (uint64_t)qword_256E7FEC0);
  v6[0] = 0xD000000000000022;
  v6[1] = 0x800000023F636450;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCD7A0], v0);
  sub_23F38813C();
  sub_23F616E44();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F43F5CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(unint64_t, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  BOOL v54;
  const char *v55;
  void *v56;
  _UNKNOWN **v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91[3];
  uint64_t v92;
  _UNKNOWN **v93;
  __int128 v94[2];

  v83 = a2;
  v86 = a1;
  v87 = (uint64_t *)a3;
  v88 = sub_23F619E98();
  v80 = *(_QWORD *)(v88 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B1F34();
  v76 = sub_23F616E68();
  v75 = *(_QWORD *)(v76 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v77 = v6;
  sub_23F35D2E8(&qword_256E70790);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v81 = v8;
  sub_23F39C56C();
  v82 = sub_23F619D24();
  v73 = *(_QWORD *)(v82 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v74 = v10;
  sub_23F39C56C();
  sub_23F6179CC();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F38F964();
  v12 = sub_23F617AEC();
  v84 = *(_QWORD *)(v12 - 8);
  v85 = v12;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F362AAC();
  v79 = v14 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v90 = (char *)&v73 - v17;
  sub_23F35D2E8(&qword_256E705E0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F38F964();
  v21 = v20 - v19;
  v22 = type metadata accessor for FullPlannerPreferences();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F38F964();
  v26 = v25 - v24;
  sub_23F35D2E8(&qword_256E74168);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F38F964();
  v30 = v29 - v28;
  v31 = sub_23F6179E4();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  sub_23F36285C();
  v89 = v33;
  if (qword_256E6EE90 != -1)
    swift_once();
  v34 = sub_23F361498(v22, (uint64_t)qword_256E7FE90);
  sub_23F3C08CC();
  sub_23F4388B4(v34, v26);
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F617C48();
  sub_23F4388F8(v26);
  sub_23F4412AC();
  sub_23F6179D8();
  if (sub_23F36195C(v30, 1, v31) == 1)
  {
    sub_23F3D9844(v30, &qword_256E74168);
    sub_23F619088();
    v35 = (void *)sub_23F619E8C();
    v36 = sub_23F61C628();
    if (sub_23F40B304(v36))
    {
      *(_WORD *)sub_23F3EEE70() = 0;
      sub_23F40B33C(&dword_23F35A000, v37, v38, "Failed to create the model bundle");
      sub_23F366530();
    }

    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v3, v88);
    sub_23F43FCCC();
    v39 = sub_23F362D64();
    *v40 = 2;
    v88 = v39;
    return swift_willThrow();
  }
  else
  {
    v42 = v89;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v89, v30, v31);
    v43 = v86;
    sub_23F39E478(v86, v21, &qword_256E705E0);
    v44 = v78;
    sub_23F43A9B0(v21);
    v88 = v44;
    v45 = sub_23F4414B0();
    sub_23F3D9844(v45, v46);
    sub_23F35D2E8(&qword_256E74178);
    v47 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_23F61E7E0;
    v49 = *(void (**)(unint64_t, uint64_t, uint64_t))(v32 + 16);
    v80 = v31;
    v49(v48 + v47, v42, v31);
    sub_23F6179C0();
    v50 = v90;
    sub_23F617AE0();
    v51 = type metadata accessor for FullPlannerGMSClientConfiguration(0);
    v52 = *(unsigned __int8 *)(v43 + *(int *)(v51 + 20));
    v53 = v79;
    (*(void (**)(uint64_t, char *, uint64_t))(v84 + 16))(v79, v50, v85);
    v54 = v52 == 0;
    if (v52)
      v55 = "Created a FullPlannerTemplatedGMSPromptClient with TokenGeneration";
    else
      v55 = "Created a FullPlannerModelClient with TokenGeneration";
    if (v52)
      v56 = &unk_250FD6860;
    else
      v56 = &unk_250FD6908;
    if (v54)
      v57 = &off_250FD6968;
    else
      v57 = &off_250FD6920;
    v58 = sub_23F43C3B4(v53, v55);
    v92 = (uint64_t)v56;
    v93 = v57;
    v91[0] = v58;
    sub_23F44147C();
    v59 = v81;
    sub_23F39E478(v83, v81, &qword_256E70790);
    v60 = v82;
    if (sub_23F36195C(v59, 1, v82) == 1)
    {
      sub_23F3D9844(v59, &qword_256E70790);
    }
    else
    {
      v61 = *(void (**)(uint64_t))(v73 + 32);
      v62 = v74;
      v63 = sub_23F4412AC();
      v61(v63);
      v64 = type metadata accessor for PnRTelemetryGMSPromptClient();
      v83 = v51;
      v65 = v60;
      v66 = v64;
      v92 = v64;
      v93 = &off_250FD6938;
      v67 = sub_23F36145C(v91);
      v51 = v83;
      ((void (*)(char *, uint64_t, uint64_t))v61)((char *)v67 + *(int *)(v66 + 20), v62, v65);
      sub_23F362678(v94, (uint64_t)v67);
      sub_23F44147C();
    }
    if (*(_BYTE *)(v43 + *(int *)(v51 + 24)) == 1)
    {
      sub_23F382FC4((uint64_t)v94, (uint64_t)v91);
      if (qword_256E6EEA0 != -1)
        swift_once();
      v68 = v76;
      v69 = sub_23F361498(v76, (uint64_t)qword_256E7FEA8);
      v70 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v77, v69, v68);
      v71 = v87;
      v87[3] = (uint64_t)&unk_250FD68E0;
      v71[4] = (uint64_t)&off_250FD6950;
      v72 = swift_allocObject();
      *v71 = v72;
      sub_23F43DA80((uint64_t)v91, v70, (_QWORD *)(v72 + 16));
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v94);
      sub_23F441374();
      return sub_23F441310();
    }
    else
    {
      sub_23F441374();
      sub_23F441310();
      return sub_23F362678(v94, (uint64_t)v87);
    }
  }
}

unint64_t sub_23F43FCCC()
{
  unint64_t result;

  result = qword_256E74170;
  if (!qword_256E74170)
  {
    result = MEMORY[0x242670A44](&unk_23F622554, &type metadata for FullPlannerModelClientError);
    atomic_store(result, (unint64_t *)&qword_256E74170);
  }
  return result;
}

uint64_t sub_23F43FD08()
{
  uint64_t v0;

  swift_release();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 24);
  return swift_deallocObject();
}

uint64_t type metadata accessor for PnRTelemetryGMSPromptClient()
{
  uint64_t result;

  result = qword_256E741F8;
  if (!qword_256E741F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F43FD6C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23F432B2C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  sub_23F383E88(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F38422C();
  return sub_23F4411CC();
}

uint64_t sub_23F43FDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F432B2C() - 8) + 80);
  v3 = v0 + ((v2 + 32) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23F362820;
  sub_23F4411EC();
  return sub_23F43DBCC(v5, v6, v7, v3);
}

void type metadata accessor for FullPlannerTemplatedGMSPromptClient()
{
  sub_23F362C18();
}

_QWORD *sub_23F43FE50(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23F619D24();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

uint64_t sub_23F43FEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23F619D24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_23F43FF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F619D24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t *sub_23F43FFB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  sub_23F361AD0(a1, a2);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F619D24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_23F440010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23F619D24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_23F440074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F619D24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F4400E4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4400F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F619D24();
    return sub_23F36195C(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_23F440164()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F440170(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
    sub_23F362B80();
  }
  else
  {
    v7 = sub_23F619D24();
    sub_23F36196C(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t sub_23F4401D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F619D24();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F440248(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 8;
  swift_release();
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v1);
}

uint64_t sub_23F440270(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = a2 + 8;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = v4;
  v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_retain();
  v6(a1 + 8, v3, v5);
  return a1;
}

_QWORD *sub_23F4402D8(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v3;

  v3 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  sub_23F361AD0(a1 + 1, v3);
  return a1;
}

__n128 initializeWithTake for PromptMapper(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_23F440340(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t sub_23F440394(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23F4403D4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for CachedGMSPromptClient()
{
  sub_23F362C18();
}

void type metadata accessor for FullPlannerGMSPromptClient()
{
  sub_23F362C18();
}

uint64_t sub_23F440438()
{
  uint64_t v0;

  v0 = sub_23F4414A8();
  sub_23F384274(*(_QWORD *)(v0 - 8));
  return swift_deallocObject();
}

uint64_t sub_23F440490(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F4414A8() - 8) + 80);
  return sub_23F43B450(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_23F4404D8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F4404FC(uint64_t a1)
{
  uint64_t v1;

  return sub_23F43B354(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23F440504()
{
  uint64_t v0;

  return sub_23F43C10C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23F44051C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_23F3609AC;
  return sub_23F43EA08(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_23F44059C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F4405C0(uint64_t a1)
{
  uint64_t v1;

  return sub_23F43EB30(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23F4405C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(sub_23F35D2E8(&qword_256E73E10) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease();
  v4 = sub_23F619310();
  if (!sub_23F36195C(v0 + v2, 1, v4))
    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8));
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_23F4411CC();
}

uint64_t sub_23F440694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E73E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F4406DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F35D2E8(&qword_256E73E10);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23F3E013C;
  sub_23F4411EC();
  sub_23F441330();
  return sub_23F43EC24(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_23F4407C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a2;
  v7[5] = a4;
  v7[3] = a1;
  v9 = sub_23F619E98();
  v7[8] = v9;
  v7[9] = *(_QWORD *)(v9 - 8);
  v7[10] = swift_task_alloc();
  v10 = sub_23F61A198();
  v7[11] = v10;
  v7[12] = *(_QWORD *)(v10 - 8);
  v7[13] = swift_task_alloc();
  v11 = sub_23F619FDC();
  v7[14] = v11;
  v7[15] = *(_QWORD *)(v11 - 8);
  v7[16] = swift_task_alloc();
  v12 = sub_23F619FA0();
  v7[17] = v12;
  v7[18] = *(_QWORD *)(v12 - 8);
  v7[19] = swift_task_alloc();
  v13 = sub_23F61BE3C();
  v7[20] = v13;
  v7[21] = *(_QWORD *)(v13 - 8);
  v7[22] = swift_task_alloc();
  v14 = sub_23F61BE6C();
  v7[23] = v14;
  v7[24] = *(_QWORD *)(v14 - 8);
  v7[25] = swift_task_alloc();
  v15 = sub_23F61BE24();
  v7[26] = v15;
  v7[27] = *(_QWORD *)(v15 - 8);
  v7[28] = swift_task_alloc();
  v16 = sub_23F61A0FC();
  v7[29] = v16;
  v7[30] = *(_QWORD *)(v16 - 8);
  v7[31] = swift_task_alloc();
  v17 = sub_23F617000();
  v7[32] = v17;
  v7[33] = *(_QWORD *)(v17 - 8);
  v7[34] = swift_task_alloc();
  v7[35] = swift_task_alloc();
  v18 = *(_QWORD *)(a6 - 8);
  v7[36] = v18;
  v7[37] = swift_task_alloc();
  (*(void (**)(void))(v18 + 16))();
  return swift_task_switch();
}

uint64_t sub_23F4409BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t, uint64_t);
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F3B15E8();
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 232);
  v13 = *(_QWORD *)(v0 + 280);
  v14 = *(_QWORD *)(v0 + 192);
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 304) = sub_23F61A900();
  v7 = *MEMORY[0x24BE55CC8];
  *(_DWORD *)(v0 + 352) = v7;
  v8 = sub_23F61AA74();
  *(_QWORD *)(v0 + 312) = v8;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104);
  *(_QWORD *)(v0 + 320) = v9;
  v9(v4, v7, v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, *MEMORY[0x24BE54FB8], v6);
  sub_23F616FF4();
  sub_23F61A8E8();
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 328) = v10;
  sub_23F3D98EC(v1, v10);
  sub_23F3B1CC8(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v15, *MEMORY[0x24BE5EAF0], v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v13, v3);
  sub_23F617BA0();
  sub_23F61BE0C();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 336) = v11;
  *v11 = v0;
  v11[1] = sub_23F440B54;
  return sub_23F61BDD0();
}

uint64_t sub_23F440B54()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1998();
  sub_23F3B201C();
  *(_QWORD *)(v1 + 344) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F440BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v7;
  uint64_t v8;
  void (*v9)(uint64_t, _QWORD, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;

  v7 = *(_DWORD *)(v0 + 352);
  v9 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 320);
  v10 = *(_QWORD *)(v0 + 280);
  v14 = *(_QWORD *)(v0 + 256);
  v15 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
  v11 = *(_QWORD *)(v0 + 216);
  v12 = *(_QWORD *)(v0 + 208);
  v13 = *(_QWORD *)(v0 + 224);
  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 312);
  v5 = sub_23F61BE30();
  sub_23F441488(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v16 = sub_23F43A8B4(v5);
  swift_bridgeObjectRelease();
  v9(v2, v7, v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x24BE54C88], v4);
  sub_23F61A8D0();
  sub_23F383D74(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v12);
  v15(v10, v14);
  sub_23F3D9D78(*(_QWORD *)(v0 + 288));
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
}

void sub_23F440D44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _WORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);

  sub_23F44134C();
  v4(v1);
  sub_23F441324(*MEMORY[0x24BE54DA8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  sub_23F616D90();
  sub_23F61A18C();
  v5 = sub_23F44121C();
  sub_23F441384(v5, v6, v7, v8, v9, v10, v11, v12, v23, v24);
  sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F619088();
  sub_23F619E8C();
  v13 = sub_23F3F0EEC();
  if (sub_23F3F0E3C(v13))
  {
    v14 = (_WORD *)sub_23F3EEE70();
    sub_23F3F0EF4(v14);
    sub_23F3F0DF0(&dword_23F35A000, v15, v16, "Failed to read from plan cache. Continuing with no drafts.");
    sub_23F366530();
  }
  v25 = v0[35];
  v26 = (uint64_t (*)(uint64_t, uint64_t))v0[41];
  v18 = v0[27];
  v17 = v0[28];
  v19 = v0[26];
  v20 = v0[9];
  v21 = v0[10];

  sub_23F3B1CC8(v21, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
  sub_23F3665E8();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  sub_23F383CA8(v25, v26);
  sub_23F3D9D78(v0[36]);
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F441330();
  __asm { BR              X1 }
}

uint64_t sub_23F440ED0()
{
  uint64_t v0;

  return sub_23F43D8AC(*(_QWORD *)(v0 + 16));
}

unint64_t sub_23F440EE8()
{
  unint64_t result;

  result = qword_256E74348;
  if (!qword_256E74348)
  {
    result = MEMORY[0x242670A44](MEMORY[0x24BEE0D18], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256E74348);
  }
  return result;
}

unint64_t sub_23F440F24()
{
  unint64_t result;

  result = qword_256E74350;
  if (!qword_256E74350)
  {
    result = MEMORY[0x242670A44](MEMORY[0x24BEE5E60], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256E74350);
  }
  return result;
}

unint64_t sub_23F440F60()
{
  unint64_t result;

  result = qword_256E74358;
  if (!qword_256E74358)
  {
    result = MEMORY[0x242670A44](&unk_23F62223C, &unk_250FD6AA0);
    atomic_store(result, (unint64_t *)&qword_256E74358);
  }
  return result;
}

uint64_t sub_23F440F9C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F440FDC + 4 * byte_23F622030[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F440FFC + 4 * byte_23F622035[v4]))();
}

_BYTE *sub_23F440FDC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F440FFC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F441004(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F44100C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F441014(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F44101C(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for FullPlannerTemplatedGMSPromptClient.FullPlannerTemplatedGMSClientError()
{
  sub_23F362C18();
}

unint64_t sub_23F44103C()
{
  unint64_t result;

  result = qword_256E74368;
  if (!qword_256E74368)
  {
    result = MEMORY[0x242670A44](&unk_23F622214, &unk_250FD6AA0);
    atomic_store(result, (unint64_t *)&qword_256E74368);
  }
  return result;
}

unint64_t sub_23F441078()
{
  unint64_t result;

  result = qword_256E74370[0];
  if (!qword_256E74370[0])
  {
    result = MEMORY[0x242670A44](&unk_23F622194, &unk_250FD6AA0);
    atomic_store(result, qword_256E74370);
  }
  return result;
}

uint64_t sub_23F4410BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t sub_23F4410D4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F44110C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F441140()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[33] + 8))(v0[35], v0[32]);
}

uint64_t sub_23F441150(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F44116C()
{
  return sub_23F6187DC();
}

void sub_23F441188()
{
  sub_23F377C74();
}

uint64_t sub_23F441194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_23F4411AC()
{
  return sub_23F619DD8();
}

uint64_t sub_23F4411CC()
{
  return swift_deallocObject();
}

uint64_t sub_23F4411DC()
{
  return swift_task_alloc();
}

uint64_t sub_23F4411F8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F441204(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F441210()
{
  return sub_23F617AF8();
}

uint64_t sub_23F44121C()
{
  return sub_23F61A8DC();
}

uint64_t sub_23F441234(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F44123C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23F35EA9C(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_23F441260(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 176);
}

uint64_t sub_23F44127C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 112);
}

uint64_t sub_23F441298(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD);

  return v2(a1, *(_QWORD *)(v1 + 288));
}

uint64_t sub_23F4412AC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4412B8()
{
  return sub_23F61C490();
}

uint64_t sub_23F4412CC()
{
  return sub_23F61BF38();
}

uint64_t sub_23F4412E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v0, v2);
}

uint64_t sub_23F441310()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 208), *(_QWORD *)(v1 - 280));
}

uint64_t sub_23F441324@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

uint64_t sub_23F441364()
{
  return sub_23F61C790();
}

uint64_t sub_23F441374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8))(*(_QWORD *)(v2 - 200), v0);
}

uint64_t sub_23F441384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v11, a10);
}

uint64_t sub_23F441394()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 104) = v1;
  return sub_23F6179B4();
}

uint64_t sub_23F4413A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v1 - 88) = v2;
  return swift_task_dealloc();
}

uint64_t sub_23F4413B4(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, v1);
}

uint64_t sub_23F4413D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v22 - 96))(a1, a22);
}

uint64_t sub_23F4413E0()
{
  return sub_23F61796C();
}

uint64_t sub_23F4413E8()
{
  return sub_23F617A74();
}

uint64_t sub_23F4413F0(uint64_t result)
{
  *(_QWORD *)(result + 32) = 0x74706D6F7270;
  *(_QWORD *)(result + 40) = 0xE600000000000000;
  return result;
}

uint64_t sub_23F441408()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F441418()
{
  return sub_23F61BFEC();
}

void sub_23F441424()
{
  sub_23F376C88();
}

uint64_t sub_23F441444()
{
  return sub_23F61BFEC();
}

uint64_t sub_23F441450()
{
  return swift_task_dealloc();
}

uint64_t sub_23F44145C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

id sub_23F441468()
{
  void *v0;

  return v0;
}

_QWORD *sub_23F441470(_QWORD *a1)
{
  return sub_23F35EA9C(a1, a1[3]);
}

uint64_t sub_23F44147C()
{
  uint64_t v0;

  return sub_23F362678((__int128 *)(v0 - 192), v0 - 152);
}

uint64_t sub_23F441488@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void sub_23F441494(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F3D9844(v2, a2);
}

uint64_t sub_23F44149C()
{
  return swift_task_create();
}

uint64_t sub_23F4414A8()
{
  return sub_23F617AD4();
}

uint64_t sub_23F4414B0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4414BC()
{
  return sub_23F61BF44();
}

uint64_t sub_23F4414C8@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

double sub_23F4414E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint8_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  _WORD *v17;
  double result;
  uint64_t v19;
  uint64_t v20;

  v8 = sub_23F3B1728();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F38F964();
  v11 = (v10 - v9);
  v12 = sub_23F616E68();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F38F964();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v15 - v14, a1, v12);
  type metadata accessor for PlannerHTTPClient(0);
  sub_23F3668A0();
  v19 = PlannerHTTPClient.init(with:)();
  sub_23F619088();
  sub_23F619E8C();
  v16 = sub_23F3B1A04();
  if (os_log_type_enabled(v11, v16))
  {
    v17 = (_WORD *)sub_23F366668();
    sub_23F3F0EF4(v17);
    sub_23F4114BC(&dword_23F35A000, v11, v16, "Created a FullPlannerModelClient with PlannerHTTPClient", a3);
    sub_23F366530();
  }

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  (*(void (**)(NSObject *, uint64_t))(v20 + 8))(v11, v8);
  *(_QWORD *)a4 = v19;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  *(_QWORD *)(a4 + 24) = 1;
  *(_QWORD *)(a4 + 32) = 0x3FF0000000000000;
  *(_QWORD *)(a4 + 40) = 0;
  *(_QWORD *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = 0x3FF0000000000000;
  result = 0.0;
  *(_OWORD *)(a4 + 64) = xmmword_23F622280;
  return result;
}

uint64_t sub_23F441698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  __int128 v28[2];

  v5 = sub_23F35D2E8(&qword_256E70790);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  v8 = v7 - v6;
  v9 = sub_23F35D2E8(&qword_256E70798);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v27 - v13;
  v15 = a2 + *(int *)(type metadata accessor for FullPlannerTokenGeneratorConstrainedDecodingInterface(0) + 20);
  sub_23F617A80();
  sub_23F617A98();
  sub_23F4455EC();
  sub_23F36196C(v16, v17, v18, v19);
  sub_23F39E478((uint64_t)v14, (uint64_t)v12, &qword_256E70798);
  sub_23F617AC8();
  sub_23F617ABC();
  sub_23F617AA4();
  sub_23F617AB0();
  sub_23F3625D8((uint64_t)v14, &qword_256E70798);
  v20 = *MEMORY[0x24BE599E0];
  v21 = sub_23F619D24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v8, v20, v21);
  sub_23F4455EC();
  sub_23F36196C(v22, v23, v24, v21);
  sub_23F43F5CC(a1, v8, (uint64_t)v28);
  sub_23F3663AC(a1, type metadata accessor for FullPlannerGMSClientConfiguration);
  sub_23F3625D8(v8, &qword_256E70790);
  if (!v2)
    return sub_23F362678(v28, a2);
  v25 = sub_23F617AD4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v15, v25);
}

uint64_t sub_23F4418E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  const void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[18] = a2;
  v4[19] = a3;
  v4[17] = a1;
  v5 = sub_23F619D24();
  v4[20] = v5;
  v4[21] = *(_QWORD *)(v5 - 8);
  v4[22] = sub_23F366578();
  v6 = sub_23F617000();
  v4[23] = v6;
  v4[24] = *(_QWORD *)(v6 - 8);
  v4[25] = sub_23F366578();
  sub_23F35D2E8(&qword_256E70760);
  v4[26] = sub_23F366578();
  v4[27] = type metadata accessor for PlannerHTTPClient.CompletionRequest(0);
  v4[28] = sub_23F445578();
  v4[29] = swift_task_alloc();
  v7 = sub_23F3B1728();
  v4[30] = v7;
  v4[31] = *(_QWORD *)(v7 - 8);
  v4[32] = sub_23F445578();
  v4[33] = swift_task_alloc();
  memcpy(v4 + 2, v3, 0x50uLL);
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F4419D4()
{
  uint64_t v0;
  NSObject *v1;
  _WORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;

  sub_23F3B2130();
  v1 = sub_23F619E8C();
  sub_23F61C610();
  if (sub_23F4067DC(v1))
  {
    v2 = (_WORD *)sub_23F366668();
    sub_23F3F0EF4(v2);
    sub_23F432948(&dword_23F35A000, v1, v3, "Running completion request using foundation models");
    sub_23F366530();
  }
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 224);
  v24 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 208);
  v23 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 136);
  v10 = *(_QWORD *)(v0 + 144);

  v11 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(_QWORD *)(v0 + 272) = v11;
  v11(v4, v6);
  v12 = sub_23F441ED8(v9, v10);
  v14 = v13;
  v15 = *(_QWORD *)(v0 + 24);
  v16 = *(_QWORD *)(v0 + 32);
  sub_23F616E68();
  sub_23F44558C(v8);
  v17 = v7 + *(int *)(v23 + 36);
  sub_23F44558C(v17);
  *(_QWORD *)v7 = v15;
  *(_QWORD *)(v7 + 8) = v16;
  *(_QWORD *)(v7 + 16) = v12;
  *(_QWORD *)(v7 + 24) = v14;
  v18 = *(_OWORD *)(v0 + 40);
  v19 = *(_OWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 88);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v7 + 64) = v19;
  *(_OWORD *)(v7 + 32) = v18;
  *(_QWORD *)(v7 + 88) = 0;
  *(_QWORD *)(v7 + 96) = 0;
  *(_QWORD *)(v7 + 80) = v20;
  *(_BYTE *)(v7 + 104) = 0;
  sub_23F617BA0();
  sub_23F444F70(v8, v17);
  sub_23F444FB8(v7, v24);
  v25 = (char *)&dword_256E744E8 + dword_256E744E8;
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v21;
  *v21 = v0;
  v21[1] = sub_23F441B78;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))v25)(v0 + 96, *(_QWORD *)(v0 + 232), 0x4034000000000000, 0);
}

uint64_t sub_23F441B78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F441BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 176);
  v41 = *(_QWORD *)(v0 + 192);
  v42 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD **)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x24BE599F0], v4);
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  v39 = v6;
  sub_23F61AD44();
  sub_23F3837B0();
  sub_23F38432C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v1, v42);
  if (v5 && v7[2])
  {
    v8 = *(_QWORD *)(v0 + 232);
    v38 = *(_QWORD *)(v0 + 208);
    v9 = v7[4];
    v10 = v7[5];
    sub_23F617BA0();
    sub_23F3663AC(v8, type metadata accessor for PlannerHTTPClient.CompletionRequest);
    sub_23F44552C(v11, v12, v13, v14, v15, v16, v17, v18, v36, v38, v39, v40);
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666D4();
    sub_23F3668DC();
    sub_23F3667E0();
    sub_23F383898();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v9, v10);
  }
  else
  {
    v20 = *(NSObject **)(v0 + 256);
    sub_23F3B2130();
    sub_23F619E8C();
    v21 = sub_23F3F0EEC();
    if (sub_23F384458(v21))
    {
      v22 = (uint8_t *)sub_23F366668();
      *(_WORD *)v22 = 0;
      sub_23F4114BC(&dword_23F35A000, v20, (os_log_type_t)v3, "No completion results found", v22);
      sub_23F366530();
    }
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
    v24 = *(_QWORD *)(v0 + 256);
    v26 = *(_QWORD *)(v0 + 232);
    v25 = *(_QWORD *)(v0 + 240);

    v23(v24, v25);
    sub_23F43FCCC();
    sub_23F362D64();
    *v27 = 0;
    swift_willThrow();
    sub_23F3663AC(v26, type metadata accessor for PlannerHTTPClient.CompletionRequest);
    sub_23F44552C(v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v39, v40);
    sub_23F445564();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23F441E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 168);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, *MEMORY[0x24BE599F0], v6);
  sub_23F61AD50();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_willThrow();
  sub_23F3663AC(v1, type metadata accessor for PlannerHTTPClient.CompletionRequest);
  sub_23F445564();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  return sub_23F38346C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F441ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24[2];

  v4 = sub_23F619E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[0] = a1;
  v24[1] = a2;
  v22 = 10;
  v23 = 0xE100000000000000;
  v20 = 4091452;
  v21 = 0xE300000000000000;
  sub_23F38813C();
  v8 = sub_23F61C7CC();
  v10 = v9;
  sub_23F619088();
  swift_bridgeObjectRetain_n();
  v11 = sub_23F619E8C();
  v12 = sub_23F61C610();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v19 = v4;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v24[0] = v15;
    *(_DWORD *)v14 = 136315138;
    sub_23F617BA0();
    sub_23F37AE00(v8, v10, v24);
    v22 = v16;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23F35A000, v11, v12, "Reformatted prompt to be sent to the model follows on the next line:\n%s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v15, -1, -1);
    MEMORY[0x242670B70](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v8;
}

uint64_t sub_23F442110(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v5 + 472) = a4;
  *(_QWORD *)(v5 + 160) = a3;
  *(_QWORD *)(v5 + 168) = v4;
  *(_QWORD *)(v5 + 144) = a1;
  *(_QWORD *)(v5 + 152) = a2;
  sub_23F61C148();
  *(_QWORD *)(v5 + 176) = swift_task_alloc();
  v6 = sub_23F619E50();
  *(_QWORD *)(v5 + 184) = v6;
  *(_QWORD *)(v5 + 192) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 200) = swift_task_alloc();
  v7 = sub_23F619E20();
  *(_QWORD *)(v5 + 208) = v7;
  *(_QWORD *)(v5 + 216) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 224) = swift_task_alloc();
  *(_QWORD *)(v5 + 232) = swift_task_alloc();
  *(_QWORD *)(v5 + 240) = swift_task_alloc();
  sub_23F35D2E8(&qword_256E70760);
  *(_QWORD *)(v5 + 248) = swift_task_alloc();
  v8 = sub_23F616E68();
  *(_QWORD *)(v5 + 256) = v8;
  *(_QWORD *)(v5 + 264) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 272) = swift_task_alloc();
  v9 = sub_23F619E98();
  *(_QWORD *)(v5 + 280) = v9;
  *(_QWORD *)(v5 + 288) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 296) = swift_task_alloc();
  *(_QWORD *)(v5 + 304) = swift_task_alloc();
  *(_QWORD *)(v5 + 312) = swift_task_alloc();
  *(_QWORD *)(v5 + 320) = swift_task_alloc();
  *(_QWORD *)(v5 + 328) = swift_task_alloc();
  *(_QWORD *)(v5 + 336) = swift_task_alloc();
  *(_QWORD *)(v5 + 344) = swift_task_alloc();
  *(_QWORD *)(v5 + 352) = swift_task_alloc();
  v10 = sub_23F616A90();
  *(_QWORD *)(v5 + 360) = v10;
  *(_QWORD *)(v5 + 368) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v5 + 376) = swift_task_alloc();
  *(_QWORD *)(v5 + 384) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F4422E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_QWORD, _QWORD);
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  NSObject *v29;
  uint8_t *v30;
  os_signpost_id_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t ObjectType;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(_QWORD, uint64_t, uint64_t);
  uint64_t v45;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_BYTE *)(v0 + 472) & 1;
  v5 = type metadata accessor for PlannerHTTPClient.CompletionRequest(0);
  sub_23F44405C(0x6974656C706D6F63, 0xEB00000000736E6FLL, v3, v2, v4, v3 + *(int *)(v5 + 36), v1);
  v6 = *(_QWORD *)(v0 + 376);
  v7 = *(_QWORD *)(v0 + 384);
  v8 = *(_QWORD *)(v0 + 360);
  v9 = *(_QWORD *)(v0 + 368);
  sub_23F61910C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v7, v8);
  v10 = sub_23F619E8C();
  v11 = sub_23F61C610();
  if (os_log_type_enabled(v10, v11))
  {
    v13 = *(_QWORD *)(v0 + 248);
    v12 = *(_QWORD *)(v0 + 256);
    v14 = (uint8_t *)sub_23F366668();
    v45 = sub_23F366668();
    *(_DWORD *)v14 = 136315138;
    sub_23F616A6C();
    result = sub_23F36195C(v13, 1, v12);
    if ((_DWORD)result != 1)
    {
      v41 = *(_QWORD *)(v0 + 368);
      v42 = *(_QWORD *)(v0 + 360);
      v43 = *(_QWORD *)(v0 + 376);
      v16 = *(_QWORD *)(v0 + 272);
      v18 = *(_QWORD *)(v0 + 256);
      v17 = *(_QWORD *)(v0 + 264);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 32))(v16, *(_QWORD *)(v0 + 248), v18);
      sub_23F3612C0((unint64_t *)&qword_256E730D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v19 = sub_23F61CC1C();
      v21 = v20;
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
      sub_23F37AE00(v19, v21, &v45);
      *(_QWORD *)(v0 + 136) = v22;
      sub_23F61C790();
      sub_23F38432C();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v42);
      sub_23F38485C(&dword_23F35A000, v10, v11, "Request URL is : %s", v14);
      sub_23F3B17D4();
      sub_23F366530();
    }
    __break(1u);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 352);
    v24 = *(_QWORD *)(v0 + 280);
    v25 = *(_QWORD *)(v0 + 288);
    v26 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 8);
    v26(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 360));

    v27 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v27(v23, v24);
    *(_QWORD *)(v0 + 392) = v27;
    *(_QWORD *)(v0 + 400) = v26;
    if (qword_256E6F078 != -1)
      swift_once();
    v28 = sub_23F619E44();
    *(_QWORD *)(v0 + 408) = sub_23F361498(v28, (uint64_t)qword_256E77B48);
    sub_23F619E38();
    sub_23F619DFC();
    v29 = sub_23F619E38();
    sub_23F61C694();
    if ((sub_23F4455D4() & 1) != 0)
    {
      v30 = (uint8_t *)sub_23F366668();
      *(_WORD *)v30 = 0;
      v31 = sub_23F619E08();
      _os_signpost_emit_with_name_impl(&dword_23F35A000, v29, (os_signpost_type_t)v23, v31, "PlannerHTTPAPISession.data", "", v30, 2u);
      sub_23F366530();
    }
    v32 = *(_QWORD *)(v0 + 232);
    v33 = *(_QWORD *)(v0 + 240);
    v34 = *(_QWORD *)(v0 + 208);
    v35 = *(_QWORD *)(v0 + 216);
    v36 = *(_QWORD *)(v0 + 168);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v32, v33, v34);
    sub_23F619E74();
    sub_23F3668A0();
    *(_QWORD *)(v0 + 416) = sub_23F619E68();
    v37 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8);
    *(_QWORD *)(v0 + 424) = v37;
    sub_23F36673C(v37);
    v38 = *(_QWORD *)(v36 + 24);
    ObjectType = swift_getObjectType();
    v44 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v38 + 8) + *(_QWORD *)(v38 + 8));
    v40 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 432) = v40;
    *v40 = v0;
    v40[1] = sub_23F442790;
    return v44(*(_QWORD *)(v0 + 384), ObjectType, v38);
  }
  return result;
}

uint64_t sub_23F442790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[55] = a1;
  v5[56] = a2;
  v5[57] = a3;
  v5[58] = v3;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F4427F4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint8_t *v7;
  os_signpost_id_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  id v15;
  id v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  NSObject *v34;
  _WORD *v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  BOOL v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  os_log_type_t v65;
  BOOL v66;
  void (*v67)(uint64_t, uint64_t);
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void *v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  _OWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  uint64_t (*v93)(void);
  void *v94;
  id v95;
  NSObject *v96;
  os_log_type_t v97;
  BOOL v98;
  void *v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  id v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  void *v128;
  void (*v129)(uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  NSObject *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  void (*v165)(uint64_t, uint64_t);
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  void (*v169)(uint64_t, uint64_t);
  uint64_t v170;
  void *v171;
  void *v172;
  void (*v173)(uint64_t, uint64_t);
  void (*v174)(uint64_t, uint64_t);
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;

  v1 = *(_QWORD *)(v0 + 416);
  v2 = sub_23F619E38();
  sub_23F619E5C();
  sub_23F61C688();
  if ((sub_23F4455D4() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 192);
    v3 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 184);
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x24BEE7810])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
      v6 = "";
    }
    v7 = (uint8_t *)sub_23F366668();
    *(_WORD *)v7 = 0;
    v8 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v2, (os_signpost_type_t)v1, v8, "PlannerHTTPAPISession.data", v6, v7, 2u);
    sub_23F366530();
  }
  v9 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  v10 = *(_QWORD *)(v0 + 224);
  v11 = *(_QWORD *)(v0 + 208);

  v9(v10, v11);
  objc_opt_self();
  v12 = swift_dynamicCastObjCClass();
  if (v12)
  {
    v13 = (void *)v12;
    v14 = *(NSObject **)(v0 + 344);
    v15 = *(id *)(v0 + 456);
    sub_23F445524();
    v16 = v15;
    sub_23F619E8C();
    v17 = sub_23F3B1A04();
    if (sub_23F366874(v17))
    {
      v164 = *(void **)(v0 + 456);
      v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v18 = 134217984;
      *(_QWORD *)(v0 + 128) = sub_23F445504((uint64_t)v18, (const char *)&selRef_URLForResource_withExtension_);
      sub_23F61C790();

      sub_23F38485C(&dword_23F35A000, v14, (os_log_type_t)v15, "Received response with status code: %ld", v18);
      sub_23F366530();
    }

    v19 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 392);
    v20 = *(_QWORD *)(v0 + 344);
    v21 = *(_QWORD *)(v0 + 280);

    v22 = v19(v20, v21);
    v23 = (uint64_t)sub_23F445504(v22, sel_statusCode);
    switch(v23)
    {
      case 302:
        goto LABEL_12;
      case 429:
        v34 = *(NSObject **)(v0 + 328);
        sub_23F445524();
        sub_23F619E8C();
        sub_23F3F0EEC();
        if (sub_23F4067DC(v34))
        {
          v35 = (_WORD *)sub_23F366668();
          sub_23F3F0EF4(v35);
          sub_23F432948(&dword_23F35A000, v34, v36, "Rate limited!");
          sub_23F366530();
        }
        v37 = *(_QWORD *)(v0 + 448);
        v38 = *(void **)(v0 + 456);
        v39 = *(_QWORD *)(v0 + 440);
        v40 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
        v166 = *(_QWORD *)(v0 + 384);
        v169 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
        v41 = *(_QWORD *)(v0 + 360);
        v42 = *(_QWORD *)(v0 + 328);
        v43 = *(_QWORD *)(v0 + 280);

        v40(v42, v43);
        sub_23F445074();
        sub_23F362D64();
        *v44 = xmmword_23F622290;
        sub_23F4454B8();
        sub_23F3F3D0C(v39, v37);
        swift_release();

        v169(v166, v41);
        goto LABEL_39;
      case 401:
LABEL_12:
        v24 = *(NSObject **)(v0 + 336);
        sub_23F445524();
        sub_23F619E8C();
        v25 = sub_23F3B1A04();
        if (sub_23F366874(v25))
        {
          v26 = (uint8_t *)sub_23F366668();
          *(_WORD *)v26 = 0;
          sub_23F4114BC(&dword_23F35A000, v24, (os_log_type_t)v20, "Authorization expired. Will reauthorize and retry request.", v26);
          sub_23F366530();
        }
        v27 = *(void **)(v0 + 456);
        v28 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
        v159 = *(_QWORD *)(v0 + 384);
        v165 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
        v155 = *(_QWORD *)(v0 + 360);
        v29 = *(_QWORD *)(v0 + 336);
        v30 = *(_QWORD *)(v0 + 280);

        v28(v29, v30);
        sub_23F61C8E0();
        v31 = sub_23F4455C0();
        v175 = 0xD000000000000017;
        v176 = 0x800000023F636550;
        *(_QWORD *)(v0 + 120) = sub_23F445504(v31, (const char *)&selRef_URLForResource_withExtension_);
        sub_23F61CC1C();
        sub_23F4455F8();
        sub_23F362D18();
        v32 = v176;
        sub_23F445074();
        sub_23F362D64();
        *v33 = v175;
        v33[1] = v32;
        sub_23F4454B8();
        sub_23F4455C8();
        swift_release();

        v165(v159, v155);
LABEL_39:
        sub_23F445488();
        swift_task_dealloc();
        sub_23F366708();
        sub_23F3666E4();
        sub_23F366698();
        sub_23F3666D4();
        sub_23F3666A0();
        sub_23F3666DC();
        sub_23F362CC8();
        sub_23F3666C4();
        sub_23F3666EC();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        v93 = *(uint64_t (**)(void))(v0 + 8);
        return v93();
    }
    if (v23 >= 300)
    {
      sub_23F4E0360((uint64_t)&v175);
      v94 = *(void **)(v0 + 456);
      if (v177)
      {
        sub_23F445524();
        swift_bridgeObjectRetain_n();
        v95 = v94;
        v96 = sub_23F619E8C();
        v97 = sub_23F61C628();
        v98 = os_log_type_enabled(v96, v97);
        v99 = *(void **)(v0 + 456);
        v100 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
        v101 = *(_QWORD *)(v0 + 304);
        v102 = *(_QWORD *)(v0 + 280);
        if (v98)
        {
          v103 = sub_23F366668();
          v145 = sub_23F366668();
          v180 = v145;
          *(_DWORD *)v103 = 134218242;
          *(_QWORD *)(v0 + 104) = sub_23F445504(v145, sel_statusCode);
          sub_23F61C790();

          *(_WORD *)(v103 + 12) = 2080;
          v104 = sub_23F44550C();
          sub_23F4455E0(v104, v105);
          *(_QWORD *)(v0 + 112) = v106;
          sub_23F61C790();
          swift_bridgeObjectRelease();
          sub_23F384A80();
          _os_log_impl(&dword_23F35A000, v96, v97, "Unhandled HTTP status: %ld error response: %s", (uint8_t *)v103, 0x16u);
          sub_23F3B17D4();
          sub_23F366530();
        }

        sub_23F384A80();
        v100(v101, v102);
        v120 = *(_QWORD *)(v0 + 448);
        v119 = *(void **)(v0 + 456);
        v121 = *(_QWORD *)(v0 + 440);
        v173 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
        v175 = 0;
        v153 = *(_QWORD *)(v0 + 384);
        v122 = *(_QWORD *)(v0 + 360);
        v176 = 0xE000000000000000;
        sub_23F61C8E0();
        v123 = sub_23F4455C0();
        v180 = 0xD000000000000017;
        v181 = 0x800000023F636550;
        *(_QWORD *)(v0 + 96) = sub_23F445504(v123, sel_statusCode);
        sub_23F61CC1C();
        sub_23F61C280();
        sub_23F362D18();
        sub_23F61C280();
        sub_23F44550C();
        sub_23F38432C();
        sub_23F61C280();
        sub_23F362D08();
        v125 = v180;
        v124 = v181;
        sub_23F445074();
        sub_23F362D64();
        *v126 = v125;
        v126[1] = v124;
        sub_23F4454B8();
        sub_23F3F3D0C(v121, v120);
        swift_release();

        v173(v153, v122);
      }
      else
      {
        v107 = *(NSObject **)(v0 + 296);
        sub_23F445524();
        v108 = v94;
        sub_23F619E8C();
        v109 = sub_23F3F0EEC();
        if (sub_23F384458(v109))
        {
          v172 = *(void **)(v0 + 456);
          v110 = (uint8_t *)sub_23F366668();
          *(_DWORD *)v110 = 134217984;
          *(_QWORD *)(v0 + 88) = sub_23F445504((uint64_t)v110, sel_statusCode);
          v111 = sub_23F61C790();
          sub_23F4455AC(v111, v112, v113, v114, v115, v116, v117, v118, v135, v136, v137, v138, v139, v140, v141, v0 + 80, v143, v146, v148,
            v151,
            v154,
            v158,
            v163,
            v172);
          sub_23F38485C(&dword_23F35A000, v107, (os_log_type_t)v94, "Unhandled HTTP error status code: %ld", v110);
          sub_23F366530();
        }

        v128 = *(void **)(v0 + 456);
        v129 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
        v168 = *(_QWORD *)(v0 + 384);
        v174 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
        v162 = *(_QWORD *)(v0 + 360);
        v130 = *(_QWORD *)(v0 + 296);
        v131 = *(_QWORD *)(v0 + 280);

        v129(v130, v131);
        v175 = 0;
        v176 = 0xE000000000000000;
        sub_23F61C8E0();
        sub_23F4455C0();
        v175 = 0xD000000000000022;
        v176 = 0x800000023F636520;
        *(_QWORD *)(v0 + 80) = objc_msgSend(v13, (SEL)&selRef_URLForResource_withExtension_);
        sub_23F61CC1C();
        sub_23F4455F8();
        sub_23F362D18();
        v133 = v175;
        v132 = v176;
        sub_23F445074();
        sub_23F362D64();
        *v134 = v133;
        v134[1] = v132;
        sub_23F4454B8();
        sub_23F4455C8();
        swift_release();

        v174(v168, v162);
      }
      goto LABEL_39;
    }

  }
  v45 = *(_QWORD *)(v0 + 464);
  sub_23F445038();
  sub_23F616AB4();
  if (v45)
  {
    v46 = *(NSObject **)(v0 + 312);
    sub_23F61C13C();
    v48 = sub_23F61C124();
    v49 = v47;
    if (v47)
      v50 = v47;
    else
      v50 = 0x800000023F636500;
    sub_23F61910C();
    sub_23F441468();
    sub_23F441468();
    sub_23F617BA0();
    v51 = v46;
    sub_23F619E8C();
    v52 = sub_23F3F0EEC();
    v53 = os_log_type_enabled(v46, v52);
    v54 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
    v55 = *(_QWORD *)(v0 + 312);
    v170 = *(_QWORD *)(v0 + 280);
    if (v53)
    {
      v56 = 0xD000000000000016;
      if (v49)
        v56 = v48;
      v149 = v56;
      v57 = sub_23F366668();
      v58 = (_QWORD *)sub_23F366668();
      v175 = sub_23F366668();
      *(_DWORD *)v57 = 136315394;
      sub_23F617BA0();
      sub_23F37AE00(v149, v50, &v175);
      *(_QWORD *)(v0 + 56) = v59;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v57 + 12) = 2112;
      sub_23F441468();
      v60 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 64) = v60;
      sub_23F61C790();
      *v58 = v60;
      sub_23F3665E8();
      sub_23F3665E8();
      _os_log_impl(&dword_23F35A000, v51, v52, "Error decoding Ajax server response: %s. %@", (uint8_t *)v57, 0x16u);
      sub_23F35D2E8(&qword_256E6FAB0);
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F384A80();
    sub_23F3665E8();
    sub_23F3665E8();

    v54(v55, v170);
    v75 = *(_QWORD *)(v0 + 448);
    v76 = *(void **)(v0 + 456);
    v77 = *(_QWORD *)(v0 + 440);
    v78 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
    v79 = *(_QWORD *)(v0 + 384);
    v80 = *(_QWORD *)(v0 + 360);
    sub_23F445074();
    sub_23F362D64();
    *v81 = xmmword_23F620FD0;
    sub_23F4454B8();
    sub_23F3F3D0C(v77, v75);
    swift_release();
    sub_23F3665E8();

    v78(v79, v80);
    goto LABEL_39;
  }
  v167 = (_QWORD *)(v0 + 72);
  v61 = *(NSObject **)(v0 + 320);
  sub_23F445524();
  v62 = *(_QWORD *)(v0 + 24);
  v63 = *(_QWORD *)(v0 + 40);
  v144 = *(_QWORD *)(v0 + 32);
  v147 = *(_QWORD *)(v0 + 16);
  v64 = *(_QWORD *)(v0 + 48);
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F619E8C();
  v65 = sub_23F3B1A04();
  v152 = v61;
  v66 = sub_23F4067DC(v61);
  v171 = *(void **)(v0 + 456);
  v150 = *(_QWORD *)(v0 + 416);
  v68 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
  v67 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
  v69 = *(_QWORD *)(v0 + 384);
  v70 = *(_QWORD *)(v0 + 360);
  v156 = *(_QWORD *)(v0 + 280);
  v160 = *(_QWORD *)(v0 + 320);
  if (v66)
  {
    v71 = (uint8_t *)sub_23F366668();
    v180 = sub_23F366668();
    *(_DWORD *)v71 = 136315138;
    v175 = v147;
    v176 = v62;
    v177 = v144;
    v178 = v63;
    v179 = v64;
    v72 = PlannerHTTPClient.CompletionResponse.description.getter();
    sub_23F4455E0(v72, v73);
    *v167 = v74;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F3837B0();
    sub_23F362D08();
    swift_bridgeObjectRelease();
    sub_23F38485C(&dword_23F35A000, v152, v65, "Received response from Ajax server: %s", v71);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F3F3D0C(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 448));

  swift_release();
  sub_23F3837B0();
  sub_23F362D08();
  v82 = swift_bridgeObjectRelease();
  sub_23F4455AC(v82, v83, v84, v85, v86, v87, v88, v89, v135, v136, v137, v138, v139, v140, v141, v142, v144, v147, v150,
    (uint64_t)v152,
    v156,
    v160,
    (uint64_t)v167,
    v171);
  v68(v161, v157);
  v67(v69, v70);
  sub_23F445488();
  v90 = *(_QWORD *)(v0 + 144);
  v91 = *(_QWORD *)(v0 + 32);
  v92 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)v90 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v90 + 16) = v91;
  *(_OWORD *)(v90 + 24) = v92;
  swift_task_dealloc();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v93 = *(uint64_t (**)(void))(v0 + 8);
  return v93();
}

uint64_t sub_23F44365C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
  v2 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 360);
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F3668DC();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F3667E0();
  sub_23F383898();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F443764(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *a1;
  v5 = a1[1];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23F4437C4;
  return sub_23F4418E8(v4, v5, a2);
}

uint64_t sub_23F4437C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t sub_23F443828(uint64_t a1)
{
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F443858()
{
  uint64_t *v0;

  return sub_23F443828(*v0);
}

void sub_23F443860()
{
  sub_23F4454D8();
  sub_23F362B80();
}

uint64_t sub_23F44387C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  sub_23F35D2E8(&qword_256E74258);
  v4[6] = sub_23F366578();
  v5 = sub_23F3B1728();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F4438DC()
{
  uint64_t *v0;
  NSObject *v1;
  _WORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  sub_23F3B2130();
  v1 = sub_23F619E8C();
  sub_23F61C61C();
  if (sub_23F4067DC(v1))
  {
    v2 = (_WORD *)sub_23F366668();
    sub_23F3F0EF4(v2);
    sub_23F432948(&dword_23F35A000, v1, v3, "Running completion request using TokenGeneration");
    sub_23F366530();
  }
  v4 = v0[8];
  v5 = v0[6];
  v7 = v0[4];
  v6 = (_QWORD *)v0[5];

  sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v8 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v7 + 24) + 8))(*(_QWORD *)(v7 + 16));
  v10 = v9;
  MEMORY[0x242670A44](&unk_23F622390, v7);
  v11 = sub_23F445790(v8, v10);
  v13 = v12;
  sub_23F362D08();
  v0[10] = v13;
  v14 = v6[3];
  v15 = v6[4];
  sub_23F35EA9C(v6, v14);
  v16 = (char *)v6 + *(int *)(v7 + 36);
  v17 = sub_23F4414A8();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v16, v17);
  sub_23F4455EC();
  sub_23F36196C(v18, v19, v20, v17);
  v21 = (_QWORD *)swift_task_alloc();
  v0[11] = (uint64_t)v21;
  *v21 = v0;
  v21[1] = sub_23F443A60;
  return sub_23F43AFF0(v11, v13, v0[3], 0, 0, v0[6], v14, v15);
}

uint64_t sub_23F443A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  sub_23F445548();
  *v6 = *v3;
  v5[12] = v1;
  swift_task_dealloc();
  v7 = v5[6];
  if (!v1)
  {
    v5[13] = v4;
    v5[14] = v2;
    v5[15] = v0;
  }
  sub_23F3625D8(v7, &qword_256E74258);
  sub_23F384120();
  sub_23F36679C();
  return sub_23F4454C4();
}

uint64_t sub_23F443AE8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_23F362CC8();
  sub_23F3666DC();
  return sub_23F445540(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 112), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F443B2C()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23F362CC8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F443B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F445484;
  return sub_23F44387C(a1, a2, a3);
}

uint64_t sub_23F443BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  sub_23F35D2E8(&qword_256E74258);
  v6[8] = sub_23F366578();
  v7 = sub_23F3B1728();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = sub_23F3666CC();
  v6[12] = sub_23F3666CC();
  v6[13] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F443C50()
{
  uint64_t v0;
  NSObject *v1;
  _WORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  NSObject *v29;
  _WORD *v30;
  uint64_t v31;
  _BYTE *v32;

  sub_23F3B2130();
  v1 = sub_23F619E8C();
  sub_23F61C61C();
  if (sub_23F4067DC(v1))
  {
    v2 = (_WORD *)sub_23F366668();
    sub_23F3F0EF4(v2);
    sub_23F432948(&dword_23F35A000, v1, v3, "Running completion request using TokenGeneration");
    sub_23F366530();
  }
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 24);

  v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  sub_23F4455B4();
  v9 = sub_23F441ED8(v7, v6);
  v11 = v10;
  *(_QWORD *)(v0 + 112) = v10;
  if (v5)
  {
    v12 = v9;
    v13 = *(NSObject **)(v0 + 96);
    sub_23F3B2130();
    sub_23F619E8C();
    v14 = sub_23F3B1A04();
    if (sub_23F366874(v14))
    {
      v15 = (uint8_t *)sub_23F366668();
      *(_WORD *)v15 = 0;
      sub_23F4114BC(&dword_23F35A000, v13, (os_log_type_t)v1, "Sending grammar with completion request.", v15);
      sub_23F366530();
    }
    v16 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 72);
    v19 = *(_QWORD **)(v0 + 56);

    v8(v16, v17);
    v20 = v19[3];
    v21 = v19[4];
    sub_23F35EA9C(v19, v20);
    v22 = (char *)v19
        + *(int *)(type metadata accessor for FullPlannerTokenGeneratorConstrainedDecodingInterface(0) + 20);
    v23 = sub_23F4414A8();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v18, v22, v23);
    sub_23F4455EC();
    sub_23F36196C(v24, v25, v26, v23);
    v27 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v27;
    *v27 = v0;
    v27[1] = sub_23F443EC4;
    return sub_23F43AFF0(v12, v11, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64), v20, v21);
  }
  else
  {
    v29 = *(NSObject **)(v0 + 88);
    sub_23F362D18();
    sub_23F3B2130();
    sub_23F619E8C();
    sub_23F3F0EEC();
    if (sub_23F4067DC(v29))
    {
      v30 = (_WORD *)sub_23F366668();
      sub_23F3F0EF4(v30);
      sub_23F432948(&dword_23F35A000, v29, v31, "Constrained decoding interface is in use but no grammar was generated");
      sub_23F366530();
    }

    sub_23F4455B4();
    sub_23F43FCCC();
    sub_23F362D64();
    *v32 = 3;
    swift_willThrow();
    sub_23F44559C();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    return sub_23F38346C(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_23F443EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  sub_23F445548();
  *v6 = *v3;
  v5[16] = v1;
  swift_task_dealloc();
  v7 = v5[8];
  if (!v1)
  {
    v5[17] = v4;
    v5[18] = v2;
    v5[19] = v0;
  }
  sub_23F3625D8(v7, &qword_256E74258);
  sub_23F384120();
  sub_23F36679C();
  return sub_23F4454C4();
}

uint64_t sub_23F443F4C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return sub_23F445540(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 144), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F443FA4()
{
  uint64_t v0;

  sub_23F44559C();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F443FE8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23F445484;
  return sub_23F443BD0(v4, v5, v6, v7, a2);
}

uint64_t sub_23F44405C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD v22[4];
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v23 = a5;
  v22[1] = a4;
  v22[2] = a1;
  v24 = a3;
  v22[3] = a2;
  v10 = sub_23F35D2E8(&qword_256E70760);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F616E68();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v22 - v16;
  sub_23F39E478(a6, (uint64_t)v12, &qword_256E70760);
  if (sub_23F36195C((uint64_t)v12, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v7 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17PlannerHTTPClient_url, v13);
    sub_23F3625D8((uint64_t)v12, &qword_256E70760);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v12, v13);
  }
  v18 = v27;
  v19 = v23;
  sub_23F616DFC();
  sub_23F616A60();
  sub_23F616A78();
  v25 = 0x3D6B63616361;
  v26 = 0xE600000000000000;
  swift_getKeyPath();
  sub_23F617C9C();
  swift_release();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F616A78();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    sub_23F616A48();
  sub_23F616A54();
  sub_23F616A3C();
  type metadata accessor for PlannerHTTPClient.CompletionRequest(0);
  sub_23F3612C0(&qword_256E74500, type metadata accessor for PlannerHTTPClient.CompletionRequest, (uint64_t)&protocol conformance descriptor for PlannerHTTPClient.CompletionRequest);
  sub_23F616B14();
  if (v18)
  {
    v20 = sub_23F616A90();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a7, v20);
  }
  else
  {
    sub_23F616A84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t sub_23F444358()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F617AD4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_23F4443CC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *(int *)(a3 + 36);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23F617AD4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

uint64_t sub_23F444474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_23F617AD4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_23F4444B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F617AD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t *sub_23F44452C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  sub_23F361AD0(a1, a2);
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F617AD4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_23F44458C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23F617AD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_23F4445F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F617AD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F444660()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F44466C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F3B1D54();
    sub_23F362B80();
  }
  else
  {
    v6 = sub_23F4414A8();
    sub_23F3B1A44(a1 + *(int *)(a3 + 36), a2, v6);
  }
}

uint64_t sub_23F4446BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4446C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F3B218C();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_23F362B80();
  }
  else
  {
    v4 = v2;
    v5 = sub_23F4414A8();
    sub_23F38370C(v1 + *(int *)(v4 + 36), v0, v0, v5);
  }
}

uint64_t type metadata accessor for FullPlannerTokenGeneratorInterface(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F40C13C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FullPlannerTokenGeneratorInterface);
}

uint64_t destroy for FullPlannerHTTPClientInterface()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FullPlannerHTTPClientInterface(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  sub_23F617BA0();
  return a1;
}

_QWORD *assignWithCopy for FullPlannerHTTPClientInterface(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  return a1;
}

uint64_t assignWithTake for FullPlannerHTTPClientInterface(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for FullPlannerHTTPClientInterface(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FullPlannerHTTPClientInterface(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FullPlannerHTTPClientInterface()
{
  return &type metadata for FullPlannerHTTPClientInterface;
}

uint64_t *sub_23F444940(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B104();
    if (sub_23F36195C((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F35D2E8(&qword_256E705E0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      sub_23F36196C((uint64_t)a1, 0, 1, v7);
    }
    v10 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  }
  return a1;
}

uint64_t sub_23F444A20(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23F61B104();
  result = sub_23F36195C(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

void *sub_23F444A78(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F61B104();
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  return a1;
}

void *sub_23F444B2C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B104();
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  sub_23F36196C((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_23F444C34(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F61B104();
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  return a1;
}

void *sub_23F444CE8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23F61B104();
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  sub_23F36196C((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v11 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  return a1;
}

uint64_t sub_23F444DEC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F444DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E705E0);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    sub_23F3B1A44(a1, a2, v4);
  else
    sub_23F362B80();
}

uint64_t sub_23F444E74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F444E80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_23F35D2E8(&qword_256E705E0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23F38370C(a1, a2, a2, v8);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
    sub_23F362B80();
  }
}

uint64_t type metadata accessor for FullPlannerGMSClientConfiguration(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E74450);
}

void sub_23F444EFC()
{
  unint64_t v0;

  sub_23F38C624();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_23F444F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F444FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlannerHTTPClient.CompletionRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F444FFC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23F445038()
{
  unint64_t result;

  result = qword_256E744F0;
  if (!qword_256E744F0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlannerHTTPClient.CompletionResponse, &type metadata for PlannerHTTPClient.CompletionResponse);
    atomic_store(result, (unint64_t *)&qword_256E744F0);
  }
  return result;
}

unint64_t sub_23F445074()
{
  unint64_t result;

  result = qword_256E744F8;
  if (!qword_256E744F8)
  {
    result = MEMORY[0x242670A44](&unk_23F629070, &unk_250FD91E0);
    atomic_store(result, (unint64_t *)&qword_256E744F8);
  }
  return result;
}

uint64_t type metadata accessor for FullPlannerTokenGeneratorConstrainedDecodingInterface(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E74568);
}

_QWORD *sub_23F4450C8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23F617AD4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

uint64_t sub_23F445170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23F617AD4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_23F4451B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F617AD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t *sub_23F445228(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  sub_23F361AD0(a1, a2);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F617AD4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_23F445288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23F617AD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_23F4452EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F617AD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F44535C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F445368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F3B1D54();
    sub_23F362B80();
  }
  else
  {
    v6 = sub_23F4414A8();
    sub_23F3B1A44(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_23F4453B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4453C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F3B218C();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_23F362B80();
  }
  else
  {
    v4 = v2;
    v5 = sub_23F4414A8();
    sub_23F38370C(v1 + *(int *)(v4 + 20), v0, v0, v5);
  }
}

uint64_t sub_23F445410()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F617AD4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F4454B8()
{
  return swift_willThrow();
}

uint64_t sub_23F4454C4()
{
  return swift_task_switch();
}

uint64_t sub_23F4454D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  sub_23F35EA9C(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

id sub_23F445504(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_23F44550C()
{
  return PlannerHTTPClient.ErrorResponse.description.getter();
}

uint64_t sub_23F445524()
{
  return sub_23F61910C();
}

uint64_t sub_23F44552C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return sub_23F444FFC(a12, v12);
}

uint64_t sub_23F445540(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void sub_23F445548()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23F445564()
{
  return swift_task_dealloc();
}

uint64_t sub_23F445578()
{
  return swift_task_alloc();
}

uint64_t sub_23F44558C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(a1, 1, 1, v1);
}

uint64_t sub_23F44559C()
{
  return swift_task_dealloc();
}

void sub_23F4455AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24)
{

}

uint64_t sub_23F4455B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F4455C0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4455C8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F3F3D0C(v1, v0);
}

uint64_t sub_23F4455D4()
{
  return sub_23F61C718();
}

void sub_23F4455E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 104));
}

uint64_t sub_23F4455F8()
{
  return sub_23F61C280();
}

unint64_t sub_23F445604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned __int8 v8;
  _BYTE v10[36];
  uint64_t v11;
  char v12;

  v2 = v0;
  v3 = sub_23F61B104();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3842E4();
  sub_23F619184();
  sub_23F445D84();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23F61B0F8();
  if (v6)
  {
    sub_23F619178();
    swift_release();
    v7 = sub_23F61916C();
  }
  else
  {
    v7 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  if (v6)
    goto LABEL_8;
  sub_23F61B0EC();
  sub_23F445B58((uint64_t)v10, (uint64_t)&v11);
  if ((v12 & 1) == 0)
  {
    v7 = sub_23F61916C();
LABEL_8:
    v8 = 0;
    goto LABEL_9;
  }
  v7 = 0;
  v8 = 1;
LABEL_9:
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  return v7 | ((unint64_t)v8 << 32);
}

uint64_t sub_23F445790(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD v18[4];
  uint64_t v19;
  unint64_t v20;
  uint64_t v21[2];

  sub_23F619E98();
  sub_23F445D84();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = a1;
  v21[1] = a2;
  v19 = 10;
  v20 = 0xE100000000000000;
  v18[2] = 4091452;
  v18[3] = 0xE300000000000000;
  sub_23F38813C();
  v9 = sub_23F61C7CC();
  v11 = v10;
  sub_23F619088();
  swift_bridgeObjectRetain_n();
  v12 = sub_23F619E8C();
  v13 = sub_23F61C610();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v18[1] = v3;
    v15 = (uint8_t *)v14;
    v21[0] = swift_slowAlloc();
    *(_DWORD *)v15 = 136315138;
    sub_23F617BA0();
    sub_23F37AE00(v9, v11, v21);
    v19 = v16;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23F35A000, v12, v13, "Reformatted prompt to be sent to the model follows on the next line:\n%s", v15, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }

  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v3);
  return v9;
}

uint64_t sub_23F4459AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  _QWORD v11[2];
  uint64_t v12;
  unint64_t v13;

  v0 = sub_23F616DCC();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F3842E4();
  v1 = sub_23F616E68();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)v11 - v7;
  sub_23F3F3F64(v6, qword_256E7FEC0);
  v11[1] = sub_23F361498(v1, (uint64_t)qword_256E7FEC0);
  sub_23F619070();
  v12 = 0x65686361434D4C4CLL;
  v13 = 0xE800000000000000;
  sub_23F445D68();
  sub_23F38813C();
  sub_23F616E44();
  sub_23F445D78();
  swift_bridgeObjectRelease();
  v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v5, v1);
  v12 = 0x6E616C506C6C7546;
  v13 = 0xEB0000000072656ELL;
  sub_23F445D68();
  sub_23F616E44();
  sub_23F445D78();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v9)(v8, v1);
}

uint64_t sub_23F445B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E745D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for FullPlannerModelClientError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F445BEC + 4 * byte_23F622445[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F445C20 + 4 * byte_23F622440[v4]))();
}

uint64_t sub_23F445C20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F445C28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F445C30);
  return result;
}

uint64_t sub_23F445C3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F445C44);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23F445C48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F445C50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FullPlannerModelClientError()
{
  return &type metadata for FullPlannerModelClientError;
}

uint64_t sub_23F445C70(uint64_t result)
{
  return result;
}

uint64_t sub_23F445C78()
{
  sub_23F445D2C();
  return sub_23F61CCAC();
}

uint64_t sub_23F445CA0()
{
  sub_23F445D2C();
  return sub_23F61CCA0();
}

unint64_t sub_23F445CC8()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_23F445CE4()
{
  unsigned __int8 *v0;

  return sub_23F445C70(*v0);
}

unint64_t sub_23F445CF0()
{
  unint64_t result;

  result = qword_256E745D8;
  if (!qword_256E745D8)
  {
    result = MEMORY[0x242670A44](&unk_23F62252C, &type metadata for FullPlannerModelClientError);
    atomic_store(result, (unint64_t *)&qword_256E745D8);
  }
  return result;
}

unint64_t sub_23F445D2C()
{
  unint64_t result;

  result = qword_256E745E0[0];
  if (!qword_256E745E0[0])
  {
    result = MEMORY[0x242670A44](&unk_23F6224AC, &type metadata for FullPlannerModelClientError);
    atomic_store(result, qword_256E745E0);
  }
  return result;
}

uint64_t sub_23F445D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(v1, v3, v0);
}

uint64_t sub_23F445D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t type metadata accessor for FullPlannerPromptGenerator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F40C13C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FullPlannerPromptGenerator);
}

uint64_t sub_23F445DA4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23F445E28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v10[2] = v11[2];
    v10[3] = v11[3];
    v10[4] = v11[4];
    v10[5] = v11[5];
    *(_QWORD *)(((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + 55) & 0xFFFFFFFFFFFFF8);
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23F445F60(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23F445FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  v7[4] = v8[4];
  v7[5] = v8[5];
  *(_QWORD *)(((unint64_t)v7 + 55) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 55) & 0xFFFFFFFFFFFFF8);
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  swift_retain();
  return a1;
}

uint64_t sub_23F4460B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v7[2] = v8[2];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v7[3] = v8[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v7[5] = v8[5];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v7 + 55) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 55) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23F4461C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (__int128 *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  v10 = v8[2];
  v7[1] = v8[1];
  v7[2] = v10;
  *v7 = v9;
  *(_QWORD *)(((unint64_t)v7 + 55) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 55) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23F44623C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v7[2] = v8[2];
  swift_bridgeObjectRelease();
  v7[3] = v8[3];
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  swift_bridgeObjectRelease();
  v7[5] = v8[5];
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v7 + 55) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 55) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_23F446310(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return sub_23F36195C(a1, v6, v4);
    }
  }
  else
  {
    if (((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23F446394 + 4 * byte_23F6225A0[v11]))();
  }
}

void sub_23F446414(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_23F446508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        *(_QWORD *)(v8 + 40) = 0;
        *(_OWORD *)(v8 + 24) = 0u;
        *(_OWORD *)(v8 + 8) = 0u;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *(_QWORD *)v8 = v9;
    }
    else
    {
      return sub_23F36196C(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t type metadata accessor for FullPlannerPromptGeneratorOutput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F40C13C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FullPlannerPromptGeneratorOutput);
}

__n128 sub_23F4465B0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __n128 result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a5, a1, a4);
  v11 = type metadata accessor for FullPlannerPromptGeneratorOutput(0, a4, v9, v10);
  v12 = a5 + *(int *)(v11 + 28);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v12 = *(_OWORD *)a2;
  *(_OWORD *)(v12 + 16) = v13;
  result = *(__n128 *)(a2 + 32);
  *(__n128 *)(v12 + 32) = result;
  *(_QWORD *)(a5 + *(int *)(v11 + 32)) = a3;
  return result;
}

uint64_t sub_23F446624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v4[19] = a2;
  v4[20] = v3;
  v4[18] = a1;
  v6 = sub_23F617000();
  v4[21] = v6;
  v4[22] = *(_QWORD *)(v6 - 8);
  v4[23] = sub_23F366578();
  v4[24] = *(_QWORD *)(a3 + 16);
  v4[25] = sub_23F366578();
  return swift_task_switch();
}

uint64_t sub_23F446694()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F35EA9C(*(_QWORD **)(v0 + 160), *(_QWORD *)(*(_QWORD *)(v0 + 160) + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v1;
  *v1 = v0;
  v1[1] = sub_23F4466FC;
  return sub_23F3FA7B8(v0 + 16, *(_QWORD *)(v0 + 152));
}

uint64_t sub_23F4466FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23F446760()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v15 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD **)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 144);
  v19 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v20 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 88);
  v14 = v1[8];
  v12 = v1[9];
  sub_23F35EA9C(v1 + 5, v14);
  v21 = v2;
  v22 = v3;
  v23 = v4;
  v24 = v5;
  v25 = v13;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v10;
  v30 = v9;
  (*(void (**)(uint64_t *, uint64_t))(v12 + 16))(&v21, v14);
  v21 = v2;
  v22 = v3;
  v23 = v4;
  v24 = v5;
  v25 = v13;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v10;
  v30 = v9;
  sub_23F3F4E80(&v21);
  sub_23F61AD5C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = v13;
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v0 + 128) = v7;
  *(_QWORD *)(v0 + 136) = v8;
  sub_23F4465B0(v20, v0 + 96, v9, v19, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F4468F4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F44692C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F3609AC;
  return sub_23F446624(a1, a2, a3);
}

id sub_23F446994()
{
  id result;

  result = sub_23F4469B0();
  qword_256E7FED8 = (uint64_t)result;
  return result;
}

id sub_23F4469B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v12;

  v0 = sub_23F6170CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F617198();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  sub_23F61718C();
  v9 = (void *)sub_23F617180();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(v8, sel_setTimeZone_, v9);

  sub_23F446B70(0xD000000000000013, 0x800000023F6365B0, v8);
  sub_23F61700C();
  v10 = (void *)sub_23F617060();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v8, sel_setLocale_, v10);

  return v8;
}

id sub_23F446B24()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
  result = objc_msgSend(v0, sel_setUnitsStyle_, 1);
  qword_256E7FEE0 = (uint64_t)v0;
  return result;
}

void sub_23F446B70(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setDateFormat_, v4);

}

void sub_23F446BC0(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);

  v13 = a1;
  v6 = sub_23F61B404();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3B1F34();
  v8 = sub_23F35D2E8(&qword_256E6FB08);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39E478(v2, (uint64_t)v10, &qword_256E6FB08);
  v11 = 1;
  if (sub_23F448AE8((uint64_t)v10) == 1)
    goto LABEL_5;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v4, v10, v6);
  v13(v4);
  if (!v3)
  {
    sub_23F448AD8();
    v11 = 0;
LABEL_5:
    sub_23F36196C(a2, v11, 1, v6);
    goto LABEL_6;
  }
  sub_23F448AD8();
LABEL_6:
  sub_23F362870();
}

uint64_t sub_23F446CE0(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_23F35D2E8(&qword_256E74738);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E74710);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39E478(v1, (uint64_t)v10, &qword_256E74710);
  if (sub_23F36195C((uint64_t)v10, 1, v4) == 1)
    return 0;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  a1(&v12, v7);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v2)
    return v12;
  return result;
}

uint64_t sub_23F446E28(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  return sub_23F446E70(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &qword_256E6FB20);
}

uint64_t sub_23F446E4C(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  return sub_23F446E70(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE55EE8], &qword_256E71E28);
}

uint64_t sub_23F446E70(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v10 = a4(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v16 - v12;
  v14 = sub_23F35D2E8(a5);
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3B1F34();
  sub_23F39E478(v5, v7, a5);
  if (sub_23F448AE8(v7) == 1)
    return 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v13, v7, v10);
  a1(&v17, v13);
  if (v6)
    return sub_23F448AC8();
  sub_23F448AC8();
  return v17;
}

uint64_t sub_23F446F88()
{
  sub_23F448A8C();
  return sub_23F61CCAC();
}

uint64_t sub_23F446FB0()
{
  sub_23F448A8C();
  return sub_23F61CCA0();
}

unint64_t sub_23F446FD8()
{
  return 0xD00000000000001FLL;
}

void sub_23F446FF4(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  unsigned __int8 v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  int v31;
  char *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  uint8_t *v49;
  NSObject *v50;
  uint64_t v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65[2];
  uint64_t v66;

  v9 = sub_23F619E98();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v55 - v14;
  v16 = sub_23F40B804(a1, a2, a3);
  if (v4)
    goto LABEL_22;
  v17 = v16;
  v66 = v9;
  sub_23F3F138C(v16);
  if (v20 == 0xFF || (v21 = v20, (v20 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    sub_23F40C100();
    sub_23F362D64();
    v33 = 1;
LABEL_15:
    *v32 = v33;
    swift_willThrow();
    goto LABEL_22;
  }
  v59 = (uint8_t *)v18;
  v60 = v19;
  v22 = *(_QWORD *)(v17 + 16);
  v58 = a4;
  if (v22 >= 2)
  {
    v23 = sub_23F5B9EC8(1, v17);
    sub_23F3F13DC(v23, v24, v25, v26);
    v56 = v28;
    v57 = v27;
    v30 = v29;
    v31 = ~v29;
    swift_unknownObjectRelease();
    if (v31)
    {
      if ((v30 & 1) == 0)
      {
        if (v57 != 1)
          goto LABEL_14;
        goto LABEL_11;
      }
      sub_23F44744C(v57, v56, v30);
    }
LABEL_14:
    sub_23F44744C((uint64_t)v59, v60, v21);
    sub_23F40C100();
    sub_23F362D64();
    v33 = 2;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  v35 = (uint64_t)v59;
  v34 = v60;
  v65[0] = (uint64_t)v59;
  v65[1] = v60;
  v63 = 4091452;
  v64 = 0xE300000000000000;
  v61 = 10;
  v62 = 0xE100000000000000;
  sub_23F38813C();
  v36 = sub_23F61C7CC();
  v37 = v35;
  v39 = v38;
  sub_23F44744C(v37, v34, v21);
  v40 = sub_23F447464(v36, v39);
  v42 = v41;
  if (v41)
  {
    v43 = v40;
    swift_bridgeObjectRelease();
    v44 = v43;
    v39 = v42;
    v45 = v66;
  }
  else
  {
    v46 = v36;
    sub_23F619088();
    v47 = sub_23F619E8C();
    v48 = sub_23F61C610();
    if (os_log_type_enabled(v47, (os_log_type_t)v48))
    {
      v49 = (uint8_t *)sub_23F366668();
      *(_WORD *)v49 = 0;
      _os_log_impl(&dword_23F35A000, v47, (os_log_type_t)v48, "No RHS expression in completion (this could be expected)", v49, 2u);
      sub_23F366530();
    }

    v45 = v66;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v66);
    v44 = v46;
  }
  sub_23F619088();
  swift_bridgeObjectRetain_n();
  v50 = sub_23F619E8C();
  v51 = v39;
  v52 = sub_23F61C610();
  if (os_log_type_enabled(v50, v52))
  {
    v53 = (uint8_t *)sub_23F366668();
    v60 = sub_23F366668();
    v65[0] = v60;
    *(_DWORD *)v53 = 136642819;
    v59 = v53 + 4;
    sub_23F617BA0();
    sub_23F37AE00(v44, v51, v65);
    v63 = v54;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23F35A000, v50, v52, "Model response, parsed for role-content pairs and stripping assignment, follows on next line:\n%{sensitive}s", v53, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }

  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v45);
  sub_23F61B0C8();
  swift_bridgeObjectRelease();
LABEL_22:
  sub_23F362870();
}

uint64_t sub_23F44744C(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_23F40C18C(result, a2, a3 & 1);
  return result;
}

uint64_t sub_23F447464(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  _QWORD v26[3];
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;

  v26[2] = a2;
  v26[1] = a1;
  v2 = sub_23F35D2E8(&qword_256E74710);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F35D2E8(&qword_256E74718);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v26 - v10;
  v12 = sub_23F35D2E8(&qword_256E74720);
  v28 = *(_QWORD *)(v12 - 8);
  v29 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v26 - v16;
  sub_23F617594();
  sub_23F617594();
  v30 = v17;
  v31 = v15;
  sub_23F35D2E8(&qword_256E74728);
  sub_23F3B0CC8(&qword_256E74730, &qword_256E74718);
  sub_23F6186BC();
  sub_23F6186EC();
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v9, v5);
  v19 = v27;
  v20 = sub_23F6186C8();
  if (v19)
  {
    v18(v11, v5);
    v21 = v29;
    v22 = *(void (**)(char *, uint64_t))(v28 + 8);
    v22(v15, v29);
    v22(v17, v21);
  }
  else
  {
    v27 = v26;
    MEMORY[0x24BDAC7A8](v20);
    v26[-2] = v15;
    v21 = sub_23F446CE0((void (*)(uint64_t *__return_ptr, char *))sub_23F448950);
    sub_23F39E4B8((uint64_t)v4, &qword_256E74710);
    v18(v11, v5);
    v23 = v29;
    v24 = *(void (**)(char *, uint64_t))(v28 + 8);
    v24(v15, v29);
    v24(v17, v23);
  }
  return v21;
}

uint64_t sub_23F447720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(uint64_t, uint64_t);
  void (*v62)(char *, uint64_t);
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v72 = a2;
  v77 = a1;
  v75 = a3;
  v74 = sub_23F35D2E8(&qword_256E74740);
  v76 = *(_QWORD *)(v74 - 8);
  v3 = MEMORY[0x24BDAC7A8](v74);
  v73 = (uint64_t)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v89 = (char *)&v64 - v5;
  v69 = sub_23F35D2E8(&qword_256E74748);
  v80 = *(_QWORD *)(v69 - 8);
  v6 = MEMORY[0x24BDAC7A8](v69);
  v71 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v84 = (char *)&v64 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v90 = (char *)&v64 - v10;
  v65 = sub_23F35D2E8(&qword_256E70C90);
  v66 = *(_QWORD *)(v65 - 8);
  v11 = MEMORY[0x24BDAC7A8](v65);
  v81 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v88 = (char *)&v64 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v79 = (char *)&v64 - v15;
  v87 = sub_23F618674();
  v78 = *(void (**)(char *, uint64_t))(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F35D2E8(&qword_256E74750);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F61754C();
  v68 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_23F35D2E8(&qword_256E74758);
  v64 = *(void (**)(char *, uint64_t))(v82 - 8);
  v24 = MEMORY[0x24BDAC7A8](v82);
  v26 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v83 = (void (**)(char *, uint64_t))((char *)&v64 - v27);
  v28 = sub_23F617564();
  v29 = *(_QWORD *)(v28 - 8);
  v85 = v28;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v64 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v86 = (char *)&v64 - v33;
  sub_23F617558();
  sub_23F3B121C(&qword_256E74760, (void (*)(uint64_t))MEMORY[0x24BEE5D88]);
  v67 = v34;
  sub_23F61751C();
  v70 = *(void (**)(char *, uint64_t))(v29 + 8);
  v70(v32, v28);
  sub_23F618680();
  v35 = sub_23F6186A4();
  sub_23F36196C((uint64_t)v20, 1, 1, v35);
  sub_23F617540();
  sub_23F3B121C(&qword_256E74768, (void (*)(uint64_t))MEMORY[0x24BEE5D38]);
  v36 = MEMORY[0x24BEE1E08];
  v37 = v79;
  sub_23F618644();
  sub_23F39E4B8((uint64_t)v20, &qword_256E74750);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v23, v21);
  v38 = (void (*)(char *, uint64_t))*((_QWORD *)v78 + 1);
  v39 = v87;
  v38(v17, v87);
  v78 = v38;
  v40 = (uint64_t)v37;
  MEMORY[0x24266AA44](v37, v36);
  sub_23F3B0CC8(&qword_256E74770, &qword_256E74758);
  v41 = v82;
  sub_23F61751C();
  v68 = *((_QWORD *)v64 + 1);
  ((void (*)(char *, uint64_t))v68)(v26, v41);
  sub_23F617540();
  sub_23F3B0CC8(&qword_256E70CA8, &qword_256E70C90);
  v42 = v81;
  v43 = v65;
  sub_23F6186BC();
  v44 = v88;
  sub_23F61751C();
  v45 = v42;
  v46 = *(void (**)(char *, uint64_t))(v66 + 8);
  v46(v45, v43);
  sub_23F617528();
  v46(v44, v43);
  v66 = sub_23F35D2E8(&qword_256E74720);
  sub_23F617588();
  v47 = sub_23F35D2E8(&qword_256E74778);
  v48 = v89;
  sub_23F61865C();
  v46((char *)v40, v43);
  v64 = v46;
  v38(v17, v39);
  v49 = v84;
  MEMORY[0x24266AA80](v48, v47);
  sub_23F3B0CC8(&qword_256E74780, &qword_256E74748);
  v77 = v50;
  v51 = v69;
  sub_23F61751C();
  v80 = *(_QWORD *)(v80 + 8);
  ((void (*)(char *, uint64_t))v80)(v49, v51);
  v91 = 2112800;
  v92 = 0xE300000000000000;
  sub_23F440F24();
  sub_23F61751C();
  sub_23F617540();
  sub_23F44849C(v40);
  sub_23F617588();
  sub_23F61865C();
  v46((char *)v40, v43);
  v52 = v87;
  v78(v17, v87);
  v53 = v71;
  MEMORY[0x24266AA80](v48, v47);
  sub_23F61751C();
  ((void (*)(char *, uint64_t))v80)(v53, v51);
  sub_23F617528();
  sub_23F448300(v83, &qword_256E74758, &qword_256E74770, MEMORY[0x24BEE5D20], v88);
  sub_23F617540();
  v54 = v81;
  sub_23F618650();
  v55 = (uint64_t)v89;
  sub_23F618638();
  v56 = v64;
  v64(v54, v43);
  v57 = v78;
  v78(v17, v52);
  v58 = v73;
  sub_23F448734(v55, v93, v94, v73);
  swift_bridgeObjectRelease();
  sub_23F617540();
  sub_23F35D2E8(&qword_256E74728);
  sub_23F3B0CC8(&qword_256E74788, &qword_256E74740);
  v59 = v74;
  v60 = v84;
  sub_23F618638();
  v57(v17, v87);
  v61 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v61(v58, v59);
  v61((uint64_t)v89, v59);
  v56(v88, v43);
  v56(v79, v43);
  v62 = (void (*)(char *, uint64_t))v80;
  ((void (*)(char *, uint64_t))v80)(v60, v51);
  v62(v90, v51);
  ((void (*)(_QWORD *, uint64_t))v68)(v83, v82);
  return ((uint64_t (*)(char *, uint64_t))v70)(v86, v85);
}

uint64_t sub_23F447FE8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(char *, uint64_t);
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v30 = a1;
  v31 = sub_23F35D2E8(&qword_256E70C90);
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v2 = (char *)v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F618674();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E74750);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61754C();
  v10 = (void (*)(uint64_t))MEMORY[0x24BEE5D38];
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F35D2E8(&qword_256E74790);
  v26 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (_QWORD *)((char *)v25 - v18);
  v32 = 120;
  v33 = 0xE100000000000000;
  v25[1] = sub_23F440F24();
  sub_23F61751C();
  sub_23F618698();
  v20 = sub_23F6186A4();
  sub_23F36196C((uint64_t)v8, 1, 1, v20);
  sub_23F617540();
  sub_23F3B121C(&qword_256E74768, v10);
  v21 = MEMORY[0x24BEE1E08];
  sub_23F618668();
  sub_23F39E4B8((uint64_t)v8, &qword_256E74750);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  MEMORY[0x24266AA8C](v2, v21);
  v22 = (_QWORD *)MEMORY[0x24BEE5DE0];
  sub_23F3B0CC8(&qword_256E74798, &qword_256E74790);
  sub_23F61751C();
  v23 = *(void (**)(char *, uint64_t))(v26 + 8);
  v23(v17, v14);
  v32 = v34;
  v33 = v35;
  sub_23F617528();
  swift_bridgeObjectRelease();
  sub_23F448300(v19, &qword_256E74790, &qword_256E74798, v22, v30);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v2, v31);
  return ((uint64_t (*)(_QWORD *, uint64_t))v23)(v19, v14);
}

uint64_t sub_23F448300@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X2>, _QWORD *a3@<X3>, _QWORD *a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  _QWORD *v19[4];

  v19[0] = a3;
  v19[1] = a4;
  v19[2] = a1;
  v19[3] = a5;
  v6 = sub_23F35D2E8(&qword_256E70C90);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v19 - v11;
  v13 = sub_23F618674();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F617540();
  sub_23F3B0CC8(&qword_256E70CA8, &qword_256E70C90);
  sub_23F618650();
  sub_23F35D2E8(a2);
  sub_23F3B0CC8(v19[0], a2);
  sub_23F618650();
  sub_23F618638();
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v10, v6);
  v17(v12, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_23F44849C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v1 = sub_23F35D2E8(&qword_256E70C90);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F618674();
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E74750);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F61754C();
  v11 = (void (*)(uint64_t))MEMORY[0x24BEE5D38];
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F35D2E8(&qword_256E74790);
  v25 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v25 - v19;
  sub_23F61868C();
  v21 = sub_23F6186A4();
  sub_23F36196C((uint64_t)v9, 1, 1, v21);
  sub_23F617540();
  sub_23F3B121C(&qword_256E74768, v11);
  v22 = MEMORY[0x24BEE1E08];
  sub_23F618668();
  sub_23F39E4B8((uint64_t)v9, &qword_256E74750);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v27);
  MEMORY[0x24266AA8C](v3, v22);
  sub_23F3B0CC8(&qword_256E74798, &qword_256E74790);
  sub_23F61751C();
  v23 = *(void (**)(char *, uint64_t))(v25 + 8);
  v23(v18, v15);
  sub_23F617528();
  return ((uint64_t (*)(char *, uint64_t))v23)(v20, v15);
}

uint64_t sub_23F448734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v15[4];

  v15[0] = a4;
  v15[1] = a1;
  v6 = sub_23F35D2E8(&qword_256E70C90);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F618674();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F617540();
  v15[2] = a2;
  v15[3] = a3;
  sub_23F440F24();
  sub_23F618650();
  sub_23F35D2E8(&qword_256E74778);
  sub_23F35D2E8(&qword_256E74740);
  sub_23F3B0CC8(&qword_256E74788, &qword_256E74740);
  sub_23F3B0CC8(&qword_256E70CA8, &qword_256E70C90);
  sub_23F618638();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_23F4488B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  sub_23F35D2E8(&qword_256E74738);
  sub_23F6186F8();
  v2 = MEMORY[0x24266F6AC]();
  v4 = v3;
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_23F448948@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F447720(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23F448950@<X0>(uint64_t *a1@<X8>)
{
  return sub_23F4488B8(a1);
}

ValueMetadata *type metadata accessor for FullPlannerResponseParser()
{
  return &type metadata for FullPlannerResponseParser;
}

uint64_t storeEnumTagSinglePayload for FullPlannerResponseParsingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F4489C8 + 4 * byte_23F6226B5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F4489FC + 4 * byte_23F6226B0[v4]))();
}

uint64_t sub_23F4489FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F448A04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F448A0CLL);
  return result;
}

uint64_t sub_23F448A18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F448A20);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23F448A24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F448A2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FullPlannerResponseParsingError()
{
  return &type metadata for FullPlannerResponseParsingError;
}

unint64_t sub_23F448A50()
{
  unint64_t result;

  result = qword_256E747A0;
  if (!qword_256E747A0)
  {
    result = MEMORY[0x242670A44](&unk_23F6227A0, &type metadata for FullPlannerResponseParsingError);
    atomic_store(result, (unint64_t *)&qword_256E747A0);
  }
  return result;
}

unint64_t sub_23F448A8C()
{
  unint64_t result;

  result = qword_256E747A8;
  if (!qword_256E747A8)
  {
    result = MEMORY[0x242670A44](&unk_23F622720, &type metadata for FullPlannerResponseParsingError);
    atomic_store(result, (unint64_t *)&qword_256E747A8);
  }
  return result;
}

uint64_t sub_23F448AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F448AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F448AE8(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, v1);
}

void sub_23F448AF4()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1728();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F38F964();
  v1 = sub_23F619E44();
  sub_23F3F3F64(v1, qword_256E7FEE8);
  sub_23F361498(v1, (uint64_t)qword_256E7FEE8);
  sub_23F619088();
  sub_23F619E2C();
  sub_23F362B80();
}

void static FullPlannerService.isEnabled()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_23F618B90();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  sub_23F38F964();
  v4 = v3 - v2;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v3 - v2, *MEMORY[0x24BE573E0], v0);
  sub_23F618B84();
  sub_23F383E88(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F362B80();
}

uint64_t FullPlannerService.__allocating_init(toolbox:toolExecutionSession:identityChain:)(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  FullPlannerService.init(toolbox:toolExecutionSession:identityChain:)(a1, a2, a3);
  return v6;
}

uint64_t FullPlannerService.init(toolbox:toolExecutionSession:identityChain:)(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v3 + 48) = 0;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  v7 = v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime18FullPlannerService_toolbox;
  sub_23F384B34();
  sub_23F44D47C();
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v7, a1);
  sub_23F362678(a2, v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime18FullPlannerService_toolExecutionSession);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime18FullPlannerService_identityChain) = a3;
  return v3;
}

uint64_t FullPlannerService.setup(sessionState:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[41] = a1;
  v2[42] = v1;
  v3 = sub_23F3B1728();
  v2[43] = v3;
  v2[44] = *(_QWORD *)(v3 - 8);
  v2[45] = sub_23F366654();
  v2[46] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E705E0);
  v2[47] = sub_23F366578();
  v4 = sub_23F617000();
  v2[48] = v4;
  v2[49] = *(_QWORD *)(v4 - 8);
  v2[50] = sub_23F366578();
  v5 = sub_23F428AE4();
  v2[51] = v5;
  v2[52] = *(_QWORD *)(v5 - 8);
  v2[53] = sub_23F366578();
  v6 = sub_23F384B34();
  v2[54] = v6;
  v2[55] = *(_QWORD *)(v6 - 8);
  v2[56] = sub_23F366578();
  v7 = sub_23F6170CC();
  v2[57] = v7;
  v2[58] = *(_QWORD *)(v7 - 8);
  v2[59] = sub_23F366578();
  v8 = sub_23F617E64();
  v2[60] = v8;
  v2[61] = *(_QWORD *)(v8 - 8);
  v2[62] = sub_23F366578();
  v9 = sub_23F61A0F0();
  v2[63] = v9;
  v2[64] = *(_QWORD *)(v9 - 8);
  v2[65] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F448DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_23F61B11C();
  v2 = *(_QWORD *)(v0 + 488);
  v1 = *(_QWORD *)(v0 + 496);
  v45 = *(_QWORD *)(v0 + 440);
  v46 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 424);
  v49 = *(_QWORD *)(v0 + 416);
  v48 = *(_QWORD *)(v0 + 400);
  v50 = *(_QWORD *)(v0 + 408);
  v51 = *(_QWORD *)(v0 + 392);
  v52 = *(_QWORD *)(v0 + 384);
  v53 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 336);
  v47 = *(_QWORD *)(v0 + 432);
  sub_23F61A0E4();
  sub_23F617E58();
  sub_23F383E88(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v46, v4 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime18FullPlannerService_toolbox, v47);
  sub_23F382FC4(v4 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime18FullPlannerService_toolExecutionSession, v0 + 104);
  sub_23F61B128();
  sub_23F61B158();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v3, v50);
  v5 = type metadata accessor for ToolExecutionSessionWrapper();
  v6 = sub_23F3668A0();
  sub_23F362678((__int128 *)(v0 + 104), v6 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v6 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime27ToolExecutionSessionWrapper_interactionId, v48, v52);
  *(_QWORD *)(v0 + 88) = v5;
  *(_QWORD *)(v0 + 96) = &off_250FDF7D8;
  *(_QWORD *)(v0 + 64) = v6;
  sub_23F36FF44(*(_QWORD *)(v4 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime18FullPlannerService_identityChain), v53);
  sub_23F44D730(v0 + 64, v53, v0 + 184);
  v8 = *(_QWORD *)(v0 + 464);
  v7 = *(_QWORD *)(v0 + 472);
  v9 = *(_QWORD *)(v0 + 456);
  v10 = *(_QWORD *)(v0 + 440);
  sub_23F3625D8(*(_QWORD *)(v0 + 376), &qword_256E705E0);
  sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 64);
  v11 = *(_QWORD *)(v0 + 208);
  v12 = *(_QWORD *)(v0 + 216);
  sub_23F38EB10(v0 + 184, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 64))(v11, v12);
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    v13 = *(_QWORD *)(v0 + 520);
    v14 = *(_QWORD *)(v0 + 504);
    v15 = *(_QWORD *)(v0 + 512);
    *(_QWORD *)(v0 + 312) = *(_QWORD *)(v0 + 16);
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 184);
    swift_task_dealloc();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    swift_task_dealloc();
    sub_23F3666D4();
    swift_task_dealloc();
    v16 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 336);
    v19 = (__int128 *)sub_23F3C85C0();
    sub_23F362678(v19, v20);
    sub_23F3B1450();
    sub_23F4493C0(v0 + 144, v18 + 16);
    swift_endAccess();
    sub_23F44BDB0(v18 + 16, v0 + 224, &qword_256E747B8);
    v21 = *(_QWORD *)(v0 + 248);
    sub_23F3625D8(v0 + 224, &qword_256E747B8);
    if (v21)
    {
      sub_23F3B2130();
      v22 = sub_23F619E8C();
      v23 = sub_23F61C610();
      v24 = os_log_type_enabled(v22, v23);
      v25 = *(_QWORD *)(v0 + 520);
      v26 = *(_QWORD *)(v0 + 504);
      v27 = *(_QWORD *)(v0 + 512);
      v28 = *(_QWORD *)(v0 + 368);
      v29 = *(_QWORD *)(v0 + 344);
      v30 = *(_QWORD *)(v0 + 352);
      if (v24)
      {
        v31 = (uint8_t *)sub_23F366668();
        v54 = sub_23F366668();
        *(_DWORD *)v31 = 136315138;
        sub_23F3B1450();
        v32 = *(_QWORD *)(v0 + 208);
        v33 = *(_QWORD *)(v0 + 216);
        sub_23F35EA9C((_QWORD *)(v0 + 184), v32);
        v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
        sub_23F37AE00(v34, v35, &v54);
        *(_QWORD *)(v0 + 320) = v36;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23F35A000, v22, v23, "FullPlannerService setup success. Prompt version: %s", v31, 0xCu);
        swift_arrayDestroy();
        sub_23F366530();
      }

      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
    else
    {
      sub_23F3B2130();
      v37 = (void *)sub_23F619E8C();
      v38 = sub_23F61C610();
      if (sub_23F3F0E3C(v38))
      {
        *(_WORD *)sub_23F3EEE70() = 0;
        sub_23F3F0DF0(&dword_23F35A000, v39, v40, "Skipping full planner setup");
        sub_23F366530();
      }
      v41 = *(_QWORD *)(v0 + 520);
      v42 = *(_QWORD *)(v0 + 504);
      v43 = *(_QWORD *)(v0 + 512);
      v44 = *(_QWORD *)(v0 + 352);

      sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    }
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 184);
    swift_task_dealloc();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    swift_task_dealloc();
    sub_23F3666D4();
    v16 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v16();
}

