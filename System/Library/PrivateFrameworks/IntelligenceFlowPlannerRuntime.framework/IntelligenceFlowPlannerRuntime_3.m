void sub_23F4C665C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  if (*(_QWORD *)(v5 + *(int *)(sub_23F4DC4E0(a1, a2, a3, a4, a5) + 24) + 8))
    sub_23F4DC4A4();
  sub_23F4DC358();
}

void sub_23F4C66A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  if (*(_QWORD *)(v5 + *(int *)(sub_23F4DC4E0(a1, a2, a3, a4, a5) + 28) + 8))
    sub_23F4DC4A4();
  sub_23F4DC358();
}

void sub_23F4C66EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  if (*(_QWORD *)(v5 + *(int *)(sub_23F4DC4E0(a1, a2, a3, a4, a5) + 32) + 8))
    sub_23F4DC4A4();
  sub_23F4DC358();
}

void sub_23F4C6734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23F383988();
  v3 = v2;
  sub_23F3C8624();
  sub_23F4DD1AC();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F4DC1DC();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F4DCD94();
  v8 = v8 && v6 == v7;
  if (!v8 && (sub_23F3C8510() & 1) == 0)
    goto LABEL_33;
  v9 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog(0);
  sub_23F4DC3AC();
  if (!v12)
  {
    if (v10)
      goto LABEL_33;
LABEL_15:
    sub_23F4DC3AC();
    if (v18)
    {
      if (!v16)
        goto LABEL_33;
      sub_23F4DC2EC(v17);
      v21 = v8 && v19 == v20;
      if (!v21 && (sub_23F3C8510() & 1) == 0)
        goto LABEL_33;
    }
    else if (v16)
    {
      goto LABEL_33;
    }
    sub_23F4DC3AC();
    if (v25)
    {
      if (!v23)
        goto LABEL_33;
      v22 = sub_23F4DC2EC(v24);
      if (!v8 || v26 != v27)
      {
        v22 = sub_23F3C8510();
        if ((v22 & 1) == 0)
          goto LABEL_33;
      }
    }
    else if (v23)
    {
      goto LABEL_33;
    }
    sub_23F4DC794(v22, v3 + *(int *)(v9 + 20));
    sub_23F4DC47C(*(int *)(v9 + 20));
    sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F4DC25C();
    sub_23F4DC9D8(v0);
    sub_23F4DC9D8(v1);
    goto LABEL_33;
  }
  if (v10)
  {
    sub_23F4DC2EC(v11);
    v15 = v8 && v13 == v14;
    if (v15 || (sub_23F3C8510() & 1) != 0)
      goto LABEL_15;
  }
LABEL_33:
  sub_23F383568();
}

uint64_t sub_23F4C6894(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6DF8(a1, a2, (void (*)(void))sub_23F4C6290);
}

void sub_23F4C68AC()
{
  sub_23F4C648C();
}

void sub_23F4C68C0()
{
  sub_23F4C6598();
}

uint64_t sub_23F4C68D4()
{
  sub_23F3612C0(&qword_256E76910, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog, (uint64_t)&unk_23F625008);
  return sub_23F61898C();
}

uint64_t sub_23F4C6924(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6F048, (uint64_t)qword_256E802F8);
}

uint64_t sub_23F4C6940()
{
  sub_23F3612C0(&qword_256E76290, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog, (uint64_t)&unk_23F625040);
  return sub_23F618A1C();
}

uint64_t sub_23F4C6980()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog);
}

uint64_t sub_23F4C69AC()
{
  sub_23F3612C0(&qword_256E76290, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog, (uint64_t)&unk_23F625040);
  return sub_23F618A28();
}

uint64_t sub_23F4C6A00()
{
  uint64_t result;

  result = sub_23F61C280();
  qword_256E80310 = 0xD00000000000002CLL;
  *(_QWORD *)algn_256E80318 = 0x800000023F637EE0;
  return result;
}

uint64_t *sub_23F4C6A6C()
{
  if (qword_256E6F050 != -1)
    swift_once();
  return &qword_256E80310;
}

uint64_t sub_23F4C6AAC()
{
  return sub_23F4C6ACC();
}

uint64_t sub_23F4C6ACC()
{
  unsigned int *v0;
  unsigned int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F383988();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_23F4DCFD4();
  sub_23F3F3F64(v8, v7);
  v9 = sub_23F3848C0();
  sub_23F361498(v9, v10);
  sub_23F35D2E8(&qword_256E766B0);
  v11 = sub_23F35D2E8(&qword_256E766B8);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23F61E7E0;
  v15 = v14 + v13 + *(int *)(v11 + 48);
  *(_QWORD *)(v14 + v13) = 1;
  *(_QWORD *)v15 = v5;
  *(_QWORD *)(v15 + 8) = v3;
  *(_BYTE *)(v15 + 16) = 2;
  v16 = *v1;
  v17 = sub_23F618A7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  return sub_23F618A88();
}

void sub_23F4C6BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23F4DC884(a1, a2);
  while (1)
  {
    v3 = sub_23F6189A4();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 1)
      sub_23F4DCB20();
    sub_23F3848C0();
  }
  sub_23F4DD174();
}

void sub_23F4C6C18(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v6;

  sub_23F4DD018();
  sub_23F4DC92C();
  if (!v6 || (sub_23F4DC4A4(), !v4))
  {
    a4(0);
    sub_23F4DC7D4();
  }
  sub_23F450958();
}

void sub_23F4C6C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  sub_23F383988();
  v3 = v2;
  v5 = v4;
  sub_23F3C8624();
  sub_23F4DD1AC();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F4DC1DC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F4DCD94();
  v10 = v10 && v8 == v9;
  if (v10 || (sub_23F3C8510() & 1) != 0)
  {
    v11 = v3(0);
    sub_23F4DC794(v11, v5 + *(int *)(v11 + 20));
    sub_23F4DC47C(*(int *)(v11 + 20));
    sub_23F3612C0(&qword_256E71168, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_23F4DC25C();
    sub_23F4DC9D8(v0);
    sub_23F4DC9D8(v1);
  }
  sub_23F383568();
}

uint64_t sub_23F4C6D4C(void (*a1)(_QWORD))
{
  unint64_t *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  sub_23F61CD30();
  a1(0);
  sub_23F4DCF10();
  sub_23F3612C0(v2, v3, v4);
  sub_23F61C04C();
  return sub_23F61CD60();
}

void sub_23F4C6DC4(_QWORD *a1@<X8>)
{
  sub_23F4B2C5C(a1);
}

uint64_t sub_23F4C6DE0(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6DF8(a1, a2, (void (*)(void))sub_23F4C6A6C);
}

uint64_t sub_23F4C6DF8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_23F617BA0();
  return sub_23F3840BC();
}

uint64_t sub_23F4C6E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F3C8624();
  v0 = sub_23F3F9C80();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

uint64_t sub_23F4C6E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F3C8624();
  v0 = sub_23F4DCA84();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

void sub_23F4C6E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4C6C18(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog);
}

uint64_t sub_23F4C6E9C()
{
  sub_23F3612C0(qword_256E76918, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog, (uint64_t)&unk_23F624EA0);
  return sub_23F61898C();
}

uint64_t sub_23F4C6EEC(uint64_t a1, uint64_t a2)
{
  return sub_23F4C6F08(a1, a2, &qword_256E6F058, (uint64_t)&unk_256E80320);
}

uint64_t sub_23F4C6F08(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_23F4B35B4(a3, a4);
  sub_23F4DCFD4();
  v4 = sub_23F3F9C80();
  return sub_23F3F9C0C(v4, v5, v6, v7);
}

uint64_t sub_23F4C6F3C()
{
  sub_23F3612C0(&qword_256E76270, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog, (uint64_t)&unk_23F624ED8);
  return sub_23F618A1C();
}

uint64_t sub_23F4C6F7C()
{
  return sub_23F4C6D4C((void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog);
}

uint64_t sub_23F4C6FA8()
{
  sub_23F3612C0(&qword_256E76270, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog, (uint64_t)&unk_23F624ED8);
  return sub_23F618A28();
}

uint64_t sub_23F4C6FF8()
{
  sub_23F61CD30();
  sub_23F61C04C();
  return sub_23F61CD60();
}

uint64_t sub_23F4C7048()
{
  char v0;

  sub_23F4C6C84();
  return v0 & 1;
}

void sub_23F4C7068()
{
  sub_23F3612C0(&qword_256E76268, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog, (uint64_t)&unk_23F624DE8);
}

void sub_23F4C7094()
{
  sub_23F3612C0(&qword_256E76270, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog, (uint64_t)&unk_23F624ED8);
}

void sub_23F4C70C0()
{
  sub_23F3612C0(&qword_256E76278, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog, (uint64_t)&unk_23F624E10);
}

void sub_23F4C70EC()
{
  sub_23F3612C0(&qword_256E76280, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.CATDialog, (uint64_t)&unk_23F624E50);
}

void sub_23F4C7118()
{
  sub_23F3612C0(&qword_256E76288, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog, (uint64_t)&unk_23F624F50);
}

void sub_23F4C7144()
{
  sub_23F3612C0(&qword_256E76290, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog, (uint64_t)&unk_23F625040);
}

void sub_23F4C7170()
{
  sub_23F3612C0(&qword_256E76298, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog, (uint64_t)&unk_23F624F78);
}

void sub_23F4C719C()
{
  sub_23F3612C0(&qword_256E762A0, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.StringDialog, (uint64_t)&unk_23F624FB8);
}

void sub_23F4C71C8()
{
  sub_23F3612C0(&qword_256E762A8, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog, (uint64_t)&unk_23F6250B8);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E77AA8);
}

void sub_23F4C7208()
{
  sub_23F3612C0(&qword_256E762B0, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog, (uint64_t)&unk_23F6251A8);
}

void sub_23F4C7234()
{
  sub_23F3612C0(&qword_256E762B8, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog, (uint64_t)&unk_23F6250E0);
}

void sub_23F4C7260()
{
  sub_23F3612C0(&qword_256E762C0, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.FallbackDialog, (uint64_t)&unk_23F625120);
}

void sub_23F4C728C()
{
  sub_23F3612C0(&qword_256E762C8, type metadata accessor for ResponseGenerationOverrides_OverrideDialog, (uint64_t)&unk_23F625220);
}

void sub_23F4C72B8()
{
  sub_23F3612C0(&qword_256E762D0, type metadata accessor for ResponseGenerationOverrides_OverrideDialog, (uint64_t)&unk_23F625310);
}

void sub_23F4C72E4()
{
  sub_23F3612C0(&qword_256E762D8, type metadata accessor for ResponseGenerationOverrides_OverrideDialog, (uint64_t)&unk_23F625248);
}

void sub_23F4C7310()
{
  sub_23F3612C0(&qword_256E762E0, type metadata accessor for ResponseGenerationOverrides_OverrideDialog, (uint64_t)&unk_23F625288);
}

void sub_23F4C733C()
{
  sub_23F3612C0(&qword_256E762E8, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate, (uint64_t)&unk_23F625388);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_Rule.Predicate(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E77970);
}

void sub_23F4C737C()
{
  sub_23F3612C0(&qword_256E762F0, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate, (uint64_t)&unk_23F625478);
}

void sub_23F4C73A8()
{
  sub_23F3612C0(&qword_256E762F8, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate, (uint64_t)&unk_23F6253B0);
}

void sub_23F4C73D4()
{
  sub_23F3612C0(&qword_256E76300, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate, (uint64_t)&unk_23F6253F0);
}

void sub_23F4C7400()
{
  sub_23F3612C0(&qword_256E76308, type metadata accessor for ResponseGenerationOverrides_Rule, (uint64_t)&unk_23F6254F0);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_Rule(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E77A08);
}

void sub_23F4C7440()
{
  sub_23F3612C0(&qword_256E76310, type metadata accessor for ResponseGenerationOverrides_Rule, (uint64_t)&unk_23F6255E0);
}

void sub_23F4C746C()
{
  sub_23F3612C0(&qword_256E76318, type metadata accessor for ResponseGenerationOverrides_Rule, (uint64_t)&unk_23F625518);
}

void sub_23F4C7498()
{
  sub_23F3612C0(&qword_256E76320, type metadata accessor for ResponseGenerationOverrides_Rule, (uint64_t)&unk_23F625558);
}

void sub_23F4C74C4()
{
  sub_23F3612C0(&qword_256E76328, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate, (uint64_t)&unk_23F625658);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E778E0);
}

void sub_23F4C7504()
{
  sub_23F3612C0(&qword_256E76330, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate, (uint64_t)&unk_23F625748);
}

void sub_23F4C7530()
{
  sub_23F3612C0(&qword_256E76338, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate, (uint64_t)&unk_23F625680);
}

void sub_23F4C755C()
{
  sub_23F3612C0(&qword_256E76340, type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate, (uint64_t)&unk_23F6256C0);
}

void sub_23F4C7588()
{
  sub_23F3612C0(&qword_256E76348, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate, (uint64_t)&unk_23F6257C0);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E77850);
}

void sub_23F4C75C8()
{
  sub_23F3612C0(&qword_256E76350, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate, (uint64_t)&unk_23F6258B0);
}

void sub_23F4C75F4()
{
  sub_23F3612C0(&qword_256E76358, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate, (uint64_t)&unk_23F6257E8);
}

void sub_23F4C7620()
{
  sub_23F3612C0(&qword_256E76360, type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate, (uint64_t)&unk_23F625828);
}

void sub_23F4C764C()
{
  sub_23F3612C0(&qword_256E76368, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate, (uint64_t)&unk_23F625928);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E777C0);
}

void sub_23F4C768C()
{
  sub_23F3612C0(&qword_256E76370, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate, (uint64_t)&unk_23F625A18);
}

void sub_23F4C76B8()
{
  sub_23F3612C0(&qword_256E76378, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate, (uint64_t)&unk_23F625950);
}

void sub_23F4C76E4()
{
  sub_23F3612C0(&qword_256E76380, type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate, (uint64_t)&unk_23F625990);
}

void sub_23F4C7710()
{
  sub_23F3612C0(&qword_256E76388, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate, (uint64_t)&unk_23F625A90);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E77728);
}

void sub_23F4C7750()
{
  sub_23F3612C0(&qword_256E76390, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate, (uint64_t)&unk_23F625B80);
}

void sub_23F4C777C()
{
  sub_23F3612C0(&qword_256E76398, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate, (uint64_t)&unk_23F625AB8);
}

void sub_23F4C77A8()
{
  sub_23F3612C0(&qword_256E763A0, type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate, (uint64_t)&unk_23F625AF8);
}

void sub_23F4C77D4()
{
  sub_23F3612C0(&qword_256E763A8, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate, (uint64_t)&unk_23F625BF8);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E77690);
}

void sub_23F4C7814()
{
  sub_23F3612C0(&qword_256E763B0, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate, (uint64_t)&unk_23F625CE8);
}

void sub_23F4C7840()
{
  sub_23F3612C0(&qword_256E763B8, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate, (uint64_t)&unk_23F625C20);
}

void sub_23F4C786C()
{
  sub_23F3612C0(&qword_256E763C0, type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate, (uint64_t)&unk_23F625C60);
}

void sub_23F4C7898()
{
  sub_23F3612C0(&qword_256E763C8, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate, (uint64_t)&unk_23F625D60);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E775F8);
}

void sub_23F4C78D8()
{
  sub_23F3612C0(&qword_256E763D0, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate, (uint64_t)&unk_23F625E50);
}

void sub_23F4C7904()
{
  sub_23F3612C0(&qword_256E763D8, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate, (uint64_t)&unk_23F625D88);
}

void sub_23F4C7930()
{
  sub_23F3612C0(&qword_256E763E0, type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate, (uint64_t)&unk_23F625DC8);
}

void sub_23F4C795C()
{
  sub_23F3612C0(&qword_256E763E8, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate, (uint64_t)&unk_23F625EC8);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E77560);
}

void sub_23F4C799C()
{
  sub_23F3612C0(&qword_256E763F0, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate, (uint64_t)&unk_23F625FB8);
}

void sub_23F4C79C8()
{
  sub_23F3612C0(&qword_256E763F8, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate, (uint64_t)&unk_23F625EF0);
}

void sub_23F4C79F4()
{
  sub_23F3612C0(&qword_256E76400, type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate, (uint64_t)&unk_23F625F30);
}

void sub_23F4C7A20()
{
  sub_23F3612C0(&qword_256E76408, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate, (uint64_t)&unk_23F626030);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E774D0);
}

void sub_23F4C7A60()
{
  sub_23F3612C0(&qword_256E76410, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate, (uint64_t)&unk_23F626120);
}

void sub_23F4C7A8C()
{
  sub_23F3612C0(&qword_256E76418, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate, (uint64_t)&unk_23F626058);
}

void sub_23F4C7AB8()
{
  sub_23F3612C0(&qword_256E76420, type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate, (uint64_t)&unk_23F626098);
}

void sub_23F4C7AE4()
{
  sub_23F3612C0(&qword_256E76428, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate, (uint64_t)&unk_23F626198);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E77438);
}

void sub_23F4C7B24()
{
  sub_23F3612C0(&qword_256E76430, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate, (uint64_t)&unk_23F626288);
}

void sub_23F4C7B50()
{
  sub_23F3612C0(&qword_256E76438, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate, (uint64_t)&unk_23F6261C0);
}

void sub_23F4C7B7C()
{
  sub_23F3612C0(&qword_256E76440, type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate, (uint64_t)&unk_23F626200);
}

void sub_23F4C7BA8()
{
  sub_23F3612C0(&qword_256E76448, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate, (uint64_t)&unk_23F626300);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E773A8);
}

void sub_23F4C7BE8()
{
  sub_23F3612C0(&qword_256E76450, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate, (uint64_t)&unk_23F6263F0);
}

void sub_23F4C7C14()
{
  sub_23F3612C0(&qword_256E76458, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate, (uint64_t)&unk_23F626328);
}

void sub_23F4C7C40()
{
  sub_23F3612C0(&qword_256E76460, type metadata accessor for ResponseGenerationOverrides_ActionConfirmationOutcomePredicate, (uint64_t)&unk_23F626368);
}

void sub_23F4C7C6C()
{
  sub_23F3612C0(&qword_256E76468, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate, (uint64_t)&unk_23F626468);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E77310);
}

void sub_23F4C7CAC()
{
  sub_23F3612C0(&qword_256E76470, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate, (uint64_t)&unk_23F626558);
}

void sub_23F4C7CD8()
{
  sub_23F3612C0(&qword_256E76478, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate, (uint64_t)&unk_23F626490);
}

void sub_23F4C7D04()
{
  sub_23F3612C0(&qword_256E76480, type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate, (uint64_t)&unk_23F6264D0);
}

void sub_23F4C7D30()
{
  sub_23F3612C0(&qword_256E76488, type metadata accessor for ResponseGenerationOverrides_ActionPredicate, (uint64_t)&unk_23F6265D0);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ActionPredicate(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E77278);
}

void sub_23F4C7D70()
{
  sub_23F3612C0(&qword_256E76490, type metadata accessor for ResponseGenerationOverrides_ActionPredicate, (uint64_t)&unk_23F6266C0);
}

void sub_23F4C7D9C()
{
  sub_23F3612C0(&qword_256E76498, type metadata accessor for ResponseGenerationOverrides_ActionPredicate, (uint64_t)&unk_23F6265F8);
}

void sub_23F4C7DC8()
{
  sub_23F3612C0(&qword_256E764A0, type metadata accessor for ResponseGenerationOverrides_ActionPredicate, (uint64_t)&unk_23F626638);
}

void sub_23F4C7DF4()
{
  sub_23F3612C0(&qword_256E764A8, type metadata accessor for ResponseGenerationOverrides_ToolPredicate, (uint64_t)&unk_23F626738);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ToolPredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E771E8);
}

void sub_23F4C7E34()
{
  sub_23F3612C0(&qword_256E764B0, type metadata accessor for ResponseGenerationOverrides_ToolPredicate, (uint64_t)&unk_23F626828);
}

void sub_23F4C7E60()
{
  sub_23F3612C0(&qword_256E764B8, type metadata accessor for ResponseGenerationOverrides_ToolPredicate, (uint64_t)&unk_23F626760);
}

void sub_23F4C7E8C()
{
  sub_23F3612C0(&qword_256E764C0, type metadata accessor for ResponseGenerationOverrides_ToolPredicate, (uint64_t)&unk_23F6267A0);
}

void sub_23F4C7EB8()
{
  sub_23F3612C0(&qword_256E764C8, type metadata accessor for ResponseGenerationOverrides_AppPredicate, (uint64_t)&unk_23F6268A0);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_AppPredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E77158);
}

void sub_23F4C7EF8()
{
  sub_23F3612C0(&qword_256E764D0, type metadata accessor for ResponseGenerationOverrides_AppPredicate, (uint64_t)&unk_23F626990);
}

void sub_23F4C7F24()
{
  sub_23F3612C0(&qword_256E764D8, type metadata accessor for ResponseGenerationOverrides_AppPredicate, (uint64_t)&unk_23F6268C8);
}

void sub_23F4C7F50()
{
  sub_23F3612C0(&qword_256E764E0, type metadata accessor for ResponseGenerationOverrides_AppPredicate, (uint64_t)&unk_23F626908);
}

void sub_23F4C7F7C()
{
  sub_23F3612C0(&qword_256E764E8, type metadata accessor for ResponseGenerationOverrides_ContextPredicate, (uint64_t)&unk_23F626A08);
}

void sub_23F4C7FA8()
{
  sub_23F3612C0(&qword_256E764F0, type metadata accessor for ResponseGenerationOverrides_ContextPredicate, (uint64_t)&unk_23F626AF8);
}

void sub_23F4C7FD4()
{
  sub_23F3612C0(&qword_256E764F8, type metadata accessor for ResponseGenerationOverrides_ContextPredicate, (uint64_t)&unk_23F626A30);
}

void sub_23F4C8000()
{
  sub_23F3612C0(&qword_256E76500, type metadata accessor for ResponseGenerationOverrides_ContextPredicate, (uint64_t)&unk_23F626A70);
}

void sub_23F4C802C()
{
  sub_23F3612C0(&qword_256E76508, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate, (uint64_t)&unk_23F626B70);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E770B0);
}

void sub_23F4C806C()
{
  sub_23F3612C0(&qword_256E76510, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate, (uint64_t)&unk_23F626C60);
}

void sub_23F4C8098()
{
  sub_23F3612C0(&qword_256E76518, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate, (uint64_t)&unk_23F626B98);
}

void sub_23F4C80C4()
{
  sub_23F3612C0(&qword_256E76520, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate, (uint64_t)&unk_23F626BD8);
}

void sub_23F4C80F0()
{
  sub_23F3612C0(&qword_256E76528, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate, (uint64_t)&unk_23F626CD8);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E77020);
}

void sub_23F4C8130()
{
  sub_23F3612C0(&qword_256E76530, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate, (uint64_t)&unk_23F626DC8);
}

void sub_23F4C815C()
{
  sub_23F3612C0(&qword_256E76538, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate, (uint64_t)&unk_23F626D00);
}

void sub_23F4C8188()
{
  sub_23F3612C0(&qword_256E76540, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.AnyValuePredicate, (uint64_t)&unk_23F626D40);
}

void sub_23F4C81B4()
{
  sub_23F3612C0(&qword_256E76548, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate, (uint64_t)&unk_23F626E40);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E76F88);
}

void sub_23F4C81F4()
{
  sub_23F3612C0(&qword_256E76550, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate, (uint64_t)&unk_23F626F30);
}

void sub_23F4C8220()
{
  sub_23F3612C0(&qword_256E76558, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate, (uint64_t)&unk_23F626E68);
}

void sub_23F4C824C()
{
  sub_23F3612C0(&qword_256E76560, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate, (uint64_t)&unk_23F626EA8);
}

void sub_23F4C8278()
{
  sub_23F3612C0(&qword_256E76568, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate, (uint64_t)&unk_23F626FA8);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E76EF8);
}

void sub_23F4C82B8()
{
  sub_23F3612C0(&qword_256E76570, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate, (uint64_t)&unk_23F627098);
}

void sub_23F4C82E4()
{
  sub_23F3612C0(&qword_256E76578, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate, (uint64_t)&unk_23F626FD0);
}

void sub_23F4C8310()
{
  sub_23F3612C0(&qword_256E76580, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate, (uint64_t)&unk_23F627010);
}

void sub_23F4C833C()
{
  sub_23F3612C0(&qword_256E76588, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate, (uint64_t)&unk_23F627110);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E76E68);
}

void sub_23F4C837C()
{
  sub_23F3612C0(&qword_256E76590, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate, (uint64_t)&unk_23F627200);
}

void sub_23F4C83A8()
{
  sub_23F3612C0(&qword_256E76598, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate, (uint64_t)&unk_23F627138);
}

void sub_23F4C83D4()
{
  sub_23F3612C0(&qword_256E765A0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.AnyValuePredicate, (uint64_t)&unk_23F627178);
}

void sub_23F4C8400()
{
  sub_23F3612C0(&qword_256E765A8, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate, (uint64_t)&unk_23F627278);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E76DD0);
}

void sub_23F4C8440()
{
  sub_23F3612C0(&qword_256E765B0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate, (uint64_t)&unk_23F627368);
}

void sub_23F4C846C()
{
  sub_23F3612C0(&qword_256E765B8, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate, (uint64_t)&unk_23F6272A0);
}

void sub_23F4C8498()
{
  sub_23F3612C0(&qword_256E765C0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate, (uint64_t)&unk_23F6272E0);
}

void sub_23F4C84C4()
{
  sub_23F3612C0(&qword_256E765C8, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate, (uint64_t)&unk_23F6273E0);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E76D38);
}

void sub_23F4C8504()
{
  sub_23F3612C0(&qword_256E765D0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate, (uint64_t)&unk_23F6274D0);
}

void sub_23F4C8530()
{
  sub_23F3612C0(&qword_256E765D8, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate, (uint64_t)&unk_23F627408);
}

void sub_23F4C855C()
{
  sub_23F3612C0(&qword_256E765E0, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate, (uint64_t)&unk_23F627448);
}

void sub_23F4C8588()
{
  sub_23F3612C0(&qword_256E765E8, type metadata accessor for ResponseGenerationOverrides_ListPredicate, (uint64_t)&unk_23F627548);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_ListPredicate(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E76C98);
}

void sub_23F4C85C8()
{
  sub_23F3612C0(&qword_256E765F0, type metadata accessor for ResponseGenerationOverrides_ListPredicate, (uint64_t)&unk_23F627638);
}

void sub_23F4C85F4()
{
  sub_23F3612C0(&qword_256E765F8, type metadata accessor for ResponseGenerationOverrides_ListPredicate, (uint64_t)&unk_23F627570);
}

void sub_23F4C8620()
{
  sub_23F3612C0(&qword_256E76600, type metadata accessor for ResponseGenerationOverrides_ListPredicate, (uint64_t)&unk_23F6275B0);
}

void sub_23F4C864C()
{
  sub_23F3612C0(&qword_256E76608, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F6276D8);
}

void sub_23F4C8678()
{
  sub_23F3612C0(&qword_256E76610, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F6277C8);
}

void sub_23F4C86A4()
{
  sub_23F3612C0(&qword_256E76618, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F627700);
}

void sub_23F4C86D0()
{
  sub_23F3612C0(&qword_256E76620, type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&unk_23F627740);
}

void sub_23F4C86FC()
{
  sub_23F3612C0(&qword_256E76628, type metadata accessor for ResponseGenerationOverrides_IntPredicate, (uint64_t)&unk_23F627868);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_IntPredicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E76C00);
}

void sub_23F4C873C()
{
  sub_23F3612C0(&qword_256E76630, type metadata accessor for ResponseGenerationOverrides_IntPredicate, (uint64_t)&unk_23F627958);
}

void sub_23F4C8768()
{
  sub_23F3612C0(&qword_256E76638, type metadata accessor for ResponseGenerationOverrides_IntPredicate, (uint64_t)&unk_23F627890);
}

void sub_23F4C8794()
{
  sub_23F3612C0(&qword_256E76640, type metadata accessor for ResponseGenerationOverrides_IntPredicate, (uint64_t)&unk_23F6278D0);
}

void sub_23F4C87C0()
{
  sub_23F3612C0(&qword_256E76648, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride, (uint64_t)&unk_23F6279D0);
}

void sub_23F4C87EC()
{
  sub_23F3612C0(&qword_256E76650, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride, (uint64_t)&unk_23F627AC0);
}

void sub_23F4C8818()
{
  sub_23F3612C0(&qword_256E76658, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride, (uint64_t)&unk_23F6279F8);
}

void sub_23F4C8844()
{
  sub_23F3612C0(&qword_256E76660, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride, (uint64_t)&unk_23F627A38);
}

void sub_23F4C8870()
{
  sub_23F3612C0(&qword_256E76668, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides, (uint64_t)&unk_23F627B38);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E76B70);
}

void sub_23F4C88B0()
{
  sub_23F3612C0(&qword_256E76670, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides, (uint64_t)&unk_23F627C28);
}

void sub_23F4C88DC()
{
  sub_23F3612C0(&qword_256E76678, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides, (uint64_t)&unk_23F627B60);
}

void sub_23F4C8908()
{
  sub_23F3612C0(&qword_256E76680, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverrides, (uint64_t)&unk_23F627BA0);
}

void sub_23F4C8934()
{
  sub_23F39BBFC(&qword_256E76688, &qword_256E76690);
}

void sub_23F4C8958()
{
  sub_23F39BBFC(&qword_256E76698, &qword_256E766A0);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E76AE0);
}

void sub_23F4C8990(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F362BC4(a1, a2, a3);
  sub_23F38F920(v3);
  sub_23F362928();
}

uint64_t type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E76A38);
}

uint64_t type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E76990);
}

unint64_t sub_23F4C89D8()
{
  unint64_t result;

  result = qword_256E76780;
  if (!qword_256E76780)
  {
    result = MEMORY[0x242670A44](&unk_23F628420, &type metadata for ResponseGenerationOverrides_IntPredicate.Operator);
    atomic_store(result, (unint64_t *)&qword_256E76780);
  }
  return result;
}

unint64_t sub_23F4C8A14()
{
  unint64_t result;

  result = qword_256E76790;
  if (!qword_256E76790)
  {
    result = MEMORY[0x242670A44](&unk_23F6283D8, &type metadata for ResponseGenerationOverrides_StringPredicate.Operator);
    atomic_store(result, (unint64_t *)&qword_256E76790);
  }
  return result;
}

uint64_t sub_23F4C8A50(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *a2;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      v6 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v6;
      v7 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
      v8 = a1 + v7;
      v9 = (uint64_t)a2 + v7;
      v10 = sub_23F618974();
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      sub_23F617BA0();
      v11(v8, v9, v10);
    }
    else
    {
      v13 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F4C8B68(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    a1 += *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
  }
  v2 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23F4C8BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    v5 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
    v6 = a1 + v5;
    v7 = a2 + v5;
    v8 = sub_23F618974();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    sub_23F617BA0();
    v9(v6, v7, v8);
  }
  else
  {
    v10 = sub_23F618974();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23F4C8CA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  if ((uint64_t *)a1 != a2)
  {
    sub_23F3663AC(a1, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = *a2;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = a2[3];
      v5 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
      v6 = a1 + v5;
      v7 = (uint64_t)a2 + v5;
      v8 = sub_23F618974();
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      sub_23F617BA0();
      v9(v6, v7, v8);
    }
    else
    {
      v10 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F4C8DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    v4 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
    v5 = a1 + v4;
    v6 = a2 + v4;
    v7 = sub_23F618974();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  }
  else
  {
    v8 = sub_23F618974();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23F4C8E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_23F3663AC(a1, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      v4 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
      v5 = a1 + v4;
      v6 = a2 + v4;
      v7 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    }
    else
    {
      v8 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23F4C8F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4C9428(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_StringPredicate);
}

uint64_t *sub_23F4C8F5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                  + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23F618974();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      sub_23F617BA0();
      v11(v8, v9, v10);
    }
    else
    {
      v13 = sub_23F618974();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F4C9064(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    a1 += *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                 + 20);
  }
  v2 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *sub_23F4C90BC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    v5 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23F618974();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    sub_23F617BA0();
    v9(v6, v7, v8);
  }
  else
  {
    v10 = sub_23F618974();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23F4C9198(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v4 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                  + 20);
      v5 = (char *)a1 + v4;
      v6 = (char *)a2 + v4;
      v7 = sub_23F618974();
      v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      sub_23F617BA0();
      v8(v5, v6, v7);
    }
    else
    {
      v9 = sub_23F618974();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23F4C9294(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v4 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                + 20);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    v7 = sub_23F618974();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  }
  else
  {
    v8 = sub_23F618974();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_23F4C934C(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v4 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                  + 20);
      v5 = (char *)a1 + v4;
      v6 = (char *)a2 + v4;
      v7 = sub_23F618974();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    }
    else
    {
      v8 = sub_23F618974();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23F4C941C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4C9428(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate);
}

void sub_23F4C9428(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  sub_23F4DC7A0();
  if (v5 <= 0x3F)
  {
    a4(319);
    if (v6 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      sub_23F4DC9CC();
    }
  }
  sub_23F43A384();
}

uint64_t sub_23F4C9498(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F4C94F8 + 4 * word_23F624ADE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_23F4CA290(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t found;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_23F618974();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v27(a1, v3);
      v4 = type metadata accessor for ResponseGenerationOverrides_AppPredicate(0);
      goto LABEL_4;
    case 1:
      v3 = sub_23F618974();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v27(a1, v3);
      v4 = type metadata accessor for ResponseGenerationOverrides_ToolPredicate(0);
LABEL_4:
      v5 = *(int *)(v4 + 20);
      goto LABEL_18;
    case 2:
      v3 = sub_23F618974();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v27(a1, v3);
      a1 += *(int *)(type metadata accessor for ResponseGenerationOverrides_ActionPredicate(0) + 20);
      v6 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(0);
      goto LABEL_24;
    case 3:
      v3 = sub_23F618974();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v27(a1, v3);
      v7 = type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate(0);
      v8 = a1 + *(int *)(v7 + 20);
      v9 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(0);
      if (!sub_23F36195C(v8, 1, v9))
      {
        swift_bridgeObjectRelease();
        v27(v8 + *(int *)(v9 + 24), v3);
        v10 = v8 + *(int *)(v9 + 28);
        v11 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
        if (!sub_23F36195C(v10, 1, v11))
          v27(v10 + *(int *)(v11 + 24), v3);
      }
      v12 = *(int *)(v7 + 24);
      goto LABEL_26;
    case 4:
      v13 = sub_23F618974();
      v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
      v15 = a1;
      goto LABEL_29;
    case 5:
      v3 = sub_23F618974();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v27(a1, v3);
      v16 = type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate(0);
      goto LABEL_22;
    case 6:
      v17 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
      type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate(0);
      goto LABEL_31;
    case 7:
      v3 = sub_23F618974();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v27(a1, v3);
      found = type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate(0);
      goto LABEL_17;
    case 8:
      v3 = sub_23F618974();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v27(a1, v3);
      v19 = type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate(0);
      swift_bridgeObjectRelease();
      v20 = *(int *)(v19 + 24);
      goto LABEL_23;
    case 9:
      v3 = sub_23F618974();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v27(a1, v3);
      found = type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate(0);
      goto LABEL_17;
    case 10:
      v3 = sub_23F618974();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v27(a1, v3);
      found = type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate(0);
LABEL_17:
      v21 = found;
      swift_bridgeObjectRelease();
      v5 = *(int *)(v21 + 24);
LABEL_18:
      v22 = a1 + v5;
      v23 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
      result = sub_23F36195C(v22, 1, v23);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
LABEL_28:
      v15 = v22 + *(int *)(v23 + 24);
      v13 = v3;
      v14 = (uint64_t (*)(uint64_t, uint64_t))v27;
LABEL_29:
      result = v14(v15, v13);
      break;
    case 11:
      v24 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a1, v24);
      type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate(0);
      goto LABEL_31;
    case 12:
      v3 = sub_23F618974();
      v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v27(a1, v3);
      v16 = type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate(0);
LABEL_22:
      v20 = *(int *)(v16 + 20);
LABEL_23:
      a1 += v20;
      v6 = type metadata accessor for ResponseGenerationOverrides_ListPredicate(0);
LABEL_24:
      v25 = v6;
      result = sub_23F36195C(a1, 1, v6);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      v27(a1 + *(int *)(v25 + 24), v3);
      v12 = *(int *)(v25 + 28);
LABEL_26:
      v22 = a1 + v12;
      v23 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
      result = sub_23F36195C(v22, 1, v23);
      if ((_DWORD)result)
        return result;
      goto LABEL_28;
    case 13:
      v26 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(a1, v26);
      type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate(0);
LABEL_31:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void sub_23F4CA708()
{
  char *v0;

  v0 = (char *)sub_23F4CA75C + 4 * word_23F624B08[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F4CA75C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v2 = sub_23F618974();
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16);
  v3(v0, v1, v2);
  v4 = *(int *)(type metadata accessor for ResponseGenerationOverrides_AppPredicate(0) + 20);
  v5 = (_QWORD *)(v0 + v4);
  v6 = (_QWORD *)(v1 + v4);
  v7 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  if (sub_23F36195C((uint64_t)v6, 1, v7))
  {
    v8 = sub_23F35D2E8(&qword_256E75DE0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *v5 = *v6;
    *((_BYTE *)v5 + 8) = *((_BYTE *)v6 + 8);
    v9 = v6[3];
    v5[2] = v6[2];
    v5[3] = v9;
    v10 = *(int *)(v7 + 24);
    v11 = (char *)v5 + v10;
    v12 = (char *)v6 + v10;
    sub_23F617BA0();
    v3((uint64_t)v11, (uint64_t)v12, v2);
    sub_23F36196C((uint64_t)v5, 0, 1, v7);
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23F4CB4D4(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F3663AC(result, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v2 = (char *)&loc_23F4CB540 + 4 * word_23F624B24[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_23F4CC318()
{
  char *v0;

  v0 = (char *)sub_23F4CC36C + 4 * word_23F624B40[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

char *sub_23F4CC36C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void (*v3)(char *, char *, uint64_t);
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_23F618974();
  v3 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2 - 8) + 32);
  v3(v0, v1, v2);
  v4 = *(int *)(type metadata accessor for ResponseGenerationOverrides_AppPredicate(0) + 20);
  v5 = &v0[v4];
  v6 = &v1[v4];
  v7 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  if (sub_23F36195C((uint64_t)v6, 1, v7))
  {
    v8 = sub_23F35D2E8(&qword_256E75DE0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v5 = *(_QWORD *)v6;
    v5[8] = v6[8];
    *((_OWORD *)v5 + 1) = *((_OWORD *)v6 + 1);
    v3(&v5[*(int *)(v7 + 24)], &v6[*(int *)(v7 + 24)], v2);
    sub_23F36196C((uint64_t)v5, 0, 1, v7);
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23F4CCFFC(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F3663AC(result, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v2 = (char *)&loc_23F4CD068 + 4 * word_23F624B5C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23F4CDCF8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  result = type metadata accessor for ResponseGenerationOverrides_AppPredicate(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ResponseGenerationOverrides_ToolPredicate(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for ResponseGenerationOverrides_ActionPredicate(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate(319);
        if (v4 <= 0x3F)
        {
          result = sub_23F618974();
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate(319);
                    if (v10 <= 0x3F)
                    {
                      result = type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate(319);
                      if (v11 <= 0x3F)
                      {
                        result = type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate(319);
                        if (v12 <= 0x3F)
                        {
                          result = type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate(319);
                          if (v13 <= 0x3F)
                          {
                            result = type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate(319);
                            if (v14 <= 0x3F)
                            {
                              swift_initEnumMetadataMultiPayload();
                              return 0;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_23F4CDEC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23F618974();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    sub_23F617BA0();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_23F4CDF60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_23F4CDFA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23F618974();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  sub_23F617BA0();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *sub_23F4CE018(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_23F4CE08C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_23F4CE0E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_23F4CE154()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4CE160()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F3D9C90();
  if (v2)
  {
    sub_23F3F9B80(*v0);
    sub_23F362B80();
  }
  else
  {
    v3 = v1;
    sub_23F3C8624();
    v4 = sub_23F4DCE68(*(int *)(v3 + 20));
    sub_23F3B1A44(v4, v5, v6);
  }
}

uint64_t sub_23F4CE1A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4CE1B4()
{
  int v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F3B218C();
  if (v2)
  {
    *v1 = (v0 - 1);
    sub_23F362B80();
  }
  else
  {
    sub_23F3C8624();
    sub_23F4DC5B8();
    sub_23F38370C(v3, v4, v5, v6);
  }
}

void sub_23F4CE1FC()
{
  sub_23F4CF920();
}

_QWORD *sub_23F4CE20C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
    v5 = *(int *)(a3 + 24);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_23F618974();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_23F4CE2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_23F4CE2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23F618974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_23F4CE348(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = (uint64_t)a2 + v5;
  v8 = sub_23F618974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t sub_23F4CE3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23F618974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_23F4CE420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23F618974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_23F4CE48C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4CE498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = sub_23F3C8624();
  return sub_23F4DCE7C(v4, a2, v5);
}

uint64_t sub_23F4CE4C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4CE4D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F3C8624();
  sub_23F4DC5B8();
  return sub_23F4DC9C4(v0, v1, v2, v3);
}

void sub_23F4CE504()
{
  sub_23F4CE514();
}

void sub_23F4CE514()
{
  unint64_t v0;

  sub_23F4DC7E4();
  if (v0 <= 0x3F)
  {
    sub_23F4DC3CC();
    sub_23F4DC9CC();
  }
  sub_23F4DD04C();
}

uint64_t getEnumTagSinglePayload for ResponseGenerationOverrides_IntPredicate.Operator(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ResponseGenerationOverrides_IntPredicate.Operator(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_23F4CE5AC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23F4CE5C8(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for ResponseGenerationOverrides_IntPredicate.Operator()
{
  return &type metadata for ResponseGenerationOverrides_IntPredicate.Operator;
}

uint64_t sub_23F4CE610()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4CE620()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4CE634()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F383988();
  v1 = *(_DWORD *)(*(_QWORD *)(v0 - 8) + 80);
  *v3 = *v2;
  if ((v1 & 0x20000) != 0)
  {
    swift_retain();
  }
  else
  {
    sub_23F4DCED8();
    *(_BYTE *)(v5 + 8) = *(_BYTE *)(v4 + 8);
    sub_23F3C8624();
    sub_23F4DCDF8();
    sub_23F4DCFEC();
    type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
    if (sub_23F4DC1CC())
    {
      v6 = sub_23F35D2E8(&qword_256E76708);
      sub_23F4DC184(v6);
    }
    else
    {
      sub_23F4DC700();
      sub_23F4DC15C();
    }
  }
  sub_23F383568();
}

void sub_23F4CE6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23F3C8624();
  sub_23F4DCB7C(v4, v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8));
  v7 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  if (sub_23F4DC414(v7))
  {
    sub_23F38454C();
  }
  else
  {
    v8 = sub_23F4DC6C0();
    sub_23F4DC348(v8, v9, v10);
  }
}

void sub_23F4CE754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F383988();
  sub_23F4DCED8();
  *(_QWORD *)v1 = *(_QWORD *)v0;
  *(_BYTE *)(v1 + 8) = *(_BYTE *)(v0 + 8);
  sub_23F3C8624();
  sub_23F4DCDF8();
  sub_23F4DCFEC();
  type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  if (sub_23F4DC1CC())
  {
    v2 = sub_23F35D2E8(&qword_256E76708);
    sub_23F4DC184(v2);
  }
  else
  {
    sub_23F4DC700();
    sub_23F4DC15C();
  }
  sub_23F383568();
}

void sub_23F4CE7DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F383988();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  *v4 = *v2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + 8) = *((_BYTE *)v3 + 8);
  v6 = *(int *)(v1 + 24);
  v7 = (uint64_t)v5 + v6;
  v8 = (uint64_t)v3 + v6;
  v9 = sub_23F3C8624();
  v10 = *(_QWORD *)(v9 - 8);
  sub_23F4DC8D8(v7, v8);
  v11 = *(int *)(v1 + 28);
  v12 = (uint64_t)v5 + v11;
  v13 = (uint64_t)v3 + v11;
  v14 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  LODWORD(v8) = sub_23F36195C(v12, 1, v14);
  v15 = sub_23F4DC1F8(v13);
  if (!(_DWORD)v8)
  {
    if (!(_DWORD)v15)
    {
      v18 = *(_QWORD *)v13;
      *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
      *(_QWORD *)v12 = v18;
      *(_DWORD *)(v12 + 12) = *(_DWORD *)(v13 + 12);
      sub_23F4DC584();
      goto LABEL_7;
    }
    sub_23F4DCCA0(v15, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
    goto LABEL_6;
  }
  if ((_DWORD)v15)
  {
LABEL_6:
    v17 = sub_23F35D2E8(&qword_256E76708);
    sub_23F4DC608(v17);
    goto LABEL_7;
  }
  v16 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = v16;
  *(_DWORD *)(v12 + 12) = *(_DWORD *)(v13 + 12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v12 + *(int *)(v14 + 24), v13 + *(int *)(v14 + 24), v9);
  sub_23F4DC15C();
LABEL_7:
  sub_23F383568();
}

void sub_23F4CE904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F383988();
  sub_23F4DCED8();
  *(_QWORD *)v4 = *(_QWORD *)v3;
  *(_BYTE *)(v4 + 8) = *(_BYTE *)(v3 + 8);
  v6 = *(int *)(v5 + 24);
  v7 = v4 + v6;
  v8 = v3 + v6;
  sub_23F3C8624();
  sub_23F4DC78C(v7, v8);
  v9 = *(int *)(v1 + 28);
  v10 = v0 + v9;
  v11 = v2 + v9;
  v12 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  if (sub_23F4DC1CC())
  {
    v13 = sub_23F35D2E8(&qword_256E76708);
    sub_23F4DC184(v13);
  }
  else
  {
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
    *(_DWORD *)(v10 + 12) = *(_DWORD *)(v11 + 12);
    sub_23F4DC78C(v10 + *(int *)(v12 + 24), v11 + *(int *)(v12 + 24));
    sub_23F4DC15C();
  }
  sub_23F383568();
}

void sub_23F4CE9C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F383988();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  *v4 = *v2;
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + 8) = *((_BYTE *)v3 + 8);
  v6 = *(int *)(v1 + 24);
  v7 = (uint64_t)v5 + v6;
  v8 = (uint64_t)v3 + v6;
  sub_23F3C8624();
  sub_23F4DC8D8(v7, v8);
  v9 = *(int *)(v1 + 28);
  v10 = (uint64_t)v5 + v9;
  v11 = (uint64_t)v3 + v9;
  v12 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  LODWORD(v8) = sub_23F36195C(v10, 1, v12);
  v13 = sub_23F4DC1F8(v11);
  if (!(_DWORD)v8)
  {
    if (!(_DWORD)v13)
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
      *(_DWORD *)(v10 + 12) = *(_DWORD *)(v11 + 12);
      sub_23F4DC584();
      goto LABEL_7;
    }
    sub_23F4DCCA0(v13, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
    goto LABEL_6;
  }
  if ((_DWORD)v13)
  {
LABEL_6:
    v14 = sub_23F35D2E8(&qword_256E76708);
    sub_23F4DC608(v14);
    goto LABEL_7;
  }
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_DWORD *)(v10 + 12) = *(_DWORD *)(v11 + 12);
  sub_23F4DCC7C();
  sub_23F4DC15C();
LABEL_7:
  sub_23F383568();
}

uint64_t sub_23F4CEACC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4CEADC()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F3D9C90();
  if (v3)
  {
    sub_23F3F9B80(*v0);
    sub_23F362B80();
  }
  else
  {
    v2 = v1;
    sub_23F3C8624();
    sub_23F3F9C58();
    if (v3)
    {
      v4 = *(int *)(v2 + 24);
    }
    else
    {
      sub_23F35D2E8(&qword_256E76708);
      v4 = *(int *)(v2 + 28);
    }
    v5 = sub_23F4DCE68(v4);
    sub_23F3B1A44(v5, v6, v7);
  }
}

uint64_t sub_23F4CEB44()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4CEB54()
{
  int v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F3B218C();
  if (v2)
  {
    *v1 = (v0 - 1);
    sub_23F362B80();
  }
  else
  {
    sub_23F3C8624();
    sub_23F3F9C68();
    if (!v2)
      sub_23F35D2E8(&qword_256E76708);
    sub_23F4DC5B8();
    sub_23F38370C(v3, v4, v5, v6);
  }
}

void sub_23F4CEBC0()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F4DC7E4();
  if (v0 <= 0x3F)
  {
    sub_23F4AED90(319, qword_256E76CA8, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_IntPredicate);
    if (v1 <= 0x3F)
    {
      swift_initStructMetadata();
      sub_23F4DC9CC();
    }
  }
  sub_23F4DD04C();
}

uint64_t *sub_23F4CEC60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
    if (sub_23F36195C((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F35D2E8(&qword_256E76738);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        v11 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                     + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_23F618974();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        sub_23F617BA0();
        v15(v12, v13, v14);
      }
      else
      {
        v16 = sub_23F618974();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C((uint64_t)a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_23F618974();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t sub_23F4CEDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
  if (!sub_23F36195C(a1, 1, v4))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      v5 = a1
         + *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                  + 20);
      v6 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    }
    else
    {
      v7 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
    }
  }
  v8 = a1 + *(int *)(a2 + 20);
  v9 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *sub_23F4CEEC0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F35D2E8(&qword_256E76738);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                  + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23F618974();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      sub_23F617BA0();
      v13(v10, v11, v12);
    }
    else
    {
      v14 = sub_23F618974();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
    }
    swift_storeEnumTagMultiPayload();
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

_QWORD *sub_23F4CF028(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        v9 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                    + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_23F618974();
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        sub_23F617BA0();
        v13(v10, v11, v12);
      }
      else
      {
        v20 = sub_23F618974();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    v14 = sub_23F35D2E8(&qword_256E76738);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v15 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                   + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_23F618974();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      sub_23F617BA0();
      v19(v16, v17, v18);
    }
    else
    {
      v21 = sub_23F618974();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v22 = *(int *)(a3 + 20);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

_OWORD *sub_23F4CF284(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F35D2E8(&qword_256E76738);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                  + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23F618974();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    }
    else
    {
      v12 = sub_23F618974();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    }
    swift_storeEnumTagMultiPayload();
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

_OWORD *sub_23F4CF3C8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        v9 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                    + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_23F618974();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      }
      else
      {
        v18 = sub_23F618974();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    v13 = sub_23F35D2E8(&qword_256E76738);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v14 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                   + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_23F618974();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    }
    else
    {
      v19 = sub_23F618974();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v20 = *(int *)(a3 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t sub_23F4CF5E4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4CF5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F4DB894(a1, a2, a3, &qword_256E76738);
}

uint64_t sub_23F4CF5FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4CF608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F4DB8F8(a1, a2, a3, a4, &qword_256E76738);
}

void sub_23F4CF614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4DB95C(a1, a2, a3, qword_256E76DE0, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
}

uint64_t sub_23F4CF640()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4CF64C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F3C8624();
  return sub_23F4DCE7C(a1, a2, v4);
}

uint64_t sub_23F4CF678()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4CF684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F3C8624();
  sub_23F4DC5B8();
  return sub_23F4DC9C4(v0, v1, v2, v3);
}

void sub_23F4CF6B4()
{
  uint64_t *v0;
  uint64_t *v1;
  int v2;
  uint64_t v3;

  sub_23F4DCAE4();
  if ((v2 & 0x20000) != 0)
  {
    sub_23F4DC2A8(*v1);
  }
  else
  {
    v3 = v1[1];
    *v0 = *v1;
    v0[1] = v3;
    sub_23F3C8624();
    sub_23F4DCDB0();
    sub_23F4DCF1C();
  }
  sub_23F383488();
}

uint64_t sub_23F4CF708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  swift_bridgeObjectRelease();
  sub_23F3C8624();
  v0 = sub_23F4DD1FC();
  return sub_23F4DCE74(v0, v1, v2);
}

void sub_23F4CF73C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  sub_23F3C8624();
  sub_23F4DCDB0();
  sub_23F4DCF1C();
  sub_23F383488();
}

void sub_23F4CF780()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  sub_23F4DCF4C();
  *v2 = *v1;
  *(_QWORD *)(v0 + 8) = v1[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  sub_23F3C8624();
  sub_23F4DCF6C();
  sub_23F362D20(v3);
  sub_23F362B80();
}

void sub_23F4CF7D8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;

  *a1 = *a2;
  v3 = *(int *)(a3 + 20);
  v4 = (char *)a1 + v3;
  v5 = (char *)a2 + v3;
  v6 = sub_23F3C8624();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v4, v5, v6);
  sub_23F362B80();
}

void sub_23F4CF828()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  sub_23F4DCF4C();
  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRelease();
  sub_23F3C8624();
  sub_23F4DCF5C();
  sub_23F362D20(v3);
  sub_23F362B80();
}

uint64_t sub_23F4CF870()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4CF880()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F3D9C90();
  if (v2)
  {
    sub_23F3F9B80(*(_QWORD *)(v0 + 8));
    sub_23F362B80();
  }
  else
  {
    v3 = v1;
    sub_23F3C8624();
    v4 = sub_23F4DCE68(*(int *)(v3 + 20));
    sub_23F3B1A44(v4, v5, v6);
  }
}

uint64_t sub_23F4CF8C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4CF8D8()
{
  int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F3B218C();
  if (v2)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    sub_23F362B80();
  }
  else
  {
    sub_23F3C8624();
    sub_23F4DC5B8();
    sub_23F38370C(v3, v4, v5, v6);
  }
}

void sub_23F4CF920()
{
  unint64_t v0;

  sub_23F4DC7E4();
  if (v0 <= 0x3F)
  {
    sub_23F4DC3F0();
    sub_23F4DC9CC();
  }
  sub_23F43A384();
}

uint64_t *sub_23F4CF95C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
    if (sub_23F36195C((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F35D2E8(&qword_256E76750);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v10 = a2[3];
        a1[2] = a2[2];
        a1[3] = v10;
        v11 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_23F618974();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        sub_23F617BA0();
        v15(v12, v13, v14);
      }
      else
      {
        v16 = sub_23F618974();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C((uint64_t)a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_23F618974();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t sub_23F4CFAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
  if (!sub_23F36195C(a1, 1, v4))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      v5 = a1 + *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
      v6 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    }
    else
    {
      v7 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
    }
  }
  v8 = a1 + *(int *)(a2 + 20);
  v9 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *sub_23F4CFBC4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F35D2E8(&qword_256E76750);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      v9 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23F618974();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      sub_23F617BA0();
      v13(v10, v11, v12);
    }
    else
    {
      v14 = sub_23F618974();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
    }
    swift_storeEnumTagMultiPayload();
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t sub_23F4CFD34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
  v7 = sub_23F36195C(a1, 1, v6);
  v8 = sub_23F36195C(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v9 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        *(_QWORD *)a1 = v9;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        v10 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
        v11 = a1 + v10;
        v12 = a2 + v10;
        v13 = sub_23F618974();
        v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        sub_23F617BA0();
        v14(v11, v12, v13);
      }
      else
      {
        v22 = sub_23F618974();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C(a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    v15 = sub_23F35D2E8(&qword_256E76750);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    sub_23F3663AC(a1, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23F3663AC(a1, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_QWORD *)a1 = v16;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v17 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
      v18 = a1 + v17;
      v19 = a2 + v17;
      v20 = sub_23F618974();
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      sub_23F617BA0();
      v21(v18, v19, v20);
    }
    else
    {
      v23 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v24 = *(int *)(a3 + 20);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_23F618974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

_QWORD *sub_23F4CFFA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F35D2E8(&qword_256E76750);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      v8 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23F618974();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    }
    else
    {
      v12 = sub_23F618974();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    }
    swift_storeEnumTagMultiPayload();
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

uint64_t sub_23F4D00FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
  v7 = sub_23F36195C(a1, 1, v6);
  v8 = sub_23F36195C(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        v9 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
        v10 = a1 + v9;
        v11 = a2 + v9;
        v12 = sub_23F618974();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      }
      else
      {
        v18 = sub_23F618974();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C(a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    v13 = sub_23F35D2E8(&qword_256E76750);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    sub_23F3663AC(a1, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23F3663AC(a1, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      v14 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
      v15 = a1 + v14;
      v16 = a2 + v14;
      v17 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    }
    else
    {
      v19 = sub_23F618974();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v20 = *(int *)(a3 + 20);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_23F618974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t sub_23F4D0338()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D0344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F4DB894(a1, a2, a3, &qword_256E76750);
}

uint64_t sub_23F4D0350()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D035C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F4DB8F8(a1, a2, a3, a4, &qword_256E76750);
}

void sub_23F4D0368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4DB95C(a1, a2, a3, qword_256E76F98, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
}

uint64_t sub_23F4D037C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D0388()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23F4D0394(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v31;
  char *v32;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F618974();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = &a1[v9];
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate(0);
    if (sub_23F36195C((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F35D2E8(&qword_256E76728);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
      if (sub_23F36195C((uint64_t)v11, 1, v15))
      {
        v16 = sub_23F35D2E8(&qword_256E76738);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v17 = v11[1];
          *(_QWORD *)v10 = *v11;
          *((_QWORD *)v10 + 1) = v17;
          v18 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                       + 20);
          v31 = (char *)v11 + v18;
          v32 = &v10[v18];
          sub_23F617BA0();
          v8(v32, v31, v7);
        }
        else
        {
          v8(v10, (char *)v11, v7);
        }
        swift_storeEnumTagMultiPayload();
        sub_23F36196C((uint64_t)v10, 0, 1, v15);
      }
      v8(&v10[*(int *)(v12 + 20)], (char *)v11 + *(int *)(v12 + 20), v7);
      sub_23F36196C((uint64_t)v10, 0, 1, v12);
    }
    v19 = *(int *)(a3 + 24);
    v20 = &a1[v19];
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate(0);
    if (sub_23F36195C((uint64_t)v21, 1, v22))
    {
      v23 = sub_23F35D2E8(&qword_256E76718);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
      if (sub_23F36195C((uint64_t)v21, 1, v24))
      {
        v25 = sub_23F35D2E8(&qword_256E76750);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_QWORD *)v20 = *v21;
          v20[8] = *((_BYTE *)v21 + 8);
          v26 = v21[3];
          *((_QWORD *)v20 + 2) = v21[2];
          *((_QWORD *)v20 + 3) = v26;
          v27 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
          v28 = &v20[v27];
          v29 = (char *)v21 + v27;
          sub_23F617BA0();
          v8(v28, v29, v7);
        }
        else
        {
          v8(v20, (char *)v21, v7);
        }
        swift_storeEnumTagMultiPayload();
        sub_23F36196C((uint64_t)v20, 0, 1, v24);
      }
      v8(&v20[*(int *)(v22 + 20)], (char *)v21 + *(int *)(v22 + 20), v7);
      sub_23F36196C((uint64_t)v20, 0, 1, v22);
    }
  }
  return a1;
}

uint64_t sub_23F4D06CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  v4 = sub_23F618974();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v14(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate(0);
  if (!sub_23F36195C(v5, 1, v6))
  {
    v7 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
    if (!sub_23F36195C(v5, 1, v7))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v8 = v5
           + *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                    + 20);
      }
      else
      {
        v8 = v5;
      }
      v14(v8, v4);
    }
    v14(v5 + *(int *)(v6 + 20), v4);
  }
  v9 = a1 + *(int *)(a2 + 24);
  v10 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate(0);
  result = sub_23F36195C(v9, 1, v10);
  if (!(_DWORD)result)
  {
    v12 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
    if (!sub_23F36195C(v9, 1, v12))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v13 = v9 + *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
      }
      else
      {
        v13 = v9;
      }
      v14(v13, v4);
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(v9 + *(int *)(v10 + 20), v4);
  }
  return result;
}

uint64_t sub_23F4D0874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v29;
  char *v30;

  v6 = sub_23F618974();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate(0);
  if (sub_23F36195C((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E76728);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
    if (sub_23F36195C((uint64_t)v10, 1, v13))
    {
      v14 = sub_23F35D2E8(&qword_256E76738);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v15 = v10[1];
        *v9 = *v10;
        v9[1] = v15;
        v16 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                     + 20);
        v29 = (char *)v10 + v16;
        v30 = (char *)v9 + v16;
        sub_23F617BA0();
        v7((uint64_t)v30, (uint64_t)v29, v6);
      }
      else
      {
        v7((uint64_t)v9, (uint64_t)v10, v6);
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C((uint64_t)v9, 0, 1, v13);
    }
    v7((uint64_t)v9 + *(int *)(v11 + 20), (uint64_t)v10 + *(int *)(v11 + 20), v6);
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
  }
  v17 = *(int *)(a3 + 24);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate(0);
  if (sub_23F36195C((uint64_t)v19, 1, v20))
  {
    v21 = sub_23F35D2E8(&qword_256E76718);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
    if (sub_23F36195C((uint64_t)v19, 1, v22))
    {
      v23 = sub_23F35D2E8(&qword_256E76750);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v18 = *v19;
        *((_BYTE *)v18 + 8) = *((_BYTE *)v19 + 8);
        v24 = v19[3];
        v18[2] = v19[2];
        v18[3] = v24;
        v25 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
        v26 = (char *)v18 + v25;
        v27 = (char *)v19 + v25;
        sub_23F617BA0();
        v7((uint64_t)v26, (uint64_t)v27, v6);
      }
      else
      {
        v7((uint64_t)v18, (uint64_t)v19, v6);
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C((uint64_t)v18, 0, 1, v22);
    }
    v7((uint64_t)v18 + *(int *)(v20 + 20), (uint64_t)v19 + *(int *)(v20 + 20), v6);
    sub_23F36196C((uint64_t)v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_23F4D0B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  void (*v63)(char *, char *, uint64_t);
  void (*v64)(char *, char *, uint64_t);
  void (*v65)(uint64_t, uint64_t, uint64_t);
  void (*v66)(uint64_t, uint64_t, uint64_t);
  void (*v67)(uint64_t, uint64_t, uint64_t);
  void (*v68)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F618974();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate(0);
  v13 = sub_23F36195C((uint64_t)v10, 1, v12);
  v14 = sub_23F36195C((uint64_t)v11, 1, v12);
  if (!v13)
  {
    if (v14)
    {
      sub_23F3663AC((uint64_t)v10, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate);
      goto LABEL_7;
    }
    v66 = v8;
    v18 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
    v19 = sub_23F36195C((uint64_t)v10, 1, v18);
    v20 = sub_23F36195C((uint64_t)v11, 1, v18);
    if (v19)
    {
      v8 = v66;
      if (!v20)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v10 = *v11;
          v10[1] = v11[1];
          v21 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                       + 20);
          v57 = (char *)v11 + v21;
          v60 = (char *)v10 + v21;
          v63 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
          v8 = v66;
          sub_23F617BA0();
          v63(v60, v57, v6);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v10, v11, v6);
        }
        swift_storeEnumTagMultiPayload();
        sub_23F36196C((uint64_t)v10, 0, 1, v18);
        goto LABEL_27;
      }
    }
    else
    {
      v8 = v66;
      if (!v20)
      {
        if (a1 != a2)
        {
          sub_23F3663AC((uint64_t)v10, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *v10 = *v11;
            v10[1] = v11[1];
            v25 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                         + 20);
            v59 = (char *)v11 + v25;
            v62 = (char *)v10 + v25;
            v64 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
            v8 = v66;
            sub_23F617BA0();
            v64(v62, v59, v6);
          }
          else
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v10, v11, v6);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_27;
      }
      sub_23F3663AC((uint64_t)v10, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    }
    v24 = sub_23F35D2E8(&qword_256E76738);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_27:
    v8((uint64_t)v10 + *(int *)(v12 + 20), (uint64_t)v11 + *(int *)(v12 + 20), v6);
    goto LABEL_28;
  }
  if (v14)
  {
LABEL_7:
    v17 = sub_23F35D2E8(&qword_256E76728);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_28;
  }
  v15 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
  v65 = v8;
  if (sub_23F36195C((uint64_t)v11, 1, v15))
  {
    v16 = sub_23F35D2E8(&qword_256E76738);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v10 + *(int *)(v12 + 20), (char *)v11 + *(int *)(v12 + 20), v6);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v10 = *v11;
      v10[1] = v11[1];
      v22 = *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0)
                   + 20);
      v58 = (char *)v11 + v22;
      v61 = (char *)v10 + v22;
      v23 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      sub_23F617BA0();
      v23(v61, v58, v6);
    }
    else
    {
      v23 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v23((char *)v10, (char *)v11, v6);
    }
    swift_storeEnumTagMultiPayload();
    sub_23F36196C((uint64_t)v10, 0, 1, v15);
    v23((char *)v10 + *(int *)(v12 + 20), (char *)v11 + *(int *)(v12 + 20), v6);
  }
  sub_23F36196C((uint64_t)v10, 0, 1, v12);
  v8 = v65;
LABEL_28:
  v26 = *(int *)(a3 + 24);
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate(0);
  v30 = sub_23F36195C(v27, 1, v29);
  v31 = sub_23F36195C(v28, 1, v29);
  if (!v30)
  {
    if (v31)
    {
      sub_23F3663AC(v27, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate);
      goto LABEL_34;
    }
    v35 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
    v36 = sub_23F36195C(v27, 1, v35);
    v37 = sub_23F36195C(v28, 1, v35);
    if (v36)
    {
      if (!v37)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v38 = *(_QWORD *)v28;
          *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
          *(_QWORD *)v27 = v38;
          *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
          *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
          v39 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
          v40 = v27 + v39;
          v67 = v8;
          v41 = v28 + v39;
          v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
          sub_23F617BA0();
          v43 = v41;
          v8 = v67;
          v42(v40, v43, v6);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v27, v28, v6);
        }
        swift_storeEnumTagMultiPayload();
        sub_23F36196C(v27, 0, 1, v35);
        goto LABEL_54;
      }
    }
    else
    {
      if (!v37)
      {
        if (a1 != a2)
        {
          sub_23F3663AC(v27, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v50 = *(_QWORD *)v28;
            *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
            *(_QWORD *)v27 = v50;
            *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
            *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
            v51 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
            v52 = v27 + v51;
            v68 = v8;
            v53 = v28 + v51;
            v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
            sub_23F617BA0();
            v55 = v53;
            v8 = v68;
            v54(v52, v55, v6);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v27, v28, v6);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_54;
      }
      sub_23F3663AC(v27, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    }
    v49 = sub_23F35D2E8(&qword_256E76750);
    memcpy((void *)v27, (const void *)v28, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
LABEL_54:
    v8(v27 + *(int *)(v29 + 20), v28 + *(int *)(v29 + 20), v6);
    return a1;
  }
  if (v31)
  {
LABEL_34:
    v34 = sub_23F35D2E8(&qword_256E76718);
    memcpy((void *)v27, (const void *)v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    return a1;
  }
  v32 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
  if (sub_23F36195C(v28, 1, v32))
  {
    v33 = sub_23F35D2E8(&qword_256E76750);
    memcpy((void *)v27, (const void *)v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v27 + *(int *)(v29 + 20), v28 + *(int *)(v29 + 20), v6);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v44 = *(_QWORD *)v28;
      *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
      *(_QWORD *)v27 = v44;
      *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
      *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
      v45 = *(int *)(type metadata accessor for ResponseGenerationOverrides_StringPredicate(0) + 24);
      v46 = v27 + v45;
      v47 = v28 + v45;
      v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      sub_23F617BA0();
      v48(v46, v47, v6);
    }
    else
    {
      v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      v48(v27, v28, v6);
    }
    swift_storeEnumTagMultiPayload();
    sub_23F36196C(v27, 0, 1, v32);
    v48(v27 + *(int *)(v29 + 20), v28 + *(int *)(v29 + 20), v6);
  }
  sub_23F36196C(v27, 0, 1, v29);
  return a1;
}

char *sub_23F4D12F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_23F618974();
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate(0);
  if (sub_23F36195C((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E76728);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
    if (sub_23F36195C((uint64_t)v10, 1, v13))
    {
      v14 = sub_23F35D2E8(&qword_256E76738);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)v9 = *(_OWORD *)v10;
        v15 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0);
        v7(&v9[*(int *)(v15 + 20)], &v10[*(int *)(v15 + 20)], v6);
      }
      else
      {
        v7(v9, v10, v6);
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C((uint64_t)v9, 0, 1, v13);
    }
    v7(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v6);
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
  }
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate(0);
  if (sub_23F36195C((uint64_t)v18, 1, v19))
  {
    v20 = sub_23F35D2E8(&qword_256E76718);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
    if (sub_23F36195C((uint64_t)v18, 1, v21))
    {
      v22 = sub_23F35D2E8(&qword_256E76750);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_QWORD *)v17 = *(_QWORD *)v18;
        v17[8] = v18[8];
        *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
        v23 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
        v7(&v17[*(int *)(v23 + 24)], &v18[*(int *)(v23 + 24)], v6);
      }
      else
      {
        v7(v17, v18, v6);
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C((uint64_t)v17, 0, 1, v21);
    }
    v7(&v17[*(int *)(v19 + 20)], &v18[*(int *)(v19 + 20)], v6);
    sub_23F36196C((uint64_t)v17, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_23F4D15D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F618974();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate(0);
  v13 = sub_23F36195C((uint64_t)v10, 1, v12);
  v14 = sub_23F36195C((uint64_t)v11, 1, v12);
  if (!v13)
  {
    if (v14)
    {
      sub_23F3663AC((uint64_t)v10, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate);
      goto LABEL_7;
    }
    v47 = v6;
    v18 = v7;
    v19 = v8;
    v20 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
    v21 = sub_23F36195C((uint64_t)v10, 1, v20);
    v46 = v20;
    v22 = sub_23F36195C((uint64_t)v11, 1, v20);
    if (v21)
    {
      v8 = v19;
      v7 = v18;
      if (!v22)
      {
        v6 = v47;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)v10 = *(_OWORD *)v11;
          v23 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0);
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v10[*(int *)(v23 + 20)], &v11[*(int *)(v23 + 20)], v47);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v47);
        }
        swift_storeEnumTagMultiPayload();
        sub_23F36196C((uint64_t)v10, 0, 1, v46);
        goto LABEL_27;
      }
    }
    else
    {
      v8 = v19;
      v7 = v18;
      if (!v22)
      {
        v6 = v47;
        if (a1 != a2)
        {
          sub_23F3663AC((uint64_t)v10, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)v10 = *(_OWORD *)v11;
            v27 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0);
            (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v10[*(int *)(v27 + 20)], &v11[*(int *)(v27 + 20)], v47);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v47);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_27;
      }
      sub_23F3663AC((uint64_t)v10, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    }
    v26 = sub_23F35D2E8(&qword_256E76738);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    v6 = v47;
LABEL_27:
    v8((uint64_t)&v10[*(int *)(v12 + 20)], (uint64_t)&v11[*(int *)(v12 + 20)], v6);
    goto LABEL_28;
  }
  if (v14)
  {
LABEL_7:
    v17 = sub_23F35D2E8(&qword_256E76728);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_28;
  }
  v15 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(0);
  v48 = v8;
  if (sub_23F36195C((uint64_t)v11, 1, v15))
  {
    v16 = sub_23F35D2E8(&qword_256E76738);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v10[*(int *)(v12 + 20)], &v11[*(int *)(v12 + 20)], v6);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)v10 = *(_OWORD *)v11;
      v24 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(0);
      v25 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v25(&v10[*(int *)(v24 + 20)], &v11[*(int *)(v24 + 20)], v6);
    }
    else
    {
      v25 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v25(v10, v11, v6);
    }
    swift_storeEnumTagMultiPayload();
    sub_23F36196C((uint64_t)v10, 0, 1, v15);
    v25(&v10[*(int *)(v12 + 20)], &v11[*(int *)(v12 + 20)], v6);
  }
  sub_23F36196C((uint64_t)v10, 0, 1, v12);
  v8 = v48;
LABEL_28:
  v28 = *(int *)(a3 + 24);
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate(0);
  v32 = sub_23F36195C(v29, 1, v31);
  v33 = sub_23F36195C(v30, 1, v31);
  if (!v32)
  {
    if (v33)
    {
      sub_23F3663AC(v29, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate);
      goto LABEL_34;
    }
    v37 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
    v38 = sub_23F36195C(v29, 1, v37);
    v39 = sub_23F36195C(v30, 1, v37);
    if (v38)
    {
      if (!v39)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_QWORD *)v29 = *(_QWORD *)v30;
          *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
          *(_OWORD *)(v29 + 16) = *(_OWORD *)(v30 + 16);
          v40 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v29 + *(int *)(v40 + 24), v30 + *(int *)(v40 + 24), v6);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v29, v30, v6);
        }
        swift_storeEnumTagMultiPayload();
        sub_23F36196C(v29, 0, 1, v37);
        goto LABEL_54;
      }
    }
    else
    {
      if (!v39)
      {
        if (a1 != a2)
        {
          sub_23F3663AC(v29, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_QWORD *)v29 = *(_QWORD *)v30;
            *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
            *(_OWORD *)(v29 + 16) = *(_OWORD *)(v30 + 16);
            v44 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v29 + *(int *)(v44 + 24), v30 + *(int *)(v44 + 24), v6);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v29, v30, v6);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_54;
      }
      sub_23F3663AC(v29, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    }
    v43 = sub_23F35D2E8(&qword_256E76750);
    memcpy((void *)v29, (const void *)v30, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
LABEL_54:
    v8(v29 + *(int *)(v31 + 20), v30 + *(int *)(v31 + 20), v6);
    return a1;
  }
  if (v33)
  {
LABEL_34:
    v36 = sub_23F35D2E8(&qword_256E76718);
    memcpy((void *)v29, (const void *)v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    return a1;
  }
  v34 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(0);
  if (sub_23F36195C(v30, 1, v34))
  {
    v35 = sub_23F35D2E8(&qword_256E76750);
    memcpy((void *)v29, (const void *)v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v29 + *(int *)(v31 + 20), v30 + *(int *)(v31 + 20), v6);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
      *(_OWORD *)(v29 + 16) = *(_OWORD *)(v30 + 16);
      v41 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
      v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
      v42(v29 + *(int *)(v41 + 24), v30 + *(int *)(v41 + 24), v6);
    }
    else
    {
      v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
      v42(v29, v30, v6);
    }
    swift_storeEnumTagMultiPayload();
    sub_23F36196C(v29, 0, 1, v34);
    v42(v29 + *(int *)(v31 + 20), v30 + *(int *)(v31 + 20), v6);
  }
  sub_23F36196C(v29, 0, 1, v31);
  return a1;
}

uint64_t sub_23F4D1CA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D1CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F4D317C(a1, a2, a3, &qword_256E76728);
}

uint64_t sub_23F4D1CC0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D1CCC()
{
  return sub_23F4D321C();
}

void sub_23F4D1CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4D32B4(a1, a2, a3, &qword_256E770C0, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate);
}

uint64_t sub_23F4D1D1C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D1D28(uint64_t a1, uint64_t a2)
{
  return sub_23F4D4D2C(a1, a2);
}

uint64_t sub_23F4D1D34()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D1D40()
{
  return sub_23F4D4D90();
}

void sub_23F4D1D4C()
{
  sub_23F4D4DE4();
}

void sub_23F4D1D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  int v4;
  uint64_t v5;

  sub_23F383988();
  v3 = v2;
  sub_23F4DCAE4();
  if ((v4 & 0x20000) != 0)
  {
    sub_23F4DC2A8(*v3);
  }
  else
  {
    sub_23F3C8624();
    sub_23F4DC5AC(v0);
    type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
    if (sub_23F4DC1CC())
    {
      v5 = sub_23F35D2E8(&qword_256E75DE0);
      sub_23F4DC184(v5);
    }
    else
    {
      sub_23F4DC7AC();
      sub_23F4DC5AC(v1);
      sub_23F4DC15C();
    }
  }
  sub_23F383568();
}

void sub_23F4D1DF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v2 = sub_23F3C8624();
  sub_23F4DCB7C(a1, v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));
  v4 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  if (sub_23F4DC414(v4))
  {
    sub_23F38454C();
  }
  else
  {
    swift_bridgeObjectRelease();
    v5 = sub_23F4DC6C0();
    sub_23F4DC348(v5, v6, v7);
  }
}

void sub_23F4D1E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F383988();
  v2 = v1;
  sub_23F3C8624();
  sub_23F4DC5AC(v2);
  type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  if (sub_23F4DC1CC())
  {
    v3 = sub_23F35D2E8(&qword_256E75DE0);
    sub_23F4DC184(v3);
  }
  else
  {
    sub_23F4DC7AC();
    sub_23F4DC5AC(v0);
    sub_23F4DC15C();
  }
  sub_23F383568();
}

void sub_23F4D1EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F383988();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  sub_23F3C8624();
  sub_23F4DC8D8(v5, v3);
  v6 = *(int *)(v1 + 20);
  v7 = v5 + v6;
  v8 = v3 + v6;
  v9 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  v10 = sub_23F36195C(v7, 1, v9);
  v11 = sub_23F4DC1F8(v8);
  if (!v10)
  {
    if (!(_DWORD)v11)
    {
      v16 = sub_23F4DCCF8();
      sub_23F4DD144(v16);
      sub_23F384120();
      sub_23F4DC584();
      goto LABEL_7;
    }
    sub_23F4DCCA0(v11, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    goto LABEL_6;
  }
  if ((_DWORD)v11)
  {
LABEL_6:
    v15 = sub_23F35D2E8(&qword_256E75DE0);
    sub_23F4DC608(v15);
    goto LABEL_7;
  }
  *(_QWORD *)(v7 + 24) = sub_23F4DCCF8();
  v12 = *(int *)(v9 + 24);
  v13 = v7 + v12;
  v14 = v8 + v12;
  sub_23F617BA0();
  sub_23F4DC8D8(v13, v14);
  sub_23F4DC15C();
LABEL_7:
  sub_23F383568();
}

void sub_23F4D1FD0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F3C8624();
  sub_23F4DCB88(v0);
  type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  if (sub_23F4DC1CC())
  {
    v1 = sub_23F35D2E8(&qword_256E75DE0);
    sub_23F4DC184(v1);
  }
  else
  {
    sub_23F4DC72C();
    sub_23F4DC15C();
  }
  sub_23F383488();
}

void sub_23F4D2040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F383988();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  sub_23F3C8624();
  sub_23F4DC8D8(v5, v3);
  v6 = *(int *)(v1 + 20);
  v7 = v5 + v6;
  v8 = v3 + v6;
  v9 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  v10 = sub_23F36195C(v7, 1, v9);
  v11 = sub_23F4DC1F8(v8);
  if (!v10)
  {
    if (!(_DWORD)v11)
    {
      sub_23F4DD1C0();
      sub_23F4DD150(*(_QWORD *)(v8 + 16));
      sub_23F4DC584();
      goto LABEL_7;
    }
    sub_23F4DCCA0(v11, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    goto LABEL_6;
  }
  if ((_DWORD)v11)
  {
LABEL_6:
    v12 = sub_23F35D2E8(&qword_256E75DE0);
    sub_23F4DC608(v12);
    goto LABEL_7;
  }
  sub_23F4DD1C0();
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v8 + 16);
  sub_23F4DCC7C();
  sub_23F4DC15C();
LABEL_7:
  sub_23F383568();
}

uint64_t sub_23F4D2110()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D211C(uint64_t a1, uint64_t a2)
{
  return sub_23F4D4D2C(a1, a2);
}

uint64_t sub_23F4D2128()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D2134()
{
  return sub_23F4D4D90();
}

void sub_23F4D2140()
{
  sub_23F4D3378();
}

void sub_23F4D2154(uint64_t a1)
{
  sub_23F4D3450(a1);
}

void sub_23F4D2160()
{
  sub_23F4D34EC();
}

void sub_23F4D2174()
{
  sub_23F4D49E4();
}

void sub_23F4D2188()
{
  sub_23F4D35D0();
}

void sub_23F4D219C()
{
  sub_23F4D4B84();
}

uint64_t sub_23F4D21B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D21BC(uint64_t a1, uint64_t a2)
{
  return sub_23F4D4D2C(a1, a2);
}

uint64_t sub_23F4D21C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D21D4()
{
  return sub_23F4D4D90();
}

void sub_23F4D21E0()
{
  sub_23F4D4DE4();
}

uint64_t *sub_23F4D21F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F618974();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(0);
    if (sub_23F36195C((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F35D2E8(&qword_256E766F8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      v10[8] = v11[8];
      v15 = *(int *)(v12 + 24);
      v16 = (uint64_t *)&v10[v15];
      v17 = (uint64_t *)&v11[v15];
      sub_23F617BA0();
      v8(v16, v17, v7);
      v18 = *(int *)(v12 + 28);
      v19 = &v10[v18];
      v20 = &v11[v18];
      v21 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
      if (sub_23F36195C((uint64_t)v20, 1, v21))
      {
        v22 = sub_23F35D2E8(&qword_256E76708);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        *v19 = *v20;
        *((_BYTE *)v19 + 8) = *((_BYTE *)v20 + 8);
        *((_DWORD *)v19 + 3) = *((_DWORD *)v20 + 3);
        v8((_QWORD *)((char *)v19 + *(int *)(v21 + 24)), (_QWORD *)((char *)v20 + *(int *)(v21 + 24)), v7);
        sub_23F36196C((uint64_t)v19, 0, 1, v21);
      }
      sub_23F36196C((uint64_t)v10, 0, 1, v12);
    }
    v23 = *(int *)(a3 + 24);
    v24 = (uint64_t *)((char *)a1 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
    if (sub_23F36195C((uint64_t)v25, 1, v26))
    {
      v27 = sub_23F35D2E8(&qword_256E76708);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      *v24 = *v25;
      *((_BYTE *)v24 + 8) = *((_BYTE *)v25 + 8);
      *((_DWORD *)v24 + 3) = *((_DWORD *)v25 + 3);
      v8((_QWORD *)((char *)v24 + *(int *)(v26 + 24)), (_QWORD *)((char *)v25 + *(int *)(v26 + 24)), v7);
      sub_23F36196C((uint64_t)v24, 0, 1, v26);
    }
  }
  return a1;
}

uint64_t sub_23F4D2440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(uint64_t, uint64_t);

  v4 = sub_23F618974();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v12(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(0);
  if (!sub_23F36195C(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    v12(v5 + *(int *)(v6 + 24), v4);
    v7 = v5 + *(int *)(v6 + 28);
    v8 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
    if (!sub_23F36195C(v7, 1, v8))
      v12(v7 + *(int *)(v8 + 24), v4);
  }
  v9 = a1 + *(int *)(a2 + 24);
  v10 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  result = sub_23F36195C(v9, 1, v10);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v9 + *(int *)(v10 + 24), v4);
  return result;
}

uint64_t sub_23F4D256C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23F618974();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_BYTE *)(a1 + v8);
  v10 = (_BYTE *)(a2 + v8);
  v11 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(0);
  if (sub_23F36195C((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E766F8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    v13 = *(int *)(v11 + 24);
    v14 = &v9[v13];
    v15 = &v10[v13];
    sub_23F617BA0();
    v7((uint64_t)v14, (uint64_t)v15, v6);
    v16 = *(int *)(v11 + 28);
    v17 = &v9[v16];
    v18 = &v10[v16];
    v19 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
    if (sub_23F36195C((uint64_t)v18, 1, v19))
    {
      v20 = sub_23F35D2E8(&qword_256E76708);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      *v17 = *v18;
      *((_BYTE *)v17 + 8) = *((_BYTE *)v18 + 8);
      *((_DWORD *)v17 + 3) = *((_DWORD *)v18 + 3);
      v7((uint64_t)v17 + *(int *)(v19 + 24), (uint64_t)v18 + *(int *)(v19 + 24), v6);
      sub_23F36196C((uint64_t)v17, 0, 1, v19);
    }
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
  }
  v21 = *(int *)(a3 + 24);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  if (sub_23F36195C((uint64_t)v23, 1, v24))
  {
    v25 = sub_23F35D2E8(&qword_256E76708);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v22 = *v23;
    *((_BYTE *)v22 + 8) = *((_BYTE *)v23 + 8);
    *((_DWORD *)v22 + 3) = *((_DWORD *)v23 + 3);
    v7((uint64_t)v22 + *(int *)(v24 + 24), (uint64_t)v23 + *(int *)(v24 + 24), v6);
    sub_23F36196C((uint64_t)v22, 0, 1, v24);
  }
  return a1;
}

uint64_t sub_23F4D278C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F618974();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(0);
  v13 = sub_23F36195C(v10, 1, v12);
  v14 = sub_23F36195C(v11, 1, v12);
  if (!v13)
  {
    if (!v14)
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
      v8(v10 + *(int *)(v12 + 24), v11 + *(int *)(v12 + 24), v6);
      v27 = *(int *)(v12 + 28);
      v28 = v10 + v27;
      v29 = v11 + v27;
      v30 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
      v31 = sub_23F36195C(v28, 1, v30);
      v32 = sub_23F36195C(v29, 1, v30);
      if (v31)
      {
        if (!v32)
        {
          v33 = *(_QWORD *)v29;
          *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
          *(_QWORD *)v28 = v33;
          *(_DWORD *)(v28 + 12) = *(_DWORD *)(v29 + 12);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v28 + *(int *)(v30 + 24), v29 + *(int *)(v30 + 24), v6);
          sub_23F36196C(v28, 0, 1, v30);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v32)
        {
          v45 = *(_QWORD *)v29;
          *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
          *(_QWORD *)v28 = v45;
          *(_DWORD *)(v28 + 12) = *(_DWORD *)(v29 + 12);
          v8(v28 + *(int *)(v30 + 24), v29 + *(int *)(v30 + 24), v6);
          goto LABEL_14;
        }
        sub_23F3663AC(v28, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E76708) - 8) + 64);
      v25 = (void *)v28;
      v26 = (const void *)v29;
LABEL_8:
      memcpy(v25, v26, v24);
      goto LABEL_14;
    }
    sub_23F3663AC(v10, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate);
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E766F8) - 8) + 64);
    v25 = (void *)v10;
    v26 = (const void *)v11;
    goto LABEL_8;
  }
  if (v14)
    goto LABEL_7;
  v46 = v7;
  v47 = v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  v15 = *(int *)(v12 + 24);
  v16 = v10 + v15;
  v17 = v11 + v15;
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  sub_23F617BA0();
  v18(v16, v17, v6);
  v19 = *(int *)(v12 + 28);
  v20 = (_QWORD *)(v10 + v19);
  v21 = (uint64_t *)(v11 + v19);
  v22 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  if (sub_23F36195C((uint64_t)v21, 1, v22))
  {
    v23 = sub_23F35D2E8(&qword_256E76708);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v34 = *v21;
    *((_BYTE *)v20 + 8) = *((_BYTE *)v21 + 8);
    *v20 = v34;
    *((_DWORD *)v20 + 3) = *((_DWORD *)v21 + 3);
    v18((uint64_t)v20 + *(int *)(v22 + 24), (uint64_t)v21 + *(int *)(v22 + 24), v6);
    sub_23F36196C((uint64_t)v20, 0, 1, v22);
  }
  v8 = v47;
  sub_23F36196C(v10, 0, 1, v12);
  v7 = v46;
LABEL_14:
  v35 = *(int *)(a3 + 24);
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  v39 = sub_23F36195C(v36, 1, v38);
  v40 = sub_23F36195C(v37, 1, v38);
  if (!v39)
  {
    if (!v40)
    {
      v44 = *(_QWORD *)v37;
      *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
      *(_QWORD *)v36 = v44;
      *(_DWORD *)(v36 + 12) = *(_DWORD *)(v37 + 12);
      v8(v36 + *(int *)(v38 + 24), v37 + *(int *)(v38 + 24), v6);
      return a1;
    }
    sub_23F3663AC(v36, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
    goto LABEL_19;
  }
  if (v40)
  {
LABEL_19:
    v42 = sub_23F35D2E8(&qword_256E76708);
    memcpy((void *)v36, (const void *)v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    return a1;
  }
  v41 = *(_QWORD *)v37;
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
  *(_QWORD *)v36 = v41;
  *(_DWORD *)(v36 + 12) = *(_DWORD *)(v37 + 12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v36 + *(int *)(v38 + 24), v37 + *(int *)(v38 + 24), v6);
  sub_23F36196C(v36, 0, 1, v38);
  return a1;
}

_BYTE *sub_23F4D2B74(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23F618974();
  v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(0);
  if (sub_23F36195C((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E766F8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    v7(&v9[*(int *)(v11 + 24)], &v10[*(int *)(v11 + 24)], v6);
    v13 = *(int *)(v11 + 28);
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
    if (sub_23F36195C((uint64_t)v15, 1, v16))
    {
      v17 = sub_23F35D2E8(&qword_256E76708);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      *((_BYTE *)v14 + 8) = *((_BYTE *)v15 + 8);
      *((_DWORD *)v14 + 3) = *((_DWORD *)v15 + 3);
      v7((_BYTE *)v14 + *(int *)(v16 + 24), (_BYTE *)v15 + *(int *)(v16 + 24), v6);
      sub_23F36196C((uint64_t)v14, 0, 1, v16);
    }
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
  }
  v18 = *(int *)(a3 + 24);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  if (sub_23F36195C((uint64_t)v20, 1, v21))
  {
    v22 = sub_23F35D2E8(&qword_256E76708);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    *((_BYTE *)v19 + 8) = *((_BYTE *)v20 + 8);
    *((_DWORD *)v19 + 3) = *((_DWORD *)v20 + 3);
    v7((_BYTE *)v19 + *(int *)(v21 + 24), (_BYTE *)v20 + *(int *)(v21 + 24), v6);
    sub_23F36196C((uint64_t)v19, 0, 1, v21);
  }
  return a1;
}

uint64_t sub_23F4D2D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23F618974();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(0);
  v13 = sub_23F36195C(v10, 1, v12);
  v14 = sub_23F36195C(v11, 1, v12);
  if (!v13)
  {
    if (!v14)
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
      v8(v10 + *(int *)(v12 + 24), v11 + *(int *)(v12 + 24), v6);
      v24 = *(int *)(v12 + 28);
      v25 = v10 + v24;
      v26 = v11 + v24;
      v27 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
      v28 = sub_23F36195C(v25, 1, v27);
      v29 = sub_23F36195C(v26, 1, v27);
      if (v28)
      {
        if (!v29)
        {
          *(_QWORD *)v25 = *(_QWORD *)v26;
          *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
          *(_DWORD *)(v25 + 12) = *(_DWORD *)(v26 + 12);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v25 + *(int *)(v27 + 24), v26 + *(int *)(v27 + 24), v6);
          sub_23F36196C(v25, 0, 1, v27);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          *(_QWORD *)v25 = *(_QWORD *)v26;
          *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
          *(_DWORD *)(v25 + 12) = *(_DWORD *)(v26 + 12);
          v8(v25 + *(int *)(v27 + 24), v26 + *(int *)(v27 + 24), v6);
          goto LABEL_14;
        }
        sub_23F3663AC(v25, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E76708) - 8) + 64);
      v22 = (void *)v25;
      v23 = (const void *)v26;
LABEL_8:
      memcpy(v22, v23, v21);
      goto LABEL_14;
    }
    sub_23F3663AC(v10, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate);
LABEL_7:
    v21 = *(_QWORD *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E766F8) - 8) + 64);
    v22 = (void *)v10;
    v23 = (const void *)v11;
    goto LABEL_8;
  }
  if (v14)
    goto LABEL_7;
  v38 = v7;
  v39 = v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v15(v10 + *(int *)(v12 + 24), v11 + *(int *)(v12 + 24), v6);
  v16 = *(int *)(v12 + 28);
  v17 = (_QWORD *)(v10 + v16);
  v18 = (_QWORD *)(v11 + v16);
  v19 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  if (sub_23F36195C((uint64_t)v18, 1, v19))
  {
    v20 = sub_23F35D2E8(&qword_256E76708);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v17 = *v18;
    *((_BYTE *)v17 + 8) = *((_BYTE *)v18 + 8);
    *((_DWORD *)v17 + 3) = *((_DWORD *)v18 + 3);
    v15((uint64_t)v17 + *(int *)(v19 + 24), (uint64_t)v18 + *(int *)(v19 + 24), v6);
    sub_23F36196C((uint64_t)v17, 0, 1, v19);
  }
  v8 = v39;
  sub_23F36196C(v10, 0, 1, v12);
  v7 = v38;
LABEL_14:
  v30 = *(int *)(a3 + 24);
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  v34 = sub_23F36195C(v31, 1, v33);
  v35 = sub_23F36195C(v32, 1, v33);
  if (!v34)
  {
    if (!v35)
    {
      *(_QWORD *)v31 = *(_QWORD *)v32;
      *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
      *(_DWORD *)(v31 + 12) = *(_DWORD *)(v32 + 12);
      v8(v31 + *(int *)(v33 + 24), v32 + *(int *)(v33 + 24), v6);
      return a1;
    }
    sub_23F3663AC(v31, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
    goto LABEL_19;
  }
  if (v35)
  {
LABEL_19:
    v36 = sub_23F35D2E8(&qword_256E76708);
    memcpy((void *)v31, (const void *)v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  *(_DWORD *)(v31 + 12) = *(_DWORD *)(v32 + 12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v31 + *(int *)(v33 + 24), v32 + *(int *)(v33 + 24), v6);
  sub_23F36196C(v31, 0, 1, v33);
  return a1;
}

uint64_t sub_23F4D315C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D3168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F4D317C(a1, a2, a3, &qword_256E766F8);
}

uint64_t sub_23F4D317C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F3C8624();
  sub_23F3F9C58();
  if (v10)
  {
    v8 = sub_23F3F9CD0();
  }
  else
  {
    sub_23F35D2E8(a4);
    sub_23F3F9C58();
    if (v10)
    {
      v9 = v11;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = sub_23F384980();
      v12 = *(int *)(a3 + 24);
    }
    v8 = a1 + v12;
  }
  return sub_23F36195C(v8, a2, v9);
}

uint64_t sub_23F4D31FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D3208()
{
  return sub_23F4D321C();
}

uint64_t sub_23F4D321C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F3C8624();
  sub_23F4DCD18();
  if (v0)
  {
    sub_23F4DCCEC();
  }
  else
  {
    sub_23F49BA24();
    sub_23F4DCD18();
    if (!v0)
      sub_23F384980();
  }
  sub_23F4DC5B8();
  return sub_23F38359C(v1, v2, v3, v4);
}

void sub_23F4D3290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4D32B4(a1, a2, a3, qword_256E77288, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate);
}

void sub_23F4D32B4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_23F4DC7A0();
  if (v7 <= 0x3F)
  {
    sub_23F4AED90(319, a4, a5);
    if (v8 <= 0x3F)
    {
      sub_23F4DCB50();
      if (v9 <= 0x3F)
      {
        sub_23F4DC3CC();
        sub_23F4DC9CC();
      }
    }
  }
}

uint64_t sub_23F4D334C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D3358()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4D3364()
{
  sub_23F4D3378();
}

void sub_23F4D3378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F383988();
  v3 = v2;
  sub_23F4DCAE4();
  if ((v6 & 0x20000) != 0)
  {
    sub_23F4DC2A8(*v3);
  }
  else
  {
    v7 = v5;
    v8 = v4;
    sub_23F3C8624();
    sub_23F4DC8D0(v0, (uint64_t)v3);
    v9 = sub_23F4DCE54();
    if (sub_23F41C5E8((uint64_t)v3))
    {
      v10 = sub_23F49BA24();
      sub_23F4DCA30(v8, v11, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      sub_23F4DCAC4();
      sub_23F4DC8D0(v7, v1);
      if (sub_23F4DC304(*(int *)(v9 + 28)))
      {
        v12 = sub_23F35D2E8(&qword_256E76708);
        sub_23F4DC61C(v12);
      }
      else
      {
        sub_23F4DC760();
        sub_23F4DC648();
      }
      sub_23F4DC940();
    }
  }
  sub_23F383568();
}

void sub_23F4D3444(uint64_t a1)
{
  sub_23F4D3450(a1);
}

void sub_23F4D3450(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  v2 = sub_23F3C8624();
  sub_23F4DCB7C(a1, v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));
  v4 = sub_23F383850();
  if (sub_23F4DC414(v4)
    || (swift_bridgeObjectRelease(),
        v5 = sub_23F4DC6C0(),
        v6(v5),
        v7 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0),
        sub_23F4DC414(v7)))
  {
    sub_23F38454C();
  }
  else
  {
    v8 = sub_23F4DC6C0();
    sub_23F4DC348(v8, v9, v10);
  }
}

void sub_23F4D34D8()
{
  sub_23F4D34EC();
}

void sub_23F4D34EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F383988();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_23F3C8624();
  sub_23F4DC8D0(v8, v6);
  v9 = sub_23F4DCE54();
  if (sub_23F41C5E8(v6))
  {
    v10 = sub_23F49BA24();
    sub_23F4DCA30(v4, v11, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    sub_23F4DCAC4();
    sub_23F4DC8D0(v2, v0);
    if (sub_23F4DC304(*(int *)(v9 + 28)))
    {
      v12 = sub_23F35D2E8(&qword_256E76708);
      sub_23F4DC61C(v12);
    }
    else
    {
      sub_23F4DC760();
      sub_23F4DC648();
    }
    sub_23F4DC940();
  }
  sub_23F383568();
}

void sub_23F4D35A8()
{
  sub_23F4D49E4();
}

void sub_23F4D35BC()
{
  sub_23F4D35D0();
}

void sub_23F4D35D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F383988();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_23F3C8624();
  sub_23F4DC8D0(v7, v5);
  v8 = *(int *)(v3 + 20);
  v9 = (_BYTE *)(v7 + v8);
  v10 = (_BYTE *)(v5 + v8);
  v11 = sub_23F383850();
  if (sub_23F41C5E8((uint64_t)v10))
  {
    v12 = sub_23F35D2E8(v1);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    sub_23F4DC8D0((uint64_t)&v9[*(int *)(v11 + 24)], (uint64_t)&v10[*(int *)(v11 + 24)]);
    v13 = *(int *)(v11 + 28);
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
    if (sub_23F36195C((uint64_t)v15, 1, v16))
    {
      v17 = sub_23F35D2E8(&qword_256E76708);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      *((_BYTE *)v14 + 8) = *((_BYTE *)v15 + 8);
      *((_DWORD *)v14 + 3) = *((_DWORD *)v15 + 3);
      sub_23F4DC8D0((uint64_t)v14 + *(int *)(v16 + 24), (uint64_t)v15 + *(int *)(v16 + 24));
      sub_23F36196C((uint64_t)v14, 0, 1, v16);
    }
    sub_23F4DC940();
  }
  sub_23F383568();
}

void sub_23F4D3710()
{
  sub_23F4D4B84();
}

uint64_t sub_23F4D3724()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D3730(uint64_t a1, uint64_t a2)
{
  return sub_23F4D4D2C(a1, a2);
}

uint64_t sub_23F4D373C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D3748()
{
  return sub_23F4D4D90();
}

void sub_23F4D3754()
{
  sub_23F4D4DE4();
}

uint64_t sub_23F4D3780()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D3790()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D37BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4D37C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4D4850(a1, a2, a3);
}

uint64_t sub_23F4D37D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4D37E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_23F4D48D8(a1, a2, a3, a4);
}

void sub_23F4D37EC()
{
  sub_23F4D4958();
}

uint64_t *sub_23F4D3800(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F618974();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = *(int *)(a3 + 24);
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (char *)a1 + v10;
    v15 = (char *)a2 + v10;
    v16 = type metadata accessor for ResponseGenerationOverrides_ListPredicate(0);
    sub_23F617BA0();
    if (sub_23F36195C((uint64_t)v15, 1, v16))
    {
      v17 = sub_23F35D2E8(&qword_256E76768);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v14[8] = v15[8];
      v19 = *(int *)(v16 + 24);
      v20 = (uint64_t *)&v14[v19];
      v21 = (uint64_t *)&v15[v19];
      sub_23F617BA0();
      v8(v20, v21, v7);
      v22 = *(int *)(v16 + 28);
      v23 = &v14[v22];
      v24 = &v15[v22];
      v25 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
      if (sub_23F36195C((uint64_t)v24, 1, v25))
      {
        v26 = sub_23F35D2E8(&qword_256E76708);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        *v23 = *v24;
        *((_BYTE *)v23 + 8) = *((_BYTE *)v24 + 8);
        *((_DWORD *)v23 + 3) = *((_DWORD *)v24 + 3);
        v8((_QWORD *)((char *)v23 + *(int *)(v25 + 24)), (_QWORD *)((char *)v24 + *(int *)(v25 + 24)), v7);
        sub_23F36196C((uint64_t)v23, 0, 1, v25);
      }
      sub_23F36196C((uint64_t)v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t sub_23F4D39CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v4 = sub_23F618974();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v10(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for ResponseGenerationOverrides_ListPredicate(0);
  result = sub_23F36195C(v5, 1, v6);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v10(v5 + *(int *)(v6 + 24), v4);
    v8 = v5 + *(int *)(v6 + 28);
    v9 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
    result = sub_23F36195C(v8, 1, v9);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8 + *(int *)(v9 + 24), v4);
  }
  return result;
}

uint64_t sub_23F4D3AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23F618974();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_BYTE *)(a1 + v9);
  v14 = (_BYTE *)(a2 + v9);
  v15 = type metadata accessor for ResponseGenerationOverrides_ListPredicate(0);
  sub_23F617BA0();
  if (sub_23F36195C((uint64_t)v14, 1, v15))
  {
    v16 = sub_23F35D2E8(&qword_256E76768);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v17 = *(int *)(v15 + 24);
    v18 = &v13[v17];
    v19 = &v14[v17];
    sub_23F617BA0();
    v7((uint64_t)v18, (uint64_t)v19, v6);
    v20 = *(int *)(v15 + 28);
    v21 = &v13[v20];
    v22 = &v14[v20];
    v23 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
    if (sub_23F36195C((uint64_t)v22, 1, v23))
    {
      v24 = sub_23F35D2E8(&qword_256E76708);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      *v21 = *v22;
      *((_BYTE *)v21 + 8) = *((_BYTE *)v22 + 8);
      *((_DWORD *)v21 + 3) = *((_DWORD *)v22 + 3);
      v7((uint64_t)v21 + *(int *)(v23 + 24), (uint64_t)v22 + *(int *)(v23 + 24), v6);
      sub_23F36196C((uint64_t)v21, 0, 1, v23);
    }
    sub_23F36196C((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_23F4D3C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;

  v6 = sub_23F618974();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for ResponseGenerationOverrides_ListPredicate(0);
  v16 = sub_23F36195C(v13, 1, v15);
  v17 = sub_23F36195C(v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
      v18 = *(int *)(v15 + 24);
      v19 = v13 + v18;
      v20 = v14 + v18;
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      sub_23F617BA0();
      v21(v19, v20, v6);
      v22 = *(int *)(v15 + 28);
      v23 = (_QWORD *)(v13 + v22);
      v24 = (uint64_t *)(v14 + v22);
      v25 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
      if (sub_23F36195C((uint64_t)v24, 1, v25))
      {
        v26 = sub_23F35D2E8(&qword_256E76708);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v39 = *v24;
        *((_BYTE *)v23 + 8) = *((_BYTE *)v24 + 8);
        *v23 = v39;
        *((_DWORD *)v23 + 3) = *((_DWORD *)v24 + 3);
        v21((uint64_t)v23 + *(int *)(v25 + 24), (uint64_t)v24 + *(int *)(v25 + 24), v6);
        sub_23F36196C((uint64_t)v23, 0, 1, v25);
      }
      v37 = v13;
      v38 = v15;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v17)
  {
    sub_23F3663AC(v13, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
LABEL_7:
    v27 = *(_QWORD *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E76768) - 8) + 64);
    v28 = (void *)v13;
    v29 = (const void *)v14;
    goto LABEL_8;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v8(v13 + *(int *)(v15 + 24), v14 + *(int *)(v15 + 24), v6);
  v30 = *(int *)(v15 + 28);
  v31 = v13 + v30;
  v32 = v14 + v30;
  v33 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  v34 = sub_23F36195C(v31, 1, v33);
  v35 = sub_23F36195C(v32, 1, v33);
  if (v34)
  {
    if (!v35)
    {
      v36 = *(_QWORD *)v32;
      *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
      *(_QWORD *)v31 = v36;
      *(_DWORD *)(v31 + 12) = *(_DWORD *)(v32 + 12);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v31 + *(int *)(v33 + 24), v32 + *(int *)(v33 + 24), v6);
      v37 = v31;
      v38 = v33;
LABEL_14:
      sub_23F36196C(v37, 0, 1, v38);
      return a1;
    }
  }
  else
  {
    if (!v35)
    {
      v41 = *(_QWORD *)v32;
      *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
      *(_QWORD *)v31 = v41;
      *(_DWORD *)(v31 + 12) = *(_DWORD *)(v32 + 12);
      v8(v31 + *(int *)(v33 + 24), v32 + *(int *)(v33 + 24), v6);
      return a1;
    }
    sub_23F3663AC(v31, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
  }
  v27 = *(_QWORD *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E76708) - 8) + 64);
  v28 = (void *)v31;
  v29 = (const void *)v32;
LABEL_8:
  memcpy(v28, v29, v27);
  return a1;
}

_BYTE *sub_23F4D3F64(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23F618974();
  v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for ResponseGenerationOverrides_ListPredicate(0);
  if (sub_23F36195C((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E76768);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    v7(&v9[*(int *)(v11 + 24)], &v10[*(int *)(v11 + 24)], v6);
    v13 = *(int *)(v11 + 28);
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
    if (sub_23F36195C((uint64_t)v15, 1, v16))
    {
      v17 = sub_23F35D2E8(&qword_256E76708);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      *((_BYTE *)v14 + 8) = *((_BYTE *)v15 + 8);
      *((_DWORD *)v14 + 3) = *((_DWORD *)v15 + 3);
      v7((_BYTE *)v14 + *(int *)(v16 + 24), (_BYTE *)v15 + *(int *)(v16 + 24), v6);
      sub_23F36196C((uint64_t)v14, 0, 1, v16);
    }
    sub_23F36196C((uint64_t)v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_23F4D40E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_23F618974();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 24);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for ResponseGenerationOverrides_ListPredicate(0);
  v18 = sub_23F36195C(v15, 1, v17);
  v19 = sub_23F36195C(v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
      v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
      v20(v15 + *(int *)(v17 + 24), v16 + *(int *)(v17 + 24), v6);
      v21 = *(int *)(v17 + 28);
      v22 = (_QWORD *)(v15 + v21);
      v23 = (_QWORD *)(v16 + v21);
      v24 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
      if (sub_23F36195C((uint64_t)v23, 1, v24))
      {
        v25 = sub_23F35D2E8(&qword_256E76708);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        *v22 = *v23;
        *((_BYTE *)v22 + 8) = *((_BYTE *)v23 + 8);
        *((_DWORD *)v22 + 3) = *((_DWORD *)v23 + 3);
        v20((uint64_t)v22 + *(int *)(v24 + 24), (uint64_t)v23 + *(int *)(v24 + 24), v6);
        sub_23F36196C((uint64_t)v22, 0, 1, v24);
      }
      v35 = v15;
      v36 = v17;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v19)
  {
    sub_23F3663AC(v15, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
LABEL_7:
    v26 = *(_QWORD *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E76768) - 8) + 64);
    v27 = (void *)v15;
    v28 = (const void *)v16;
    goto LABEL_8;
  }
  *(_QWORD *)v15 = *(_QWORD *)v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v8(v15 + *(int *)(v17 + 24), v16 + *(int *)(v17 + 24), v6);
  v29 = *(int *)(v17 + 28);
  v30 = v15 + v29;
  v31 = v16 + v29;
  v32 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  v33 = sub_23F36195C(v30, 1, v32);
  v34 = sub_23F36195C(v31, 1, v32);
  if (v33)
  {
    if (!v34)
    {
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
      *(_DWORD *)(v30 + 12) = *(_DWORD *)(v31 + 12);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v30 + *(int *)(v32 + 24), v31 + *(int *)(v32 + 24), v6);
      v35 = v30;
      v36 = v32;
LABEL_14:
      sub_23F36196C(v35, 0, 1, v36);
      return a1;
    }
  }
  else
  {
    if (!v34)
    {
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
      *(_DWORD *)(v30 + 12) = *(_DWORD *)(v31 + 12);
      v8(v30 + *(int *)(v32 + 24), v31 + *(int *)(v32 + 24), v6);
      return a1;
    }
    sub_23F3663AC(v30, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
  }
  v26 = *(_QWORD *)(*(_QWORD *)(sub_23F35D2E8(&qword_256E76708) - 8) + 64);
  v27 = (void *)v30;
  v28 = (const void *)v31;
LABEL_8:
  memcpy(v27, v28, v26);
  return a1;
}

uint64_t sub_23F4D43C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4D43D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4D4850(a1, a2, a3);
}

uint64_t sub_23F4D43E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4D43EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_23F4D48D8(a1, a2, a3, a4);
}

void sub_23F4D43F8()
{
  sub_23F4D4958();
}

void sub_23F4D440C()
{
  uint64_t *v0;
  uint64_t *v1;
  void *v2;
  int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F383988();
  v1 = v0;
  sub_23F4DCAE4();
  if ((v3 & 0x20000) != 0)
  {
    sub_23F4DC2A8(*v1);
  }
  else
  {
    v4 = v2;
    v5 = sub_23F3C8624();
    sub_23F4DCC08(v5);
    sub_23F4DC814();
    if (sub_23F4DC894())
    {
      v6 = sub_23F35D2E8(&qword_256E75DE0);
      sub_23F4DCA30(v4, v7, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      sub_23F4DC7EC();
      sub_23F4DCFFC();
      sub_23F4DCE0C();
    }
  }
  sub_23F383568();
}

void sub_23F4D4488(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v2 = sub_23F3C8624();
  sub_23F4DCB7C(a1, v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  if (sub_23F4DC414(v4))
  {
    sub_23F38454C();
  }
  else
  {
    swift_bridgeObjectRelease();
    v5 = sub_23F4DC6C0();
    sub_23F4DC348(v5, v6, v7);
  }
}

void sub_23F4D4500()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F383988();
  v1 = v0;
  v2 = sub_23F3C8624();
  sub_23F4DCC08(v2);
  sub_23F4DC814();
  if (sub_23F4DC894())
  {
    v3 = sub_23F35D2E8(&qword_256E75DE0);
    sub_23F4DCA30(v1, v4, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  }
  else
  {
    sub_23F4DC7EC();
    sub_23F4DCFFC();
    sub_23F4DCE0C();
  }
  sub_23F383568();
}

void sub_23F4D456C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23F3C8624();
  sub_23F4DCB88(v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  if (sub_23F4DC1CC())
  {
    v7 = sub_23F35D2E8(&qword_256E75DE0);
    sub_23F4DC184(v7);
  }
  else
  {
    sub_23F4DC72C();
    sub_23F4DC15C();
  }
  sub_23F383488();
}

uint64_t sub_23F4D45E4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4D45F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4D4850(a1, a2, a3);
}

uint64_t sub_23F4D45FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4D4608(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_23F4D48D8(a1, a2, a3, a4);
}

void sub_23F4D4614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F383988();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  sub_23F3C8624();
  sub_23F4DC5AC(v5);
  v6 = *(int *)(v1 + 20);
  v7 = (_QWORD *)(v5 + v6);
  v8 = (_QWORD *)(v3 + v6);
  *v7 = *v8;
  v7[1] = v8[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v9 = *(int *)(v1 + 24);
  v10 = v5 + v9;
  v11 = v3 + v9;
  v12 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  v13 = sub_23F36195C(v10, 1, v12);
  v14 = sub_23F4DC1CC();
  if (!v13)
  {
    if (!(_DWORD)v14)
    {
      v17 = sub_23F4DCC2C();
      sub_23F4DD144(v17);
      sub_23F384120();
      sub_23F4DC78C(v10 + *(int *)(v12 + 24), v11 + *(int *)(v12 + 24));
      goto LABEL_7;
    }
    sub_23F4DCCA0(v14, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    goto LABEL_6;
  }
  if ((_DWORD)v14)
  {
LABEL_6:
    v16 = sub_23F35D2E8(&qword_256E75DE0);
    sub_23F4DC184(v16);
    goto LABEL_7;
  }
  *(_QWORD *)(v10 + 24) = sub_23F4DCC2C();
  v15 = v10 + *(int *)(v12 + 24);
  sub_23F617BA0();
  sub_23F4DC5AC(v15);
  sub_23F4DC15C();
LABEL_7:
  sub_23F383568();
}

void sub_23F4D4728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F383988();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = sub_23F3C8624();
  v7 = *(_QWORD *)(v6 - 8);
  sub_23F4DC5AC(v5);
  sub_23F4DCEE8((uint64_t *)(v3 + *(int *)(v1 + 20)));
  v8 = *(int *)(v1 + 24);
  v9 = v5 + v8;
  v10 = v3 + v8;
  v11 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  v12 = sub_23F36195C(v9, 1, v11);
  v13 = sub_23F4DC1CC();
  if (!v12)
  {
    if (!(_DWORD)v13)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
      sub_23F4DD150(*(_QWORD *)(v10 + 16));
      sub_23F4DC78C(v9 + *(int *)(v11 + 24), v10 + *(int *)(v11 + 24));
      goto LABEL_7;
    }
    sub_23F4DCCA0(v13, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    goto LABEL_6;
  }
  if ((_DWORD)v13)
  {
LABEL_6:
    v14 = sub_23F35D2E8(&qword_256E75DE0);
    sub_23F4DC184(v14);
    goto LABEL_7;
  }
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(v10 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v9 + *(int *)(v11 + 24), v10 + *(int *)(v11 + 24), v6);
  sub_23F4DC15C();
LABEL_7:
  sub_23F383568();
}

uint64_t sub_23F4D4838()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4D4844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4D4850(a1, a2, a3);
}

void sub_23F4D4850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3C8624();
  sub_23F3F9C58();
  if (v6)
  {
    v7 = sub_23F3F9CD0();
  }
  else
  {
    if ((_DWORD)a2 == 2147483646)
    {
      sub_23F4DC510(a1 + *(int *)(a3 + 20));
      sub_23F362B80();
      return;
    }
    v8 = sub_23F384980();
    v7 = a1 + *(int *)(a3 + 24);
  }
  sub_23F3B1A44(v7, a2, v8);
}

uint64_t sub_23F4D48C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4D48CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_23F4D48D8(a1, a2, a3, a4);
}

void sub_23F4D48D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F3C8624();
  sub_23F4DCD18();
  if (v6)
  {
    sub_23F4DCCEC();
  }
  else
  {
    if (a3 == 2147483646)
    {
      sub_23F4DCF2C(*(int *)(a4 + 20));
      return;
    }
    sub_23F384980();
  }
  sub_23F4DC5B8();
  sub_23F38359C(v7, v8, v9, v10);
}

void sub_23F4D4958()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F4DC7A0();
  if (v0 <= 0x3F)
  {
    sub_23F4DCB50();
    if (v1 <= 0x3F)
    {
      sub_23F4DC3CC();
      sub_23F4DC9CC();
    }
  }
}

uint64_t sub_23F4D49C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D49D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4D49E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = *(_QWORD *)(sub_23F3C8624() - 8);
  sub_23F4DCC4C(v6, v4);
  v8 = sub_23F4DCE2C();
  v9 = sub_23F36195C(v2, 1, v8);
  v10 = sub_23F4DC894();
  if (v9)
  {
    if (!v10)
    {
      *(_QWORD *)v2 = *v0;
      *(_BYTE *)(v2 + 8) = *((_BYTE *)v0 + 8);
      v11 = *(int *)(v8 + 24);
      v12 = v2 + v11;
      v13 = (uint64_t)v0 + v11;
      sub_23F617BA0();
      sub_23F4DCC54(v12, v13);
      v14 = *(int *)(v8 + 28);
      v15 = v2 + v14;
      if (sub_23F4DC304(v14))
      {
        v16 = sub_23F35D2E8(&qword_256E76708);
        sub_23F4DC61C(v16);
      }
      else
      {
        v29 = *v0;
        *(_BYTE *)(v15 + 8) = *((_BYTE *)v0 + 8);
        *(_QWORD *)v15 = v29;
        sub_23F4DCB34();
        sub_23F4DC648();
      }
      v25 = sub_23F4DD108();
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_23F4DD0E8();
LABEL_7:
    sub_23F49BA24();
    v17 = (void *)sub_23F4DD1E8();
    goto LABEL_8;
  }
  *(_QWORD *)v2 = *v0;
  sub_23F617BA0();
  sub_23F384120();
  sub_23F4DCBA4();
  v20 = v2 + *(int *)(v8 + 28);
  v21 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  v22 = sub_23F36195C(v20, 1, v21);
  v23 = sub_23F4DC1CC();
  if (v22)
  {
    if (!v23)
    {
      v24 = sub_23F4DCA08();
      (*(void (**)(uint64_t))(v7 + 16))(v24);
      v25 = sub_23F4DD0F4();
LABEL_14:
      sub_23F36196C(v25, v26, v27, v28);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v23)
    {
      v30 = sub_23F4DCA08();
      sub_23F4DCC4C(v30, v31);
      goto LABEL_15;
    }
    sub_23F3663AC(v20, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
  }
  sub_23F35D2E8(&qword_256E76708);
  v17 = (void *)sub_23F4DD1D4();
LABEL_8:
  memcpy(v17, v18, v19);
LABEL_15:
  sub_23F362948();
}

void sub_23F4D4B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = *(_QWORD *)(sub_23F3C8624() - 8);
  sub_23F4DCC4C(v6, v4);
  v8 = sub_23F4DCE2C();
  v9 = sub_23F36195C(v2, 1, v8);
  v10 = sub_23F4DC894();
  if (v9)
  {
    if (!v10)
    {
      *(_QWORD *)v2 = *(_QWORD *)v0;
      *(_BYTE *)(v2 + 8) = *(_BYTE *)(v0 + 8);
      sub_23F4DCC54(v2 + *(int *)(v8 + 24), v0 + *(int *)(v8 + 24));
      v11 = *(int *)(v8 + 28);
      v12 = v2 + v11;
      if (sub_23F4DC304(v11))
      {
        v13 = sub_23F35D2E8(&qword_256E76708);
        sub_23F4DC61C(v13);
      }
      else
      {
        *(_QWORD *)v12 = *(_QWORD *)v0;
        *(_BYTE *)(v12 + 8) = *(_BYTE *)(v0 + 8);
        sub_23F4DCB34();
        sub_23F4DC648();
      }
      v22 = sub_23F4DD108();
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_23F4DD0E8();
LABEL_7:
    sub_23F49BA24();
    v14 = (void *)sub_23F4DD1E8();
    goto LABEL_8;
  }
  *(_QWORD *)v2 = *(_QWORD *)v0;
  swift_bridgeObjectRelease();
  sub_23F4DCBA4();
  v17 = v2 + *(int *)(v8 + 28);
  v18 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  v19 = sub_23F36195C(v17, 1, v18);
  v20 = sub_23F4DC1CC();
  if (v19)
  {
    if (!v20)
    {
      v21 = sub_23F4DC9E0();
      (*(void (**)(uint64_t))(v7 + 32))(v21);
      v22 = sub_23F4DD0F4();
LABEL_14:
      sub_23F36196C(v22, v23, v24, v25);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v20)
    {
      v26 = sub_23F4DC9E0();
      sub_23F4DCC4C(v26, v27);
      goto LABEL_15;
    }
    sub_23F3663AC(v17, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
  }
  sub_23F35D2E8(&qword_256E76708);
  v14 = (void *)sub_23F4DD1D4();
LABEL_8:
  memcpy(v14, v15, v16);
LABEL_15:
  sub_23F362948();
}

uint64_t sub_23F4D4D14()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D4D20(uint64_t a1, uint64_t a2)
{
  return sub_23F4D4D2C(a1, a2);
}

uint64_t sub_23F4D4D2C(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F3C8624();
  sub_23F3F9C58();
  if (v3)
  {
    v4 = sub_23F3F9CD0();
  }
  else
  {
    sub_23F384980();
    v4 = sub_23F4DCE20();
  }
  return sub_23F3B1A44(v4, a2, v5);
}

uint64_t sub_23F4D4D78()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4D4D84()
{
  return sub_23F4D4D90();
}

uint64_t sub_23F4D4D90()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F3C8624();
  sub_23F4DCD18();
  if (v0)
  {
    sub_23F4DCCEC();
  }
  else
  {
    sub_23F384980();
    sub_23F4DCE20();
  }
  sub_23F4DC5B8();
  return sub_23F38359C(v1, v2, v3, v4);
}

void sub_23F4D4DE4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F4DC7A0();
  if (v0 <= 0x3F)
  {
    sub_23F4DCB50();
    if (v1 <= 0x3F)
    {
      sub_23F4DC3F0();
      sub_23F4DC9CC();
    }
  }
  sub_23F4DD04C();
}

void sub_23F4D4E44(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F4DCAE4();
  if ((v4 & 0x20000) != 0)
  {
    sub_23F4DC2A8(*a2);
  }
  else
  {
    v5 = v3;
    v6 = sub_23F3C8624();
    sub_23F38F920(v6);
    sub_23F4DD088((uint64_t *)((char *)a2 + *(int *)(v5 + 20)));
  }
  sub_23F362B80();
}

uint64_t sub_23F4D4E94(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F3C8624();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

void sub_23F4D4ED8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = sub_23F3C8624();
  sub_23F3B1DF8(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  sub_23F4DCEF8();
  sub_23F4DD088(v3);
  sub_23F362B80();
}

void sub_23F4D4F20(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  _QWORD *v3;
  _QWORD *v4;

  sub_23F3C8624();
  sub_23F4DCF6C();
  sub_23F3B1DF8(a1, v2);
  sub_23F4DCEF8();
  *v4 = *v3;
  v4[1] = v3[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  sub_23F362B80();
}

void sub_23F4D4F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F3C8624();
  sub_23F3B1DF8(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F362B80();
}

void sub_23F4D4FC8(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t *v3;

  sub_23F3C8624();
  sub_23F4DCF5C();
  sub_23F3B1DF8(a1, v2);
  sub_23F4DCEF8();
  sub_23F4DCEE8(v3);
  sub_23F362B80();
}

uint64_t sub_23F4D5008()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4D5018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F3C8624();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_23F3B1A44(a1, a2, v6);
  }
  else
  {
    sub_23F4DC510(a1 + *(int *)(a3 + 20));
    sub_23F362B80();
  }
}

uint64_t sub_23F4D5070()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4D5080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F3C8624();
  sub_23F3F9C68();
  if (v5)
  {
    sub_23F4DC5B8();
    sub_23F38370C(v6, v7, v8, v9);
  }
  else
  {
    sub_23F4DCF2C(*(int *)(a4 + 20));
    sub_23F362B80();
  }
}

void sub_23F4D50D0()
{
  unint64_t v0;

  sub_23F4DC7A0();
  if (v0 <= 0x3F)
  {
    swift_initStructMetadata();
    sub_23F4DC9CC();
  }
  sub_23F43A384();
}

uint64_t *sub_23F4D512C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
    if (!sub_23F36195C((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_23F4D51F0 + 4 * word_23F624B78[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = sub_23F35D2E8(&qword_256E71158);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23F618974();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_23F4D5FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t found;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (!sub_23F36195C(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v8 = sub_23F618974();
        v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v9(a1, v8);
        v10 = type metadata accessor for ResponseGenerationOverrides_AppPredicate(0);
        goto LABEL_6;
      case 1u:
        v8 = sub_23F618974();
        v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v9(a1, v8);
        v10 = type metadata accessor for ResponseGenerationOverrides_ToolPredicate(0);
LABEL_6:
        v11 = *(int *)(v10 + 20);
        goto LABEL_21;
      case 2u:
        v8 = sub_23F618974();
        v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v9(a1, v8);
        v12 = a1 + *(int *)(type metadata accessor for ResponseGenerationOverrides_ActionPredicate(0) + 20);
        v13 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(0);
        goto LABEL_27;
      case 3u:
        v14 = sub_23F618974();
        v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
        v15(a1, v14);
        v16 = type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate(0);
        v17 = a1 + *(int *)(v16 + 20);
        v18 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(0);
        if (!sub_23F36195C(v17, 1, v18))
        {
          swift_bridgeObjectRelease();
          v15(v17 + *(int *)(v18 + 24), v14);
          v19 = v17 + *(int *)(v18 + 28);
          v20 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
          if (!sub_23F36195C(v19, 1, v20))
            v15(v19 + *(int *)(v20 + 24), v14);
        }
        v21 = a1 + *(int *)(v16 + 24);
        v22 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
        if (!sub_23F36195C(v21, 1, v22))
          v15(v21 + *(int *)(v22 + 24), v14);
        break;
      case 4u:
        v23 = sub_23F618974();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
        break;
      case 5u:
        v8 = sub_23F618974();
        v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v9(a1, v8);
        v24 = type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate(0);
        goto LABEL_25;
      case 6u:
        v25 = sub_23F618974();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(a1, v25);
        type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate(0);
        goto LABEL_31;
      case 7u:
        v8 = sub_23F618974();
        v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v9(a1, v8);
        found = type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate(0);
        goto LABEL_20;
      case 8u:
        v8 = sub_23F618974();
        v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v9(a1, v8);
        v27 = type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate(0);
        swift_bridgeObjectRelease();
        v28 = *(int *)(v27 + 24);
        goto LABEL_26;
      case 9u:
        v8 = sub_23F618974();
        v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v9(a1, v8);
        found = type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate(0);
        goto LABEL_20;
      case 0xAu:
        v8 = sub_23F618974();
        v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v9(a1, v8);
        found = type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate(0);
LABEL_20:
        v29 = found;
        swift_bridgeObjectRelease();
        v11 = *(int *)(v29 + 24);
LABEL_21:
        v30 = a1 + v11;
        v31 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
        if (sub_23F36195C(v30, 1, v31))
          break;
        swift_bridgeObjectRelease();
LABEL_29:
        v9(v30 + *(int *)(v31 + 24), v8);
        break;
      case 0xBu:
        v32 = sub_23F618974();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(a1, v32);
        type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate(0);
        goto LABEL_31;
      case 0xCu:
        v8 = sub_23F618974();
        v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v9(a1, v8);
        v24 = type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate(0);
LABEL_25:
        v28 = *(int *)(v24 + 20);
LABEL_26:
        v12 = a1 + v28;
        v13 = type metadata accessor for ResponseGenerationOverrides_ListPredicate(0);
LABEL_27:
        v33 = v13;
        if (!sub_23F36195C(v12, 1, v13))
        {
          swift_bridgeObjectRelease();
          v9(v12 + *(int *)(v33 + 24), v8);
          v30 = v12 + *(int *)(v33 + 28);
          v31 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
          if (!sub_23F36195C(v30, 1, v31))
            goto LABEL_29;
        }
        break;
      case 0xDu:
        v34 = sub_23F618974();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(a1, v34);
        type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate(0);
LABEL_31:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

char *sub_23F4D6480(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (!sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23F4D6518 + 4 * word_23F624BA2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F35D2E8(&qword_256E71158);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *sub_23F4D7304(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23F4D7390 + 4 * word_23F624BBE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
LABEL_6:
    v10 = sub_23F35D2E8(&qword_256E71158);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v11 = (char *)&loc_23F4D7484 + 4 * word_23F624BDA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *sub_23F4D904C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  if (!sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23F4D90E4 + 4 * word_23F624BF6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F35D2E8(&qword_256E71158);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_23F4D9DC8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23F4D9E54 + 4 * word_23F624C12[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
LABEL_6:
    v10 = sub_23F35D2E8(&qword_256E71158);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v11 = (char *)&loc_23F4D9F48 + 4 * word_23F624C2E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_23F4DB87C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4DB888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F4DB894(a1, a2, a3, &qword_256E71158);
}

uint64_t sub_23F4DB894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F35D2E8(a4);
  sub_23F3F9C58();
  if (v5)
  {
    v6 = sub_23F3F9CD0();
  }
  else
  {
    sub_23F3C8624();
    v6 = sub_23F4DCE20();
  }
  return sub_23F3B1A44(v6, a2, v7);
}

uint64_t sub_23F4DB8E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4DB8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F4DB8F8(a1, a2, a3, a4, &qword_256E71158);
}

uint64_t sub_23F4DB8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F35D2E8(a5);
  sub_23F3F9C68();
  if (v5)
  {
    sub_23F4DCCEC();
  }
  else
  {
    sub_23F3C8624();
    sub_23F4DCE20();
  }
  sub_23F4DC5B8();
  return sub_23F38370C(v6, v7, v8, v9);
}

void sub_23F4DB948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F4DB95C(a1, a2, a3, qword_256E77980, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
}

void sub_23F4DB95C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  sub_23F4AED90(319, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_23F4DC7E4();
    if (v6 <= 0x3F)
    {
      sub_23F4DC3F0();
      sub_23F4DC9CC();
    }
  }
  sub_23F43A384();
}

uint64_t *sub_23F4DB9B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    a1[3] = a2[3];
    v7 = *(int *)(a3 + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23F618974();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_23F4DBA88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_23F618974();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_23F4DBAE8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F618974();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *sub_23F4DBB88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_23F4DBC44(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 32);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *sub_23F4DBCA0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F618974();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_23F4DBD3C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4DBD48()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F3D9C90();
  if (v2)
  {
    sub_23F3F9B80(*v0);
    sub_23F362B80();
  }
  else
  {
    v3 = v1;
    sub_23F3C8624();
    v4 = sub_23F4DCE68(*(int *)(v3 + 32));
    sub_23F3B1A44(v4, v5, v6);
  }
}

uint64_t sub_23F4DBD90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4DBD9C()
{
  int v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F3B218C();
  if (v2)
  {
    *v1 = (v0 - 1);
    sub_23F362B80();
  }
  else
  {
    sub_23F3C8624();
    sub_23F4DC5B8();
    sub_23F38370C(v3, v4, v5, v6);
  }
}

uint64_t sub_23F4DBDE4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F618974();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F4DBE60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F3C8624();
  v0 = sub_23F3840BC();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

uint64_t sub_23F4DBE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3C8624();
  v0 = sub_23F4DD1FC();
  return sub_23F4DCE74(v0, v1, v2);
}

void sub_23F4DBEB0()
{
  uint64_t v0;

  v0 = sub_23F3C8624();
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16));
  sub_23F362928();
}

void sub_23F4DBEE4()
{
  uint64_t (*v0)(uint64_t, uint64_t);

  sub_23F3C8624();
  sub_23F4DCF6C();
  sub_23F3B5CB8(v0);
  sub_23F362928();
}

void sub_23F4DBF10()
{
  uint64_t v0;

  v0 = sub_23F3C8624();
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32));
  sub_23F362928();
}

void sub_23F4DBF44()
{
  uint64_t (*v0)(uint64_t, uint64_t);

  sub_23F3C8624();
  sub_23F4DCF5C();
  sub_23F3B5CB8(v0);
  sub_23F362928();
}

uint64_t sub_23F4DBF70()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4DBF7C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4DBF88()
{
  unint64_t v0;

  sub_23F4DC7A0();
  if (v0 <= 0x3F)
  {
    swift_initStructMetadata();
    sub_23F4DC9CC();
  }
  sub_23F43A384();
}

ValueMetadata *type metadata accessor for ResponseGenerationOverrides_StringPredicate.Operator()
{
  return &type metadata for ResponseGenerationOverrides_StringPredicate.Operator;
}

unint64_t sub_23F4DBFF0()
{
  unint64_t result;

  result = qword_256E77AE0;
  if (!qword_256E77AE0)
  {
    result = MEMORY[0x242670A44](&unk_23F628220, &type metadata for ResponseGenerationOverrides_StringPredicate.Operator);
    atomic_store(result, (unint64_t *)&qword_256E77AE0);
  }
  return result;
}

unint64_t sub_23F4DC030()
{
  unint64_t result;

  result = qword_256E77AE8;
  if (!qword_256E77AE8)
  {
    result = MEMORY[0x242670A44](&unk_23F6282C0, &type metadata for ResponseGenerationOverrides_IntPredicate.Operator);
    atomic_store(result, (unint64_t *)&qword_256E77AE8);
  }
  return result;
}

unint64_t sub_23F4DC074()
{
  unint64_t result;

  result = qword_256E77AF0;
  if (!qword_256E77AF0)
  {
    result = MEMORY[0x242670A44](&unk_23F628288, &type metadata for ResponseGenerationOverrides_StringPredicate.Operator);
    atomic_store(result, (unint64_t *)&qword_256E77AF0);
  }
  return result;
}

unint64_t sub_23F4DC0B8()
{
  unint64_t result;

  result = qword_256E77AF8;
  if (!qword_256E77AF8)
  {
    result = MEMORY[0x242670A44](&unk_23F628328, &type metadata for ResponseGenerationOverrides_IntPredicate.Operator);
    atomic_store(result, (unint64_t *)&qword_256E77AF8);
  }
  return result;
}

uint64_t sub_23F4DC128()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DC140()
{
  return sub_23F6189A4();
}

uint64_t sub_23F4DC15C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36196C(v0, 0, 1, v1);
}

uint64_t sub_23F4DC170()
{
  uint64_t v0;

  return v0;
}

void *sub_23F4DC184(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

void sub_23F4DC198(uint64_t a1)
{
  uint64_t *v1;

  sub_23F3625D8(a1, v1);
}

uint64_t sub_23F4DC1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(0);
}

uint64_t sub_23F4DC1BC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F4DC1CC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36195C(v0, 1, v1);
}

uint64_t sub_23F4DC1F8(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, v1);
}

uint64_t sub_23F4DC204(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 - 88) + 16))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 120) + *(int *)(a1 + 20), *(_QWORD *)(v1 - 128));
}

void sub_23F4DC238(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;

  sub_23F3D96EC(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

uint64_t sub_23F4DC25C()
{
  return sub_23F61C0A0();
}

void sub_23F4DC280(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F3625D8(v2, a2);
}

void sub_23F4DC288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v12 - 120) = v11;
  sub_23F3D96EC(v11, (uint64_t)&a9 - v9, v10);
}

uint64_t sub_23F4DC2A8(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_retain();
}

void sub_23F4DC2C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F3D96EC(v2, v1, v0);
}

uint64_t sub_23F4DC2D8()
{
  return sub_23F6189A4();
}

void sub_23F4DC2E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F3D96EC(a1, a2, v2);
}

uint64_t sub_23F4DC2EC@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)a1;
}

void sub_23F4DC2FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F3D96EC(a1, a2, v2);
}

uint64_t sub_23F4DC304@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + a1;
  v3 = type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
  return sub_23F36195C(v2, 1, v3);
}

uint64_t sub_23F4DC32C()
{
  return sub_23F61895C();
}

uint64_t sub_23F4DC348(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23F4DC368(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23F4DC394()
{
  return sub_23F61C0A0();
}

void sub_23F4DC3C0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F36262C(a1, v2, v1);
}

uint64_t sub_23F4DC3CC()
{
  return swift_initStructMetadata();
}

uint64_t sub_23F4DC3F0()
{
  return swift_initStructMetadata();
}

uint64_t sub_23F4DC414(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(v1, 1, a1);
}

void sub_23F4DC428(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F3D96EC(v3, v4, a3);
}

uint64_t sub_23F4DC434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, _QWORD, uint64_t);
  uint64_t v3;

  return v2(*(_QWORD *)(v3 - 96), *(_QWORD *)(v3 - 104) + *(int *)(v0 + 20), v1);
}

uint64_t sub_23F4DC44C()
{
  return sub_23F61C0A0();
}

uint64_t sub_23F4DC464()
{
  return sub_23F6189D4();
}

uint64_t sub_23F4DC47C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v1, v3 + a1, v2);
}

uint64_t sub_23F4DC48C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DC4A4()
{
  return sub_23F618A4C();
}

void sub_23F4DC4B4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F36262C(a1, a2, v2);
}

uint64_t sub_23F4DC4BC()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_23F4DC4C4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F4DC4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(0);
}

uint64_t sub_23F4DC500(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_23F4DC508(uint64_t a1)
{
  uint64_t *v1;

  sub_23F3625D8(a1, v1);
}

uint64_t sub_23F4DC510@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

void sub_23F4DC534(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F3663AC(a1, v1);
}

void sub_23F4DC53C(uint64_t a1)
{
  uint64_t *v1;

  sub_23F3625D8(a1, v1);
}

uint64_t sub_23F4DC544()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 - 88) + 16))(*(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 128), *(_QWORD *)(v0 - 120));
}

uint64_t sub_23F4DC560(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(v1, 1, a1);
}

uint64_t sub_23F4DC584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v0 + *(int *)(v3 + 24), v1 + *(int *)(v3 + 24), v2);
}

uint64_t sub_23F4DC598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F4DC5AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

void sub_23F4DC5C4()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);

  sub_23F3612C0(v1, v2, v0);
}

uint64_t sub_23F4DC5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(0);
}

uint64_t sub_23F4DC5F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3 + a1, v1);
}

void *sub_23F4DC608(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

void *sub_23F4DC61C(uint64_t a1)
{
  const void *v1;
  void *v2;

  return memcpy(v2, v1, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

void sub_23F4DC630(uint64_t a1)
{
  uint64_t *v1;

  sub_23F3625D8(a1, v1);
}

uint64_t sub_23F4DC638()
{
  return sub_23F61895C();
}

uint64_t sub_23F4DC648()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36196C(v0, 0, 1, v1);
}

uint64_t sub_23F4DC65C()
{
  return sub_23F618A64();
}

void sub_23F4DC688(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F3663AC(v2, a2);
}

uint64_t sub_23F4DC690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 120) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_23F4DC6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 104) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_23F4DC6C0()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 24);
}

uint64_t sub_23F4DC6D4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DC700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)v0 = *(_QWORD *)v2;
  *(_BYTE *)(v0 + 8) = *(_BYTE *)(v2 + 8);
  *(_DWORD *)(v0 + 12) = *(_DWORD *)(v2 + 12);
  return v4(v0 + *(int *)(v3 + 24), v2 + *(int *)(v3 + 24), v1);
}

uint64_t sub_23F4DC72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)v0 = *(_QWORD *)v2;
  *(_BYTE *)(v0 + 8) = *(_BYTE *)(v2 + 8);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v2 + 16);
  return v4(v0 + *(int *)(v3 + 24), v2 + *(int *)(v3 + 24), v1);
}

uint64_t sub_23F4DC758(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F4DC760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)v2 = *(_QWORD *)v1;
  *(_BYTE *)(v2 + 8) = *(_BYTE *)(v1 + 8);
  *(_DWORD *)(v2 + 12) = *(_DWORD *)(v1 + 12);
  return v4(v2 + *(int *)(v3 + 24), v1 + *(int *)(v3 + 24), v0);
}

uint64_t sub_23F4DC78C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F4DC794(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v3, a2, v2);
}

uint64_t sub_23F4DC7A0()
{
  return sub_23F618974();
}

uint64_t sub_23F4DC7AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_BYTE *)(v0 + 8) = *(_BYTE *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v2;
  return sub_23F617BA0();
}

uint64_t sub_23F4DC7D4()
{
  return sub_23F61895C();
}

uint64_t sub_23F4DC7E4()
{
  return sub_23F618974();
}

uint64_t sub_23F4DC7EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_BYTE *)(v0 + 8) = *(_BYTE *)(v1 + 8);
  v2 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v2;
  return sub_23F617BA0();
}

uint64_t sub_23F4DC814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(int *)(v1 + 20);
  v4 = (_QWORD *)(v0 + v3);
  v5 = (_QWORD *)(v2 + v3);
  v6 = v5[1];
  *v4 = *v5;
  v4[1] = v6;
  type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  return sub_23F617BA0();
}

void sub_23F4DC84C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F4DC884(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23F4DC894()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36195C(v1, 1, v0);
}

void sub_23F4DC8A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F4C8990(a1, v3, a3);
}

uint64_t sub_23F4DC8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;

  return a4(v4, a1, a2, a3);
}

uint64_t sub_23F4DC8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F4DC8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F4DC8E0()
{
  return 0;
}

uint64_t sub_23F4DC8F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F4DC908()
{
  return sub_23F618968();
}

void sub_23F4DC910(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F3663AC(a1, v1);
}

uint64_t sub_23F4DC940()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36196C(v0, 0, 1, v1);
}

void sub_23F4DC954()
{
  sub_23F4BDFF8();
}

uint64_t sub_23F4DC978()
{
  uint64_t v0;

  return v0;
}

void sub_23F4DC98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  sub_23F4BC648(v4, a1, a2, a3, a4);
}

uint64_t sub_23F4DC9B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F4DC9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F36196C(a1, a2, a3, a4);
}

uint64_t sub_23F4DC9CC()
{
  return 0;
}

uint64_t sub_23F4DC9D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F4DC9E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_BYTE *)(v0 + 8) = *(_BYTE *)(v1 + 8);
  *(_DWORD *)(v0 + 12) = *(_DWORD *)(v1 + 12);
  return v0 + *(int *)(v2 + 24);
}

uint64_t sub_23F4DCA08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_BYTE *)(v0 + 8) = *((_BYTE *)v1 + 8);
  *(_QWORD *)v0 = v3;
  *(_DWORD *)(v0 + 12) = *((_DWORD *)v1 + 3);
  return v0 + *(int *)(v2 + 24);
}

void *sub_23F4DCA30(void *a1, uint64_t a2, size_t a3)
{
  const void *v3;

  return memcpy(a1, v3, a3);
}

void sub_23F4DCA4C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F3D96EC(a1, a2, v2);
}

uint64_t sub_23F4DCA54(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void sub_23F4DCA5C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F36262C(a1, a2, v2);
}

void sub_23F4DCA64()
{
  sub_23F4BE98C();
}

uint64_t sub_23F4DCA84()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DCA9C()
{
  return sub_23F618A04();
}

void sub_23F4DCABC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F3D96EC(a1, a2, v2);
}

uint64_t sub_23F4DCAC4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_BYTE *)(v0 + 8) = *(_BYTE *)(v1 + 8);
  return sub_23F617BA0();
}

uint64_t sub_23F4DCAF4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F4DCAFC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DCB14()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F4DCB20()
{
  return sub_23F6189E0();
}

uint64_t sub_23F4DCB2C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F4DCB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  *(_DWORD *)(v2 + 12) = *(_DWORD *)(v1 + 12);
  return v4(v2 + *(int *)(v3 + 24), v1 + *(int *)(v3 + 24), v0);
}

void sub_23F4DCB50()
{
  void (*v0)(uint64_t);
  unint64_t *v1;

  sub_23F4AED90(319, v1, v0);
}

uint64_t sub_23F4DCB60()
{
  return sub_23F618A40();
}

uint64_t sub_23F4DCB7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;

  return a3(a1, v3);
}

uint64_t sub_23F4DCB88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t sub_23F4DCBA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)(v1 + 8) = *(_BYTE *)(v3 + 8);
  return v4(v1 + *(int *)(v2 + 24), v3 + *(int *)(v2 + 24), v0);
}

uint64_t sub_23F4DCBC0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DCBE4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DCC08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_23F4DCC24(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F4DCC2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_BYTE *)(v0 + 8) = *((_BYTE *)v1 + 8);
  *(_QWORD *)v0 = v2;
  *(_QWORD *)(v0 + 16) = v1[2];
  return v1[3];
}

uint64_t sub_23F4DCC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F4DCC54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F4DCC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v0 + *(int *)(v3 + 24), v1 + *(int *)(v3 + 24), v2);
}

uint64_t sub_23F4DCC94()
{
  char v0;

  return v0 & 1;
}

void sub_23F4DCCA0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F3663AC(v2, a2);
}

uint64_t sub_23F4DCCA8()
{
  uint64_t v0;

  return v0;
}

void sub_23F4DCCBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F4C6520(v1, v0, v3, v2, v4);
}

void sub_23F4DCCD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  sub_23F4C6548(v1, v0, v3, v2, v4);
}

uint64_t sub_23F4DCCEC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DCCF8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_BYTE *)(v0 + 8) = *((_BYTE *)v1 + 8);
  *(_QWORD *)v0 = v2;
  *(_QWORD *)(v0 + 16) = v1[2];
  return v1[3];
}

void sub_23F4DCD28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = v0;
  *(_QWORD *)(v2 - 88) = v1;
}

void sub_23F4DCD78(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F36262C(a1, a2, v2);
}

uint64_t sub_23F4DCD80()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23F4DCD94()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23F4DCDB0()
{
  return sub_23F617BA0();
}

void sub_23F4DCDD0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)(v0 + *(int *)(v1 + 24));
  *v2 = 0;
  v2[1] = 0;
  v3 = (_QWORD *)(v0 + *(int *)(v1 + 28));
  *v3 = 0;
  v3[1] = 0;
}

void sub_23F4DCDEC(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + a1);
  *v2 = 0;
  v2[1] = 0;
}

uint64_t sub_23F4DCDF8()
{
  return sub_23F617BA0();
}

uint64_t sub_23F4DCE0C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36196C(v0, 0, 1, v1);
}

uint64_t sub_23F4DCE20()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_23F4DCE2C()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23F4DCE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);

  return v4(v1, v3, v2, v0);
}

uint64_t sub_23F4DCE54()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23F4DCE68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t sub_23F4DCE74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23F4DCE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F36195C(a1, a2, a3);
}

void sub_23F4DCE84(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F3625D8(v2, a2);
}

void sub_23F4DCE8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F4C8990(v3, v4, a3);
}

uint64_t sub_23F4DCE98()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23F4DCEA0()
{
  return type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
}

uint64_t sub_23F4DCEA8()
{
  return type metadata accessor for ResponseGenerationOverrides_IntPredicate(0);
}

void sub_23F4DCEB0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F3D96EC(a1, a2, v2);
}

void sub_23F4DCEB8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F3D96EC(a1, a2, v2);
}

uint64_t sub_23F4DCEC0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23F4DCEE8@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *v1 = v2;
  v1[1] = v3;
  return swift_bridgeObjectRelease();
}

void sub_23F4DCF08(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F3625D8(v2, a2);
}

uint64_t sub_23F4DCF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

void sub_23F4DCF2C(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;

  *(_QWORD *)(v2 + a1 + 8) = v1;
}

uint64_t sub_23F4DCF3C()
{
  return sub_23F618968();
}

void sub_23F4DCF7C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F3D96EC(a1, a2, v2);
}

void sub_23F4DCF84(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F4C8990(a1, a2, v2);
}

uint64_t sub_23F4DCF8C()
{
  return sub_23F6189F8();
}

void sub_23F4DCF9C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F3D96EC(v3, *(_QWORD *)(v4 - 144), a3);
}

uint64_t sub_23F4DCFAC()
{
  return type metadata accessor for ResponseGenerationOverrides_Rule.Predicate(0);
}

uint64_t sub_23F4DCFC4()
{
  return type metadata accessor for ResponseGenerationOverrides_ContextPredicate(0);
}

uint64_t sub_23F4DCFCC()
{
  return type metadata accessor for ResponseGenerationOverrides_OverrideDialog(0);
}

uint64_t sub_23F4DCFD4()
{
  return sub_23F618AA0();
}

uint64_t sub_23F4DCFDC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DCFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v2, v0);
}

uint64_t sub_23F4DCFFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v2, v1, v0);
}

void sub_23F4DD00C()
{
  sub_23F4BA614();
}

uint64_t sub_23F4DD02C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F4DD034()
{
  return sub_23F618A4C();
}

void sub_23F4DD040(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F36262C(a1, v2, v1);
}

uint64_t sub_23F4DD054()
{
  return 0;
}

uint64_t sub_23F4DD088@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = a1[1];
  *v1 = *a1;
  v1[1] = v2;
  return sub_23F617BA0();
}

uint64_t sub_23F4DD094(uint64_t result, __int16 a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2;
  *(_BYTE *)(v2 + 9) = HIBYTE(a2) & 1;
  return result;
}

void sub_23F4DD0B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F3D96EC(v3, v4, a3);
}

void sub_23F4DD0E8()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_23F3663AC(v0, v1);
}

uint64_t sub_23F4DD0F4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DD108()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DD11C@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return 0;
}

void sub_23F4DD130(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t sub_23F4DD144(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_23F617BA0();
}

uint64_t sub_23F4DD150@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4DD15C()
{
  return type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
}

uint64_t sub_23F4DD168()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DD180()
{
  char v0;

  return v0 & 1;
}

uint64_t sub_23F4DD18C()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

void sub_23F4DD1C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_BYTE *)(v0 + 8) = *(_BYTE *)(v1 + 8);
}

uint64_t sub_23F4DD1D4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DD1E8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DD1FC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4DD210()
{
  return type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
}

uint64_t sub_23F4DD218()
{
  uint64_t v0;

  return v0;
}

void sub_23F4DD238(uint64_t a1)
{
  uint64_t *v1;

  sub_23F3625D8(a1, v1);
}

void sub_23F4DD240(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F4C8990(a1, v3, a3);
}

void sub_23F4DD248(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a1;
  v1 = sub_23F61BADC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F362AAC();
  v5 = v3 - v4;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - v7;
  v9 = sub_23F4DDBE0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F38F964();
  v13 = v12 - v11;
  MEMORY[0x24266F0AC]();
  v14 = sub_23F61B950();
  sub_23F383D74(v13, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  v15 = 0;
  v16 = 1 << *(_BYTE *)(v14 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v14 + 56;
  v19 = v17 & *(_QWORD *)(v14 + 56);
  v20 = (unint64_t)(v16 + 63) >> 6;
  v21 = *MEMORY[0x24BEB9F80];
  if (!v19)
    goto LABEL_5;
LABEL_4:
  v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v22 | (v15 << 6); ; i = v28 + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v8, *(_QWORD *)(v14 + 48) + *(_QWORD *)(v2 + 72) * i, v1);
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v8, v1);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v2 + 88))(v5, v1) == v21)
    {
      sub_23F366748();
      sub_23F4DDBE8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
      v29 = sub_23F61BAC4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v35, v5, v29);
      v30 = sub_23F383CDC();
LABEL_24:
      sub_23F36196C(v30, v31, v32, v33);
      sub_23F362948();
      return;
    }
    sub_23F4DDBE8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    if (v19)
      goto LABEL_4;
LABEL_5:
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v24 >= v20)
      goto LABEL_23;
    ++v15;
    if (*(_QWORD *)(v18 + 8 * v24))
      goto LABEL_18;
    v15 = v24 + 1;
    if (v24 + 1 >= v20)
      goto LABEL_23;
    if (*(_QWORD *)(v18 + 8 * v15))
      goto LABEL_18;
    v15 = v24 + 2;
    if (v24 + 2 >= v20)
      goto LABEL_23;
    if (*(_QWORD *)(v18 + 8 * v15))
      goto LABEL_18;
    v25 = v24 + 3;
    if (v25 >= v20)
    {
LABEL_23:
      sub_23F366748();
      v33 = sub_23F61BAC4();
      v30 = v35;
      v31 = 1;
      v32 = 1;
      goto LABEL_24;
    }
    if (!*(_QWORD *)(v18 + 8 * v25))
    {
      while (1)
      {
        v15 = v25 + 1;
        if (__OFADD__(v25, 1))
          goto LABEL_26;
        if (v15 >= v20)
          goto LABEL_23;
        ++v25;
        if (*(_QWORD *)(v18 + 8 * v15))
          goto LABEL_18;
      }
    }
    v15 = v25;
LABEL_18:
    sub_23F4DDBA8();
    v19 = v27 & v26;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

void ParameterDefinition.idSearchPredicateTemplate.getter(uint64_t a1@<X8>)
{
  sub_23F4DD4E8(&qword_256E77B00, (uint64_t)MEMORY[0x24BEB9EF0], MEMORY[0x24BEB9DD8], a1);
}

void ParameterDefinition.stringSearchPredicateTemplate.getter(uint64_t a1@<X8>)
{
  sub_23F4DD4E8(&qword_256E77B10, (uint64_t)MEMORY[0x24BEBA508], MEMORY[0x24BEB9DC0], a1);
}

void sub_23F4DD4E8(uint64_t *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  int64_t v62;

  v58 = a3;
  v59 = a2;
  v51 = a4;
  v53 = a1;
  v4 = sub_23F35D2E8(a1);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v7 = v6 - v5;
  v8 = sub_23F61BA1C();
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v55 = v9;
  v10 = sub_23F4DDBC8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F362AAC();
  v14 = v12 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v51 - v16;
  v18 = sub_23F4DDBE0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  sub_23F38F964();
  v22 = v21 - v20;
  MEMORY[0x24266F0AC]();
  v23 = sub_23F61B950();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v18);
  v24 = 0;
  v60 = v23 + 56;
  sub_23F3839E4();
  v27 = v26 & v25;
  v61 = (unint64_t)(v28 + 63) >> 6;
  v29 = *MEMORY[0x24BEBA118];
  v54 = v23;
  v52 = v29;
  while (v27)
  {
    v30 = __clz(__rbit64(v27));
    v27 &= v27 - 1;
    v31 = v30 | (v24 << 6);
LABEL_18:
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v17, *(_QWORD *)(v23 + 48) + *(_QWORD *)(v11 + 72) * v31, v10);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v14, v17, v10);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v11 + 88))(v14, v10) == v29)
    {
      v62 = v24;
      v37 = v10;
      sub_23F3D98EC(v14, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 96));
      v38 = sub_23F35D2E8(&qword_256E77B08);
      v39 = v7;
      v40 = v55;
      v41 = v56;
      v42 = v57;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v55, v14 + *(int *)(v38 + 48), v57);
      sub_23F61BAB8();
      sub_23F40F93C();
      v44 = v43(v14);
      v58(v44);
      v45 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
      v7 = v39;
      v45(v40, v42);
      v46 = sub_23F4DDBD4();
      if (sub_23F36195C(v39, 1, v46) != 1)
      {
        swift_release();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v51, v39, v46);
        v48 = sub_23F383CDC();
        goto LABEL_24;
      }
      sub_23F40F810(v39, v53);
      v23 = v54;
      v10 = v37;
      v29 = v52;
      v24 = v62;
    }
    else
    {
      sub_23F3D98EC(v14, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    }
  }
  v32 = v24 + 1;
  if (__OFADD__(v24, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v32 >= v61)
    goto LABEL_22;
  ++v24;
  if (*(_QWORD *)(v60 + 8 * v32))
    goto LABEL_17;
  v24 = v32 + 1;
  if (v32 + 1 >= v61)
    goto LABEL_22;
  if (*(_QWORD *)(v60 + 8 * v24))
    goto LABEL_17;
  v24 = v32 + 2;
  if (v32 + 2 >= v61)
    goto LABEL_22;
  if (*(_QWORD *)(v60 + 8 * v24))
  {
LABEL_17:
    sub_23F4DDBA8();
    v27 = v35 & v34;
    v31 = v36 + (v24 << 6);
    goto LABEL_18;
  }
  v33 = v32 + 3;
  if (v33 >= v61)
  {
LABEL_22:
    sub_23F366748();
    v47 = sub_23F4DDBD4();
    v48 = v51;
    v49 = 1;
    v50 = 1;
LABEL_24:
    sub_23F36196C(v48, v49, v50, v47);
    sub_23F362948();
    return;
  }
  if (*(_QWORD *)(v60 + 8 * v33))
  {
    v24 = v33;
    goto LABEL_17;
  }
  while (1)
  {
    v24 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v24 >= v61)
      goto LABEL_22;
    ++v33;
    if (*(_QWORD *)(v60 + 8 * v24))
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
}

void ParameterDefinition.comparisonSeachPredicateTemplates.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  int64_t v41;
  uint64_t v42;

  v0 = sub_23F61BA1C();
  v42 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  sub_23F36285C();
  v38 = v1;
  v2 = sub_23F4DDBC8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F362AAC();
  v6 = v4 - v5;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v37 - v8;
  v10 = sub_23F4DDBE0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F38F964();
  v14 = v13 - v12;
  MEMORY[0x24266F0AC]();
  v15 = sub_23F61B950();
  v16 = v14;
  v17 = v15;
  sub_23F3D98EC(v16, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  v18 = 0;
  v39 = v17 + 56;
  sub_23F3839E4();
  v21 = v20 & v19;
  v40 = (unint64_t)(v22 + 63) >> 6;
  v23 = *MEMORY[0x24BEBA118];
  v37 = v17;
  while (v21)
  {
    v24 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    v25 = v24 | (v18 << 6);
    v26 = v42;
LABEL_18:
    sub_23F38431C((uint64_t)v9, *(_QWORD *)(v17 + 48) + *(_QWORD *)(v3 + 72) * v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    sub_23F38431C(v6, (uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v6, v2) == (_DWORD)v23)
    {
      v41 = v18;
      v32 = v23;
      v33 = v2;
      sub_23F383D74(v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 96));
      v34 = sub_23F35D2E8(&qword_256E77B08);
      sub_23F38431C(v38, v6 + *(int *)(v34 + 48), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 32));
      sub_23F61BAB8();
      sub_23F40F93C();
      v35(v6);
      v36 = *(_QWORD *)(sub_23F61BA04() + 16);
      swift_bridgeObjectRelease();
      if (v36)
      {
        sub_23F61BA04();
        sub_23F4DDBB8();
        swift_release();
        return;
      }
      sub_23F4DDBB8();
      v17 = v37;
      v2 = v33;
      v23 = v32;
      v18 = v41;
    }
    else
    {
      sub_23F383D74(v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    }
  }
  v27 = v18 + 1;
  v26 = v42;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v27 >= v40)
    goto LABEL_22;
  ++v18;
  if (*(_QWORD *)(v39 + 8 * v27))
    goto LABEL_17;
  v18 = v27 + 1;
  if (v27 + 1 >= v40)
    goto LABEL_22;
  if (*(_QWORD *)(v39 + 8 * v18))
    goto LABEL_17;
  v18 = v27 + 2;
  if (v27 + 2 >= v40)
    goto LABEL_22;
  if (*(_QWORD *)(v39 + 8 * v18))
  {
LABEL_17:
    sub_23F4DDBA8();
    v21 = v30 & v29;
    v25 = v31 + (v18 << 6);
    goto LABEL_18;
  }
  v28 = v27 + 3;
  if (v28 >= v40)
  {
LABEL_22:
    swift_release();
    return;
  }
  if (*(_QWORD *)(v39 + 8 * v28))
  {
    v18 = v28;
    goto LABEL_17;
  }
  while (1)
  {
    v18 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v18 >= v40)
      goto LABEL_22;
    ++v28;
    if (*(_QWORD *)(v39 + 8 * v18))
      goto LABEL_17;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_23F4DDBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F4DDBC8()
{
  return sub_23F61BADC();
}

uint64_t sub_23F4DDBD4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 - 112))(0);
}

uint64_t sub_23F4DDBE0()
{
  return sub_23F61B95C();
}

uint64_t sub_23F4DDBE8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F4DDBF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;

  sub_23F35D2E8(&qword_256E704B8);
  v2 = *(_QWORD *)(type metadata accessor for StatementSegment(0) - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23F61E8A0;
  v6 = (char *)(v5 + v4);
  *(_QWORD *)v6 = 0x286B636970;
  *((_QWORD *)v6 + 1) = 0xE500000000000000;
  v7 = MEMORY[0x24BEE4B08];
  *((_QWORD *)v6 + 2) = MEMORY[0x24BEE4B08];
  sub_23F4DDD88();
  v8 = sub_23F617000();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(&v6[v3], a1, v8);
  swift_storeEnumTagMultiPayload();
  v9 = &v6[2 * v3];
  *(_QWORD *)v9 = 8236;
  *((_QWORD *)v9 + 1) = 0xE200000000000000;
  *((_QWORD *)v9 + 2) = v7;
  sub_23F4DDD88();
  v10 = (uint64_t *)&v6[3 * v3];
  v11 = sub_23F61C16C();
  v13 = v12;
  sub_23F617BA0();
  v14 = sub_23F3B60F0(v7, v11, v13);
  sub_23F369004(v14);
  *v10 = v11;
  v10[1] = v13;
  v10[2] = v15;
  sub_23F4DDD88();
  v16 = &v6[4 * v3];
  *(_QWORD *)v16 = 41;
  *((_QWORD *)v16 + 1) = 0xE100000000000000;
  *((_QWORD *)v16 + 2) = v7;
  sub_23F4DDD88();
  return v5;
}

uint64_t sub_23F4DDD88()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t static PlannerGrammarConstants.StaticGrammar.BOOLRuleName.getter()
{
  return 0x6E61656C6F6F62;
}

uint64_t static PlannerGrammarConstants.StaticGrammar.intRuleName.getter()
{
  return 0x72656765746E69;
}

uint64_t static PlannerGrammarConstants.StaticGrammar.floatRuleName.getter()
{
  return 0x74616F6C66;
}

uint64_t static PlannerGrammarConstants.StaticGrammar.quotedStringRuleName.getter()
{
  return 0x735F6465746F7571;
}

unint64_t static PlannerGrammarConstants.StaticGrammar.quotedCopyStringRuleName.getter()
{
  return sub_23F4DE68C(18);
}

unint64_t static PlannerGrammarConstants.StaticGrammar.returnIdentifierRuleName.getter()
{
  return sub_23F4DE68C(17);
}

uint64_t static PlannerGrammarConstants.StaticGrammar.anyEnumRuleName.getter()
{
  return 0x6D756E655F796E61;
}

unint64_t static PlannerGrammarConstants.StaticGrammar.invocationIdentifierRuleName.getter()
{
  return sub_23F4DE68C(21);
}

uint64_t static PlannerGrammarConstants.StaticGrammar.toolInvocationPrefixRuleName.getter()
{
  return 0x766E695F6C6F6F74;
}

void sub_23F4DDE80()
{
  qword_256E77B18 = (uint64_t)&unk_250FD0948;
}

uint64_t static PlannerGrammarConstants.StaticGrammar.staticToolRuleNames.getter()
{
  if (qword_256E6F060 != -1)
    swift_once();
  return sub_23F617BA0();
}

uint64_t sub_23F4DDED4()
{
  uint64_t result;
  uint64_t v1;

  result = sub_23F4DE678(17, 0x800000023F637FF0);
  qword_256E77B20 = result;
  *(_QWORD *)algn_256E77B28 = v1;
  return result;
}

uint64_t sub_23F4DDF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  void (*v28)(void);
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  void *v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47[2];
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v50 = a4;
  v7 = sub_23F619E98();
  v51 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v47[1] = (uint64_t)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v47 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v49 = (char *)v47 - v13;
  v14 = sub_23F61C148();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F35D2E8(&qword_256E70760);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F616E68();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v48 = (char *)v47 - v23;
  sub_23F4DE5C8();
  v24 = sub_23F5CC92C();
  if (!v24)
  {
    sub_23F619088();
    v30 = sub_23F619E8C();
    v31 = sub_23F61C628();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_23F35A000, v30, v31, "Failed to load plan constraining grammar: unable to locate IFPR bundle", v32, 2u);
      MEMORY[0x242670B70](v32, -1, -1);
    }

    v33 = *(void (**)(char *, uint64_t))(v51 + 8);
    v34 = v12;
    goto LABEL_13;
  }
  v25 = v24;
  v47[0] = a1;
  v26 = sub_23F4DE604(a1, a2, a3, v50, v24);
  if (!v26)
  {
    sub_23F36196C((uint64_t)v17, 1, 1, v18);
    goto LABEL_9;
  }
  v27 = v26;
  sub_23F616E14();

  v28 = *(void (**)(void))(v19 + 32);
  ((void (*)(char *, char *, uint64_t))v28)(v17, v22, v18);
  sub_23F36196C((uint64_t)v17, 0, 1, v18);
  if (sub_23F36195C((uint64_t)v17, 1, v18) == 1)
  {
LABEL_9:
    v35 = v25;
    sub_23F3E528C((uint64_t)v17);
    v36 = v49;
    sub_23F619088();
    swift_bridgeObjectRetain_n();
    v37 = sub_23F619E8C();
    v38 = sub_23F61C628();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v54 = v40;
      *(_DWORD *)v39 = 136315138;
      sub_23F617BA0();
      sub_23F37AE00(v47[0], a2, &v54);
      v53 = v41;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23F35A000, v37, v38, "Failed to load plan constraining grammar: unable to locate \"%s\"", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v40, -1, -1);
      MEMORY[0x242670B70](v39, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    v33 = *(void (**)(char *, uint64_t))(v51 + 8);
    v34 = v36;
LABEL_13:
    v33(v34, v52);
    return 0;
  }
  v29 = v48;
  v28();
  v43 = sub_23F616E98();
  v45 = v44;
  sub_23F61C13C();
  v46 = sub_23F61C124();
  sub_23F3F3D0C(v43, v45);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v29, v18);
  return v46;
}

uint64_t static PlannerGrammarConstants.StaticGrammar.baseStaticGrammarSnapshot.getter()
{
  return sub_23F360C50(&qword_256E6F068, &qword_256E77B20);
}

uint64_t sub_23F4DE554()
{
  uint64_t result;
  uint64_t v1;

  result = sub_23F4DE678(25, 0x800000023F637F90);
  qword_256E77B30 = result;
  *(_QWORD *)algn_256E77B38 = v1;
  return result;
}

uint64_t static PlannerGrammarConstants.StaticGrammar.firstPartyToolsGrammarSnapshot.getter()
{
  return sub_23F360C50(&qword_256E6F070, &qword_256E77B30);
}

ValueMetadata *type metadata accessor for PlannerGrammarConstants()
{
  return &type metadata for PlannerGrammarConstants;
}

ValueMetadata *type metadata accessor for PlannerGrammarConstants.StaticGrammar()
{
  return &type metadata for PlannerGrammarConstants.StaticGrammar;
}

unint64_t sub_23F4DE5C8()
{
  unint64_t result;

  result = qword_256E77B40;
  if (!qword_256E77B40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E77B40);
  }
  return result;
}

id sub_23F4DE604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)sub_23F61C0E8();
  v7 = (void *)sub_23F61C0E8();
  v8 = objc_msgSend(a5, sel_URLForResource_withExtension_, v6, v7);

  return v8;
}

uint64_t sub_23F4DE678(uint64_t a1, uint64_t a2)
{
  return sub_23F4DDF08(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, 6712930, 0xE300000000000000);
}

unint64_t sub_23F4DE68C(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t PlannerHTTPClient.Options.init(n:topP:temperature:lengthPenalty:frequencyPenalty:randomSeed:maxTokens:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  *(_QWORD *)a4 = result;
  *(double *)(a4 + 8) = a5;
  *(double *)(a4 + 16) = a6;
  *(double *)(a4 + 24) = a7;
  *(double *)(a4 + 32) = a8;
  *(_QWORD *)(a4 + 40) = a2;
  *(_QWORD *)(a4 + 48) = a3;
  return result;
}

void PlannerHTTPClient.__allocating_init(with:)()
{
  swift_allocObject();
  PlannerHTTPClient.init(with:)();
  sub_23F362928();
}

uint64_t PlannerHTTPClient.CompletionRequest.init(model:prompt:options:user:disableLogging:baseURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;

  v15 = *a5;
  v23 = *(_OWORD *)(a5 + 1);
  v16 = a5[3];
  v17 = a5[4];
  v18 = a5[5];
  v19 = a5[6];
  v20 = a9 + *(int *)(type metadata accessor for PlannerHTTPClient.CompletionRequest(0) + 36);
  v21 = sub_23F432B2C();
  sub_23F36196C(v20, 1, 1, v21);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = v15;
  *(_OWORD *)(a9 + 40) = v23;
  *(_QWORD *)(a9 + 56) = v16;
  *(_QWORD *)(a9 + 64) = v17;
  *(_QWORD *)(a9 + 72) = v18;
  *(_QWORD *)(a9 + 80) = v19;
  *(_QWORD *)(a9 + 88) = a6;
  *(_QWORD *)(a9 + 96) = a7;
  *(_BYTE *)(a9 + 104) = a8;
  return sub_23F444F70(a10, v20);
}

uint64_t PlannerHTTPClient.submit<A>(request:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v7 + 136) = a6;
  *(_QWORD *)(v7 + 144) = v6;
  *(_BYTE *)(v7 + 488) = a4;
  *(_QWORD *)(v7 + 120) = a3;
  *(_QWORD *)(v7 + 128) = a5;
  *(_QWORD *)(v7 + 104) = a1;
  *(_QWORD *)(v7 + 112) = a2;
  sub_23F61C148();
  *(_QWORD *)(v7 + 152) = sub_23F366578();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v7 + 160) = AssociatedTypeWitness;
  *(_QWORD *)(v7 + 168) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v7 + 176) = sub_23F366654();
  *(_QWORD *)(v7 + 184) = sub_23F3666CC();
  v9 = sub_23F619E50();
  *(_QWORD *)(v7 + 192) = v9;
  *(_QWORD *)(v7 + 200) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 208) = sub_23F366578();
  v10 = sub_23F619E20();
  *(_QWORD *)(v7 + 216) = v10;
  *(_QWORD *)(v7 + 224) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v7 + 232) = sub_23F366654();
  *(_QWORD *)(v7 + 240) = sub_23F3666CC();
  *(_QWORD *)(v7 + 248) = sub_23F3666CC();
  v11 = sub_23F432B2C();
  *(_QWORD *)(v7 + 256) = v11;
  *(_QWORD *)(v7 + 264) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v7 + 272) = sub_23F366578();
  v12 = sub_23F3B1728();
  *(_QWORD *)(v7 + 280) = v12;
  *(_QWORD *)(v7 + 288) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v7 + 296) = sub_23F366654();
  *(_QWORD *)(v7 + 304) = sub_23F3666CC();
  *(_QWORD *)(v7 + 312) = sub_23F3666CC();
  *(_QWORD *)(v7 + 320) = sub_23F3666CC();
  *(_QWORD *)(v7 + 328) = sub_23F3666CC();
  *(_QWORD *)(v7 + 336) = sub_23F3666CC();
  *(_QWORD *)(v7 + 344) = sub_23F3666CC();
  *(_QWORD *)(v7 + 352) = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E70760);
  *(_QWORD *)(v7 + 360) = sub_23F366654();
  *(_QWORD *)(v7 + 368) = sub_23F3666CC();
  v13 = sub_23F616A90();
  *(_QWORD *)(v7 + 376) = v13;
  *(_QWORD *)(v7 + 384) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v7 + 392) = sub_23F366654();
  *(_QWORD *)(v7 + 400) = sub_23F3666CC();
  return swift_task_switch();
}

uint64_t sub_23F4DE950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD, _QWORD);
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  NSObject *v31;
  uint8_t *v32;
  os_signpost_id_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t ObjectType;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD, uint64_t, uint64_t);
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 136);
  v47 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_BYTE *)(v0 + 488) & 1;
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v3, v2);
  (*(void (**)(uint64_t, uint64_t))(v2 + 72))(v3, v2);
  sub_23F4E008C(v7, v5, v4, v6, v1, v3, *(_QWORD *)(v2 + 16), v47);
  v9 = *(_QWORD *)(v0 + 392);
  v8 = *(_QWORD *)(v0 + 400);
  v10 = *(_QWORD *)(v0 + 376);
  v11 = *(_QWORD *)(v0 + 384);
  sub_23F3625D8(*(_QWORD *)(v0 + 368), &qword_256E70760);
  sub_23F362D18();
  sub_23F61910C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v8, v10);
  v12 = sub_23F619E8C();
  v13 = sub_23F61C610();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 360);
    v15 = *(_QWORD *)(v0 + 256);
    v16 = (uint8_t *)sub_23F366668();
    v49 = sub_23F366668();
    *(_DWORD *)v16 = 136315138;
    sub_23F616A6C();
    result = sub_23F36195C(v14, 1, v15);
    if ((_DWORD)result != 1)
    {
      v44 = *(_QWORD *)(v0 + 384);
      v45 = *(_QWORD *)(v0 + 376);
      v46 = *(_QWORD *)(v0 + 392);
      v18 = *(_QWORD *)(v0 + 272);
      v20 = *(_QWORD *)(v0 + 256);
      v19 = *(_QWORD *)(v0 + 264);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 32))(v18, *(_QWORD *)(v0 + 360), v20);
      sub_23F3612C0((unint64_t *)&qword_256E730D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v21 = sub_23F61CC1C();
      v23 = v22;
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      sub_23F37AE00(v21, v23, &v49);
      *(_QWORD *)(v0 + 96) = v24;
      sub_23F61C790();
      sub_23F38432C();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v46, v45);
      sub_23F38485C(&dword_23F35A000, v12, v13, "Request URL is : %s", v16);
      sub_23F3B17D4();
      sub_23F366530();
    }
    __break(1u);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 352);
    v26 = *(_QWORD *)(v0 + 280);
    v27 = *(_QWORD *)(v0 + 288);
    v28 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 384) + 8);
    v28(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 376));

    v29 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v29(v25, v26);
    *(_QWORD *)(v0 + 408) = v29;
    *(_QWORD *)(v0 + 416) = v28;
    if (qword_256E6F078 != -1)
      swift_once();
    v30 = sub_23F619E44();
    *(_QWORD *)(v0 + 424) = sub_23F361498(v30, (uint64_t)qword_256E77B48);
    sub_23F619E38();
    sub_23F619DFC();
    v31 = sub_23F619E38();
    sub_23F61C694();
    if ((sub_23F4455D4() & 1) != 0)
    {
      v32 = (uint8_t *)sub_23F366668();
      *(_WORD *)v32 = 0;
      v33 = sub_23F619E08();
      _os_signpost_emit_with_name_impl(&dword_23F35A000, v31, (os_signpost_type_t)v25, v33, "PlannerHTTPAPISession.data", "", v32, 2u);
      sub_23F366530();
    }
    v34 = *(_QWORD *)(v0 + 248);
    v35 = *(_QWORD *)(v0 + 216);
    v36 = *(_QWORD *)(v0 + 224);
    v37 = *(_QWORD *)(v0 + 144);

    v38 = sub_23F38422C();
    v39(v38);
    sub_23F619E74();
    sub_23F3668A0();
    *(_QWORD *)(v0 + 432) = sub_23F619E68();
    v40 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    *(_QWORD *)(v0 + 440) = v40;
    v40(v34, v35);
    v41 = *(_QWORD *)(v37 + 24);
    ObjectType = swift_getObjectType();
    v48 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v41 + 8) + *(_QWORD *)(v41 + 8));
    v43 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 448) = v43;
    *v43 = v0;
    v43[1] = sub_23F4DEE78;
    return v48(*(_QWORD *)(v0 + 400), ObjectType, v41);
  }
  return result;
}

uint64_t sub_23F4DEE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[57] = a1;
  v5[58] = a2;
  v5[59] = a3;
  v5[60] = v3;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23F4DEEE8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint8_t *v7;
  os_signpost_id_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  id v15;
  id v16;
  os_log_type_t v17;
  void *v18;
  uint8_t *v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  void *v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v68;
  _BOOL4 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint8_t *v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  void *v94;
  id v95;
  NSObject *v96;
  os_log_type_t v97;
  _BOOL4 v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  NSObject *v113;
  id v114;
  os_log_type_t v115;
  uint8_t *v116;
  void *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  _QWORD *v131;
  void *v132;
  unint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t *v140;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  NSObject *v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(uint64_t, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(uint64_t, uint64_t);
  uint64_t v180;
  uint64_t (*v181)(uint64_t, uint64_t);
  void *v182;
  void (*v183)(uint64_t, uint64_t);
  void (*v184)(uint64_t, uint64_t);
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;

  v1 = *(_QWORD *)(v0 + 432);
  v2 = sub_23F619E38();
  sub_23F619E5C();
  sub_23F61C688();
  if ((sub_23F4455D4() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 200);
    v3 = *(_QWORD *)(v0 + 208);
    v5 = *(_QWORD *)(v0 + 192);
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x24BEE7810])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
      v6 = "";
    }
    v7 = (uint8_t *)sub_23F366668();
    *(_WORD *)v7 = 0;
    v8 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v2, (os_signpost_type_t)v1, v8, "PlannerHTTPAPISession.data", v6, v7, 2u);
    sub_23F366530();
  }
  v9 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
  v10 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 216);

  v9(v10, v11);
  objc_opt_self();
  v12 = swift_dynamicCastObjCClass();
  if (v12)
  {
    v13 = (void *)v12;
    v14 = *(NSObject **)(v0 + 344);
    v15 = *(id *)(v0 + 472);
    sub_23F445524();
    v16 = v15;
    sub_23F619E8C();
    v17 = sub_23F3B1A04();
    if (sub_23F3F0E3C(v17))
    {
      v18 = *(void **)(v0 + 472);
      v19 = (uint8_t *)sub_23F366668();
      *(_DWORD *)v19 = 134217984;
      *(_QWORD *)(v0 + 88) = sub_23F3E532C((uint64_t)v19, sel_statusCode);
      sub_23F61C790();

      sub_23F38485C(&dword_23F35A000, v14, (os_log_type_t)v15, "Received response with status code: %ld", v19);
      sub_23F366530();
    }

    v20 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 408);
    v21 = *(_QWORD *)(v0 + 344);
    v22 = *(_QWORD *)(v0 + 280);

    v23 = v20(v21, v22);
    v24 = (uint64_t)sub_23F3E532C(v23, sel_statusCode);
    switch(v24)
    {
      case 302:
        goto LABEL_12;
      case 429:
        v37 = *(NSObject **)(v0 + 328);
        sub_23F445524();
        sub_23F619E8C();
        v38 = sub_23F3F0EEC();
        if (sub_23F3F0E3C(v38))
        {
          v39 = (uint8_t *)sub_23F366668();
          *(_WORD *)v39 = 0;
          sub_23F4114BC(&dword_23F35A000, v37, (os_log_type_t)v21, "Rate limited!", v39);
          sub_23F366530();
        }
        v40 = *(void **)(v0 + 472);
        v41 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
        v176 = *(_QWORD *)(v0 + 400);
        v179 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
        v42 = *(_QWORD *)(v0 + 376);
        v43 = *(_QWORD *)(v0 + 328);
        v44 = *(_QWORD *)(v0 + 280);

        v41(v43, v44);
        sub_23F445074();
        sub_23F362D64();
        *v45 = xmmword_23F622290;
        sub_23F4E4C70();
        sub_23F4E4DD4();
        swift_release();

        v179(v176, v42);
        goto LABEL_40;
      case 401:
LABEL_12:
        v25 = *(NSObject **)(v0 + 336);
        sub_23F445524();
        sub_23F619E8C();
        v26 = sub_23F3B1A04();
        if (sub_23F3F0E3C(v26))
        {
          v27 = (uint8_t *)sub_23F366668();
          *(_WORD *)v27 = 0;
          sub_23F4114BC(&dword_23F35A000, v25, (os_log_type_t)v21, "Authorization expired. Will reauthorize and retry request.", v27);
          sub_23F366530();
        }
        v29 = *(_QWORD *)(v0 + 464);
        v28 = *(void **)(v0 + 472);
        v30 = *(_QWORD *)(v0 + 456);
        v31 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
        v170 = *(_QWORD *)(v0 + 400);
        v175 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
        v167 = *(_QWORD *)(v0 + 376);
        v32 = *(_QWORD *)(v0 + 336);
        v33 = *(_QWORD *)(v0 + 280);

        v31(v32, v33);
        sub_23F4E4DA4();
        sub_23F61C8E0();
        v34 = sub_23F3C8954();
        v187 = 0xD000000000000017;
        v188 = 0x800000023F636550;
        *(_QWORD *)(v0 + 80) = sub_23F3E532C(v34, (const char *)&selRef_URLForResource_withExtension_);
        sub_23F61CC1C();
        sub_23F4E4E10();
        sub_23F362D08();
        v35 = v188;
        sub_23F445074();
        sub_23F362D64();
        *v36 = v187;
        v36[1] = v35;
        sub_23F4E4C70();
        sub_23F3F3D0C(v30, v29);
        swift_release();

        v175(v170, v167);
LABEL_40:
        sub_23F4E4BBC();
        sub_23F3666A0();
        sub_23F3666DC();
        sub_23F362CC8();
        sub_23F3666C4();
        sub_23F3666EC();
        sub_23F366708();
        sub_23F3666E4();
        sub_23F366698();
        sub_23F3666D4();
        sub_23F383890();
        sub_23F383888();
        sub_23F383880();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        v93 = *(uint64_t (**)(void))(v0 + 8);
        return v93();
    }
    if (v24 >= 300)
    {
      sub_23F4E0360((uint64_t)&v187);
      v94 = *(void **)(v0 + 472);
      if (v189)
      {
        v177 = v187;
        v169 = v0 + 56;
        v172 = v188;
        sub_23F445524();
        swift_bridgeObjectRetain_n();
        v95 = v94;
        v96 = sub_23F619E8C();
        v97 = sub_23F61C628();
        v98 = os_log_type_enabled(v96, v97);
        v99 = *(void **)(v0 + 472);
        v100 = *(_QWORD *)(v0 + 320);
        if (v98)
        {
          v164 = *(_QWORD *)(v0 + 408);
          v162 = *(_QWORD *)(v0 + 280);
          v101 = sub_23F366668();
          v156 = sub_23F366668();
          v185 = v156;
          *(_DWORD *)v101 = 134218242;
          *(_QWORD *)(v0 + 64) = sub_23F3E532C(v156, sel_statusCode);
          sub_23F61C790();

          *(_WORD *)(v101 + 12) = 2080;
          v110 = sub_23F4E4D10(v102, v103, v104, v105, v106, v107, v108, v109, v142, v143, v145, v146, v147, v148, v149, v150, v151, v152, v156,
                   v100,
                   v162,
                   v164,
                   v169,
                   v172,
                   v177);
          sub_23F37AE00(v110, v111, &v185);
          *(_QWORD *)(v0 + 72) = v112;
          sub_23F61C790();
          sub_23F362984();
          sub_23F4E4DB4();
          _os_log_impl(&dword_23F35A000, v96, v97, "Unhandled HTTP status: %ld error response: %s", (uint8_t *)v101, 0x16u);
          sub_23F3B17D4();
          sub_23F366530();
        }

        sub_23F4E4DB4();
        sub_23F4E4DC8();
        v118 = *(_QWORD *)(v0 + 464);
        v117 = *(void **)(v0 + 472);
        v119 = *(_QWORD *)(v0 + 456);
        v183 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
        v165 = *(_QWORD *)(v0 + 400);
        v120 = *(_QWORD *)(v0 + 376);
        sub_23F4E4DA4();
        sub_23F61C8E0();
        v121 = sub_23F3C8954();
        v185 = 0xD000000000000017;
        v186 = 0x800000023F636550;
        *(_QWORD *)(v0 + 56) = sub_23F3E532C(v121, sel_statusCode);
        sub_23F61CC1C();
        sub_23F61C280();
        sub_23F362D08();
        v122 = sub_23F61C280();
        sub_23F4E4D10(v122, v123, v124, v125, v126, v127, v128, v129, v142, v143, v145, v146, v147, v148, v149, v150, v151, v152, v154,
          v157,
          v159,
          v165,
          v169,
          v172,
          v177);
        sub_23F38432C();
        sub_23F61C280();
        sub_23F384120();
        v130 = v186;
        sub_23F445074();
        sub_23F362D64();
        *v131 = v185;
        v131[1] = v130;
        sub_23F4E4C70();
        sub_23F3F3D0C(v119, v118);
        swift_release();

        v183(v166, v120);
      }
      else
      {
        v113 = *(NSObject **)(v0 + 312);
        sub_23F445524();
        v114 = v94;
        sub_23F619E8C();
        v115 = sub_23F3F0EEC();
        if (sub_23F3F0E3C(v115))
        {
          v182 = *(void **)(v0 + 472);
          v116 = (uint8_t *)sub_23F366668();
          *(_DWORD *)v116 = 134217984;
          *(_QWORD *)(v0 + 48) = sub_23F3E532C((uint64_t)v116, sel_statusCode);
          sub_23F61C790();

          sub_23F38485C(&dword_23F35A000, v113, (os_log_type_t)v94, "Unhandled HTTP error status code: %ld", v116);
          sub_23F366530();
        }

        v132 = *(void **)(v0 + 472);
        v134 = *(_QWORD *)(v0 + 456);
        v133 = *(_QWORD *)(v0 + 464);
        v135 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
        v178 = *(_QWORD *)(v0 + 400);
        v184 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
        v173 = *(_QWORD *)(v0 + 376);
        v136 = *(_QWORD *)(v0 + 312);
        v137 = *(_QWORD *)(v0 + 280);

        v135(v136, v137);
        sub_23F4E4DA4();
        sub_23F61C8E0();
        sub_23F3C8954();
        v187 = 0xD000000000000022;
        v188 = 0x800000023F636520;
        *(_QWORD *)(v0 + 40) = objc_msgSend(v13, (SEL)&selRef_URLForResource_withExtension_);
        sub_23F61CC1C();
        sub_23F4E4E10();
        sub_23F362D08();
        v138 = v187;
        v139 = v188;
        sub_23F445074();
        sub_23F362D64();
        *v140 = v138;
        v140[1] = v139;
        sub_23F4E4C70();
        sub_23F3F3D0C(v134, v133);
        swift_release();

        v184(v178, v173);
      }
      goto LABEL_40;
    }

  }
  v46 = *(_QWORD *)(v0 + 480);
  swift_getAssociatedConformanceWitness();
  sub_23F616AB4();
  if (v46)
  {
    v47 = *(NSObject **)(v0 + 296);
    sub_23F61C13C();
    sub_23F3C85C0();
    v49 = sub_23F61C124();
    v50 = v48;
    if (v48)
      v51 = v48;
    else
      v51 = 0x800000023F636500;
    sub_23F61910C();
    sub_23F4E4DC0();
    sub_23F4E4DC0();
    sub_23F617BA0();
    v52 = v47;
    sub_23F619E8C();
    v53 = sub_23F3F0EEC();
    v54 = sub_23F4E4E1C();
    v55 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
    v56 = *(_QWORD *)(v0 + 296);
    v180 = *(_QWORD *)(v0 + 280);
    if (v54)
    {
      v57 = 0xD000000000000016;
      if (v50)
        v57 = v49;
      v160 = v57;
      v58 = sub_23F366668();
      v59 = (_QWORD *)sub_23F366668();
      v187 = sub_23F366668();
      *(_DWORD *)v58 = 136315394;
      sub_23F617BA0();
      sub_23F37AE00(v160, v51, &v187);
      *(_QWORD *)(v0 + 16) = v60;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v58 + 12) = 2112;
      sub_23F4E4DC0();
      v61 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 24) = v61;
      sub_23F61C790();
      *v59 = v61;
      sub_23F41C618();
      sub_23F41C618();
      _os_log_impl(&dword_23F35A000, v52, v53, "Error decoding Ajax server response: %s. %@", (uint8_t *)v58, 0x16u);
      sub_23F35D2E8(&qword_256E6FAB0);
      sub_23F3B17D4();
      sub_23F366530();
    }
    swift_bridgeObjectRelease_n();
    sub_23F41C618();
    sub_23F41C618();

    v55(v56, v180);
    v80 = *(void **)(v0 + 472);
    v81 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
    v82 = *(_QWORD *)(v0 + 400);
    v83 = *(_QWORD *)(v0 + 376);
    sub_23F445074();
    sub_23F362D64();
    *v84 = xmmword_23F620FD0;
    sub_23F4E4C70();
    sub_23F4E4DD4();
    swift_release();
    sub_23F41C618();

    v81(v82, v83);
    goto LABEL_40;
  }
  v62 = *(NSObject **)(v0 + 304);
  v63 = *(_QWORD *)(v0 + 184);
  v64 = *(_QWORD *)(v0 + 160);
  v65 = *(_QWORD *)(v0 + 168);
  v66 = *(_QWORD *)(v0 + 104);
  sub_23F445524();
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16);
  v67(v63, v66, v64);
  sub_23F619E8C();
  v68 = sub_23F3B1A04();
  v168 = v62;
  v69 = sub_23F4E4E1C();
  v171 = *(void **)(v0 + 472);
  v153 = *(_QWORD *)(v0 + 456);
  v155 = *(_QWORD *)(v0 + 464);
  v181 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 408);
  v163 = *(_QWORD *)(v0 + 304);
  v158 = *(_QWORD *)(v0 + 432);
  v161 = *(_QWORD *)(v0 + 280);
  v70 = *(_QWORD *)(v0 + 184);
  if (v69)
  {
    v71 = *(_QWORD *)(v0 + 176);
    v72 = *(_QWORD *)(v0 + 160);
    v144 = *(_QWORD *)(v0 + 168);
    v73 = (uint8_t *)sub_23F366668();
    v187 = sub_23F366668();
    *(_DWORD *)v73 = 136315138;
    v74 = sub_23F38422C();
    ((void (*)(uint64_t))v67)(v74);
    v75 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
    v75(v70, v72);
    swift_getAssociatedConformanceWitness();
    v76 = sub_23F61CC1C();
    v78 = v77;
    v75(v71, v72);
    sub_23F37AE00(v76, v78, &v187);
    *(_QWORD *)(v0 + 32) = v79;
    sub_23F61C790();
    sub_23F362D08();
    sub_23F38485C(&dword_23F35A000, v168, v68, "Received response from Ajax server: %s", v73);
    sub_23F3B17D4();
    sub_23F366530();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
  sub_23F3F3D0C(v153, v155);

  swift_release();
  sub_23F4E4DE0(v85, v86, v87, v88, v89, v90, v91, v92, v142, v143, v145, v146, v147, v148, v149, v150, v151, v153, v155,
    v158,
    v161,
    v163,
    (uint64_t)v62,
    (uint64_t)v171,
    v174,
    v181);
  sub_23F4E4DC8();
  sub_23F4E4BBC();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v93 = *(uint64_t (**)(void))(v0 + 8);
  return v93();
}

uint64_t sub_23F4DFD70()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 376);
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F383890();
  sub_23F383888();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23F4DFEA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F3B1728();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F362838();
  v1 = sub_23F619E44();
  sub_23F3F3F64(v1, qword_256E77B48);
  v2 = sub_23F38422C();
  sub_23F361498(v2, v3);
  sub_23F61910C();
  sub_23F619E2C();
  sub_23F362B80();
}

uint64_t PlannerHTTPClient.init(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);

  v6 = v0;
  sub_23F616A9C();
  sub_23F44D710();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F362930();
  v8 = sub_23F616AFC();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3B1F34();
  v10 = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17PlannerHTTPClient_encoder;
  sub_23F616B2C();
  sub_23F3668A0();
  v11 = sub_23F616B20();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, *MEMORY[0x24BDCB2F8], v8);
  sub_23F616B08();
  *(_QWORD *)(v6 + v10) = v11;
  v12 = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17PlannerHTTPClient_decoder;
  sub_23F616ACC();
  sub_23F3668A0();
  v13 = sub_23F616AC0();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v2, *MEMORY[0x24BDCB1A0], v1);
  sub_23F616AA8();
  *(_QWORD *)(v6 + v12) = v13;
  *(_QWORD *)(v6 + 16) = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  *(_QWORD *)(v6 + 24) = &off_250FD8C60;
  sub_23F432B2C();
  v14 = sub_23F38422C();
  v15(v14);
  return v6;
}

uint64_t type metadata accessor for PlannerHTTPClient.CompletionRequest(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E77E10);
}

uint64_t sub_23F4E008C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v30 = a7;
  v29 = a6;
  v26 = a4;
  v25[0] = a3;
  v25[1] = a1;
  v34 = a2;
  v11 = sub_23F35D2E8(&qword_256E70760);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F616E68();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v25 - v17;
  sub_23F3E5244(a5, (uint64_t)v13);
  v19 = sub_23F36195C((uint64_t)v13, 1, v14);
  v27 = v15;
  v28 = v8;
  if (v19 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v8 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17PlannerHTTPClient_url, v14);
    sub_23F3625D8((uint64_t)v13, &qword_256E70760);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  }
  v20 = v26;
  sub_23F616DFC();
  sub_23F616A60();
  sub_23F616A78();
  v32 = 0x3D6B63616361;
  v33 = 0xE600000000000000;
  swift_getKeyPath();
  sub_23F617C9C();
  swift_release();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F616A78();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    sub_23F616A48();
  v21 = v31;
  v22 = v27;
  sub_23F616A54();
  sub_23F616A3C();
  sub_23F616B14();
  if (v21)
  {
    v23 = sub_23F616A90();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a8, v23);
  }
  else
  {
    sub_23F616A84();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v18, v14);
}

void sub_23F4E0360(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  sub_23F3B1728();
  sub_23F44D710();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F362930();
  sub_23F4E4B4C();
  sub_23F616AB4();
  *(_OWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = v4;
  sub_23F383568();
}

uint64_t PlannerHTTPClient.ErrorResponse.description.getter()
{
  sub_23F61C8E0();
  swift_bridgeObjectRelease();
  sub_23F61CC1C();
  sub_23F61C280();
  sub_23F362C60();
  sub_23F61C280();
  sub_23F617BA0();
  sub_23F61C280();
  sub_23F362D18();
  return 0x3A65646F63;
}

void sub_23F4E0548()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_23F4E4E04();
  v0[1] = v1;
  sub_23F362928();
}

void PlannerHTTPClient.Options.hash(into:)()
{
  sub_23F61CD3C();
  sub_23F61CD54();
  sub_23F61CD54();
  sub_23F61CD54();
  sub_23F61CD54();
  sub_23F61CD54();
  sub_23F61CD54();
  sub_23F383568();
}

BOOL static PlannerHTTPClient.Options.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 8), *(float64x2_t *)(a2 + 8)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)))), 0xFuLL))) & 1) != 0&& *(_QWORD *)a1 == *(_QWORD *)a2&& *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40))
  {
    return *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48);
  }
  return result;
}

uint64_t sub_23F4E0654(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 110 && a2 == 0xE100000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1349545844 && a2 == 0xE400000000000000;
    if (v6 || (sub_23F61CC64() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x74617265706D6574 && a2 == 0xEB00000000657275;
      if (v7 || (sub_23F61CC64() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x65506874676E656CLL && a2 == 0xED000079746C616ELL;
        if (v8 || (sub_23F61CC64() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x800000023F638070 || (sub_23F61CC64() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x65536D6F646E6172 && a2 == 0xEA00000000006465;
          if (v9 || (sub_23F61CC64() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0x6E656B6F5478616DLL && a2 == 0xE900000000000073)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v11 = sub_23F61CC64();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 6;
            else
              return 7;
          }
        }
      }
    }
  }
}

uint64_t sub_23F4E0944()
{
  return 7;
}

uint64_t sub_23F4E094C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F4E0974
                                                            + 4 * asc_23F6284D0[a1]))(110, 0xE100000000000000);
}

uint64_t sub_23F4E0974()
{
  return 1349545844;
}

uint64_t sub_23F4E0984()
{
  return 0x74617265706D6574;
}

uint64_t sub_23F4E09A4()
{
  return 0x65506874676E656CLL;
}

unint64_t sub_23F4E09C8()
{
  return 0xD000000000000010;
}

uint64_t sub_23F4E09E4()
{
  return 0x65536D6F646E6172;
}

uint64_t sub_23F4E0A00()
{
  return 0x6E656B6F5478616DLL;
}

uint64_t sub_23F4E0A20()
{
  unsigned __int8 *v0;

  return sub_23F4E094C(*v0);
}

uint64_t sub_23F4E0A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4E0654(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F4E0A4C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F4E0944();
  *a1 = result;
  return result;
}

uint64_t sub_23F4E0A70()
{
  sub_23F4E3214();
  return sub_23F61CDC0();
}

uint64_t sub_23F4E0A98()
{
  sub_23F4E3214();
  return sub_23F61CDCC();
}

void PlannerHTTPClient.Options.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_23F35D2E8(&qword_256E77B80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B17A4();
  v6 = a1[3];
  v7 = a1;
  v9 = v8;
  sub_23F35EA9C(v7, v6);
  sub_23F4E3214();
  sub_23F61CD90();
  sub_23F4E4DEC();
  sub_23F61CBD4();
  if (!v1)
  {
    sub_23F4E4C1C();
    sub_23F4E4C1C();
    sub_23F4E4C1C();
    sub_23F4E4C1C();
    sub_23F4E4D84();
    sub_23F4E4D84();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v9);
  sub_23F4E4C94();
}

uint64_t PlannerHTTPClient.Options.hashValue.getter()
{
  sub_23F61CD30();
  PlannerHTTPClient.Options.hash(into:)();
  return sub_23F61CD60();
}

void PlannerHTTPClient.Options.init(from:)(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F35D2E8(&qword_256E77B90);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B1F34();
  sub_23F4E4CF0();
  sub_23F4E3214();
  sub_23F61CD84();
  if (!v1)
  {
    v6 = sub_23F61CB38();
    sub_23F4E4C0C();
    v8 = v7;
    sub_23F4E4C0C();
    v10 = v9;
    sub_23F4E4C0C();
    v12 = v11;
    sub_23F4E4C0C();
    v14 = v13;
    v15 = sub_23F4E4D64();
    v16 = sub_23F4E4D64();
    sub_23F383CA8(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    *a1 = v6;
    a1[1] = v8;
    a1[2] = v10;
    a1[3] = v12;
    a1[4] = v14;
    a1[5] = v15;
    a1[6] = v16;
  }
  sub_23F44D4A0();
  sub_23F4E4C94();
}

void sub_23F4E0E48(uint64_t *a1@<X8>)
{
  PlannerHTTPClient.Options.init(from:)(a1);
}

void sub_23F4E0E5C(_QWORD *a1)
{
  PlannerHTTPClient.Options.encode(to:)(a1);
}

uint64_t sub_23F4E0E78()
{
  sub_23F61CD30();
  PlannerHTTPClient.Options.hash(into:)();
  return sub_23F61CD60();
}

uint64_t PlannerHTTPClient.ErrorResponse.hash(into:)()
{
  sub_23F61CD3C();
  sub_23F362CDC();
  sub_23F4932CC();
  return sub_23F4E4CE4();
}

uint64_t static PlannerHTTPClient.ErrorResponse.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2)
    return 0;
  if (a1[1] == a2[1] && a1[2] == a2[2])
    return 1;
  else
    return sub_23F3C8510();
}

uint64_t sub_23F4E0F54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F4E1030(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6567617373656DLL;
  else
    return 1701080931;
}

uint64_t sub_23F4E1060()
{
  char *v0;

  return sub_23F4E1030(*v0);
}

uint64_t sub_23F4E1068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4E0F54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F4E108C()
{
  sub_23F4E3250();
  return sub_23F61CDC0();
}

uint64_t sub_23F4E10B4()
{
  sub_23F4E3250();
  return sub_23F61CDCC();
}

void PlannerHTTPClient.ErrorResponse.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F362C98();
  v2 = v1;
  v3 = sub_23F35D2E8(&qword_256E77B98);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3B17A4();
  sub_23F35EA9C(v2, v2[3]);
  sub_23F4E3250();
  sub_23F61CD90();
  sub_23F61CBD4();
  if (!v0)
    sub_23F61CBB0();
  sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F362870();
}

uint64_t PlannerHTTPClient.ErrorResponse.hashValue.getter()
{
  sub_23F362CB0();
  sub_23F493448();
  sub_23F362CDC();
  sub_23F4932CC();
  sub_23F362C60();
  return sub_23F362C10();
}

void PlannerHTTPClient.ErrorResponse.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F362C98();
  v2 = v1;
  v4 = v3;
  sub_23F35D2E8(&qword_256E77BA8);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F4E4CF0();
  sub_23F4E3250();
  sub_23F4E4D28();
  if (!v0)
  {
    v6 = sub_23F61CB38();
    v7 = sub_23F4E4D54();
    v9 = v8;
    sub_23F4E4C2C();
    *v4 = v6;
    v4[1] = v7;
    v4[2] = v9;
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v2);
  sub_23F362870();
}

void sub_23F4E12FC()
{
  PlannerHTTPClient.ErrorResponse.init(from:)();
}

void sub_23F4E1310()
{
  PlannerHTTPClient.ErrorResponse.encode(to:)();
}

uint64_t sub_23F4E132C()
{
  sub_23F61CD30();
  sub_23F61CD3C();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  return sub_23F61CD60();
}

uint64_t PlannerHTTPClient.CompletionRequest.baseURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PlannerHTTPClient.CompletionRequest(0) + 36);
  return sub_23F3E5244(v3, a1);
}

uint64_t PlannerHTTPClient.CompletionRequest.baseURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PlannerHTTPClient.CompletionRequest(0) + 36);
  return sub_23F444F70(a1, v3);
}

uint64_t (*PlannerHTTPClient.CompletionRequest.baseURL.modify())(_QWORD, _QWORD)
{
  type metadata accessor for PlannerHTTPClient.CompletionRequest(0);
  return nullsub_1;
}

uint64_t PlannerHTTPClient.CompletionRequest.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23F432B2C();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B17A4();
  sub_23F35D2E8(&qword_256E70760);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F383EC4();
  sub_23F384324();
  sub_23F4E4D94();
  sub_23F38432C();
  sub_23F384324();
  sub_23F4E4D94();
  sub_23F38432C();
  PlannerHTTPClient.Options.hash(into:)();
  if (*(_QWORD *)(v0 + 96))
  {
    sub_23F4E4D40();
    sub_23F384324();
    sub_23F61C22C();
    sub_23F38432C();
  }
  else
  {
    sub_23F4E4D40();
  }
  sub_23F4E4D40();
  v7 = type metadata accessor for PlannerHTTPClient.CompletionRequest(0);
  sub_23F3E5244(v0 + *(int *)(v7 + 36), v2);
  if (sub_23F36195C(v2, 1, v4) == 1)
    return sub_23F4E4D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v4);
  sub_23F4E4D40();
  sub_23F3612C0(&qword_256E77BB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23F61C04C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
}

BOOL static PlannerHTTPClient.CompletionRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  BOOL v21;
  char v22;
  _BOOL8 result;
  BOOL v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;

  v6 = sub_23F432B2C();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F35D2E8(&qword_256E77BB8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F362838();
  sub_23F35D2E8(&qword_256E70760);
  sub_23F3834C0();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v35 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v35 - v19;
  v21 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v21 || (v22 = sub_23F3C8510(), result = 0, (v22 & 1) != 0))
  {
    v24 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v24 || (v25 = sub_23F3C8510(), result = 0, (v25 & 1) != 0))
    {
      v41 = *(_QWORD *)(a1 + 32);
      v26 = *(_OWORD *)(a1 + 56);
      v42 = *(_OWORD *)(a1 + 40);
      v43 = v26;
      v44 = *(_OWORD *)(a1 + 72);
      v37 = *(_QWORD *)(a2 + 32);
      v38 = *(_OWORD *)(a2 + 40);
      v39 = *(_OWORD *)(a2 + 56);
      v40 = *(_OWORD *)(a2 + 72);
      if (!static PlannerHTTPClient.Options.== infix(_:_:)((uint64_t)&v41, (uint64_t)&v37))
        return 0;
      v27 = *(_QWORD *)(a1 + 96);
      v28 = *(_QWORD *)(a2 + 96);
      if (v27)
      {
        if (!v28)
          return 0;
        if (*(_QWORD *)(a1 + 88) != *(_QWORD *)(a2 + 88) || v27 != v28)
        {
          v30 = sub_23F3C8510();
          result = 0;
          if ((v30 & 1) == 0)
            return result;
        }
      }
      else if (v28)
      {
        return 0;
      }
      if (*(unsigned __int8 *)(a1 + 104) != *(unsigned __int8 *)(a2 + 104))
        return 0;
      v36 = type metadata accessor for PlannerHTTPClient.CompletionRequest(0);
      sub_23F3E5244(a1 + *(int *)(v36 + 36), (uint64_t)v20);
      sub_23F3E5244(a2 + *(int *)(v36 + 36), (uint64_t)v18);
      v31 = v2 + *(int *)(v10 + 48);
      sub_23F3E5244((uint64_t)v20, v2);
      sub_23F3E5244((uint64_t)v18, v31);
      sub_23F493394(v2);
      if (v21)
      {
        sub_23F4DC630((uint64_t)v18);
        sub_23F4DC630((uint64_t)v20);
        sub_23F493394(v31);
        if (v21)
        {
          sub_23F3625D8(v2, &qword_256E70760);
          return 1;
        }
      }
      else
      {
        sub_23F3E5244(v2, (uint64_t)v15);
        sub_23F493394(v31);
        if (!v32)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v9, v31, v6);
          sub_23F3612C0(&qword_256E77BC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
          v33 = sub_23F61C0A0();
          v34 = *(void (**)(char *, uint64_t))(v3 + 8);
          v34(v9, v6);
          sub_23F4DC630((uint64_t)v18);
          sub_23F4DC630((uint64_t)v20);
          v34(v15, v6);
          sub_23F4DC630(v2);
          return (v33 & 1) != 0;
        }
        sub_23F4DC630((uint64_t)v18);
        sub_23F4DC630((uint64_t)v20);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v15, v6);
      }
      sub_23F3625D8(v2, &qword_256E77BB8);
      return 0;
    }
  }
  return result;
}

uint64_t sub_23F4E1930(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F61CC64() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000;
      if (v7 || (sub_23F61CC64() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 1919251317 && a2 == 0xE400000000000000;
        if (v8 || (sub_23F61CC64() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x4C656C6261736964 && a2 == 0xEE00676E6967676FLL;
          if (v9 || (sub_23F61CC64() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x4C525565736162 && a2 == 0xE700000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_23F61CC64();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_23F4E1BA0()
{
  return 6;
}

uint64_t sub_23F4E1BA8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F4E1BD8 + 4 * byte_23F6284D7[a1]))(0x6C65646F6DLL, 0xE500000000000000);
}

uint64_t sub_23F4E1BD8()
{
  return 0x74706D6F7270;
}

uint64_t sub_23F4E1BEC()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_23F4E1C04()
{
  return 1919251317;
}

uint64_t sub_23F4E1C14()
{
  return 0x4C656C6261736964;
}

uint64_t sub_23F4E1C38()
{
  return 0x4C525565736162;
}

void sub_23F4E1C50()
{
  sub_23F4E2650();
}

uint64_t sub_23F4E1C68()
{
  unsigned __int8 *v0;

  return sub_23F4E1BA8(*v0);
}

uint64_t sub_23F4E1C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4E1930(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F4E1C94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F4E1BA0();
  *a1 = result;
  return result;
}

uint64_t sub_23F4E1CB8()
{
  sub_23F4E328C();
  return sub_23F61CDC0();
}

uint64_t sub_23F4E1CE0()
{
  sub_23F4E328C();
  return sub_23F61CDCC();
}

uint64_t PlannerHTTPClient.CompletionRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_23F35D2E8(&qword_256E77BC8);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B17A4();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F4E328C();
  sub_23F61CD90();
  sub_23F4E4D48();
  if (!v1)
  {
    sub_23F4E4D48();
    sub_23F4E32C8();
    sub_23F4E4DF8();
    sub_23F4E4DEC();
    sub_23F61CB80();
    sub_23F4E4DEC();
    sub_23F61CBBC();
    type metadata accessor for PlannerHTTPClient.CompletionRequest(0);
    sub_23F616E68();
    sub_23F3612C0(&qword_256E77BE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23F4E4DEC();
    sub_23F61CB98();
  }
  return sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

void PlannerHTTPClient.CompletionRequest.hashValue.getter()
{
  sub_23F362CB0();
  PlannerHTTPClient.CompletionRequest.hash(into:)();
  sub_23F362C10();
  sub_23F362AD4();
}

void PlannerHTTPClient.CompletionRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  sub_23F362C98();
  v4 = v3;
  v14 = v5;
  sub_23F35D2E8(&qword_256E70760);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3845CC();
  v15 = sub_23F35D2E8(&qword_256E77BE8);
  MEMORY[0x24BDAC7A8](v15);
  sub_23F383EC4();
  type metadata accessor for PlannerHTTPClient.CompletionRequest(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B17A4();
  *(_QWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 96) = 0;
  v9 = v1 + *(int *)(v8 + 36);
  v10 = sub_23F616E68();
  sub_23F36196C(v9, 1, 1, v10);
  sub_23F35EA9C(v4, v4[3]);
  sub_23F4E328C();
  sub_23F61CD84();
  if (v0)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v4);
    swift_bridgeObjectRelease();
    sub_23F3625D8(v9, &qword_256E70760);
  }
  else
  {
    LOBYTE(v16) = 0;
    *(_QWORD *)v1 = sub_23F61CB14();
    *(_QWORD *)(v1 + 8) = v11;
    sub_23F4E4C7C(1);
    *(_QWORD *)(v1 + 16) = sub_23F61CB14();
    *(_QWORD *)(v1 + 24) = v12;
    sub_23F4E3304();
    sub_23F61CB44();
    *(_QWORD *)(v1 + 32) = v16;
    *(_OWORD *)(v1 + 40) = v17;
    *(_OWORD *)(v1 + 56) = v18;
    *(_OWORD *)(v1 + 72) = v19;
    sub_23F4E4C7C(3);
    *(_QWORD *)(v1 + 88) = sub_23F61CAE4();
    *(_QWORD *)(v1 + 96) = v13;
    sub_23F4E4C7C(4);
    *(_BYTE *)(v1 + 104) = sub_23F61CB20() & 1;
    sub_23F3612C0(&qword_256E77BF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    sub_23F61CAFC();
    sub_23F4E4BFC();
    sub_23F444F70(v2, v9);
    sub_23F4E3340(v1, v14);
    sub_23F44D4A0();
    sub_23F4E3384(v1);
  }
  sub_23F362870();
}

void sub_23F4E21E8()
{
  PlannerHTTPClient.CompletionRequest.init(from:)();
}

uint64_t sub_23F4E21FC(_QWORD *a1)
{
  return PlannerHTTPClient.CompletionRequest.encode(to:)(a1);
}

uint64_t sub_23F4E2218()
{
  sub_23F61CD30();
  PlannerHTTPClient.CompletionRequest.hash(into:)();
  return sub_23F61CD60();
}

uint64_t PlannerHTTPClient.CompletionResponse.model.getter()
{
  sub_23F383738();
  return sub_23F3C85C0();
}

void PlannerHTTPClient.CompletionResponse.model.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  sub_23F362B80();
}

uint64_t (*PlannerHTTPClient.CompletionResponse.model.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t PlannerHTTPClient.CompletionResponse.completions.getter()
{
  return sub_23F617BA0();
}

void PlannerHTTPClient.CompletionResponse.completions.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  sub_23F362928();
}

uint64_t (*PlannerHTTPClient.CompletionResponse.completions.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t PlannerHTTPClient.CompletionResponse.description.getter()
{
  uint64_t v0;

  sub_23F61C8E0();
  swift_bridgeObjectRelease();
  sub_23F362CDC();
  sub_23F61C280();
  sub_23F362C60();
  sub_23F61C280();
  sub_23F617BA0();
  sub_23F61C280();
  sub_23F384120();
  sub_23F61C280();
  v0 = sub_23F617BA0();
  MEMORY[0x24266F8F8](v0, &type metadata for Completion);
  sub_23F61C280();
  sub_23F362D18();
  sub_23F362D08();
  return 3826793;
}

uint64_t PlannerHTTPClient.CompletionResponse.hash(into:)()
{
  sub_23F362CDC();
  sub_23F4932CC();
  sub_23F362C60();
  sub_23F617BA0();
  sub_23F61C22C();
  sub_23F384120();
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F3C79E4();
  return swift_bridgeObjectRelease();
}

void static PlannerHTTPClient.CompletionResponse.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (sub_23F3C8510() & 1) != 0)
  {
    v7 = v2 == v4 && v3 == v5;
    if (v7 || (sub_23F3C8510() & 1) != 0)
    {
      sub_23F3C85C0();
      sub_23F3C6014();
    }
  }
}

uint64_t sub_23F4E250C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000;
    if (v6 || (sub_23F61CC64() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6974656C706D6F63 && a2 == 0xEB00000000736E6FLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

void sub_23F4E2650()
{
  sub_23F362CB0();
  sub_23F61CD3C();
  sub_23F362C10();
  sub_23F362AD4();
}

uint64_t sub_23F4E2680(char a1)
{
  if (!a1)
    return 25705;
  if (a1 == 1)
    return 0x6C65646F6DLL;
  return 0x6974656C706D6F63;
}

void sub_23F4E26D0()
{
  sub_23F61CD30();
  sub_23F493448();
  sub_23F362C10();
  sub_23F362AD4();
}

uint64_t sub_23F4E26FC()
{
  char *v0;

  return sub_23F4E2680(*v0);
}

uint64_t sub_23F4E2704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4E250C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F4E2728()
{
  sub_23F4E33C0();
  return sub_23F61CDC0();
}

uint64_t sub_23F4E2750()
{
  sub_23F4E33C0();
  return sub_23F61CDCC();
}

void PlannerHTTPClient.CompletionResponse.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F362C98();
  v3 = v2;
  v4 = sub_23F35D2E8(&qword_256E77C00);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B17A4();
  sub_23F35EA9C(v3, v3[3]);
  sub_23F4E33C0();
  sub_23F61CD90();
  sub_23F61CBB0();
  if (!v0)
  {
    sub_23F4E4D48();
    sub_23F35D2E8(&qword_256E77C10);
    sub_23F4E3438(&qword_256E77C18, (uint64_t (*)(void))sub_23F4E33FC, MEMORY[0x24BEE12A0]);
    sub_23F4E4DF8();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  sub_23F362870();
}

uint64_t PlannerHTTPClient.CompletionResponse.hashValue.getter()
{
  sub_23F362CB0();
  sub_23F617BA0();
  sub_23F61C22C();
  sub_23F362D08();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F383738();
  sub_23F3C79E4();
  sub_23F362984();
  return sub_23F362C10();
}

void PlannerHTTPClient.CompletionResponse.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F362C98();
  v2 = v1;
  v4 = v3;
  sub_23F35D2E8(&qword_256E77C28);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3845CC();
  sub_23F35EA9C(v2, v2[3]);
  sub_23F4E33C0();
  sub_23F61CD84();
  if (v0)
  {
    sub_23F44D4A0();
  }
  else
  {
    v6 = sub_23F4E4D74();
    v8 = v7;
    v13 = v6;
    sub_23F617BA0();
    v9 = sub_23F4E4D74();
    v11 = v10;
    v12 = v9;
    sub_23F35D2E8(&qword_256E77C10);
    sub_23F4E3438(&qword_256E77C30, (uint64_t (*)(void))sub_23F4E34A0, MEMORY[0x24BEE12D0]);
    sub_23F617BA0();
    sub_23F61CB44();
    sub_23F4E4C3C();
    sub_23F384324();
    sub_23F383738();
    sub_23F38432C();
    *v4 = v13;
    v4[1] = v8;
    v4[2] = v12;
    v4[3] = v11;
    v4[4] = v14;
    sub_23F44D4A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23F362870();
}

void sub_23F4E2B50()
{
  PlannerHTTPClient.CompletionResponse.init(from:)();
}

void sub_23F4E2B64()
{
  PlannerHTTPClient.CompletionResponse.encode(to:)();
}

uint64_t sub_23F4E2B80()
{
  sub_23F61CD30();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  sub_23F3C79E4();
  swift_bridgeObjectRelease();
  return sub_23F61CD60();
}

void PlannerHTTPClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  v0 = sub_23F432B2C();
  sub_23F362B6C(v0);
  swift_release();
  swift_release();
  sub_23F362928();
}

uint64_t PlannerHTTPClient.__deallocating_deinit()
{
  PlannerHTTPClient.deinit();
  return swift_deallocClassInstance();
}

uint64_t Completion.text.getter()
{
  sub_23F383738();
  return sub_23F3C85C0();
}

void Completion.text.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  sub_23F362B80();
}

uint64_t (*Completion.text.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Completion.hash(into:)()
{
  sub_23F383738();
  sub_23F61C22C();
  return sub_23F4E4CE4();
}

uint64_t static Completion.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23F3C8510();
}

uint64_t sub_23F4E2D6C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1954047348 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F4E2DE0()
{
  return 1954047348;
}

uint64_t sub_23F4E2DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4E2D6C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F4E2E1C()
{
  sub_23F4E34DC();
  return sub_23F61CDC0();
}

uint64_t sub_23F4E2E44()
{
  sub_23F4E34DC();
  return sub_23F61CDCC();
}

void Completion.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F362C98();
  v2 = v1;
  v3 = sub_23F35D2E8(&qword_256E77C40);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F383EC4();
  sub_23F35EA9C(v2, v2[3]);
  sub_23F4E34DC();
  sub_23F61CD90();
  sub_23F61CBB0();
  sub_23F383CA8(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F362870();
}

void Completion.hashValue.getter()
{
  sub_23F362CB0();
  sub_23F383738();
  sub_23F61C22C();
  sub_23F362984();
  sub_23F362C10();
  sub_23F362AD4();
}

void Completion.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F362C98();
  v2 = v1;
  v4 = v3;
  sub_23F35D2E8(&qword_256E77C50);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F4E4CF0();
  sub_23F4E34DC();
  sub_23F4E4D28();
  if (!v0)
  {
    v6 = sub_23F4E4D54();
    v8 = v7;
    sub_23F4E4C2C();
    *v4 = v6;
    v4[1] = v8;
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v2);
  sub_23F362870();
}

void sub_23F4E3014()
{
  Completion.init(from:)();
}

void sub_23F4E3028()
{
  Completion.encode(to:)();
}

uint64_t sub_23F4E3044()
{
  sub_23F61CD30();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  return sub_23F61CD60();
}

unint64_t sub_23F4E309C(uint64_t a1, unint64_t a2)
{
  if (a2 < 4)
    return a2 + 1;
  else
    return 0;
}

uint64_t sub_23F4E30A8()
{
  sub_23F4E4B10();
  return sub_23F61CCAC();
}

uint64_t sub_23F4E30D0()
{
  sub_23F4E4B10();
  return sub_23F61CCA0();
}

unint64_t sub_23F4E30F8()
{
  return 0xD000000000000016;
}

unint64_t sub_23F4E3114(uint64_t a1)
{
  uint64_t v1;

  return sub_23F4E309C(a1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_23F4E311C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_256E77EE0 + dword_256E77EE0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F4E4BB0;
  return v5(a1);
}

uint64_t sub_23F4E3180()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23F4E31D4;
  return sub_23F61C604();
}

uint64_t sub_23F4E31D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_23F4E4C4C();
  if (!v3)
  {
    v8 = v5;
    v9 = a2;
    v10 = a3;
  }
  return sub_23F4E4CD4(v8, v9, v10, *(uint64_t (**)(void))(v4 + 8));
}

unint64_t sub_23F4E3214()
{
  unint64_t result;

  result = qword_256E77B88;
  if (!qword_256E77B88)
  {
    result = MEMORY[0x242670A44](&unk_23F629020, &type metadata for PlannerHTTPClient.Options.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77B88);
  }
  return result;
}

unint64_t sub_23F4E3250()
{
  unint64_t result;

  result = qword_256E77BA0;
  if (!qword_256E77BA0)
  {
    result = MEMORY[0x242670A44](&unk_23F628FD0, &type metadata for PlannerHTTPClient.ErrorResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77BA0);
  }
  return result;
}

unint64_t sub_23F4E328C()
{
  unint64_t result;

  result = qword_256E77BD0;
  if (!qword_256E77BD0)
  {
    result = MEMORY[0x242670A44](&unk_23F628F80, &type metadata for PlannerHTTPClient.CompletionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77BD0);
  }
  return result;
}

unint64_t sub_23F4E32C8()
{
  unint64_t result;

  result = qword_256E77BD8;
  if (!qword_256E77BD8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlannerHTTPClient.Options, &type metadata for PlannerHTTPClient.Options);
    atomic_store(result, (unint64_t *)&qword_256E77BD8);
  }
  return result;
}

unint64_t sub_23F4E3304()
{
  unint64_t result;

  result = qword_256E77BF0;
  if (!qword_256E77BF0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlannerHTTPClient.Options, &type metadata for PlannerHTTPClient.Options);
    atomic_store(result, (unint64_t *)&qword_256E77BF0);
  }
  return result;
}

uint64_t sub_23F4E3340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlannerHTTPClient.CompletionRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F4E3384(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlannerHTTPClient.CompletionRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23F4E33C0()
{
  unint64_t result;

  result = qword_256E77C08;
  if (!qword_256E77C08)
  {
    result = MEMORY[0x242670A44](&unk_23F628F30, &type metadata for PlannerHTTPClient.CompletionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77C08);
  }
  return result;
}

unint64_t sub_23F4E33FC()
{
  unint64_t result;

  result = qword_256E77C20;
  if (!qword_256E77C20)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for Completion, &type metadata for Completion);
    atomic_store(result, (unint64_t *)&qword_256E77C20);
  }
  return result;
}

uint64_t sub_23F4E3438(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_23F35EB74(&qword_256E77C10);
    v8 = a2();
    result = MEMORY[0x242670A44](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23F4E34A0()
{
  unint64_t result;

  result = qword_256E77C38;
  if (!qword_256E77C38)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for Completion, &type metadata for Completion);
    atomic_store(result, (unint64_t *)&qword_256E77C38);
  }
  return result;
}

unint64_t sub_23F4E34DC()
{
  unint64_t result;

  result = qword_256E77C48;
  if (!qword_256E77C48)
  {
    result = MEMORY[0x242670A44](&unk_23F628EE0, &type metadata for Completion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77C48);
  }
  return result;
}

unint64_t sub_23F4E351C()
{
  unint64_t result;

  result = qword_256E77C58;
  if (!qword_256E77C58)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlannerHTTPClient.Options, &type metadata for PlannerHTTPClient.Options);
    atomic_store(result, (unint64_t *)&qword_256E77C58);
  }
  return result;
}

unint64_t sub_23F4E355C()
{
  unint64_t result;

  result = qword_256E77C60;
  if (!qword_256E77C60)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlannerHTTPClient.ErrorResponse, &type metadata for PlannerHTTPClient.ErrorResponse);
    atomic_store(result, (unint64_t *)&qword_256E77C60);
  }
  return result;
}

_UNKNOWN **sub_23F4E3598()
{
  return &protocol witness table for PlannerHTTPClient.CompletionResponse;
}

unint64_t sub_23F4E35A8()
{
  unint64_t result;

  result = qword_256E77C68;
  if (!qword_256E77C68)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlannerHTTPClient.CompletionResponse, &type metadata for PlannerHTTPClient.CompletionResponse);
    atomic_store(result, (unint64_t *)&qword_256E77C68);
  }
  return result;
}

unint64_t sub_23F4E35EC()
{
  unint64_t result;

  result = qword_256E77C70;
  if (!qword_256E77C70)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlannerHTTPClient.CompletionResponse, &type metadata for PlannerHTTPClient.CompletionResponse);
    atomic_store(result, (unint64_t *)&qword_256E77C70);
  }
  return result;
}

void sub_23F4E3628(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F3612C0(&qword_256E77CC8, type metadata accessor for PlannerHTTPClient.CompletionRequest, (uint64_t)&protocol conformance descriptor for PlannerHTTPClient.CompletionRequest);
  *(_QWORD *)(a1 + 8) = v2;
  sub_23F3612C0(&qword_256E74500, type metadata accessor for PlannerHTTPClient.CompletionRequest, (uint64_t)&protocol conformance descriptor for PlannerHTTPClient.CompletionRequest);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_23F4E3684()
{
  sub_23F3612C0(&qword_256E77CD0, type metadata accessor for PlannerHTTPClient.CompletionRequest, (uint64_t)&protocol conformance descriptor for PlannerHTTPClient.CompletionRequest);
}

unint64_t sub_23F4E36B4()
{
  unint64_t result;

  result = qword_256E77CD8;
  if (!qword_256E77CD8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlannerHTTPClient.CompletionResponse, &type metadata for PlannerHTTPClient.CompletionResponse);
    atomic_store(result, (unint64_t *)&qword_256E77CD8);
  }
  return result;
}

unint64_t sub_23F4E36F4()
{
  unint64_t result;

  result = qword_256E77CE0;
  if (!qword_256E77CE0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for Completion, &type metadata for Completion);
    atomic_store(result, (unint64_t *)&qword_256E77CE0);
  }
  return result;
}

uint64_t sub_23F4E3730()
{
  return type metadata accessor for PlannerHTTPClient(0);
}

uint64_t type metadata accessor for PlannerHTTPClient(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E77D18);
}

uint64_t sub_23F4E374C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F616E68();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PlannerHTTPClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlannerHTTPClient.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

__n128 initializeWithCopy for PlannerHTTPClient.Options(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PlannerHTTPClient.Options(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PlannerHTTPClient.Options(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 56) = v3;
  return result;
}

void type metadata accessor for PlannerHTTPClient.Options()
{
  sub_23F362C18();
}

uint64_t initializeBufferWithCopyOfBuffer for PlannerHTTPClient.ErrorResponse(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_23F617BA0();
  return a1;
}

uint64_t destroy for PlannerHTTPClient.ErrorResponse()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for PlannerHTTPClient.ErrorResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PlannerHTTPClient.ErrorResponse(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlannerHTTPClient.ErrorResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlannerHTTPClient.ErrorResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for PlannerHTTPClient.ErrorResponse()
{
  sub_23F362C18();
}

_QWORD *initializeBufferWithCopyOfBuffer for PlannerHTTPClient.CompletionRequest(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v7;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    v8 = a2[11];
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v8;
    *(_QWORD *)(a1 + 96) = a2[12];
    v9 = *(int *)(a3 + 36);
    v10 = (char *)a2 + v9;
    v11 = (void *)(a1 + v9);
    *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
    v12 = sub_23F616E68();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    if (sub_23F36195C((uint64_t)v10, 1, v12))
    {
      v13 = sub_23F35D2E8(&qword_256E70760);
      memcpy(v11, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
      sub_23F36196C((uint64_t)v11, 0, 1, v12);
    }
  }
  return v3;
}

uint64_t destroy for PlannerHTTPClient.CompletionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_23F616E68();
  result = sub_23F36195C(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for PlannerHTTPClient.CompletionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  const void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v8 = *(int *)(a3 + 36);
  v9 = (const void *)(a2 + v8);
  v10 = (void *)(a1 + v8);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v11 = sub_23F616E68();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  if (sub_23F36195C((uint64_t)v9, 1, v11))
  {
    v12 = sub_23F35D2E8(&qword_256E70760);
    memcpy(v10, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v9, v11);
    sub_23F36196C((uint64_t)v10, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for PlannerHTTPClient.CompletionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v6 = *(int *)(a3 + 36);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23F616E68();
  v10 = sub_23F36195C((uint64_t)v7, 1, v9);
  v11 = sub_23F36195C((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F35D2E8(&qword_256E70760);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  sub_23F36196C((uint64_t)v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for PlannerHTTPClient.CompletionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  const void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v6 = *(int *)(a3 + 36);
  v7 = (const void *)(a2 + v6);
  v8 = (void *)(a1 + v6);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v9 = sub_23F616E68();
  if (sub_23F36195C((uint64_t)v7, 1, v9))
  {
    v10 = sub_23F35D2E8(&qword_256E70760);
    memcpy(v8, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, v7, v9);
    sub_23F36196C((uint64_t)v8, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithTake for PlannerHTTPClient.CompletionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v9 = *(int *)(a3 + 36);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_23F616E68();
  v13 = sub_23F36195C((uint64_t)v10, 1, v12);
  v14 = sub_23F36195C((uint64_t)v11, 1, v12);
  if (!v13)
  {
    v15 = *(_QWORD *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v16 = sub_23F35D2E8(&qword_256E70760);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  sub_23F36196C((uint64_t)v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlannerHTTPClient.CompletionRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4E4030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F35D2E8(&qword_256E70760);
    return sub_23F36195C(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PlannerHTTPClient.CompletionRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4E40B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_23F362B80();
  }
  else
  {
    v7 = sub_23F35D2E8(&qword_256E70760);
    sub_23F36196C(a1 + *(int *)(a4 + 36), a2, a2, v7);
  }
}

void sub_23F4E411C()
{
  unint64_t v0;

  sub_23F4E41B0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23F4E41B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E77E20)
  {
    sub_23F616E68();
    v0 = sub_23F61C730();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256E77E20);
  }
}

void type metadata accessor for PlannerHTTPClient.CompletionResponse()
{
  sub_23F362C18();
}

void type metadata accessor for Completion()
{
  sub_23F362C18();
}

uint64_t dispatch thunk of static PlannerHTTPRequest.endpoint.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of PlannerHTTPRequest.baseURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CompletionHTTPResponse.completions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CompletionHTTPResponse.model.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t storeEnumTagSinglePayload for Completion.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F4E427C + 4 * byte_23F6284DD[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F4E429C + 4 * byte_23F6284E2[v4]))();
}

_BYTE *sub_23F4E427C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F4E429C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F4E42A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F4E42AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F4E42B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F4E42BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Completion.CodingKeys()
{
  return &type metadata for Completion.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PlannerHTTPClient.CompletionResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F4E4324 + 4 * byte_23F6284EC[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F4E4358 + 4 * byte_23F6284E7[v4]))();
}

uint64_t sub_23F4E4358(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4E4360(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F4E4368);
  return result;
}

uint64_t sub_23F4E4374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F4E437CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F4E4380(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4E4388(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlannerHTTPClient.CompletionResponse.CodingKeys()
{
  return &type metadata for PlannerHTTPClient.CompletionResponse.CodingKeys;
}

uint64_t getEnumTagSinglePayload for PlannerHTTPClient.CompletionRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PlannerHTTPClient.CompletionRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23F4E4478 + 4 * byte_23F6284F6[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23F4E44AC + 4 * byte_23F6284F1[v4]))();
}

uint64_t sub_23F4E44AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4E44B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F4E44BCLL);
  return result;
}

uint64_t sub_23F4E44C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F4E44D0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23F4E44D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4E44DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlannerHTTPClient.CompletionRequest.CodingKeys()
{
  return &type metadata for PlannerHTTPClient.CompletionRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PlannerHTTPClient.ErrorResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F4E4544 + 4 * byte_23F628500[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F4E4578 + 4 * byte_23F6284FB[v4]))();
}

uint64_t sub_23F4E4578(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4E4580(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F4E4588);
  return result;
}

uint64_t sub_23F4E4594(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F4E459CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F4E45A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4E45A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlannerHTTPClient.ErrorResponse.CodingKeys()
{
  return &type metadata for PlannerHTTPClient.ErrorResponse.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PlannerHTTPClient.Options.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23F4E4610 + 4 * byte_23F62850A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23F4E4644 + 4 * byte_23F628505[v4]))();
}

uint64_t sub_23F4E4644(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4E464C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F4E4654);
  return result;
}

uint64_t sub_23F4E4660(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F4E4668);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23F4E466C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4E4674(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlannerHTTPClient.Options.CodingKeys()
{
  return &type metadata for PlannerHTTPClient.Options.CodingKeys;
}

uint64_t sub_23F4E4690(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

uint64_t sub_23F4E46E4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 3;
  }
  return result;
}

void type metadata accessor for PlannerHTTPClientError()
{
  sub_23F362C18();
}

unint64_t sub_23F4E4754()
{
  unint64_t result;

  result = qword_256E77E60;
  if (!qword_256E77E60)
  {
    result = MEMORY[0x242670A44](&unk_23F628BD8, &type metadata for PlannerHTTPClient.Options.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77E60);
  }
  return result;
}

unint64_t sub_23F4E4794()
{
  unint64_t result;

  result = qword_256E77E68;
  if (!qword_256E77E68)
  {
    result = MEMORY[0x242670A44](&unk_23F628C90, &type metadata for PlannerHTTPClient.ErrorResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77E68);
  }
  return result;
}

unint64_t sub_23F4E47D4()
{
  unint64_t result;

  result = qword_256E77E70;
  if (!qword_256E77E70)
  {
    result = MEMORY[0x242670A44](&unk_23F628D48, &type metadata for PlannerHTTPClient.CompletionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77E70);
  }
  return result;
}

unint64_t sub_23F4E4814()
{
  unint64_t result;

  result = qword_256E77E78;
  if (!qword_256E77E78)
  {
    result = MEMORY[0x242670A44](&unk_23F628E00, &type metadata for PlannerHTTPClient.CompletionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77E78);
  }
  return result;
}

unint64_t sub_23F4E4854()
{
  unint64_t result;

  result = qword_256E77E80;
  if (!qword_256E77E80)
  {
    result = MEMORY[0x242670A44](&unk_23F628EB8, &type metadata for Completion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77E80);
  }
  return result;
}

unint64_t sub_23F4E4894()
{
  unint64_t result;

  result = qword_256E77E88;
  if (!qword_256E77E88)
  {
    result = MEMORY[0x242670A44](&unk_23F628E28, &type metadata for Completion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77E88);
  }
  return result;
}

unint64_t sub_23F4E48D4()
{
  unint64_t result;

  result = qword_256E77E90;
  if (!qword_256E77E90)
  {
    result = MEMORY[0x242670A44](&unk_23F628E50, &type metadata for Completion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77E90);
  }
  return result;
}

unint64_t sub_23F4E4914()
{
  unint64_t result;

  result = qword_256E77E98;
  if (!qword_256E77E98)
  {
    result = MEMORY[0x242670A44](&unk_23F628D70, &type metadata for PlannerHTTPClient.CompletionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77E98);
  }
  return result;
}

unint64_t sub_23F4E4954()
{
  unint64_t result;

  result = qword_256E77EA0;
  if (!qword_256E77EA0)
  {
    result = MEMORY[0x242670A44](&unk_23F628D98, &type metadata for PlannerHTTPClient.CompletionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77EA0);
  }
  return result;
}

unint64_t sub_23F4E4994()
{
  unint64_t result;

  result = qword_256E77EA8;
  if (!qword_256E77EA8)
  {
    result = MEMORY[0x242670A44](&unk_23F628CB8, &type metadata for PlannerHTTPClient.CompletionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77EA8);
  }
  return result;
}

unint64_t sub_23F4E49D4()
{
  unint64_t result;

  result = qword_256E77EB0;
  if (!qword_256E77EB0)
  {
    result = MEMORY[0x242670A44](&unk_23F628CE0, &type metadata for PlannerHTTPClient.CompletionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77EB0);
  }
  return result;
}

unint64_t sub_23F4E4A14()
{
  unint64_t result;

  result = qword_256E77EB8;
  if (!qword_256E77EB8)
  {
    result = MEMORY[0x242670A44](&unk_23F628C00, &type metadata for PlannerHTTPClient.ErrorResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77EB8);
  }
  return result;
}

unint64_t sub_23F4E4A54()
{
  unint64_t result;

  result = qword_256E77EC0;
  if (!qword_256E77EC0)
  {
    result = MEMORY[0x242670A44](&unk_23F628C28, &type metadata for PlannerHTTPClient.ErrorResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77EC0);
  }
  return result;
}

unint64_t sub_23F4E4A94()
{
  unint64_t result;

  result = qword_256E77EC8;
  if (!qword_256E77EC8)
  {
    result = MEMORY[0x242670A44](&unk_23F628B48, &type metadata for PlannerHTTPClient.Options.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77EC8);
  }
  return result;
}

unint64_t sub_23F4E4AD4()
{
  unint64_t result;

  result = qword_256E77ED0;
  if (!qword_256E77ED0)
  {
    result = MEMORY[0x242670A44](&unk_23F628B70, &type metadata for PlannerHTTPClient.Options.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E77ED0);
  }
  return result;
}

unint64_t sub_23F4E4B10()
{
  unint64_t result;

  result = qword_256E77ED8;
  if (!qword_256E77ED8)
  {
    result = MEMORY[0x242670A44](&unk_23F628B08, &unk_250FD91E0);
    atomic_store(result, (unint64_t *)&qword_256E77ED8);
  }
  return result;
}

unint64_t sub_23F4E4B4C()
{
  unint64_t result;

  result = qword_256E77EE8;
  if (!qword_256E77EE8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlannerHTTPClient.ErrorResponse, &type metadata for PlannerHTTPClient.ErrorResponse);
    atomic_store(result, (unint64_t *)&qword_256E77EE8);
  }
  return result;
}

void sub_23F4E4B88()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_23F4E4E04();
  v0[1] = v1;
  sub_23F362928();
}

uint64_t sub_23F4E4BBC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F4E4BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F4E4C0C()
{
  return sub_23F61CB2C();
}

uint64_t sub_23F4E4C1C()
{
  return sub_23F61CBC8();
}

uint64_t sub_23F4E4C2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F4E4C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F4E4C4C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_23F4E4C70()
{
  return swift_willThrow();
}

uint64_t sub_23F4E4C7C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 136) = a1;
  return v1 - 136;
}

uint64_t _s30IntelligenceFlowPlannerRuntime0C10HTTPClientC17CompletionRequestV8endpointSSvgZ_0()
{
  return 0x6974656C706D6F63;
}

uint64_t sub_23F4E4CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23F4E4CE4()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23F4E4CF0()
{
  _QWORD *v0;

  return sub_23F35EA9C(v0, v0[3]);
}

uint64_t sub_23F4E4D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v26 - 112) = a25;
  *(_QWORD *)(v26 - 104) = a24;
  *(_QWORD *)(v26 - 96) = v25;
  return PlannerHTTPClient.ErrorResponse.description.getter();
}

uint64_t sub_23F4E4D28()
{
  return sub_23F61CD84();
}

uint64_t sub_23F4E4D40()
{
  return sub_23F61CD48();
}

uint64_t sub_23F4E4D48()
{
  return sub_23F61CBB0();
}

uint64_t sub_23F4E4D54()
{
  return sub_23F61CB14();
}

uint64_t sub_23F4E4D64()
{
  return sub_23F61CB50();
}

uint64_t sub_23F4E4D74()
{
  return sub_23F61CB14();
}

uint64_t sub_23F4E4D84()
{
  return sub_23F61CBEC();
}

uint64_t sub_23F4E4D94()
{
  return sub_23F61C22C();
}

void sub_23F4E4DA4()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 112) = 0;
  *(_QWORD *)(v0 - 104) = 0xE000000000000000;
}

uint64_t sub_23F4E4DB4()
{
  return swift_bridgeObjectRelease_n();
}

id sub_23F4E4DC0()
{
  void *v0;

  return v0;
}

uint64_t sub_23F4E4DC8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23F4E4DD4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F3F3D0C(v1, v0);
}

uint64_t sub_23F4E4DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  return a26(a22, a21);
}

uint64_t sub_23F4E4DF8()
{
  return sub_23F61CBE0();
}

uint64_t sub_23F4E4E04()
{
  return sub_23F617C00();
}

uint64_t sub_23F4E4E10()
{
  return sub_23F61C280();
}

BOOL sub_23F4E4E1C()
{
  NSObject *v0;
  os_log_type_t v1;

  return os_log_type_enabled(v0, v1);
}

uint64_t PlannerService.description.getter()
{
  swift_getMetatypeMetadata();
  swift_getMetatypeMetadata();
  return sub_23F61C16C();
}

uint64_t static PlannerService.isEnabled()()
{
  return 1;
}

uint64_t PlannerServiceContext.contextId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23F3846E4();
  return sub_23F3F9C0C(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t PlannerServiceContext.init(contextId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23F3846E4();
  return sub_23F3F9C0C(a2, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 32));
}

uint64_t dispatch thunk of PlannerService.setup(sessionState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F3E013C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PlannerService.handle(_:plannerServiceContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23F4E4FC0;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_23F4E4FC0(uint64_t a1)
{
  uint64_t v1;

  sub_23F3629E8();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t dispatch thunk of PlannerService.telemetryTarget.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static PlannerService.isEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t initializeBufferWithCopyOfBuffer for PlannerServiceContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F617000();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for PlannerServiceContext(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F617000();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for PlannerServiceContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PlannerServiceContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PlannerServiceContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PlannerServiceContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlannerServiceContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4E5190(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F3846E4();
  return sub_23F36195C(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PlannerServiceContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F4E51CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F3846E4();
  return sub_23F36196C(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PlannerServiceContext()
{
  uint64_t result;

  result = qword_256E77F58;
  if (!qword_256E77F58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F4E5238()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F617000();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F4E52A0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23F619E44();
  sub_23F3F3F64(v1, qword_256E80338);
  sub_23F361498(v1, (uint64_t)qword_256E80338);
  sub_23F6190C4();
  return sub_23F619E2C();
}

uint64_t PlannerSpanMatchService.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_23F61AC3C();
  *(_QWORD *)(v0 + 112) = sub_23F4E6244();
  return v0;
}

uint64_t PlannerSpanMatchService.init()()
{
  uint64_t v0;

  swift_defaultActor_initialize();
  sub_23F61AC3C();
  *(_QWORD *)(v0 + 112) = sub_23F4E6244();
  return v0;
}

uint64_t static PlannerSpanMatchService.isEnabled()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  v0 = sub_23F618B90();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE57438], v0);
  v4 = sub_23F618B84();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_23F4E5448(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[20] = a1;
  v2[21] = v1;
  v3 = sub_23F61B2C0();
  v2[22] = v3;
  v2[23] = *(_QWORD *)(v3 - 8);
  v2[24] = sub_23F366578();
  v4 = sub_23F619E98();
  v2[25] = v4;
  v2[26] = *(_QWORD *)(v4 - 8);
  v2[27] = sub_23F366578();
  v2[28] = sub_23F35D2E8(&qword_256E701D0);
  v2[29] = sub_23F366578();
  v5 = sub_23F61B2E4();
  v2[30] = v5;
  v2[31] = *(_QWORD *)(v5 - 8);
  v2[32] = sub_23F4E6230();
  v2[33] = sub_23F3E0220();
  sub_23F35D2E8(&qword_256E701C8);
  v2[34] = sub_23F4E6230();
  v2[35] = sub_23F3E0220();
  v6 = sub_23F61B164();
  v2[36] = v6;
  v2[37] = *(_QWORD *)(v6 - 8);
  v2[38] = sub_23F366578();
  return sub_23F36664C();
}

uint64_t sub_23F4E5530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v2 = *(_QWORD *)(v0 + 296);
  v1 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 288);
  sub_23F61B128();
  v5 = sub_23F61B14C();
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 312) = v6;
  v6(v1, v4);
  v7 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = v7;
  *(_QWORD *)(v0 + 32) = v5;
  sub_23F4E6250((uint64_t)sub_23F3F3B20);
  sub_23F3F0F58((__int128 *)(v0 + 16));
  v9 = v8;
  sub_23F362984();
  sub_23F3F1380(v9, v3);
  swift_bridgeObjectRelease();
  sub_23F3F166C(v3);
  v11 = v10;
  v13 = v12;
  *(_QWORD *)(v0 + 320) = v10;
  *(_QWORD *)(v0 + 328) = v12;
  sub_23F4E6100(v3);
  sub_23F362984();
  if (v13)
  {
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v14;
    *v14 = v0;
    v14[1] = sub_23F4E56E4;
    return sub_23F4E61E4(v11, v13);
  }
  else
  {
    sub_23F61A78C();
    sub_23F382DD0();
    swift_allocError();
    v16 = *(_QWORD *)(v0 + 128);
    v17 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)v18 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v18 + 16) = v17;
    *(_QWORD *)(v18 + 32) = v16;
    swift_willThrow();
    sub_23F4E621C();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    return sub_23F4E6200(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_23F4E56E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 344) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0)
    return sub_23F36664C();
  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  return sub_23F4328BC(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23F4E57AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
  v4 = *(_QWORD *)(v0 + 288);
  v5 = *(_QWORD *)(v0 + 272);
  sub_23F61B128();
  v6 = sub_23F61B14C();
  v3(v2, v4);
  v7 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = v7;
  *(_QWORD *)(v0 + 72) = v6;
  sub_23F4E6250((uint64_t)sub_23F3F3B20);
  sub_23F3F0F58((__int128 *)(v0 + 56));
  v9 = v8;
  sub_23F362984();
  sub_23F3F1380(v9, v5);
  swift_bridgeObjectRelease();
  sub_23F362984();
  sub_23F3748E0(0xD0000000000000A2, 0x800000023F638090, 31, 0xD000000000000020, 0x800000023F638140);
  if (v1)
  {
    sub_23F4E6100(*(_QWORD *)(v0 + 272));
    sub_23F362984();
    sub_23F4E621C();
    swift_task_dealloc();
    sub_23F3666DC();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    return sub_23F4E6200(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 328);
    v12 = *(_QWORD *)(v0 + 264);
    v14 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v0 + 248);
    v16 = *(_QWORD *)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 232);
    sub_23F4E6100(*(_QWORD *)(v0 + 272));
    v17 = v15 + *(int *)(v16 + 48);
    v18 = v15 + *(int *)(v16 + 64);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
    *(_QWORD *)(v0 + 352) = v19;
    v19(v12, v18, v14);
    v20 = sub_23F617000();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v17, v20);
    v21 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v21;
    *v21 = v0;
    v21[1] = sub_23F4E5978;
    return sub_23F4E61E4(*(_QWORD *)(v0 + 320), v11);
  }
}

uint64_t sub_23F4E5978(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 368) = a1;
  *(_QWORD *)(v3 + 376) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return sub_23F36664C();
}

uint64_t sub_23F4E59EC()
{
  uint64_t v0;
  void (*v1)(unint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 368) + 16))
  {
    v1 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 352);
    v2 = *(_QWORD *)(v0 + 256);
    v3 = *(_QWORD *)(v0 + 240);
    v4 = *(_QWORD *)(v0 + 248);
    v6 = *(_QWORD *)(v0 + 184);
    v5 = *(_QWORD *)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 176);
    sub_23F61AA5C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x24BE56B88], v7);
    sub_23F61B23C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    sub_23F35D2E8(&qword_256E701A0);
    v8 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_23F61E7E0;
    v1(v9 + v8, v2, v3);
  }
  else
  {
    v10 = *(NSObject **)(v0 + 216);
    swift_bridgeObjectRelease();
    sub_23F619118();
    sub_23F619E8C();
    v11 = sub_23F3B1A04();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)sub_23F366668();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_23F35A000, v10, v11, "No spans found. Returning nil transcript event", v12, 2u);
      sub_23F366530();
    }
    v14 = *(_QWORD *)(v0 + 208);
    v13 = *(_QWORD *)(v0 + 216);
    v15 = *(_QWORD *)(v0 + 200);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    v9 = MEMORY[0x24BEE4AF8];
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
}

uint64_t sub_23F4E5BC0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
  sub_23F4E621C();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  return sub_23F4328BC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F4E5C28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v4 = sub_23F619E98();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = sub_23F4E6230();
  v3[10] = sub_23F3E0220();
  return sub_23F36664C();
}

uint64_t sub_23F4E5C84()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  _QWORD *v11;
  uint64_t (*v13)(_QWORD, _QWORD, _QWORD);
  uint64_t v14;

  v1 = v0[10];
  sub_23F619118();
  swift_bridgeObjectRetain_n();
  sub_23F619E8C();
  v2 = sub_23F3B1A04();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = v0[5];
    v4 = v0[4];
    v5 = (uint8_t *)sub_23F366668();
    v14 = sub_23F366668();
    *(_DWORD *)v5 = 136315138;
    sub_23F617BA0();
    sub_23F37AE00(v4, v3, &v14);
    v0[3] = v6;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23F35A000, v1, v2, "Finding Span Matches for utterance: %s", v5, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v7 = v0[10];
  v8 = v0[7];
  v9 = v0[8];
  sub_23F384A80();

  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v0[11] = v10;
  v13 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))((int)*MEMORY[0x24BE55E88] + MEMORY[0x24BE55E88]);
  v11 = (_QWORD *)swift_task_alloc();
  v0[12] = v11;
  *v11 = v0;
  v11[1] = sub_23F4E5E64;
  return v13(v0[4], v0[5], 0);
}

uint64_t sub_23F4E5E64(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 104) = a1;
  swift_task_dealloc();
  if (!v1)
    return sub_23F36664C();
  swift_task_dealloc();
  sub_23F3666DC();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23F4E5EE0()
{
  uint64_t v0;
  NSObject *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(NSObject **)(v0 + 72);
  sub_23F619118();
  swift_bridgeObjectRetain_n();
  v2 = v1;
  sub_23F619E8C();
  v3 = sub_23F3B1A04();
  if (os_log_type_enabled(v1, v3))
  {
    v4 = *(_QWORD *)(v0 + 104);
    v5 = (uint8_t *)sub_23F366668();
    v14 = sub_23F366668();
    *(_DWORD *)v5 = 136315138;
    v6 = sub_23F618D88();
    v7 = MEMORY[0x24266F8F8](v4, v6);
    sub_23F37AE00(v7, v8, &v14);
    *(_QWORD *)(v0 + 16) = v9;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F384A80();
    _os_log_impl(&dword_23F35A000, v1, v3, "Found Span Matches: %s", v5, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 88);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 56);
  sub_23F384A80();

  v10(v11, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 104));
}

uint64_t PlannerSpanMatchService.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t PlannerSpanMatchService.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t PlannerSpanMatchService.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4E60E8()
{
  return PlannerSpanMatchService.unownedExecutor.getter();
}

uint64_t sub_23F4E6100(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E701C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PlannerSpanMatchService()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlannerSpanMatchService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlannerSpanMatchService.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PlannerSpanMatchService.handle(_:plannerServiceContext:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 104) + *(_QWORD *)(*(_QWORD *)v2 + 104));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23F3F3E10;
  return v8(a1, a2);
}

uint64_t sub_23F4E61E4(uint64_t a1, uint64_t a2)
{
  return sub_23F4E5C28(a1, a2);
}

uint64_t sub_23F4E6200(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F4E621C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F4E6230()
{
  return swift_task_alloc();
}

uint64_t sub_23F4E6244()
{
  return sub_23F61AC30();
}

uint64_t sub_23F4E6250@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  *(_QWORD *)(v1 + 32) = 0;
  return sub_23F617BA0();
}

uint64_t PlannerToolboxDelegate.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F4A0F08();
  v4 = sub_23F618B90();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3D9CCC();
  sub_23F362D94(v1, *MEMORY[0x24BE57400], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 104));
  v6 = sub_23F618B84();
  result = sub_23F3E26DC(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  if ((v6 & 1) != 0)
  {
    sub_23F35D2E8(&qword_256E78060);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_23F61E7E0;
    sub_23F619FD0();
    sub_23F619FC4();
    v9 = sub_23F61AE28();
    v10 = MEMORY[0x24BE56250];
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 64) = v10;
    sub_23F619FB8();
    result = swift_release();
  }
  else
  {
    v8 = MEMORY[0x24BEE4AF8];
  }
  *a1 = v8;
  return result;
}

uint64_t sub_23F4E64E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F61B944();
  sub_23F38813C();
  v0 = sub_23F61C808();
  swift_bridgeObjectRelease();
  v1 = sub_23F3F14E8(v0);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  swift_bridgeObjectRelease();
  if (!v7)
    return 0;
  v8 = MEMORY[0x24266F6AC](v1, v3, v5, v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t PlannerToolboxDelegate.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unsigned int *v7;

  v3 = sub_23F618B90();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3D9CCC();
  sub_23F362D94(v1, *MEMORY[0x24BE57400], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104));
  v5 = sub_23F618B84();
  sub_23F3E26DC(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v6 = sub_23F61ABC4();
  v7 = (unsigned int *)MEMORY[0x24BE55DE0];
  if ((v5 & 1) == 0)
    v7 = (unsigned int *)MEMORY[0x24BE55DE8];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(a1, *v7, v6);
}

uint64_t PlannerToolboxDelegate.version.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_23F6182B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F618B90();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3D9CCC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v0, *MEMORY[0x24BE57400], v5);
  sub_23F618B84();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v5);
  sub_23F362D94((uint64_t)v4, *MEMORY[0x24BE537F0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  return sub_23F61A3B4();
}

uint64_t PlannerToolboxDelegate.embeddingSnippetForTool(_:)()
{
  return sub_23F61B584();
}

uint64_t PlannerToolboxDelegate.toolFilter(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = sub_23F61B5D8();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  sub_23F4A0F08();
  v4 = sub_23F619E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F61B5FC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v29 - v13;
  sub_23F61B5CC();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x24BEB91B8], v8);
  v15 = sub_23F489C5C((uint64_t)v14, (uint64_t)v12);
  v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  v16(v14, v8);
  if ((v15 & 1) != 0)
  {
    v17 = v1;
    v19 = v31;
    v18 = v32;
    v30 = v4;
    sub_23F5D7264();
    if ((v20 & 1) != 0)
      return 1;
    sub_23F619160();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, a1, v18);
    v22 = sub_23F619E8C();
    v23 = sub_23F61C640();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = sub_23F366668();
      v29[2] = v7;
      v25 = (uint8_t *)v24;
      v33 = sub_23F366668();
      *(_DWORD *)v25 = 136315138;
      v29[1] = v25 + 4;
      v26 = sub_23F61B5A8();
      sub_23F37AE00(v26, v27, &v33);
      sub_23F3E2770(v28);
      sub_23F61C790();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
      _os_log_impl(&dword_23F35A000, v22, v23, "PlannerToolboxDelegate: Skipping tool due to unsatisfied requirements: %s", v25, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v30);
  }
  return 0;
}

uint64_t sub_23F4E6A38@<X0>(uint64_t a1@<X8>)
{
  return PlannerToolboxDelegate.model.getter(a1);
}

uint64_t sub_23F4E6A4C()
{
  return PlannerToolboxDelegate.version.getter();
}

uint64_t sub_23F4E6A60()
{
  return PlannerToolboxDelegate.embeddingSnippetForTool(_:)();
}

uint64_t sub_23F4E6A80(uint64_t a1)
{
  return PlannerToolboxDelegate.toolFilter(_:)(a1) & 1;
}

ValueMetadata *type metadata accessor for PlannerToolboxDelegate()
{
  return &type metadata for PlannerToolboxDelegate;
}

uint64_t sub_23F4E6AA8()
{
  sub_23F3F9B48();
  return sub_23F4F23F8();
}

uint64_t sub_23F4E6AFC(uint64_t a1, char a2)
{
  if (!a2)
    sub_23F4F296C();
  sub_23F3F9B48();
  return sub_23F4F23F8();
}

void sub_23F4E6B68(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_23F4E6BB0()
{
  sub_23F4F296C();
  sub_23F3F9B48();
  return sub_23F4F23F8();
}

uint64_t sub_23F4E6C14()
{
  sub_23F61C22C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4E6C40()
{
  sub_23F3F9B48();
  return sub_23F4F23F8();
}

uint64_t sub_23F4E6C9C()
{
  sub_23F4F282C();
  sub_23F3F9B48();
  return sub_23F4F23F8();
}

uint64_t sub_23F4E6CE8()
{
  return sub_23F61C22C();
}

void sub_23F4E6D0C()
{
  sub_23F61CD54();
  sub_23F362928();
}

void sub_23F4E6D38()
{
  sub_23F61CD3C();
  sub_23F362928();
}

void sub_23F4E6D58()
{
  sub_23F61CD3C();
  sub_23F362928();
}

void sub_23F4E6D78(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23F4E6DB4()
{
  sub_23F3F9B48();
  return sub_23F4F23F8();
}

void sub_23F4E6DFC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23F4E6E38()
{
  sub_23F3F9B48();
  return sub_23F4F23F8();
}

void sub_23F4E6EE0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23F4E6F20()
{
  sub_23F3F9B48();
  return sub_23F4F23F8();
}

uint64_t sub_23F4E6F80()
{
  return sub_23F61C22C();
}

void sub_23F4E6FA0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23F4E6FE4()
{
  sub_23F3F9B48();
  return sub_23F4F23F8();
}

uint64_t sub_23F4E705C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  sub_23F4F28A0();
  sub_23F35D2E8(&qword_256E785E0);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_23F4F22D4((uint64_t)v14);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_23F61C934();
      }
      if (v2)
        v4 = (char *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_QWORD *)v2;
    }
    v6 = MEMORY[0x24266A3E4](v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      sub_23F48902C();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_23F61C2B0();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = MEMORY[0x24266A3CC](v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x24BDAC7A8](*(_QWORD *)&v14[0]);
    sub_23F4EED68();
    __asm { BR              X12 }
  }
  sub_23F362678(v14, (uint64_t)v17);
  sub_23F35EA9C(v17, v17[3]);
  sub_23F616D0C();
  sub_23F48902C();
  v14[0] = v16;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

uint64_t (*PlanOverrideModel.planOverrides.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_23F4E74EC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7265764F6E616C70 && a2 == 0xED00007365646972)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F4E7594()
{
  return 0x7265764F6E616C70;
}

uint64_t sub_23F4E75BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4E74EC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F4E75E4()
{
  sub_23F4E76EC();
  return sub_23F61CDC0();
}

uint64_t sub_23F4E760C()
{
  sub_23F4E76EC();
  return sub_23F61CDCC();
}

void PlanOverrideModel.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F362C98();
  sub_23F35D2E8(&qword_256E78080);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F4F2494();
  sub_23F4E76EC();
  sub_23F44D4B8();
  sub_23F3B1CE4();
  sub_23F4F2578(&qword_256E78098, v1, (uint64_t (*)(void))sub_23F4E7728, MEMORY[0x24BEE12A0]);
  sub_23F4F25FC();
  sub_23F4F2704();
  sub_23F362870();
}

unint64_t sub_23F4E76EC()
{
  unint64_t result;

  result = qword_256E78088;
  if (!qword_256E78088)
  {
    result = MEMORY[0x242670A44](&unk_23F62A84C, &type metadata for PlanOverrideModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78088);
  }
  return result;
}

unint64_t sub_23F4E7728()
{
  unint64_t result;

  result = qword_256E780A0;
  if (!qword_256E780A0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlanOverride, &type metadata for PlanOverride);
    atomic_store(result, (unint64_t *)&qword_256E780A0);
  }
  return result;
}

void PlanOverrideModel.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F362C98();
  v12 = v11;
  v14 = v13;
  sub_23F35D2E8(&qword_256E780A8);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F4E4CF0();
  sub_23F4E76EC();
  sub_23F4F2460();
  if (!v10)
  {
    sub_23F3B1CE4();
    sub_23F4F2578(&qword_256E780B0, v16, (uint64_t (*)(void))sub_23F4E7890, MEMORY[0x24BEE12D0]);
    sub_23F4F2558();
    sub_23F4F26F0();
    *v14 = a10;
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v12);
  sub_23F4F27B8();
  sub_23F362870();
}

void sub_23F4E7838(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  if (!*a1)
  {
    v7 = sub_23F35EB74(a2);
    v8 = a3();
    atomic_store(MEMORY[0x242670A44](a4, v7, &v8), a1);
  }
  sub_23F38454C();
}

unint64_t sub_23F4E7890()
{
  unint64_t result;

  result = qword_256E780B8;
  if (!qword_256E780B8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlanOverride, &type metadata for PlanOverride);
    atomic_store(result, (unint64_t *)&qword_256E780B8);
  }
  return result;
}

void sub_23F4E78CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  PlanOverrideModel.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F4E78E0()
{
  PlanOverrideModel.encode(to:)();
}

void PlanOverride.statements.setter()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F4F26E4();
  *v1 = v0;
  sub_23F362928();
}

uint64_t (*PlanOverride.statements.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

IntelligenceFlowPlannerRuntime::PlanOverride __swiftcall PlanOverride.init(statements:)(IntelligenceFlowPlannerRuntime::PlanOverride statements)
{
  IntelligenceFlowPlannerRuntime::PlanOverride *v1;

  v1->statements._rawValue = statements.statements._rawValue;
  return statements;
}

void PlanOverride.init(builder:)(uint64_t a1@<X8>)
{
  *(_QWORD *)sub_23F4F2858(a1) = MEMORY[0x24BEE4AF8];
  sub_23F4F25D0();
  sub_23F362928();
}

uint64_t PlanOverride.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  _BYTE v6[185];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  result = sub_23F61CD3C();
  if (v2)
  {
    sub_23F3668F4();
    memcpy(v6, (const void *)(v1 + 32), sizeof(v6));
    sub_23F4F284C();
    v4 = v2 - 1;
    if (v2 != 1)
    {
      v5 = (char *)(v1 + 224);
      do
      {
        memcpy(v6, v5, sizeof(v6));
        sub_23F4F284C();
        v5 += 192;
        --v4;
      }
      while (v4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static PlanOverride.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_23F3C5EB8(*a1, *a2);
}

uint64_t sub_23F4E7A10(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E656D6574617473 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F4E7AA0()
{
  return 0x6E656D6574617473;
}

uint64_t sub_23F4E7AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4E7A10(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F4E7AE8()
{
  sub_23F4EF24C();
  return sub_23F61CDC0();
}

uint64_t sub_23F4E7B10()
{
  sub_23F4EF24C();
  return sub_23F61CDCC();
}

void PlanOverride.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F362C98();
  sub_23F35D2E8(&qword_256E780C0);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F4F2494();
  sub_23F4EF24C();
  sub_23F44D4B8();
  sub_23F3B1CE4();
  sub_23F4F2578(&qword_256E780D8, v1, (uint64_t (*)(void))sub_23F4EF288, MEMORY[0x24BEE12A0]);
  sub_23F4F25FC();
  sub_23F4F2704();
  sub_23F362870();
}

void PlanOverride.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;

  sub_23F362CB0();
  v0 = sub_23F3668F4();
  v8 = sub_23F4F2794(v0, v1, v2, v3, v4, v5, v6, v7, v10, v11);
  sub_23F3C78DC((uint64_t)v8, v9);
  sub_23F362D18();
  sub_23F362C10();
  sub_23F362AD4();
}

void PlanOverride.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F362C98();
  v12 = v11;
  v14 = v13;
  sub_23F35D2E8(&qword_256E780E8);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F4E4CF0();
  sub_23F4EF24C();
  sub_23F4F2460();
  if (!v10)
  {
    sub_23F3B1CE4();
    sub_23F4F2578(&qword_256E780F0, v16, (uint64_t (*)(void))sub_23F4EF2C4, MEMORY[0x24BEE12D0]);
    sub_23F4F2558();
    sub_23F4F26F0();
    *v14 = a10;
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v12);
  sub_23F4F27B8();
  sub_23F362870();
}

void sub_23F4E7CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  PlanOverride.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F4E7D0C()
{
  PlanOverride.encode(to:)();
}

uint64_t sub_23F4E7D28()
{
  _QWORD **v0;
  _QWORD *v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23F61CD30();
  sub_23F617BA0();
  sub_23F3C78DC((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_23F61CD60();
}

void Statement.id.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void Statement.id.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F4F2624();
  *v1 = v2;
  v1[1] = v0;
  sub_23F362B80();
}

uint64_t (*Statement.id.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Statement.utteranceRule.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_23F4EF300(v2, v3);
}

__n128 Statement.utteranceRule.setter(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  sub_23F4EF330(v1[2], v1[3]);
  *((_OWORD *)v1 + 1) = v5;
  v1[4] = v2;
  v1[5] = v3;
  sub_23F38454C();
  return result;
}

uint64_t (*Statement.utteranceRule.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Statement.eventRule.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(a1 + 8) = v2;
  return sub_23F617BA0();
}

void Statement.eventRule.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_BYTE *)(v1 + 56) = v3;
  sub_23F362B80();
}

uint64_t (*Statement.eventRule.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Statement.contextRules.getter()
{
  return sub_23F617BA0();
}

void Statement.contextRules.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  sub_23F362928();
}

uint64_t (*Statement.contextRules.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Statement.dynamicEnumerationEntityRules.getter()
{
  return sub_23F617BA0();
}

void Statement.dynamicEnumerationEntityRules.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  sub_23F362928();
}

uint64_t (*Statement.dynamicEnumerationEntityRules.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void Statement.previousStepId.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void Statement.previousStepId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  sub_23F362B80();
}

uint64_t (*Statement.previousStepId.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Statement.nextStepIds.getter()
{
  return sub_23F617BA0();
}

void Statement.nextStepIds.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  sub_23F362928();
}

uint64_t (*Statement.nextStepIds.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Statement.planValue.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[14];
  v3 = v1[15];
  *a1 = v1[13];
  a1[1] = v2;
  a1[2] = v3;
  sub_23F617BA0();
  return sub_23F617BA0();
}

__n128 Statement.planValue.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v4 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  swift_bridgeObjectRelease();
  sub_23F362D18();
  *(_OWORD *)(v1 + 104) = v4;
  *(_QWORD *)(v1 + 120) = v2;
  sub_23F38454C();
  return result;
}

uint64_t (*Statement.planValue.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Statement.planTool.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 128);
  v3 = *(_QWORD *)(v1 + 136);
  *a1 = v2;
  a1[1] = v3;
  return sub_23F4EF360(v2);
}

void Statement.planTool.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  sub_23F4EF394(*(_QWORD *)(v1 + 128));
  *(_QWORD *)(v1 + 128) = v2;
  *(_QWORD *)(v1 + 136) = v3;
  sub_23F362B80();
}

uint64_t (*Statement.planTool.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Statement.creationTimestamp.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144);
}

uint64_t Statement.creationTimestamp.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 144) = result;
  *(_BYTE *)(v2 + 152) = a2 & 1;
  return result;
}

uint64_t (*Statement.creationTimestamp.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void Statement.localeId.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void Statement.localeId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = a2;
  sub_23F362B80();
}

uint64_t (*Statement.localeId.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Statement.userInterfaceIdioms.getter()
{
  return sub_23F617BA0();
}

void Statement.userInterfaceIdioms.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 176) = a1;
  sub_23F362928();
}

uint64_t (*Statement.userInterfaceIdioms.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Statement.applyToPromptScenarios.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 184);
}

uint64_t Statement.applyToPromptScenarios.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 184) = result;
  return result;
}

uint64_t (*Statement.applyToPromptScenarios.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

__n128 Statement.init(id:utteranceRule:planValue:planTool:eventRule:contextRules:dynamicEnumerationEntityRules:previousStepId:nextStepIds:creationTimestamp:localeId:userInterfaceIdioms:applyToPromptScenarios:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12, char a13, __n128 a14, uint64_t a15, char a16)
{
  __n128 result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  result = a14;
  v17 = *a3;
  v18 = a3[1];
  v19 = *((unsigned __int8 *)a3 + 16);
  v20 = a3[3];
  v21 = *(_QWORD *)(a4 + 16);
  v22 = *a6;
  v23 = *((_BYTE *)a6 + 8);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = v17;
  *(_QWORD *)(a9 + 24) = v18;
  *(_QWORD *)(a9 + 32) = v19;
  *(_QWORD *)(a9 + 40) = v20;
  *(_QWORD *)(a9 + 48) = v22;
  *(_BYTE *)(a9 + 56) = v23;
  *(_QWORD *)(a9 + 64) = a7;
  *(_QWORD *)(a9 + 72) = a8;
  *(_OWORD *)(a9 + 80) = a10;
  *(_QWORD *)(a9 + 96) = a11;
  *(_OWORD *)(a9 + 104) = *(_OWORD *)a4;
  *(_QWORD *)(a9 + 120) = v21;
  *(_OWORD *)(a9 + 128) = *a5;
  *(_QWORD *)(a9 + 144) = a12;
  *(_BYTE *)(a9 + 152) = a13 & 1;
  *(__n128 *)(a9 + 160) = a14;
  *(_QWORD *)(a9 + 176) = a15;
  *(_BYTE *)(a9 + 184) = a16;
  return result;
}

uint64_t Statement.init(builder:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[7];
  _BYTE v15[7];

  v4 = sub_23F617000();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v8 = v7 - v6;
  sub_23F616FF4();
  v9 = sub_23F616FDC();
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_OWORD *)(a2 + 16) = xmmword_23F62A910;
  v12 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 48) = 0;
  *(_BYTE *)(a2 + 56) = 0;
  *(_DWORD *)(a2 + 57) = *(_DWORD *)v15;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)&v15[3];
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_QWORD *)(a2 + 112) = 0;
  *(_QWORD *)(a2 + 120) = v12;
  *(_QWORD *)(a2 + 136) = 0;
  *(_QWORD *)(a2 + 144) = 0;
  *(_QWORD *)(a2 + 128) = 1;
  *(_BYTE *)(a2 + 152) = 1;
  *(_DWORD *)(a2 + 153) = *(_DWORD *)v14;
  *(_DWORD *)(a2 + 156) = *(_DWORD *)&v14[3];
  *(_QWORD *)(a2 + 168) = 0;
  *(_QWORD *)(a2 + 176) = 0;
  *(_QWORD *)(a2 + 160) = 0;
  *(_BYTE *)(a2 + 184) = 2;
  return a1(a2);
}

uint64_t UtteranceRule.init(pattern:type:spansForNamedCaptureGroups:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;

  v5 = *a3;
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = v5;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t PlanValue.init(programStatements:planText:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = a2;
  a4[1] = a3;
  a4[2] = result;
  return result;
}

void sub_23F4E8314(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23F489044() & 1) != 0)
    goto LABEL_6;
  v5 = a1 == 0x636E617265747475 && a2 == 0xED0000656C755265;
  if (v5
    || (sub_23F489044() & 1) != 0
    || (a1 == 0x6C7552746E657665 ? (v6 = a2 == 0xE900000000000065) : (v6 = 0),
        v6
     || (sub_23F489044() & 1) != 0
     || (a1 == 0x52747865746E6F63 ? (v7 = a2 == 0xEC00000073656C75) : (v7 = 0),
         v7
      || (sub_23F489044() & 1) != 0
      || a1 == 0xD00000000000001DLL && a2 == 0x800000023F638210
      || (sub_23F489044() & 1) != 0
      || (a1 == 0x756C61566E616C70 ? (v8 = a2 == 0xE900000000000065) : (v8 = 0),
          v8
       || (sub_23F489044() & 1) != 0
       || (a1 == 0x6C6F6F546E616C70 ? (v9 = a2 == 0xE800000000000000) : (v9 = 0),
           v9
        || (sub_23F489044() & 1) != 0
        || (a1 == 0x73756F6976657270 ? (v10 = a2 == 0xEE00644970657453) : (v10 = 0),
            v10
         || (sub_23F489044() & 1) != 0
         || (a1 == 0x706574537478656ELL ? (v11 = a2 == 0xEB00000000736449) : (v11 = 0),
             v11
          || (sub_23F489044() & 1) != 0
          || a1 == 0xD000000000000011 && a2 == 0x800000023F638230
          || (sub_23F489044() & 1) != 0
          || (a1 == 0x6449656C61636F6CLL ? (v12 = a2 == 0xE800000000000000) : (v12 = 0),
              v12
           || (sub_23F489044() & 1) != 0
           || a1 == 0xD000000000000013 && a2 == 0x800000023F638250
           || (sub_23F489044() & 1) != 0
           || a1 == 0xD000000000000016 && a2 == 0x800000023F638270))))))))
  {
LABEL_6:
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F489044();
    sub_23F362D18();
  }
  sub_23F362B80();
}

uint64_t sub_23F4E87D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F4E87F8 + 4 * byte_23F62923D[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23F4E87F8()
{
  return 0x636E617265747475;
}

uint64_t sub_23F4E881C()
{
  return 0x6C7552746E657665;
}

uint64_t sub_23F4E8884()
{
  return 0x6C6F6F546E616C70;
}

uint64_t sub_23F4E889C()
{
  return 0x73756F6976657270;
}

uint64_t sub_23F4E88C0()
{
  return 0x706574537478656ELL;
}

unint64_t sub_23F4E88E0()
{
  return 0xD000000000000011;
}

uint64_t sub_23F4E88FC()
{
  return 0x6449656C61636F6CLL;
}

unint64_t sub_23F4E8914()
{
  return 0xD000000000000013;
}

void sub_23F4E892C()
{
  JUMPOUT(0x23F4E8940);
}

uint64_t sub_23F4E8950()
{
  unsigned __int8 *v0;

  return sub_23F4E87D0(*v0);
}

void sub_23F4E8958(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F4E8314(a1, a2);
  *a3 = v4;
}

void sub_23F4E897C(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_23F4E8988()
{
  sub_23F4EF3C4();
  return sub_23F61CDC0();
}

uint64_t sub_23F4E89B0()
{
  sub_23F4EF3C4();
  return sub_23F61CDCC();
}

void Statement.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F362C98();
  v3 = v2;
  sub_23F35D2E8(&qword_256E78100);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v7 = v6 - v5;
  v8 = v3[3];
  v9 = v3;
  v11 = v10;
  sub_23F35EA9C(v9, v8);
  sub_23F4EF3C4();
  sub_23F61CD90();
  sub_23F61CBB0();
  if (!v0)
  {
    sub_23F4EF400();
    sub_23F4F24E4();
    sub_23F4EF43C();
    sub_23F4F24E4();
    sub_23F35D2E8(&qword_256E78120);
    sub_23F4EF478();
    sub_23F4F25E4();
    sub_23F35D2E8(&qword_256E78138);
    sub_23F4E7838(&qword_256E78140, &qword_256E78138, (uint64_t (*)(void))sub_23F4EF52C, MEMORY[0x24BEE12A0]);
    sub_23F4F25E4();
    sub_23F4EF568();
    sub_23F61CBE0();
    sub_23F4EF5A4();
    sub_23F4F24E4();
    sub_23F61CB80();
    sub_23F35D2E8(&qword_256E70580);
    sub_23F4EF788((unint64_t *)&qword_256E78160, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_23F4F25E4();
    sub_23F61CBA4();
    sub_23F61CB80();
    sub_23F4F25E4();
    sub_23F61CB8C();
  }
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v7, v11);
  sub_23F4F27B8();
  sub_23F362870();
}

uint64_t Statement.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(_QWORD *)(v2 + 48);
  v16 = *(unsigned __int8 *)(v2 + 56);
  v7 = *(_QWORD *)(v2 + 64);
  v8 = *(_QWORD *)(v2 + 72);
  v21 = *(_QWORD *)(v2 + 88);
  v22 = *(_QWORD *)(v2 + 96);
  v23 = *(_QWORD *)(v2 + 112);
  v24 = *(_QWORD *)(v2 + 120);
  v25 = *(_QWORD *)(v2 + 128);
  v17 = *(_QWORD *)(v2 + 136);
  v18 = *(unsigned __int8 *)(v2 + 152);
  v19 = *(_QWORD *)(v2 + 168);
  v20 = *(_QWORD *)(v2 + 176);
  v26 = *(unsigned __int8 *)(v2 + 184);
  sub_23F362CDC();
  sub_23F61C22C();
  sub_23F362C60();
  if (v4)
  {
    sub_23F4F2414();
    sub_23F4F26A8();
    sub_23F4F26A8();
    sub_23F384324();
    sub_23F61C22C();
    sub_23F38432C();
    sub_23F61C22C();
    sub_23F362C60();
    if (v5)
    {
      sub_23F4F2414();
      sub_23F384A00();
      sub_23F3C7740();
      swift_bridgeObjectRelease();
      v9 = sub_23F4F28A8();
      sub_23F4EF330(v9, v10);
      v11 = sub_23F4F28A8();
    }
    else
    {
      sub_23F4F241C();
      v13 = sub_23F4F28BC();
      sub_23F4EF330(v13, v14);
      v11 = sub_23F4F28BC();
    }
    sub_23F4EF330(v11, v12);
  }
  else
  {
    sub_23F4F241C();
  }
  if (v6)
  {
    sub_23F4F2414();
    swift_bridgeObjectRetain_n();
    sub_23F3840BC();
    sub_23F3C761C();
    if (v16 == 3)
    {
      sub_23F4F241C();
      sub_23F4F2958();
    }
    else
    {
      sub_23F4F2414();
      sub_23F3C8800();
      sub_23F4F2958();
      sub_23F362D08();
    }
  }
  else
  {
    sub_23F4F241C();
  }
  if (v7)
  {
    sub_23F4F2414();
    sub_23F383EB0();
    sub_23F3C7AC4();
    sub_23F384120();
  }
  else
  {
    sub_23F4F241C();
  }
  if (v8)
  {
    sub_23F4F2414();
    sub_23F3B1EA4();
    sub_23F3C7A24();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F4F241C();
  }
  if (v21)
  {
    sub_23F4F2414();
    sub_23F384B00();
    sub_23F61C22C();
    swift_bridgeObjectRelease();
    if (v22)
      goto LABEL_20;
  }
  else
  {
    sub_23F4F241C();
    if (v22)
    {
LABEL_20:
      sub_23F4F2414();
      sub_23F3B1EA4();
      sub_23F3C79E4();
      swift_bridgeObjectRelease();
      if (v23)
        goto LABEL_21;
LABEL_25:
      sub_23F4F241C();
      if (v24)
        goto LABEL_22;
      goto LABEL_26;
    }
  }
  sub_23F4F241C();
  if (!v23)
    goto LABEL_25;
LABEL_21:
  sub_23F4F2414();
  sub_23F383EB0();
  sub_23F61C22C();
  sub_23F384120();
  if (v24)
  {
LABEL_22:
    sub_23F4F2414();
    sub_23F389CDC();
    sub_23F3C7BC0(a1, v24);
    sub_23F362D08();
    goto LABEL_27;
  }
LABEL_26:
  sub_23F4F241C();
LABEL_27:
  if (v25 != 1)
  {
    sub_23F4F2414();
    if (v25)
    {
      sub_23F4F2414();
      sub_23F3668F4();
      sub_23F3840BC();
      sub_23F3C79E4();
      sub_23F362D18();
      if (v17)
        goto LABEL_30;
    }
    else
    {
      sub_23F4F241C();
      if (v17)
      {
LABEL_30:
        sub_23F4F2414();
        sub_23F384A00();
        sub_23F3C79E4();
        swift_bridgeObjectRelease();
        if (!v18)
          goto LABEL_31;
        goto LABEL_36;
      }
    }
  }
  sub_23F4F241C();
  if (!v18)
  {
LABEL_31:
    sub_23F4F2414();
    sub_23F61CD54();
    if (v19)
      goto LABEL_32;
LABEL_37:
    sub_23F4F241C();
    if (v20)
      goto LABEL_33;
    goto LABEL_38;
  }
LABEL_36:
  sub_23F4F241C();
  if (!v19)
    goto LABEL_37;
LABEL_32:
  sub_23F4F2414();
  sub_23F384324();
  sub_23F61C22C();
  sub_23F38432C();
  if (v20)
  {
LABEL_33:
    sub_23F4F2414();
    sub_23F383E5C();
    sub_23F3C79E4();
    sub_23F3837B0();
    goto LABEL_39;
  }
LABEL_38:
  sub_23F4F241C();
LABEL_39:
  if (v26 != 2)
    sub_23F4F2414();
  return sub_23F61CD48();
}

uint64_t static Statement.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v36;
  char v37;
  char v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;

  v1 = sub_23F4F2580(a1);
  v4 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  v7 = *(_QWORD *)(v3 + 40);
  v8 = *(_QWORD *)(v3 + 48);
  v68 = *(unsigned __int8 *)(v3 + 56);
  v70 = *(_QWORD *)(v3 + 64);
  v66 = *(_QWORD *)(v3 + 72);
  v62 = *(_QWORD *)(v3 + 80);
  v64 = *(_QWORD *)(v3 + 88);
  v60 = *(_QWORD **)(v3 + 96);
  v57 = *(_OWORD *)(v3 + 104);
  v56 = *(_QWORD *)(v3 + 120);
  v58 = *(_QWORD **)(v3 + 128);
  v52 = *(_QWORD **)(v3 + 136);
  v46 = *(_QWORD *)(v3 + 144);
  v50 = *(_BYTE *)(v3 + 152);
  v42 = *(_QWORD *)(v3 + 160);
  v48 = *(_QWORD *)(v3 + 168);
  v44 = *(_QWORD **)(v3 + 176);
  v40 = *(unsigned __int8 *)(v3 + 184);
  v10 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v11 = *(_QWORD *)(v2 + 32);
  v12 = *(_QWORD *)(v2 + 40);
  v13 = *(_QWORD *)(v2 + 48);
  v67 = *(unsigned __int8 *)(v2 + 56);
  v55 = *(_OWORD *)(v2 + 104);
  v14 = v1 == *(_QWORD *)v2 && *(_QWORD *)(v3 + 8) == *(_QWORD *)(v2 + 8);
  v69 = *(_QWORD *)(v2 + 64);
  v65 = *(_QWORD *)(v2 + 72);
  v61 = *(_QWORD *)(v2 + 80);
  v63 = *(_QWORD *)(v2 + 88);
  v59 = *(_QWORD **)(v2 + 96);
  v53 = *(_QWORD **)(v2 + 128);
  v54 = *(_QWORD *)(v2 + 120);
  v51 = *(_QWORD **)(v2 + 136);
  v45 = *(_QWORD *)(v2 + 144);
  v49 = *(unsigned __int8 *)(v2 + 152);
  v41 = *(_QWORD *)(v2 + 160);
  v47 = *(_QWORD *)(v2 + 168);
  v43 = *(_QWORD **)(v2 + 176);
  v39 = *(unsigned __int8 *)(v2 + 184);
  if (!v14)
  {
    sub_23F3C8510();
    result = sub_23F48E284();
    if ((v16 & 1) == 0)
      return result;
  }
  if (!v6)
  {
    if (!v9)
      goto LABEL_11;
LABEL_18:
    v19 = sub_23F4F2918();
    sub_23F4EF300(v19, v20);
    sub_23F4F26BC();
    v21 = sub_23F4F2918();
    sub_23F4EF330(v21, v22);
    return 0;
  }
  *(_QWORD *)&v74 = v4;
  *((_QWORD *)&v74 + 1) = v6;
  v75 = v5;
  v76 = v7;
  if (!v9)
  {
    sub_23F4F26D0();
    goto LABEL_18;
  }
  *(_QWORD *)&v71 = v10;
  *((_QWORD *)&v71 + 1) = v9;
  LOBYTE(v72) = v11 & 1;
  v73 = v12;
  sub_23F4F26D0();
  sub_23F383738();
  sub_23F384324();
  static UtteranceRule.== infix(_:_:)((uint64_t)&v74);
  v18 = v17;
  sub_23F362984();
  sub_23F38432C();
  sub_23F4F26BC();
  if ((v18 & 1) == 0)
    return 0;
LABEL_11:
  if (v8)
  {
    if (v13)
    {
      swift_bridgeObjectRetain_n();
      sub_23F389CDC();
      if ((sub_23F3C4B14(v8, v13) & 1) != 0)
      {
        if (v68 == 3)
        {
          sub_23F4F2720();
          sub_23F362D08();
          if (v67 != 3)
            return 0;
          goto LABEL_28;
        }
        if (v67 != 3)
        {
          sub_23F489248(v68, v67);
          v24 = v23;
          sub_23F4F2720();
          sub_23F362D08();
          if ((v24 & 1) == 0)
            return 0;
          goto LABEL_28;
        }
      }
      sub_23F4F2720();
    }
    else
    {
      sub_23F617BA0();
    }
LABEL_24:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v13)
    goto LABEL_24;
LABEL_28:
  if (v70)
  {
    if (!v69)
      return 0;
    sub_23F389CDC();
    sub_23F383738();
    sub_23F3C4788();
    v26 = v25;
    sub_23F362984();
    sub_23F362D08();
    if ((v26 & 1) == 0)
      return 0;
  }
  else if (v69)
  {
    return 0;
  }
  if (v66)
  {
    if (!v65 || (sub_23F3C4944() & 1) == 0)
      return 0;
  }
  else if (v65)
  {
    return 0;
  }
  if (v64)
  {
    if (!v63)
      return 0;
    if (v62 != v61 || v64 != v63)
    {
      sub_23F3C8510();
      result = sub_23F48E284();
      if ((v28 & 1) == 0)
        return result;
    }
  }
  else if (v63)
  {
    return 0;
  }
  if (v60)
  {
    if (!v59)
      return 0;
    sub_23F3C4A3C(v60, v59);
    if ((v29 & 1) == 0)
      return 0;
  }
  else if (v59)
  {
    return 0;
  }
  v74 = v57;
  v75 = v56;
  v71 = v55;
  v72 = v54;
  static PlanValue.== infix(_:_:)(&v74, &v71);
  if ((v30 & 1) == 0)
    return 0;
  if (v58 != (_QWORD *)1)
  {
    if (v53 == (_QWORD *)1)
    {
      sub_23F4EF360((uint64_t)v58);
      v31 = 1;
      goto LABEL_60;
    }
    if (v58)
    {
      if (!v53)
        goto LABEL_87;
      sub_23F3C4A3C(v58, v53);
      if ((v33 & 1) == 0)
        goto LABEL_87;
    }
    else if (v53)
    {
      goto LABEL_87;
    }
    if (v52)
    {
      if (v51)
      {
        sub_23F3C4A3C(v52, v51);
        if ((v37 & 1) != 0)
          goto LABEL_92;
      }
    }
    else if (!v51)
    {
LABEL_92:
      sub_23F4EF360((uint64_t)v58);
      sub_23F362D18();
      sub_23F362984();
      goto LABEL_55;
    }
LABEL_87:
    sub_23F4EF360((uint64_t)v58);
    sub_23F362D18();
    goto LABEL_24;
  }
  v31 = (uint64_t)v53;
  if (v53 != (_QWORD *)1)
  {
LABEL_60:
    sub_23F4EF360(v31);
    sub_23F4EF394((uint64_t)v58);
    v32 = sub_23F3840BC();
    sub_23F4EF394(v32);
    return 0;
  }
LABEL_55:
  if ((v50 & 1) != 0)
  {
    if (!v49)
      return 0;
  }
  else
  {
    v34 = v49;
    if (v46 != v45)
      v34 = 1;
    if ((v34 & 1) != 0)
      return 0;
  }
  if (!v48)
  {
    if (v47)
      return 0;
LABEL_82:
    if (v44)
    {
      if (!v43)
        return 0;
      sub_23F3C4A3C(v44, v43);
      if ((v38 & 1) == 0)
        return 0;
    }
    else if (v43)
    {
      return 0;
    }
    if (v40 != 2)
      return v39 != 2 && ((((v40 & 1) == 0) ^ v39) & 1) != 0;
    return v39 == 2;
  }
  if (!v47)
    return 0;
  if (v42 == v41 && v48 == v47)
    goto LABEL_82;
  sub_23F3C8510();
  result = sub_23F48E284();
  if ((v36 & 1) != 0)
    goto LABEL_82;
  return result;
}

void static PlanValue.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a2[1];
  v6 = a2[2];
  if (!v3)
  {
    if (v5)
      goto LABEL_13;
    goto LABEL_10;
  }
  if (v5)
  {
    v7 = *a1 == *a2 && v3 == v5;
    if (v7 || (sub_23F3C8510(), sub_23F48E284(), (v8 & 1) != 0))
    {
LABEL_10:
      if (v4 && v6)
      {
        sub_23F3668F4();
        sub_23F383738();
        sub_23F3C4AF8();
        sub_23F362984();
        sub_23F362D18();
      }
    }
  }
LABEL_13:
  sub_23F362B80();
}

void Statement.hashValue.getter()
{
  _BYTE v0[72];

  sub_23F362CB0();
  Statement.hash(into:)((uint64_t)v0);
  sub_23F362C10();
  sub_23F362AD4();
}

void Statement.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[24];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  _BYTE v84[7];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  _BYTE v97[7];
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  char v102;
  _BYTE v103[7];
  char v104;
  _DWORD v105[3];
  uint64_t v106;

  sub_23F362C98();
  v2 = v1;
  v4 = v3;
  v65 = sub_23F35D2E8(&qword_256E78168);
  v5 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = 1;
  sub_23F35EA9C(v2, v2[3]);
  sub_23F4EF3C4();
  sub_23F4F24F8();
  if (v0)
  {
    sub_23F4F2764();
    v9 = 3454;
LABEL_4:
    v69 = 1;
    goto LABEL_5;
  }
  v64 = v5;
  v60 = v4;
  LOBYTE(v76) = 0;
  v8 = v65;
  sub_23F4F27D4();
  v10 = sub_23F61CB14();
  v12 = v11;
  LOBYTE(v75[0]) = 1;
  v13 = sub_23F4EF5E0();
  sub_23F383E5C();
  sub_23F4F244C();
  v63 = v12;
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v7, v8);
    sub_23F3837B0();
    sub_23F4F2764();
LABEL_17:
    v9 = 3455;
    goto LABEL_4;
  }
  v59 = v10;
  v14 = v77;
  v15 = v78;
  v16 = v79;
  LOBYTE(v75[0]) = 2;
  v106 = v76;
  sub_23F4EF300(v76, v77);
  sub_23F4EF61C();
  sub_23F4F244C();
  v66 = v16;
  v73 = v14;
  v74 = v15;
  v17 = v76;
  v18 = v77;
  sub_23F35D2E8(&qword_256E78120);
  LOBYTE(v75[0]) = 3;
  v19 = sub_23F4EF658();
  sub_23F383E5C();
  sub_23F4F244C();
  v72 = v17;
  if (v19)
  {
    sub_23F4F2400();
    sub_23F3837B0();
    sub_23F4F2510(v106, v73);
    sub_23F4F246C();
    v67 = 0;
    v68 = 0;
    v70 = 0;
    v71 = 0;
    goto LABEL_17;
  }
  v58 = v18;
  v20 = v76;
  sub_23F3B1CE4();
  LOBYTE(v75[0]) = 4;
  sub_23F4F2578(&qword_256E78190, v21, (uint64_t (*)(void))sub_23F4EF6D4, MEMORY[0x24BEE12D0]);
  v23 = v22;
  sub_23F384A00();
  sub_23F4F244C();
  v71 = v20;
  if (v23)
  {
    sub_23F4F2400();
    sub_23F4F24C4();
    sub_23F38458C();
    sub_23F4F24B4();
    sub_23F4F246C();
    v67 = 0;
    v68 = 0;
    v70 = 0;
    goto LABEL_17;
  }
  v24 = v76;
  LOBYTE(v75[0]) = 5;
  v25 = sub_23F4EF710();
  sub_23F384A00();
  sub_23F4F2694();
  v70 = v24;
  if (v25)
  {
    sub_23F4F2400();
    sub_23F4F24C4();
    sub_23F4F2500();
    sub_23F38458C();
    sub_23F4F2510(v106, v73);
    sub_23F4F246C();
    v67 = 0;
    v68 = 0;
    v9 = 3455;
    v69 = 1;
    goto LABEL_5;
  }
  v26 = v77;
  v57 = v76;
  v27 = v78;
  LOBYTE(v75[0]) = 6;
  v28 = sub_23F4EF74C();
  v62 = v26;
  sub_23F383738();
  sub_23F384A00();
  sub_23F4F244C();
  v61 = v27;
  if (v28)
  {
    sub_23F4F2400();
    sub_23F4F24C4();
    sub_23F4F2500();
    sub_23F4F2598();
    sub_23F38458C();
    sub_23F4F2590();
    sub_23F4F24B4();
    sub_23F4F246C();
    v67 = 0;
    v68 = 0;
    v9 = 3583;
    goto LABEL_4;
  }
  v29 = v76;
  v30 = v77;
  LOBYTE(v76) = 7;
  v69 = v29;
  sub_23F4EF360(v29);
  sub_23F4F27D4();
  v31 = sub_23F61CAE4();
  v68 = v30;
  v33 = v32;
  v53 = v31;
  v56 = v2;
  sub_23F35D2E8(&qword_256E70580);
  LOBYTE(v75[0]) = 8;
  sub_23F4EF788((unint64_t *)&qword_256E781B0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  v35 = v34;
  sub_23F383738();
  v54 = v35;
  sub_23F4F244C();
  v67 = v33;
  if (!v35)
  {
    v36 = v76;
    LOBYTE(v76) = 9;
    v55 = v36;
    sub_23F617BA0();
    sub_23F4F27D4();
    v37 = sub_23F61CB08();
    v52 = v38;
    v39 = v37;
    v104 = v38 & 1;
    LOBYTE(v76) = 10;
    v40 = sub_23F61CAE4();
    v42 = v41;
    LOBYTE(v75[0]) = 11;
    sub_23F4F28A0();
    sub_23F4F244C();
    v43 = v76;
    v102 = 12;
    sub_23F3B1EA4();
    v44 = sub_23F61CAF0();
    sub_23F4F2484();
    v75[0] = v59;
    v75[1] = v63;
    v75[2] = v106;
    v75[3] = v73;
    v75[4] = v74;
    v75[5] = v66;
    v75[6] = v72;
    LOBYTE(v75[7]) = v58;
    v45 = v69;
    v75[8] = v71;
    v75[9] = v70;
    v75[10] = v53;
    v75[11] = v67;
    v75[12] = v55;
    v75[13] = v57;
    v75[14] = v62;
    v75[15] = v61;
    v75[16] = v69;
    v75[17] = v68;
    v50 = v39;
    v51 = v40;
    v75[18] = v39;
    LOBYTE(v75[19]) = v52 & 1;
    v75[20] = v40;
    v75[21] = v42;
    v75[22] = v43;
    LODWORD(v54) = v44;
    LOBYTE(v75[23]) = v44;
    sub_23F4EF7DC(v75);
    sub_23F38458C();
    sub_23F3B5F04();
    sub_23F4EF394(v45);
    sub_23F4F24C4();
    sub_23F4F2500();
    sub_23F4F2598();
    sub_23F4F2750();
    sub_23F4F27CC();
    sub_23F432AF0();
    sub_23F4F2590();
    v47 = v73;
    v46 = v74;
    v48 = v66;
    sub_23F4F2510(v106, v73);
    v49 = v63;
    sub_23F362984();
    memcpy(v60, v75, 0xB9uLL);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v56);
    v76 = v59;
    v77 = v49;
    v78 = v106;
    v79 = v47;
    v80 = v46;
    v81 = v48;
    v82 = v72;
    v83 = v58;
    *(_DWORD *)v84 = v105[0];
    *(_DWORD *)&v84[3] = *(_DWORD *)((char *)v105 + 3);
    v85 = v71;
    v86 = v70;
    v87 = v53;
    v88 = v67;
    v89 = v55;
    v90 = v57;
    v91 = v62;
    v92 = v61;
    v93 = v69;
    v94 = v68;
    v95 = v50;
    v96 = v104;
    *(_DWORD *)v97 = *(_DWORD *)v103;
    *(_DWORD *)&v97[3] = *(_DWORD *)&v103[3];
    v98 = v51;
    v99 = v42;
    v100 = v43;
    v101 = v54;
    sub_23F4EF8C4(&v76);
    goto LABEL_10;
  }
  sub_23F4F2400();
  sub_23F4F272C();
  sub_23F4F24C4();
  sub_23F4F2500();
  sub_23F4F2598();
  sub_23F38458C();
  sub_23F432AF0();
  sub_23F4F2590();
  sub_23F4F24B4();
  sub_23F4F246C();
  v9 = 3583;
  v2 = v56;
LABEL_5:
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v2);
  if ((v9 & 1) != 0)
    sub_23F4F246C();
  sub_23F4F24CC();
  sub_23F4F24C4();
  sub_23F4F2500();
  sub_23F4F2598();
  sub_23F4F2750();
  sub_23F38432C();
  if (((v9 >> 7) & 1) != 0)
  {
    sub_23F4F2590();
    sub_23F432AF0();
  }
  sub_23F4F272C();
  swift_bridgeObjectRelease();
  sub_23F362984();
LABEL_10:
  sub_23F4F2618();
  sub_23F362870();
}

void sub_23F4EA0F0()
{
  Statement.init(from:)();
}

void sub_23F4EA104()
{
  Statement.encode(to:)();
}

uint64_t sub_23F4EA120()
{
  _BYTE v1[72];

  sub_23F61CD30();
  Statement.hash(into:)((uint64_t)v1);
  return sub_23F61CD60();
}

void UtteranceRule.pattern.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void UtteranceRule.pattern.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F4F2624();
  *v1 = v2;
  v1[1] = v0;
  sub_23F362B80();
}

uint64_t (*UtteranceRule.pattern.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void UtteranceRule.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *UtteranceRule.type.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*UtteranceRule.type.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UtteranceRule.spansForNamedCaptureGroups.getter()
{
  return sub_23F617BA0();
}

void UtteranceRule.spansForNamedCaptureGroups.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  sub_23F362928();
}

uint64_t (*UtteranceRule.spansForNamedCaptureGroups.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void UtteranceRule.init(builder:)(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  v1 = sub_23F4F2648(a1);
  *((_BYTE *)v1 + 16) = 0;
  v1[3] = MEMORY[0x24BEE4AF8];
  sub_23F4F25D0();
  sub_23F362928();
}

void UtteranceRule.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_23F383E5C();
  sub_23F4F28F4();
  sub_23F3837B0();
  sub_23F4F282C();
  sub_23F4932C4();
  sub_23F362984();
  sub_23F4F27A0();
  if (v1)
  {
    sub_23F3668F4();
    sub_23F3C7740();
    sub_23F493204();
  }
  else
  {
    sub_23F383488();
  }
}

void static UtteranceRule.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  char v10;

  v1 = sub_23F4F2580(a1);
  v4 = *(_BYTE *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_BYTE *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = v1 == *(_QWORD *)v2 && *(_QWORD *)(v3 + 8) == *(_QWORD *)(v2 + 8);
  if (v8 || (sub_23F3C8510(), sub_23F48E284(), (v9 & 1) != 0))
  {
    sub_23F48965C(v4, v6);
    if ((v10 & 1) != 0 && v5 && v7)
    {
      sub_23F3668F4();
      sub_23F383738();
      sub_23F3C54CC();
      sub_23F362984();
      sub_23F362D18();
    }
  }
  sub_23F362B80();
}

uint64_t sub_23F4EA378(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x6E726574746170 && a2 == 0xE700000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701869940 && a2 == 0xE400000000000000;
    if (v6 || (sub_23F61CC64() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023F638290)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23F4EA4B4(char a1)
{
  if (!a1)
    return 0x6E726574746170;
  if (a1 == 1)
    return 1701869940;
  return 0xD00000000000001ALL;
}

uint64_t sub_23F4EA508()
{
  char *v0;

  return sub_23F4EA4B4(*v0);
}

uint64_t sub_23F4EA510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4EA378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F4EA534()
{
  sub_23F4EF9B0();
  return sub_23F61CDC0();
}

uint64_t sub_23F4EA55C()
{
  sub_23F4EF9B0();
  return sub_23F61CDCC();
}

void UtteranceRule.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F362C98();
  v2 = sub_23F35D2E8(&qword_256E781B8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3B17A4();
  sub_23F4F2864(*(_QWORD *)(v0 + 24));
  sub_23F4EF9B0();
  sub_23F4F2780();
  sub_23F61CBB0();
  if (!v1)
  {
    sub_23F4EF9EC();
    sub_23F4E4DF8();
    sub_23F3B1CE4();
    sub_23F4F2578(&qword_256E781D8, v4, (uint64_t (*)(void))sub_23F4EFA28, MEMORY[0x24BEE12A0]);
    sub_23F4F263C();
  }
  sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F4F2758();
  sub_23F362870();
}

void UtteranceRule.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v1 = *(_QWORD *)(v0 + 24);
  sub_23F362CB0();
  sub_23F362CDC();
  sub_23F4932CC();
  sub_23F362C60();
  sub_23F4F282C();
  sub_23F4932C4();
  sub_23F362984();
  if (v1)
  {
    sub_23F4F2414();
    v2 = sub_23F3668F4();
    sub_23F4F2794(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
    sub_23F3C7740();
    sub_23F362D18();
  }
  else
  {
    sub_23F4F241C();
  }
  sub_23F362C10();
  sub_23F3B1B14();
}

void UtteranceRule.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v24[2];

  sub_23F362C98();
  sub_23F4F25A0();
  sub_23F35D2E8(&qword_256E781E8);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35EA9C(v12, v12[3]);
  sub_23F4EF9B0();
  sub_23F4F24F8();
  if (v13)
  {
    sub_23F44D4A0();
  }
  else
  {
    v19 = sub_23F4F25EC();
    v21 = v20;
    v22 = sub_23F4EFA64();
    sub_23F384324();
    sub_23F4F2694();
    if (v22)
    {
      sub_23F383D74((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
      sub_23F38432C();
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v12);
      sub_23F38432C();
    }
    else
    {
      sub_23F35D2E8(&qword_256E781D0);
      sub_23F4E7838(&qword_256E781F8, &qword_256E781D0, (uint64_t (*)(void))sub_23F4EFAA0, MEMORY[0x24BEE12D0]);
      sub_23F4F244C();
      sub_23F383D74((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
      v23 = v24[1];
      sub_23F383738();
      sub_23F4F2948();
      *(_QWORD *)v14 = v19;
      *(_QWORD *)(v14 + 8) = v21;
      *(_BYTE *)(v14 + 16) = a12;
      *(_QWORD *)(v14 + 24) = v23;
      sub_23F4F25B8();
    }
  }
  swift_bridgeObjectRelease();
  sub_23F4F2618();
  sub_23F362870();
}

void sub_23F4EA928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  UtteranceRule.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_23F4EA93C()
{
  UtteranceRule.encode(to:)();
}

uint64_t sub_23F4EA958()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_23F61CD30();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F61CD48();
  if (v1)
  {
    sub_23F617BA0();
    sub_23F3C7740();
    swift_bridgeObjectRelease();
  }
  return sub_23F61CD60();
}

void SpansForNamedCaptureGroups.captureGroupName.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void SpansForNamedCaptureGroups.captureGroupName.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F4F2624();
  *v1 = v2;
  v1[1] = v0;
  sub_23F362B80();
}

uint64_t (*SpansForNamedCaptureGroups.captureGroupName.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void SpansForNamedCaptureGroups.labels.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F4F28DC();
  *(_QWORD *)(v1 + 16) = v0;
  sub_23F362928();
}

uint64_t (*SpansForNamedCaptureGroups.labels.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SpansForNamedCaptureGroups.init(captureGroupName:labels:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void SpansForNamedCaptureGroups.init(builder:)(_QWORD *a1@<X8>)
{
  sub_23F4F2648(a1)[2] = MEMORY[0x24BEE4AF8];
  sub_23F4F25D0();
  sub_23F362928();
}

uint64_t SpansForNamedCaptureGroups.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F362CDC();
  sub_23F4932CC();
  sub_23F362C60();
  sub_23F383738();
  v0 = sub_23F3C85C0();
  sub_23F3C78C0(v0, v1);
  return sub_23F4E4CE4();
}

void static SpansForNamedCaptureGroups.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;

  v1 = sub_23F4F2580(a1);
  v4 = v1 == *v2 && *(_QWORD *)(v3 + 8) == v2[1];
  if (v4 || (sub_23F3C8510() & 1) != 0)
  {
    sub_23F3C85C0();
    sub_23F3C530C();
  }
  else
  {
    sub_23F362928();
  }
}

uint64_t sub_23F4EAB90(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023F6382B0 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F4EAC70(char a1)
{
  if ((a1 & 1) != 0)
    return 0x736C6562616CLL;
  else
    return 0xD000000000000010;
}

uint64_t sub_23F4EACA8()
{
  char *v0;

  return sub_23F4EAC70(*v0);
}

uint64_t sub_23F4EACB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4EAB90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F4EACD4()
{
  sub_23F4EFADC();
  return sub_23F61CDC0();
}

uint64_t sub_23F4EACFC()
{
  sub_23F4EFADC();
  return sub_23F61CDCC();
}

void SpansForNamedCaptureGroups.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F362C98();
  v3 = *(_QWORD *)(sub_23F35D2E8(&qword_256E78208) - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3B17A4();
  sub_23F4F2864(*(_QWORD *)(v0 + 16));
  sub_23F4EFADC();
  sub_23F4F2780();
  sub_23F4E4D48();
  if (!v1)
  {
    sub_23F4F25D8();
    sub_23F35D2E8(&qword_256E78218);
    sub_23F4EFB18();
    sub_23F4F2538();
  }
  sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F4F2758();
  sub_23F362870();
}

void SpansForNamedCaptureGroups.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_23F362CB0();
  sub_23F389CDC();
  sub_23F4932A4();
  sub_23F362D08();
  sub_23F383738();
  sub_23F3C78C0((uint64_t)v2, v1);
  sub_23F362984();
  sub_23F362C10();
  sub_23F4931F4();
}

void SpansForNamedCaptureGroups.init(from:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  sub_23F362C98();
  sub_23F4F25A0();
  sub_23F35D2E8(&qword_256E78230);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F4E4CF0();
  sub_23F4EFADC();
  sub_23F4F2434();
  if (v0)
  {
    sub_23F44D4A0();
  }
  else
  {
    sub_23F4F2814();
    v3 = sub_23F61CB14();
    v5 = v4;
    sub_23F35D2E8(&qword_256E78218);
    sub_23F4F25D8();
    v6 = sub_23F4EFB94();
    sub_23F384B00();
    sub_23F4F2900();
    sub_23F4F2424();
    if (v6)
    {
      sub_23F384364();
      sub_23F44D4A0();
    }
    else
    {
      *v1 = v3;
      v1[1] = v5;
      v1[2] = v7;
      sub_23F383738();
      sub_23F4F25B8();
    }
    sub_23F384364();
  }
  sub_23F4F2618();
  sub_23F362870();
}

void sub_23F4EAF4C()
{
  SpansForNamedCaptureGroups.init(from:)();
}

void sub_23F4EAF60()
{
  SpansForNamedCaptureGroups.encode(to:)();
}

uint64_t sub_23F4EAF7C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 16);
  sub_23F61CD30();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  sub_23F3C78C0((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_23F61CD60();
}

IntelligenceFlowPlannerRuntime::UtterancePatternType_optional __swiftcall UtterancePatternType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  uint64_t v2;
  char v3;
  IntelligenceFlowPlannerRuntime::UtterancePatternType_optional result;

  sub_23F4F283C();
  v2 = sub_23F4F2964();
  sub_23F362D18();
  if (v2 == 1)
    v3 = 1;
  else
    v3 = 2;
  if (!v2)
    v3 = 0;
  *v1 = v3;
  sub_23F362B80();
  return result;
}

unint64_t UtterancePatternType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000022;
  else
    return 0xD00000000000001DLL;
}

void sub_23F4EB084(char *a1, char *a2)
{
  sub_23F48965C(*a1, *a2);
}

IntelligenceFlowPlannerRuntime::UtterancePatternType_optional sub_23F4EB090(Swift::String *a1)
{
  return UtterancePatternType.init(rawValue:)(*a1);
}

void sub_23F4EB09C(unint64_t *a1@<X8>)
{
  unint64_t v2;

  *a1 = UtterancePatternType.rawValue.getter();
  a1[1] = v2;
  sub_23F362928();
}

uint64_t sub_23F4EB0BC()
{
  sub_23F4F225C();
  return sub_23F61C3AC();
}

uint64_t sub_23F4EB118()
{
  sub_23F4F225C();
  return sub_23F61C394();
}

void sub_23F4EB164()
{
  sub_23F3F6144();
}

uint64_t sub_23F4EB16C()
{
  return sub_23F4E6C9C();
}

void sub_23F4EB174()
{
  sub_23F3F6454();
}

void EventRule.eventResultOutputEnum.setter()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F4F26E4();
  *v1 = v0;
  sub_23F362928();
}

uint64_t (*EventRule.eventResultOutputEnum.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void EventRule.eventMatchOption.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *EventRule.eventMatchOption.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*EventRule.eventMatchOption.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

IntelligenceFlowPlannerRuntime::EventRule __swiftcall EventRule.init(eventResultOutputEnum:eventMatchOption:)(Swift::OpaquePointer eventResultOutputEnum, IntelligenceFlowPlannerRuntime::EventMatchOption eventMatchOption)
{
  uint64_t v2;
  char v3;
  IntelligenceFlowPlannerRuntime::EventRule result;

  v3 = *(_BYTE *)eventMatchOption;
  *(Swift::OpaquePointer *)v2 = eventResultOutputEnum;
  *(_BYTE *)(v2 + 8) = v3;
  result.eventResultOutputEnum = eventResultOutputEnum;
  result.eventMatchOption.value = eventMatchOption;
  return result;
}

void EventRule.init(builder:)(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = sub_23F4F2858(a1);
  *(_QWORD *)v1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v1 + 8) = 0;
  sub_23F4F25D0();
  sub_23F362928();
}

void EventRule.hash(into:)()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_23F3668F4();
  sub_23F3C761C();
  sub_23F362D18();
  sub_23F4F27A0();
  if (v1 == 3)
  {
    sub_23F362B80();
  }
  else
  {
    sub_23F3F9B48();
    sub_23F4E4CE4();
  }
}

void static EventRule.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  if ((sub_23F3C4B14(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0 && v2 != 3 && v3 != 3)
    sub_23F489248(v2, v3);
  sub_23F362928();
}

uint64_t sub_23F4EB330(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x800000023F6382D0 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023F6382F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23F4EB41C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0xD000000000000015;
}

unint64_t sub_23F4EB45C()
{
  char *v0;

  return sub_23F4EB41C(*v0);
}

uint64_t sub_23F4EB464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4EB330(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F4EB488()
{
  sub_23F4EFC10();
  return sub_23F61CDC0();
}

uint64_t sub_23F4EB4B0()
{
  sub_23F4EFC10();
  return sub_23F61CDCC();
}

void EventRule.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F362C98();
  sub_23F35D2E8(&qword_256E78248);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3B17A4();
  sub_23F4F2494();
  sub_23F4EFC10();
  sub_23F44D4B8();
  sub_23F3B1CE4();
  sub_23F4F2578(&qword_256E78260, v3, (uint64_t (*)(void))sub_23F4EFC4C, MEMORY[0x24BEE12A0]);
  sub_23F4E4DF8();
  if (!v0)
  {
    sub_23F4EFC88();
    sub_23F4F263C();
  }
  sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F4F2758();
  sub_23F362870();
}

void EventRule.hashValue.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_23F362CB0();
  v2 = sub_23F3668F4();
  sub_23F4F2794(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  sub_23F3C761C();
  sub_23F362D18();
  if (v1 == 3)
  {
    sub_23F4F241C();
  }
  else
  {
    sub_23F4F2414();
    sub_23F3F9B48();
    sub_23F362D18();
  }
  sub_23F362C10();
  sub_23F4931F4();
}

void EventRule.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;

  sub_23F362C98();
  sub_23F4F25A0();
  sub_23F35D2E8(&qword_256E78278);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F4E4CF0();
  sub_23F4EFC10();
  sub_23F4F2434();
  if (v11)
  {
    sub_23F44D4A0();
  }
  else
  {
    sub_23F3B1CE4();
    sub_23F4F2578(&qword_256E78280, v14, (uint64_t (*)(void))sub_23F4EFCC4, MEMORY[0x24BEE12D0]);
    sub_23F4F2900();
    v15 = sub_23F4EFD00();
    sub_23F384B00();
    sub_23F4F2458();
    sub_23F4F2424();
    if (v15)
    {
      sub_23F384364();
    }
    else
    {
      *(_QWORD *)v12 = a10;
      *(_BYTE *)(v12 + 8) = v16;
    }
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v10);
    sub_23F384364();
  }
  sub_23F4F2618();
  sub_23F362870();
}

void sub_23F4EB7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  EventRule.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F4EB7EC()
{
  EventRule.encode(to:)();
}

uint64_t sub_23F4EB808()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_23F61CD30();
  sub_23F617BA0();
  sub_23F3C761C();
  swift_bridgeObjectRelease();
  sub_23F61CD48();
  if (v1 != 3)
  {
    sub_23F61C22C();
    swift_bridgeObjectRelease();
  }
  return sub_23F61CD60();
}

void ContextRule.id.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

uint64_t ContextRule.type.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F4F2664();
  sub_23F4F2474();
  v0 = sub_23F3C85C0();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

uint64_t ContextRule.init(id:type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  *a3 = a1;
  a3[1] = a2;
  sub_23F4F2664();
  sub_23F4F2474();
  v3 = sub_23F3840BC();
  return sub_23F3F9C0C(v3, v4, v5, v6);
}

void ContextRule.init(builder:)(void (*a1)(_QWORD *)@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (char *)a2 + *(int *)(sub_23F4F2664() + 20);
  v5 = *MEMORY[0x24BE57298];
  v6 = sub_23F4F2634();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a1(a2);
  sub_23F383488();
}

void ContextRule.hash(into:)()
{
  sub_23F362CDC();
  sub_23F4932CC();
  sub_23F362C60();
  sub_23F4F2664();
  sub_23F4F2474();
  sub_23F3612C0(qword_256E71198, (uint64_t (*)(uint64_t))MEMORY[0x24BE57320], MEMORY[0x24BE57338]);
  sub_23F61C04C();
  sub_23F362B80();
}

void static ContextRule.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  uint64_t v5;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_23F3C8510() & 1) != 0)
  {
    v5 = *(int *)(sub_23F4F2664() + 20);
    sub_23F4891A8((uint64_t)a1 + v5, (uint64_t)a2 + v5);
  }
  else
  {
    sub_23F362928();
  }
}

uint64_t sub_23F4EBAA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F4EBB6C(char a1)
{
  if ((a1 & 1) != 0)
    return 1701869940;
  else
    return 25705;
}

void sub_23F4EBB90()
{
  sub_23F4ED460();
}

uint64_t sub_23F4EBBA8()
{
  char *v0;

  return sub_23F4EBB6C(*v0);
}

uint64_t sub_23F4EBBB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4EBAA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F4EBBD4()
{
  sub_23F4EFD3C();
  return sub_23F61CDC0();
}

uint64_t sub_23F4EBBFC()
{
  sub_23F4EFD3C();
  return sub_23F61CDCC();
}

uint64_t ContextRule.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_23F35D2E8(&qword_256E78298);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B17A4();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F4EFD3C();
  sub_23F44D4B8();
  sub_23F61CBB0();
  if (!v1)
  {
    type metadata accessor for ContextRule();
    sub_23F4F25D8();
    sub_23F618AE8();
    sub_23F3612C0(&qword_256E782A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE57320], MEMORY[0x24BE57330]);
    sub_23F61CBE0();
  }
  return sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

void ContextRule.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  sub_23F362CB0();
  sub_23F389CDC();
  sub_23F4932A4();
  sub_23F362D08();
  sub_23F4F2664();
  sub_23F4F2474();
  sub_23F3612C0(qword_256E71198, (uint64_t (*)(uint64_t))MEMORY[0x24BE57320], MEMORY[0x24BE57338]);
  sub_23F4F2794(v0, v1, v0, v2, v3, v4, v5, v6, v7, v8);
  sub_23F61C04C();
  sub_23F362C10();
  sub_23F4931F4();
}

void ContextRule.init(from:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F362C98();
  v4 = v3;
  v14 = v5;
  v6 = sub_23F618AE8();
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v15 = v9 - v8;
  v18 = sub_23F35D2E8(&qword_256E782B0);
  v10 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  sub_23F383A54();
  v11 = type metadata accessor for ContextRule();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3B17A4();
  sub_23F35EA9C(v4, v4[3]);
  sub_23F4EFD3C();
  sub_23F61CD84();
  if (v0)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v4);
  }
  else
  {
    *v1 = sub_23F61CB14();
    v1[1] = v13;
    sub_23F4F25D8();
    sub_23F3612C0(&qword_256E782B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE57320], MEMORY[0x24BE57350]);
    sub_23F61CB44();
    sub_23F383D74(v2, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))((char *)v1 + *(int *)(v11 + 20), v15, v17);
    sub_23F4EFD78((uint64_t)v1, v14);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v4);
    sub_23F4EFDBC((uint64_t)v1);
  }
  sub_23F4F27B8();
  sub_23F362870();
}

void sub_23F4EBF98()
{
  ContextRule.init(from:)();
}

uint64_t sub_23F4EBFAC(_QWORD *a1)
{
  return ContextRule.encode(to:)(a1);
}

uint64_t sub_23F4EBFC8()
{
  sub_23F61CD30();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F618AE8();
  sub_23F3612C0(qword_256E71198, (uint64_t (*)(uint64_t))MEMORY[0x24BE57320], MEMORY[0x24BE57338]);
  sub_23F61C04C();
  return sub_23F61CD60();
}

void DynamicEnumerationEntityRule.id.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void DynamicEnumerationEntityRule.dynamicEnumerationEntityIdentifier.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void DynamicEnumerationEntityRule.bundleId.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void __swiftcall DynamicEnumerationEntityRule.init(id:dynamicEnumerationEntityIdentifier:bundleId:)(IntelligenceFlowPlannerRuntime::DynamicEnumerationEntityRule *__return_ptr retstr, Swift::String id, Swift::String dynamicEnumerationEntityIdentifier, Swift::String bundleId)
{
  retstr->id = id;
  retstr->dynamicEnumerationEntityIdentifier = dynamicEnumerationEntityIdentifier;
  retstr->bundleId = bundleId;
}

void DynamicEnumerationEntityRule.init(builder:)(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = sub_23F4F2648(a1);
  v1[2] = 0;
  v1[3] = v2;
  v1[4] = 0;
  v1[5] = v2;
  sub_23F4F25D0();
  sub_23F362928();
}

uint64_t DynamicEnumerationEntityRule.hash(into:)()
{
  sub_23F362CDC();
  sub_23F4932CC();
  sub_23F362C60();
  sub_23F383EB0();
  sub_23F61C22C();
  sub_23F384120();
  sub_23F383738();
  sub_23F4932C4();
  return swift_bridgeObjectRelease();
}

uint64_t static DynamicEnumerationEntityRule.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t result;
  char v14;
  BOOL v15;
  char v16;

  v1 = sub_23F4F2580(a1);
  v4 = v3[2];
  v6 = v3[3];
  v5 = v3[4];
  v7 = v3[5];
  v8 = v2[2];
  v9 = v2[3];
  v10 = v2[4];
  v11 = v2[5];
  v12 = v1 == *v2 && v3[1] == v2[1];
  if (v12 || (sub_23F3C8510(), result = sub_23F48E284(), (v14 & 1) != 0))
  {
    v15 = v4 == v8 && v6 == v9;
    if (v15 || (sub_23F3C8510(), result = sub_23F48E284(), (v16 & 1) != 0))
    {
      if (v5 == v10 && v7 == v11)
      {
        return 1;
      }
      else
      {
        sub_23F3C85C0();
        return sub_23F61CC64();
      }
    }
  }
  return result;
}

uint64_t sub_23F4EC240(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x800000023F638310 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F4EC370(char a1)
{
  if (!a1)
    return 25705;
  if (a1 == 1)
    return 0xD000000000000022;
  return 0x6449656C646E7562;
}

void sub_23F4EC3C0()
{
  sub_23F4F293C();
  sub_23F493448();
  sub_23F362C10();
  sub_23F362AD4();
}

uint64_t sub_23F4EC3E4()
{
  char *v0;

  return sub_23F4EC370(*v0);
}

uint64_t sub_23F4EC3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4EC240(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F4EC410()
{
  sub_23F4EFDF8();
  return sub_23F61CDC0();
}

uint64_t sub_23F4EC438()
{
  sub_23F4EFDF8();
  return sub_23F61CDCC();
}

void DynamicEnumerationEntityRule.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F362C98();
  v3 = v2;
  v4 = sub_23F35D2E8(&qword_256E782C0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B17A4();
  sub_23F35EA9C(v3, v3[3]);
  sub_23F4EFDF8();
  sub_23F61CD90();
  sub_23F61CBB0();
  if (!v0)
  {
    sub_23F4F25D8();
    sub_23F4E4D48();
    sub_23F4E4D48();
  }
  sub_23F383D74(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23F4F2758();
  sub_23F362870();
}

void DynamicEnumerationEntityRule.hashValue.getter()
{
  sub_23F362CB0();
  sub_23F389CDC();
  sub_23F4932A4();
  sub_23F362D08();
  sub_23F383E5C();
  sub_23F4F28F4();
  sub_23F3837B0();
  sub_23F383738();
  sub_23F4932C4();
  sub_23F362984();
  sub_23F362C10();
  sub_23F3B1B14();
}

void DynamicEnumerationEntityRule.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F362C98();
  sub_23F4F25A0();
  sub_23F35D2E8(&qword_256E782D0);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35EA9C(v0, v0[3]);
  sub_23F4EFDF8();
  sub_23F4F24F8();
  if (v1)
  {
    sub_23F44D4A0();
  }
  else
  {
    v7 = sub_23F4F25EC();
    v9 = v8;
    v21 = v7;
    sub_23F4F25D8();
    sub_23F4F28A0();
    v10 = sub_23F4F25EC();
    v12 = v11;
    v19 = v10;
    sub_23F383738();
    v20 = v12;
    v13 = sub_23F61CB14();
    v15 = v14;
    v16 = v13;
    sub_23F383D74((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23F384324();
    sub_23F383738();
    sub_23F38432C();
    v17 = v20;
    *v2 = v21;
    v2[1] = v9;
    v2[2] = v19;
    v2[3] = v17;
    v2[4] = v16;
    v2[5] = v15;
    sub_23F4F25B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23F4F2618();
  sub_23F362870();
}

void sub_23F4EC78C()
{
  DynamicEnumerationEntityRule.init(from:)();
}

void sub_23F4EC7A0()
{
  DynamicEnumerationEntityRule.encode(to:)();
}

uint64_t sub_23F4EC7BC()
{
  sub_23F61CD30();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  return sub_23F61CD60();
}

IntelligenceFlowPlannerRuntime::EventResultOutputEnum_optional __swiftcall EventResultOutputEnum.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char v3;
  IntelligenceFlowPlannerRuntime::EventResultOutputEnum_optional result;

  sub_23F4F283C();
  v2 = sub_23F4F2964();
  sub_23F362D18();
  v3 = 6;
  if (v2 < 6)
    v3 = v2;
  *v1 = v3;
  sub_23F362B80();
  return result;
}

uint64_t EventResultOutputEnum.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F4EC8E4 + 4 * byte_23F62924A[*v0]))(0xD000000000000013, 0x800000023F633B80);
}

uint64_t sub_23F4EC8E4@<X0>(uint64_t a1@<X8>)
{
  return a1 - 2;
}

void sub_23F4EC944(char *a1)
{
  sub_23F489314(*a1);
}

IntelligenceFlowPlannerRuntime::EventResultOutputEnum_optional sub_23F4EC950(Swift::String *a1)
{
  return EventResultOutputEnum.init(rawValue:)(*a1);
}

void sub_23F4EC95C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = EventResultOutputEnum.rawValue.getter();
  a1[1] = v2;
  sub_23F362928();
}

uint64_t sub_23F4EC97C()
{
  sub_23F4F2220();
  return sub_23F61C3AC();
}

uint64_t sub_23F4EC9D8()
{
  sub_23F4F2220();
  return sub_23F61C394();
}

void sub_23F4ECA24()
{
  sub_23F3F6150();
}

void sub_23F4ECA2C(uint64_t a1)
{
  char *v1;

  sub_23F4E6B68(a1, *v1);
}

void sub_23F4ECA34()
{
  sub_23F3F6448();
}

IntelligenceFlowPlannerRuntime::EventMatchOption_optional __swiftcall EventMatchOption.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char v3;
  IntelligenceFlowPlannerRuntime::EventMatchOption_optional result;

  sub_23F4F283C();
  v2 = sub_23F4F2964();
  sub_23F362D18();
  v3 = 3;
  if (v2 < 3)
    v3 = v2;
  *v1 = v3;
  sub_23F362B80();
  return result;
}

unint64_t EventMatchOption.rawValue.getter()
{
  _BYTE *v0;
  int v1;
  unint64_t v2;

  v1 = *v0;
  if (v1 == 1)
    v2 = 0xD000000000000016;
  else
    v2 = 0xD000000000000017;
  if (*v0)
    return v2;
  else
    return 0xD000000000000016;
}

void sub_23F4ECAD4(unsigned __int8 *a1, char *a2)
{
  sub_23F489248(*a1, *a2);
}

IntelligenceFlowPlannerRuntime::EventMatchOption_optional sub_23F4ECAE0(Swift::String *a1)
{
  return EventMatchOption.init(rawValue:)(*a1);
}

void sub_23F4ECAEC(unint64_t *a1@<X8>)
{
  unint64_t v2;

  *a1 = EventMatchOption.rawValue.getter();
  a1[1] = v2;
  sub_23F362928();
}

uint64_t sub_23F4ECB0C()
{
  sub_23F4F21E4();
  return sub_23F61C3AC();
}

uint64_t sub_23F4ECB68()
{
  sub_23F4F21E4();
  return sub_23F61C394();
}

void sub_23F4ECBB4()
{
  sub_23F3F615C();
}

uint64_t sub_23F4ECBBC(uint64_t a1)
{
  char *v1;

  return sub_23F4E6AFC(a1, *v1);
}

void sub_23F4ECBC4()
{
  sub_23F3F64BC();
}

void PlanValue.planText.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void PlanValue.programStatements.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F4F28DC();
  *(_QWORD *)(v1 + 16) = v0;
  sub_23F362928();
}

uint64_t (*PlanValue.programStatements.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void PlanValue.init(builder:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_23F4F2858(a1);
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEE4AF8];
  sub_23F4F25D0();
  sub_23F362928();
}

uint64_t sub_23F4ECC48()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_23F61CAB4();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_23F4ECC9C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000011;
  else
    return 0x747865546E616C70;
}

void sub_23F4ECCD8(char *a1, char *a2)
{
  sub_23F4891C4(*a1, *a2);
}

void sub_23F4ECCE4()
{
  sub_23F3F6168();
}

uint64_t sub_23F4ECCEC()
{
  return sub_23F4E6AA8();
}

void sub_23F4ECCF4()
{
  sub_23F3F62C0();
}

uint64_t sub_23F4ECCFC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F4ECC48();
  *a1 = result;
  return result;
}

void sub_23F4ECD28(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_23F4ECC9C(*v1);
  a1[1] = v3;
  sub_23F362928();
}

uint64_t sub_23F4ECD4C()
{
  char *v0;

  return sub_23F4ECC9C(*v0);
}

uint64_t sub_23F4ECD54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F4ECC98();
  *a1 = result;
  return result;
}

uint64_t sub_23F4ECD78()
{
  sub_23F4EFE34();
  return sub_23F61CDC0();
}

uint64_t sub_23F4ECDA0()
{
  sub_23F4EFE34();
  return sub_23F61CDCC();
}

void PlanValue.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F362C98();
  v2 = v1;
  v4 = *(_QWORD *)(sub_23F35D2E8(&qword_256E782D8) - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3B17A4();
  sub_23F35EA9C(v2, v2[3]);
  sub_23F4EFE34();
  sub_23F61CD90();
  sub_23F61CB80();
  if (!v0)
  {
    sub_23F4F25D8();
    sub_23F383EB0();
    sub_23F35D2E8(&qword_256E708F8);
    sub_23F4EFE70();
    sub_23F4F2538();
    sub_23F38432C();
  }
  sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F4F2758();
  sub_23F362870();
}

void PlanValue.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v1 + 8))
  {
    sub_23F4F25B0();
    sub_23F389CDC();
    sub_23F3C8800();
    sub_23F362D08();
    if (v3)
    {
LABEL_3:
      sub_23F4F25B0();
      sub_23F3668F4();
      sub_23F3C7BC0(a1, v3);
      sub_23F493204();
      return;
    }
  }
  else
  {
    sub_23F4F25B0();
    if (v3)
      goto LABEL_3;
  }
  sub_23F4F25B0();
  sub_23F383488();
}

void PlanValue.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_23F362CB0();
  if (v1)
  {
    sub_23F4F2414();
    sub_23F389CDC();
    sub_23F3C8800();
    sub_23F362D08();
  }
  else
  {
    sub_23F4F241C();
  }
  if (v2)
  {
    sub_23F4F2414();
    v3 = sub_23F3668F4();
    v11 = sub_23F4F2794(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14);
    sub_23F3C7BC0((uint64_t)v11, v12);
    sub_23F362D18();
  }
  else
  {
    sub_23F4F241C();
  }
  sub_23F362C10();
  sub_23F4931F4();
}

void PlanValue.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  sub_23F362C98();
  sub_23F4F25A0();
  sub_23F35D2E8(&qword_256E782F8);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F4E4CF0();
  sub_23F4EFE34();
  sub_23F4F2434();
  if (v1)
  {
    sub_23F44D4A0();
  }
  else
  {
    sub_23F4F2814();
    v4 = sub_23F61CAE4();
    v6 = v5;
    sub_23F35D2E8(&qword_256E708F8);
    sub_23F4F25D8();
    v7 = sub_23F4EFEEC();
    sub_23F384B00();
    sub_23F4F2458();
    sub_23F4F2424();
    if (v7)
    {
      sub_23F384364();
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0);
      sub_23F384364();
    }
    else
    {
      sub_23F383738();
      sub_23F4F2948();
      *v2 = v4;
      v2[1] = v6;
      v2[2] = v8;
      sub_23F4F25B8();
    }
  }
  swift_bridgeObjectRelease();
  sub_23F4F2618();
  sub_23F362870();
}

void sub_23F4ED0F0()
{
  PlanValue.init(from:)();
}

void sub_23F4ED104()
{
  PlanValue.encode(to:)();
}

uint64_t sub_23F4ED120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_23F61CD30();
  sub_23F61CD48();
  if (v1)
  {
    sub_23F617BA0();
    sub_23F61C22C();
    swift_bridgeObjectRelease();
  }
  sub_23F61CD48();
  if (v2)
  {
    sub_23F617BA0();
    sub_23F3C7BC0((uint64_t)v4, v2);
    swift_bridgeObjectRelease();
  }
  return sub_23F61CD60();
}

void PlanTool.toolIds.setter()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F4F26E4();
  *v1 = v0;
  sub_23F362928();
}

uint64_t (*PlanTool.toolIds.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t PlanTool.excludeToolIds.getter()
{
  return sub_23F617BA0();
}

void PlanTool.excludeToolIds.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  sub_23F362928();
}

uint64_t (*PlanTool.excludeToolIds.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t PlanTool.init(toolIds:excludeToolIds:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void PlanTool.init(builder:)(uint64_t a1@<X8>)
{
  _QWORD *v1;

  v1 = (_QWORD *)sub_23F4F2858(a1);
  *v1 = MEMORY[0x24BEE4AF8];
  v1[1] = 0;
  sub_23F4F25D0();
  sub_23F362928();
}

void PlanTool.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[1];
  if (*v0)
  {
    sub_23F4F25B0();
    sub_23F389CDC();
    sub_23F3C79E4();
    sub_23F362D08();
    if (v1)
    {
LABEL_3:
      sub_23F4F25B0();
      sub_23F3668F4();
      sub_23F3C79E4();
      sub_23F4E4CE4();
      return;
    }
  }
  else
  {
    sub_23F4F25B0();
    if (v1)
      goto LABEL_3;
  }
  sub_23F4F25B0();
  sub_23F362B80();
}

void static PlanTool.== infix(_:_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD **v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  _QWORD *v10;

  v1 = (_QWORD *)sub_23F4F2580(a1);
  v3 = *(_QWORD *)(v2 + 8);
  v5 = *v4;
  v7 = *(_QWORD *)(v6 + 8);
  if (v1)
  {
    if (!v5)
      goto LABEL_9;
    sub_23F3C4A3C(v1, v5);
    if ((v8 & 1) == 0)
      goto LABEL_9;
  }
  else if (v5)
  {
    goto LABEL_9;
  }
  if (v3 && v7)
  {
    v9 = (_QWORD *)sub_23F3840BC();
    sub_23F3C4A3C(v9, v10);
  }
LABEL_9:
  sub_23F362928();
}

uint64_t sub_23F4ED350(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7364496C6F6F74 && a2 == 0xE700000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x546564756C637865 && a2 == 0xEE007364496C6F6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_23F4ED460()
{
  sub_23F362CB0();
  sub_23F61CD3C();
  sub_23F362C10();
  sub_23F362AD4();
}

uint64_t sub_23F4ED490(char a1)
{
  if ((a1 & 1) != 0)
    return 0x546564756C637865;
  else
    return 0x7364496C6F6F74;
}

uint64_t sub_23F4ED4D4()
{
  char *v0;

  return sub_23F4ED490(*v0);
}

uint64_t sub_23F4ED4DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4ED350(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F4ED500()
{
  sub_23F4EFF68();
  return sub_23F61CDC0();
}

uint64_t sub_23F4ED528()
{
  sub_23F4EFF68();
  return sub_23F61CDCC();
}

void PlanTool.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F362C98();
  sub_23F35D2E8(&qword_256E78310);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3B17A4();
  sub_23F4F2494();
  sub_23F4EFF68();
  sub_23F44D4B8();
  sub_23F35D2E8(&qword_256E70580);
  sub_23F4EF788((unint64_t *)&qword_256E78160, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_23F4F2518();
  if (!v0)
    sub_23F4F2518();
  sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F4F2758();
  sub_23F362870();
}

void PlanTool.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v2 = *v0;
  v1 = v0[1];
  sub_23F362CB0();
  if (v2)
  {
    sub_23F4F2414();
    sub_23F389CDC();
    sub_23F3C79E4();
    sub_23F362D08();
  }
  else
  {
    sub_23F4F241C();
  }
  if (v1)
  {
    sub_23F4F2414();
    v3 = sub_23F3668F4();
    sub_23F4F2794(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
    sub_23F3C79E4();
    sub_23F362D18();
  }
  else
  {
    sub_23F4F241C();
  }
  sub_23F362C10();
  sub_23F4931F4();
}

void PlanTool.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  _QWORD *v20;
  char v21;

  sub_23F362C98();
  v12 = v11;
  v14 = v13;
  v15 = sub_23F35D2E8(&qword_256E78320);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F4E4CF0();
  sub_23F4EFF68();
  sub_23F4F2434();
  if (v10)
  {
    sub_23F44D4A0();
  }
  else
  {
    v20 = v14;
    sub_23F35D2E8(&qword_256E70580);
    v21 = 0;
    sub_23F4EF788((unint64_t *)&qword_256E781B0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_23F4F2458();
    v21 = 1;
    sub_23F384B00();
    sub_23F4F2458();
    sub_23F383D74((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    sub_23F383738();
    sub_23F4F2948();
    v19 = v20;
    *v20 = a10;
    v19[1] = a10;
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v12);
  }
  swift_bridgeObjectRelease();
  sub_23F384364();
  sub_23F4F2618();
  sub_23F362870();
}

void sub_23F4ED818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  PlanTool.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_23F4ED82C()
{
  PlanTool.encode(to:)();
}

uint64_t sub_23F4ED848()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *v0;
  v1 = v0[1];
  sub_23F61CD30();
  sub_23F61CD48();
  if (v2)
  {
    sub_23F617BA0();
    sub_23F3C79E4();
    swift_bridgeObjectRelease();
  }
  sub_23F61CD48();
  if (v1)
  {
    sub_23F617BA0();
    sub_23F3C79E4();
    swift_bridgeObjectRelease();
  }
  return sub_23F61CD60();
}

uint64_t PlanOverrideLoader.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t PlanOverrideLoader.init()()
{
  uint64_t v0;

  return v0;
}

void sub_23F4ED910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  void (*v39)(char *, uint64_t);
  _BOOL4 v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _QWORD *v72;
  char *v73;
  id v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  sub_23F362C98();
  a19 = v22;
  a20 = v23;
  v77 = v24;
  v78 = v20;
  v26 = v25;
  sub_23F61C148();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F383A54();
  v79 = sub_23F619E98();
  v76 = *(_QWORD *)(v79 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F362AAC();
  v31 = (char *)(v29 - v30);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v71 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init);
  sub_23F6190AC();
  sub_23F3E0254();
  v37 = sub_23F619E8C();
  v38 = sub_23F61C61C();
  v39 = (void (*)(char *, uint64_t))v38;
  v40 = os_log_type_enabled(v37, v38);
  v74 = v36;
  v75 = v26;
  v73 = v31;
  if (v40)
  {
    v41 = swift_slowAlloc();
    v72 = v21;
    v42 = (uint8_t *)v41;
    a10 = sub_23F366668();
    *(_DWORD *)v42 = 136315138;
    sub_23F384324();
    v71 = v35;
    sub_23F4F292C(v77, v43, &a10);
    sub_23F4F2980(v44);
    sub_23F61C790();
    sub_23F3E01D0();
    sub_23F38485C(&dword_23F35A000, v37, (os_log_type_t)v39, "Loading plan overrides json in %s", v42);
    sub_23F3B17D4();
    sub_23F366530();
  }

  sub_23F384A80();
  sub_23F4F266C();
  v45 = v77;
  v46 = (void *)sub_23F61C0E8();
  v47 = objc_msgSend(v36, sel_fileExistsAtPath_, v46);

  if (!v47 || (sub_23F61C31C() & 1) == 0)
  {
    v57 = v35;
    v64 = v45;
    sub_23F4F2978();
    sub_23F3E0254();
    v65 = sub_23F4F2950();
    v66 = sub_23F61C628();
    if (os_log_type_enabled(v65, v66))
    {
      v76 = (uint64_t)v39;
      v67 = (uint8_t *)sub_23F366668();
      a10 = sub_23F366668();
      *(_DWORD *)v67 = 136315138;
      sub_23F384324();
      sub_23F4F292C(v64, v68, &a10);
      sub_23F4F2980(v69);
      sub_23F61C790();
      sub_23F3E01D0();
      sub_23F38485C(&dword_23F35A000, v65, v66, "Plan override json file does not exist: %s", v67);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F384A80();
    goto LABEL_13;
  }
  sub_23F61C13C();
  v48 = v78;
  v49 = sub_23F61C0AC();
  if (v48)
  {
    v78 = 0;
    v57 = v73;
    sub_23F4F2978();
    sub_23F384324();
    sub_23F441468();
    sub_23F384324();
    sub_23F441468();
    v58 = sub_23F4F2950();
    v59 = sub_23F61C628();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = sub_23F366668();
      v72 = (_QWORD *)sub_23F366668();
      v76 = sub_23F366668();
      a10 = v76;
      *(_DWORD *)v60 = 136315394;
      sub_23F384324();
      sub_23F4F292C(v77, v61, &a10);
      v80 = v62;
      sub_23F61C790();
      sub_23F3E01D0();
      *(_WORD *)(v60 + 12) = 2112;
      sub_23F441468();
      v63 = _swift_stdlib_bridgeErrorToNSError();
      v80 = v63;
      sub_23F61C790();
      *v72 = v63;
      sub_23F3665E8();
      sub_23F3665E8();
      sub_23F3E025C(&dword_23F35A000, v58, v59, "Error parsing Plan Override JSON file at %s: %@", (uint8_t *)v60);
      sub_23F35D2E8(&qword_256E6FAB0);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F3665E8();
    sub_23F384A80();
    sub_23F3665E8();
    sub_23F3665E8();

LABEL_13:
    v39(v57, v79);
    v70 = 0;
    goto LABEL_14;
  }
  sub_23F4EE2BC(v49, v50, v51, v52, v53, v54, v55, v56, (uint64_t)v71, (uint64_t)v72);
  v78 = 0;
  swift_bridgeObjectRelease();

  v70 = a10;
LABEL_14:
  *v26 = v70;
  sub_23F362870();
}

void sub_23F4EDE60()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  os_log_type_t v32;
  _DWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  os_log_type_t v38;
  _DWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  id v46;
  _DWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;

  sub_23F362C98();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v56 = *MEMORY[0x24BDAC8D0];
  v7 = sub_23F3B1728();
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3834D0();
  v47 = (_DWORD *)v9;
  MEMORY[0x24BDAC7A8](v10);
  v51 = (uint64_t)&v45 - v11;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init);
  v53 = MEMORY[0x24BEE4AF8];
  v13 = (void *)sub_23F61C0E8();
  v54 = 0;
  v14 = objc_msgSend(v12, sel_contentsOfDirectoryAtPath_error_, v13, &v54);

  v15 = v54;
  if (!v14)
  {
    v27 = v54;
    v28 = (void *)sub_23F616D9C();

    swift_willThrow();
    goto LABEL_19;
  }
  v48 = v6;
  v16 = sub_23F61C3DC();
  v17 = v15;

  v18 = *(_QWORD *)(v16 + 16);
  if (!v18)
  {
    sub_23F3837B0();
    v26 = MEMORY[0x24BEE4AF8];
LABEL_11:
    v6 = v48;
    v29 = v51;
    if (*(_QWORD *)(v26 + 16))
    {

      *v6 = v26;
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
    sub_23F4F2978();
    sub_23F3E0254();
    v37 = (void *)sub_23F4F2950();
    v38 = sub_23F61C61C();
    if (sub_23F4F27F4(v38))
    {
      v39 = (_DWORD *)sub_23F366668();
      v54 = (id)sub_23F366668();
      v46 = v12;
      *v39 = 136315138;
      v47 = v39 + 1;
      sub_23F383EB0();
      sub_23F4F27E4();
      v52 = v40;
      sub_23F61C790();
      sub_23F3E01D0();
      sub_23F4F2680(&dword_23F35A000, v41, v42, "No Plan Overrides found at path: %s");
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F384A80();
    sub_23F4F2894();
    v44(v29, v50);
LABEL_19:
    *v6 = 0;
    goto LABEL_20;
  }
  v45 = v16;
  v46 = v12;
  v19 = v16 + 40;
  while (1)
  {
    v54 = v4;
    v55 = v2;
    sub_23F384A00();
    sub_23F383EB0();
    sub_23F61C280();
    sub_23F61C280();
    sub_23F38458C();
    sub_23F4ED910((uint64_t)v54, v55, v20, v21, v22, v23, v24, v25, v45, (uint64_t)v46, (uint64_t)v47, (uint64_t)v48, v49, v50, v51, v52, v53, (uint64_t)v54, v55,
      v56);
    if (v0)
      break;
    sub_23F38458C();
    if (v54)
      sub_23F387684();
    v19 += 16;
    if (!--v18)
    {
      swift_bridgeObjectRelease();
      v26 = v53;
      v12 = v46;
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();

  sub_23F38458C();
  swift_bridgeObjectRelease();
  v30 = (uint64_t)v47;
  sub_23F6190AC();
  sub_23F3E0254();
  v31 = (void *)sub_23F619E8C();
  v32 = sub_23F61C628();
  if (sub_23F4F27F4(v32))
  {
    v33 = (_DWORD *)sub_23F366668();
    v54 = (id)sub_23F366668();
    *v33 = 136315138;
    sub_23F383EB0();
    sub_23F4F27E4();
    v53 = v34;
    sub_23F61C790();
    sub_23F3E01D0();
    sub_23F4F2680(&dword_23F35A000, v35, v36, "Error parsing Plan Override JSON files in %s");
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F384A80();

  sub_23F4F2894();
  v43(v30, v50);
  *v48 = 0;
LABEL_20:
  sub_23F4F2618();
  sub_23F362870();
}

void sub_23F4EE2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  void (*v27)(NSObject *, uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(NSObject *, uint64_t);
  _QWORD *v36;
  uint64_t v37;

  sub_23F362C98();
  v36 = v11;
  v13 = v12;
  v15 = v14;
  v16 = sub_23F3B1728();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  sub_23F362AAC();
  v20 = (v18 - v19);
  MEMORY[0x24BDAC7A8](v21);
  v23 = ((char *)&v33 - v22);
  sub_23F616ACC();
  swift_allocObject();
  v24 = sub_23F616AC0();
  sub_23F6190AC();
  sub_23F619E8C();
  v25 = sub_23F3B1A04();
  if (os_log_type_enabled(v23, v25))
  {
    v26 = (uint8_t *)sub_23F366668();
    v34 = v13;
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_23F35A000, v23, v25, "Decoding Plan Override JSON", v26, 2u);
    sub_23F366530();
  }

  v27 = *(void (**)(NSObject *, uint64_t))(v17 + 8);
  v34 = v16;
  v27(v23, v16);
  sub_23F384B00();
  sub_23F4E705C(v15, v13);
  sub_23F4F2298();
  sub_23F616AB4();
  if (v10)
  {
    sub_23F4455C8();
    sub_23F6190AC();
    sub_23F4F2934();
    sub_23F4F2934();
    v28 = sub_23F619E8C();
    v29 = sub_23F61C628();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)sub_23F366668();
      v31 = (_QWORD *)sub_23F366668();
      v33 = v24;
      v35 = v27;
      *(_DWORD *)v30 = 138412290;
      sub_23F4F2934();
      v37 = _swift_stdlib_bridgeErrorToNSError();
      sub_23F61C790();
      *v31 = v37;
      sub_23F4F265C();
      sub_23F4F265C();
      sub_23F38485C(&dword_23F35A000, v28, v29, "Error parsing Plan Override JSON: %@", v30);
      sub_23F35D2E8(&qword_256E6FAB0);
      sub_23F3B17D4();
      sub_23F366530();
    }
    swift_release();
    sub_23F4F265C();
    sub_23F4F265C();
    sub_23F4F265C();

    v27(v20, v34);
    a10 = 0;
  }
  else
  {
    swift_release();
    sub_23F4455C8();
  }
  *v36 = a10;
  sub_23F4F27B8();
  sub_23F362870();
}

uint64_t PlanOverrideLoader.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PlanOverrideLoader.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_23F4EE59C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23F35D2E8(&qword_256E78328);
  sub_23F3F3F64(v0, qword_256E78068);
  v1 = sub_23F3C85C0();
  sub_23F361498(v1, v2);
  swift_getKeyPath();
  sub_23F616D60();
  sub_23F362928();
}

uint64_t static Statement.creationTimestampDesc.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256E6F088 != -1)
    swift_once();
  v2 = sub_23F35D2E8(&qword_256E78328);
  v3 = sub_23F361498(v2, (uint64_t)qword_256E78068);
  return sub_23F3F9C0C(a1, v3, v2, *(uint64_t (**)(void))(*(_QWORD *)(v2 - 8) + 16));
}

uint64_t sub_23F4EE66C()
{
  const void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  NSObject *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[26];
  uint64_t v67[9];
  uint64_t v68;
  uint64_t v69;

  sub_23F362C98();
  v68 = v2;
  v69 = v3;
  v4 = v1;
  v5 = sub_23F3B1728();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F362AAC();
  v9 = (v7 - v8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = ((char *)&v55 - v11);
  v13 = (_QWORD *)sub_23F61B5D8();
  v64 = *(v13 - 1);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3834D0();
  v61 = v15;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v55 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v55 - v20;
  memcpy(v66, v0, 0xB9uLL);
  v22 = v66[16];
  if (v66[16] != 1)
  {
    v59 = v5;
    v60 = v66[16];
    v23 = v66[17];
    sub_23F61B68C();
    v24 = sub_23F61B680();
    if (!v1)
    {
      v58 = v23;
      v62 = v24;
      v57 = v6;
      if (v60 && (v25 = *(_QWORD *)(v60 + 16)) != 0)
      {
        v55 = v9;
        v56 = v12;
        v63 = 0;
        v26 = (uint64_t *)(sub_23F617BA0() + 40);
        v27 = MEMORY[0x24BEE4AF8];
        while (1)
        {
          v29 = *(v26 - 1);
          v28 = *v26;
          sub_23F3668F4();
          v30 = v63;
          sub_23F61B698();
          v63 = v30;
          if (v30)
            break;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, char *, _QWORD *))(v64 + 16))(v19, v21, v13);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F4F2888();
            v27 = v33;
          }
          v31 = *(_QWORD *)(v27 + 16);
          if (v31 >= *(_QWORD *)(v27 + 24) >> 1)
          {
            sub_23F4F2888();
            v27 = v34;
          }
          v26 += 2;
          *(_QWORD *)(v27 + 16) = v31 + 1;
          v32 = v64;
          (*(void (**)(unint64_t, char *, _QWORD *))(v64 + 32))(v27+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v64 + 72) * v31, v19, v13);
          (*(void (**)(char *, _QWORD *))(v32 + 8))(v21, v13);
          if (!--v25)
          {
            sub_23F48277C();
            v4 = v63;
            v12 = v56;
            goto LABEL_16;
          }
        }
        sub_23F3B5F04();
        sub_23F48277C();
        v35 = v55;
        sub_23F6190AC();
        sub_23F4F27C4();
        sub_23F3668F4();
        sub_23F4F27C4();
        sub_23F619E8C();
        v36 = sub_23F3B1A04();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = sub_23F366668();
          v67[0] = sub_23F366668();
          *(_DWORD *)v37 = 136315394;
          sub_23F3668F4();
          sub_23F37AE00(v29, v28, v67);
          v65 = v38;
          sub_23F4F27A8();
          sub_23F3E01D0();
          *(_WORD *)(v37 + 12) = 2080;
          v39 = v66[0];
          v40 = v66[1];
          sub_23F384A00();
          sub_23F37AE00(v39, v40, v67);
          v65 = v41;
          sub_23F4F27A8();
          sub_23F38458C();
          sub_23F4F2508();
          sub_23F4F2508();
          sub_23F3E025C(&dword_23F35A000, v35, v36, "PlanOverridesGraphService: Failed to find override plan tool id: %s. Skipping override: %s", (uint8_t *)v37);
          swift_arrayDestroy();
          sub_23F366530();
        }
        sub_23F384A80();
        sub_23F4F2508();
        sub_23F4F2508();

        sub_23F4F28E8((uint64_t)v35, *(uint64_t (**)(uint64_t, _QWORD))(v57 + 8));
        sub_23F4F28D0();

        v22 = 0;
      }
      else
      {
LABEL_16:
        if (v58 && (v56 = v12, (v42 = *(_QWORD *)(v58 + 16)) != 0))
        {
          v63 = v13;
          v43 = (uint64_t *)(sub_23F617BA0() + 40);
          v44 = v4;
          while (1)
          {
            v46 = *(v43 - 1);
            v45 = *v43;
            sub_23F362CDC();
            sub_23F61B698();
            if (!v44)
              break;
            v44 = 0;
            v43 += 2;
            swift_bridgeObjectRelease();
            sub_23F3665E8();
            if (!--v42)
            {
              swift_release();
              sub_23F48277C();
              v22 = 1;
              return v22 & 1;
            }
          }
          sub_23F3B5F04();
          sub_23F48277C();
          v48 = v56;
          sub_23F6190AC();
          sub_23F4F27C4();
          sub_23F362CDC();
          sub_23F4F27C4();
          sub_23F619E8C();
          v49 = sub_23F3B1A04();
          if (os_log_type_enabled(v48, v49))
          {
            v50 = sub_23F366668();
            v67[0] = sub_23F366668();
            *(_DWORD *)v50 = 136315394;
            sub_23F362CDC();
            sub_23F37AE00(v46, v45, v67);
            v65 = v51;
            sub_23F61C790();
            sub_23F3E01D0();
            *(_WORD *)(v50 + 12) = 2080;
            v52 = v66[0];
            v53 = v66[1];
            sub_23F3B1EA4();
            sub_23F37AE00(v52, v53, v67);
            v65 = v54;
            sub_23F61C790();
            sub_23F3B5F04();
            sub_23F4F2508();
            sub_23F4F2508();
            sub_23F3E025C(&dword_23F35A000, v48, v49, "PlanOverridesGraphService: Found excluded override plan tool id: %s. Skipping override: %s", (uint8_t *)v50);
            swift_arrayDestroy();
            sub_23F366530();
          }
          sub_23F384A80();
          sub_23F4F2508();
          sub_23F4F2508();

          sub_23F4F28E8((uint64_t)v48, *(uint64_t (**)(uint64_t, _QWORD))(v57 + 8));
          sub_23F4F28D0();
          (*(void (**)(uint64_t, id))(v64 + 8))(v61, v63);
          v22 = 0;
        }
        else
        {
          swift_release();
          v22 = 1;
        }
      }
    }
  }
  return v22 & 1;
}

_QWORD *sub_23F4EED20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[3];
  _QWORD v6[2];

  v6[0] = a3;
  v6[1] = a4;
  v5[2] = v6;
  return sub_23F4EF0FC((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_23F4F23B4, (uint64_t)v5, a1, a2);
}

void sub_23F4EED68()
{
  __asm { BR              X11 }
}

_QWORD *sub_23F4EEDC8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;

  v7 = v4;
  LOWORD(v8) = a1;
  BYTE2(v8) = BYTE2(a1);
  HIBYTE(v8) = BYTE3(a1);
  v9 = BYTE4(a1);
  v10 = BYTE5(a1);
  v11 = BYTE6(a1);
  result = sub_23F4EF208((uint64_t)&v7, v3, v2, BYTE6(a1));
  v6 = v8 | ((unint64_t)v9 << 32) | ((unint64_t)v10 << 40) | ((unint64_t)v11 << 48);
  *v1 = v7;
  v1[1] = v6;
  return result;
}

uint64_t sub_23F4EF008@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = sub_23F616E74();
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = MEMORY[0x24266A39C]();
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = MEMORY[0x24266A3B4]();
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_23F4EF07C(uint64_t result)
{
  char v1;

  if (result)
  {
    sub_23F617BA0();
    result = sub_23F61C8EC();
    if ((v1 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_23F4EF0FC(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  if (a3)
  {
    v6 = a4 - a3;
    v7 = a3;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  result = a1(&v9, v7, v6);
  if (!v4)
    return (_QWORD *)v9;
  return result;
}

char *sub_23F4EF15C(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_23F616BC8();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_23F616BE0();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_23F616BD4();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

_QWORD *sub_23F4EF208(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  result = a2(&v6, a1, a1 + a4);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

unint64_t sub_23F4EF24C()
{
  unint64_t result;

  result = qword_256E780C8;
  if (!qword_256E780C8)
  {
    result = MEMORY[0x242670A44](&unk_23F62A7FC, &type metadata for PlanOverride.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E780C8);
  }
  return result;
}

unint64_t sub_23F4EF288()
{
  unint64_t result;

  result = qword_256E780E0;
  if (!qword_256E780E0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for Statement, &type metadata for Statement);
    atomic_store(result, (unint64_t *)&qword_256E780E0);
  }
  return result;
}

unint64_t sub_23F4EF2C4()
{
  unint64_t result;

  result = qword_256E780F8;
  if (!qword_256E780F8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for Statement, &type metadata for Statement);
    atomic_store(result, (unint64_t *)&qword_256E780F8);
  }
  return result;
}

uint64_t sub_23F4EF300(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_23F617BA0();
    return sub_23F617BA0();
  }
  return result;
}

uint64_t sub_23F4EF330(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F4EF360(uint64_t result)
{
  if (result != 1)
  {
    sub_23F617BA0();
    return sub_23F617BA0();
  }
  return result;
}

uint64_t sub_23F4EF394(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23F4EF3C4()
{
  unint64_t result;

  result = qword_256E78108;
  if (!qword_256E78108)
  {
    result = MEMORY[0x242670A44](&unk_23F62A7AC, &unk_250FD9DA8);
    atomic_store(result, (unint64_t *)&qword_256E78108);
  }
  return result;
}

unint64_t sub_23F4EF400()
{
  unint64_t result;

  result = qword_256E78110;
  if (!qword_256E78110)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for UtteranceRule, &type metadata for UtteranceRule);
    atomic_store(result, (unint64_t *)&qword_256E78110);
  }
  return result;
}

unint64_t sub_23F4EF43C()
{
  unint64_t result;

  result = qword_256E78118;
  if (!qword_256E78118)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for EventRule, &type metadata for EventRule);
    atomic_store(result, (unint64_t *)&qword_256E78118);
  }
  return result;
}

unint64_t sub_23F4EF478()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E78128;
  if (!qword_256E78128)
  {
    v1 = sub_23F35EB74(&qword_256E78120);
    sub_23F3612C0(&qword_256E78130, (uint64_t (*)(uint64_t))type metadata accessor for ContextRule, (uint64_t)&protocol conformance descriptor for ContextRule);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E78128);
  }
  return result;
}

uint64_t type metadata accessor for ContextRule()
{
  uint64_t result;

  result = qword_256E783E8;
  if (!qword_256E783E8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23F4EF52C()
{
  unint64_t result;

  result = qword_256E78148;
  if (!qword_256E78148)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for DynamicEnumerationEntityRule, &type metadata for DynamicEnumerationEntityRule);
    atomic_store(result, (unint64_t *)&qword_256E78148);
  }
  return result;
}

unint64_t sub_23F4EF568()
{
  unint64_t result;

  result = qword_256E78150;
  if (!qword_256E78150)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlanValue, &type metadata for PlanValue);
    atomic_store(result, (unint64_t *)&qword_256E78150);
  }
  return result;
}

unint64_t sub_23F4EF5A4()
{
  unint64_t result;

  result = qword_256E78158;
  if (!qword_256E78158)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlanTool, &type metadata for PlanTool);
    atomic_store(result, (unint64_t *)&qword_256E78158);
  }
  return result;
}

unint64_t sub_23F4EF5E0()
{
  unint64_t result;

  result = qword_256E78170;
  if (!qword_256E78170)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for UtteranceRule, &type metadata for UtteranceRule);
    atomic_store(result, (unint64_t *)&qword_256E78170);
  }
  return result;
}

unint64_t sub_23F4EF61C()
{
  unint64_t result;

  result = qword_256E78178;
  if (!qword_256E78178)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for EventRule, &type metadata for EventRule);
    atomic_store(result, (unint64_t *)&qword_256E78178);
  }
  return result;
}

unint64_t sub_23F4EF658()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E78180;
  if (!qword_256E78180)
  {
    v1 = sub_23F35EB74(&qword_256E78120);
    sub_23F3612C0(&qword_256E78188, (uint64_t (*)(uint64_t))type metadata accessor for ContextRule, (uint64_t)&protocol conformance descriptor for ContextRule);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E78180);
  }
  return result;
}

unint64_t sub_23F4EF6D4()
{
  unint64_t result;

  result = qword_256E78198;
  if (!qword_256E78198)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for DynamicEnumerationEntityRule, &type metadata for DynamicEnumerationEntityRule);
    atomic_store(result, (unint64_t *)&qword_256E78198);
  }
  return result;
}

unint64_t sub_23F4EF710()
{
  unint64_t result;

  result = qword_256E781A0;
  if (!qword_256E781A0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlanValue, &type metadata for PlanValue);
    atomic_store(result, (unint64_t *)&qword_256E781A0);
  }
  return result;
}

unint64_t sub_23F4EF74C()
{
  unint64_t result;

  result = qword_256E781A8;
  if (!qword_256E781A8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlanTool, &type metadata for PlanTool);
    atomic_store(result, (unint64_t *)&qword_256E781A8);
  }
  return result;
}

void sub_23F4EF788(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = sub_23F35EB74(&qword_256E70580);
    v7 = a2;
    atomic_store(MEMORY[0x242670A44](a3, v6, &v7), a1);
  }
  sub_23F38454C();
}

_QWORD *sub_23F4EF7DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a1[16];
  sub_23F617BA0();
  sub_23F4EF300(v2, v3);
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F4EF360(v5);
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

_QWORD *sub_23F4EF8C4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a1[16];
  swift_bridgeObjectRelease();
  sub_23F4EF330(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F4EF394(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23F4EF9B0()
{
  unint64_t result;

  result = qword_256E781C0;
  if (!qword_256E781C0)
  {
    result = MEMORY[0x242670A44](&unk_23F62A75C, &type metadata for UtteranceRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E781C0);
  }
  return result;
}

unint64_t sub_23F4EF9EC()
{
  unint64_t result;

  result = qword_256E781C8;
  if (!qword_256E781C8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for UtterancePatternType, &type metadata for UtterancePatternType);
    atomic_store(result, (unint64_t *)&qword_256E781C8);
  }
  return result;
}

unint64_t sub_23F4EFA28()
{
  unint64_t result;

  result = qword_256E781E0;
  if (!qword_256E781E0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for SpansForNamedCaptureGroups, &type metadata for SpansForNamedCaptureGroups);
    atomic_store(result, (unint64_t *)&qword_256E781E0);
  }
  return result;
}

unint64_t sub_23F4EFA64()
{
  unint64_t result;

  result = qword_256E781F0;
  if (!qword_256E781F0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for UtterancePatternType, &type metadata for UtterancePatternType);
    atomic_store(result, (unint64_t *)&qword_256E781F0);
  }
  return result;
}

unint64_t sub_23F4EFAA0()
{
  unint64_t result;

  result = qword_256E78200;
  if (!qword_256E78200)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for SpansForNamedCaptureGroups, &type metadata for SpansForNamedCaptureGroups);
    atomic_store(result, (unint64_t *)&qword_256E78200);
  }
  return result;
}

unint64_t sub_23F4EFADC()
{
  unint64_t result;

  result = qword_256E78210;
  if (!qword_256E78210)
  {
    result = MEMORY[0x242670A44](&unk_23F62A70C, &type metadata for SpansForNamedCaptureGroups.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78210);
  }
  return result;
}

unint64_t sub_23F4EFB18()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E78220;
  if (!qword_256E78220)
  {
    v1 = sub_23F35EB74(&qword_256E78218);
    sub_23F3612C0(&qword_256E78228, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D20], MEMORY[0x24BEB9D30]);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E78220);
  }
  return result;
}

unint64_t sub_23F4EFB94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E78238;
  if (!qword_256E78238)
  {
    v1 = sub_23F35EB74(&qword_256E78218);
    sub_23F3612C0(&qword_256E78240, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D20], MEMORY[0x24BEB9D48]);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E78238);
  }
  return result;
}

unint64_t sub_23F4EFC10()
{
  unint64_t result;

  result = qword_256E78250;
  if (!qword_256E78250)
  {
    result = MEMORY[0x242670A44](&unk_23F62A6BC, &type metadata for EventRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78250);
  }
  return result;
}

unint64_t sub_23F4EFC4C()
{
  unint64_t result;

  result = qword_256E78268;
  if (!qword_256E78268)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for EventResultOutputEnum, &type metadata for EventResultOutputEnum);
    atomic_store(result, (unint64_t *)&qword_256E78268);
  }
  return result;
}

unint64_t sub_23F4EFC88()
{
  unint64_t result;

  result = qword_256E78270;
  if (!qword_256E78270)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for EventMatchOption, &type metadata for EventMatchOption);
    atomic_store(result, (unint64_t *)&qword_256E78270);
  }
  return result;
}

unint64_t sub_23F4EFCC4()
{
  unint64_t result;

  result = qword_256E78288;
  if (!qword_256E78288)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for EventResultOutputEnum, &type metadata for EventResultOutputEnum);
    atomic_store(result, (unint64_t *)&qword_256E78288);
  }
  return result;
}

unint64_t sub_23F4EFD00()
{
  unint64_t result;

  result = qword_256E78290;
  if (!qword_256E78290)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for EventMatchOption, &type metadata for EventMatchOption);
    atomic_store(result, (unint64_t *)&qword_256E78290);
  }
  return result;
}

unint64_t sub_23F4EFD3C()
{
  unint64_t result;

  result = qword_256E782A0;
  if (!qword_256E782A0)
  {
    result = MEMORY[0x242670A44](&unk_23F62A66C, &type metadata for ContextRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E782A0);
  }
  return result;
}

uint64_t sub_23F4EFD78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContextRule();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F4EFDBC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContextRule();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23F4EFDF8()
{
  unint64_t result;

  result = qword_256E782C8;
  if (!qword_256E782C8)
  {
    result = MEMORY[0x242670A44](&unk_23F62A61C, &type metadata for DynamicEnumerationEntityRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E782C8);
  }
  return result;
}

unint64_t sub_23F4EFE34()
{
  unint64_t result;

  result = qword_256E782E0;
  if (!qword_256E782E0)
  {
    result = MEMORY[0x242670A44](&unk_23F62A5CC, &type metadata for PlanValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E782E0);
  }
  return result;
}

unint64_t sub_23F4EFE70()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E782E8;
  if (!qword_256E782E8)
  {
    v1 = sub_23F35EB74(&qword_256E708F8);
    sub_23F3612C0(&qword_256E782F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE557B8], MEMORY[0x24BE557C8]);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E782E8);
  }
  return result;
}

unint64_t sub_23F4EFEEC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E78300;
  if (!qword_256E78300)
  {
    v1 = sub_23F35EB74(&qword_256E708F8);
    sub_23F3612C0(&qword_256E78308, (uint64_t (*)(uint64_t))MEMORY[0x24BE557B8], MEMORY[0x24BE557E0]);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E78300);
  }
  return result;
}

unint64_t sub_23F4EFF68()
{
  unint64_t result;

  result = qword_256E78318;
  if (!qword_256E78318)
  {
    result = MEMORY[0x242670A44](&unk_23F62A57C, &type metadata for PlanTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78318);
  }
  return result;
}

unint64_t sub_23F4EFFA8()
{
  unint64_t result;

  result = qword_256E78330;
  if (!qword_256E78330)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlanOverride, &type metadata for PlanOverride);
    atomic_store(result, (unint64_t *)&qword_256E78330);
  }
  return result;
}

unint64_t sub_23F4EFFE8()
{
  unint64_t result;

  result = qword_256E78338;
  if (!qword_256E78338)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for Statement, &type metadata for Statement);
    atomic_store(result, (unint64_t *)&qword_256E78338);
  }
  return result;
}

unint64_t sub_23F4F0028()
{
  unint64_t result;

  result = qword_256E78340;
  if (!qword_256E78340)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for UtteranceRule, &type metadata for UtteranceRule);
    atomic_store(result, (unint64_t *)&qword_256E78340);
  }
  return result;
}

unint64_t sub_23F4F0068()
{
  unint64_t result;

  result = qword_256E78348;
  if (!qword_256E78348)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for SpansForNamedCaptureGroups, &type metadata for SpansForNamedCaptureGroups);
    atomic_store(result, (unint64_t *)&qword_256E78348);
  }
  return result;
}

unint64_t sub_23F4F00A8()
{
  unint64_t result;

  result = qword_256E78350;
  if (!qword_256E78350)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for UtterancePatternType, &type metadata for UtterancePatternType);
    atomic_store(result, (unint64_t *)&qword_256E78350);
  }
  return result;
}

unint64_t sub_23F4F00E8()
{
  unint64_t result;

  result = qword_256E78358;
  if (!qword_256E78358)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for EventRule, &type metadata for EventRule);
    atomic_store(result, (unint64_t *)&qword_256E78358);
  }
  return result;
}

void sub_23F4F0124()
{
  sub_23F3612C0(&qword_256E78360, (uint64_t (*)(uint64_t))type metadata accessor for ContextRule, (uint64_t)&protocol conformance descriptor for ContextRule);
}

unint64_t sub_23F4F0154()
{
  unint64_t result;

  result = qword_256E78368;
  if (!qword_256E78368)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for DynamicEnumerationEntityRule, &type metadata for DynamicEnumerationEntityRule);
    atomic_store(result, (unint64_t *)&qword_256E78368);
  }
  return result;
}

unint64_t sub_23F4F0194()
{
  unint64_t result;

  result = qword_256E78370;
  if (!qword_256E78370)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for EventResultOutputEnum, &type metadata for EventResultOutputEnum);
    atomic_store(result, (unint64_t *)&qword_256E78370);
  }
  return result;
}

unint64_t sub_23F4F01D4()
{
  unint64_t result;

  result = qword_256E78378;
  if (!qword_256E78378)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for EventMatchOption, &type metadata for EventMatchOption);
    atomic_store(result, (unint64_t *)&qword_256E78378);
  }
  return result;
}

unint64_t sub_23F4F0214()
{
  unint64_t result;

  result = qword_256E78380;
  if (!qword_256E78380)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlanValue, &type metadata for PlanValue);
    atomic_store(result, (unint64_t *)&qword_256E78380);
  }
  return result;
}

unint64_t sub_23F4F0254()
{
  unint64_t result;

  result = qword_256E78388;
  if (!qword_256E78388)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlanTool, &type metadata for PlanTool);
    atomic_store(result, (unint64_t *)&qword_256E78388);
  }
  return result;
}

void type metadata accessor for PlanOverrideModel()
{
  sub_23F362C18();
}

void type metadata accessor for PlanOverride()
{
  sub_23F362C18();
}

uint64_t destroy for Statement(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 128) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Statement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  sub_23F617BA0();
  if (v5)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    sub_23F617BA0();
    sub_23F617BA0();
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v6;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  v11 = *(_QWORD *)(a2 + 128);
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  if (v11 == 1)
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  }
  else
  {
    v12 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = v11;
    *(_QWORD *)(a1 + 136) = v12;
    sub_23F617BA0();
    sub_23F617BA0();
  }
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v13 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v13;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for Statement(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      sub_23F617BA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F4F072C(a1 + 16);
      v7 = *(_OWORD *)(a2 + 32);
      *v4 = *v5;
      *(_OWORD *)(a1 + 32) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    sub_23F617BA0();
    sub_23F617BA0();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 32);
    *v4 = *v5;
    *(_OWORD *)(a1 + 32) = v8;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128) != 1)
  {
    if (v9 != 1)
    {
      *(_QWORD *)(a1 + 128) = v9;
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_23F4F0758(a1 + 128);
    goto LABEL_13;
  }
  if (v9 == 1)
  {
LABEL_13:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 128) = v9;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  sub_23F617BA0();
  sub_23F617BA0();
LABEL_15:
  v10 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v10;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  return a1;
}

uint64_t sub_23F4F072C(uint64_t a1)
{
  destroy for JointResolverLocationSignal();
  return a1;
}

uint64_t sub_23F4F0758(uint64_t a1)
{
  destroy for CarPlayRequirementEvaluator();
  return a1;
}

void *initializeWithTake for Statement(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB9uLL);
}

uint64_t assignWithTake for Statement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
  {
    v5 = *(_QWORD *)(a2 + 24);
    if (v5)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23F4F072C(a1 + 16);
  }
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
LABEL_6:
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128) != 1)
  {
    if (v9 != 1)
    {
      *(_QWORD *)(a1 + 128) = v9;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_23F4F0758(a1 + 128);
  }
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_11:
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v10 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  return a1;
}

uint64_t getEnumTagSinglePayload for Statement(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 185))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Statement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 184) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 185) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 185) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Statement()
{
  sub_23F362C18();
}

uint64_t initializeWithCopy for UtteranceRule(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for UtteranceRule(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UtteranceRule(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for UtteranceRule()
{
  sub_23F362C18();
}

_QWORD *assignWithCopy for SpansForNamedCaptureGroups(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for SpansForNamedCaptureGroups()
{
  sub_23F362C18();
}

void type metadata accessor for UtterancePatternType()
{
  sub_23F362C18();
}

uint64_t initializeBufferWithCopyOfBuffer for EventRule(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for EventRule(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for EventRule(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventRule(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventRule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for EventRule()
{
  sub_23F362C18();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextRule(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23F618AE8();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    sub_23F617BA0();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ContextRule(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23F618AE8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ContextRule(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23F618AE8();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  sub_23F617BA0();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for ContextRule(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F618AE8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ContextRule(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23F618AE8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for ContextRule(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F618AE8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextRule()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F4F0F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F362B80();
  }
  else
  {
    v6 = sub_23F4F2634();
    sub_23F36195C(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ContextRule()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F4F0FC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_23F362B80();
  }
  else
  {
    v7 = sub_23F4F2634();
    sub_23F36196C(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t sub_23F4F1024()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F618AE8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for TrialEnrollment()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DynamicEnumerationEntityRule(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

_QWORD *assignWithCopy for DynamicEnumerationEntityRule(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for DynamicEnumerationEntityRule(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicEnumerationEntityRule(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DynamicEnumerationEntityRule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for DynamicEnumerationEntityRule()
{
  sub_23F362C18();
}

uint64_t storeEnumTagSinglePayload for EventResultOutputEnum(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23F4F12E0 + 4 * byte_23F629255[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23F4F1314 + 4 * byte_23F629250[v4]))();
}

uint64_t sub_23F4F1314(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4F131C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F4F1324);
  return result;
}

uint64_t sub_23F4F1330(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F4F1338);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23F4F133C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4F1344(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for EventResultOutputEnum()
{
  sub_23F362C18();
}

void type metadata accessor for EventMatchOption()
{
  sub_23F362C18();
}

uint64_t _s30IntelligenceFlowPlannerRuntime26SpansForNamedCaptureGroupsVwxx_0()
{
  swift_bridgeObjectRelease();
  return sub_23F4F23F8();
}

void _s30IntelligenceFlowPlannerRuntime26SpansForNamedCaptureGroupsVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_23F617BA0();
  sub_23F383738();
  sub_23F362928();
}

_QWORD *assignWithCopy for PlanValue(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

void _s30IntelligenceFlowPlannerRuntime26SpansForNamedCaptureGroupsVwta_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  sub_23F362928();
}

uint64_t getEnumTagSinglePayload for PlanValue(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlanValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for PlanValue()
{
  sub_23F362C18();
}

_QWORD *assignWithCopy for PlanTool(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlanTool(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlanTool(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for PlanTool()
{
  sub_23F362C18();
}

uint64_t type metadata accessor for PlanOverrideLoader()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlanOverrideLoader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlanOverrideLoader.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of PlanOverrideLoader.parseOverrideModelFromFile(filePath:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

ValueMetadata *type metadata accessor for PlanTool.CodingKeys()
{
  return &type metadata for PlanTool.CodingKeys;
}

ValueMetadata *type metadata accessor for PlanValue.CodingKeys()
{
  return &type metadata for PlanValue.CodingKeys;
}

ValueMetadata *type metadata accessor for DynamicEnumerationEntityRule.CodingKeys()
{
  return &type metadata for DynamicEnumerationEntityRule.CodingKeys;
}

ValueMetadata *type metadata accessor for ContextRule.CodingKeys()
{
  return &type metadata for ContextRule.CodingKeys;
}

ValueMetadata *type metadata accessor for EventRule.CodingKeys()
{
  return &type metadata for EventRule.CodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerRuntime20UtterancePatternTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F4F1718 + 4 * byte_23F62925F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F4F174C + 4 * byte_23F62925A[v4]))();
}

uint64_t sub_23F4F174C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4F1754(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F4F175CLL);
  return result;
}

uint64_t sub_23F4F1768(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F4F1770);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F4F1774(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4F177C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SpansForNamedCaptureGroups.CodingKeys()
{
  return &type metadata for SpansForNamedCaptureGroups.CodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerRuntime16EventMatchOptionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F4F17E4 + 4 * byte_23F629269[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F4F1818 + 4 * byte_23F629264[v4]))();
}

uint64_t sub_23F4F1818(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4F1820(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F4F1828);
  return result;
}

uint64_t sub_23F4F1834(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F4F183CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F4F1840(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4F1848(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UtteranceRule.CodingKeys()
{
  return &type metadata for UtteranceRule.CodingKeys;
}

uint64_t sub_23F4F1864(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 12) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v5 = v6 - 13;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_23F4F18EC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_23F4F1938 + 4 * byte_23F629273[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_23F4F196C + 4 * byte_23F62926E[v4]))();
}

uint64_t sub_23F4F196C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4F1974(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F4F197CLL);
  return result;
}

uint64_t sub_23F4F1988(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F4F1990);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_23F4F1994(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F4F199C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Statement.CodingKeys()
{
  sub_23F362C18();
}

ValueMetadata *type metadata accessor for PlanOverride.CodingKeys()
{
  return &type metadata for PlanOverride.CodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerRuntime12PlanOverrideV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F4F1A08 + 4 * byte_23F629278[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F4F1A28 + 4 * byte_23F62927D[v4]))();
}

_BYTE *sub_23F4F1A08(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F4F1A28(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F4F1A30(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F4F1A38(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F4F1A40(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F4F1A48(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PlanOverrideModel.CodingKeys()
{
  return &type metadata for PlanOverrideModel.CodingKeys;
}

unint64_t sub_23F4F1A68()
{
  unint64_t result;

  result = qword_256E784D0;
  if (!qword_256E784D0)
  {
    result = MEMORY[0x242670A44](&unk_23F629EA4, &type metadata for PlanOverrideModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E784D0);
  }
  return result;
}

unint64_t sub_23F4F1AA8()
{
  unint64_t result;

  result = qword_256E784D8;
  if (!qword_256E784D8)
  {
    result = MEMORY[0x242670A44](&unk_23F629F5C, &type metadata for PlanOverride.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E784D8);
  }
  return result;
}

unint64_t sub_23F4F1AE8()
{
  unint64_t result;

  result = qword_256E784E0;
  if (!qword_256E784E0)
  {
    result = MEMORY[0x242670A44](&unk_23F62A014, &unk_250FD9DA8);
    atomic_store(result, (unint64_t *)&qword_256E784E0);
  }
  return result;
}

unint64_t sub_23F4F1B28()
{
  unint64_t result;

  result = qword_256E784E8;
  if (!qword_256E784E8)
  {
    result = MEMORY[0x242670A44](&unk_23F62A0CC, &type metadata for UtteranceRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E784E8);
  }
  return result;
}

unint64_t sub_23F4F1B68()
{
  unint64_t result;

  result = qword_256E784F0;
  if (!qword_256E784F0)
  {
    result = MEMORY[0x242670A44](&unk_23F62A184, &type metadata for SpansForNamedCaptureGroups.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E784F0);
  }
  return result;
}

unint64_t sub_23F4F1BA8()
{
  unint64_t result;

  result = qword_256E784F8;
  if (!qword_256E784F8)
  {
    result = MEMORY[0x242670A44](&unk_23F62A23C, &type metadata for EventRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E784F8);
  }
  return result;
}

unint64_t sub_23F4F1BE8()
{
  unint64_t result;

  result = qword_256E78500;
  if (!qword_256E78500)
  {
    result = MEMORY[0x242670A44](&unk_23F62A2F4, &type metadata for ContextRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78500);
  }
  return result;
}

unint64_t sub_23F4F1C28()
{
  unint64_t result;

  result = qword_256E78508;
  if (!qword_256E78508)
  {
    result = MEMORY[0x242670A44](&unk_23F62A3AC, &type metadata for DynamicEnumerationEntityRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78508);
  }
  return result;
}

unint64_t sub_23F4F1C68()
{
  unint64_t result;

  result = qword_256E78510;
  if (!qword_256E78510)
  {
    result = MEMORY[0x242670A44](&unk_23F62A49C, &type metadata for PlanValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78510);
  }
  return result;
}

unint64_t sub_23F4F1CA8()
{
  unint64_t result;

  result = qword_256E78518;
  if (!qword_256E78518)
  {
    result = MEMORY[0x242670A44](&unk_23F62A554, &type metadata for PlanTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78518);
  }
  return result;
}

unint64_t sub_23F4F1CE8()
{
  unint64_t result;

  result = qword_256E78520;
  if (!qword_256E78520)
  {
    result = MEMORY[0x242670A44](&unk_23F62A4C4, &type metadata for PlanTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78520);
  }
  return result;
}

unint64_t sub_23F4F1D28()
{
  unint64_t result;

  result = qword_256E78528;
  if (!qword_256E78528)
  {
    result = MEMORY[0x242670A44](&unk_23F62A4EC, &type metadata for PlanTool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78528);
  }
  return result;
}

unint64_t sub_23F4F1D68()
{
  unint64_t result;

  result = qword_256E78530;
  if (!qword_256E78530)
  {
    result = MEMORY[0x242670A44](&unk_23F62A3D4, &type metadata for PlanValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78530);
  }
  return result;
}

unint64_t sub_23F4F1DA8()
{
  unint64_t result;

  result = qword_256E78538;
  if (!qword_256E78538)
  {
    result = MEMORY[0x242670A44](&unk_23F62A3FC, &type metadata for PlanValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78538);
  }
  return result;
}

unint64_t sub_23F4F1DE8()
{
  unint64_t result;

  result = qword_256E78540;
  if (!qword_256E78540)
  {
    result = MEMORY[0x242670A44](&unk_23F62A31C, &type metadata for DynamicEnumerationEntityRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78540);
  }
  return result;
}

unint64_t sub_23F4F1E28()
{
  unint64_t result;

  result = qword_256E78548;
  if (!qword_256E78548)
  {
    result = MEMORY[0x242670A44](&unk_23F62A344, &type metadata for DynamicEnumerationEntityRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78548);
  }
  return result;
}

unint64_t sub_23F4F1E68()
{
  unint64_t result;

  result = qword_256E78550;
  if (!qword_256E78550)
  {
    result = MEMORY[0x242670A44](&unk_23F62A264, &type metadata for ContextRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78550);
  }
  return result;
}

unint64_t sub_23F4F1EA8()
{
  unint64_t result;

  result = qword_256E78558;
  if (!qword_256E78558)
  {
    result = MEMORY[0x242670A44](&unk_23F62A28C, &type metadata for ContextRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78558);
  }
  return result;
}

unint64_t sub_23F4F1EE8()
{
  unint64_t result;

  result = qword_256E78560;
  if (!qword_256E78560)
  {
    result = MEMORY[0x242670A44](&unk_23F62A1AC, &type metadata for EventRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78560);
  }
  return result;
}

unint64_t sub_23F4F1F28()
{
  unint64_t result;

  result = qword_256E78568;
  if (!qword_256E78568)
  {
    result = MEMORY[0x242670A44](&unk_23F62A1D4, &type metadata for EventRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78568);
  }
  return result;
}

unint64_t sub_23F4F1F68()
{
  unint64_t result;

  result = qword_256E78570;
  if (!qword_256E78570)
  {
    result = MEMORY[0x242670A44](&unk_23F62A0F4, &type metadata for SpansForNamedCaptureGroups.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78570);
  }
  return result;
}

unint64_t sub_23F4F1FA8()
{
  unint64_t result;

  result = qword_256E78578;
  if (!qword_256E78578)
  {
    result = MEMORY[0x242670A44](&unk_23F62A11C, &type metadata for SpansForNamedCaptureGroups.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78578);
  }
  return result;
}

unint64_t sub_23F4F1FE8()
{
  unint64_t result;

  result = qword_256E78580;
  if (!qword_256E78580)
  {
    result = MEMORY[0x242670A44](&unk_23F62A03C, &type metadata for UtteranceRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78580);
  }
  return result;
}

unint64_t sub_23F4F2028()
{
  unint64_t result;

  result = qword_256E78588;
  if (!qword_256E78588)
  {
    result = MEMORY[0x242670A44](&unk_23F62A064, &type metadata for UtteranceRule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78588);
  }
  return result;
}

unint64_t sub_23F4F2068()
{
  unint64_t result;

  result = qword_256E78590;
  if (!qword_256E78590)
  {
    result = MEMORY[0x242670A44](&unk_23F629F84, &unk_250FD9DA8);
    atomic_store(result, (unint64_t *)&qword_256E78590);
  }
  return result;
}

unint64_t sub_23F4F20A8()
{
  unint64_t result;

  result = qword_256E78598;
  if (!qword_256E78598)
  {
    result = MEMORY[0x242670A44](&unk_23F629FAC, &unk_250FD9DA8);
    atomic_store(result, (unint64_t *)&qword_256E78598);
  }
  return result;
}

unint64_t sub_23F4F20E8()
{
  unint64_t result;

  result = qword_256E785A0;
  if (!qword_256E785A0)
  {
    result = MEMORY[0x242670A44](&unk_23F629ECC, &type metadata for PlanOverride.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E785A0);
  }
  return result;
}

unint64_t sub_23F4F2128()
{
  unint64_t result;

  result = qword_256E785A8;
  if (!qword_256E785A8)
  {
    result = MEMORY[0x242670A44](&unk_23F629EF4, &type metadata for PlanOverride.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E785A8);
  }
  return result;
}

unint64_t sub_23F4F2168()
{
  unint64_t result;

  result = qword_256E785B0;
  if (!qword_256E785B0)
  {
    result = MEMORY[0x242670A44](&unk_23F629E14, &type metadata for PlanOverrideModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E785B0);
  }
  return result;
}

unint64_t sub_23F4F21A8()
{
  unint64_t result;

  result = qword_256E785B8;
  if (!qword_256E785B8)
  {
    result = MEMORY[0x242670A44](&unk_23F629E3C, &type metadata for PlanOverrideModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E785B8);
  }
  return result;
}

unint64_t sub_23F4F21E4()
{
  unint64_t result;

  result = qword_256E785C0;
  if (!qword_256E785C0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for EventMatchOption, &type metadata for EventMatchOption);
    atomic_store(result, (unint64_t *)&qword_256E785C0);
  }
  return result;
}

unint64_t sub_23F4F2220()
{
  unint64_t result;

  result = qword_256E785C8;
  if (!qword_256E785C8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for EventResultOutputEnum, &type metadata for EventResultOutputEnum);
    atomic_store(result, (unint64_t *)&qword_256E785C8);
  }
  return result;
}

unint64_t sub_23F4F225C()
{
  unint64_t result;

  result = qword_256E785D0;
  if (!qword_256E785D0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for UtterancePatternType, &type metadata for UtterancePatternType);
    atomic_store(result, (unint64_t *)&qword_256E785D0);
  }
  return result;
}

unint64_t sub_23F4F2298()
{
  unint64_t result;

  result = qword_256E785D8;
  if (!qword_256E785D8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlanOverrideModel, &type metadata for PlanOverrideModel);
    atomic_store(result, (unint64_t *)&qword_256E785D8);
  }
  return result;
}

uint64_t sub_23F4F22D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E785E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_23F4F2314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_23F4EED20(a1, a2, *a3, a3[1]);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

_QWORD *sub_23F4F2348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_23F4F2314(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

uint64_t sub_23F4F2360(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23F3F3D0C(a1, a2);
  return a1;
}

uint64_t sub_23F4F2374@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_23F4EF07C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_23F4F23B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23F4F2374(a1, a2);
}

uint64_t sub_23F4F23F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4F2400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 112) + 8))(v2, v1);
}

uint64_t sub_23F4F2414()
{
  return sub_23F61CD48();
}

uint64_t sub_23F4F241C()
{
  return sub_23F61CD48();
}

uint64_t sub_23F4F2424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F4F2434()
{
  return sub_23F61CD84();
}

uint64_t sub_23F4F244C()
{
  return sub_23F61CAFC();
}

uint64_t sub_23F4F2458()
{
  return sub_23F61CAFC();
}

uint64_t sub_23F4F2460()
{
  return sub_23F61CD84();
}

uint64_t sub_23F4F246C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4F2474()
{
  return sub_23F618AE8();
}

uint64_t sub_23F4F2484()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(v1, *(_QWORD *)(v0 + 120));
}

_QWORD *sub_23F4F2494()
{
  _QWORD *v0;

  return sub_23F35EA9C(v0, v0[3]);
}

uint64_t sub_23F4F24B4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F4EF330(v1, *(_QWORD *)(v0 + 184));
}

uint64_t sub_23F4F24C4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4F24CC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F4EF330(*(_QWORD *)(v1 - 72), *(_QWORD *)(v0 + 184));
}

uint64_t _s30IntelligenceFlowPlannerRuntime12PlanOverrideV10statementsSayAA9StatementVGvg_0()
{
  return sub_23F617BA0();
}

uint64_t sub_23F4F24E4()
{
  return sub_23F61CB98();
}

uint64_t sub_23F4F24F8()
{
  return sub_23F61CD84();
}

uint64_t sub_23F4F2500()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23F4F2508()
{
  uint64_t v0;

  return sub_23F4EF8C4((_QWORD *)(v0 - 280));
}

uint64_t sub_23F4F2510(uint64_t a1, uint64_t a2)
{
  return sub_23F4EF330(a1, a2);
}

uint64_t sub_23F4F2518()
{
  return sub_23F61CB98();
}

uint64_t sub_23F4F2538()
{
  return sub_23F61CBE0();
}

uint64_t sub_23F4F2558()
{
  return sub_23F61CB44();
}

void sub_23F4F2578(unint64_t *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t *v4;

  sub_23F4E7838(a1, v4, a3, a4);
}

uint64_t sub_23F4F2580(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_23F4F2590()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4F2598()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4F25B0()
{
  return sub_23F61CD48();
}

uint64_t sub_23F4F25B8()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4F25D0()
{
  uint64_t (*v0)(void);

  return v0();
}

void sub_23F4F25D8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

uint64_t sub_23F4F25E4()
{
  return sub_23F61CB98();
}

uint64_t sub_23F4F25EC()
{
  return sub_23F61CB14();
}

uint64_t sub_23F4F25FC()
{
  return sub_23F61CBE0();
}

uint64_t sub_23F4F2624()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4F2634()
{
  return sub_23F618AE8();
}

uint64_t sub_23F4F263C()
{
  return sub_23F61CB98();
}

_QWORD *sub_23F4F2648@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = a1;
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

void sub_23F4F265C()
{
  void *v0;

}

uint64_t sub_23F4F2664()
{
  return type metadata accessor for ContextRule();
}

uint64_t sub_23F4F266C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 8))(v0, *(_QWORD *)(v1 - 96));
}

void sub_23F4F2680(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_23F4F2694()
{
  return sub_23F61CB44();
}

uint64_t sub_23F4F26A8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F4EF300(v1, v0);
}

uint64_t sub_23F4F26BC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F4EF330(v1, v0);
}

uint64_t sub_23F4F26D0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F4EF300(v1, v0);
}

uint64_t sub_23F4F26E4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4F26F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F4F2704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t _s30IntelligenceFlowPlannerRuntime26SpansForNamedCaptureGroupsV6labelsSay7ToolKit14TypeIdentifierOGvg_0()
{
  return sub_23F617BA0();
}

uint64_t sub_23F4F2720()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F4F272C()
{
  uint64_t v0;

  return sub_23F4EF394(*(_QWORD *)(v0 + 152));
}

double sub_23F4F2734()
{
  uint64_t v0;
  __int16 v1;
  double result;

  v1 = *(_WORD *)(v0 - 148);
  result = *(double *)(v0 - 160);
  *(double *)(v0 - 136) = result;
  *(_DWORD *)(v0 - 128) = *(_DWORD *)(v0 - 152);
  *(_WORD *)(v0 - 124) = v1;
  return result;
}

uint64_t sub_23F4F2750()
{
  return swift_bridgeObjectRelease();
}

void sub_23F4F2764()
{
  _QWORD *v0;
  uint64_t v1;

  v0[17] = 0;
  v0[18] = 0;
  v0[20] = 0;
  v0[21] = 0;
  v0[22] = 0;
  v0[23] = 0;
  v0[16] = 0;
  v0[24] = 0;
  *(_QWORD *)(v1 - 72) = 0;
}

uint64_t sub_23F4F2780()
{
  return sub_23F61CD90();
}

char *sub_23F4F2794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

uint64_t sub_23F4F27A0()
{
  return sub_23F61CD48();
}

uint64_t sub_23F4F27A8()
{
  return sub_23F61C790();
}

_QWORD *sub_23F4F27C4()
{
  uint64_t v0;

  return sub_23F4EF7DC((_QWORD *)(v0 - 280));
}

uint64_t sub_23F4F27CC()
{
  return swift_bridgeObjectRelease();
}

void sub_23F4F27E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v1, v0, (uint64_t *)(v2 - 104));
}

BOOL sub_23F4F27F4(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_23F4F2804()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  sub_23F3BBECC(v2, v1, v0);
}

uint64_t sub_23F4F2814()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 0;
  return v0 - 65;
}

uint64_t sub_23F4F284C()
{
  uint64_t v0;

  return Statement.hash(into:)(v0);
}

uint64_t sub_23F4F2858@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

_QWORD *sub_23F4F2864@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = a1;
  return sub_23F35EA9C(v1, v1[3]);
}

void sub_23F4F2888()
{
  sub_23F37796C();
}

uint64_t sub_23F4F28A0()
{
  return sub_23F617BA0();
}

uint64_t sub_23F4F28A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4F28BC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F4F28D0()
{
  return swift_release();
}

uint64_t sub_23F4F28DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4F28E8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 336));
}

uint64_t sub_23F4F28F4()
{
  return sub_23F61C22C();
}

uint64_t sub_23F4F2900()
{
  return sub_23F61CB44();
}

uint64_t sub_23F4F290C()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F4F2360(v0, v1);
}

uint64_t sub_23F4F2918()
{
  uint64_t v0;

  return v0;
}

void sub_23F4F292C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F37AE00(a1, v3, a3);
}

id sub_23F4F2934()
{
  void *v0;

  return v0;
}

uint64_t sub_23F4F293C()
{
  return sub_23F61CD30();
}

uint64_t sub_23F4F2948()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F4F2950()
{
  return sub_23F619E8C();
}

uint64_t sub_23F4F2958()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F4F2964()
{
  return sub_23F61CAB4();
}

uint64_t sub_23F4F2978()
{
  return sub_23F6190AC();
}

uint64_t sub_23F4F2980(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return v1 - 88;
}

uint64_t sub_23F4F2994(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = sub_23F617000();
  v3 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v13 = v1;
    v15 = MEMORY[0x24BEE4AF8];
    sub_23F37C230();
    v7 = v15;
    v8 = *(_QWORD *)(sub_23F61B2E4() - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_23F61B260();
      v15 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      if (v11 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_23F37C230();
        v7 = v15;
      }
      *(_QWORD *)(v7 + 16) = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v11, v5, v14);
      v9 += v10;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_23F4F2AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;

  v34[1] = a2;
  v6 = sub_23F35D2E8(&qword_256E78AA8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for PlanOverridesService.EventReference(0);
  v38 = *(_QWORD *)(v42 - 8);
  v9 = MEMORY[0x24BDAC7A8](v42);
  v41 = (uint64_t)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v37 = (uint64_t)v34 - v11;
  v12 = sub_23F617000();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v45 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  v35 = v3;
  v36 = a1;
  if (v18)
  {
    v19 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v39 = *(_QWORD *)(v13 + 72);
    v40 = v20;
    sub_23F617BA0();
    v43 = v13;
    v44 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v40(v17, v19, v12);
      sub_23F36196C((uint64_t)v17, 0, 1, v12);
      if (sub_23F36195C((uint64_t)v17, 1, v12) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v45, v17, v12);
      sub_23F616FDC();
      v21 = sub_23F61C184();
      v23 = v22;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a3 + 16))
      {
        v24 = sub_23F3754D4(v21, v23);
        if ((v25 & 1) != 0)
        {
          sub_23F362600(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v38 + 72) * v24, (uint64_t)v8, type metadata accessor for PlanOverridesService.EventReference);
          v26 = 0;
        }
        else
        {
          v26 = 1;
        }
      }
      else
      {
        v26 = 1;
      }
      v27 = v42;
      sub_23F36196C((uint64_t)v8, v26, 1, v42);
      swift_bridgeObjectRelease();
      v13 = v43;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v12);
      if (sub_23F36195C((uint64_t)v8, 1, v27) == 1)
      {
        sub_23F3D9844((uint64_t)v8, &qword_256E78AA8);
      }
      else
      {
        v28 = v37;
        sub_23F36262C((uint64_t)v8, v37, type metadata accessor for PlanOverridesService.EventReference);
        sub_23F36262C(v28, v41, type metadata accessor for PlanOverridesService.EventReference);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F377E08();
          v44 = v31;
        }
        v29 = *(_QWORD *)(v44 + 16);
        if (v29 >= *(_QWORD *)(v44 + 24) >> 1)
        {
          sub_23F377E08();
          v44 = v32;
        }
        v30 = v44;
        *(_QWORD *)(v44 + 16) = v29 + 1;
        sub_23F36262C(v41, v30+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v29, type metadata accessor for PlanOverridesService.EventReference);
        v13 = v43;
      }
      v19 += v39;
      if (!--v18)
        goto LABEL_19;
    }
  }
  else
  {
    sub_23F617BA0();
    v44 = MEMORY[0x24BEE4AF8];
LABEL_19:
    sub_23F36196C((uint64_t)v17, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v44;
}

uint64_t sub_23F4F2EDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t *v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  _QWORD aBlock[6];
  _BYTE __src[192];
  _BYTE v23[192];
  _BYTE v24[192];
  _BYTE v25[192];
  _QWORD v26[4];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = sub_23F617BA0();
    v3 = MEMORY[0x24BEE4AF8];
    v4 = (uint64_t *)(v2 + 40);
    v5 = (uint64_t *)&unk_256E78AE8;
    while (1)
    {
      v6 = *(v4 - 1);
      v7 = *v4;
      sub_23F4F3B60(v26);
      if (v26[0])
      {
        v19 = (void *)v26[0];
        v20 = v3;
        v8 = (void *)v26[2];
        v18 = (void *)v26[1];
        sub_23F5069E0(v23);
        sub_23F383004((uint64_t)v23, (uint64_t)__src, v5);
        sub_23F61C184();
        sub_23F617BA0();
        v9 = v5;
        v10 = (void *)sub_23F61C0E8();
        swift_bridgeObjectRelease();
        v11 = (_QWORD *)swift_allocObject();
        v11[2] = __src;
        v11[3] = v6;
        v11[4] = v7;
        v12 = swift_allocObject();
        *(_QWORD *)(v12 + 16) = sub_23F506FB0;
        *(_QWORD *)(v12 + 24) = v11;
        aBlock[4] = sub_23F506FA4;
        aBlock[5] = v12;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_23F504D70;
        aBlock[3] = &unk_250FDA2F0;
        v13 = _Block_copy(aBlock);
        sub_23F617BA0();
        swift_retain();
        swift_release();
        objc_msgSend(v8, sel_lookupKey_resultBlock_, v10, v13);

        _Block_release(v13);
        LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
        result = swift_release();
        if ((v13 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        sub_23F383004((uint64_t)__src, (uint64_t)v24, v9);
        swift_release();
        sub_23F504E34(v19, v18, v8);
        swift_bridgeObjectRelease();
        sub_23F383004((uint64_t)v24, (uint64_t)v25, v9);
        v5 = v9;
        if (sub_23F44CD78((uint64_t)v25) == 1)
        {
          v3 = v20;
        }
        else
        {
          v3 = v20;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F377D54();
            v3 = v16;
          }
          v15 = *(_QWORD *)(v3 + 16);
          if (v15 >= *(_QWORD *)(v3 + 24) >> 1)
          {
            sub_23F377D54();
            v3 = v17;
          }
          sub_23F383004((uint64_t)v24, (uint64_t)__src, v9);
          *(_QWORD *)(v3 + 16) = v15 + 1;
          memcpy((void *)(v3 + 192 * v15 + 32), __src, 0xB9uLL);
        }
      }
      v4 += 2;
      if (!--v1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v3;
      }
    }
  }
  swift_release();
  return MEMORY[0x24BEE4AF8];
}

void sub_23F4F31F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F362ABC();
  sub_23F35D2E8(&qword_256E704D0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3B1CA0();
  v4 = MEMORY[0x24BDAC7A8](v3);
  sub_23F507E94(v4, v5, v6, v7, v8, v9, v10, v11, v22);
  sub_23F542878();
  v13 = v12;
  v14 = *(_QWORD *)(v12 + 16);
  sub_23F362C60();
  if (v14 < 2)
  {
LABEL_2:
    sub_23F507E40();
    sub_23F362948();
    return;
  }
  v15 = 0;
  v16 = v14 >> 1;
  v17 = v14 - 1;
  while (1)
  {
    if (v15 == v17)
      goto LABEL_12;
    v18 = *(_QWORD *)(v13 + 16);
    if (v15 >= v18)
      break;
    sub_23F5077FC();
    sub_23F389CB4(v14 + v0 * v15, v19);
    if (v17 >= v18)
      goto LABEL_15;
    sub_23F389CB4(v14 + v0 * v17, v1);
    if ((sub_23F406958() & 1) == 0)
    {
      sub_23F4924A8();
      v13 = v21;
    }
    if (v15 >= *(_QWORD *)(v13 + 16))
      goto LABEL_16;
    sub_23F5077E0();
    if (v17 >= *(_QWORD *)(v13 + 16))
      goto LABEL_17;
    sub_23F507DD0(v20, v14 + v0 * v17);
    v16 = v14 >> 1;
LABEL_12:
    ++v15;
    --v17;
    if (v16 == v15)
      goto LABEL_2;
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_23F4F3328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F362ABC();
  sub_23F35D2E8(&qword_256E701C0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3B1CA0();
  v4 = MEMORY[0x24BDAC7A8](v3);
  sub_23F507E94(v4, v5, v6, v7, v8, v9, v10, v11, v22);
  sub_23F542B40();
  v13 = v12;
  v14 = *(_QWORD *)(v12 + 16);
  sub_23F362C60();
  if (v14 < 2)
  {
LABEL_2:
    sub_23F507E40();
    sub_23F362948();
    return;
  }
  v15 = 0;
  v16 = v14 >> 1;
  v17 = v14 - 1;
  while (1)
  {
    if (v15 == v17)
      goto LABEL_12;
    v18 = *(_QWORD *)(v13 + 16);
    if (v15 >= v18)
      break;
    sub_23F5077FC();
    sub_23F389CB4(v14 + v0 * v15, v19);
    if (v17 >= v18)
      goto LABEL_15;
    sub_23F389CB4(v14 + v0 * v17, v1);
    if ((sub_23F406958() & 1) == 0)
    {
      sub_23F4924C8();
      v13 = v21;
    }
    if (v15 >= *(_QWORD *)(v13 + 16))
      goto LABEL_16;
    sub_23F5077E0();
    if (v17 >= *(_QWORD *)(v13 + 16))
      goto LABEL_17;
    sub_23F507DD0(v20, v14 + v0 * v17);
    v16 = v14 >> 1;
LABEL_12:
    ++v15;
    --v17;
    if (v16 == v15)
      goto LABEL_2;
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_23F4F346C()
{
  sub_23F4F3480();
}

void sub_23F4F3480()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, unint64_t, uint64_t);
  unint64_t v21;
  uint64_t (*v22)(uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v6 = v5(0);
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3834D0();
  v26 = v8;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F383780();
  v25 = v10;
  v11 = *(_QWORD *)(v4 + 16);
  if (v11 < 2)
  {
LABEL_2:
    sub_23F507E40();
    sub_23F362948();
    return;
  }
  v12 = 0;
  v13 = v11 >> 1;
  v14 = v11 - 1;
  v24 = v0;
  v22 = v2;
  v23 = v11 >> 1;
  while (1)
  {
    if (v12 == v14)
      goto LABEL_12;
    v15 = *(_QWORD *)(v4 + 16);
    if (v12 >= v15)
      break;
    v16 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
    v17 = v6;
    v18 = *(_QWORD *)(v0 + 72);
    v19 = v18 * v12;
    v20 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 16);
    v20(v25, v4 + v16 + v18 * v12, v17);
    if (v14 >= v15)
      goto LABEL_15;
    v21 = v18 * v14;
    v20(v26, v4 + v16 + v18 * v14, v17);
    v6 = v17;
    if ((sub_23F406958() & 1) == 0)
      v4 = v22(v4);
    v0 = v24;
    if (v12 >= *(_QWORD *)(v4 + 16))
      goto LABEL_16;
    sub_23F507B0C(v4 + v16 + v19, v26);
    if (v14 >= *(_QWORD *)(v4 + 16))
      goto LABEL_17;
    sub_23F507B0C(v4 + v16 + v21, v25);
    v13 = v23;
LABEL_12:
    ++v12;
    --v14;
    if (v13 == v12)
      goto LABEL_2;
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

uint64_t sub_23F4F35FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F5433E8(a1);
  v2 = v1;
  v3 = *(_QWORD *)(v1 + 16);
  result = sub_23F362984();
  if (v3 < 2)
    return v2;
  v5 = 0;
  v6 = v3 >> 1;
  v7 = v3 - 1;
  v8 = 24 * v3 + 16;
  v9 = 48;
  v19 = v3 >> 1;
  while (1)
  {
    if (v5 == v7)
      goto LABEL_11;
    v10 = *(_QWORD *)(v2 + 16);
    if (v5 >= v10)
      break;
    if (v7 >= v10)
      goto LABEL_14;
    v11 = *(_QWORD *)(v2 + v9 - 16);
    v12 = *(_QWORD *)(v2 + v9 - 8);
    v13 = *(_QWORD *)(v2 + v9);
    v14 = *(_QWORD *)(v2 + v8 - 8);
    v21 = *(_QWORD *)(v2 + v8);
    v15 = *(_QWORD *)(v2 + v8 + 8);
    sub_23F3B1EA4();
    sub_23F389CDC();
    v20 = v13;
    if ((sub_23F3F5E54() & 1) == 0)
    {
      sub_23F492578();
      v2 = v18;
    }
    v16 = (_QWORD *)(v2 + v9);
    result = swift_bridgeObjectRelease();
    *(v16 - 2) = v14;
    *(v16 - 1) = v21;
    *v16 = v15;
    if (v7 >= *(_QWORD *)(v2 + 16))
      goto LABEL_15;
    v17 = (_QWORD *)(v2 + v8);
    result = swift_bridgeObjectRelease();
    *(v17 - 1) = v11;
    *v17 = v12;
    v6 = v19;
    v17[1] = v20;
LABEL_11:
    ++v5;
    v9 += 24;
    --v7;
    v8 -= 24;
    if (v6 == v5)
      return v2;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

void sub_23F4F373C(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F35D2E8(&qword_256E78B08);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3D9CCC();
  sub_23F505FF0(v1);
  v4 = sub_23F35D2E8(&qword_256E78B10);
  v5 = sub_23F383740((uint64_t)v1, 1, v4);
  if (v6)
  {
    sub_23F441494(v5, &qword_256E78B08);
    sub_23F61B1E8();
    sub_23F3837C8();
  }
  else
  {
    v7 = (uint64_t)v1 + *(int *)(v4 + 48);
    v8 = sub_23F61B1E8();
    sub_23F362D94(a1, v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32));
    v9 = a1;
    v10 = 0;
    v11 = 1;
    v12 = v8;
  }
  sub_23F36196C(v9, v10, v11, v12);
  sub_23F362B80();
}

uint64_t sub_23F4F3814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = 1;
  if (a2 == 1)
    v2 = 2;
  if (a2)
    return v2;
  else
    return 0;
}

uint64_t sub_23F4F382C()
{
  sub_23F505B00();
  return sub_23F61CCAC();
}

uint64_t sub_23F4F3854()
{
  sub_23F505B00();
  return sub_23F61CCA0();
}

uint64_t sub_23F4F387C()
{
  uint64_t v0;

  v0 = qword_256E785F0;
  sub_23F617BA0();
  return v0;
}

uint64_t sub_23F4F38B0(uint64_t a1)
{
  uint64_t v1;

  return sub_23F4F3814(a1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_23F4F38B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  unint64_t v27;
  uint64_t v28;

  v2 = sub_23F61B2C0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B2E4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_23F61B14C();
  v11 = result;
  v28 = result;
  v12 = *(_QWORD *)(result + 16);
  if (v12)
  {
    v22 = a1;
    v27 = result + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v26 = *MEMORY[0x24BE56C88];
    v25 = *MEMORY[0x24BE56AD0];
    v24 = *MEMORY[0x24BE56C70];
    v13 = *MEMORY[0x24BE56AC8];
    v23 = *MEMORY[0x24BE56B98];
    while (v12 <= *(_QWORD *)(v11 + 16))
    {
      v14 = v11;
      --v12;
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, v27 + *(_QWORD *)(v7 + 72) * v12, v6);
      sub_23F61B2CC();
      v15 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
      if (v15 == v26 || v15 == v25 || v15 == v24 || v15 == v13)
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_19:
        a1 = v22;
        goto LABEL_20;
      }
      v19 = v15;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if (v19 == v23)
        goto LABEL_19;
      v11 = v14;
      if (!v12)
      {
        a1 = v22;
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    MEMORY[0x24BDAC7A8](result);
    *(&v21 - 2) = (uint64_t)&v28;
    sub_23F5063FC((_QWORD *(*)(_QWORD *__return_ptr, uint64_t *))sub_23F506C40, v12, v20, a1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F4F3B20(uint64_t a1)
{
  uint64_t v1;

  sub_23F3B1450();
  *(_QWORD *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

id sub_23F4F3B60@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_planOverridesStore);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_planOverridesStore + 8);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_planOverridesStore + 16);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_23F506BFC(v2, v3, v4);
}

void sub_23F4F3B80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_planOverridesStore;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_planOverridesStore);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_planOverridesStore + 8);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_planOverridesStore + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_QWORD *)(v3 + 16) = v2;
  sub_23F504E34(v5, v4, v6);
}

void PlanOverridesService.__allocating_init(toolbox:)()
{
  swift_allocObject();
  PlanOverridesService.init(toolbox:)();
  sub_23F362928();
}

uint64_t PlanOverridesService.init(toolbox:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v11;

  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE4B00];
  *(_DWORD *)(v0 + 120) = 0;
  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_planOverridesStore);
  v1[1] = 0;
  v1[2] = 0;
  *v1 = 0;
  v2 = v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_userLocale;
  v3 = sub_23F38F984();
  sub_23F3838D8(v2, v4, v5, v3);
  v6 = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_delayDuration;
  swift_getKeyPath();
  sub_23F507E4C();
  sub_23F3D9AF4();
  *(_QWORD *)(v0 + v6) = v11;
  v7 = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_delayDurationVariation;
  swift_getKeyPath();
  sub_23F507E4C();
  sub_23F3D9AF4();
  *(_QWORD *)(v0 + v7) = v11;
  sub_23F507C84();
  v8 = sub_23F482A1C();
  v9(v8);
  return v0;
}

void sub_23F4F3CC4(uint64_t *a1@<X8>)
{
  *a1 = sub_23F617C24();
  sub_23F362928();
}

void sub_23F4F3CE8(uint64_t *a1@<X8>)
{
  *a1 = sub_23F617C30();
  sub_23F362928();
}

uint64_t static PlanOverridesService.isEnabled()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = sub_23F618B90();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3D9CCC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v0, *MEMORY[0x24BE573F0], v2);
  v4 = sub_23F618B84();
  sub_23F383E88(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return v4 & 1;
}

void sub_23F4F3D84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F384838();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3B17A4();
  sub_23F382EF8(a1, v1, &qword_256E70A60);
  sub_23F5072F4();
  v4 = sub_23F4A1340();
  sub_23F506F68(v4, v5, &qword_256E70A60);
  swift_endAccess();
  sub_23F362B80();
}

uint64_t sub_23F4F3E04(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[6] = a1;
  v2[7] = v1;
  v3 = sub_23F3B1728();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = sub_23F4E6230();
  v2[11] = sub_23F3E0220();
  v2[12] = sub_23F3E0220();
  v2[13] = sub_23F3E0220();
  v2[14] = sub_23F3E0220();
  v2[15] = sub_23F3E0220();
  sub_23F35D2E8(&qword_256E70760);
  v2[16] = sub_23F366578();
  v4 = sub_23F616E68();
  v2[17] = v4;
  v2[18] = *(_QWORD *)(v4 - 8);
  v2[19] = sub_23F4E6230();
  v2[20] = sub_23F3E0220();
  v2[21] = sub_23F3E0220();
  v2[22] = sub_23F3E0220();
  v5 = sub_23F619F04();
  v2[23] = v5;
  v2[24] = *(_QWORD *)(v5 - 8);
  v2[25] = sub_23F366578();
  v6 = sub_23F61A15C();
  v2[26] = v6;
  v2[27] = *(_QWORD *)(v6 - 8);
  v2[28] = sub_23F366578();
  sub_23F35D2E8(&qword_256E730C8);
  v2[29] = sub_23F366578();
  v7 = sub_23F61B38C();
  v2[30] = v7;
  v2[31] = *(_QWORD *)(v7 - 8);
  v2[32] = sub_23F366578();
  v8 = sub_23F617E64();
  v2[33] = v8;
  v2[34] = *(_QWORD *)(v8 - 8);
  v2[35] = sub_23F366578();
  sub_23F35D2E8(&qword_256E70A60);
  v2[36] = sub_23F366578();
  sub_23F35D2E8(&qword_256E78618);
  v2[37] = sub_23F4E6230();
  v2[38] = sub_23F3E0220();
  return sub_23F36664C();
}

uint64_t sub_23F4F3F84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _WORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char v33;
  NSObject *v34;
  os_log_type_t v35;
  _WORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  void (*v63)(uint64_t);
  NSObject *v64;
  os_log_type_t v65;
  _BOOL4 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t);
  char v108;
  NSObject *v109;
  os_log_type_t v110;
  _BOOL4 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint8_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(uint64_t);
  uint64_t v126;
  uint64_t (*v127)(uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t (*v172)(uint64_t, uint64_t);
  id v173[4];

  sub_23F61B11C();
  v2 = v0[37];
  v1 = v0[38];
  v3 = sub_23F61A0F0();
  sub_23F41C5B8(v1, 0);
  v4 = sub_23F3848F0();
  sub_23F382EF8(v4, v5, v6);
  v7 = sub_23F36195C(v2, 1, v3);
  if ((_DWORD)v7 == 1)
  {
    sub_23F441494(v7, &qword_256E78618);
    v8 = 1;
  }
  else
  {
    v9 = v0[35];
    v10 = v0[34];
    sub_23F61A0E4();
    v11 = sub_23F5076F4();
    sub_23F383E64(v11, v12);
    sub_23F617E58();
    sub_23F383F80(v9, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v8 = 0;
  }
  v13 = v0[36];
  v14 = v0[27];
  v15 = v0[28];
  v16 = v0[25];
  v168 = v0[26];
  v171 = v0[30];
  v18 = v0[23];
  v17 = v0[24];
  v19 = sub_23F38F984();
  sub_23F36196C(v13, v8, 1, v19);
  sub_23F4F3D84(v13);
  sub_23F3D9844(v13, &qword_256E70A60);
  sub_23F61A150();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v16, *MEMORY[0x24BE54B58], v18);
  sub_23F503210();
  v21 = v20;
  sub_23F61A144();
  sub_23F362D18();
  sub_23F3B1CC8(v16, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v168);
  v22 = sub_23F5074D4();
  sub_23F383740(v22, v23, v171);
  if (v33)
  {
    v24 = v0[11];
    sub_23F3D9844(v0[29], &qword_256E730C8);
    sub_23F50712C();
    sub_23F619E8C();
    v25 = sub_23F3F0EEC();
    if (sub_23F3F0E3C(v25))
    {
      v26 = (_WORD *)sub_23F366668();
      sub_23F3F0EF4(v26);
      sub_23F3E2784(&dword_23F35A000, v24, v21, "Failed to load planner overrides asset from Asset Manager. Unable to locate UAF asset nor side loaded asset!");
      sub_23F366530();
    }
    v27 = v0[38];
    v28 = v0[11];
    v29 = v0[9];

    v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8);
  }
  else
  {
    v32 = v0[16];
    v31 = v0[17];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[31] + 32))(v0[32], v0[29], v0[30]);
    sub_23F61B380();
    sub_23F383740(v32, 1, v31);
    if (!v33)
    {
      v43 = v0[21];
      sub_23F362D94(v0[22], v0[16], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[18] + 32));
      sub_23F507490();
      sub_23F507EDC(v43, v173);
      v44 = v173[0];
      if (v173[0])
      {
        v46 = v173[1];
        v45 = v173[2];
        v47 = v173[0];
        v48 = v46;
        v49 = v45;
        sub_23F4F3B80((uint64_t)v173);
        sub_23F504E34(v44, v46, v45);
      }
      else
      {
        sub_23F616E20();
        v61 = sub_23F4FB034();
        v108 = v61;
        sub_23F3837B0();
        if ((v108 & 1) == 0)
        {
          sub_23F5076E0();
          sub_23F507490();
          v109 = sub_23F40B4F0();
          v110 = sub_23F61C628();
          v111 = sub_23F507304(v109);
          v67 = v0[38];
          v112 = v0[32];
          v114 = v0[17];
          v113 = v0[18];
          v164 = v0[15];
          v167 = v0[22];
          v155 = v0[9];
          v161 = v0[8];
          if (v111)
          {
            v143 = v0[18];
            v115 = (uint8_t *)sub_23F366668();
            v173[0] = (id)sub_23F366668();
            *(_DWORD *)v115 = 136315138;
            sub_23F3B121C(&qword_256E730D0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
            v116 = sub_23F507D0C();
            sub_23F507DBC(v116, v117, v118, v119, v120, v121, v122, v123, (uint64_t)(v115 + 4), v143, v112, v67, v155);
            v0[3] = v124;
            sub_23F435C14();
            sub_23F362D08();
            v125 = *(void (**)(uint64_t))(v144 + 8);
            v126 = sub_23F507AD8();
            v125(v126);
            sub_23F38485C(&dword_23F35A000, v109, v110, "Failed to load planner overrides json asset at: %s", v115);
            sub_23F3B17D4();
            sub_23F366530();
          }

          v127 = *(uint64_t (**)(uint64_t))(v113 + 8);
          v128 = sub_23F507AD8();
          v129 = v127(v128);
          sub_23F507B2C(v129, v130, v131, v132, v133, v134, v135, v136, v137, v140, v145, v148, v155, v156, v161, v164);
          ((void (*)(uint64_t, uint64_t))v127)(v167, v114);
          v106 = sub_23F507900();
          goto LABEL_26;
        }
      }
      v157 = v0 + 4;
      v159 = v0 + 5;
      sub_23F616DFC();
      sub_23F616E20();
      v50 = sub_23F384AB4();
      v172 = v51;
      ((void (*)(uint64_t))v51)(v50);
      sub_23F504750();
      v53 = v52;
      v55 = v54;
      sub_23F3837B0();
      if (v55)
      {
        v56 = v0[14];
        sub_23F50712C();
        sub_23F383EB0();
        sub_23F619E8C();
        v57 = sub_23F507D60();
        if (os_log_type_enabled(v56, v57))
        {
          v58 = (uint8_t *)sub_23F366668();
          v173[0] = (id)sub_23F366668();
          *(_DWORD *)v58 = 136315138;
          sub_23F383EB0();
          sub_23F507508(v53, v59, (uint64_t *)v173);
          *v159 = v60;
          sub_23F61C790();
          sub_23F3E01D0();
          sub_23F38485C(&dword_23F35A000, v56, v57, "Planner override asset version is %s", v58);
          sub_23F3B17D4();
          sub_23F366530();
        }
        sub_23F384A80();

        v62 = sub_23F384AB4();
        v63(v62);
      }
      sub_23F5076E0();
      sub_23F507490();
      v64 = sub_23F40B4F0();
      v65 = sub_23F61C61C();
      v66 = os_log_type_enabled(v64, v65);
      v67 = v0[38];
      v69 = v0[31];
      v68 = v0[32];
      v70 = v0[30];
      v71 = v0[22];
      v162 = v0[9];
      v165 = v0[8];
      v169 = v0[13];
      if (v66)
      {
        v149 = v0[22];
        v72 = (uint8_t *)sub_23F366668();
        v173[0] = (id)sub_23F366668();
        *(_DWORD *)v72 = 136315138;
        sub_23F3B121C(&qword_256E730D0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
        v73 = sub_23F507D0C();
        sub_23F507DBC(v73, v74, v75, v76, v77, v78, v79, v80, v68, v70, v69, v149, v67);
        *v157 = v81;
        sub_23F507D1C();
        v82 = sub_23F362D08();
        sub_23F507AE4(v82, v83, v84, v85, v86, v87, v88, v89, v138, v141, v146, v150, v153, (uint64_t)v157, (uint64_t)v159, v162, v165, v169, v172);
        sub_23F38485C(&dword_23F35A000, v64, v65, "Successfully loaded planner overrides asset at: %s", v72);
        sub_23F3B17D4();
        sub_23F366530();
      }

      v98 = sub_23F507AE4(v90, v91, v92, v93, v94, v95, v96, v97, v137, v140, v145, v148, v152, (uint64_t)v157, (uint64_t)v159, v162, v165, v169, v172);
      sub_23F3B5E4C(v98, v99, v100, v101, v102, v103, v104, v105, v139, v142, v147, v151, v154, v158, v160, v163, v166, v170);
      sub_23F5075F8(v71);
      v106 = sub_23F3848F0();
LABEL_26:
      v107(v106);
      v40 = v67;
      goto LABEL_15;
    }
    v34 = v0[12];
    sub_23F3D9844(v0[16], &qword_256E70760);
    sub_23F50712C();
    sub_23F619E8C();
    v35 = sub_23F3F0EEC();
    if (sub_23F3F0E3C(v35))
    {
      v36 = (_WORD *)sub_23F366668();
      sub_23F3F0EF4(v36);
      sub_23F3E2784(&dword_23F35A000, v34, (os_log_type_t)v31, "Asset Bundle URL does not exist");
      sub_23F366530();
    }
    v27 = v0[38];
    v37 = v0[31];
    v28 = v0[32];
    v38 = v0[12];
    v39 = v0[9];

    sub_23F383F80(v38, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
    v30 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8);
  }
  sub_23F383CA8(v28, v30);
  v40 = v27;
LABEL_15:
  sub_23F3D9844(v40, &qword_256E78618);
  swift_task_dealloc();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  swift_task_dealloc();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  v41 = (uint64_t (*)(void))sub_23F384760();
  return v41();
}

uint64_t sub_23F4F49D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_23F50760C();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = sub_23F4E6230();
  v2[7] = sub_23F3E0220();
  v2[8] = *(_QWORD *)(sub_23F35D2E8(&qword_256E702E0) - 8);
  v2[9] = sub_23F4E6230();
  v2[10] = sub_23F3E0220();
  v4 = sub_23F428AC4();
  v2[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[12] = v5;
  v2[13] = *(_QWORD *)(v5 + 64);
  v2[14] = swift_task_alloc();
  v2[15] = type metadata accessor for PlanOverridesService.PlanOverridesRequest(0);
  v2[16] = sub_23F366578();
  v2[17] = type metadata accessor for PlanOverridesService.PlanOverridesResponse(0);
  v2[18] = sub_23F366578();
  v6 = sub_23F428AE4();
  v2[19] = v6;
  v2[20] = *(_QWORD *)(v6 - 8);
  v2[21] = sub_23F366578();
  return sub_23F36664C();
}

uint64_t sub_23F4F4ABC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v1 = v0[20];
  v2 = v0[21];
  v3 = v0[14];
  v4 = v0[12];
  v5 = v0[2];
  v11 = v0[3];
  sub_23F61B128();
  sub_23F5F4714();
  v0[22] = v6;
  sub_23F383F80(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F61B128();
  sub_23F507278(v3, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  v0[23] = v8;
  *(_QWORD *)(v8 + 16) = v11;
  sub_23F507278(v8 + v7, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  swift_retain();
  v9 = (_QWORD *)sub_23F3E0220();
  v0[24] = v9;
  sub_23F3B121C(&qword_256E78638, (void (*)(uint64_t))type metadata accessor for PlanOverridesService.PlanOverridesRequest);
  sub_23F3B121C(&qword_256E78640, (void (*)(uint64_t))type metadata accessor for PlanOverridesService.PlanOverridesRequest);
  sub_23F3B121C(&qword_256E78648, (void (*)(uint64_t))type metadata accessor for PlanOverridesService.PlanOverridesResponse);
  sub_23F3B121C(&qword_256E78650, (void (*)(uint64_t))type metadata accessor for PlanOverridesService.PlanOverridesResponse);
  *v9 = v0;
  v9[1] = sub_23F4F4C74;
  return sub_23F617258();
}

uint64_t sub_23F4F4C74()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *(_QWORD *)(v3 + 128);
  sub_23F50746C(&v3);
  sub_23F362D18();
  sub_23F366748();
  sub_23F3D9608(v1, type metadata accessor for PlanOverridesService.PlanOverridesRequest);
  return sub_23F36664C();
}

uint64_t sub_23F4F4CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, unint64_t, uint64_t);
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 32);
  sub_23F35D2E8(&qword_256E747F8);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23F61E7E0;
  v7 = v6 + v5;
  v8 = sub_23F507600();
  sub_23F382EF8(v8, v9, &qword_256E702E0);
  sub_23F382EF8(v7, v1, &qword_256E702E0);
  sub_23F383004(v1, v2, &qword_256E702E0);
  v10 = sub_23F5074D4();
  if (sub_23F36195C(v10, v11, v4) == 1)
  {
    sub_23F3D9844(*(_QWORD *)(v0 + 72), &qword_256E702E0);
    v12 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 56);
    v15 = *(_QWORD *)(v0 + 32);
    v16 = *(void (**)(unint64_t, unint64_t, uint64_t))(*(_QWORD *)(v0 + 40) + 32);
    v16(v13, *(_QWORD *)(v0 + 72), v15);
    v16(v14, v13, v15);
    v12 = MEMORY[0x24BEE4AF8];
    if ((sub_23F3F5E54() & 1) == 0)
    {
      sub_23F3DDBE4();
      sub_23F377C90();
      v12 = v24;
    }
    v18 = *(_QWORD *)(v12 + 16);
    v17 = *(_QWORD *)(v12 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_23F3B1A80(v17);
      sub_23F377C90();
      v12 = v25;
    }
    v20 = *(_QWORD *)(v0 + 40);
    v19 = *(_QWORD *)(v0 + 48);
    v21 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v12 + 16) = v18 + 1;
    v16(v12+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v18, v19, v21);
  }
  v22 = *(_QWORD *)(v0 + 144);
  swift_setDeallocating();
  sub_23F513624();
  sub_23F3D9608(v22, type metadata accessor for PlanOverridesService.PlanOverridesResponse);
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
}

uint64_t PlanOverridesService.PlanOverridesRequest.init(transcript:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F428AE4();
  sub_23F44D47C();
  v0 = sub_23F3840BC();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

uint64_t sub_23F4F4F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4[2] = a1;
  v4[3] = a3;
  sub_23F35D2E8(&qword_256E702E0);
  v6 = swift_task_alloc();
  v4[4] = v6;
  v7 = sub_23F61B2E4();
  v4[5] = v7;
  v4[6] = *(_QWORD *)(v7 - 8);
  v4[7] = swift_task_alloc();
  v8 = (_QWORD *)swift_task_alloc();
  v4[8] = v8;
  *v8 = v4;
  v8[1] = sub_23F4F4FDC;
  return sub_23F4F5898(v6, a4);
}

uint64_t sub_23F4F4FDC()
{
  void *v0;
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_23F50746C(&v3);
  if (v0)

  return sub_23F36664C();
}

uint64_t sub_23F4F5040()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t (*v9)(void);

  v1 = v0[4];
  v2 = v0[5];
  v3 = sub_23F383740(v1, 1, v2);
  if (v4)
  {
    sub_23F507AC4(v3, &qword_256E702E0);
    v8 = 1;
  }
  else
  {
    v5 = v0[7];
    v6 = v0[2];
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[6] + 32);
    v7(v5, v1, v2);
    v7(v6, v5, v2);
    v8 = 0;
  }
  sub_23F36196C(v0[2], v8, 1, v0[5]);
  sub_23F362CC8();
  sub_23F3666DC();
  v9 = (uint64_t (*)(void))sub_23F384760();
  return v9();
}

uint64_t sub_23F4F50F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_23F3838D8(v3[4], a2, a3, v3[5]);
  sub_23F3D9844(v3[4], &qword_256E702E0);
  sub_23F3838D8(v3[2], v4, v5, v3[5]);
  sub_23F362CC8();
  sub_23F3666DC();
  v6 = (uint64_t (*)(void))sub_23F384760();
  return v6();
}

void PlanOverridesService.PlanOverridesResponse.init(event:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23F383004(a1, a2, &qword_256E702E0);
}

uint64_t PlanOverridesService.PlanOverridesRequest.transcript.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F428AE4();
  sub_23F44D47C();
  v0 = sub_23F3C85C0();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

void sub_23F4F5190()
{
  sub_23F4F54FC();
}

uint64_t sub_23F4F51A8()
{
  sub_23F504F78();
  return sub_23F61CDC0();
}

uint64_t sub_23F4F51D0()
{
  sub_23F504F78();
  return sub_23F61CDCC();
}

void PlanOverridesService.PlanOverridesRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  sub_23F35D2E8(&qword_256E78658);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35EA9C(a1, a1[3]);
  sub_23F504F78();
  sub_23F507700();
  sub_23F428AE4();
  sub_23F3B121C(&qword_256E74810, (void (*)(uint64_t))MEMORY[0x24BE56878]);
  sub_23F5076C4();
  sub_23F61CBE0();
  sub_23F362A28((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3F4040();
}

void PlanOverridesService.PlanOverridesRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F362C98();
  v5 = v4;
  v13 = v6;
  v15 = sub_23F428AE4();
  v12 = *(_QWORD *)(v15 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v14 = v8;
  v9 = sub_23F35D2E8(&qword_256E78668);
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3E2718();
  type metadata accessor for PlanOverridesService.PlanOverridesRequest(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3845CC();
  sub_23F35EA9C(v5, v5[3]);
  sub_23F504F78();
  sub_23F61CD84();
  if (!v0)
  {
    sub_23F3B121C(&qword_256E74820, (void (*)(uint64_t))MEMORY[0x24BE56878]);
    sub_23F61CB44();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v2, v14, v15);
    sub_23F36262C(v2, v13, type metadata accessor for PlanOverridesService.PlanOverridesRequest);
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v5);
  sub_23F362870();
}

void sub_23F4F5434()
{
  PlanOverridesService.PlanOverridesRequest.init(from:)();
}

void sub_23F4F5448(_QWORD *a1)
{
  PlanOverridesService.PlanOverridesRequest.encode(to:)(a1);
}

void PlanOverridesService.PlanOverridesResponse.event.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F382EF8(v1, a1, &qword_256E702E0);
}

uint64_t sub_23F4F5480(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x746E657665 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_23F4F54FC()
{
  sub_23F61CD30();
  sub_23F362AE0();
  sub_23F61CD60();
  sub_23F507EB4();
}

uint64_t sub_23F4F5530()
{
  return 0x746E657665;
}

void sub_23F4F5544()
{
  sub_23F61CD30();
  sub_23F362AE0();
  sub_23F61CD60();
  sub_23F507EB4();
}

uint64_t sub_23F4F5578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F4F5480(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F4F55A0()
{
  sub_23F504FB4();
  return sub_23F61CDC0();
}

uint64_t sub_23F4F55C8()
{
  sub_23F504FB4();
  return sub_23F61CDCC();
}

void PlanOverridesService.PlanOverridesResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  sub_23F35D2E8(&qword_256E78670);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35EA9C(a1, a1[3]);
  sub_23F504FB4();
  sub_23F507700();
  sub_23F50760C();
  sub_23F3B121C(&qword_256E74898, (void (*)(uint64_t))MEMORY[0x24BE56CD0]);
  sub_23F5076C4();
  sub_23F61CB98();
  sub_23F362A28((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3F4040();
}

void PlanOverridesService.PlanOverridesResponse.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F362C98();
  v5 = v4;
  v12 = v6;
  sub_23F35D2E8(&qword_256E702E0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v13 = v8;
  v9 = sub_23F35D2E8(&qword_256E78680);
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3845CC();
  type metadata accessor for PlanOverridesService.PlanOverridesResponse(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3B1F34();
  sub_23F35EA9C(v5, v5[3]);
  sub_23F504FB4();
  sub_23F61CD84();
  if (!v0)
  {
    sub_23F50760C();
    sub_23F3B121C(&qword_256E748B0, (void (*)(uint64_t))MEMORY[0x24BE56CD0]);
    sub_23F61CAFC();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v9);
    sub_23F383004(v13, v2, &qword_256E702E0);
    sub_23F36262C(v2, v12, type metadata accessor for PlanOverridesService.PlanOverridesResponse);
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v5);
  sub_23F362870();
}

void sub_23F4F5830()
{
  PlanOverridesService.PlanOverridesResponse.init(from:)();
}

void sub_23F4F5844(_QWORD *a1)
{
  PlanOverridesService.PlanOverridesResponse.encode(to:)(a1);
}

uint64_t sub_23F4F5858@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE54B80];
  sub_23F619F10();
  sub_23F44D47C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(a1, v2);
}

uint64_t sub_23F4F5898(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  sub_23F35D2E8(&qword_256E70238);
  v3[13] = sub_23F366578();
  v4 = sub_23F61B5D8();
  v3[14] = v4;
  v3[15] = *(_QWORD *)(v4 - 8);
  v3[16] = sub_23F4E6230();
  v3[17] = sub_23F3E0220();
  v5 = sub_23F618BB4();
  v3[18] = v5;
  v3[19] = *(_QWORD *)(v5 - 8);
  v3[20] = sub_23F366578();
  sub_23F35D2E8(&qword_256E702E0);
  v3[21] = sub_23F366578();
  v6 = sub_23F50760C();
  v3[22] = v6;
  v3[23] = *(_QWORD *)(v6 - 8);
  v3[24] = sub_23F366578();
  sub_23F35D2E8(&qword_256E70F08);
  v3[25] = sub_23F366578();
  v3[26] = type metadata accessor for AlphaToolRenderer();
  v3[27] = sub_23F366578();
  v3[28] = _s15AlphaComponentsVMa();
  v3[29] = sub_23F366578();
  sub_23F35D2E8(&qword_256E70A60);
  v3[30] = sub_23F366578();
  v7 = sub_23F38F984();
  v3[31] = v7;
  v3[32] = *(_QWORD *)(v7 - 8);
  v3[33] = sub_23F366578();
  v8 = sub_23F3B1728();
  v3[34] = v8;
  v3[35] = *(_QWORD *)(v8 - 8);
  v3[36] = sub_23F4E6230();
  v3[37] = sub_23F3E0220();
  v3[38] = sub_23F3E0220();
  v3[39] = sub_23F3E0220();
  v3[40] = sub_23F3E0220();
  v3[41] = sub_23F3E0220();
  v9 = sub_23F428AE4();
  v3[42] = v9;
  v3[43] = *(_QWORD *)(v9 - 8);
  v3[44] = sub_23F366578();
  sub_23F35D2E8(&qword_256E78690);
  v3[45] = sub_23F366578();
  v10 = sub_23F61ABB8();
  v3[46] = v10;
  v3[47] = *(_QWORD *)(v10 - 8);
  v3[48] = sub_23F4E6230();
  v3[49] = sub_23F3E0220();
  return sub_23F36664C();
}

void sub_23F4F5A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char v8;
  NSObject *v9;
  os_log_type_t v10;
  _WORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  int *v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  char *v51;
  __n128 v52;
  uint64_t v53;
  __n128 *v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  _WORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t);
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 360);
  v1 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 344);
  sub_23F61B128();
  v4 = sub_23F61B14C();
  v5 = *(void (**)(uint64_t))(v3 + 8);
  v6 = sub_23F3848F0();
  v5(v6);
  *(_QWORD *)(v0 + 40) = v4;
  v7 = sub_23F3B1CE4();
  sub_23F3B1B50(&qword_256E70F18);
  sub_23F3848F0();
  sub_23F61AD14();
  sub_23F38432C();
  sub_23F383740(v2, 1, v1);
  if (v8)
  {
    v9 = *(NSObject **)(v0 + 296);
    sub_23F3D9844(*(_QWORD *)(v0 + 360), &qword_256E78690);
    sub_23F50712C();
    sub_23F619E8C();
    v10 = sub_23F3F0EEC();
    if (sub_23F3F0E3C(v10))
    {
      v11 = (_WORD *)sub_23F366668();
      sub_23F3F0EF4(v11);
      sub_23F3E2784(&dword_23F35A000, v9, (os_log_type_t)v1, "Could not find Tool Retrieval response in the Transcript");
      sub_23F366530();
    }
    v12 = *(_QWORD *)(v0 + 296);
    v13 = *(_QWORD *)(v0 + 280);
    v14 = *(_QWORD *)(v0 + 176);

    sub_23F383E64(v12, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    sub_23F3837C8();
    v18 = v14;
  }
  else
  {
    v107 = v7;
    v19 = *(NSObject **)(v0 + 384);
    v20 = *(_QWORD *)(v0 + 392);
    v21 = *(_QWORD *)(v0 + 376);
    sub_23F362D94(v20, *(_QWORD *)(v0 + 360), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 32));
    sub_23F507714();
    sub_23F362D94((uint64_t)v19, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16));
    sub_23F4064C8();
    v22 = sub_23F3B1BD4();
    v23 = sub_23F507B64(v19);
    v24 = *(_QWORD *)(v0 + 328);
    v25 = *(_QWORD *)(v0 + 272);
    v26 = *(_QWORD *)(v0 + 280);
    v108 = v5;
    if (v23)
    {
      v103 = *(_QWORD *)(v0 + 376);
      v27 = (uint8_t *)sub_23F366668();
      sub_23F366668();
      *(_DWORD *)v27 = 136315138;
      v28 = sub_23F61ABA0();
      v29 = sub_23F618C20();
      MEMORY[0x24266F8F8](v28, v29);
      sub_23F3837B0();
      sub_23F5074AC();
      *(_QWORD *)(v0 + 72) = v30;
      sub_23F435C14();
      sub_23F362D08();
      sub_23F507D7C(v103);
      sub_23F38485C(&dword_23F35A000, v19, v22, "Tools coming into overrides are: \"%s\"", v27);
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F507D7C(*(_QWORD *)(v0 + 376));

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    v31 = *(_QWORD *)(v0 + 240);
    v32 = *(_QWORD *)(v0 + 248);
    sub_23F3B1450();
    v33 = sub_23F482A1C();
    sub_23F382EF8(v33, v34, v35);
    sub_23F383740(v31, 1, v32);
    if (v8)
    {
      sub_23F507B14();
      sub_23F507B6C(v36, &qword_256E70A60);
      sub_23F504FF0();
      swift_allocError();
      *v37 = xmmword_23F620FD0;
      swift_willThrow();
      v38 = sub_23F3840BC();
      ((void (*)(uint64_t))(v0 + 72))(v38);
      sub_23F362CC8();
      sub_23F3666A0();
      sub_23F3666D4();
      sub_23F366708();
      sub_23F383980();
      sub_23F3667E0();
      sub_23F383898();
      sub_23F383978();
      sub_23F383970();
      sub_23F383890();
      sub_23F383888();
      sub_23F3666EC();
      sub_23F383880();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      goto LABEL_33;
    }
    v110 = v0 + 48;
    v39 = *(_QWORD *)(v0 + 352);
    v41 = *(_QWORD *)(v0 + 256);
    v40 = *(_QWORD *)(v0 + 264);
    v43 = *(int **)(v0 + 224);
    v42 = *(_QWORD **)(v0 + 232);
    v104 = *(_QWORD *)(v0 + 336);
    v105 = *(_QWORD *)(v0 + 200);
    sub_23F362D94(v40, *(_QWORD *)(v0 + 240), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 32));
    sub_23F362D94((uint64_t)v42 + v43[5], v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 16));
    v44 = *(void (**)(uint64_t))(*(_QWORD *)(sub_23F507C84() - 8) + 16);
    v45 = sub_23F507E20();
    v44(v45);
    v46 = (uint64_t)v42 + v43[7];
    v47 = sub_23F61B104();
    sub_23F3838D8(v46, v48, v49, v47);
    *(double *)&v50 = sub_23F3CDAA8(v43[8]);
    v51 = (char *)v42 + v43[9];
    *((_QWORD *)v51 + 4) = 0;
    *(_OWORD *)v51 = v50;
    *((_OWORD *)v51 + 1) = v50;
    v51[40] = -1;
    bzero((char *)v42 + v43[10], 0xC8uLL);
    bzero((char *)v42 + v43[11], 0x168uLL);
    v52.n128_f64[0] = sub_23F3CDAA8(v43[12]);
    *(_BYTE *)(v53 + 40) = -1;
    v54 = (__n128 *)((char *)v42 + v43[13]);
    v54[2].n128_u64[0] = 0;
    *v54 = v52;
    v54[1] = v52;
    sub_23F507324(v43[14], v52);
    sub_23F507324(v43[15], v55);
    sub_23F507324(v43[16], v56);
    sub_23F507324(v43[17], v57);
    *v42 = 0x6168706C41;
    v42[1] = 0xE500000000000000;
    v58 = sub_23F507B94();
    v44(v58);
    sub_23F38D448();
    sub_23F507CEC();
    v59 = sub_23F3B8498();
    ((void (*)(uint64_t, uint64_t))v5)(v39, v104);
    sub_23F507CEC();
    v60 = sub_23F61B14C();
    ((void (*)(uint64_t, uint64_t))v5)(v39, v104);
    *(_QWORD *)(v0 + 48) = v60;
    sub_23F61AD08();
    sub_23F362D18();
    v61 = sub_23F61AAD4();
    v62 = sub_23F36195C(v105, 1, v61);
    v63 = *(_QWORD *)(v0 + 200);
    if ((_DWORD)v62 == 1)
    {
      sub_23F441494(v62, &qword_256E70F08);
      v64 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v64 = MEMORY[0x24266DFD8]();
      sub_23F383E88(v63, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8));
    }
    v65 = *(_QWORD *)(v59 + 16);
    if (v65)
    {
      v106 = v64;
      v66 = *(_QWORD *)(v0 + 152);
      v67 = *(_QWORD *)(v0 + 120);
      sub_23F383EB8();
      v69 = v59 + v68;
      v108 = *(void (**)(uint64_t))(v66 + 16);
      v110 = *(_QWORD *)(v66 + 72);
      v107 = v59;
      sub_23F383E5C();
      v70 = MEMORY[0x24BEE4AF8];
      do
      {
        v71 = *(_QWORD *)(v0 + 160);
        v39 = *(_QWORD *)(v0 + 104);
        v72 = *(_QWORD *)(v0 + 112);
        v73 = sub_23F3840BC();
        v108(v73);
        sub_23F618B9C();
        sub_23F383CA8(v71, *(uint64_t (**)(uint64_t, uint64_t))(v66 + 8));
        sub_23F383740(v39, 1, v72);
        if (v8)
        {
          sub_23F3D9844(*(_QWORD *)(v0 + 104), &qword_256E70238);
        }
        else
        {
          v75 = *(_QWORD *)(v0 + 128);
          v74 = *(_QWORD *)(v0 + 136);
          v76 = *(_QWORD *)(v0 + 112);
          v39 = *(_QWORD *)(v67 + 32);
          ((void (*)(uint64_t, _QWORD, uint64_t))v39)(v74, *(_QWORD *)(v0 + 104), v76);
          ((void (*)(uint64_t, uint64_t, uint64_t))v39)(v75, v74, v76);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_23F3DDBE4();
            sub_23F37796C();
            v70 = v81;
          }
          v79 = *(_QWORD *)(v70 + 16);
          v78 = *(_QWORD *)(v70 + 24);
          if (v79 >= v78 >> 1)
          {
            sub_23F3B1A80(v78);
            sub_23F37796C();
            v70 = v82;
          }
          *(_QWORD *)(v70 + 16) = v79 + 1;
          sub_23F383EB8();
          ((void (*)(unint64_t))v39)(v70 + v80 + *(_QWORD *)(v67 + 72) * v79);
        }
        v69 += v110;
        --v65;
      }
      while (v65);
      sub_23F384A80();
      v64 = v106;
    }
    else
    {
      sub_23F3837B0();
      v70 = MEMORY[0x24BEE4AF8];
    }
    sub_23F4F7AD4();
    v83 = *(_QWORD *)(v0 + 168);
    v84 = *(_QWORD *)(v0 + 176);
    sub_23F384364();
    sub_23F38432C();
    sub_23F383740(v83, 1, v84);
    if (v8)
    {
      v85 = *(NSObject **)(v0 + 304);
      sub_23F3D9844(*(_QWORD *)(v0 + 168), &qword_256E702E0);
      sub_23F50712C();
      sub_23F619E8C();
      v86 = sub_23F3B1A04();
      if (sub_23F3F0E3C(v86))
      {
        v87 = (_WORD *)sub_23F366668();
        sub_23F3F0EF4(v87);
        sub_23F3E2784(&dword_23F35A000, v85, (os_log_type_t)v83, "PlanOverridesGraphService: No matched plan overrides found");
        sub_23F366530();
      }
      sub_23F507A00();
      v88 = *(_QWORD *)(v0 + 304);
      v89 = *(_QWORD *)(v0 + 280);
      v90 = *(_QWORD *)(v0 + 256);
      v91 = *(_QWORD *)(v0 + 264);
      sub_23F507748();

      sub_23F383D74(v88, *(uint64_t (**)(uint64_t, uint64_t))(v89 + 8));
      sub_23F3D9608(v39, (uint64_t (*)(_QWORD))type metadata accessor for AlphaToolRenderer);
      sub_23F507DE8(v92, (uint64_t (*)(_QWORD))_s15AlphaComponentsVMa);
      sub_23F3D98EC(v91, *(uint64_t (**)(uint64_t, uint64_t))(v90 + 8));
      (*(void (**)(uint64_t, void (*)(uint64_t)))(v107 + 8))(v110, v108);
      sub_23F3837C8();
      v18 = v0 + 40;
    }
    else
    {
      v94 = *(_QWORD *)(v0 + 192);
      v95 = *(_QWORD *)(v0 + 168);
      v96 = *(_QWORD *)(v0 + 176);
      v97 = *(_QWORD *)(v0 + 96);
      v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 32);
      *(_QWORD *)(v0 + 400) = v98;
      v98(v94, v95, v96);
      v99 = *(_QWORD *)(v97 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_delayDuration);
      if (v99 >= 1)
      {
        v100 = *(_QWORD *)(*(_QWORD *)(v0 + 96)
                         + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_delayDurationVariation);
        v101 = -v100;
        if (__OFSUB__(0, v100))
        {
          __break(1u);
        }
        else if (v100 >= v101)
        {
          if (v100 != v101)
            sub_23F50502C(2 * v100);
LABEL_42:
          __break(1u);
          JUMPOUT(0x23F4F66B4);
        }
        __break(1u);
        goto LABEL_42;
      }
      v109 = *(_QWORD *)(v0 + 392);
      v111 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 400);
      v102 = sub_23F507448();
      sub_23F3D9608(v102, (uint64_t (*)(_QWORD))type metadata accessor for AlphaToolRenderer);
      sub_23F3D9608(0, (uint64_t (*)(_QWORD))_s15AlphaComponentsVMa);
      sub_23F383CA8(0, *(uint64_t (**)(uint64_t, uint64_t))(v99 + 8));
      sub_23F383E88(v109, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
      v111(v0 + 64, v64, v70);
      v15 = v0 + 64;
      v16 = 0;
      v17 = 1;
      v18 = v70;
    }
  }
  sub_23F36196C(v15, v16, v17, v18);
  sub_23F507564();
  sub_23F507B14();
  swift_task_dealloc();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F384760();
LABEL_33:
  sub_23F366810();
  __asm { BR              X0 }
}

uint64_t sub_23F4F6714()
{
  void *v0;
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_23F50746C(&v3);
  if (v0)

  return sub_23F36664C();
}

uint64_t sub_23F4F6778()
{
  os_log_type_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v7 = v1[39];
  sub_23F50712C();
  sub_23F619E8C();
  v8 = sub_23F507D60();
  if (sub_23F3F0E3C(v8))
  {
    v9 = (_WORD *)sub_23F366668();
    sub_23F3F0EF4(v9);
    sub_23F3E2784(&dword_23F35A000, v7, v0, "PlanOverridesGraphService: artificial delay is done; returning the overriden plan");
    sub_23F366530();
  }
  v10 = (void (*)(uint64_t))v1[51];
  v11 = v1[34];

  v12 = sub_23F384AB4();
  v10(v12);
  v16 = v1[49];
  v17 = (void (*)(uint64_t, uint64_t, uint64_t))v1[50];
  v13 = sub_23F507448();
  sub_23F3D9608(v13, (uint64_t (*)(_QWORD))type metadata accessor for AlphaToolRenderer);
  sub_23F3D9608(v2, (uint64_t (*)(_QWORD))_s15AlphaComponentsVMa);
  sub_23F383CA8(v11, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  sub_23F383E88(v16, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v17(v5, v3, v4);
  sub_23F507358(v5, 0);
  sub_23F507564();
  swift_task_dealloc();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  v14 = (uint64_t (*)(void))sub_23F384760();
  return v14();
}

void sub_23F4F6924()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];

  static Session.Transcript.userQuery(event:)();
  if (v0)
  {
    sub_23F4F3B60(v6);
    v1 = (void *)v6[0];
    if (v6[0])
    {
      v3 = (void *)v6[1];
      v2 = (void *)v6[2];
      sub_23F384AB4();
      v4 = sub_23F508200();
      sub_23F362D08();
      sub_23F504E34(v1, v3, v2);
      if (*(_QWORD *)(v4 + 16) >= 2uLL)
      {
        v6[0] = v4;
        if (qword_256E6F088 != -1)
          swift_once();
        v5 = sub_23F3B1CE4();
        sub_23F361498(v5, (uint64_t)qword_256E78068);
        sub_23F35D2E8(&qword_256E780D0);
        sub_23F3B0CC8(&qword_256E78AF8, &qword_256E780D0);
        sub_23F3B1B50(&qword_256E78B00);
        sub_23F61C358();
        sub_23F362D18();
      }
    }
    else
    {
      sub_23F362D08();
    }
  }
  sub_23F507EB4();
}

uint64_t sub_23F4F6A78(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  objc_class *v53;
  NSObject *v54;
  void *v55;
  id v56;
  char isEscapingClosureAtFileLocation;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  os_log_type_t v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  int v81;
  NSObject *v82;
  os_log_type_t v83;
  _WORD *v84;
  int v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  unint64_t v97;
  char v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  Class isa;
  BOOL v107;
  objc_class *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t result;
  uint64_t v112;
  os_log_type_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(uint64_t, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  NSObject *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  NSObject *v159;
  uint64_t v160;
  uint64_t v161[6];
  _QWORD v162[24];
  _BYTE v163[192];
  _BYTE v164[192];
  _QWORD v165[11];
  uint64_t v166;
  void *v167;
  void *v168;
  void *v169;
  uint64_t v170;

  v146 = a3;
  v124 = a2;
  sub_23F384040();
  sub_23F507D68();
  v150 = v6;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v126 = v8;
  v9 = sub_23F3B1728();
  v127 = *(_QWORD *)(v9 - 8);
  v128 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3834D0();
  v123 = v11;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F383780();
  v145 = v13;
  v14 = sub_23F61A504();
  v143 = *(_QWORD *)(v14 - 8);
  v144 = v14;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  v142 = (char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F50784C();
  v140 = *(_QWORD *)(v17 - 8);
  v141 = v17;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F3834D0();
  v135 = v19;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F383780();
  v139 = v21;
  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F36285C();
  v134 = v23;
  v149 = sub_23F3846E4();
  v138 = *(_QWORD *)(v149 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v24);
  v125 = (uint64_t)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F383780();
  v154 = v27;
  v28 = type metadata accessor for PlanOverridesService.EventReference(0);
  v131 = *(_QWORD *)(v28 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F3834D0();
  v136 = v30;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F383780();
  v159 = v32;
  v33 = sub_23F50760C();
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F3834D0();
  v122 = v35;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v121 - v37;
  v39 = a1[1];
  v157 = *a1;
  v137 = v28;
  v155 = sub_23F61BFEC();
  v170 = sub_23F61BFEC();
  v40 = v124;
  v41 = *(_QWORD *)(v124 + 16);
  if (!v41)
    return v155;
  v133 = v3;
  v42 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v43 = *(_QWORD *)(v4 + 72);
  v147 = v4;
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v45 = v124 + v42 + (v41 - 1) * v43;
  v158 = v39;
  v46 = v41;
  sub_23F617BA0();
  sub_23F383E5C();
  v156 = v38;
  v148 = v33;
  v132 = v44;
  v44((uint64_t)v38, v45, v33);
  sub_23F4F3B60(&v167);
  v47 = v167;
  if (!v167)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    v54 = v155;
    (*(void (**)(char *, uint64_t))(v147 + 8))(v156, v148);
LABEL_30:
    swift_bridgeObjectRelease();
    return (uint64_t)v54;
  }
  v48 = v40 + v42 + v43 * (v46 - 2);
  HIDWORD(v130) = *MEMORY[0x24BE56B98];
  v129 = -v43;
  v152 = v46;
  v153 = v169;
  v49 = v168;
  v50 = v158;
  v51 = v157;
  while (1)
  {
    v151 = v48;
    sub_23F5069E0(v163);
    sub_23F507C54((uint64_t)v163, (uint64_t)v162);
    sub_23F61C184();
    v52 = (void *)sub_23F61C0E8();
    sub_23F384120();
    v53 = (objc_class *)sub_23F36682C();
    *((_QWORD *)v53 + 2) = v162;
    *((_QWORD *)v53 + 3) = v51;
    v157 = v51;
    *((_QWORD *)v53 + 4) = v50;
    v54 = sub_23F36682C();
    v54[2].isa = (Class)sub_23F506A0C;
    v54[3].isa = v53;
    v161[4] = (uint64_t)sub_23F506A1C;
    v161[5] = (uint64_t)v54;
    v161[0] = MEMORY[0x24BDAC760];
    v161[1] = 1107296256;
    v161[2] = (uint64_t)sub_23F504D70;
    v161[3] = (uint64_t)&unk_250FDA200;
    v55 = _Block_copy(v161);
    v158 = v50;
    sub_23F362CDC();
    swift_retain();
    swift_release();
    v56 = v153;
    objc_msgSend(v153, sel_lookupKey_resultBlock_, v52, v55);

    _Block_release(v55);
    sub_23F507E58();
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    sub_23F3D9AF4();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    sub_23F507C54((uint64_t)v162, (uint64_t)v164);
    swift_release();
    sub_23F504E34(v47, v49, v56);
    sub_23F507C54((uint64_t)v164, (uint64_t)v165);
    if (sub_23F44CD78((uint64_t)v165) == 1)
      goto LABEL_29;
    sub_23F3C887C(v162, v165);
    v58 = (uint64_t)v156;
    sub_23F4F9C14((uint64_t)v156, (uint64_t)v162, v146, (uint64_t)&v170, v59, v60, v61, v62, v121, v122, v123, v124, v125, v126, v127, v128, v129, v130, v131,
      (uint64_t)v132);
    if ((v63 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23F4F2978();
      v112 = v122;
      v132(v122, v58, v148);
      sub_23F383004((uint64_t)v164, (uint64_t)v162, &qword_256E78AE8);
      sub_23F4EF7DC(v162);
      sub_23F4F2950();
      v113 = sub_23F507BA0();
      if (sub_23F507304(v54))
      {
        v114 = sub_23F366668();
        v159 = sub_23F366668();
        v161[0] = (uint64_t)v159;
        *(_DWORD *)v114 = 136315394;
        sub_23F3B121C(&qword_256E74B50, (void (*)(uint64_t))MEMORY[0x24BE56CD0]);
        v115 = sub_23F507D0C();
        sub_23F37AE00(v115, v116, v161);
        v160 = v117;
        sub_23F61C790();
        sub_23F362984();
        sub_23F507D14(v112);
        *(_WORD *)(v114 + 12) = 2080;
        v118 = v165[0];
        v119 = v165[1];
        sub_23F384A00();
        sub_23F37AE00(v118, v119, v161);
        v160 = v120;
        sub_23F61C790();
        sub_23F38458C();
        sub_23F50762C();
        sub_23F50762C();
        sub_23F3E025C(&dword_23F35A000, v54, v113, "Transcript event fails to match previous statement. This shouldn't happen. Transcript event %s. Stored statement id: %s", (uint8_t *)v114);
        sub_23F507364();
        sub_23F366530();
      }

      sub_23F50762C();
      sub_23F50762C();
      sub_23F5075F8(v112);
      sub_23F507C20(v127);
      sub_23F5075F8(v58);
      return v155;
    }
    sub_23F61B260();
    sub_23F61B2CC();
    v64 = sub_23F61B284();
    v66 = v140;
    v65 = v141;
    v67 = *(void (**)(uint64_t))(v140 + 8);
    v68 = sub_23F3ECB9C();
    v67(v68);
    if (*(_QWORD *)(v64 + 16))
    {
      sub_23F383EB8();
      v72 = v133;
      v71 = v134;
      sub_23F4244A8(v134, v64 + v69, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 16));
      v73 = 0;
    }
    else
    {
      v73 = 1;
      v72 = v133;
      v71 = v134;
    }
    v74 = v135;
    sub_23F507358(v71, v73);
    sub_23F362984();
    sub_23F383740(v71, 1, v72);
    if (v75)
    {
      sub_23F3D9844(v71, &qword_256E6FFA0);
      v76 = 1;
    }
    else
    {
      v76 = sub_23F617CFC();
      sub_23F3D98EC(v71, *(uint64_t (**)(uint64_t, uint64_t))(v150 + 8));
    }
    v77 = (uint64_t)v159;
    v153 = *(id *)(v138 + 32);
    ((void (*)(NSObject *, uint64_t, uint64_t))v153)(v159, v154, v149);
    v78 = *(int *)(v137 + 20);
    *(_DWORD *)(v77 + v78) = v76;
    sub_23F61B2CC();
    v79 = sub_23F507788();
    v81 = v80(v79);
    if (v81 == HIDWORD(v130))
    {
      sub_23F383CA8(v74, *(uint64_t (**)(uint64_t, uint64_t))(v66 + 96));
      (*(void (**)(char *, uint64_t, uint64_t))(v143 + 32))(v142, v74, v144);
      v82 = v145;
      sub_23F50712C();
      sub_23F619E8C();
      v83 = sub_23F3B1A04();
      if (sub_23F366874(v83))
      {
        v84 = (_WORD *)sub_23F366668();
        sub_23F3F0EF4(v84);
        sub_23F3E2784(&dword_23F35A000, v82, v65, "Transcript event is a statementEvaluated event; we are going to use .originProgramStatementId instead");
        sub_23F366530();
      }

      (*(void (**)(NSObject *, uint64_t))(v127 + 8))(v145, v128);
      sub_23F61B260();
      sub_23F61A480();
      v85 = sub_23F617CFC();
      v86 = sub_23F3B2118();
      sub_23F3D98EC(v86, v87);
      sub_23F40B4F8(v143);
      v54 = v159;
      sub_23F3D9608((uint64_t)v159, type metadata accessor for PlanOverridesService.EventReference);
      v88 = sub_23F507E20();
      ((void (*)(uint64_t))v153)(v88);
      *(_DWORD *)((char *)&v54->isa + v78) = v85;
      v89 = v136;
    }
    else
    {
      v90 = sub_23F507788();
      v67(v90);
      v89 = v136;
      v54 = v159;
    }
    v91 = sub_23F61C184();
    v93 = v92;
    sub_23F362984();
    sub_23F362600((uint64_t)v54, v89, type metadata accessor for PlanOverridesService.EventReference);
    v94 = v155;
    sub_23F3B1CDC();
    v162[0] = v94;
    v95 = sub_23F507C14();
    if (__OFADD__(*(_QWORD *)(v94 + 16), (v96 & 1) == 0))
      goto LABEL_38;
    v97 = v95;
    v98 = v96;
    sub_23F35D2E8(&qword_256E78AF0);
    if ((sub_23F61CA18() & 1) != 0)
    {
      v99 = sub_23F507C14();
      if ((v98 & 1) != (v100 & 1))
        goto LABEL_41;
      v97 = v99;
    }
    v54 = v162[0];
    if ((v98 & 1) != 0)
    {
      v101 = sub_23F507B3C();
      sub_23F506BB8(v101, v102);
      goto LABEL_26;
    }
    *(_QWORD *)(v162[0] + 8 * (v97 >> 6) + 64) |= 1 << v97;
    v103 = (uint64_t *)((char *)v54[6].isa + 16 * v97);
    *v103 = v91;
    v103[1] = v93;
    v104 = sub_23F507B3C();
    sub_23F4DCD78(v104, v105);
    isa = v54[2].isa;
    v107 = __OFADD__(isa, 1);
    v108 = (Class)((char *)isa + 1);
    if (v107)
      break;
    v54[2].isa = v108;
    sub_23F362CDC();
LABEL_26:
    swift_bridgeObjectRelease();
    sub_23F362C60();
    sub_23F3D9608((uint64_t)v159, type metadata accessor for PlanOverridesService.EventReference);
    v109 = (uint64_t)v156;
    sub_23F383F80((uint64_t)v156, *(uint64_t (**)(uint64_t, uint64_t))(v147 + 8));
    v50 = v166;
    if (!v166)
    {
      sub_23F50762C();
      goto LABEL_30;
    }
    v51 = v165[10];
    sub_23F362CDC();
    sub_23F50762C();
    if (v152 == 1)
      goto LABEL_39;
    --v152;
    v155 = (uint64_t)v54;
    v110 = v151 + v129;
    ((void (*)(uint64_t))v132)(v109);
    sub_23F4F3B60(&v167);
    v47 = v167;
    v49 = v168;
    v48 = v110;
    v153 = v169;
    if (!v167)
      goto LABEL_29;
  }
  __break(1u);
LABEL_41:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

void sub_23F4F755C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t);
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;

  sub_23F362ABC();
  v6 = v5;
  sub_23F618134();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v22 = *(_QWORD *)(sub_23F61ACA8() - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  sub_23F50784C();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3B1C68();
  sub_23F61B2E4();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3D9CCC();
  v11 = sub_23F61A504();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3E2718();
  if (*(_QWORD *)(v6 + 16) < 2uLL)
    goto LABEL_6;
  sub_23F3668F4();
  sub_23F4F3480();
  if (*(_QWORD *)(v13 + 16) >= 2uLL)
  {
    sub_23F383EB8();
    sub_23F507278(v0, v14 + *(_QWORD *)(v2 + 72) + v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    sub_23F362D18();
    sub_23F61B2CC();
    sub_23F38456C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v16 = sub_23F3ECB90();
    if (v17(v16) == *MEMORY[0x24BE56B98])
    {
      sub_23F383D74(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
      sub_23F4244A8(v4, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32));
      sub_23F61A4F8();
      sub_23F61AC78();
      sub_23F3C3DC8(v22);
      sub_23F3D98EC(v4, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
      v18 = sub_23F507834();
      v19(v18);
      v20 = sub_23F507834();
      v21(v20);
    }
    else
    {
      sub_23F383D74(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    }
LABEL_6:
    sub_23F362948();
    return;
  }
  __break(1u);
}

void sub_23F4F7780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, _QWORD);
  uint64_t v33;
  uint64_t (*v34)(uint64_t, _QWORD);
  char v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  __int128 v41;
  uint64_t v42;
  char *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[240];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_23F362ABC();
  v49 = v1;
  v50 = v2;
  v4 = v3;
  v6 = v5;
  v7 = sub_23F3B1728();
  sub_23F383E7C(v7, (uint64_t)&v48);
  v46 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F5072DC();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v40 - v11;
  sub_23F4F6924();
  v15 = v13;
  v16 = *(_QWORD *)(v13 + 16);
  if (v16)
  {
    v43 = v12;
    v17 = v16 - 1;
    v18 = 32;
    *(_QWORD *)&v14 = 136315138;
    v41 = v14;
    v40[1] = MEMORY[0x24BEE4AD8] + 8;
    v44 = v4;
    v42 = v0;
    v45 = v13;
    while (1)
    {
      sub_23F3C887C(v47, (const void *)(v15 + v18));
      if ((v4 & 1) != 0)
      {
        v19 = v47[184];
        sub_23F4F27C4();
        if ((v19 & 1) == 0)
        {
          sub_23F5073A8();
          sub_23F4F27C4();
          sub_23F3B1D6C();
          v20 = v0;
          v21 = sub_23F3B1A04();
          if (sub_23F507B64(v19))
          {
            v22 = sub_23F366668();
            v23 = sub_23F366668();
            sub_23F5073C8(v23);
            sub_23F507A18();
            *(_QWORD *)(v22 + 4) = v24;
            sub_23F38458C();
            sub_23F4F2508();
            sub_23F4F2508();
            sub_23F38485C(&dword_23F35A000, v19, v21, "The penultimateEventIsPrompting, and applyToPromptScenarios is false, so skipping override: %s", (uint8_t *)v22);
            sub_23F5077CC();
            sub_23F366530();
          }
          sub_23F4F2508();
          sub_23F4F2508();

          v31 = sub_23F5074FC();
          sub_23F3841CC(v31, v32);
          v0 = v20;
          v15 = v45;
          if (!v17)
            goto LABEL_20;
          goto LABEL_19;
        }
        sub_23F507C90();
        sub_23F6190AC();
        sub_23F4F27C4();
        sub_23F507D88();
        v27 = sub_23F3B1A04();
        if (sub_23F507B64(v19))
        {
          v28 = sub_23F366668();
          v29 = sub_23F366668();
          sub_23F5073C8(v29);
          sub_23F507A18();
          *(_QWORD *)(v28 + 4) = v30;
          sub_23F38458C();
          sub_23F4F2508();
          sub_23F38485C(&dword_23F35A000, v19, v27, "The penultimateEventIsPrompting, however applyToPromptScenarios is true, so evaluating override: %s", (uint8_t *)v28);
          sub_23F3B17D4();
          sub_23F366530();
        }
        sub_23F4F2508();

        v33 = sub_23F3B2118();
        sub_23F3841CC(v33, v34);
        v25 = *v6;
        v35 = sub_23F3B1CDC();
        v0 = v42;
        if ((v35 & 1) == 0)
        {
          sub_23F507614();
          v25 = v39;
        }
        v15 = v45;
      }
      else
      {
        v25 = *v6;
        sub_23F4F27C4();
        if ((sub_23F3B1CDC() & 1) == 0)
        {
          sub_23F507614();
          v25 = v26;
        }
      }
      v37 = *(_QWORD *)(v25 + 16);
      v36 = *(_QWORD *)(v25 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_23F3B1A80(v36);
        sub_23F377D54();
        v25 = v38;
      }
      *(_QWORD *)(v25 + 16) = v37 + 1;
      sub_23F3C887C((void *)(v25 + 192 * v37 + 32), v47);
      *v6 = v25;
      if (!v17)
      {
LABEL_20:
        sub_23F38432C();
        sub_23F362948();
        return;
      }
LABEL_19:
      --v17;
      v18 += 192;
    }
  }
  swift_bridgeObjectRelease();
}

void sub_23F4F7AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(_QWORD, _QWORD, _QWORD);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  void (*v95)(_QWORD, _QWORD, _QWORD);
  uint64_t v96;
  void (*v97)(_QWORD, _QWORD, _QWORD);
  void (*v98)(uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t isEscapingClosureAtFileLocation;
  unint64_t v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint8_t *v118;
  uint64_t v119;
  uint64_t (*v120)(uint64_t, _QWORD);
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  NSObject *v128;
  NSObject *v129;
  os_log_type_t v130;
  BOOL v131;
  uint64_t v132;
  uint64_t v133;
  uint8_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (**v141)(uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  void *v157;
  _QWORD *v158;
  uint64_t v159;
  void *v160;
  int v161;
  uint64_t v162;
  os_log_type_t v163;
  uint8_t *v164;
  uint64_t v165;
  void *v166;
  NSObject *v167;
  os_log_type_t v168;
  const char *v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint8_t *v175;
  NSObject *v176;
  uint64_t v177;
  __int128 v178;
  Class isa;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  NSObject *v185;
  os_log_type_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t *v192;
  uint64_t v193;
  uint64_t v194;
  uint8_t *v195;
  uint64_t v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  objc_class **v212;
  NSObject *v213;
  objc_class *v214;
  unint64_t v215;
  unint64_t v216;
  Class v217;
  NSObject *v218;
  NSObject *v219;
  char v220;
  uint64_t v221;
  os_log_type_t v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void *v230;
  uint64_t v231;
  uint64_t v232;
  void *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char v239;
  char v240;
  NSObject *v241;
  void *v242;
  void *v243;
  uint64_t v244;
  os_log_type_t v245;
  uint8_t *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  NSObject *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint8_t *v265;
  uint64_t v266;
  uint64_t v267;
  void (*v268)(uint64_t);
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t (*v275)(uint64_t, uint64_t);
  char v277;
  uint64_t v278;
  os_log_type_t v279;
  _BOOL4 v280;
  uint64_t v281;
  _WORD *v282;
  uint64_t v283;
  __int128 v284;
  uint64_t v285;
  os_log_type_t v286;
  uint8_t *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  void *v292;
  NSObject *v293;
  os_log_type_t v294;
  const char *v295;
  uint64_t v296;
  os_log_type_t v297;
  _BOOL4 v298;
  uint64_t v299;
  _WORD *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  NSObject *v321;
  NSObject *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t *v330;
  __int128 v331;
  __int128 v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  void (*v344)(uint64_t, uint64_t);
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t (**v348)(uint64_t, uint64_t);
  uint64_t v349;
  uint64_t v350;
  NSObject *v351;
  NSObject *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint8_t *v360;
  uint8_t *v361;
  uint64_t v362;
  uint64_t v363;
  void (*v364)(_QWORD, _QWORD, _QWORD);
  _QWORD *v365;
  uint8_t *v366;
  _QWORD v367[6];
  _BYTE v368[192];
  _BYTE v369[192];
  void *v370;
  _QWORD v371[5];
  uint64_t v372;
  uint64_t v373[24];
  uint64_t v374[24];
  __int128 v375;
  __int128 v376;
  uint64_t v377;
  __int128 v378;
  uint64_t v379;
  uint64_t (*v380)(_QWORD *);
  uint64_t v381;

  sub_23F362C98();
  v353 = v1;
  v362 = v0;
  v343 = v5;
  v7 = v6;
  v336 = v8;
  sub_23F35D2E8(&qword_256E701C8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  v338 = (uint64_t)&v319 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v11 = sub_23F6170B4();
  v328 = *(_QWORD *)(v11 - 8);
  v329 = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v327 = v13;
  sub_23F35D2E8(&qword_256E71D18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  v326 = v15;
  sub_23F39C56C();
  v16 = (uint8_t *)sub_23F6170CC();
  v360 = (uint8_t *)*((_QWORD *)v16 - 1);
  v361 = v16;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F3834D0();
  v324 = v18;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3838E4();
  v341 = v20;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F383780();
  v359 = v22;
  sub_23F35D2E8(&qword_256E70A60);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3834D0();
  v334 = v24;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F3838E4();
  v354 = v26;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F383780();
  v363 = v28;
  sub_23F35D2E8(&qword_256E70878);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F36285C();
  v330 = (uint64_t *)v30;
  sub_23F39C56C();
  *(_QWORD *)&v332 = sub_23F61B1E8();
  v325 = *(_QWORD *)(v332 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F36285C();
  v333 = v32;
  sub_23F39C56C();
  v356 = sub_23F619E98();
  v352 = *(NSObject **)(v356 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v33);
  v323 = (uint64_t)&v319 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3838E4();
  v319 = v36;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3838E4();
  v337 = v38;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F3838E4();
  v342 = v40;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F3838E4();
  v335 = v42;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F3838E4();
  v347 = v44;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F3838E4();
  v320 = v46;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F3838E4();
  v351 = v48;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F3838E4();
  v322 = v50;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F383780();
  v321 = v52;
  sub_23F39C56C();
  v350 = sub_23F61B2C0();
  v348 = *(uint64_t (***)(uint64_t, uint64_t))(v350 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F36285C();
  v339 = v54;
  sub_23F35D2E8(&qword_256E702E0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F3834D0();
  v365 = v56;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v57);
  v59 = (char *)&v319 - v58;
  v60 = sub_23F428AE4();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F3834D0();
  v340 = v62;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F3838E4();
  *(_QWORD *)&v331 = v64;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F3838E4();
  v364 = v66;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F507640();
  v68 = sub_23F61B2E4();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F3834D0();
  v366 = (uint8_t *)v70;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v71);
  sub_23F3838E4();
  v355 = v72;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v73);
  sub_23F3838E4();
  v349 = v74;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v75);
  v77 = (char *)&v319 - v76;
  v346 = v7;
  sub_23F61B128();
  sub_23F61B14C();
  v344 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v345 = v60;
  v344(v2, v60);
  v78 = sub_23F507E00();
  sub_23F3F1328(v78, v79);
  sub_23F362984();
  v80 = sub_23F36195C((uint64_t)v59, 1, v68);
  v357 = v3;
  v358 = v68;
  if (v80 == 1)
  {
    sub_23F3D9844((uint64_t)v59, &qword_256E702E0);
    v81 = v68;
    v82 = v3;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v77, v59, v68);
    v83 = v339;
    sub_23F61B2CC();
    v84 = v348[11](v83, v350);
    if (v84 != *MEMORY[0x24BE56C88]
      && v84 != *MEMORY[0x24BE56AD0]
      && v84 != *MEMORY[0x24BE56C70]
      && v84 != *MEMORY[0x24BE56B38]
      && v84 != *MEMORY[0x24BE56B88]
      && v84 != *MEMORY[0x24BE56B98]
      && v84 != *MEMORY[0x24BE56C10]
      && v84 != *MEMORY[0x24BE56B68])
    {
      v115 = v321;
      sub_23F6190AC();
      sub_23F619E8C();
      v116 = sub_23F3B1A04();
      if (sub_23F49BA04(v116))
      {
        v118 = (uint8_t *)sub_23F366668();
        *(_WORD *)v118 = 0;
        sub_23F4114BC(&dword_23F35A000, v115, (os_log_type_t)v59, "Event payload is NOT of interests for overrides, skipping override lookup", v118);
        sub_23F366530();
      }

      v119 = sub_23F507900();
      sub_23F507C5C(v119, v120);
      v121 = v358;
      v122 = sub_23F50790C();
      v123(v122, v121);
      sub_23F507A58();
      sub_23F36196C(v124, v125, v126, v127);
      sub_23F5078DC();
      goto LABEL_144;
    }
    sub_23F5078DC();
    v92 = v322;
    sub_23F6190AC();
    sub_23F619E8C();
    v93 = sub_23F3B1A04();
    if (sub_23F49BA04(v93))
    {
      v94 = (uint8_t *)sub_23F366668();
      *(_WORD *)v94 = 0;
      sub_23F4114BC(&dword_23F35A000, v92, (os_log_type_t)v59, "Event payload is of interests for overrides, proceeding into override lookup", v94);
      sub_23F366530();
    }

    sub_23F507C5C((uint64_t)v92, (uint64_t (*)(uint64_t, _QWORD))v352[1].isa);
    v82 = v357;
    v81 = v358;
    sub_23F362A28((uint64_t)v77, *(uint64_t (**)(uint64_t, uint64_t))(v357 + 8));
  }
  v95 = v364;
  sub_23F61B128();
  v96 = (uint64_t)v365;
  sub_23F4F38B8(v365);
  v97 = v95;
  v98 = (void (*)(uint64_t))v344;
  v344((uint64_t)v97, v345);
  if (sub_23F36195C(v96, 1, v81) == 1)
  {
    sub_23F3D9844(v96, &qword_256E702E0);
    sub_23F3837C8();
    v102 = v81;
LABEL_143:
    sub_23F36196C(v99, v100, v101, v102);
    goto LABEL_144;
  }
  v364 = *(void (**)(_QWORD, _QWORD, _QWORD))(v82 + 32);
  v364(v349, v96, v81);
  sub_23F61B128();
  v103 = sub_23F61B14C();
  v104 = sub_23F507DDC();
  v98(v104);
  v105 = MEMORY[0x24BEE4AF8];
  v374[0] = MEMORY[0x24BEE4AF8];
  v365 = *(_QWORD **)(v103 + 16);
  if (!v365)
    goto LABEL_47;
  v106 = 0;
  v107 = v353;
  isEscapingClosureAtFileLocation = v355;
  do
  {
    if (v106 >= *(_QWORD *)(v103 + 16))
    {
      __break(1u);
      goto LABEL_157;
    }
    v109 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
    v110 = *(_QWORD *)(v82 + 72);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v82 + 16))(isEscapingClosureAtFileLocation, v103 + v109 + v110 * v106, v81);
    v111 = sub_23F4F96F8(isEscapingClosureAtFileLocation);
    if (v107)
      goto LABEL_159;
    v107 = 0;
    if (v111)
    {
      sub_23F507D98((uint64_t)v366, isEscapingClosureAtFileLocation);
      v112 = v374[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F3DDBE4();
        sub_23F37C264();
        v112 = v374[0];
      }
      v114 = *(_QWORD *)(v112 + 16);
      v113 = *(_QWORD *)(v112 + 24);
      if (v114 >= v113 >> 1)
      {
        sub_23F3B1A80(v113);
        sub_23F37C264();
        v112 = v374[0];
      }
      *(_QWORD *)(v112 + 16) = v114 + 1;
      v81 = v358;
      sub_23F507D98(v112 + v109 + v114 * v110, (uint64_t)v366);
      v374[0] = v112;
      v107 = 0;
      v82 = v357;
      isEscapingClosureAtFileLocation = v355;
    }
    else
    {
      sub_23F362A28(isEscapingClosureAtFileLocation, *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8));
    }
    ++v106;
  }
  while (v365 != (_QWORD *)v106);
  v353 = 0;
  v105 = v374[0];
LABEL_47:
  sub_23F3837B0();
  v128 = v351;
  sub_23F6190AC();
  sub_23F507D00();
  v129 = v128;
  sub_23F619E8C();
  v130 = sub_23F3B1A04();
  v131 = sub_23F366874(v130);
  v132 = MEMORY[0x24BEE4AD8];
  v339 = v105;
  if (v131)
  {
    v133 = v81;
    v134 = (uint8_t *)sub_23F366668();
    v374[0] = sub_23F366668();
    *(_DWORD *)v134 = 136315138;
    v366 = v134 + 4;
    v135 = sub_23F507CF8();
    v136 = MEMORY[0x24266F8F8](v135, v133);
    v138 = v137;
    swift_release();
    sub_23F37AE00(v136, v138, v374);
    sub_23F507BD4(v139);
    sub_23F61C790();
    sub_23F384364();
    sub_23F507794();
    sub_23F38485C(&dword_23F35A000, v129, (os_log_type_t)v103, "Interested events are: \"%s\"", v134);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F507794();

  v140 = sub_23F507918();
  v348 = v141;
  ((void (*)(uint64_t, uint64_t))v141)(v140, v356);
  isEscapingClosureAtFileLocation = (uint64_t)v361;
  v142 = v362;
  v82 = v354;
  v143 = MEMORY[0x24BEE4AF8];
  sub_23F5078AC();
  sub_23F61B14C();
  sub_23F507AFC();
  v144 = (uint64_t)v330;
  sub_23F507E00();
  sub_23F4F373C(v145);
  v146 = v144;
  swift_bridgeObjectRelease();
  v147 = v144;
  v148 = v332;
  v149 = sub_23F36195C(v147, 1, v332);
  v150 = v333;
  if (v149 == 1)
  {
    sub_23F3D9844(v146, &qword_256E70878);
    v151 = MEMORY[0x24BEE4AF8];
    goto LABEL_65;
  }
  v152 = v325;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v325 + 32))(v333, v146, v148);
  v366 = (uint8_t *)sub_23F61B1AC();
  if (!v153)
  {
    sub_23F362A28(v150, *(uint64_t (**)(uint64_t, uint64_t))(v152 + 8));
    v151 = MEMORY[0x24BEE4AF8];
    goto LABEL_60;
  }
  v154 = v153;
  sub_23F4F3B60(&v370);
  v155 = v370;
  if (!v370)
    goto LABEL_56;
  v365 = (_QWORD *)v371[0];
  v82 = v371[1];
  sub_23F5069E0(v369);
  sub_23F383004((uint64_t)v369, (uint64_t)v368, &qword_256E78AE8);
  v156 = (uint64_t)v366;
  sub_23F4414B0();
  sub_23F61C184();
  v157 = (void *)sub_23F61C0E8();
  sub_23F362C60();
  v158 = (_QWORD *)swift_allocObject();
  v158[2] = v368;
  v158[3] = v156;
  v158[4] = v154;
  v159 = swift_allocObject();
  *(_QWORD *)(v159 + 16) = sub_23F506FB0;
  *(_QWORD *)(v159 + 24) = v158;
  v367[4] = sub_23F506FA4;
  v367[5] = v159;
  v367[0] = MEMORY[0x24BDAC760];
  v367[1] = 1107296256;
  v367[2] = sub_23F504D70;
  v367[3] = &unk_250FDA278;
  v160 = _Block_copy(v367);
  sub_23F507CF8();
  sub_23F383E5C();
  swift_release();
  objc_msgSend((id)v82, sel_lookupKey_resultBlock_, v157, v160);

  _Block_release(v160);
  sub_23F507E58();
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
LABEL_158:
    __break(1u);
LABEL_159:
    sub_23F362A28(isEscapingClosureAtFileLocation, *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8));
    sub_23F3837B0();
    swift_release();
    __break(1u);
    return;
  }
  sub_23F383004((uint64_t)v368, (uint64_t)v373, &qword_256E78AE8);
  swift_release();
  sub_23F504E34(v155, v365, (void *)v82);
  sub_23F383004((uint64_t)v373, (uint64_t)v374, &qword_256E78AE8);
  v161 = sub_23F44CD78((uint64_t)v374);
  v150 = v333;
  if (v161 == 1)
  {
    v142 = v362;
    v82 = v354;
LABEL_56:
    v162 = v320;
    sub_23F507714();
    sub_23F383E5C();
    sub_23F4064C8();
    v163 = sub_23F3B1A04();
    if (sub_23F482920(v163))
    {
      v164 = (uint8_t *)sub_23F366668();
      v374[0] = sub_23F366668();
      *(_DWORD *)v164 = 136315138;
      sub_23F383E5C();
      sub_23F37AE00((uint64_t)v366, v154, v374);
      sub_23F507BD4(v165);
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      sub_23F507CC0();
      sub_23F38485C(v166, v167, v168, v169, v164);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F384A80();
    sub_23F50719C(v162);
    sub_23F362A28(v150, *(uint64_t (**)(uint64_t, uint64_t))(v325 + 8));
    v151 = MEMORY[0x24BEE4AF8];
    isEscapingClosureAtFileLocation = (uint64_t)v361;
    v143 = MEMORY[0x24BEE4AF8];
LABEL_60:
    v132 = MEMORY[0x24BEE4AD8];
  }
  else
  {
    sub_23F3837B0();
    v151 = v374[12];
    v82 = v354;
    if (v374[12])
      sub_23F383738();
    else
      v151 = MEMORY[0x24BEE4AF8];
    isEscapingClosureAtFileLocation = (uint64_t)v361;
    v142 = v362;
    v143 = MEMORY[0x24BEE4AF8];
    v132 = MEMORY[0x24BEE4AD8];
    sub_23F506A50(v373);
    sub_23F362A28(v150, *(uint64_t (**)(uint64_t, uint64_t))(v325 + 8));
  }
LABEL_65:
  v367[0] = v143;
  sub_23F4F755C();
  LOBYTE(v171) = v170;
  if (*(_QWORD *)(v151 + 16))
  {
    sub_23F507CF8();
    v172 = sub_23F507AD8();
    v173 = v353;
    v174 = sub_23F4F2EDC(v172);
    v353 = v173;
    sub_23F362984();
    v367[0] = v174;
  }
  else
  {
    sub_23F362984();
  }
  v175 = v360;
  sub_23F4F7780();
  v176 = v367[0];
  v351 = *(NSObject **)(v367[0] + 16);
  if (!v351)
  {
    sub_23F5077F4();
LABEL_140:
    sub_23F362984();
    v278 = v323;
    sub_23F507714();
    sub_23F4064C8();
    v279 = sub_23F3B1A04();
    v280 = sub_23F49BA04(v279);
    v281 = v357;
    if (v280)
    {
      v282 = (_WORD *)sub_23F366668();
      sub_23F507DB0(v282);
      sub_23F4114BC(&dword_23F35A000, v176, (os_log_type_t)v171, "No Override found!", v175);
      sub_23F366530();
    }

    sub_23F50719C(v278);
    (*(void (**)(uint64_t, uint64_t))(v281 + 8))(v349, v358);
    sub_23F507A58();
    goto LABEL_143;
  }
  v177 = v142 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_userLocale;
  sub_23F383738();
  v355 = v177;
  swift_beginAccess();
  v352 = v176;
  isa = v176[2].isa;
  v171 = v359;
  v180 = v363;
  if (!isa)
  {
LABEL_157:
    __break(1u);
    goto LABEL_158;
  }
  v181 = 0;
  v350 = (uint64_t)&v352[4];
  v322 = v371;
  v330 = v373;
  *(_QWORD *)&v178 = 136315138;
  v331 = v178;
  v325 = v132 + 8;
  *(_QWORD *)&v178 = 136315650;
  v332 = v178;
  while (1)
  {
    v366 = (uint8_t *)v181;
    memcpy(v374, (const void *)(v350 + 192 * v181), 0xB9uLL);
    v182 = v374[20];
    v183 = v374[21];
    v364 = (void (*)(_QWORD, _QWORD, _QWORD))v374[0];
    v365 = (_QWORD *)v374[1];
    sub_23F382EF8(v355, v180, &qword_256E70A60);
    if (!v183)
    {
      sub_23F507818();
      goto LABEL_90;
    }
    sub_23F382EF8(v180, v82, &qword_256E70A60);
    if (sub_23F36195C(v82, 1, isEscapingClosureAtFileLocation) == 1)
    {
      sub_23F507818();
      sub_23F3D9844(v82, &qword_256E70A60);
LABEL_74:
      sub_23F3D9844(v180, &qword_256E70A60);
LABEL_75:
      v184 = v347;
      sub_23F6190AC();
      sub_23F507D00();
      sub_23F507818();
      v185 = sub_23F619E8C();
      v186 = sub_23F61C61C();
      if (os_log_type_enabled(v185, v186))
      {
        v187 = sub_23F366668();
        v333 = sub_23F366668();
        v373[0] = v333;
        *(_DWORD *)v187 = v332;
        v188 = (uint64_t)v365;
        sub_23F383738();
        sub_23F37AE00((uint64_t)v364, v188, v373);
        *(_QWORD *)(v187 + 4) = v189;
        sub_23F362984();
        *(_WORD *)(v187 + 12) = 2080;
        sub_23F383EB0();
        v190 = sub_23F507DDC();
        sub_23F37AE00(v190, v191, v192);
        *(_QWORD *)(v187 + 14) = v193;
        sub_23F384120();
        sub_23F5071BC();
        sub_23F5071BC();
        *(_WORD *)(v187 + 22) = 2080;
        v194 = v334;
        sub_23F382EF8(v355, v334, &qword_256E70A60);
        v195 = v361;
        if (sub_23F36195C(v194, 1, (uint64_t)v361))
        {
          v196 = sub_23F384220();
          sub_23F3D9844(v196, v197);
          v198 = 0xE300000000000000;
          v199 = 7104878;
        }
        else
        {
          v265 = v360;
          v266 = v324;
          v267 = sub_23F507834();
          v268(v267);
          sub_23F3D9844(v194, &qword_256E70A60);
          v199 = sub_23F617030();
          v198 = v269;
          (*((void (**)(uint64_t, uint8_t *))v265 + 1))(v266, v195);
        }
        sub_23F37AE00(v199, v198, v373);
        *(_QWORD *)(v187 + 24) = v270;
        sub_23F362984();
        swift_release_n();
        _os_log_impl(&dword_23F35A000, v185, v186, "Skipping override statement %s. Its locale: %s does not match the userLocale: %s", (uint8_t *)v187, 0x20u);
        swift_arrayDestroy();
        sub_23F366530();
      }
      sub_23F5071BC();
      sub_23F5071BC();
      sub_23F507794();

      sub_23F50719C(v184);
      isEscapingClosureAtFileLocation = (uint64_t)v361;
      goto LABEL_125;
    }
    (*((void (**)(uint64_t, uint64_t, uint64_t))v175 + 4))(v171, v82, isEscapingClosureAtFileLocation);
    sub_23F507818();
    sub_23F383EB0();
    v200 = sub_23F617018();
    v202 = v201;
    if (v182 == v200 && v183 == v201)
    {
      sub_23F362984();
      sub_23F5075A0();
LABEL_88:
      sub_23F384120();
      sub_23F5073A0(v202);
      sub_23F5073A0(v171);
LABEL_89:
      v82 = v354;
      v180 = v363;
LABEL_90:
      sub_23F3D9844(v180, &qword_256E70A60);
      goto LABEL_91;
    }
    sub_23F507DDC();
    v204 = sub_23F61CC64();
    sub_23F362984();
    sub_23F5075A0();
    if ((v204 & 1) != 0)
      goto LABEL_88;
    v205 = v327;
    sub_23F6170C0();
    v206 = v326;
    sub_23F6170A8();
    (*(void (**)(uint64_t, uint64_t))(v328 + 8))(v205, v329);
    v207 = sub_23F617048();
    v208 = sub_23F5074D4();
    if (sub_23F36195C(v208, v209, v207) == 1)
    {
      sub_23F3D9844(v206, &qword_256E71D18);
      sub_23F383EB0();
      sub_23F5073A0(v202);
      sub_23F5073A0(v359);
      sub_23F384A80();
      v82 = v354;
      v180 = v363;
      goto LABEL_74;
    }
    v271 = sub_23F61703C();
    v273 = v272;
    v274 = sub_23F5076F4();
    sub_23F362A28(v274, v275);
    if (v182 == v271 && v183 == v273)
    {
      sub_23F38432C();
      isEscapingClosureAtFileLocation = (uint64_t)v361;
      sub_23F5073A0(v341);
      sub_23F5073A0(v359);
      sub_23F384120();
      goto LABEL_89;
    }
    sub_23F507DDC();
    v277 = sub_23F61CC64();
    sub_23F38432C();
    isEscapingClosureAtFileLocation = (uint64_t)v361;
    sub_23F5073A0(v341);
    sub_23F5073A0(v359);
    sub_23F384120();
    sub_23F3D9844(v363, &qword_256E70A60);
    v82 = v354;
    if ((v277 & 1) == 0)
      goto LABEL_75;
LABEL_91:
    v210 = v374[22];
    if (!v374[22])
      goto LABEL_106;
    v211 = *(_QWORD *)(v374[22] + 16);
    if (v211)
    {
      sub_23F383E5C();
      v212 = (objc_class **)(v210 + 40);
      v213 = MEMORY[0x24BEE4AF8];
      do
      {
        v214 = *v212;
        sub_23F383EB0();
        v215 = sub_23F61CAB4();
        sub_23F384120();
        if (v215 <= 8)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F507CCC();
            v213 = v218;
          }
          v217 = v213[2].isa;
          v216 = (unint64_t)v213[3].isa;
          v214 = (Class)((char *)v217 + 1);
          if ((unint64_t)v217 >= v216 >> 1)
          {
            sub_23F3B1A80(v216);
            sub_23F507CCC();
            v213 = v219;
          }
          v213[2].isa = v214;
          *((_BYTE *)v217 + (_QWORD)v213 + 32) = v215;
        }
        v212 += 2;
        --v211;
      }
      while (v211);
      sub_23F3837B0();
      if (qword_256E6EED0 != -1)
        swift_once();
      v220 = sub_23F5A05A8();
      sub_23F362984();
      isEscapingClosureAtFileLocation = (uint64_t)v361;
      v82 = v354;
      if ((v220 & 1) == 0)
      {
        v221 = v335;
        sub_23F507E0C();
        sub_23F507818();
        sub_23F507DF8();
        v222 = sub_23F3B1A04();
        if (sub_23F3B1E8C(v222))
        {
          v223 = sub_23F366668();
          v333 = sub_23F366668();
          v373[0] = v333;
          *(_DWORD *)v223 = v332;
          v224 = (uint64_t)v365;
          sub_23F384324();
          sub_23F37AE00((uint64_t)v364, v224, v373);
          v370 = v225;
          LODWORD(v364) = (_DWORD)v214;
          sub_23F507C48();
          sub_23F38432C();
          *(_WORD *)(v223 + 12) = 2080;
          v226 = sub_23F383E5C();
          v227 = MEMORY[0x24266F8F8](v226, MEMORY[0x24BEE0D00]);
          v229 = v228;
          sub_23F3837B0();
          sub_23F37AE00(v227, v229, v373);
          v370 = v230;
          sub_23F507C48();
          sub_23F38432C();
          sub_23F5071BC();
          sub_23F5071BC();
          *(_WORD *)(v223 + 22) = 2080;
          v231 = sub_23F4A7D78(byte_256E7FF30);
          sub_23F37AE00(v231, v232, v373);
          v370 = v233;
          sub_23F61C790();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23F35A000, v213, (os_log_type_t)v364, "Skipping override statement %s. Its userInterfaceIdioms: %s do not match the device userInterfaceIdiom: %s", (uint8_t *)v223, 0x20u);
          swift_arrayDestroy();
          sub_23F366530();
        }
        sub_23F5071BC();
        sub_23F5071BC();

        sub_23F50719C(v221);
        goto LABEL_125;
      }
LABEL_106:
      v234 = v343;
      goto LABEL_108;
    }
    v234 = v343;
    isEscapingClosureAtFileLocation = (uint64_t)v361;
LABEL_108:
    v370 = (void *)MEMORY[0x24BEE4B00];
    sub_23F5073E8();
    sub_23F4F9C14(v349, (uint64_t)v373, v234, (uint64_t)&v370, v235, v236, v237, v238, v319, v320, (uint64_t)v321, (uint64_t)v322, v323, v324, v325, v326, v327, v328, v329,
      (uint64_t)v330);
    v240 = v239;
    sub_23F507AF4();
    if ((v240 & 1) != 0)
      break;
    sub_23F5071BC();
LABEL_125:
    v171 = v359;
    v175 = v360;
LABEL_126:
    v181 = (unint64_t)(v366 + 1);
    v180 = v363;
    if (v366 + 1 == (uint8_t *)v351)
    {
      sub_23F5077F4();
      sub_23F507A8C();
      v176 = v367[0];
      goto LABEL_140;
    }
    if ((Class)v181 >= v352[2].isa)
      goto LABEL_157;
  }
  sub_23F5073E8();
  v241 = sub_23F4F6A78(v373, v339, v234);
  v243 = v242;
  swift_beginAccess();
  swift_bridgeObjectRelease();
  v370 = v243;
  v244 = v342;
  sub_23F507E0C();
  sub_23F507DF8();
  v245 = sub_23F3B1A04();
  if (sub_23F366874(v245))
  {
    v246 = (uint8_t *)sub_23F366668();
    v373[0] = sub_23F366668();
    *(_DWORD *)v246 = v331;
    v333 = (uint64_t)(v246 + 4);
    type metadata accessor for PlanOverridesService.EventReference(0);
    sub_23F3B1EA4();
    v247 = sub_23F61BFC8();
    v249 = v248;
    sub_23F3B5F04();
    sub_23F37AE00(v247, v249, v373);
    v372 = v250;
    sub_23F61C790();
    sub_23F38458C();
    sub_23F38485C(&dword_23F35A000, v241, (os_log_type_t)v234, "Interested eventIdsReferences are: \"%s\"", v246);
    swift_arrayDestroy();
    sub_23F366530();
  }

  sub_23F50719C(v244);
  if (v374[15])
    v251 = v374[15];
  else
    v251 = MEMORY[0x24BEE4AF8];
  v372 = v251;
  sub_23F617BA0();
  sub_23F383738();
  sub_23F389CDC();
  sub_23F5078AC();
  sub_23F61B14C();
  sub_23F507AFC();
  v252 = *(_QWORD *)(v244 + 16);
  *(_QWORD *)&v378 = 0;
  *((_QWORD *)&v378 + 1) = v252;
  v379 = v244;
  v380 = sub_23F3F3B20;
  v381 = 0;
  sub_23F383738();
  v253 = v353;
  sub_23F3F0F58(&v378);
  v255 = v254;
  sub_23F362984();
  v256 = v338;
  sub_23F3F1380(v255, v338);
  sub_23F362C60();
  sub_23F3F166C(v256);
  v258 = v257;
  sub_23F3D9844(v256, &qword_256E701C8);
  sub_23F362984();
  if (!v258)
  {
    sub_23F61A78C();
    sub_23F382DD0();
    swift_allocError();
    v283 = v377;
    v284 = v376;
    *(_OWORD *)v285 = v375;
    *(_OWORD *)(v285 + 16) = v284;
    *(_QWORD *)(v285 + 32) = v283;
    swift_willThrow();
    sub_23F5071BC();
    sub_23F5077F4();
    sub_23F384364();
    sub_23F3B5F04();
    sub_23F507A84();
    sub_23F507AF4();
    sub_23F507A8C();
LABEL_154:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v357 + 8))(v349, v358);
    goto LABEL_155;
  }
  sub_23F5073E8();
  v259 = sub_23F4EE66C();
  v353 = v253;
  if (v253)
  {
    sub_23F38458C();
    sub_23F5077F4();
    sub_23F384364();
    sub_23F3B5F04();
    sub_23F507A84();
    sub_23F507AF4();
    sub_23F507A8C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v357 + 8))(v349, v358);
    sub_23F5071BC();
    sub_23F507BC0();
    goto LABEL_144;
  }
  v261 = v259;
  v262 = v260;
  if (!v374[3])
  {
    v263 = MEMORY[0x24BEE4AF8];
    v264 = v337;
    if ((v259 & 1) != 0)
      goto LABEL_147;
    goto LABEL_121;
  }
  v263 = MEMORY[0x24BEE4AF8];
  v264 = v337;
  if (v374[5])
    v263 = sub_23F617BA0();
  if ((v261 & 1) == 0)
  {
LABEL_121:
    sub_23F38458C();
    sub_23F3837B0();
    sub_23F5071BC();
    sub_23F384120();
    sub_23F384364();
    sub_23F3B5F04();
    sub_23F507A84();
    sub_23F507AF4();
    sub_23F507BC0();
    v171 = v359;
    v175 = v360;
    v82 = v354;
    goto LABEL_126;
  }
LABEL_147:
  v366 = (uint8_t *)v263;
  sub_23F5077F4();
  sub_23F507A8C();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v262 + 16))
  {
    sub_23F507E0C();
    swift_bridgeObjectRetain_n();
    sub_23F507DF8();
    v286 = sub_23F3B1A04();
    if (sub_23F482920(v286))
    {
      v287 = (uint8_t *)sub_23F366668();
      v363 = sub_23F366668();
      v373[0] = v363;
      *(_DWORD *)v287 = v331;
      v360 = v287 + 4;
      v361 = v287;
      v288 = sub_23F61B5D8();
      v289 = MEMORY[0x24266F91C](v262, v288);
      sub_23F37AE00(v289, v290, v373);
      v371[2] = v291;
      sub_23F61C790();
      sub_23F384120();
      sub_23F384A80();
      sub_23F507CC0();
      sub_23F38485C(v292, v293, v294, v295, v361);
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F384A80();

    sub_23F50719C(v264);
    v310 = (uint64_t)v370;
    sub_23F362CDC();
    v311 = sub_23F507EC8();
    sub_23F507474(v311, v312, v313, v314, v315, v316, v317, v318, v310, v263, (uint64_t)v321, (uint64_t)v322, v323, v324, v325, v326, v327, v328, v329,
      (uint64_t)v330,
      v331,
      *((uint64_t *)&v331 + 1),
      v332,
      *((uint64_t *)&v332 + 1));
    sub_23F38458C();
    sub_23F38432C();
    sub_23F362C60();
    sub_23F5071BC();
    sub_23F3837B0();
    sub_23F384120();
    sub_23F384364();
    sub_23F3B5F04();
    goto LABEL_154;
  }
  sub_23F3837B0();
  v296 = v319;
  sub_23F507714();
  sub_23F4064C8();
  v297 = sub_23F3B1A04();
  v298 = sub_23F49BA04(v297);
  v299 = v357;
  if (v298)
  {
    v300 = (_WORD *)sub_23F366668();
    sub_23F507DB0(v300);
    sub_23F4114BC(&dword_23F35A000, v261, (os_log_type_t)v264, "Override Matched! Creating plan from overrides.", (uint8_t *)v262);
    sub_23F366530();
  }

  sub_23F50719C(v296);
  v301 = (uint64_t)v370;
  sub_23F362CDC();
  v302 = sub_23F507EC8();
  sub_23F507474(v302, v303, v304, v305, v306, v307, v308, v309, v301, v296, (uint64_t)v321, (uint64_t)v322, v323, v324, v325, v326, v327, v328, v329,
    (uint64_t)v330,
    v331,
    *((uint64_t *)&v331 + 1),
    v332,
    *((uint64_t *)&v332 + 1));
  sub_23F38458C();
  sub_23F3837B0();
  sub_23F362C60();
  sub_23F5071BC();
  sub_23F384120();
  sub_23F384364();
  sub_23F3B5F04();
  sub_23F507A84();
  (*(void (**)(uint64_t, uint64_t))(v299 + 8))(v349, v358);
LABEL_155:
  sub_23F507BC0();
LABEL_144:
  sub_23F362870();
}

BOOL sub_23F4F96F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int v21;
  _BOOL4 v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v57;
  int v58;
  os_log_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _BOOL4 v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v2 = sub_23F617000();
  v62 = *(_QWORD *)(v2 - 8);
  v63 = (uint64_t *)v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F61B2E4();
  v66 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v69 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v67 = (char *)&v57 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v57 - v10;
  v12 = sub_23F619E98();
  v64 = *(_QWORD *)(v12 - 8);
  v65 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v70 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F61B2C0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v57 - v19;
  sub_23F61B2CC();
  v21 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v20, v14);
  v25 = v21 == *MEMORY[0x24BE56C88]
     || v21 == *MEMORY[0x24BE56AD0]
     || v21 == *MEMORY[0x24BE56C70]
     || v21 == *MEMORY[0x24BE56B98];
  v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v20, v14);
  v68 = v25;
  if (v25)
  {
    v61 = v26;
    sub_23F6190AC();
    v27 = v66;
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 16);
    v28(v11, a1, v5);
    v28(v67, a1, v5);
    v28(v69, a1, v5);
    v29 = sub_23F619E8C();
    v30 = sub_23F61C61C();
    v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = swift_slowAlloc();
      v60 = swift_slowAlloc();
      v73 = v60;
      *(_DWORD *)v32 = 136315650;
      v57 = v32 + 4;
      v59 = v29;
      sub_23F61B260();
      sub_23F3B121C(&qword_256E74E78, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
      v33 = v63;
      v34 = sub_23F61CC1C();
      v58 = v31;
      v36 = v35;
      (*(void (**)(char *, uint64_t *))(v62 + 8))(v4, v33);
      sub_23F37AE00(v34, v36, &v73);
      v71 = v37;
      v63 = &v72;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      v66 = *(_QWORD *)(v66 + 8);
      ((void (*)(char *, uint64_t))v66)(v11, v5);
      *(_WORD *)(v32 + 12) = 2080;
      v38 = v67;
      sub_23F61B2CC();
      v39 = sub_23F61B278();
      v41 = v40;
      v42 = v61;
      v61(v18, v14);
      sub_23F37AE00(v39, v41, &v73);
      v71 = v43;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      v44 = v38;
      v45 = (void (*)(char *, uint64_t))v66;
      ((void (*)(char *, uint64_t))v66)(v44, v5);
      *(_WORD *)(v32 + 22) = 2080;
      v67 = (char *)(v32 + 24);
      v46 = v69;
      sub_23F61B2CC();
      v47 = sub_23F61B284();
      v42(v18, v14);
      v48 = sub_23F617D08();
      v49 = MEMORY[0x24266F8F8](v47, v48);
      v51 = v50;
      swift_bridgeObjectRelease();
      sub_23F37AE00(v49, v51, &v73);
      v71 = v52;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      v45(v46, v5);
      v53 = v59;
      _os_log_impl(&dword_23F35A000, v59, (os_log_type_t)v58, "Interested Event: %s, %s, %s", (uint8_t *)v32, 0x20u);
      v54 = v60;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v54, -1, -1);
      MEMORY[0x242670B70](v32, -1, -1);

    }
    else
    {
      v55 = *(void (**)(char *, uint64_t))(v27 + 8);
      v55(v11, v5);
      v55(v67, v5);
      v55(v69, v5);

    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v70, v65);
  }
  return v68;
}

void sub_23F4F9C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  NSObject *v31;
  NSObject *v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  void (*v121)(uint64_t, char *);
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)(uint64_t, uint64_t, _QWORD);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t (*v144)(uint64_t, uint64_t, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  NSObject *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(uint64_t, NSObject *, uint64_t);
  NSObject *v159;
  uint64_t v160;
  uint64_t v161;
  os_log_type_t v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t (*v179)(uint64_t, _QWORD);
  uint64_t v180;
  uint64_t (*v181)(uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t (*v186)(uint64_t, _QWORD);
  uint64_t v187;
  uint64_t v188;
  int v189;
  char v190;
  uint64_t (*v191)(_QWORD, _QWORD, _QWORD);
  os_log_type_t v192;
  uint8_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  const char *v198;
  char v199;
  uint64_t (*v200)(_QWORD, _QWORD, _QWORD);
  os_log_type_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  uint64_t (*v207)(_QWORD, _QWORD, _QWORD);
  os_log_type_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char v213;
  uint64_t (*v214)(_QWORD, _QWORD, _QWORD);
  os_log_type_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t (*v221)(uint64_t, _QWORD);
  uint64_t v222;
  void (*v223)(uint64_t);
  char v224;
  uint64_t v225;
  uint64_t (*v226)(uint64_t, uint64_t, _QWORD);
  NSObject *v227;
  os_log_type_t v228;
  uint8_t *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  os_log_type_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  void (*v240)(uint64_t);
  uint64_t v241;
  uint64_t v242[5];
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  NSObject *v274;
  uint64_t v275;
  NSObject *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;

  sub_23F362ABC();
  a19 = v27;
  a20 = v28;
  v275 = v20;
  v274 = v29;
  v273 = v30;
  v276 = v31;
  v33 = v32;
  v34 = sub_23F3846E4();
  sub_23F383E7C(v34, (uint64_t)&v270);
  v244 = v35;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F36285C();
  v245 = v37;
  v38 = sub_23F50760C();
  sub_23F383E7C(v38, (uint64_t)&v292);
  v259 = v39;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v46);
  v246 = (char *)v242 - v47;
  v48 = sub_23F3B1728();
  sub_23F383E7C(v48, (uint64_t)&v290);
  v261 = v49;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F383780();
  sub_23F3B13F0(v57);
  v58 = sub_23F618134();
  sub_23F383E7C(v58, (uint64_t)&v289);
  v266 = v59;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F383780();
  sub_23F3B13F0(v62);
  v63 = sub_23F61ACA8();
  sub_23F383E7C(v63, (uint64_t)&v283);
  v253 = v64;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F383780();
  sub_23F3B13F0(v67);
  v68 = sub_23F61A504();
  sub_23F383E7C(v68, (uint64_t)&v286);
  v256 = v69;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v71);
  sub_23F383780();
  sub_23F3B13F0(v72);
  v73 = sub_23F61A300();
  sub_23F383E7C(v73, (uint64_t)&v277);
  v250 = v74;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F36285C();
  sub_23F3B13F0(v76);
  v77 = sub_23F61A2E8();
  sub_23F383E7C(v77, (uint64_t)&v293);
  v251 = v78;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v79);
  sub_23F36285C();
  sub_23F3B13F0(v80);
  v81 = sub_23F61A36C();
  sub_23F383E7C(v81, (uint64_t)&v294);
  v267 = v82;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v83);
  sub_23F3B13F0((uint64_t)v242 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = sub_23F61B0E0();
  sub_23F383E7C(v85, (uint64_t)&v295);
  v271 = v86;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v87);
  sub_23F36285C();
  sub_23F384990(v88);
  sub_23F35D2E8(&qword_256E71E28);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v89);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v90);
  sub_23F507640();
  v272 = sub_23F619FF4();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v91);
  sub_23F362B98();
  sub_23F61B470();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v92);
  sub_23F3D9B88();
  v93 = sub_23F61B2C0();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v94);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v95);
  v97 = (char *)v242 - v96;
  sub_23F3C887C(&v282, v276);
  v276 = v33;
  sub_23F61B2CC();
  v98 = sub_23F383E88((uint64_t)v97, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 88));
  if (v98 == *MEMORY[0x24BE56C88])
  {
    sub_23F383E88((uint64_t)v97, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 96));
    sub_23F383C64(v26, (uint64_t)v97, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32));
    v99 = sub_23F61A2DC();
    v101 = v100;
    v277 = v284;
    v278 = v285;
    v279 = v286;
    v280 = v287;
    v102 = sub_23F507E6C();
    sub_23F4EF300(v102, v103);
    sub_23F507204(v99, v101, v104, (uint64_t)&v277);
    sub_23F362D08();
    v105 = sub_23F507E6C();
    sub_23F4EF330(v105, v106);
    v107 = sub_23F507788();
LABEL_13:
    v108(v107);
LABEL_18:
    sub_23F362948();
    return;
  }
  if (v98 == *MEMORY[0x24BE56AD0])
  {
    sub_23F383E88((uint64_t)v97, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 96));
    v109 = sub_23F383F00(v21, (uint64_t)v97, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32));
    v110 = MEMORY[0x24266D4F8](v109);
    sub_23F36FE58(v110, v23);
    sub_23F362D18();
    v111 = sub_23F61AC6C();
    v112 = sub_23F383740(v23, 1, v111);
    if (!v113)
    {
      v124 = sub_23F61A2DC();
      v126 = v125;
      sub_23F383E88(v23, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 8));
      v277 = v284;
      v278 = v285;
      v279 = v286;
      v280 = v287;
      v127 = sub_23F507C2C();
      sub_23F4EF300(v127, v128);
      sub_23F507204(v124, v126, v129, (uint64_t)&v277);
      sub_23F3837B0();
      v130 = sub_23F507C2C();
      sub_23F4EF330(v130, v131);
LABEL_12:
      v107 = sub_23F507E20();
      goto LABEL_13;
    }
    sub_23F507C40(v112, &qword_256E71E28);
    goto LABEL_7;
  }
  if (v98 != *MEMORY[0x24BE56C70])
  {
    if (v98 == *MEMORY[0x24BE56AC8])
    {
      v116 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v114 = (uint64_t)v97;
      goto LABEL_16;
    }
    if (v98 != *MEMORY[0x24BE56B98])
    {
      v156 = v262;
      sub_23F507714();
      v157 = v259;
      v158 = *(void (**)(uint64_t, NSObject *, uint64_t))(v259 + 16);
      v159 = v276;
      v160 = v264;
      v158(v254, v276, v264);
      v161 = sub_23F50773C((uint64_t)&v291);
      v158(v161, v159, v160);
      sub_23F4064C8();
      v162 = sub_23F507BA0();
      v163 = v162;
      if (os_log_type_enabled(v159, v162))
      {
        v164 = sub_23F366668();
        v165 = sub_23F366668();
        sub_23F5071A8(v165);
        *(_DWORD *)v164 = 136315394;
        LODWORD(v275) = v163;
        v166 = sub_23F61B20C();
        sub_23F507D2C(v166, v167);
        v281 = v168;
        v274 = v159;
        sub_23F507380();
        sub_23F362984();
        v169 = *(void (**)(uint64_t))(v157 + 8);
        v170 = sub_23F507788();
        v169(v170);
        *(_WORD *)(v164 + 12) = 2080;
        v273 = v164 + 14;
        v171 = v247;
        v172 = v263;
        sub_23F61B2CC();
        v173 = sub_23F61B278();
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v171, v93);
        sub_23F507508(v173, v174, &v277);
        v281 = v175;
        sub_23F61C790();
        sub_23F384120();
        ((void (*)(uint64_t, uint64_t))v169)(v172, v264);
        sub_23F3E025C(&dword_23F35A000, v274, (os_log_type_t)v275, "Skipping event: %s %s", (uint8_t *)v164);
        sub_23F507364();
        sub_23F366530();
      }
      v176 = *(void (**)(uint64_t))(v157 + 8);
      v177 = sub_23F507788();
      v176(v177);
      v178 = sub_23F3ECB9C();
      v176(v178);

      sub_23F507230();
      sub_23F3841CC(v156, v179);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v97, v93);
      goto LABEL_18;
    }
    sub_23F383E88((uint64_t)v97, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 96));
    v139 = v256;
    v140 = v257;
    v141 = sub_23F507924();
    v142 = v258;
    sub_23F383C64(v141, v143, v144);
    if (v288)
    {
      v145 = v260;
      v146 = v255;
      if (*(_QWORD *)(v288 + 16))
        v147 = *(unsigned __int8 *)(v288 + 32);
      else
        v147 = 6;
    }
    else
    {
      v147 = 6;
      v145 = v260;
      v146 = v255;
    }
    v187 = v252;
    sub_23F61A4F8();
    v188 = v187;
    sub_23F61AC78();
    sub_23F507C78(v187);
    v189 = sub_23F507E2C(*(uint64_t (**)(uint64_t, uint64_t))(v266 + 88));
    if (v189 == *MEMORY[0x24BE53328])
    {
      if ((_DWORD)v147 != 6)
      {
        sub_23F489314(v147);
        if ((v190 & 1) != 0)
        {
          sub_23F507338();
          sub_23F507390();
          sub_23F5070E4(v191);
          sub_23F4F27C4();
          sub_23F4F27C4();
          sub_23F3B1D6C();
          v192 = sub_23F3B1BD4();
          if (sub_23F40B304(v192))
          {
            v193 = (uint8_t *)sub_23F366668();
            v194 = sub_23F366668();
            sub_23F5071A8(v194);
            sub_23F50702C(4.8151e-34);
            sub_23F3B121C(&qword_256E74E78, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
            sub_23F507114();
            sub_23F507058();
            sub_23F4F292C(v187, v195, &v277);
            sub_23F507078(v196);
            sub_23F38432C();
            sub_23F3D98EC(v146, *(uint64_t (**)(uint64_t, uint64_t))(v145 + 8));
            sub_23F507008();
            sub_23F5071C4();
            sub_23F5070C8(v197);
            sub_23F384364();
            sub_23F4F2508();
            sub_23F4F2508();
            v198 = "Matched actionSuccess event: %s with statement id: %s";
            goto LABEL_56;
          }
          goto LABEL_57;
        }
      }
LABEL_64:
      sub_23F383CA8(v140, *(uint64_t (**)(uint64_t, uint64_t))(v139 + 8));
      goto LABEL_65;
    }
    if (v189 == *MEMORY[0x24BE532D8])
    {
      if ((_DWORD)v147 == 6)
        goto LABEL_64;
      sub_23F489314(v147);
      if ((v199 & 1) == 0)
        goto LABEL_64;
      sub_23F507338();
      sub_23F507390();
      sub_23F5070E4(v200);
      sub_23F4F27C4();
      sub_23F4F27C4();
      sub_23F3B1D6C();
      v201 = sub_23F3B1BD4();
      if (sub_23F40B304(v201))
      {
        v193 = (uint8_t *)sub_23F366668();
        v202 = sub_23F366668();
        sub_23F5071A8(v202);
        sub_23F50702C(4.8151e-34);
        sub_23F3B121C(&qword_256E74E78, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
        sub_23F507114();
        sub_23F507058();
        sub_23F4F292C(v187, v203, &v277);
        sub_23F507078(v204);
        sub_23F38432C();
        sub_23F3D98EC(v146, *(uint64_t (**)(uint64_t, uint64_t))(v145 + 8));
        sub_23F507008();
        sub_23F5071C4();
        sub_23F5070C8(v205);
        sub_23F384364();
        sub_23F4F2508();
        sub_23F4F2508();
        v198 = "Matched actionConfirmation event: %s with statement id: %s";
        goto LABEL_56;
      }
LABEL_57:

      sub_23F4F2508();
      sub_23F4F2508();
      sub_23F3D98EC(v146, *(uint64_t (**)(uint64_t, uint64_t))(v145 + 8));
      v220 = sub_23F50790C();
LABEL_58:
      sub_23F3841CC(v220, v221);
      v222 = sub_23F4414B0();
      v223(v222);
LABEL_65:
      sub_23F384430();
      goto LABEL_12;
    }
    if (v189 == *MEMORY[0x24BE532E8])
    {
      if ((_DWORD)v147 == 6)
        goto LABEL_64;
      sub_23F489314(v147);
      if ((v206 & 1) == 0)
        goto LABEL_64;
      sub_23F507338();
      sub_23F507390();
      sub_23F5070E4(v207);
      sub_23F4F27C4();
      sub_23F4F27C4();
      sub_23F3B1D6C();
      v208 = sub_23F3B1BD4();
      if (!sub_23F40B304(v208))
        goto LABEL_57;
      v193 = (uint8_t *)sub_23F366668();
      v209 = sub_23F366668();
      sub_23F5071A8(v209);
      sub_23F50702C(4.8151e-34);
      sub_23F3B121C(&qword_256E74E78, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
      sub_23F507114();
      sub_23F507058();
      sub_23F4F292C(v187, v210, &v277);
      sub_23F507078(v211);
      sub_23F38432C();
      sub_23F3D98EC(v146, *(uint64_t (**)(uint64_t, uint64_t))(v145 + 8));
      sub_23F507008();
      sub_23F5071C4();
      sub_23F5070C8(v212);
      sub_23F384364();
      sub_23F4F2508();
      sub_23F4F2508();
      v198 = "Matched parameterNeedsValue event: %s with statement id: %s";
    }
    else
    {
      if (v189 != *MEMORY[0x24BE53300])
      {
        if (v189 != *MEMORY[0x24BE53308])
        {
          sub_23F507338();
          v234 = v243;
          sub_23F383C64(v243, v140, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v139 + 16));
          sub_23F3B1D6C();
          v235 = sub_23F3B1BD4();
          if (sub_23F40B304(v235))
          {
            LODWORD(v276) = v187;
            v236 = sub_23F366668();
            v275 = sub_23F366668();
            v277 = v275;
            *(_DWORD *)v236 = 136315138;
            v274 = (v236 + 4);
            sub_23F5078EC();
            sub_23F61A4F8();
            sub_23F61AC78();
            sub_23F507C78(v142);
            sub_23F507B94();
            v237 = sub_23F61C16C();
            sub_23F507D2C(v237, v238);
            v281 = v239;
            sub_23F507D1C();
            sub_23F362984();
            (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v234, v258);
            sub_23F38485C(&dword_23F35A000, v147, (os_log_type_t)v276, "Unknown statementResult outcome: %s", (uint8_t *)v236);
            sub_23F5076B8((uint64_t)&a9);
            sub_23F3B17D4();
            sub_23F366530();
          }

          v240 = *(void (**)(uint64_t))(v139 + 8);
          v241 = sub_23F3ECB9C();
          v240(v241);
          sub_23F3841CC(v187, *(uint64_t (**)(uint64_t, _QWORD))(v261 + 8));
          sub_23F3B2110(v140);
          sub_23F384430();
LABEL_7:
          v114 = sub_23F507E20();
          goto LABEL_17;
        }
        if ((_DWORD)v147 != 6)
        {
          sub_23F489314(v147);
          if ((v224 & 1) != 0)
          {
            sub_23F507E0C();
            sub_23F507390();
            v225 = v242[0];
            sub_23F507240(v242[0], (uint64_t)v276, v226);
            sub_23F4F27C4();
            sub_23F4F27C4();
            v227 = sub_23F507DF8();
            v228 = sub_23F61C61C();
            if (sub_23F411520(v227))
            {
              v229 = (uint8_t *)sub_23F366668();
              v230 = sub_23F366668();
              sub_23F5071A8(v230);
              *(_DWORD *)v229 = 136315394;
              v275 = (uint64_t)(v229 + 4);
              sub_23F61B260();
              sub_23F3B121C(&qword_256E74E78, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
              sub_23F507114();
              sub_23F507058();
              sub_23F4F292C(v225, v231, &v277);
              v281 = v232;
              sub_23F61C790();
              sub_23F38432C();
              sub_23F3D98EC(v225, *(uint64_t (**)(uint64_t, uint64_t))(v145 + 8));
              sub_23F507008();
              sub_23F5071C4();
              sub_23F5070C8(v233);
              sub_23F384364();
              sub_23F4F2508();
              sub_23F4F2508();
              sub_23F3E025C(&dword_23F35A000, v227, v228, "Matched parameterDisambiguation event: %s with statement id: %s", v229);
              sub_23F507BA8((uint64_t)&a10);
              sub_23F507364();
              sub_23F366530();
            }

            sub_23F4F2508();
            sub_23F4F2508();
            sub_23F3D98EC(v225, *(uint64_t (**)(uint64_t, uint64_t))(v145 + 8));
            sub_23F384430();
            v220 = v188;
            goto LABEL_58;
          }
        }
        goto LABEL_64;
      }
      if ((_DWORD)v147 == 6)
        goto LABEL_64;
      sub_23F489314(v147);
      if ((v213 & 1) == 0)
        goto LABEL_64;
      sub_23F507338();
      sub_23F507390();
      sub_23F5070E4(v214);
      sub_23F4F27C4();
      sub_23F4F27C4();
      sub_23F3B1D6C();
      v215 = sub_23F3B1BD4();
      if (!sub_23F40B304(v215))
        goto LABEL_57;
      v193 = (uint8_t *)sub_23F366668();
      v216 = sub_23F366668();
      sub_23F5071A8(v216);
      sub_23F50702C(4.8151e-34);
      sub_23F3B121C(&qword_256E74E78, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
      sub_23F507114();
      sub_23F507058();
      sub_23F4F292C(v187, v217, &v277);
      sub_23F507078(v218);
      sub_23F38432C();
      sub_23F3D98EC(v146, *(uint64_t (**)(uint64_t, uint64_t))(v145 + 8));
      sub_23F507008();
      sub_23F5071C4();
      sub_23F5070C8(v219);
      sub_23F384364();
      sub_23F4F2508();
      sub_23F4F2508();
      v198 = "Matched parameterConfirmation event: %s with statement id: %s";
    }
LABEL_56:
    sub_23F3E025C(&dword_23F35A000, v147, (os_log_type_t)v275, v198, v193);
    sub_23F507364();
    sub_23F366530();
  }
  sub_23F383E88((uint64_t)v97, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 96));
  v117 = v271;
  v118 = v269;
  sub_23F507240(v269, (uint64_t)v97, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v271 + 32));
  sub_23F50742C();
  sub_23F61A8B8();
  v119 = v267;
  v93 = v268;
  v120 = sub_23F383E88(v22, *(uint64_t (**)(uint64_t, uint64_t))(v267 + 88));
  if (v120 == *MEMORY[0x24BE553A8])
  {
    v121 = *(void (**)(uint64_t, char *))(v117 + 8);
    v122 = v118;
    v123 = v97;
LABEL_11:
    v121(v122, v123);
    v116 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
    v114 = v22;
LABEL_16:
    v115 = v93;
    goto LABEL_17;
  }
  if (v120 == *MEMORY[0x24BE553B0])
  {
    sub_23F383E88(v22, *(uint64_t (**)(uint64_t, uint64_t))(v119 + 96));
    sub_23F507CB4();
    v132 = sub_23F384220();
    sub_23F3841C4(v132, v133, v134);
    v135 = sub_23F61A2DC();
    v137 = v136;
    sub_23F507150();
    sub_23F507204(v135, v137, v138, (uint64_t)&v277);
    sub_23F362D08();
    sub_23F507820();
    sub_23F3841CC(v265, *(uint64_t (**)(uint64_t, _QWORD))(v25 + 8));
    v107 = sub_23F50790C();
    goto LABEL_13;
  }
  v148 = v274;
  v149 = v273;
  if (v120 == *MEMORY[0x24BE553B8])
  {
    sub_23F383E88(v22, *(uint64_t (**)(uint64_t, uint64_t))(v119 + 96));
    v150 = v250;
    v151 = v249;
    v152 = sub_23F384918(v249, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v250 + 32));
    v153 = MEMORY[0x24266D804](v152);
    v154 = v248;
    sub_23F36FE58(v153, v248);
    sub_23F362D18();
    v155 = sub_23F61AC6C();
    sub_23F383740(v154, 1, v155);
    if (!v113)
    {
      sub_23F61A2DC();
      v180 = sub_23F5074FC();
      sub_23F383E88(v180, v181);
      sub_23F507150();
      v182 = sub_23F38422C();
      sub_23F4FB760(v182, v183, v149, v184, v148);
      sub_23F362D08();
      sub_23F507820();
      v185 = sub_23F507344();
      sub_23F3841CC(v185, v186);
      sub_23F384430();
      v107 = sub_23F50751C();
      goto LABEL_13;
    }
    sub_23F3D9844(v154, &qword_256E71E28);
    sub_23F362A28(v151, *(uint64_t (**)(uint64_t, uint64_t))(v150 + 8));
    v114 = sub_23F50751C();
LABEL_17:
    v116(v114, v115);
    goto LABEL_18;
  }
  if (v120 == *MEMORY[0x24BE55318])
  {
    v122 = sub_23F50751C();
    goto LABEL_11;
  }
  sub_23F61CC58();
  __break(1u);
}

uint64_t sub_23F4FB034()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  NSObject *v25;
  os_log_type_t v26;
  const char *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  os_unfair_lock_s *v43;
  uint64_t v44;
  uint64_t v45;

  sub_23F362C98();
  v44 = v5;
  v45 = v6;
  v43 = v0;
  v8 = v7;
  v10 = v9;
  v11 = sub_23F619E98();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F4DC39C();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F5072DC();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v36 - v15;
  type metadata accessor for PlanOverrideLoader();
  swift_initStackObject();
  sub_23F4EDE60();
  if (!v1)
  {
    v19 = v8;
    v36[0] = v10;
    v36[1] = v2;
    v37 = v3;
    v38 = v11;
    v20 = v43;
    v21 = v41;
    if ((_QWORD)v41)
    {
      sub_23F6190AC();
      sub_23F383EB0();
      sub_23F619E8C();
      v22 = sub_23F3B1A04();
      if (sub_23F482920(v22))
      {
        v23 = (uint8_t *)sub_23F366668();
        *(_DWORD *)v23 = 134217984;
        *(_QWORD *)&v41 = *(_QWORD *)(v21 + 16);
        sub_23F61C790();
        sub_23F384120();
        sub_23F507CC0();
        sub_23F38485C(v24, v25, v26, v27, v23);
        sub_23F366530();
      }

      sub_23F384120();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v38);
      *(_QWORD *)&v39 = v21;
      sub_23F5086D0((uint64_t *)&v39, &v41);
      v39 = v41;
      v40 = v42;
      sub_23F4F3B80((uint64_t)&v39);
      sub_23F5077B8();
      os_unfair_lock_lock(v20 + 30);
      swift_endAccess();
      sub_23F3C2EA0(0, &qword_256E786A0);
      v35 = sub_23F61BFEC();
      sub_23F4F3B20(v35);
      sub_23F5077B8();
      os_unfair_lock_unlock(v20 + 30);
      swift_endAccess();
      v17 = 1;
    }
    else
    {
      sub_23F6190AC();
      v28 = v19;
      swift_bridgeObjectRetain_n();
      v29 = sub_23F619E8C();
      v30 = sub_23F61C628();
      v31 = sub_23F3B1E8C(v30);
      v32 = v37;
      if (v31)
      {
        v33 = (uint8_t *)sub_23F366668();
        *(_QWORD *)&v41 = sub_23F366668();
        *(_DWORD *)v33 = 136315138;
        v43 = (os_unfair_lock_s *)(v33 + 4);
        sub_23F617BA0();
        sub_23F37AE00(v36[0], v28, (uint64_t *)&v41);
        *(_QWORD *)&v39 = v34;
        sub_23F61C790();
        swift_bridgeObjectRelease_n();
        sub_23F38485C(&dword_23F35A000, v29, OS_LOG_TYPE_DEFAULT, "Unable to load plan overrides json from %s", v33);
        sub_23F3B17D4();
        sub_23F366530();
      }

      sub_23F384A80();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v4, v38);
      v17 = 0;
    }
  }
  return v17 & 1;
}

void sub_23F4FB4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v5 = sub_23F3B1728();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F362930();
  v6 = (os_unfair_lock_s *)(v0 + 120);
  sub_23F5072F4();
  os_unfair_lock_lock((os_unfair_lock_t)(v0 + 120));
  swift_endAccess();
  sub_23F3B1450();
  v7 = *(_QWORD *)(v0 + 112);
  sub_23F383EB0();
  sub_23F383738();
  v8 = sub_23F3ECB90();
  sub_23F368750(v8, v9, v7);
  v11 = v10;
  sub_23F384120();
  sub_23F362984();
  if (!v11)
  {
    v12 = objc_allocWithZone(MEMORY[0x24BDD1798]);
    sub_23F383EB0();
    v13 = sub_23F3ECB90();
    v15 = sub_23F593C74(v13, v14, 1);
    sub_23F3B1450();
    sub_23F383EB0();
    sub_23F37E31C((uint64_t)v15, v4, v2);
    sub_23F507D74();
    sub_23F384120();
  }
  sub_23F5072F4();
  os_unfair_lock_unlock(v6);
  sub_23F507D74();
  sub_23F507E40();
  sub_23F362948();
}

#error "23F4FBB00: call analysis failed (funcsize=396)"

void sub_23F4FBDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char *v20;
  uint64_t v21;
  objc_class *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  NSObject *v78;
  NSObject *v79;
  void *v80;
  id v81;
  objc_class *v82;
  Class isa;
  objc_class *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  objc_class *v88;
  objc_class *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  objc_class *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  objc_class *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t, uint64_t);
  uint64_t v140;
  uint64_t (*v141)(void);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(uint64_t, uint64_t);
  uint64_t v150;
  void (*v151)(uint64_t, uint64_t);
  uint64_t (*v152)(uint64_t, uint64_t);
  char v153;
  uint64_t v154;
  NSObject *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t (*v159)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(uint64_t, uint64_t);
  uint64_t (*v167)(uint64_t, _QWORD);
  uint64_t v168;
  os_log_type_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  const char *v174;
  uint64_t (*v175)(uint64_t, _QWORD);
  os_log_type_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD v182[3];
  uint64_t v183;
  uint64_t v184;
  Class v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  NSObject *v192;
  objc_class *v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  objc_class *v198;
  uint64_t v199;
  objc_class *v200;
  uint64_t v201;
  uint64_t v202;
  objc_class **v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  NSObject *v209;
  void (*v210)(uint64_t, uint64_t);
  void (*v211)(uint64_t, uint64_t, uint64_t);
  objc_class *v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  void (*v224)(uint64_t, uint64_t, uint64_t);
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  id v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235[2];

  sub_23F362ABC();
  a19 = v23;
  a20 = v24;
  v187 = v25;
  v27 = v26;
  v29 = v28;
  v194 = v30;
  v188 = v31;
  v202 = v32;
  v233 = *(_QWORD *)(sub_23F618B78() - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F3834D0();
  v227 = v34;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v35);
  v215 = (char *)v182 - v36;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3838E4();
  v230 = v38;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F383780();
  sub_23F384990(v40);
  v218 = sub_23F35D2E8(&qword_256E78AC8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F362930();
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v42);
  v221 = (char *)v182 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E702C8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F3834D0();
  sub_23F39E564();
  v46 = MEMORY[0x24BDAC7A8](v45);
  v48 = (uint64_t)v182 - v47;
  MEMORY[0x24BDAC7A8](v46);
  sub_23F383780();
  v229 = v49;
  sub_23F39C56C();
  v226 = sub_23F618D88();
  v223 = *(_QWORD *)(v226 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F5075B8();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F383780();
  v228 = v53;
  v54 = sub_23F3B1690();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v57);
  v59 = (char *)v182 - v58;
  v199 = sub_23F35D2E8(&qword_256E78AD0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F384990((uint64_t)v182 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F35D2E8(&qword_256E78AD8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F383780();
  v198 = (objc_class *)v64;
  v65 = sub_23F3B1728();
  v66 = MEMORY[0x24BDAC7A8](v65);
  MEMORY[0x24BDAC7A8](v66);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F383780();
  v72 = *(_QWORD *)(v27 + 16);
  if (!v72)
    goto LABEL_66;
  v212 = v22;
  v182[2] = v69;
  v182[1] = v71;
  v189 = v70;
  v190 = v68;
  v73 = v27 + 32;
  v191 = v27;
  sub_23F383738();
  v74 = 0;
  v225 = v54;
  v222 = v59;
  v75 = 0x1F26F4000;
  v201 = v29;
  v214 = v20;
  v216 = v48;
  v206 = v21;
  v184 = v72;
  v183 = v27 + 32;
  while (1)
  {
    v197 = v74;
    v76 = (uint64_t *)(v73 + 24 * v74);
    v77 = *v76;
    v78 = v76[1];
    v79 = v76[2];
    sub_23F383738();
    v209 = v79;
    sub_23F384A00();
    v186 = v77;
    v192 = v78;
    v80 = (void *)sub_23F61C0E8();
    v81 = objc_msgSend(v194, *(SEL *)(v75 + 1120), v80);
    isa = v82;

    if (v81 == (id)sub_23F616A30())
    {
      sub_23F507414();
      sub_23F50726C();
      sub_23F3E0254();
      v168 = (uint64_t)v192;
      sub_23F384A00();
      sub_23F3B1EA4();
      sub_23F507654();
      v169 = sub_23F3B1BD4();
      if (sub_23F3B1604(v169))
      {
        v170 = sub_23F366668();
        v235[0] = sub_23F366668();
        *(_DWORD *)v170 = 136315394;
        sub_23F384A00();
        sub_23F37AE00(v186, v168, v235);
        v234 = v171;
        sub_23F507314();
        sub_23F384A80();
        sub_23F3E01D0();
        *(_WORD *)(v170 + 12) = 2080;
        sub_23F384324();
        sub_23F4F292C(v202, v172, v235);
        v234 = v173;
        sub_23F507314();
        sub_23F3E01D0();
        v174 = "Failed to match regex group: \"%s\" for utterance: \"%s\"";
        goto LABEL_70;
      }

      sub_23F384A80();
      sub_23F384A80();
LABEL_72:
      sub_23F384A80();
      sub_23F384430();
      sub_23F3841CC(v21, v175);
      goto LABEL_66;
    }
    v232 = (uint64_t)isa + (_QWORD)v81;
    if (__OFADD__(v81, isa))
      goto LABEL_78;
    v185 = isa;
    v231 = v81;
    ++v197;
    isa = v209[2].isa;
    sub_23F617BA0();
    v84 = 0;
    v85 = v226;
    v193 = isa;
LABEL_6:
    v21 = v199;
    v86 = (uint64_t)v203;
    if (v84 == isa)
    {
      v87 = 1;
      v200 = isa;
    }
    else
    {
      if (((unint64_t)v84 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
        return;
      }
      if (v84 >= v209[2].isa)
        goto LABEL_77;
      v88 = (objc_class *)((char *)v84 + 1);
      isa = v212;
      v89 = v84;
      sub_23F383EB8();
      v92 = v195 + *(int *)(v21 + 48);
      v93 = v225;
      sub_23F384840(v92, v91 + v90 + *((_QWORD *)isa + 9) * (_QWORD)v89, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))isa + 2));
      v94 = (char *)v203 + *(int *)(v21 + 48);
      *v203 = v89;
      v95 = v92;
      v85 = v226;
      v96 = v93;
      v75 = (uint64_t)&stru_250FE6000;
      (*((void (**)(char *, uint64_t, uint64_t))isa + 4))(v94, v95, v96);
      v86 = (uint64_t)v203;
      v87 = 0;
      v200 = v88;
      v29 = v201;
    }
    sub_23F507358(v86, v87);
    v97 = v86;
    v98 = v198;
    sub_23F383004(v97, (uint64_t)v198, &qword_256E78AD8);
    sub_23F383740((uint64_t)v98, 1, v21);
    if (!v122)
      break;
    sub_23F38458C();
    sub_23F61C5EC();
    if ((v153 & 1) != 0)
    {
      sub_23F38458C();
      swift_bridgeObjectRelease();
      sub_23F507414();
      sub_23F50726C();
      sub_23F3E0254();
      sub_23F507654();
      v176 = sub_23F40B504();
      if (sub_23F3B1604(v176))
      {
        v170 = sub_23F366668();
        v235[0] = sub_23F366668();
        *(_DWORD *)v170 = 136315394;
        sub_23F384324();
        sub_23F4F292C(v202, v177, v235);
        v234 = v178;
        sub_23F507314();
        sub_23F3E01D0();
        *(_WORD *)(v170 + 12) = 2080;
        v179 = sub_23F61C6DC();
        sub_23F482C90(v179, v180);
        v234 = v181;
        sub_23F507314();
        sub_23F38432C();
        v174 = "Could not get substring of utterance: \"%s\" using range: %s";
LABEL_70:
        sub_23F3E025C(&dword_23F35A000, isa, (os_log_type_t)v29, v174, (uint8_t *)v170);
        sub_23F507364();
        sub_23F366530();
      }

      goto LABEL_72;
    }
    v154 = sub_23F61C34C();
    MEMORY[0x24266F6AC](v154);
    sub_23F362984();
    sub_23F383E5C();
    sub_23F37E15C();
    sub_23F38458C();
    sub_23F384A80();
    v74 = v197;
    v20 = v214;
    v73 = v183;
    if (v197 == v184)
    {
      sub_23F507414();
      goto LABEL_66;
    }
  }
  v99 = *(_QWORD *)v98;
  sub_23F507CB4();
  v100 = v225;
  v211 = v101;
  ((void (*)(char *))v101)(v222);
  v217 = *(_QWORD *)(v29 + 16);
  if (v217)
  {
    v205 = v99;
    sub_23F383EB8();
    v220 = v29 + v102;
    v219 = *(_QWORD *)(v103 + 72);
    v224 = *(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16);
    sub_23F389CDC();
    v29 = 0;
    v104 = v230;
    v105 = v228;
    v106 = (uint64_t)v221;
    while (1)
    {
      v107 = v98;
      v224(v105, v220 + v219 * v29, v85);
      sub_23F618D64();
      v108 = v106;
      v109 = sub_23F61B92C();
      sub_23F383740(v106, 1, v109);
      if (v122)
      {
        sub_23F3D9844(v106, &qword_256E701F0);
        v111 = 1;
        v110 = v229;
      }
      else
      {
        v110 = v229;
        sub_23F61B8CC();
        sub_23F3B1CC8(v108, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 8));
        v111 = 0;
      }
      v112 = v225;
      sub_23F36196C(v110, v111, 1, v225);
      v98 = v107;
      sub_23F384840(v48, (uint64_t)v222, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v107 + 2));
      sub_23F4455EC();
      sub_23F36196C(v113, v114, v115, v112);
      v116 = (uint64_t)&v20[*(int *)(v218 + 48)];
      v117 = v110;
      v118 = v112;
      sub_23F389CB4(v117, (uint64_t)v20);
      sub_23F389CB4(v48, v116);
      v119 = sub_23F5074D4();
      sub_23F383740(v119, v120, v112);
      if (v122)
      {
        sub_23F383740(v116, 1, v112);
        v105 = v228;
        if (v122)
        {
          sub_23F507770((uint64_t)v20);
          sub_23F507770(v48);
          sub_23F507770(v229);
          goto LABEL_27;
        }
      }
      else
      {
        v121 = v213;
        sub_23F389CB4((uint64_t)v20, v213);
        sub_23F383740(v116, 1, v112);
        v105 = v228;
        if (!v122)
        {
          v123 = v207;
          v211(v207, v116, v118);
          sub_23F3B121C(&qword_256E70168, (void (*)(uint64_t))MEMORY[0x24BEB9D20]);
          v124 = sub_23F61C0A0();
          v20 = (char *)*((_QWORD *)v107 + 1);
          v125 = v123;
          v98 = v107;
          ((void (*)(uint64_t, uint64_t))v20)(v125, v118);
          v126 = sub_23F507924();
          ((void (*)(uint64_t))v20)(v126);
          v127 = sub_23F5076B8((uint64_t)&a18);
          sub_23F3D9844(v127, &qword_256E702C8);
          v48 = v216;
          v128 = sub_23F507924();
          sub_23F3D9844(v128, v129);
          sub_23F3D9844(v229, &qword_256E702C8);
          v106 = (uint64_t)v221;
          if ((v124 & 1) == 0)
            goto LABEL_54;
LABEL_27:
          v130 = sub_23F618D70();
          v131 = *(_QWORD *)(v130 + 16);
          if (v131)
          {
            v132 = v130
                 + ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80));
            v48 = *(_QWORD *)(v233 + 72);
            v20 = *(char **)(v233 + 16);
            v133 = v204;
            while (1)
            {
              sub_23F5074CC(v133, v132);
              v134 = sub_23F618B18();
              v135 = sub_23F507600();
              sub_23F5074CC(v135, v136);
              if (v134 < (uint64_t)v231)
                break;
              v137 = sub_23F618B6C();
              sub_23F3B224C(v104);
              sub_23F3B224C(v133);
              if (v232 < v137)
                goto LABEL_47;
              v132 += v48;
              --v131;
              v104 = v230;
              if (!v131)
              {
                sub_23F38458C();
                sub_23F5079B0();
                goto LABEL_34;
              }
            }
            sub_23F3B224C(v104);
            sub_23F3B224C(v133);
LABEL_47:
            sub_23F38458C();
            v98 = v212;
            v104 = v230;
            v20 = v214;
            v106 = (uint64_t)v221;
            v48 = v216;
            goto LABEL_53;
          }
          sub_23F38458C();
LABEL_34:
          v138 = v228;
          v85 = v226;
          v139 = v224;
          v224(v206, v228, v226);
          v140 = v205;
          if (v205)
          {
LABEL_35:
            sub_23F507900();
            sub_23F507778(v141);
            v142 = (uint64_t)v209[2].isa - 1;
            v143 = v208;
            v139(v208, v138, v85);
            if (v140 != v142)
              goto LABEL_58;
            v20 = *(char **)(sub_23F618D70() + 16);
            if (v20)
            {
              sub_23F507530();
              while (1)
              {
                v144 = v227;
                sub_23F507AB4();
                v145 = sub_23F618B6C();
                sub_23F362A28(v144, *(uint64_t (**)(uint64_t, uint64_t))(v233 + 8));
                if (v145 == v232)
                  break;
                v139 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)v139 + v48);
                if (!--v20)
                {
                  sub_23F38458C();
                  v98 = v212;
                  v48 = v216;
                  goto LABEL_49;
                }
              }
              sub_23F38458C();
              v85 = v226;
              sub_23F5079B0();
              v143 = v208;
LABEL_58:
              v210(v143, v85);
              sub_23F4DC500(v228);
              v29 = v201;
              sub_23F362D08();
              sub_23F384430();
              sub_23F383F80((uint64_t)v222, v152);
              v75 = 0x250FE6000;
              isa = v193;
              v84 = v200;
              goto LABEL_6;
            }
            sub_23F38458C();
            v98 = v212;
LABEL_49:
            sub_23F507194((uint64_t)&a14);
            v104 = v230;
          }
          else
          {
            v20 = *(char **)(sub_23F618D70() + 16);
            if (v20)
            {
              sub_23F507530();
              while (1)
              {
                v146 = (uint64_t)v215;
                sub_23F507AB4();
                v147 = sub_23F618B18();
                sub_23F362A28(v146, *(uint64_t (**)(uint64_t, uint64_t))(v233 + 8));
                if ((id)v147 == v231)
                  break;
                v139 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)v139 + v48);
                if (!--v20)
                {
                  sub_23F38458C();
                  v98 = v212;
                  v104 = v230;
                  v48 = v216;
                  goto LABEL_51;
                }
              }
              sub_23F38458C();
              sub_23F5079B0();
              v85 = v226;
              v138 = v228;
              v139 = v224;
              goto LABEL_35;
            }
            sub_23F38458C();
            v98 = v212;
LABEL_51:
            v148 = sub_23F507900();
            v149(v148, v226);
          }
          v20 = v214;
          v106 = (uint64_t)v221;
LABEL_53:
          v105 = v228;
          goto LABEL_54;
        }
        sub_23F3D98EC(v121, *((uint64_t (**)(uint64_t, uint64_t))v107 + 1));
        v48 = v216;
      }
      sub_23F3D9844((uint64_t)v20, &qword_256E78AC8);
      sub_23F507770(v48);
      sub_23F507770(v229);
      v106 = (uint64_t)v221;
LABEL_54:
      ++v29;
      v150 = sub_23F5074FC();
      v85 = v226;
      v151(v150, v226);
      if (v29 == v217)
      {
        sub_23F362D18();
        v155 = v192;
        v100 = v225;
        goto LABEL_63;
      }
    }
  }
  v155 = v209;
LABEL_63:
  swift_bridgeObjectRelease();
  sub_23F362D18();
  sub_23F362984();
  sub_23F507414();
  v156 = v196;
  sub_23F5075E8();
  v157 = sub_23F507954();
  v158 = (uint64_t)v222;
  sub_23F4244A8(v157, (uint64_t)v222, v159);
  sub_23F5075F0();
  v160 = sub_23F3B1BD4();
  if (sub_23F411520(v155))
  {
    v161 = v29;
    v162 = sub_23F366668();
    v235[0] = sub_23F366668();
    *(_DWORD *)v162 = 136315650;
    v163 = sub_23F61B9C8();
    sub_23F482C90(v163, v164);
    v234 = v165;
    sub_23F507DF0();
    sub_23F362984();
    sub_23F5075F8(v161);
    *(_WORD *)(v162 + 12) = 2048;
    sub_23F5078CC((uint64_t)v231);
    *(_WORD *)(v162 + 22) = 2048;
    sub_23F5078CC(v232);
    _os_log_impl(&dword_23F35A000, v155, v160, "Unable to find span with label: \"%s\" and within range: [%ld, %ld] returned by the EntitySpanMatcher", (uint8_t *)v162, 0x20u);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v166 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v98 + 1);
  v166(v29, v100);

  sub_23F507230();
  sub_23F3841CC(v156, v167);
  v166(v158, v100);
LABEL_66:
  sub_23F362948();
}

void sub_23F4FCE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_23F362C98();
  v50 = v27;
  v29 = v28;
  v53 = v30;
  v32 = v31;
  v34 = v33;
  v54 = sub_23F61B1C4();
  v51 = *(_QWORD *)(v54 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3B1C68();
  sub_23F61B164();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F3D9B88();
  v37 = sub_23F619E98();
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3D9CCC();
  if (!*(_QWORD *)(*(_QWORD *)v32 + 16))
  {
    sub_23F50760C();
    v44 = sub_23F5074D4();
    goto LABEL_7;
  }
  v47 = v29;
  v48 = v34;
  sub_23F6190AC();
  v39 = sub_23F619E8C();
  v40 = sub_23F61C61C();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)sub_23F366668();
    *(_WORD *)v41 = 0;
    sub_23F4114BC(&dword_23F35A000, v39, v40, "Replacing expressions with correct event ids", v41);
    sub_23F366530();
  }

  sub_23F362A28(v24, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
  sub_23F4FD048(v32, v50, v53, a21, a22, a23, a24, v42, v46, a21, a22, a23, a24, v47, v48, v50, v24, v51, v53, v54);
  sub_23F362CDC();
  sub_23F61B128();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v52 + 104))(v26, *MEMORY[0x24BE569E8], v55);
  sub_23F389CDC();
  Session.Event.init(programStatements:transcript:overrideId:source:)();
  if (!v25)
  {
    v43 = sub_23F50760C();
    v44 = v49;
    v45 = 0;
LABEL_7:
    sub_23F36196C(v44, v45, 1, v43);
  }
  sub_23F362870();
}

void sub_23F4FD048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unint64_t v20;
  void (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(uint64_t);
  uint64_t v141;
  __int128 v142;
  uint64_t (*v143)(uint64_t, uint64_t, uint64_t);
  unint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(void);
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t (*v156)(uint64_t, uint64_t, uint64_t);
  void (*v157)(uint64_t, uint64_t, void (*)(_QWORD));
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t);
  void *v162;
  os_log_type_t v163;
  _WORD *v164;
  void *v165;
  NSObject *v166;
  os_log_type_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  char v171;
  uint64_t v172;
  uint64_t (*v173)(uint64_t, _QWORD, uint64_t);
  void (*v174)(uint64_t, uint64_t);
  uint64_t v175;
  uint64_t v176;
  char v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(_QWORD);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  void (*v193)(unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t));
  uint64_t v194;
  char v195;
  uint64_t v196;
  uint64_t (*v197)(uint64_t, _QWORD, uint64_t);
  char v198;
  os_log_type_t v199;
  uint8_t *v200;
  uint64_t (*v201)(uint64_t, uint64_t, uint64_t);
  uint64_t v202;
  uint64_t v203;
  uint64_t (*v204)(uint64_t, uint64_t, uint64_t);
  uint64_t v205;
  uint64_t v206;
  os_log_type_t v207;
  uint64_t v208;
  int v209;
  int v210;
  uint64_t (*v211)(uint64_t, uint64_t, uint64_t);
  char v212;
  void (*v213)(uint64_t, unint64_t);
  uint64_t (*v214)(uint64_t, uint64_t, _QWORD);
  uint64_t v215;
  uint64_t (*v216)(uint64_t, uint64_t, _QWORD);
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t (*v224)(uint64_t, uint64_t, uint64_t);
  uint64_t v225;
  void (*v226)(uint64_t);
  unint64_t v227;
  char v228;
  uint64_t v229;
  uint64_t v230;
  void (*v231)(_QWORD);
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  os_log_type_t v246;
  _WORD *v248;
  uint64_t v249;
  char v250;
  uint64_t v251;
  uint64_t (*v252)(uint64_t, _QWORD, uint64_t);
  os_log_type_t v253;
  int v254;
  _WORD *v255;
  uint64_t (*v256)(uint64_t, _QWORD);
  char v257;
  uint64_t *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t (*v261)(uint64_t, uint64_t, uint64_t);
  unint64_t v262;
  uint64_t v263;
  uint64_t (*v264)(uint64_t, _QWORD, _QWORD);
  char v265;
  uint64_t v266;
  uint64_t (*v267)(uint64_t, _QWORD, uint64_t);
  uint64_t (*v268)(uint64_t, _QWORD);
  uint64_t v269;
  char v270;
  int v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t (*v274)(uint64_t, uint64_t, uint64_t);
  uint64_t v275;
  unint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t (*v279)(uint64_t, _QWORD, _QWORD);
  char v280;
  uint64_t v281;
  uint64_t (*v282)(uint64_t, _QWORD, uint64_t);
  char v283;
  uint64_t v284;
  uint64_t (*v285)(uint64_t, _QWORD, uint64_t);
  uint64_t v286;
  uint64_t (*v287)(uint64_t, _QWORD);
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  unint64_t v296;
  unint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t (*v302)(uint64_t, _QWORD, _QWORD);
  char v303;
  uint64_t v304;
  uint64_t (*v305)(uint64_t, _QWORD, uint64_t);
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t (*v309)(uint64_t, uint64_t, _QWORD);
  uint64_t v310;
  uint64_t v311;
  uint64_t (*v312)(uint64_t, uint64_t, uint64_t);
  char v313;
  uint64_t *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t (*v317)(uint64_t, _QWORD);
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  unint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t (*v324)(uint64_t, _QWORD, _QWORD);
  char v325;
  uint64_t v326;
  uint64_t (*v327)(uint64_t, _QWORD, uint64_t);
  char v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t (*v332)(uint64_t, uint64_t, _QWORD);
  uint64_t v333;
  uint64_t v334;
  void (*v335)(void);
  os_log_type_t v336;
  _BOOL4 v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t (*v351)(uint64_t, _QWORD, _QWORD);
  char v352;
  uint64_t v353;
  uint64_t (*v354)(uint64_t, _QWORD, uint64_t);
  uint64_t v355;
  uint64_t (*v356)(uint64_t, _QWORD);
  void (*v357)(_QWORD);
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  void (*v365)(_QWORD);
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  __int128 v372;
  uint64_t v373;
  void (*v374)(_QWORD);
  uint64_t v375;
  uint64_t (*v376)(uint64_t, uint64_t, uint64_t);
  uint64_t v377;
  unint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  unsigned int v385;
  unint64_t v386;
  uint64_t v387;
  int v388;
  unint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t *v394;
  uint64_t (*v395)(uint64_t, uint64_t, uint64_t);
  void (*v396)(_QWORD);
  int v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  _QWORD v404[2];
  uint64_t v405;
  uint64_t v406;
  unint64_t v407;
  unint64_t v408;
  unint64_t v409;
  uint64_t v410;
  int v411;
  unsigned int v412;
  uint64_t v413;
  unint64_t v414;
  uint64_t v415;
  int v416;
  uint64_t v417;
  void *v418;
  uint64_t v419;
  uint64_t *v420;
  unsigned int v421;
  unint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  char *v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  __int128 v432;
  int v433;
  void (*v434)(_QWORD);
  uint64_t v435;
  uint64_t v436;
  uint64_t (*v437)(uint64_t, uint64_t, uint64_t);
  uint64_t v438;
  unint64_t v439;
  uint64_t (*v440)(uint64_t, uint64_t, uint64_t);
  void (*v441)(uint64_t, uint64_t);
  uint64_t v442;
  char *v443;
  unint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451[2];
  uint64_t v452;
  uint64_t v453;
  uint64_t *v454;
  uint64_t v455;
  uint64_t v456;
  unint64_t v457;
  uint64_t v458;
  uint64_t (*v459)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v460)(uint64_t, uint64_t, uint64_t);
  uint64_t v461;
  unint64_t v462;
  void (*v463)(_QWORD);
  char *v464;
  unint64_t v465;
  uint64_t v466;
  _QWORD v467[2];
  void (*v468)(char *, uint64_t);
  uint64_t (*v469)(uint64_t, uint64_t, uint64_t);
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t (*v475)(uint64_t, uint64_t, uint64_t);
  uint64_t v476;
  void (*v477)(unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t));
  uint64_t (*v478)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v479)(uint64_t, uint64_t, uint64_t);
  uint64_t v480;
  uint64_t v481;

  sub_23F362ABC();
  a19 = v22;
  a20 = v23;
  v422 = v20;
  v406 = v24;
  v405 = v25;
  v404[1] = v26;
  v410 = v27;
  v435 = v28;
  v415 = v29;
  v31 = v30;
  sub_23F35D2E8(&qword_256E703B8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F36285C();
  v404[0] = v33;
  v34 = sub_23F3B1728();
  sub_23F383E7C(v34, (uint64_t)&a10);
  v419 = v35;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F507874();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v38);
  v464 = (char *)&v370 - v39;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F383780();
  sub_23F3B13F0(v43);
  v44 = sub_23F61A570();
  sub_23F383E7C(v44, (uint64_t)&v464);
  v46 = v45;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F3B13F0((uint64_t)&v370 - v50);
  v51 = sub_23F61A738();
  sub_23F383E7C(v51, (uint64_t)&v410);
  v387 = v52;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F36285C();
  sub_23F3B13F0(v54);
  v55 = sub_23F61A24C();
  sub_23F383E7C(v55, (uint64_t)&v452);
  v417 = v56;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F507858();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F3B13F0((uint64_t)&v370 - v59);
  v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23F61A780();
  v384 = *((_QWORD *)v60 - 1);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v61);
  v63 = (uint64_t)&v370 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F383780();
  sub_23F3B13F0(v66);
  v67 = sub_23F61A3D8();
  sub_23F383E7C(v67, (uint64_t)v404);
  v383 = v68;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F36285C();
  sub_23F3B13F0(v70);
  v71 = sub_23F61A75C();
  v430 = *(_QWORD *)(v71 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F36285C();
  sub_23F3B13F0(v73);
  v74 = sub_23F61A2C4();
  sub_23F383E7C(v74, (uint64_t)&v420);
  v395 = v75;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F36285C();
  v78 = sub_23F3B13F0(v77);
  v79 = type metadata accessor for PlanOverridesService.EventReference(v78);
  sub_23F383E7C(v79, (uint64_t)&v477);
  v391 = v80;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v81);
  sub_23F384990((uint64_t)&v370 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F35D2E8(&qword_256E78A98);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v83);
  sub_23F36285C();
  sub_23F3B13F0(v84);
  v85 = sub_23F61B2C0();
  v467[0] = *(_QWORD *)(v85 - 8);
  v467[1] = v85;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v86);
  sub_23F36285C();
  v466 = v87;
  sub_23F35D2E8(&qword_256E702E0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v88);
  v443 = (char *)&v370 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  v470 = sub_23F50760C();
  v473 = *(_QWORD *)(v470 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v90);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v91);
  sub_23F3838E4();
  v472 = v92;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v93);
  v426 = (char *)&v370 - v94;
  v95 = sub_23F428AE4();
  sub_23F383E7C(v95, (uint64_t)&v429);
  v403 = v96;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v97);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v98);
  sub_23F383780();
  sub_23F3B13F0(v99);
  v100 = sub_23F61A204();
  sub_23F383E7C(v100, (uint64_t)&v427);
  v402 = v101;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v102);
  sub_23F36285C();
  v104 = sub_23F507A74(v103);
  sub_23F383E7C(v104, (uint64_t)v467);
  v436 = v105;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v106);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v107);
  sub_23F383780();
  sub_23F3B13F0(v108);
  v109 = sub_23F61A684();
  v438 = *(_QWORD *)(v109 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v110);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v111);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v112);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v113);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v114);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v115);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v116);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v117);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v118);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v119);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v120);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v121);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v122);
  sub_23F383780();
  sub_23F3B13F0(v123);
  v124 = sub_23F617D08();
  v471 = *(_QWORD *)(v124 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v125);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v126);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v127);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v128);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v129);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v130);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v131);
  sub_23F3838E4();
  v475 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v132;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v133);
  sub_23F3838E4();
  v476 = v134;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v135);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v136);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v137);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v138);
  sub_23F383780();
  sub_23F384990(v139);
  sub_23F3B121C(&qword_256E6FFB0, v140);
  v479 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v124;
  v481 = sub_23F61BFEC();
  v454 = v31;
  v141 = *v31;
  if (!*(_QWORD *)(*v31 + 16))
  {
LABEL_159:
    swift_bridgeObjectRelease();
    sub_23F362948();
    return;
  }
  v428 = *(_QWORD *)(*v31 + 16);
  if ((sub_23F3F5E54() & 1) == 0)
    goto LABEL_174;
LABEL_3:
  v143 = v46;
  v400 = 0;
  *v454 = v141;
  v433 = *MEMORY[0x24BE54D08];
  v416 = *MEMORY[0x24BE54CD8];
  v411 = *MEMORY[0x24BE54CD0];
  v397 = *MEMORY[0x24BE54CE8];
  v388 = *MEMORY[0x24BE54D30];
  v385 = *MEMORY[0x24BE54D28];
  HIDWORD(v377) = *MEMORY[0x24BE54D38];
  HIDWORD(v375) = *MEMORY[0x24BE54CF0];
  v421 = *MEMORY[0x24BE556B0];
  v412 = *MEMORY[0x24BE556A0];
  *(_QWORD *)&v142 = 67109376;
  v432 = v142;
  *(_QWORD *)&v142 = 136315138;
  v372 = v142;
  v371 = MEMORY[0x24BEE4AD8] + 8;
  v460 = v46;
  v376 = v60;
  sub_23F507EBC();
  v145 = v428;
  v374 = v21;
  v414 = v20;
  v393 = v63;
  v378 = v71;
  v425 = v109;
  while (1)
  {
    if (v144 == v145)
      goto LABEL_164;
    v60 = v143;
    v146 = v454;
    if (v144 >= *(_QWORD *)(*v454 + 16))
      goto LABEL_165;
    v451[1] = (*(unsigned __int8 *)(v438 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v438 + 80);
    v147 = *(_QWORD *)(v438 + 72);
    v462 = v144;
    v452 = v147 * v144;
    v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v438 + 16);
    v148 = sub_23F507948((uint64_t)&v458);
    sub_23F5074CC(v148, v149);
    sub_23F5079A0();
    sub_23F61A660();
    sub_23F384220();
    sub_23F507778(v150);
    v151 = v451[0];
    sub_23F502F7C(v71, v451[0]);
    v152 = v471;
    v20 = (unint64_t)v479;
    v477 = *(void (**)(unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(v471 + 8);
    v477(v71, v479);
    v478 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 16);
    v478(v446, v151, v20);
    v21 = (void (*)(_QWORD))*v146;
    if ((sub_23F406958() & 1) == 0)
    {
      sub_23F492508();
      v21 = v357;
    }
    v143 = v60;
    sub_23F507140();
    if (v153)
      goto LABEL_166;
    sub_23F507930();
    v20 = v154 + v155;
    sub_23F61A66C();
    *v454 = (uint64_t)v21;
    sub_23F507140();
    if (v153)
      goto LABEL_167;
    sub_23F5074CC(v453, v20);
    v63 = v431;
    sub_23F61A63C();
    v109 = v436;
    v156 = v437;
    (*(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(v436 + 88))(v63, v437);
    sub_23F5073BC();
    if (v177)
    {
      sub_23F507420(*(uint64_t (**)(uint64_t, uint64_t))(v109 + 96));
      v157 = (void (*)(uint64_t, uint64_t, void (*)(_QWORD)))*((_QWORD *)v60 + 4);
      v158 = sub_23F507948((uint64_t)&v456);
      v21 = v434;
      v157(v158, v63, v434);
      v63 = *((_QWORD *)v60 + 2);
      v159 = sub_23F507BA8((uint64_t)&v453);
      ((void (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), void (*)(_QWORD)))v63)(v159, v156, v21);
      v160 = sub_23F384AB4();
      v161(v160);
      sub_23F5073BC();
      if (!v177)
      {
        sub_23F5073BC();
        if (v198)
        {
          v141 = v424;
          sub_23F383E64(v424, *((uint64_t (**)(uint64_t, uint64_t))v60 + 12));
          v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v141;
          v20 = v408;
          sub_23F50712C();
          sub_23F619E8C();
          v199 = sub_23F3B1BD4();
          if (sub_23F40B304(v199))
          {
            v200 = (uint8_t *)sub_23F366668();
            *(_WORD *)v200 = 0;
            sub_23F4114BC(&dword_23F35A000, v141, (os_log_type_t)v20, "Found array value", v200);
            sub_23F366530();
          }

          sub_23F384430();
          v468 = (void (*)(char *, uint64_t))v201;
          ((void (*)(unint64_t, uint64_t))v201)(v408, v456);
          v202 = v398;
          v465 = *((_QWORD *)v46 + 2);
          if (v465)
          {
            v71 = 0;
            v203 = (uint64_t)v479;
            v109 = v392;
            while (v71 < *((_QWORD *)v46 + 2))
            {
              sub_23F383EB8();
              v474 = (uint64_t)v46;
              v469 = v204;
              v63 = *(_QWORD *)(v205 + 72) * v71;
              v206 = sub_23F5076B8((uint64_t)&a17);
              v60 = v478;
              ((void (*)(uint64_t))v478)(v206);
              v141 = v481;
              sub_23F3668F4();
              v21 = v463;
              sub_23F503050();
              sub_23F362D18();
              sub_23F50712C();
              v60(v202, (uint64_t)v46, v203);
              v60(v109, (uint64_t)v21, v203);
              sub_23F619E8C();
              v207 = sub_23F3B1BD4();
              if (sub_23F3B1604(v207))
              {
                v208 = sub_23F366668();
                v209 = sub_23F507A28((_DWORD *)v208, (uint64_t)&v461);
                v477(v202, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v203);
                *(_DWORD *)(v208 + 4) = v209;
                *(_WORD *)(v208 + 8) = 1024;
                v210 = sub_23F617CFC();
                sub_23F507D14(v109);
                *(_DWORD *)(v208 + 10) = v210;
                _os_log_impl(&dword_23F35A000, (os_log_t)v141, (os_log_type_t)v21, "Replacing statement ID ref %u with %u", (uint8_t *)v208, 0xEu);
                sub_23F366530();
              }
              v20 = (unint64_t)v477;
              v477(v109, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v203);
              sub_23F5075F8(v202);

              v468(v464, v456);
              v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v474;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_23F4924F8();
                v46 = v211;
              }
              if (v71 >= *((_QWORD *)v46 + 2))
                goto LABEL_163;
              ++v71;
              sub_23F507278((uint64_t)v469 + (_QWORD)v46 + v63, (uint64_t)v463, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v471 + 40));
              sub_23F507D24();
              if (v465 == v71)
                goto LABEL_105;
            }
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
            goto LABEL_173;
          }
LABEL_105:
          sub_23F5071F0((uint64_t)v440);
          v109 = (uint64_t)v420;
          *v420 = (uint64_t)v46;
          v143 = v460;
          (*((void (**)(uint64_t, _QWORD, void (*)(_QWORD)))v460 + 13))(v109, v412, v434);
          sub_23F507104(v109, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v436 + 104));
          sub_23F383E5C();
          sub_23F506FDC();
          sub_23F507254();
          v283 = sub_23F506FF4();
          *(_QWORD *)v20 = v141;
          if ((v283 & 1) == 0)
          {
            sub_23F5072EC();
            sub_23F5074A0(v361);
          }
          sub_23F507BFC();
          v21 = (void (*)(_QWORD))v477;
          sub_23F507140();
          if (v153)
            goto LABEL_172;
          v284 = sub_23F506FB4();
          sub_23F507134(v284, v285);
          sub_23F3841CC(v427, *((uint64_t (**)(uint64_t, _QWORD))v143 + 1));
          sub_23F5070A0();
          v286 = sub_23F507970();
          v21(v286);
          sub_23F3837B0();
        }
        else
        {
          v20 = v409;
          sub_23F50712C();
          sub_23F619E8C();
          v253 = sub_23F3B1BD4();
          sub_23F40B304(v253);
          sub_23F5078BC();
          if (v254)
          {
            v255 = (_WORD *)sub_23F366668();
            sub_23F3F0EF4(v255);
            sub_23F3E2784(&dword_23F35A000, v141, (os_log_type_t)v20, "Value not of interest for plan overrides, skipping");
            sub_23F366530();
          }

          sub_23F384430();
          sub_23F3841CC(v409, v256);
          v141 = *((_QWORD *)v60 + 1);
          sub_23F507E14((uint64_t)&v456);
          sub_23F5070A0();
          sub_23F507438();
          sub_23F507E14((uint64_t)&v453);
        }
        goto LABEL_125;
      }
      sub_23F383E64(v141, *((uint64_t (**)(uint64_t, uint64_t))v60 + 12));
      v141 = *(_QWORD *)(v141 + 8);
      v162 = v418;
      sub_23F50712C();
      sub_23F619E8C();
      v163 = sub_23F3B1A04();
      if (sub_23F49BA04(v163))
      {
        v164 = (_WORD *)sub_23F366668();
        sub_23F507DB0(v164);
        sub_23F507764();
        sub_23F4114BC(v165, v166, v167, "Found string value", (uint8_t *)v46);
        sub_23F366530();
      }

      sub_23F507B84((uint64_t)&v446);
      v168 = sub_23F482A1C();
      v109 = sub_23F507BC8(v168, v169);
      v20 = v170;
      v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v404[0];
      sub_23F502450();
      sub_23F362D18();
      v21 = v434;
      sub_23F383740((uint64_t)v60, 1, (uint64_t)v434);
      if (!v177)
      {
        sub_23F362984();
        v157(v413, (uint64_t)v60, v21);
        v20 = v407;
        sub_23F50712C();
        sub_23F619E8C();
        v246 = sub_23F3B1BD4();
        if (sub_23F40B304(v246))
        {
          v248 = (_WORD *)sub_23F366668();
          sub_23F3F0EF4(v248);
          sub_23F3E2784(&dword_23F35A000, v141, (os_log_type_t)v20, "Converted span string to number or BOOL");
          sub_23F366530();
        }

        sub_23F507B84((uint64_t)&v435);
        sub_23F5072CC((uint64_t)v440);
        v249 = sub_23F50773C((uint64_t)&v448);
        ((void (*)(uint64_t, uint64_t, void (*)(_QWORD)))v63)(v249, v413, v21);
        sub_23F507104(v109, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v436 + 104));
        sub_23F506FDC();
        sub_23F507254();
        v250 = sub_23F506FF4();
        *(_QWORD *)v20 = v141;
        v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v477;
        if ((v250 & 1) == 0)
        {
          sub_23F5072EC();
          sub_23F5074A0(v360);
        }
        v109 = v425;
        sub_23F507140();
        if (v153)
          goto LABEL_171;
        v251 = sub_23F506FB4();
        sub_23F507134(v251, v252);
        v141 = *((_QWORD *)v143 + 1);
        v20 = (unint64_t)v434;
        sub_23F4DC500(v413);
        sub_23F4DC500(v427);
        goto LABEL_87;
      }
      sub_23F3D9844((uint64_t)v60, &qword_256E703B8);
      v63 = (uint64_t)v440;
      sub_23F5072CC((uint64_t)v440);
      v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v420;
      *v420 = v109;
      *((_QWORD *)v46 + 1) = v20;
      (*((void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t), _QWORD, void (*)(_QWORD)))v143
       + 13))(v46, v421, v21);
      sub_23F507104((uint64_t)v46, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v436 + 104));
      sub_23F506FDC();
      sub_23F4414B0();
      sub_23F50730C();
      v171 = sub_23F506FF4();
      *(_QWORD *)v20 = v141;
      if ((v171 & 1) == 0)
      {
        sub_23F5072EC();
        sub_23F5074A0(v359);
      }
      sub_23F5078BC();
      sub_23F507140();
      if (v153)
        goto LABEL_170;
      v172 = sub_23F506FB4();
      sub_23F507134(v172, v173);
      v174 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v143 + 1);
      v175 = v427;
      v176 = (uint64_t)v434;
LABEL_22:
      v174(v175, v176);
LABEL_87:
      sub_23F5070A0();
      sub_23F507438();
      goto LABEL_125;
    }
    sub_23F5073BC();
    if (v177)
    {
      sub_23F507420(*(uint64_t (**)(uint64_t, uint64_t))(v109 + 96));
      v178 = v63;
      v179 = v417;
      v180 = v423;
      sub_23F383C64(v423, v178, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v417 + 32));
      v181 = sub_23F61A240();
      sub_23F4FF5B8(v181, v182, v435, v183, v184, v185, v186, v187, v370, v371, v372, *((uint64_t *)&v372 + 1), v373, (uint64_t)v374, v375, (uint64_t)v376, v377, v378, v379,
        v380);
      v21 = v188;
      v141 = v189;
      sub_23F362C60();
      v190 = v414;
      sub_23F383C64(v414, v180, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v179 + 16));
      if (!v141)
      {
        v191 = sub_23F61A240();
        v190 = v414;
        v21 = (void (*)(_QWORD))v191;
        v141 = v192;
      }
      v193 = v477;
      v63 = *(_QWORD *)(v417 + 8);
      sub_23F507EA8(v190);
      v194 = sub_23F61A228();
      sub_23F5079A0();
      sub_23F61A660();
      v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v481;
      sub_23F383E5C();
      v20 = v422;
      sub_23F5009F4((uint64_t)v21, v141, v194, v71, v415, (uint64_t)v46, v435, v405, v406, v369, v370, v371, v372, *((uint64_t *)&v372 + 1), v373, (uint64_t)v374, v375, (uint64_t)v376, v377,
        v378,
        v379);
      sub_23F3837B0();
      sub_23F362C60();
      sub_23F362D18();
      v193(v71, v479);
      v195 = sub_23F506FF4();
      *(_QWORD *)v20 = v141;
      if ((v195 & 1) == 0)
      {
        sub_23F5072EC();
        sub_23F5074A0(v358);
      }
      v109 = v425;
      sub_23F507140();
      if (v153)
        goto LABEL_169;
      v196 = sub_23F506FB4();
      sub_23F507134(v196, v197);
      sub_23F507EA8(v423);
LABEL_124:
      sub_23F5070A0();
      sub_23F507980();
      goto LABEL_125;
    }
    sub_23F5073BC();
    v213 = (void (*)(uint64_t, unint64_t))v477;
    if (v212)
    {
      sub_23F507420(*(uint64_t (**)(uint64_t, uint64_t))(v109 + 96));
      sub_23F507594();
      sub_23F3841C4(v401, v63, v214);
      v215 = sub_23F61A1F8();
      sub_23F507634();
      sub_23F61B128();
      sub_23F507594();
      sub_23F3841C4(v449, v141, v216);
      v445 = *(_QWORD *)(v215 + 16);
      v399 = v215;
      if (!v445)
      {
        sub_23F389CDC();
        v455 = MEMORY[0x24BEE4AF8];
        goto LABEL_110;
      }
      v217 = v471;
      v218 = (*(unsigned __int8 *)(v217 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v217 + 80);
      v444 = v215 + v218;
      sub_23F389CDC();
      v219 = 0;
      v220 = *(_QWORD *)(v217 + 72);
      v457 = v218;
      v474 = v220;
      v439 = v220 + v218;
      v455 = MEMORY[0x24BEE4AF8];
      v21 = (void (*)(_QWORD))v470;
      while (1)
      {
        v458 = v219;
        v221 = sub_23F507BA8((uint64_t)&a15);
        v46 = v478;
        ((void (*)(uint64_t))v478)(v221);
        v222 = sub_23F61B14C();
        v20 = (unint64_t)v479;
        v71 = v222;
        v46(v476, v217, (uint64_t)v479);
        v63 = *(_QWORD *)(v71 + 16);
        if (!v63)
        {
LABEL_69:
          v217 = (uint64_t)v443;
          v233 = sub_23F5073B0();
          goto LABEL_70;
        }
        sub_23F383EB8();
        v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v71 + v223);
        v465 = v71;
        v459 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v71 + v223);
        while (1)
        {
          if (v63 > *(_QWORD *)(v71 + 16))
            goto LABEL_161;
          v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v63 - 1);
          v224 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v473 + 16);
          v468 = (void (*)(char *, uint64_t))((char *)v46 + *(_QWORD *)(v473 + 72) * (v63 - 1));
          v469 = v224;
          sub_23F362D94(v472, (uint64_t)v468, v224);
          sub_23F61B2CC();
          v217 = sub_23F61B284();
          v225 = sub_23F3B2118();
          v226(v225);
          v21 = *(void (**)(_QWORD))(v217 + 16);
          if (!v21)
          {
            sub_23F362D18();
            v20 = (unint64_t)v479;
            goto LABEL_63;
          }
          v46 = v475;
          sub_23F507278((uint64_t)v475, v217 + v457, v478);
          sub_23F3B121C(&qword_256E701E8, (void (*)(uint64_t))MEMORY[0x24BE52140]);
          v71 = v227;
          sub_23F3668F4();
          v228 = sub_23F61C0A0();
          sub_23F5077A0((uint64_t)v46);
          if ((v228 & 1) != 0)
            break;
          if (v21 != (void (*)(_QWORD))1)
          {
            v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v217 + v439);
            v229 = 1;
            v20 = (unint64_t)v479;
            while (1)
            {
              v109 = (uint64_t)v475;
              v230 = sub_23F3ECB9C();
              ((void (*)(uint64_t))v478)(v230);
              v231 = (void (*)(_QWORD))(v229 + 1);
              if (__OFADD__(v229, 1))
                break;
              v109 = sub_23F61C0A0();
              sub_23F507D24();
              if ((v109 & 1) != 0)
              {
                v143 = v460;
                v213 = (void (*)(uint64_t, unint64_t))v477;
                goto LABEL_66;
              }
              ++v229;
              v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v46 + v474);
              v20 = (unint64_t)v479;
              if (v231 == v21)
              {
                sub_23F384A80();
                v143 = v460;
                v213 = (void (*)(uint64_t, unint64_t))v477;
                goto LABEL_62;
              }
            }
            __break(1u);
LABEL_161:
            __break(1u);
            goto LABEL_162;
          }
          sub_23F384A80();
          v143 = v460;
          v20 = (unint64_t)v479;
LABEL_62:
          v71 = v465;
          v46 = v459;
LABEL_63:
          v21 = (void (*)(_QWORD))v470;
          sub_23F383E64(v472, *(uint64_t (**)(uint64_t, uint64_t))(v473 + 8));
          --v63;
          if (!v60)
            goto LABEL_69;
        }
        v143 = v460;
LABEL_66:
        sub_23F384A80();
        v21 = (void (*)(_QWORD))v470;
        sub_23F383E64(v472, *(uint64_t (**)(uint64_t, uint64_t))(v473 + 8));
        v20 = (unint64_t)v479;
        v71 = v465;
        if (!v63)
          goto LABEL_69;
        if (v63 > *(_QWORD *)(v465 + 16))
          goto LABEL_168;
        v232 = sub_23F507BA8((uint64_t)&v472);
        sub_23F362D94(v232, (uint64_t)v468, v469);
        v233 = v217;
        v234 = 0;
LABEL_70:
        sub_23F41C5B8(v233, v234);
        sub_23F38458C();
        v213(v476, v20);
        v213(v461, v20);
        sub_23F383740(v217, 1, (uint64_t)v21);
        if (v177)
        {
          sub_23F3D9844(v217, &qword_256E702E0);
        }
        else
        {
          v235 = sub_23F507BA8((uint64_t)&v455);
          sub_23F507780(v235, v236);
          sub_23F507780(v442, v217);
          sub_23F507A4C();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_23F3DDBE4();
            sub_23F377C90();
            v455 = v244;
          }
          v239 = *(_QWORD *)(v455 + 16);
          v238 = *(_QWORD *)(v455 + 24);
          v217 = v239 + 1;
          if (v239 >= v238 >> 1)
          {
            sub_23F3B1A80(v238);
            sub_23F377C90();
            v455 = v245;
          }
          *(_QWORD *)(v455 + 16) = v217;
          sub_23F383EB8();
          v243 = v241 + v240 + *(_QWORD *)(v242 + 72) * v239;
          v21 = (void (*)(_QWORD))v470;
          sub_23F507780(v243, v442);
        }
        v219 = v458 + 1;
        if (v458 + 1 == v445)
        {
LABEL_110:
          sub_23F384430();
          sub_23F3841CC(v449, v287);
          sub_23F384A80();
          v288 = sub_23F507948((uint64_t)&a9);
          v289 = v400;
          v141 = sub_23F4F2994(v288);
          sub_23F362984();
          sub_23F507948((uint64_t)v451);
          swift_retain();
          v290 = v415;
          sub_23F362CDC();
          v291 = sub_23F3C85C0();
          v109 = sub_23F4F2AEC(v291, v292, v290);
          v400 = v289;
          sub_23F362D18();
          v21 = *(void (**)(_QWORD))(v109 + 16);
          if (v21)
          {
            v60 = v143;
            v480 = MEMORY[0x24BEE4AF8];
            sub_23F37C1FC();
            sub_23F383EB8();
            v141 = v109 + v293;
            v63 = *(_QWORD *)(v294 + 72);
            v20 = v480;
            do
            {
              v295 = v447;
              sub_23F362600(v141, v447, type metadata accessor for PlanOverridesService.EventReference);
              sub_23F507260();
              sub_23F3D9608(v295, type metadata accessor for PlanOverridesService.EventReference);
              if ((sub_23F3B1CDC() & 1) == 0)
              {
                sub_23F3DDBE4();
                sub_23F37C1FC();
                v20 = v480;
              }
              v297 = *(_QWORD *)(v20 + 16);
              v296 = *(_QWORD *)(v20 + 24);
              v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v297 + 1);
              if (v297 >= v296 >> 1)
              {
                sub_23F3B1A80(v296);
                sub_23F37C1FC();
                v20 = v480;
              }
              *(_QWORD *)(v20 + 16) = v46;
              sub_23F383EB8();
              (*(void (**)(unint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(v299 + 32))(v20 + v298 + *(_QWORD *)(v299 + 72) * v297, v450, v479);
              v480 = v20;
              v141 += v63;
              v21 = (void (*)(_QWORD))((char *)v21 - 1);
            }
            while (v21);
            sub_23F362C60();
          }
          else
          {
            sub_23F362C60();
            v20 = MEMORY[0x24BEE4AF8];
          }
          v300 = sub_23F50773C((uint64_t)&v469);
          sub_23F5072CC(v300);
          sub_23F507C90();
          sub_23F61A1EC();
          v301 = sub_23F5079F0();
          sub_23F507104(v301, v302);
          sub_23F506FDC();
          sub_23F50730C();
          sub_23F506FF4();
          *(_QWORD *)v20 = v141;
          sub_23F507BFC();
          if ((v303 & 1) == 0)
          {
            sub_23F5072EC();
            v141 = v362;
            *v454 = v362;
          }
          sub_23F507140();
          if (!v153)
          {
            v304 = sub_23F506FB4();
            sub_23F507134(v304, v305);
            sub_23F384430();
            v269 = v401;
            goto LABEL_123;
          }
LABEL_173:
          __break(1u);
LABEL_174:
          sub_23F5072EC();
          v141 = v368;
          goto LABEL_3;
        }
      }
    }
    sub_23F5073BC();
    v63 = v393;
    if (v257)
      break;
    sub_23F5073BC();
    if (!v270)
    {
      if (v271 == v385)
      {
        v306 = v436;
        v60 = v437;
        sub_23F3D98EC(v431, *(uint64_t (**)(uint64_t, uint64_t))(v436 + 96));
        sub_23F507594();
        v20 = v386;
        v307 = sub_23F3840BC();
        sub_23F3841C4(v307, v308, v309);
        v310 = sub_23F61A720();
        v474 = sub_23F507BC8(v310, v311);
        v46 = v312;
        sub_23F362D18();
        v71 = (unint64_t)v440;
        sub_23F5072CC((uint64_t)v440);
        sub_23F61A708();
        sub_23F61A72C();
        sub_23F50742C();
        sub_23F61A714();
        (*(void (**)(uint64_t, _QWORD, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(v306 + 104))(v109, v385, v60);
        sub_23F506FDC();
        sub_23F507254();
        v313 = sub_23F406958();
        v314 = v454;
        *v454 = (uint64_t)v21;
        if ((v313 & 1) == 0)
        {
          sub_23F492508();
          v21 = v365;
          *v314 = (uint64_t)v365;
        }
        sub_23F5078BC();
        sub_23F507140();
        v141 = v430;
        if (v153)
          goto LABEL_177;
        sub_23F507930();
        sub_23F507134(v315 + v316, *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v438 + 40));
        sub_23F384430();
        sub_23F3841CC(v386, v317);
        sub_23F5070A0();
        sub_23F507438();
        goto LABEL_126;
      }
      sub_23F5073BC();
      v71 = (unint64_t)v440;
      if (!v177)
      {
        sub_23F5073BC();
        v21 = v374;
        v109 = v425;
        if (v328)
        {
          v329 = v431;
          sub_23F3841CC(v431, *(uint64_t (**)(uint64_t, _QWORD))(v436 + 96));
          sub_23F507594();
          v330 = sub_23F3840BC();
          sub_23F3841C4(v330, v331, v332);
          sub_23F507634();
          sub_23F61A3C0();
          v333 = sub_23F5073B0();
          v46 = v479;
          sub_23F383740(v333, v334, (uint64_t)v479);
          v335 = (void (*)(void))v477;
          if (v177)
          {
            sub_23F3D9844(v329, &qword_256E6FFA0);
            v141 = 0;
          }
          else
          {
            v109 = v329;
            sub_23F617CE4();
            v141 = v343;
            sub_23F507BFC();
            v335();
          }
          v344 = sub_23F3840BC();
          v20 = sub_23F4FF430(v344, v345, v415);
          sub_23F362D18();
          if ((v20 & 0x100000000) == 0)
          {
            v46 = v440;
            v346 = (uint64_t)v479;
            sub_23F384918((uint64_t)v440, v451[0], v478);
            sub_23F507634();
            sub_23F507260();
            sub_23F4455EC();
            sub_23F36196C(v347, v348, v349, v346);
            sub_23F50742C();
            sub_23F61A3CC();
            v350 = sub_23F507688();
            sub_23F507104(v350, v351);
            sub_23F506FDC();
            sub_23F507254();
            v352 = sub_23F506FF4();
            *(_QWORD *)v20 = v141;
            if ((v352 & 1) == 0)
            {
              sub_23F5072EC();
              sub_23F5074A0(v367);
            }
            v109 = v425;
            if (v462 >= *(_QWORD *)(v141 + 16))
              goto LABEL_179;
            v353 = sub_23F506FB4();
            sub_23F507134(v353, v354);
          }
          sub_23F384430();
          v269 = v382;
LABEL_123:
          sub_23F3841CC(v269, v268);
          goto LABEL_124;
        }
        sub_23F6190AC();
        v63 = v381;
        sub_23F5074CC(v381, v453);
        sub_23F507D88();
        v336 = sub_23F3B1BD4();
        v71 = (unint64_t)v21;
        v337 = sub_23F3B1604(v336);
        v20 = (unint64_t)v477;
        if (v337)
        {
          v338 = sub_23F366668();
          v480 = sub_23F366668();
          *(_DWORD *)v338 = v372;
          v339 = sub_23F50773C((uint64_t)&v458);
          v46(v339, v63, v425);
          v340 = sub_23F61C16C();
          sub_23F507C64(v340, v341);
          *(_QWORD *)(v338 + 4) = v342;
          sub_23F3837B0();
          v441(v63, v425);
          sub_23F38485C(&dword_23F35A000, v141, (os_log_type_t)v21, "No event ids or capture group names need to be replaced for %s", (uint8_t *)v338);
          swift_arrayDestroy();
          sub_23F507BFC();
          sub_23F366530();
        }

        v141 = (uint64_t)v441;
        v441(v63, v109);
        sub_23F3841CC((uint64_t)v21, *(uint64_t (**)(uint64_t, _QWORD))(v419 + 8));
        sub_23F3B224C(v453);
        v355 = sub_23F507970();
        ((void (*)(uint64_t))v20)(v355);
        sub_23F384430();
        sub_23F3841CC(v431, v356);
LABEL_125:
        sub_23F507EBC();
        goto LABEL_126;
      }
      v318 = v431;
      sub_23F3841CC(v431, *(uint64_t (**)(uint64_t, _QWORD))(v436 + 96));
      v319 = v384;
      v320 = sub_23F384840(v63, v318, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v384 + 32));
      MEMORY[0x24266DC78](v320);
      sub_23F617CE4();
      v20 = v321;
      v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v477;
      v477(v71, v479);
      v141 = sub_23F50736C();
      sub_23F362984();
      if ((v141 & 0x100000000) == 0)
      {
        sub_23F5071F0(v71);
        v20 = v389;
        sub_23F507260();
        v322 = sub_23F507E00();
        MEMORY[0x24266DC84](v322);
        v323 = sub_23F507688();
        sub_23F507104(v323, v324);
        sub_23F506FDC();
        sub_23F507254();
        v325 = sub_23F506FF4();
        *(_QWORD *)v20 = v141;
        if ((v325 & 1) == 0)
        {
          sub_23F5072EC();
          sub_23F5074A0(v366);
        }
        v143 = v60;
        v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v477;
        v109 = v425;
        v60 = v376;
        if (v462 >= *(_QWORD *)(v141 + 16))
          goto LABEL_178;
        v326 = sub_23F506FB4();
        sub_23F507134(v326, v327);
        v175 = sub_23F507924();
        goto LABEL_22;
      }
      sub_23F383F80(v63, *(uint64_t (**)(uint64_t, uint64_t))(v319 + 8));
      v109 = v425;
      sub_23F5070B8(v453);
      sub_23F40636C(v451[0]);
      goto LABEL_129;
    }
    v272 = v431;
    sub_23F3841CC(v431, *(uint64_t (**)(uint64_t, _QWORD))(v436 + 96));
    v273 = sub_23F507954();
    v71 = v378;
    sub_23F383F00(v273, v272, v274);
    sub_23F5078EC();
    MEMORY[0x24266DC54]();
    sub_23F617CE4();
    v275 = v141;
    v20 = v276;
    sub_23F5077A0((uint64_t)v46);
    v141 = sub_23F50736C();
    sub_23F362984();
    if ((v141 & 0x100000000) != 0)
    {
      v141 = v275;
      sub_23F3B1CC8(v390, *(uint64_t (**)(uint64_t, uint64_t))(v275 + 8));
      v109 = v425;
      sub_23F5070B8(v453);
      sub_23F5077A0(v451[0]);
      goto LABEL_136;
    }
    sub_23F5071F0((uint64_t)v46);
    v20 = v389;
    sub_23F507260();
    v277 = sub_23F507E00();
    MEMORY[0x24266DC60](v277);
    v278 = sub_23F507688();
    sub_23F507104(v278, v279);
    sub_23F506FDC();
    sub_23F507254();
    v280 = sub_23F506FF4();
    *(_QWORD *)v20 = v141;
    if ((v280 & 1) == 0)
    {
      sub_23F5072EC();
      sub_23F5074A0(v364);
    }
    v109 = v425;
    v143 = v60;
    sub_23F507140();
    if (v153)
      goto LABEL_176;
    v281 = sub_23F506FB4();
    sub_23F507134(v281, v282);
    sub_23F507EBC();
    sub_23F3B1CC8(v390, *(uint64_t (**)(uint64_t, uint64_t))(v141 + 8));
    sub_23F5070A0();
    sub_23F507980();
LABEL_126:
    v144 = v462 + 1;
    v145 = v428;
    if (v462 + 1 == v428)
      goto LABEL_159;
  }
  sub_23F3841CC(v431, *(uint64_t (**)(uint64_t, _QWORD))(v436 + 96));
  v46 = v395;
  v258 = v394;
  v259 = sub_23F4A1340();
  v21 = v396;
  sub_23F362D94(v259, v260, v261);
  sub_23F5079A0();
  MEMORY[0x24266D7B0]();
  sub_23F617CE4();
  v20 = v262;
  sub_23F5077A0(v71);
  v141 = sub_23F50736C();
  sub_23F362984();
  if ((v141 & 0x100000000) != 0)
  {
    sub_23F383E64((uint64_t)v258, *((uint64_t (**)(uint64_t, uint64_t))v46 + 1));
    v109 = v425;
    sub_23F5070B8(v453);
    sub_23F5077A0(v451[0]);
LABEL_129:
    sub_23F507EBC();
LABEL_136:
    v143 = v60;
    goto LABEL_126;
  }
  sub_23F5071F0(v71);
  sub_23F5078EC();
  sub_23F507260();
  v20 = (unint64_t)v258;
  sub_23F61A2B8();
  v21 = (void (*)(_QWORD))v420;
  sub_23F61A2AC();
  v263 = sub_23F5079F0();
  sub_23F507104(v263, v264);
  sub_23F506FDC();
  sub_23F50730C();
  v265 = sub_23F506FF4();
  *v258 = v141;
  if ((v265 & 1) == 0)
  {
    sub_23F5072EC();
    sub_23F5074A0(v363);
  }
  v109 = v425;
  v143 = v60;
  sub_23F507140();
  if (!v153)
  {
    v266 = sub_23F506FB4();
    sub_23F507134(v266, v267);
    sub_23F384430();
    v269 = (uint64_t)v394;
    goto LABEL_123;
  }
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
}

unint64_t sub_23F4FF430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v24;
  unsigned __int8 v25;

  sub_23F35D2E8(&qword_256E78AA8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F362838();
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3B1C68();
  v11 = sub_23F617000();
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3D9CCC();
  if (!a2)
    goto LABEL_9;
  sub_23F4414B0();
  sub_23F616FD0();
  sub_23F383740(v5, 1, v11);
  if (v22)
  {
    v13 = &qword_256E6FB20;
    v14 = v5;
LABEL_8:
    sub_23F3D9844(v14, v13);
LABEL_9:
    v24 = 0;
    v25 = 1;
    return v24 | ((unint64_t)v25 << 32);
  }
  v15 = sub_23F507ACC();
  sub_23F384918(v15, v16, v17);
  sub_23F616FDC();
  v18 = sub_23F61C184();
  v20 = v19;
  sub_23F3837B0();
  sub_23F3687A0(v18, v20, a3);
  sub_23F38432C();
  sub_23F362A28(v4, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v21 = type metadata accessor for PlanOverridesService.EventReference(0);
  sub_23F383740(v3, 1, v21);
  if (v22)
  {
    v13 = &qword_256E78AA8;
    v14 = v3;
    goto LABEL_8;
  }
  v24 = *(unsigned int *)(v3 + *(int *)(v21 + 20));
  sub_23F3D9608(v3, type metadata accessor for PlanOverridesService.EventReference);
  v25 = 0;
  return v24 | ((unint64_t)v25 << 32);
}

void sub_23F4FF5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110[2];
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[3];
  _QWORD v134[4];
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD v139[2];
  uint64_t v140;

  sub_23F362ABC();
  a19 = v23;
  a20 = v24;
  v126 = v25;
  v139[1] = v26;
  v138 = v27;
  v135 = sub_23F61B5D8();
  v127 = *(_QWORD *)(v135 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F383780();
  sub_23F3B13F0(v32);
  v33 = sub_23F61B83C();
  sub_23F383E7C(v33, (uint64_t)&v129);
  v116 = v34;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F384990((uint64_t)v110 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3B13F0((uint64_t)v110 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = sub_23F618D28();
  sub_23F383E7C(v39, (uint64_t)v134);
  v119 = v40;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F36285C();
  sub_23F3B13F0(v42);
  v43 = sub_23F61B8A8();
  sub_23F383E7C(v43, (uint64_t)v133);
  v118 = v44;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F383780();
  v117 = v47;
  v48 = sub_23F5077B0();
  sub_23F383E7C(v48, (uint64_t)v139);
  v122 = v49;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F384990((uint64_t)v110 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F35D2E8(&qword_256E74ED0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F36285C();
  v123 = v53;
  v54 = sub_23F507840();
  sub_23F383E7C(v54, (uint64_t)&v140);
  v120 = v55;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v56);
  v121 = (char *)v110 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_23F428AE4();
  sub_23F383E7C(v58, (uint64_t)&a13);
  v125 = v59;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F36285C();
  sub_23F384990(v61);
  sub_23F35D2E8(&qword_256E70F08);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F36285C();
  v64 = sub_23F507A64(v63);
  sub_23F383E7C(v64, (uint64_t)&a16);
  v124 = v65;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F36285C();
  sub_23F3B13F0(v67);
  v68 = sub_23F61B6B0();
  v134[2] = *(_QWORD *)(v68 - 8);
  v134[3] = v68;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F36285C();
  v134[1] = v70;
  sub_23F39C56C();
  v71 = sub_23F6170CC();
  v131 = *(_QWORD *)(v71 - 8);
  v132 = v71;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F36285C();
  v134[0] = v73;
  sub_23F39C56C();
  v128 = sub_23F61B4D0();
  v133[2] = *(_QWORD *)(v128 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v74);
  v133[1] = (char *)v110 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v130 = sub_23F61B62C();
  v133[0] = *(_QWORD *)(v130 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F39E564();
  v78 = MEMORY[0x24BDAC7A8](v77);
  sub_23F507E80(v78, v79, v80, v81, v82, v83, v84, v85, v110[0]);
  v139[0] = sub_23F3B1728();
  v137 = *(_QWORD *)(v139[0] - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v86);
  v136 = (char *)v110 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v88);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v89);
  sub_23F39E564();
  v91 = MEMORY[0x24BDAC7A8](v90);
  v93 = (char *)v110 - v92;
  v94 = MEMORY[0x24BDAC7A8](v91);
  v96 = (char *)v110 - v95;
  MEMORY[0x24BDAC7A8](v94);
  sub_23F5072DC();
  MEMORY[0x24BDAC7A8](v97);
  sub_23F4DC39C();
  MEMORY[0x24BDAC7A8](v98);
  v100 = (char *)v110 - v99;
  sub_23F35D2E8(&qword_256E70238);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v101);
  sub_23F5075B8();
  v103 = MEMORY[0x24BDAC7A8](v102);
  v105 = (char *)v110 - v104;
  MEMORY[0x24BDAC7A8](v103);
  sub_23F507640();
  sub_23F61B68C();
  sub_23F61B680();
  v115 = v100;
  v114 = v96;
  v112 = v21;
  v111 = v22;
  v110[1] = (uint64_t)v105;
  v113 = v93;
  v110[0] = v20;
  sub_23F61B698();
  sub_23F4455EC();
  sub_23F36196C(v106, v107, v108, v135);
  v109 = sub_23F366748();
  sub_23F507C40(v109, &qword_256E70238);
  sub_23F384324();
  sub_23F362948();
}

uint64_t sub_23F500978(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_23F61B4D0();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_23F61B614();
}

void sub_23F5009F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  __int128 v125;
  unint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  os_log_type_t v145;
  _BOOL4 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  NSObject *v160;
  uint64_t v161;
  os_log_type_t v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  void (*v166)(uint64_t, uint64_t);
  int v167;
  void (*v168)(uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  unint64_t v173;
  char v174;
  char v175;
  _QWORD *v176;
  uint64_t v177;
  char v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  BOOL v182;
  uint64_t v183;
  void (*v184)(char *, uint64_t);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t (*v189)(uint64_t, uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t (*v193)(uint64_t, uint64_t, uint64_t);
  NSObject *v194;
  os_log_type_t v195;
  uint8_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t (*v201)(void);
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  void *v221;
  uint64_t v222;
  uint64_t v223;
  int v224;
  NSObject *v225;
  os_log_type_t v226;
  uint8_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  NSObject *v233;
  uint64_t v234;
  char v235;
  Class v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  NSObject *v242;
  uint64_t v243;
  os_log_type_t v244;
  uint8_t *v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  NSObject *v249;
  os_log_type_t v250;
  void *v251;
  uint64_t v252;
  void (*v253)(uint64_t);
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char v257;
  uint64_t v258;
  os_log_type_t v259;
  _BOOL4 v260;
  uint8_t *v261;
  uint64_t v262;
  uint64_t v263;
  void *v264;
  NSObject *v265;
  os_log_type_t v266;
  uint64_t v267;
  void (*v268)(uint64_t, uint64_t, void *);
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char v274;
  os_log_type_t v275;
  uint8_t *v276;
  uint64_t v277;
  uint64_t v278;
  void *v279;
  NSObject *v280;
  os_log_type_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t (*v286)(uint64_t, uint64_t, uint64_t);
  uint64_t v287;
  os_log_type_t v288;
  _BOOL4 v289;
  uint8_t *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t (*v297)(uint64_t, uint64_t, uint64_t);
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t (*v302)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v303;
  uint8_t *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  void (*v309)(uint64_t, uint64_t);
  void (*v310)(uint64_t, _QWORD);
  uint64_t v311;
  uint64_t *v312;
  void (*v313)(uint64_t, uint64_t);
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t (*v317)(uint64_t, _QWORD);
  uint64_t v318;
  uint64_t v319;
  void (*v320)(uint64_t);
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t (*v324)(uint64_t, _QWORD);
  uint64_t v325;
  uint64_t v326;
  void (*v327)(uint64_t);
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  __int128 v354;
  char *v355;
  void *v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  _QWORD v362[2];
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  void *v367;
  uint64_t *v368;
  unint64_t v369;
  uint64_t v370;
  uint64_t v371;
  NSObject *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  __int128 v377;
  int64_t v378;
  uint64_t v379;
  void *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  __int128 v384;
  unint64_t v385;
  uint64_t v386;
  char *v387;
  _QWORD v388[2];
  uint64_t *v389;
  uint64_t v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  void (*v396)(char *, char *, uint64_t);
  uint64_t v397;
  uint64_t v398;
  NSObject *v399;
  void (*v400)(uint64_t, uint64_t);
  uint64_t v401;
  uint64_t v402;
  _QWORD *v403;
  void (*v404)(uint64_t, uint64_t);
  uint64_t v405;
  uint64_t v406;
  _QWORD *p_isa;
  unint64_t v408;
  uint64_t v409;

  sub_23F362ABC();
  a19 = v24;
  a20 = v25;
  v364 = v26;
  v362[0] = v27;
  v383 = v28;
  v375 = v29;
  v342 = v30;
  v32 = v31;
  v344 = v33;
  v343 = v34;
  v346 = v35;
  v359 = a21;
  sub_23F35D2E8(&qword_256E78A98);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F36285C();
  v38 = sub_23F507A74(v37);
  sub_23F383E7C(v38, (uint64_t)v362);
  v340 = v39;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F36285C();
  sub_23F384990(v41);
  sub_23F35D2E8(&qword_256E74EC8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F36285C();
  sub_23F3B13F0(v43);
  v351 = sub_23F61AF60();
  v44 = *(_QWORD *)(v351 - 8);
  MEMORY[0x24BDAC7A8](v351);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F383780();
  sub_23F384990(v46);
  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F36285C();
  sub_23F384990(v48);
  sub_23F35D2E8(&qword_256E74ED0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F36285C();
  v350 = v50;
  v51 = sub_23F507840();
  sub_23F383E7C(v51, (uint64_t)&v375);
  v339 = v52;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F383780();
  v349 = v55;
  v56 = sub_23F428AE4();
  sub_23F383E7C(v56, (uint64_t)v388);
  v361 = v57;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F36285C();
  sub_23F384990(v59);
  sub_23F35D2E8(&qword_256E70F08);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v61);
  v63 = sub_23F507A64((uint64_t)&v331 - v62);
  sub_23F383E7C(v63, (uint64_t)&v394);
  v360 = v64;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F384990((uint64_t)&v331 - v67);
  sub_23F35D2E8(&qword_256E78AA0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F36285C();
  v363 = v69;
  v70 = sub_23F5077B0();
  sub_23F383E7C(v70, (uint64_t)&v392);
  v358 = v71;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F36285C();
  sub_23F384990(v73);
  sub_23F35D2E8(&qword_256E78AA8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v75);
  sub_23F383780();
  sub_23F384990(v76);
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v77);
  sub_23F36285C();
  sub_23F3B13F0(v78);
  v79 = sub_23F617000();
  v373 = *(_QWORD *)(v79 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F507874();
  MEMORY[0x24BDAC7A8](v81);
  sub_23F383780();
  v386 = v82;
  v401 = sub_23F3B1728();
  v388[1] = *(_QWORD *)(v401 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v83);
  v395 = (uint64_t)&v331 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v85);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v86);
  sub_23F3838E4();
  sub_23F39E564();
  v88 = MEMORY[0x24BDAC7A8](v87);
  v90 = (char *)&v331 - v89;
  MEMORY[0x24BDAC7A8](v88);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v91);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v92);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v93);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v94);
  v96 = (char *)&v331 - v95;
  v97 = sub_23F384040();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v98);
  sub_23F3834D0();
  v394 = v99;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v100);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v101);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v102);
  sub_23F3838E4();
  v399 = v103;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v104);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v105);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v106);
  sub_23F5075B8();
  MEMORY[0x24BDAC7A8](v107);
  v109 = (char *)&v331 - v108;
  sub_23F35D2E8(&qword_256E74EC0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v110);
  sub_23F3834D0();
  v403 = v111;
  sub_23F383588();
  v113 = MEMORY[0x24BDAC7A8](v112);
  sub_23F507E80(v113, v114, v115, v116, v117, v118, v119, v120, v331);
  v408 = v32;
  v369 = v32 + 64;
  sub_23F3839E4();
  v368 = (uint64_t *)&p_isa;
  v355 = (char *)&p_isa + 4;
  v378 = (unint64_t)(v121 + 63) >> 6;
  v332 = v378 - 1;
  v385 = v32;
  v124 = v123 & v122;
  sub_23F3E0254();
  v392 = 0;
  *(_QWORD *)&v125 = 136315138;
  v384 = v125;
  v379 = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v125 = 67109376;
  v377 = v125;
  *(_QWORD *)&v125 = 67109120;
  v354 = v125;
  v397 = v79;
  v393 = v21;
  v334 = v90;
  v387 = v96;
  v390 = v22;
  v376 = v23;
  v335 = v44;
  v370 = v97;
  v391 = v109;
  while (v124)
  {
    v398 = (v124 - 1) & v124;
    v126 = __clz(__rbit64(v124)) | (v392 << 6);
    v127 = v403;
LABEL_4:
    v128 = *(_QWORD *)(v385 + 56);
    v129 = (_QWORD *)(*(_QWORD *)(v385 + 48) + 16 * v126);
    v130 = v129[1];
    *v127 = *v129;
    v127[1] = v130;
    v131 = v128 + *(_QWORD *)(v22 + 72) * v126;
    v132 = sub_23F384838();
    v133 = v131;
    v127 = v403;
    sub_23F383F00((uint64_t)v403 + *(int *)(v132 + 48), v133, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    sub_23F36196C((uint64_t)v127, 0, 1, v132);
    sub_23F3668F4();
LABEL_23:
    v140 = (uint64_t)v127;
    v141 = v389;
    sub_23F383004(v140, (uint64_t)v389, &qword_256E74EC0);
    v142 = sub_23F384838();
    sub_23F383740((uint64_t)v141, 1, v142);
    if (v235)
    {
      swift_release();
      sub_23F383F00(v366, v342, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
      sub_23F383738();
      sub_23F507C90();
      sub_23F61A234();
      v326 = sub_23F5079F0();
      v327(v326);
      v328 = sub_23F61B95C();
      sub_23F3838D8(v345, v329, v330, v328);
      sub_23F50730C();
      sub_23F362948();
      return;
    }
    v143 = v141[1];
    v402 = *v141;
    v144 = (char *)v141 + *(int *)(v142 + 48);
    v396 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v396(v109, v144, v97);
    sub_23F5075E8();
    sub_23F5078F8(v23, (uint64_t)v109);
    sub_23F5075F0();
    v145 = sub_23F3B1BD4();
    v146 = sub_23F411520(v142);
    v405 = v143;
    if (v146)
    {
      v147 = sub_23F366668();
      p_isa = (_QWORD *)sub_23F366668();
      *(_DWORD *)v147 = v384;
      v148 = sub_23F617CE4();
      if (v149)
      {
        v150 = v149;
      }
      else
      {
        v148 = 0x656E696665646E75;
        v150 = 0xE900000000000064;
      }
      sub_23F37AE00(v148, v150, (uint64_t *)&p_isa);
      *(_QWORD *)(v147 + 4) = v151;
      sub_23F362984();
      sub_23F507898();
      sub_23F38485C(&dword_23F35A000, v142, v145, "Found parameter in call() with statementID: %s", (uint8_t *)v147);
      sub_23F5077CC();
      sub_23F366530();
    }
    sub_23F507898();

    v152 = sub_23F5074FC();
    v400 = v153;
    v153(v152, v401);
    v109 = v391;
    v154 = sub_23F617CE4();
    v155 = v388[0];
    if (v156)
    {
      v157 = v154;
      sub_23F616FD0();
      v158 = sub_23F5073B0();
      sub_23F383740(v158, v159, v79);
      if (v235)
      {
        sub_23F38432C();
        sub_23F3D9844(v155, &qword_256E6FB20);
        goto LABEL_33;
      }
      v380 = (void *)v157;
      v185 = sub_23F3840BC();
      v187 = v186;
      sub_23F383C64(v185, v188, v189);
      v190 = v371;
      sub_23F4F2978();
      v191 = sub_23F507834();
      sub_23F383C64(v191, v192, v193);
      v194 = sub_23F4F2950();
      v195 = sub_23F61C61C();
      if (sub_23F50724C(v194))
      {
        v197 = (uint8_t *)sub_23F366668();
        p_isa = (_QWORD *)sub_23F366668();
        sub_23F507D38();
        sub_23F3B121C(&qword_256E74E78, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
        v198 = sub_23F61CC1C();
        sub_23F507C64(v198, v199);
        v406 = v200;
        sub_23F61C790();
        sub_23F362984();
        sub_23F507778(*(uint64_t (**)(void))(v187 + 8));
        sub_23F38485C(&dword_23F35A000, v194, v195, "Found eventId in statement reference: %s", v197);
        sub_23F3B17D4();
        sub_23F366530();
      }
      sub_23F3ECB9C();
      sub_23F507778(v201);

      sub_23F507388(v190);
      v22 = v390;
      sub_23F616FDC();
      v202 = sub_23F61C184();
      v204 = v203;
      sub_23F362D18();
      v205 = v375;
      v97 = v370;
      if (*(_QWORD *)(v375 + 16) && (v206 = sub_23F3754D4(v202, v204), (v207 & 1) != 0))
      {
        v208 = v206;
        v209 = *(_QWORD *)(v205 + 56);
        type metadata accessor for PlanOverridesService.EventReference(0);
        sub_23F507D68();
        v211 = v209 + *(_QWORD *)(v210 + 72) * v208;
        v212 = v381;
        sub_23F362600(v211, v381, type metadata accessor for PlanOverridesService.EventReference);
      }
      else
      {
        v205 = type metadata accessor for PlanOverridesService.EventReference(0);
        v212 = v381;
        sub_23F5073B0();
      }
      sub_23F507A58();
      sub_23F36196C(v213, v214, v215, v216);
      sub_23F384120();
      v217 = v374;
      sub_23F382EF8(v212, v374, &qword_256E78AA8);
      type metadata accessor for PlanOverridesService.EventReference(0);
      sub_23F383740(v217, 1, v205);
      if (v235)
      {
        v218 = sub_23F482A1C();
        sub_23F3D9844(v218, v219);
        v220 = v363;
        v221 = v380;
        sub_23F507ACC();
        sub_23F503FA4();
        v222 = sub_23F5073B0();
        sub_23F383740(v222, v223, v365);
        if (v235)
        {
          sub_23F3D9844(v220, &qword_256E78AA0);
          goto LABEL_61;
        }
        v23 = v357;
        v232 = v358;
        sub_23F383C64(v357, v220, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v358 + 32));
        sub_23F507670();
        v233 = sub_23F507D90();
        sub_23F3841CC(v217, *(uint64_t (**)(uint64_t, _QWORD))(v361 + 8));
        p_isa = &v233->isa;
        v217 = sub_23F3B1CE4();
        sub_23F3B0CC8(&qword_256E70F18, &qword_256E70F10);
        sub_23F507960();
        sub_23F362D18();
        v234 = (uint64_t)v367;
        sub_23F383740(v22, 1, (uint64_t)v367);
        if (v235)
        {
          sub_23F383CA8(v23, *(uint64_t (**)(uint64_t, uint64_t))(v232 + 8));
          sub_23F3D9844(v22, &qword_256E70F08);
          sub_23F507BB4();
          v109 = v391;
          v221 = v380;
LABEL_61:
          sub_23F507ACC();
          v236 = sub_23F5043F8();
          if (!v237)
          {
            sub_23F362D18();
            goto LABEL_66;
          }
          v240 = v237;
          v241 = v239;
          v353 = v238;
          v396 = (void (*)(char *, char *, uint64_t))v236;
          sub_23F507670();
          v242 = sub_23F507D90();
          sub_23F3841CC(v217, *(uint64_t (**)(uint64_t, _QWORD))(v361 + 8));
          p_isa = &v242->isa;
          v243 = sub_23F3B1CE4();
          sub_23F3B0CC8(&qword_256E70F18, &qword_256E70F10);
          sub_23F507960();
          sub_23F362D18();
          v221 = v367;
          sub_23F383740(v22, 1, (uint64_t)v367);
          if (v235)
          {
            sub_23F3D9D90();
            sub_23F3837B0();
            sub_23F384120();
            sub_23F3D9844(v22, &qword_256E70F08);
LABEL_66:
            sub_23F50726C();
            sub_23F384324();
            sub_23F507654();
            v244 = sub_23F3B1A04();
            if (sub_23F49BA04(v244))
            {
              v245 = (uint8_t *)sub_23F366668();
              p_isa = (_QWORD *)sub_23F366668();
              *(_DWORD *)v245 = v384;
              sub_23F384324();
              sub_23F4F292C((uint64_t)v380, v246, (uint64_t *)&p_isa);
              sub_23F5071D4(v247);
              sub_23F3E01D0();
              sub_23F507764();
              sub_23F38485C(v248, v249, v250, "Unable to replace statement reference: \"%s\" is an unknown type", v245);
              sub_23F3B17D4();
              sub_23F366530();
            }

            sub_23F384A80();
            v400(v23, v401);
            goto LABEL_85;
          }
          sub_23F507594();
          v267 = sub_23F507954();
          v268(v267, v22, v221);
          sub_23F507634();
          sub_23F5033AC((uint64_t)v396, v240, v353, v241, v243, v269, v270, v271, v331, v332, v333, (uint64_t)v334, v335, v336, v337, v338, v339, v340, v341,
            v342);
          sub_23F3837B0();
          sub_23F384120();
          v272 = sub_23F5073B0();
          sub_23F383740(v272, v273, v351);
          if (v274)
          {
            sub_23F3D9D90();
            sub_23F3D9844((uint64_t)v242, &qword_256E74EC8);
            sub_23F50726C();
            sub_23F384324();
            sub_23F507654();
            v275 = sub_23F3B1A04();
            if (sub_23F49BA04(v275))
            {
              v276 = (uint8_t *)sub_23F366668();
              p_isa = (_QWORD *)sub_23F366668();
              *(_DWORD *)v276 = v384;
              sub_23F384324();
              sub_23F4F292C((uint64_t)v380, v277, (uint64_t *)&p_isa);
              sub_23F5071D4(v278);
              sub_23F3E01D0();
              sub_23F507764();
              sub_23F38485C(v279, v280, v281, "Unable to find retrieve DynamicEnumerationEntity statement: \"%s\" is not found in dynamicEnumerationEntities", v276);
              sub_23F3B17D4();
              sub_23F366530();
            }

            sub_23F384A80();
            sub_23F507388(v23);
            v311 = sub_23F50769C();
LABEL_84:
            v310(v311, *(v312 - 32));
LABEL_85:
            v319 = sub_23F507A4C();
            sub_23F3D9844(v319, &qword_256E78AA8);
            v79 = v397;
            sub_23F507194((uint64_t)&v409);
            sub_23F5072C0((uint64_t)v109);
            sub_23F507A40();
            goto LABEL_86;
          }
          sub_23F38432C();
          v294 = v335;
          v295 = sub_23F3840BC();
          sub_23F362D94(v295, v296, v297);
          v298 = (uint64_t)v334;
          sub_23F5075E8();
          v299 = v348;
          v300 = sub_23F507834();
          sub_23F362D94(v300, v301, v302);
          sub_23F5075F0();
          v303 = sub_23F3B1BD4();
          if (sub_23F507304(v242))
          {
            v305 = (uint8_t *)sub_23F366668();
            v306 = sub_23F366668();
            sub_23F50728C(v306);
            sub_23F61AF54();
            sub_23F3B121C(&qword_256E6FB60, (void (*)(uint64_t))MEMORY[0x24BE52140]);
            sub_23F507A94();
            sub_23F5072C0(v299);
            sub_23F507990();
            sub_23F5073F8(v307);
            sub_23F507BB4();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v335 + 8))(v348, v351);
            sub_23F38485C(&dword_23F35A000, v242, v303, "Replacing new event statement with: %s", v305);
            sub_23F3B17D4();
            sub_23F366530();
          }
          v320 = *(void (**)(uint64_t))(v294 + 8);
          v321 = sub_23F507834();
          v320(v321);

          sub_23F507388(v298);
          sub_23F507A40();
          sub_23F50742C();
          v322 = v347;
          sub_23F61AF54();
          sub_23F36196C(v299, 0, 1, v97);
          sub_23F507CD8();
          sub_23F406794(v322);
          v323 = sub_23F50769C();
          sub_23F3841CC(v323, v324);
          v325 = sub_23F507A4C();
          sub_23F3D9844(v325, &qword_256E78AA8);
          v79 = v397;
          sub_23F507194((uint64_t)&v409);
          sub_23F5072C0((uint64_t)v109);
          v22 = v390;
          v124 = v398;
        }
        else
        {
          sub_23F507594();
          v251 = v356;
          v252 = sub_23F384220();
          v253(v252);
          sub_23F507634();
          sub_23F503954();
          v254 = sub_23F5073B0();
          v255 = v352;
          sub_23F383740(v254, v256, v352);
          if (v257)
          {
            sub_23F3D9D90();
            sub_23F3D9844((uint64_t)v233, &qword_256E74ED0);
            v258 = v337;
            sub_23F507DC8();
            sub_23F384324();
            sub_23F496C44();
            v259 = sub_23F3B1A04();
            v260 = sub_23F49BA04(v259);
            v109 = v391;
            if (v260)
            {
              v261 = (uint8_t *)sub_23F366668();
              p_isa = (_QWORD *)sub_23F366668();
              sub_23F507D38();
              sub_23F384324();
              sub_23F4F292C((uint64_t)v380, v262, (uint64_t *)&p_isa);
              sub_23F5071D4(v263);
              sub_23F3E01D0();
              sub_23F507764();
              sub_23F38485C(v264, v265, v266, "Unable to find retrieve context statement: \"%s\" is not found in context", v261);
              sub_23F3B17D4();
              sub_23F366530();
            }

            sub_23F384A80();
            sub_23F507388(v258);
            v308 = sub_23F507344();
            v309(v308, v234);
            sub_23F384430();
            v311 = v357;
            v312 = &v392;
            goto LABEL_84;
          }
          sub_23F38432C();
          v282 = v339;
          v283 = v349;
          v284 = sub_23F3840BC();
          sub_23F384918(v284, v285, v286);
          sub_23F50726C();
          v287 = v338;
          sub_23F384918(v338, v283, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v282 + 16));
          sub_23F507654();
          v288 = sub_23F3B1BD4();
          v289 = sub_23F507304(v233);
          v109 = v391;
          if (v289)
          {
            v290 = (uint8_t *)sub_23F366668();
            v291 = sub_23F366668();
            sub_23F50728C(v291);
            sub_23F61AE10();
            sub_23F3B121C(&qword_256E6FB60, (void (*)(uint64_t))MEMORY[0x24BE52140]);
            sub_23F507A94();
            sub_23F5072C0(v255);
            sub_23F507990();
            sub_23F5073F8(v292);
            v293 = v352;
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v339 + 8))(v338, v293);
            sub_23F38485C(&dword_23F35A000, v233, v288, "Replacing new event statement with: %s", v290);
            sub_23F3B17D4();
            sub_23F366530();
          }
          v313 = *(void (**)(uint64_t, uint64_t))(v282 + 8);
          v313(v287, v255);

          sub_23F507388(v23);
          v23 = v255;
          v314 = v358;
          sub_23F507A40();
          sub_23F507634();
          v315 = v349;
          sub_23F61AE10();
          sub_23F36196C((uint64_t)v233, 0, 1, v97);
          sub_23F507CD8();
          v313(v315, v23);
          v316 = sub_23F507344();
          sub_23F3841CC(v316, v317);
          sub_23F3841CC(v357, *(uint64_t (**)(uint64_t, _QWORD))(v314 + 8));
          v318 = sub_23F507A4C();
          sub_23F3D9844(v318, &qword_256E78AA8);
          v79 = v397;
          sub_23F507194((uint64_t)&v409);
          sub_23F5072C0((uint64_t)v109);
LABEL_86:
          v22 = v390;
          sub_23F507BB4();
          v124 = v398;
        }
      }
      else
      {
        sub_23F38432C();
        v224 = *(_DWORD *)(v217 + *(int *)(v205 + 20));
        sub_23F3D9608(v217, type metadata accessor for PlanOverridesService.EventReference);
        v225 = v372;
        sub_23F50712C();
        sub_23F619E8C();
        v226 = sub_23F3B1A04();
        if (sub_23F50724C(v225))
        {
          v228 = (uint8_t *)sub_23F366668();
          *(_DWORD *)v228 = v354;
          LODWORD(p_isa) = v224;
          sub_23F61C790();
          _os_log_impl(&dword_23F35A000, v225, v226, "Replacing new event index with: %u", v228, 8u);
          sub_23F366530();
        }

        sub_23F507388((uint64_t)v372);
        v229 = v366;
        sub_23F507260();
        sub_23F507C08(v362[1], v229);
        v230 = v408;
        sub_23F3F5E54();
        p_isa = (_QWORD *)v230;
        sub_23F37F314();
        v408 = (unint64_t)p_isa;
        swift_bridgeObjectRelease();
        sub_23F362D18();
        v231 = sub_23F507A4C();
        sub_23F3D9844(v231, &qword_256E78AA8);
        sub_23F507194((uint64_t)&v409);
        sub_23F5072C0((uint64_t)v109);
        sub_23F507A40();
        v124 = v398;
      }
    }
    else
    {
LABEL_33:
      v160 = v399;
      sub_23F503050();
      sub_23F50712C();
      sub_23F5078F8(v382, (uint64_t)v109);
      v161 = sub_23F5076B8((uint64_t)&a11);
      sub_23F5078F8(v161, (uint64_t)v160);
      sub_23F619E8C();
      v162 = sub_23F3B1BD4();
      if (sub_23F3B1604(v162))
      {
        v163 = sub_23F366668();
        v164 = sub_23F507A28((_DWORD *)v163, (uint64_t)&v404);
        v165 = sub_23F507B94();
        v166 = v404;
        ((void (*)(uint64_t))v404)(v165);
        *(_DWORD *)(v163 + 4) = v164;
        *(_WORD *)(v163 + 8) = 1024;
        v167 = sub_23F617CFC();
        v166(v79, v97);
        *(_DWORD *)(v163 + 10) = v167;
        _os_log_impl(&dword_23F35A000, v160, (os_log_type_t)v143, "Replacing statement index reference from: %u to: %u", (uint8_t *)v163, 0xEu);
        sub_23F366530();
      }
      v168 = (void (*)(uint64_t))v404;
      v404(v79, v97);
      v169 = sub_23F507B94();
      v168(v169);
      sub_23F507A40();

      sub_23F507388(v395);
      sub_23F5078F8(v394, (uint64_t)v399);
      v170 = v408;
      sub_23F3B1CDC();
      p_isa = (_QWORD *)v170;
      v408 = 0x8000000000000000;
      v171 = sub_23F507C6C();
      if (__OFADD__(*(_QWORD *)(v170 + 16), (v172 & 1) == 0))
      {
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      v173 = v171;
      v174 = v172;
      sub_23F35D2E8(&qword_256E6FFB8);
      v175 = sub_23F61CA18();
      v176 = p_isa;
      v79 = v397;
      v22 = v390;
      if ((v175 & 1) != 0)
      {
        v177 = sub_23F507C6C();
        if ((v174 & 1) != (v178 & 1))
          goto LABEL_93;
        v173 = v177;
      }
      if ((v174 & 1) != 0)
      {
        sub_23F383F00(v176[7] + *(_QWORD *)(v22 + 72) * v173, v394, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 40));
      }
      else
      {
        v176[(v173 >> 6) + 8] |= 1 << v173;
        v179 = (_QWORD *)(v176[6] + 16 * v173);
        v180 = v405;
        *v179 = v402;
        v179[1] = v180;
        sub_23F507C08(v176[7] + *(_QWORD *)(v22 + 72) * v173, v394);
        v181 = v176[2];
        v182 = __OFADD__(v181, 1);
        v183 = v181 + 1;
        if (v182)
          goto LABEL_91;
        v176[2] = v183;
        sub_23F389CDC();
      }
      v408 = (unint64_t)p_isa;
      swift_bridgeObjectRelease();
      sub_23F362D08();
      v184 = (void (*)(char *, uint64_t))v404;
      v404((uint64_t)v399, v97);
      v184(v109, v97);
      v124 = v398;
    }
  }
  v134 = v392 + 1;
  v127 = v403;
  if (__OFADD__(v392, 1))
    goto LABEL_90;
  if (v134 >= v378)
  {
LABEL_22:
    v137 = sub_23F384838();
    sub_23F3838D8((uint64_t)v127, v138, v139, v137);
    v398 = 0;
    goto LABEL_23;
  }
  v135 = *(_QWORD *)(v369 + 8 * v134);
  if (v135)
  {
LABEL_8:
    v398 = (v135 - 1) & v135;
    v126 = __clz(__rbit64(v135)) + (v134 << 6);
    v392 = v134;
    goto LABEL_4;
  }
  v136 = v392 + 2;
  ++v392;
  if (v134 + 1 >= v378)
    goto LABEL_22;
  v135 = *(_QWORD *)(v369 + 8 * v136);
  if (v135)
    goto LABEL_11;
  v392 = v134 + 1;
  if (v134 + 2 >= v378)
    goto LABEL_22;
  v135 = *(_QWORD *)(v369 + 8 * (v134 + 2));
  if (v135)
  {
    v134 += 2;
    goto LABEL_8;
  }
  v136 = v134 + 3;
  v392 = v134 + 2;
  if (v134 + 3 >= v378)
    goto LABEL_22;
  v135 = *(_QWORD *)(v369 + 8 * v136);
  if (v135)
  {
LABEL_11:
    v134 = v136;
    goto LABEL_8;
  }
  while (1)
  {
    v134 = v136 + 1;
    if (__OFADD__(v136, 1))
      break;
    if (v134 >= v378)
    {
      v392 = v332;
      goto LABEL_22;
    }
    v135 = *(_QWORD *)(v369 + 8 * v134);
    ++v136;
    if (v135)
      goto LABEL_8;
  }
LABEL_92:
  __break(1u);
LABEL_93:
  sub_23F61CC94();
  __break(1u);
}

void sub_23F502450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  BOOL v47;
  BOOL v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  unsigned __int8 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 *v78;
  uint64_t v79;
  char v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 v89;
  char v90;
  uint64_t v91;
  unsigned __int8 v92;
  uint64_t v93;
  unsigned __int8 v94;
  unsigned __int8 v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;
  unsigned __int8 v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int8 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  _BYTE *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _WORD v118[8];
  uint64_t v119;
  uint64_t v120;

  sub_23F362ABC();
  v117 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  sub_23F35D2E8(&qword_256E702C8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v116 = v14;
  v15 = sub_23F3B1690();
  v115 = *(_QWORD *)(v15 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  v114 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F5075B8();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v107 - v20;
  sub_23F35D2E8(&qword_256E70A60);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F362930();
  v23 = v10 == v6 && v8 == v4;
  if (v23)
    goto LABEL_31;
  sub_23F4A1340();
  if ((sub_23F3C8510() & 1) != 0)
    goto LABEL_31;
  v119 = v10;
  v120 = v8;
  strcpy((char *)v118, "^[$]{[^ ]*}$");
  HIBYTE(v118[6]) = 0;
  v118[7] = -5120;
  v24 = sub_23F38F984();
  sub_23F3838D8(v0, v25, v26, v24);
  sub_23F38813C();
  v27 = sub_23F61C7E4();
  v29 = v28;
  sub_23F507B6C(v27, &qword_256E70A60);
  swift_bridgeObjectRelease();
  if ((v29 & 1) != 0)
    goto LABEL_31;
  v110 = v4;
  v111 = v6;
  v112 = v21;
  sub_23F3668F4();
  sub_23F510D5C(2, v10, v8);
  sub_23F5BA04C(1, v30, v31);
  v36 = v35;
  v37 = *(_QWORD *)(v117 + 16);
  if (!v37)
    goto LABEL_30;
  v38 = v34;
  v108 = v1;
  v109 = v15;
  v113 = v12;
  v39 = v33 >> 16;
  v40 = (uint64_t *)(v117 + 48);
  v41 = v32 >> 16;
  while (1)
  {
    v42 = *(v40 - 2);
    v43 = *(v40 - 1);
    v44 = *v40;
    v45 = (v43 & 0x2000000000000000) != 0 ? HIBYTE(v43) & 0xF : v42 & 0xFFFFFFFFFFFFLL;
    v46 = v42 == v38 && v43 == v36;
    v47 = v46 && v41 == 0;
    v48 = v47 && v45 == v39;
    if (v48 || (sub_23F61CC10() & 1) != 0)
      break;
    v40 += 3;
    if (!--v37)
    {
      sub_23F362D18();
      goto LABEL_31;
    }
  }
  sub_23F3B1EA4();
  sub_23F362CDC();
  sub_23F362D18();
  sub_23F3B5F04();
  v49 = v113;
  if (*(_QWORD *)(v44 + 16) != 1)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  v50 = v116;
  sub_23F370080(v44, v116);
  sub_23F362C60();
  v51 = sub_23F5073B0();
  v52 = v109;
  v54 = sub_23F383740(v51, v53, v109);
  if (v23)
  {
    sub_23F507AC4(v54, &qword_256E702C8);
    goto LABEL_31;
  }
  v59 = v115;
  v60 = (uint64_t)v112;
  sub_23F383C64((uint64_t)v112, v50, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 32));
  v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16);
  v62 = v108;
  v61(v108, v60, v52);
  v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 88))(v62, v52);
  if (v63 != *MEMORY[0x24BEB9D18])
  {
    sub_23F3B2110(v60);
LABEL_39:
    v71 = sub_23F482ECC();
    sub_23F3838D8((uint64_t)v49, v72, v73, v71);
    sub_23F3B2110(v62);
    goto LABEL_33;
  }
  v64 = (uint64_t)v114;
  v61((uint64_t)v114, v62, v52);
  sub_23F383CA8(v64, *(uint64_t (**)(uint64_t, uint64_t))(v59 + 96));
  v65 = sub_23F61B9BC();
  v66 = swift_projectBox();
  v67 = sub_23F383E88(v66, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 88));
  if (v67 == *MEMORY[0x24BEB9C90])
  {
    sub_23F61C178();
    v68 = sub_23F61C430();
    sub_23F507890(v60);
    if (v68 != 2)
    {
      *v49 = v68 & 1;
      v69 = sub_23F482ECC();
      sub_23F5074E0(v69);
      sub_23F36196C((uint64_t)v49, 0, 1, v68);
      sub_23F366748();
      v70 = v62;
LABEL_98:
      sub_23F507890(v70);
      goto LABEL_33;
    }
    goto LABEL_108;
  }
  if (v67 != *MEMORY[0x24BEB9C80])
  {
    if (v67 != *MEMORY[0x24BEB9CB0] && v67 != *MEMORY[0x24BEB9CC8])
    {
      sub_23F3B2110((uint64_t)v112);
      sub_23F366748();
      goto LABEL_39;
    }
    sub_23F366748();
    sub_23F406794(v62);
    v82 = v110;
    sub_23F3668F4();
    v83 = sub_23F502BEC(v111, v82);
    v85 = v84;
    sub_23F406794((uint64_t)v112);
    if ((v85 & 1) == 0)
    {
      *(_QWORD *)v49 = v83;
      v86 = *MEMORY[0x24BE556A8];
      sub_23F482ECC();
      sub_23F507D68();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v87 + 104))(v49, v86, v85);
      sub_23F507A58();
      goto LABEL_32;
    }
LABEL_31:
    sub_23F482ECC();
    sub_23F3837C8();
LABEL_32:
    sub_23F36196C(v55, v56, v57, v58);
LABEL_33:
    sub_23F362948();
    return;
  }
  v74 = BYTE2(v111);
  v75 = HIBYTE(v110) & 0xF;
  v76 = v111 & 0xFFFFFFFFFFFFLL;
  if ((v110 & 0x2000000000000000) != 0)
    v77 = HIBYTE(v110) & 0xF;
  else
    v77 = v111 & 0xFFFFFFFFFFFFLL;
  if (!v77)
    goto LABEL_107;
  if ((v110 & 0x1000000000000000) != 0)
  {
    sub_23F384324();
    v104 = sub_23F507600();
    v79 = (uint64_t)sub_23F5064AC(v104, v105, 10);
    v60 = v106;
    sub_23F38432C();
    if ((v60 & 1) == 0)
      goto LABEL_97;
    goto LABEL_107;
  }
  if ((v110 & 0x2000000000000000) == 0)
  {
    if ((v111 & 0x1000000000000000) != 0)
    {
      v78 = (unsigned __int8 *)((v110 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else
    {
      sub_23F507600();
      v78 = (unsigned __int8 *)sub_23F61C934();
    }
    v79 = (uint64_t)sub_23F5065F0(v78, v76, 10);
    v60 = v80 & 1;
    if ((v80 & 1) != 0)
      goto LABEL_107;
LABEL_97:
    sub_23F507890((uint64_t)v112);
    *(_QWORD *)v49 = v79;
    v101 = sub_23F482ECC();
    sub_23F5074E0(v101);
    sub_23F36196C((uint64_t)v49, 0, 1, v60);
    sub_23F366748();
    v70 = v108;
    goto LABEL_98;
  }
  v119 = v111;
  v120 = v110 & 0xFFFFFFFFFFFFFFLL;
  if (v111 == 43)
  {
    if (!v75)
      goto LABEL_111;
    if (v75 == 1)
      goto LABEL_107;
    sub_23F507584();
    if (!v23 & v90)
      goto LABEL_107;
    v79 = v92;
    if (v91 != 2)
    {
      sub_23F507584();
      if (!(!v23 & v90))
      {
        v79 = 10 * v79 + v94;
        if (v93 == 3)
          goto LABEL_95;
        while (1)
        {
          sub_23F5079D0();
          if (!v23 & v90)
            break;
          sub_23F507550();
          if (!v23)
            break;
          v79 = v96 + v95;
          if (__OFADD__(v96, v95))
            break;
          sub_23F5079E0();
          if (v23)
            goto LABEL_96;
        }
      }
LABEL_93:
      v79 = 0;
      v60 = 1;
      goto LABEL_96;
    }
LABEL_82:
    v60 = 0;
    goto LABEL_97;
  }
  if (v111 != 45)
  {
    if (!v75 || (v111 - 48) > 9u)
      goto LABEL_107;
    v79 = (v111 - 48);
    if (v75 != 1)
    {
      sub_23F507584();
      if (!(!v23 & v90))
      {
        v79 = 10 * v79 + v98;
        if (v97 == 2)
          goto LABEL_95;
        while (1)
        {
          sub_23F5079D0();
          if (!v23 & v90)
            break;
          sub_23F507550();
          if (!v23)
            break;
          v79 = v100 + v99;
          if (__OFADD__(v100, v99))
            break;
          sub_23F5079E0();
          if (v23)
            goto LABEL_96;
        }
      }
      goto LABEL_93;
    }
    goto LABEL_82;
  }
  if (v75)
  {
    if (v75 == 1)
      goto LABEL_107;
    sub_23F507584();
    if (!v23 & v90)
      goto LABEL_107;
    if (v88 == 2)
    {
      v60 = 0;
      v79 = -(uint64_t)v89;
      goto LABEL_97;
    }
    if ((v74 - 48) > 9u)
      goto LABEL_93;
    v79 = -10 * v89 - (v74 - 48);
    if (v88 == 3)
    {
LABEL_95:
      v60 = 0;
LABEL_96:
      v49 = v113;
      if ((v60 & 1) == 0)
        goto LABEL_97;
LABEL_107:
      sub_23F507890((uint64_t)v112);
      v62 = v108;
LABEL_108:
      sub_23F366748();
      sub_23F507890(v62);
      goto LABEL_31;
    }
    while (1)
    {
      sub_23F5079D0();
      if (!v23 & v90)
        goto LABEL_93;
      sub_23F507550();
      if (!v23)
        goto LABEL_93;
      v79 = v103 - v102;
      if (__OFSUB__(v103, v102))
        goto LABEL_93;
      sub_23F5079E0();
      if (v23)
        goto LABEL_96;
    }
  }
  __break(1u);
LABEL_111:
  __break(1u);
}

uint64_t sub_23F502BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE *v7;
  char v9;

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_23F61C8BC();
    swift_bridgeObjectRelease();
    v6 = v9;
  }
  else
  {
    MEMORY[0x24BDAC7A8](a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (v7 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v4 = sub_23F61C934();
      }
      v6 = sub_23F5068D0(v4, v5, (void (*)(uint64_t *__return_ptr))sub_23F506970);
      swift_bridgeObjectRelease();
    }
  }
  if ((v6 & 1) != 0)
    return 0;
  else
    return 0;
}

uint64_t sub_23F502D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;

  v12 = a3 + 64;
  sub_23F3839E4();
  v5 = v4 & v3;
  v13 = (unint64_t)(v6 + 63) >> 6;
  sub_23F617BA0();
  result = sub_23F3668F4();
  v8 = 0;
  if (!v5)
    goto LABEL_3;
LABEL_2:
  for (v5 &= v5 - 1; ; v5 = (v10 - 1) & v10)
  {
    sub_23F384324();
    sub_23F383E5C();
    sub_23F61C280();
    sub_23F38432C();
    sub_23F61C280();
    sub_23F38813C();
    sub_23F61C7CC();
    sub_23F3837B0();
    sub_23F362D08();
    result = sub_23F384120();
    if (v5)
      goto LABEL_2;
LABEL_3:
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v9 >= v13)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v13)
        goto LABEL_19;
      v10 = *(_QWORD *)(v12 + 8 * v8);
      if (!v10)
      {
        v8 = v9 + 2;
        if (v9 + 2 >= v13)
          goto LABEL_19;
        v10 = *(_QWORD *)(v12 + 8 * v8);
        if (!v10)
          break;
      }
    }
LABEL_16:
    ;
  }
  v11 = v9 + 3;
  if (v11 >= v13)
  {
LABEL_19:
    swift_release();
    return sub_23F38422C();
  }
  v10 = *(_QWORD *)(v12 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_16;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v13)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_16;
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_23F502F7C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t vars0;
  uint64_t vars8;

  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F362930();
  v7 = sub_23F384040();
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3B1F34();
  sub_23F61B134();
  sub_23F61B17C();
  sub_23F366748();
  sub_23F507B0C(v3, a1);
  sub_23F507B0C(v2, a2);
  sub_23F4455EC();
  sub_23F36196C(v9, v10, v11, v7);
  sub_23F372B50(v2, v3, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, vars0, vars8);
}

void sub_23F503050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint8_t *v20;
  int v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  int v26;

  sub_23F362ABC();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_23F3B1728();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3B1630();
  v10 = sub_23F617D08();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F482314();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v23 - v13;
  if (*(_QWORD *)(v3 + 16) && (sub_23F3756E8(), (v16 & 1) != 0))
  {
    sub_23F384918((uint64_t)v14, *(_QWORD *)(v3 + 56) + *(_QWORD *)(v11 + 72) * v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
    sub_23F384918(v7, (uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
  }
  else
  {
    v24 = v1;
    v25 = v8;
    sub_23F507714();
    sub_23F5074CC(v0, v5);
    v17 = sub_23F4064C8();
    v18 = sub_23F61C628();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)sub_23F366668();
      v23[2] = v7;
      v20 = v19;
      v23[1] = v5;
      *(_DWORD *)v19 = 67109120;
      v23[0] = v19 + 4;
      v21 = sub_23F617CFC();
      sub_23F362A28(v0, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      v26 = v21;
      sub_23F61C790();
      _os_log_impl(&dword_23F35A000, v17, v18, "Unable to update the statement id ref: %u, programStatement might be malformed", v20, 8u);
      sub_23F366530();
    }
    sub_23F362A28(v0, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    v22 = v24;

    sub_23F507420(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    sub_23F5074CC(v7, v5);
  }
  sub_23F362948();
}

uint64_t sub_23F503210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  id v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v16;

  sub_23F35D2E8(&qword_256E70760);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F362838();
  v4 = sub_23F616E68();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F4DC39C();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - v7;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = sub_23F5AA774(0xD000000000000015, 0x800000023F6384F0, 0, 0xE000000000000000, v10);

  if (!v11)
  {
    v12 = sub_23F41C5B8(v0, 1);
    goto LABEL_5;
  }
  sub_23F616E14();

  sub_23F507780(v0, v1);
  sub_23F41C5B8(v0, 0);
  v12 = sub_23F383740(v0, 1, v4);
  if (v13)
  {
LABEL_5:
    sub_23F507AC4(v12, &qword_256E70760);
    return 0;
  }
  sub_23F507780((uint64_t)v8, v0);
  v14 = sub_23F616E20();
  sub_23F383E64((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return v14;
}

void sub_23F5033AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (**v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, _QWORD);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (**v102)(uint64_t, uint64_t);
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(NSObject *, uint64_t, uint64_t);
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  sub_23F362ABC();
  a19 = v26;
  a20 = v27;
  v97 = v28;
  v98 = v29;
  v104 = v30;
  v105 = v31;
  v93 = v32;
  v96 = sub_23F3B1690();
  v95 = *(_QWORD *)(v96 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F36285C();
  sub_23F3B13F0(v34);
  v35 = sub_23F61B92C();
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F362B98();
  v37 = sub_23F618FEC();
  v113 = *(_QWORD *)(v37 - 8);
  v114 = v37;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F3B1630();
  v106 = sub_23F61B7AC();
  v112 = *(_QWORD *)(v106 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v39);
  v103 = (char *)&v88 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F383780();
  v111 = v42;
  v43 = sub_23F61AF60();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F362838();
  v91 = sub_23F35D2E8(&qword_256E74EC8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F383780();
  v92 = v47;
  v48 = sub_23F3B1728();
  sub_23F383E7C(v48, (uint64_t)&a16);
  v94 = v49;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F3B17A4();
  v51 = sub_23F61AAB0();
  v52 = *(_QWORD *)(v51 + 16);
  if (!v52)
  {
    v74 = 1;
    v76 = v92;
    v75 = v93;
    goto LABEL_23;
  }
  v89 = v22;
  sub_23F383EB8();
  v54 = v51 + v53;
  v110 = *MEMORY[0x24BEB99E0];
  v107 = *(_QWORD *)(v23 + 72);
  v109 = *(void (**)(NSObject *, uint64_t, uint64_t))(v23 + 16);
  v88 = v51;
  sub_23F383738();
  v99 = v24;
  v100 = v35;
  v101 = v43;
  v102 = v25;
  v108 = v23;
  while (1)
  {
    v109(v20, v54, v43);
    sub_23F61AF48();
    sub_23F618FD4();
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v24, v114);
    v55 = sub_23F507E2C(v25[11]);
    if (v55 != v110)
    {
      sub_23F3B1CC8(v21, v25[1]);
      goto LABEL_17;
    }
    sub_23F3B1CC8(v21, v25[12]);
    v56 = swift_projectBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v111, v56, v106);
    sub_23F366748();
    sub_23F61B6EC();
    v58 = v57;
    v59 = sub_23F61C178();
    v61 = v60;
    sub_23F3837B0();
    if (v59 == sub_23F61C178() && v61 == v62)
    {
      sub_23F384A80();
      v65 = sub_23F507728();
      v43 = v101;
      v25 = v102;
    }
    else
    {
      v58 = v62;
      v64 = sub_23F3C8510();
      sub_23F362984();
      sub_23F3837B0();
      v65 = sub_23F507728();
      v43 = v101;
      v25 = v102;
      if ((v64 & 1) == 0)
      {
        sub_23F3D09D0(v58);
        sub_23F3D09D0(v111);
        v24 = v99;
        goto LABEL_17;
      }
    }
    MEMORY[0x24266ECB0](v65);
    v66 = v58;
    v67 = sub_23F61B9A4();
    v69 = v68;
    v70 = sub_23F507918();
    v71(v70, v96);
    if (v67 == v97 && v69 == v98)
      break;
    v73 = sub_23F3C8510();
    sub_23F362984();
    sub_23F3D09D0(v66);
    sub_23F3D09D0(v111);
    v24 = v99;
    if ((v73 & 1) != 0)
      goto LABEL_21;
LABEL_17:
    sub_23F38456C((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v108 + 8));
    v54 += v107;
    if (!--v52)
    {
      sub_23F362984();
      v74 = 1;
      v22 = v89;
      v75 = v93;
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  v77 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
  v78 = v106;
  v77(v66, v106);
  v77(v111, v78);
LABEL_21:
  sub_23F362984();
  v75 = v93;
  v79 = sub_23F482A1C();
  sub_23F507278(v79, v80, v81);
  v74 = 0;
  v22 = v89;
LABEL_22:
  v76 = v92;
LABEL_23:
  sub_23F36196C(v75, v74, 1, v43);
  sub_23F362984();
  sub_23F507E0C();
  sub_23F382EF8(v75, v76, &qword_256E74EC8);
  sub_23F507DF8();
  v82 = sub_23F3B1BD4();
  if (sub_23F3B1604(v82))
  {
    v83 = (uint8_t *)sub_23F366668();
    v116 = sub_23F366668();
    *(_DWORD *)v83 = 136315138;
    sub_23F389CB4(v76, v90);
    v84 = sub_23F61C16C();
    sub_23F482C90(v84, v85);
    v115 = v86;
    sub_23F507280();
    sub_23F384364();
    sub_23F3D9844(v76, &qword_256E74EC8);
    sub_23F38485C(&dword_23F35A000, v20, (os_log_type_t)v75, "Found DynamicEnumerationEntity %s in QueryDecorationResults", v83);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F3D9844(v76, &qword_256E74EC8);

  sub_23F384430();
  sub_23F3841CC(v22, v87);
  sub_23F362948();
}

void sub_23F503954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  os_log_type_t v57;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  NSObject *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, uint64_t);
  void (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  Class isa;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  sub_23F362ABC();
  v88 = v1;
  v81 = v2;
  v3 = sub_23F3B1728();
  v76 = *(_QWORD *)(v3 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  v80 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v70 - v7;
  v9 = sub_23F5077B0();
  isa = v9[-1].isa;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3834D0();
  v78 = v11;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v12);
  v73 = (char *)&v70 - v13;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F383780();
  v85 = v15;
  v16 = sub_23F618D28();
  v86 = *(_QWORD *)(v16 - 8);
  v87 = v16;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F383780();
  v84 = v19;
  sub_23F35D2E8(&qword_256E74ED0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F36285C();
  v77 = v21;
  v22 = sub_23F507840();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3834D0();
  v75 = v24;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F5072DC();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F383780();
  v79 = v27;
  v28 = MEMORY[0x24266DFA8]();
  MEMORY[0x24266DF9C]();
  v92 = v28;
  sub_23F387718();
  v29 = v92;
  v30 = *(NSObject **)(v92 + 16);
  if (v30)
  {
    v74 = v8;
    v72 = v3;
    sub_23F383EB8();
    v32 = v29 + v31;
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
    v82 = *(_QWORD *)(v23 + 72);
    v83 = v33;
    v71 = v29;
    sub_23F362CDC();
    while (1)
    {
      v34 = v22;
      v83(v0, v32, v22);
      sub_23F61ADF8();
      v35 = v85;
      sub_23F618CF8();
      sub_23F40B4F8(v86);
      sub_23F3B121C(&qword_256E71188, (void (*)(uint64_t))MEMORY[0x24BE57320]);
      sub_23F507DA4();
      sub_23F507DA4();
      v36 = v92 == v90 && v93 == v91;
      if (v36)
        break;
      v37 = sub_23F3C8510();
      sub_23F362984();
      sub_23F362D08();
      sub_23F383CA8(v35, *((uint64_t (**)(uint64_t, uint64_t))isa + 1));
      if ((v37 & 1) != 0)
        goto LABEL_13;
      v22 = v34;
      sub_23F362A28(v0, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
      v32 += v82;
      v30 = ((char *)v30 - 1);
      if (!v30)
      {
        sub_23F362C60();
        v38 = 1;
        v8 = v74;
        goto LABEL_11;
      }
    }
    sub_23F384A80();
    sub_23F383CA8(v35, *((uint64_t (**)(uint64_t, uint64_t))isa + 1));
LABEL_13:
    v30 = v71;
    sub_23F362D18();
    v39 = v77;
    v41 = sub_23F507AD8();
    v22 = v34;
    sub_23F4244A8(v41, v42, v43);
    v38 = 0;
    v8 = v74;
    v40 = v78;
  }
  else
  {
    v38 = 1;
LABEL_11:
    v39 = v77;
    v40 = v78;
  }
  sub_23F507358(v39, v38);
  sub_23F362C60();
  v44 = sub_23F383740(v39, 1, v22);
  if (v36)
  {
    sub_23F441494(v44, &qword_256E74ED0);
    sub_23F4F2978();
    v45 = (uint64_t)isa;
    sub_23F362D94(v40, v88, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))isa + 2));
    sub_23F4F2950();
    v46 = sub_23F3B1BD4();
    if (sub_23F507A38(v30))
    {
      v47 = sub_23F366668();
      v88 = (uint64_t)v9;
      v48 = (uint8_t *)v47;
      v92 = sub_23F366668();
      *(_DWORD *)v48 = 136315138;
      v49 = sub_23F618ADC();
      sub_23F507C64(v49, v50);
      sub_23F50765C(v51);
      sub_23F61C790();
      sub_23F362984();
      sub_23F5076E8((uint64_t)isa);
      sub_23F38485C(&dword_23F35A000, v30, v46, "Unable to find %s in QueryDecorationResults", v48);
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F383E64(v40, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));

    v65 = sub_23F507918();
    sub_23F383CA8(v65, v66);
    v67 = 1;
  }
  else
  {
    v88 = (uint64_t)v9;
    v52 = *(void (**)(uint64_t))(v23 + 32);
    v53 = v79;
    v54 = sub_23F3C85C0();
    v52(v54);
    sub_23F5075E8();
    v55 = v75;
    sub_23F4244A8(v75, v53, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
    v56 = v23;
    sub_23F5075F0();
    v57 = sub_23F507BA0();
    if (sub_23F507A38(v9))
    {
      v59 = (uint8_t *)sub_23F366668();
      v60 = sub_23F366668();
      v74 = v8;
      v92 = v60;
      v84 = v52;
      v85 = v22;
      *(_DWORD *)v59 = 136315138;
      v83 = (void (*)(uint64_t, uint64_t, uint64_t))(v59 + 4);
      sub_23F61ADF8();
      sub_23F618CF8();
      sub_23F5076E8(v86);
      sub_23F618ADC();
      sub_23F507C20((uint64_t)isa);
      v61 = sub_23F507AD8();
      sub_23F37AE00(v61, v62, v63);
      sub_23F50765C(v64);
      sub_23F61C790();
      swift_bridgeObjectRelease();
      sub_23F3D98EC(v75, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
      sub_23F38485C(&dword_23F35A000, v9, v57, "Context matched: %s", v59);
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F3D98EC(v55, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));

    v68 = sub_23F5074FC();
    sub_23F383CA8(v68, v69);
    ((void (*)(uint64_t, uint64_t, uint64_t))v52)(v81, v79, v22);
    v67 = 0;
  }
  sub_23F507358(v81, v67);
  sub_23F362948();
}

void sub_23F503FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  objc_class *v4;
  objc_class *v5;
  objc_class *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_23F3B1728();
  v57 = *(_QWORD *)(v9 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F507858();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F383780();
  v54 = v12;
  sub_23F39C56C();
  v55 = type metadata accessor for ContextRule();
  v13 = MEMORY[0x24BDAC7A8](v55);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = ((char *)&v50 - v15);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v50 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v53 = (uint64_t)&v50 - v21;
  v22 = *(_QWORD *)(v2 + 16);
  if (v22)
  {
    v51 = v20;
    v52 = v8;
    v56 = v9;
    sub_23F383EB8();
    v24 = v2 + v23;
    v26 = *(_QWORD *)(v25 + 72);
    sub_23F3B1EA4();
    while (1)
    {
      sub_23F362600(v24, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ContextRule);
      v27 = v16->isa == v6 && v16[1].isa == v4;
      if (v27 || (sub_23F3C8510() & 1) != 0)
        break;
      sub_23F3D9608((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ContextRule);
      v24 += v26;
      if (!--v22)
      {
        sub_23F3B5F04();
        v9 = v56;
        goto LABEL_10;
      }
    }
    sub_23F3B5F04();
    v31 = sub_23F384AB4();
    sub_23F4DCD78(v31, v32);
    v33 = v53;
    sub_23F4DCD78((uint64_t)v19, v53);
    sub_23F5075E8();
    v34 = v51;
    sub_23F362600(v33, v51, (uint64_t (*)(_QWORD))type metadata accessor for ContextRule);
    sub_23F3E0254();
    v35 = sub_23F5075F0();
    v36 = sub_23F61C61C();
    if (sub_23F50724C(v35))
    {
      v37 = sub_23F366668();
      v50 = sub_23F366668();
      v58 = v50;
      *(_DWORD *)v37 = 136315394;
      sub_23F362CDC();
      sub_23F507B54();
      sub_23F507CA8(v38);
      sub_23F61C790();
      sub_23F3E01D0();
      *(_WORD *)(v37 + 12) = 2080;
      v39 = sub_23F618ADC();
      sub_23F37AE00(v39, v40, &v58);
      sub_23F507C9C(v41);
      sub_23F61C790();
      sub_23F362984();
      sub_23F3D9608(v34, (uint64_t (*)(_QWORD))type metadata accessor for ContextRule);
      sub_23F3E025C(&dword_23F35A000, v35, v36, "Found %s in contextRule, returning %s)", (uint8_t *)v37);
      sub_23F507364();
      sub_23F366530();
    }
    sub_23F384A80();
    sub_23F3D9608(v34, (uint64_t (*)(_QWORD))type metadata accessor for ContextRule);

    sub_23F507B74();
    v46 = v52;
    v47 = v33 + *(int *)(v55 + 20);
    sub_23F5077B0();
    sub_23F507D68();
    v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)()))(v48 + 16))(v46, v47, type metadata accessor for ContextRule);
    sub_23F507DE8(v49, (uint64_t (*)(_QWORD))type metadata accessor for ContextRule);
    sub_23F507A58();
  }
  else
  {
LABEL_10:
    sub_23F50712C();
    sub_23F3E0254();
    sub_23F619E8C();
    v28 = sub_23F3B1BD4();
    if (sub_23F507304(v16))
    {
      v56 = v9;
      v29 = (uint8_t *)sub_23F366668();
      v58 = sub_23F366668();
      *(_DWORD *)v29 = 136315138;
      sub_23F362CDC();
      sub_23F507B54();
      sub_23F3E2770(v30);
      sub_23F435C14();
      sub_23F3E01D0();
      sub_23F38485C(&dword_23F35A000, v16, v28, "Unable to find %s in ContextRules", v29);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F384A80();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v0, v9);
    sub_23F5077B0();
    sub_23F3837C8();
  }
  sub_23F36196C(v42, v43, v44, v45);
  sub_23F362948();
}

Class sub_23F5043F8()
{
  NSObject *v0;
  NSObject *v1;
  objc_class *v2;
  objc_class *v3;
  objc_class *v4;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  Class v10;
  BOOL v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = sub_23F3B1728();
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F5072DC();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F383780();
  isa = v1[2].isa;
  if (isa)
  {
    v1 += 9;
    while (1)
    {
      v10 = v1[-3].isa;
      v11 = v1[-5].isa == v5 && v1[-4].isa == v3;
      if (v11 || (sub_23F3C8510() & 1) != 0)
        break;
      v1 += 6;
      isa = (Class)((char *)isa - 1);
      if (!isa)
        goto LABEL_9;
    }
    sub_23F617BA0();
    sub_23F383E5C();
    sub_23F384324();
    sub_23F50712C();
    sub_23F3E0254();
    sub_23F3E0254();
    sub_23F3E0254();
    sub_23F3E0254();
    sub_23F619E8C();
    v15 = sub_23F3B1BD4();
    if (sub_23F507B64(v1))
    {
      v25 = v1;
      v16 = sub_23F366668();
      sub_23F366668();
      *(_DWORD *)v16 = 136315394;
      sub_23F389CDC();
      sub_23F5074AC();
      sub_23F507CA8(v17);
      sub_23F61C790();
      sub_23F3E01D0();
      *(_WORD *)(v16 + 12) = 2080;
      sub_23F383E5C();
      v18 = sub_23F3ECB9C();
      sub_23F37AE00(v18, v19, v20);
      sub_23F507C9C(v21);
      sub_23F61C790();
      sub_23F384A80();
      sub_23F384A80();
      sub_23F3E01D0();
      sub_23F3E025C(&dword_23F35A000, v25, v15, "Found %s in DynamicEnumerationEntityRule, returning %s)", (uint8_t *)v16);
      sub_23F507364();
      sub_23F366530();
    }

    sub_23F384A80();
    sub_23F384A80();
    sub_23F384A80();
    sub_23F384A80();
    v22 = sub_23F5076F4();
    v23(v22, v27);
    sub_23F383E5C();
    swift_bridgeObjectRelease();
    sub_23F384364();
  }
  else
  {
LABEL_9:
    sub_23F5073A8();
    sub_23F3E0254();
    sub_23F3B1D6C();
    v12 = sub_23F3B1BD4();
    if (sub_23F411520(v1))
    {
      v13 = (uint8_t *)sub_23F366668();
      sub_23F366668();
      *(_DWORD *)v13 = 136315138;
      sub_23F389CDC();
      sub_23F5074AC();
      sub_23F3E2770(v14);
      sub_23F507D1C();
      sub_23F3E01D0();
      sub_23F38485C(&dword_23F35A000, v1, v12, "Unable to find %s in DynamicEnumerationEntityRule", v13);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F384A80();
    sub_23F5076E8(v26);
    return 0;
  }
  return v10;
}

void sub_23F504750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v4 = sub_23F3B1728();
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F482314();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F616BA4();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B1630();
  sub_23F61C148();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3E2718();
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init, v30);
  v10 = (void *)sub_23F61C0E8();
  LODWORD(v9) = objc_msgSend(v9, sel_fileExistsAtPath_, v10);

  if (!(_DWORD)v9)
  {
    sub_23F50712C();
    sub_23F3E0254();
    v11 = sub_23F619E8C();
    v12 = sub_23F61C61C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)sub_23F366668();
      v32 = sub_23F366668();
      *(_DWORD *)v13 = 136315138;
      sub_23F389CDC();
      sub_23F37AE00(v3, v1, &v32);
      sub_23F50765C(v14);
      sub_23F435C2C();
      sub_23F3E01D0();
      sub_23F38485C(&dword_23F35A000, v11, v12, "Planner overrides version file does not exist: %s", v13);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F384A80();
    sub_23F5077A8();
    v15 = sub_23F5076F4();
    v16(v15, v31);
    goto LABEL_6;
  }
  sub_23F61C13C();
  v32 = sub_23F61C0AC();
  v33 = v17;
  sub_23F616B98();
  sub_23F38813C();
  v18 = sub_23F61C7A8();
  sub_23F50771C();
  sub_23F384364();
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
  {
LABEL_19:
    sub_23F5077A8();
    swift_bridgeObjectRelease();
LABEL_6:
    sub_23F38422C();
    sub_23F362948();
    return;
  }
  v20 = (uint64_t *)(v18 + 40);
  while (1)
  {
    v21 = *v20;
    v32 = *(v20 - 1);
    v33 = v21;
    sub_23F3668F4();
    sub_23F616B8C();
    v22 = sub_23F61C7C0();
    v24 = v23;
    sub_23F50771C();
    sub_23F362D18();
    v25 = HIBYTE(v24) & 0xF;
    if ((v24 & 0x2000000000000000) == 0)
      v25 = v22 & 0xFFFFFFFFFFFFLL;
    if (v25)
    {
      v32 = v22;
      v33 = v24;
      v26 = (_QWORD *)sub_23F61C7B4();
      sub_23F384364();
      if (v26[2] == 2)
      {
        v27 = v26[4] == 0x6E6F6973726576 && v26[5] == 0xE700000000000000;
        if (v27 || (sub_23F3C8510() & 1) != 0)
          break;
      }
    }
    swift_bridgeObjectRelease();
    v20 += 2;
    if (!--v19)
      goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  if (v26[2] >= 2uLL)
  {
    v29 = v26[6];
    v28 = v26[7];
    sub_23F3668F4();
    sub_23F362984();
    v32 = v29;
    v33 = v28;
    sub_23F616B80();
    sub_23F61C7C0();
    sub_23F5077A8();
    sub_23F50771C();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  __break(1u);
}

void PlanOverridesService.deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  v1 = sub_23F61B32C();
  sub_23F3C3DC8(*(_QWORD *)(v1 - 8));
  sub_23F504E34(*(void **)(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_planOverridesStore), *(void **)(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_planOverridesStore + 8), *(void **)(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_planOverridesStore + 16));
  sub_23F3D9844(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20PlanOverridesService_userLocale, &qword_256E70A60);
  swift_defaultActor_destroy();
  sub_23F362928();
}

uint64_t PlanOverridesService.__deallocating_deinit()
{
  PlanOverridesService.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t PlanOverridesService.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F504C20()
{
  return PlanOverridesService.unownedExecutor.getter();
}

uint64_t sub_23F504C38(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F3609AC;
  return sub_23F4F3E04(a1);
}

uint64_t sub_23F504C88(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F504CD8;
  return sub_23F4F49D4(a1);
}

uint64_t sub_23F504CD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = sub_23F3629E8();
  if (!v1)
    v4 = a1;
  return sub_23F507510(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23F504D08@<X0>(uint64_t a1@<X8>)
{
  return sub_23F4F5858(a1);
}

uint64_t sub_23F504D1C()
{
  return static PlanOverridesService.isEnabled()() & 1;
}

void sub_23F504D34()
{
  sub_23F5ABF1C();
}

void sub_23F504D54(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  sub_23F362928();
}

uint64_t sub_23F504D70(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v4)(uint64_t, unint64_t, uint64_t);
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v4 = *(void (**)(uint64_t, unint64_t, uint64_t))(a1 + 32);
  v5 = a2;
  v6 = sub_23F616EEC();
  v8 = v7;

  v4(v6, v8, a3);
  return sub_23F3F3D0C(v6, v8);
}

void sub_23F504DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (v2)
  {
    sub_23F35D2E8(&qword_256E70320);
    v4 = (_QWORD *)sub_23F36682C();
    v5 = j__malloc_size(v4);
    v4[2] = a1;
    v4[3] = 2 * v5 - 64;
  }
  sub_23F362928();
}

void sub_23F504E34(void *a1, void *a2, void *a3)
{
  if (a1)
  {

  }
}

uint64_t type metadata accessor for PlanOverridesService.PlanOverridesRequest(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E78998);
}

uint64_t type metadata accessor for PlanOverridesService.PlanOverridesResponse(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E78A28);
}

uint64_t sub_23F504E98()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23F428AC4() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  sub_23F383E88(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F38422C();
  return swift_deallocObject();
}

uint64_t sub_23F504F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F428AC4() - 8) + 80);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = v0 + ((v2 + 24) & ~v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  v6 = sub_23F507D4C(v5);
  return sub_23F4F4F24(v6, v7, v3, v4);
}

unint64_t sub_23F504F78()
{
  unint64_t result;

  result = qword_256E78660;
  if (!qword_256E78660)
  {
    result = MEMORY[0x242670A44](&unk_23F62ADE4, &type metadata for PlanOverridesService.PlanOverridesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78660);
  }
  return result;
}

unint64_t sub_23F504FB4()
{
  unint64_t result;

  result = qword_256E78678;
  if (!qword_256E78678)
  {
    result = MEMORY[0x242670A44](&unk_23F62AD94, &type metadata for PlanOverridesService.PlanOverridesResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78678);
  }
  return result;
}

unint64_t sub_23F504FF0()
{
  unint64_t result;

  result = qword_256E78698;
  if (!qword_256E78698)
  {
    result = MEMORY[0x242670A44](&unk_23F62AD54, &type metadata for PlanOverridesServiceError);
    atomic_store(result, (unint64_t *)&qword_256E78698);
  }
  return result;
}

void sub_23F50502C(uint64_t a1)
{
  if (a1)
    sub_23F507AA4();
  __break(1u);
}

void sub_23F50509C(uint64_t a1)
{
  uint64_t v2;

  sub_23F3B121C(&qword_256E786B8, (void (*)(uint64_t))type metadata accessor for PlanOverridesService);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t type metadata accessor for PlanOverridesService(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E786E8);
}

uint64_t sub_23F5050EC()
{
  return type metadata accessor for PlanOverridesService(0);
}

void sub_23F5050F4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F61B32C();
  if (v0 <= 0x3F)
  {
    sub_23F4AED90(319, qword_256E70C28, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for PlanOverridesService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlanOverridesService.__allocating_init(toolbox:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of PlanOverridesService.setup(sessionState:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 280) + *(_QWORD *)(*(_QWORD *)v1 + 280));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23F362820;
  return v6(a1);
}

uint64_t dispatch thunk of PlanOverridesService.handle(_:plannerServiceContext:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v1 = (_QWORD *)sub_23F3629C0();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23F50529C;
  v2 = sub_23F482A1C();
  return v4(v2);
}

uint64_t sub_23F50529C(uint64_t a1)
{
  uint64_t v1;

  sub_23F3629E8();
  return sub_23F507510(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t dispatch thunk of PlanOverridesService.telemetryTarget.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of PlanOverridesService.planOverrideEventFromTranscript(sessionState:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v1 = (_QWORD *)sub_23F3629C0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F507D4C(v1);
  return v4(v2);
}

uint64_t dispatch thunk of PlanOverridesService.loadPlanOverrideJson(filePath:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))() & 1;
}

uint64_t destroy for PlanOverridesService.PlanOverridesRequest(uint64_t a1, uint64_t a2)
{
  return sub_23F506CF0(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE56878]);
}

uint64_t getEnumTagSinglePayload for PlanOverridesService.PlanOverridesRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F505364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F428AE4();
  v0 = sub_23F5079C0();
  return sub_23F4DCE7C(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for PlanOverridesService.PlanOverridesRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F505394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F428AE4();
  v0 = sub_23F44D4D4();
  return sub_23F4DC9C4(v0, v1, v2, v3);
}

uint64_t *initializeBufferWithCopyOfBuffer for PlanOverridesService.PlanOverridesResponse(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(sub_23F35D2E8(&qword_256E702E0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_23F61B2E4();
    if (sub_23F36195C((uint64_t)a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      sub_23F36196C((uint64_t)a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t destroy for PlanOverridesService.PlanOverridesResponse(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23F61B2E4();
  result = sub_23F36195C(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for PlanOverridesService.PlanOverridesResponse(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23F61B2E4();
  if (sub_23F36195C((uint64_t)a2, 1, v4))
  {
    v5 = sub_23F35D2E8(&qword_256E702E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    sub_23F36196C((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithCopy for PlanOverridesService.PlanOverridesResponse(void *a1, const void *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23F61B2E4();
  v5 = sub_23F36195C((uint64_t)a1, 1, v4);
  v6 = sub_23F36195C((uint64_t)a2, 1, v4);
  if (!v5)
  {
    v7 = *(_QWORD *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = sub_23F35D2E8(&qword_256E702E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  sub_23F36196C((uint64_t)a1, 0, 1, v4);
  return a1;
}

void *initializeWithTake for PlanOverridesService.PlanOverridesResponse(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23F61B2E4();
  if (sub_23F36195C((uint64_t)a2, 1, v4))
  {
    v5 = sub_23F35D2E8(&qword_256E702E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    sub_23F36196C((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithTake for PlanOverridesService.PlanOverridesResponse(void *a1, const void *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23F61B2E4();
  v5 = sub_23F36195C((uint64_t)a1, 1, v4);
  v6 = sub_23F36195C((uint64_t)a2, 1, v4);
  if (!v5)
  {
    v7 = *(_QWORD *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = sub_23F35D2E8(&qword_256E702E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  sub_23F36196C((uint64_t)a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlanOverridesService.PlanOverridesResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5057E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E702E0);
  v0 = sub_23F5079C0();
  return sub_23F4DCE7C(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for PlanOverridesService.PlanOverridesResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F505818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F35D2E8(&qword_256E702E0);
  v0 = sub_23F44D4D4();
  return sub_23F4DC9C4(v0, v1, v2, v3);
}

void sub_23F505844()
{
  unint64_t v0;

  sub_23F4AED90(319, (unint64_t *)&qword_256E74AA0, (void (*)(uint64_t))MEMORY[0x24BE56CD0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for PlanOverridesServiceError()
{
  return &type metadata for PlanOverridesServiceError;
}

ValueMetadata *type metadata accessor for PlanOverridesService.PlanOverridesResponse.CodingKeys()
{
  return &type metadata for PlanOverridesService.PlanOverridesResponse.CodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerRuntime20PlanOverridesServiceC21PlanOverridesResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F505920 + 4 * byte_23F62A940[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F505940 + 4 * byte_23F62A945[v4]))();
}

_BYTE *sub_23F505920(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F505940(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F505948(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F505950(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F505958(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F505960(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PlanOverridesService.PlanOverridesRequest.CodingKeys()
{
  return &type metadata for PlanOverridesService.PlanOverridesRequest.CodingKeys;
}

unint64_t sub_23F505980()
{
  unint64_t result;

  result = qword_256E78A60;
  if (!qword_256E78A60)
  {
    result = MEMORY[0x242670A44](&unk_23F62AC34, &type metadata for PlanOverridesService.PlanOverridesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78A60);
  }
  return result;
}

unint64_t sub_23F5059C0()
{
  unint64_t result;

  result = qword_256E78A68;
  if (!qword_256E78A68)
  {
    result = MEMORY[0x242670A44](&unk_23F62ACEC, &type metadata for PlanOverridesService.PlanOverridesResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78A68);
  }
  return result;
}

unint64_t sub_23F505A04()
{
  unint64_t result;

  result = qword_256E78A70;
  if (!qword_256E78A70)
  {
    result = MEMORY[0x242670A44](&unk_23F62AC5C, &type metadata for PlanOverridesService.PlanOverridesResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78A70);
  }
  return result;
}

unint64_t sub_23F505A44()
{
  unint64_t result;

  result = qword_256E78A78;
  if (!qword_256E78A78)
  {
    result = MEMORY[0x242670A44](&unk_23F62AC84, &type metadata for PlanOverridesService.PlanOverridesResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78A78);
  }
  return result;
}

unint64_t sub_23F505A84()
{
  unint64_t result;

  result = qword_256E78A80;
  if (!qword_256E78A80)
  {
    result = MEMORY[0x242670A44](&unk_23F62ABA4, &type metadata for PlanOverridesService.PlanOverridesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78A80);
  }
  return result;
}

unint64_t sub_23F505AC4()
{
  unint64_t result;

  result = qword_256E78A88;
  if (!qword_256E78A88)
  {
    result = MEMORY[0x242670A44](&unk_23F62ABCC, &type metadata for PlanOverridesService.PlanOverridesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E78A88);
  }
  return result;
}

unint64_t sub_23F505B00()
{
  unint64_t result;

  result = qword_256E78A90;
  if (!qword_256E78A90)
  {
    result = MEMORY[0x242670A44](&unk_23F62AD14, &type metadata for PlanOverridesServiceError);
    atomic_store(result, (unint64_t *)&qword_256E78A90);
  }
  return result;
}

uint64_t sub_23F505B3C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v0 = sub_23F505B8C();
  sub_23F505BC0(v0, v1, v2, v3);
  sub_23F362D18();
  return sub_23F38422C();
}

uint64_t sub_23F505B8C()
{
  return sub_23F61C34C();
}

uint64_t sub_23F505BC0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    sub_23F505D04(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      sub_23F504DD8(v9, 0);
      v12 = v11;
      sub_23F505DF0(v16, v11 + 32, v10, a1, a2, a3, a4);
      v14 = v13;
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      if (v14 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v12 = MEMORY[0x24BEE4AF8];
    }
    v15 = MEMORY[0x24266F6DC](v12 + 32, *(_QWORD *)(v12 + 16));
    swift_release();
    return v15;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x24266F6DCLL);
LABEL_9:
      sub_23F61C934();
      goto LABEL_12;
    }
    v16[0] = a3;
    v16[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x24266F6DC]((char *)v16 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

void sub_23F505D04(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v7 = a1;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    sub_23F3BBECC(a1, a3, a4);
    v7 = v10;
  }
  if ((a2 & 0xC) == v9)
  {
    sub_23F3BBECC(a2, a3, a4);
    a2 = v11;
    if ((a4 & 0x1000000000000000) == 0)
      return;
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return;
  }
  v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  if (v12 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v12 >= a2 >> 16)
  {
    sub_23F61C2D4();
    return;
  }
  __break(1u);
}

void sub_23F505DF0(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v28;
  unint64_t v29;
  _QWORD v30[2];

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v11 = a4;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v29 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = a4;
LABEL_33:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v11;
    return;
  }
  v13 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v23 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v24 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v25 = v16;
  v28 = a3 - 1;
  v11 = a4;
  while (1)
  {
    v17 = v11;
    if ((v11 & 0xC) == v15)
      sub_23F3BBECC(v11, a6, a7);
    if (v17 >> 14 < v29 || v17 >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      v21 = sub_23F61C2E0();
    }
    else
    {
      v19 = v17 >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v30[0] = a6;
        v30[1] = v24;
        v21 = *((_BYTE *)v30 + v19);
      }
      else
      {
        v20 = v23;
        if ((a6 & 0x1000000000000000) == 0)
          v20 = sub_23F61C934();
        v21 = *(_BYTE *)(v20 + v19);
      }
    }
    if ((v11 & 0xC) == v15)
    {
      sub_23F3BBECC(v11, a6, a7);
      v11 = v22;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v25 <= v11 >> 16)
      goto LABEL_35;
    v11 = sub_23F61C2BC();
LABEL_31:
    *(_BYTE *)(a2 + v13) = v21;
    if (v28 != v13)
    {
      ++v13;
      if (v10 != v11 >> 14)
        continue;
    }
    goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_23F505FF0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v49 = a1;
  v53 = sub_23F61B2C0();
  v1 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_23F61B1E8();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F61B2E4();
  v6 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  v52 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(qword_256E78B18);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v45 - v13);
  sub_23F617BA0();
  v15 = v1;
  sub_23F4F3328();
  v17 = v16;
  v18 = 0;
  v19 = *(_QWORD *)(v16 + 16);
  v50 = *MEMORY[0x24BE56AC8];
  while (1)
  {
    if (v18 == v19)
    {
      v20 = sub_23F35D2E8(&qword_256E701C0);
      sub_23F36196C((uint64_t)v12, 1, 1, v20);
      v21 = v19;
      goto LABEL_6;
    }
    if (v18 >= *(_QWORD *)(v17 + 16))
      break;
    v22 = sub_23F35D2E8(&qword_256E701C0);
    sub_23F382EF8(v17+ ((*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v18, (uint64_t)v12, &qword_256E701C0);
    v21 = v18 + 1;
    sub_23F36196C((uint64_t)v12, 0, 1, v22);
LABEL_6:
    sub_23F383004((uint64_t)v12, (uint64_t)v14, qword_256E78B18);
    v23 = sub_23F35D2E8(&qword_256E701C0);
    if (sub_23F36195C((uint64_t)v14, 1, v23) == 1)
    {
      swift_bridgeObjectRelease();
      v36 = sub_23F35D2E8(&qword_256E78B10);
      v37 = (uint64_t)v49;
      v38 = 1;
LABEL_11:
      sub_23F36196C(v37, v38, 1, v36);
      return;
    }
    v54 = v21;
    v24 = v17;
    v25 = (char *)v14 + *(int *)(v23 + 48);
    v26 = v14;
    v27 = *v14;
    v28 = v52;
    v29 = v3;
    v30 = v51;
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v8, v25, v51);
    sub_23F61B2CC();
    v31 = v30;
    v3 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v31);
    v32 = *(uint64_t (**)(char *, uint64_t))(v15 + 88);
    v33 = v15;
    v34 = v53;
    v35 = v32(v29, v53);
    if (v35 == v50)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 96))(v29, v34);
      v39 = v47;
      v40 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
      v41 = v48;
      v40(v47, v29, v48);
      v42 = sub_23F35D2E8(&qword_256E78B10);
      v43 = v49;
      v44 = (char *)v49 + *(int *)(v42 + 48);
      *v49 = v27;
      v40(v44, v39, v41);
      v37 = (uint64_t)v43;
      v38 = 0;
      v36 = v42;
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v34);
    v15 = v33;
    v17 = v24;
    v14 = v26;
    v18 = v54;
  }
  __break(1u);
}

unint64_t sub_23F50637C@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v4 = result;
    if (*(_QWORD *)(a2 + 16) > result)
    {
      v6 = sub_23F61B2E4();
      return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a2+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v4, v6);
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_23F5063FC@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X2>, char a3@<W3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((a3 & 1) != 0)
  {
    v7 = sub_23F61B2E4();
    return (_QWORD *)sub_23F36196C((uint64_t)a4, 1, 1, v7);
  }
  else
  {
    v9 = a2;
    result = a1(a4, &v9);
    if (!v4)
    {
      v8 = sub_23F61B2E4();
      return (_QWORD *)sub_23F36196C((uint64_t)a4, 0, 1, v8);
    }
  }
  return result;
}

unsigned __int8 *sub_23F506498(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_23F5065F0(a1, a2, a3);
}

unsigned __int8 *sub_23F5064AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  sub_23F617BA0();
  v5 = sub_23F61C340();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_23F505B3C();
  v10 = v9;
  sub_23F362984();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_23F61C934();
  }
LABEL_7:
  v11 = sub_23F5065F0(v7, v8, a3);
  sub_23F362984();
  return v11;
}

_BYTE *sub_23F506588@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

unsigned __int8 *sub_23F5065F0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      v15 = a2 - 1;
      if (a2 != 1)
      {
        v16 = a3 + 48;
        v17 = a3 + 55;
        v18 = a3 + 87;
        if (a3 > 10)
        {
          v16 = 58;
        }
        else
        {
          v18 = 97;
          v17 = 65;
        }
        if (result)
        {
          v9 = 0;
          v19 = result + 1;
          do
          {
            v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                v13 = 0;
                if (v20 < 0x61 || v20 >= v18)
                  return (unsigned __int8 *)v13;
                v21 = -87;
              }
              else
              {
                v21 = -55;
              }
            }
            else
            {
              v21 = -48;
            }
            v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21)))
              return 0;
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        v23 = a3 + 48;
        v24 = a3 + 55;
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v23 = 58;
        }
        else
        {
          v25 = 97;
          v24 = 65;
        }
        if (result)
        {
          v26 = 0;
          do
          {
            v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                v13 = 0;
                if (v27 < 0x61 || v27 >= v25)
                  return (unsigned __int8 *)v13;
                v28 = -87;
              }
              else
              {
                v28 = -55;
              }
            }
            else
            {
              v28 = -48;
            }
            v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
              return 0;
            v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28)))
              return 0;
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      v5 = a2 - 1;
      if (a2 != 1)
      {
        v6 = a3 + 48;
        v7 = a3 + 55;
        v8 = a3 + 87;
        if (a3 > 10)
        {
          v6 = 58;
        }
        else
        {
          v8 = 97;
          v7 = 65;
        }
        if (result)
        {
          v9 = 0;
          for (i = result + 1; ; ++i)
          {
            v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                v13 = 0;
                if (v11 < 0x61 || v11 >= v8)
                  return (unsigned __int8 *)v13;
                v12 = -87;
              }
              else
              {
                v12 = -55;
              }
            }
            else
            {
              v12 = -48;
            }
            v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12)))
              return 0;
            if (!--v5)
              return (unsigned __int8 *)v9;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23F50686C(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  BOOL v8;

  if ((a2 & 0x2000000000000000) != 0)
    v7 = HIBYTE(a2) & 0xF;
  else
    v7 = a1 & 0xFFFFFFFFFFFFLL;
  v8 = a1 == a5 && a2 == a6;
  if (v8 && !(a3 >> 16) && v7 == a4 >> 16)
    return 1;
  else
    return sub_23F61CC10() & 1;
}

uint64_t sub_23F5068D0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  char v4;
  uint64_t var2;

  if (a1)
  {
    a3(&var2);
    if (!v3)
      v4 = var2;
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, _QWORD, _QWORD))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3)
      v4 = BYTE1(var2);
  }
  return v4 & 1;
}

unint64_t sub_23F506924@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23F50637C(*a1, *a2, a3);
}

_BYTE *sub_23F506958@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_23F506588(a1, a2);
}

_QWORD *sub_23F506970@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
    *a1 = v5;
  return result;
}

uint64_t type metadata accessor for PlanOverridesService.EventReference(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E78B78);
}

void sub_23F5069C0()
{
  sub_23F61B608();
  sub_23F362928();
}

void sub_23F5069E0(void *a1)
{
  bzero(a1, 0xB9uLL);
}

uint64_t sub_23F5069E8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23F506A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_23F5096CC(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_23F506A1C()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  sub_23F362928();
}

uint64_t sub_23F506A38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23F506A48()
{
  return swift_release();
}

uint64_t *sub_23F506A50(uint64_t *a1)
{
  sub_23F506AC0(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16]);
  return a1;
}

uint64_t sub_23F506AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_23F4EF330(a3, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F4EF394(a17);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F506BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlanOverridesService.EventReference(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_23F506BFC(id result, void *a2, void *a3)
{
  id v4;
  id v5;

  if (result)
  {
    v4 = result;
    v5 = a2;
    return a3;
  }
  return result;
}

unint64_t sub_23F506C40@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23F506924(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t *sub_23F506C5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F617000();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_23F506CE4(uint64_t a1, uint64_t a2)
{
  return sub_23F506CF0(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23F506CF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v4;

  v4 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t sub_23F506D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23F506D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23F506DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23F506E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23F506E94()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F506EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F3846E4();
  v0 = sub_23F5079C0();
  return sub_23F4DCE7C(v0, v1, v2);
}

uint64_t sub_23F506EC4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F506ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F3846E4();
  v0 = sub_23F44D4D4();
  return sub_23F4DC9C4(v0, v1, v2, v3);
}

uint64_t sub_23F506EF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F617000();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23F506F68(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F384504(a1, a2, a3);
  sub_23F44D47C();
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40));
  sub_23F362928();
}

uint64_t sub_23F506FB4()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(_QWORD *)(v1 - 368) + *(_QWORD *)(v1 - 360);
}

uint64_t sub_23F506FDC()
{
  return sub_23F61A654();
}

uint64_t sub_23F506FF4()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F507008()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
  return sub_23F617BA0();
}

uint64_t sub_23F50702C(float a1)
{
  int v1;
  float *v2;
  uint64_t v3;

  *v2 = a1;
  *(_QWORD *)(v3 - 344) = v2 + 1;
  *(_DWORD *)(v3 - 336) = v1;
  return sub_23F61B260();
}

uint64_t sub_23F507058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 648) + 8))(v1, v0);
}

uint64_t sub_23F507078(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 288) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F5070A0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 - 456))(*(_QWORD *)(v1 - 352), v0);
}

uint64_t sub_23F5070B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 456))(a1, v1);
}

uint64_t sub_23F5070C8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 288) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F5070E4@<X0>(uint64_t (*a1)(_QWORD, _QWORD, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(*(_QWORD *)(v1 - 256), *(_QWORD *)(v2 - 328), *(_QWORD *)(v2 - 440));
}

uint64_t sub_23F507104@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, *(unsigned int *)(v2 - 256), *(_QWORD *)(v3 - 488));
}

uint64_t sub_23F507114()
{
  return sub_23F61CC1C();
}

uint64_t sub_23F50712C()
{
  return sub_23F6190AC();
}

uint64_t sub_23F507134@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, *(_QWORD *)(v2 - 256), v3);
}

uint64_t sub_23F507150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 - 264);
  v2 = *(_QWORD *)(v0 - 256);
  v3 = *(_QWORD *)(v0 - 248);
  v4 = *(_QWORD *)(v0 - 240);
  *(_QWORD *)(v0 - 320) = v1;
  *(_QWORD *)(v0 - 312) = v2;
  *(_QWORD *)(v0 - 304) = v3;
  *(_QWORD *)(v0 - 296) = v4;
  return sub_23F4EF300(v1, v2);
}

uint64_t sub_23F507194@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 - 256))();
}

uint64_t sub_23F50719C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 248))(a1, *(_QWORD *)(v1 + 312));
}

uint64_t sub_23F5071A8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 328) = result;
  *(_QWORD *)(v1 - 320) = result;
  return result;
}

_QWORD *sub_23F5071BC()
{
  uint64_t v0;

  return sub_23F4EF8C4((_QWORD *)(v0 + 1080));
}

void sub_23F5071C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v0, v1, (uint64_t *)(v2 - 320));
}

uint64_t sub_23F5071D4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F5071F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 - 136))(a1, *(_QWORD *)(v2 - 376), v1);
}

uint64_t sub_23F507204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23F4FB760(a1, a2, *(_QWORD *)(v4 - 352), a4, *(_QWORD *)(v4 - 344));
}

uint64_t sub_23F507220()
{
  return swift_deallocObject();
}

uint64_t sub_23F507240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

BOOL sub_23F50724C(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t sub_23F507254()
{
  return sub_23F61A678();
}

uint64_t sub_23F507260()
{
  return sub_23F617CF0();
}

uint64_t sub_23F50726C()
{
  return sub_23F6190AC();
}

uint64_t sub_23F507278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F507280()
{
  return sub_23F61C790();
}

__n128 sub_23F50728C(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  __n128 result;

  *(_QWORD *)(v2 - 104) = a1;
  result = *(__n128 *)(v2 - 304);
  *v1 = result.n128_u32[0];
  *(_QWORD *)(v2 - 192) = v1 + 1;
  return result;
}

uint64_t sub_23F5072C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 128))(a1, v1);
}

uint64_t sub_23F5072CC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v1 - 136))(a1, *(_QWORD *)(v1 - 376), *(_QWORD *)(v1 - 128));
}

void sub_23F5072EC()
{
  sub_23F492508();
}

uint64_t sub_23F5072F4()
{
  return swift_beginAccess();
}

BOOL sub_23F507304(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t sub_23F50730C()
{
  return sub_23F61A678();
}

uint64_t sub_23F507314()
{
  return sub_23F61C790();
}

void sub_23F507324(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  unsigned __int8 v3;
  __n128 *v4;

  v4 = (__n128 *)(v2 + a1);
  v4[2].n128_u64[0] = 0;
  *v4 = a2;
  v4[1] = a2;
  v4[2].n128_u8[8] = v3;
}

uint64_t sub_23F507338()
{
  return sub_23F6190AC();
}

uint64_t sub_23F507344()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 592);
}

uint64_t sub_23F507358(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F36196C(a1, a2, 1, v2);
}

uint64_t sub_23F507364()
{
  return swift_arrayDestroy();
}

unint64_t sub_23F50736C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23F4FF430(v0, v1, *(_QWORD *)(v2 - 704));
}

uint64_t sub_23F507380()
{
  return sub_23F61C790();
}

uint64_t sub_23F507388(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 - 160))(a1, *(_QWORD *)(v1 - 152));
}

uint64_t sub_23F5073A0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F5073A8()
{
  return sub_23F6190AC();
}

uint64_t sub_23F5073B0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5073C8(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 288) = a1;
  *v1 = *(_OWORD *)(v2 - 352);
  return sub_23F617BA0();
}

void *sub_23F5073E8()
{
  uint64_t v0;

  return memcpy((void *)(v0 + 888), (const void *)(v0 + 1080), 0xB9uLL);
}

uint64_t sub_23F5073F8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F507414()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F507420@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F507438()
{
  uint64_t (*v0)(_QWORD, _QWORD);
  uint64_t v1;

  return v0(*(_QWORD *)(v1 - 376), *(_QWORD *)(v1 - 128));
}

uint64_t sub_23F507448()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 216);
}

uint64_t sub_23F50746C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

void sub_23F507474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t *v24;
  uint64_t v25;

  sub_23F4FCE50(a1, a2, a3, v24[29], a5, v25, v24[47], v24[48], a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24);
}

uint64_t sub_23F507490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t sub_23F5074A0(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

void sub_23F5074AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v1, v0, (uint64_t *)(v2 - 88));
}

void sub_23F5074BC()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F37AE00(*(_QWORD *)(v1 - 160), v0, (uint64_t *)(v1 - 88));
}

uint64_t sub_23F5074CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F5074D4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5074E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v2, v1, a1);
}

uint64_t sub_23F5074FC()
{
  uint64_t v0;

  return v0;
}

void sub_23F507508(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F37AE00(a1, v3, a3);
}

uint64_t sub_23F507510(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23F50751C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 384);
}

uint64_t sub_23F507564()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 392);
}

uint64_t sub_23F5075A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v2 + 16))(*(_QWORD *)(v0 + 192), v1, v3);
}

uint64_t sub_23F5075E8()
{
  return sub_23F6190AC();
}

uint64_t sub_23F5075F0()
{
  return sub_23F619E8C();
}

uint64_t sub_23F5075F8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F507600()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F50760C()
{
  return sub_23F61B2E4();
}

void sub_23F507614()
{
  sub_23F377D54();
}

uint64_t *sub_23F50762C()
{
  uint64_t v0;

  return sub_23F506A50((uint64_t *)(v0 + 760));
}

uint64_t sub_23F507640()
{
  return 0;
}

uint64_t sub_23F507654()
{
  return sub_23F619E8C();
}

uint64_t sub_23F50765C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t sub_23F507670()
{
  return sub_23F61B128();
}

uint64_t sub_23F507688()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F50769C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 640);
}

uint64_t sub_23F5076B8@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t sub_23F5076C4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5076E0()
{
  return sub_23F6190AC();
}

uint64_t sub_23F5076E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23F5076F4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F507700()
{
  return sub_23F61CD90();
}

uint64_t sub_23F507714()
{
  return sub_23F6190AC();
}

uint64_t sub_23F50771C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_23F507728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t, uint64_t);
  uint64_t v3;

  return v2(*(_QWORD *)(v3 - 200), v1, v0);
}

uint64_t sub_23F50773C@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

void sub_23F507748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = *(_QWORD *)(v1 + 176);
  *(_QWORD *)(v2 - 104) = v0;
}

void sub_23F507770(uint64_t a1)
{
  uint64_t *v1;

  sub_23F3D9844(a1, v1);
}

uint64_t sub_23F507778@<X0>(uint64_t (*a1)(void)@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return a1();
}

uint64_t sub_23F507780(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F507788()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F507794()
{
  return swift_release_n();
}

uint64_t sub_23F5077A0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_23F5077A8()
{
  uint64_t v0;

}

uint64_t sub_23F5077B0()
{
  return sub_23F618AE8();
}

uint64_t sub_23F5077B8()
{
  return swift_beginAccess();
}

uint64_t sub_23F5077CC()
{
  return swift_arrayDestroy();
}

void sub_23F5077E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F506F68(v3, v0 + v1 + v4, v2);
}

uint64_t sub_23F5077F4()
{
  return swift_release();
}

_QWORD *sub_23F507818()
{
  uint64_t v0;

  return sub_23F4EF7DC((_QWORD *)(v0 + 1080));
}

uint64_t sub_23F507820()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F4EF330(v0, v1);
}

uint64_t sub_23F507834()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F507840()
{
  return sub_23F61AE1C();
}

uint64_t sub_23F50784C()
{
  return sub_23F61B2C0();
}

uint64_t sub_23F507890(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F507898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  *(_QWORD *)(v3 - 128) = v4;
  return v4(v2, v1);
}

uint64_t sub_23F5078AC()
{
  return sub_23F61B128();
}

uint64_t sub_23F5078CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F5078DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F5078F8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F507900()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F50790C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F507918()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F507924()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F507948@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t sub_23F507954()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23F507960()
{
  return sub_23F61AD08();
}

uint64_t sub_23F507970()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 376);
}

uint64_t sub_23F507980()
{
  uint64_t (*v0)(_QWORD, _QWORD);
  uint64_t v1;

  return v0(*(_QWORD *)(v1 - 376), *(_QWORD *)(v1 - 128));
}

void sub_23F507990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v0, v1, (uint64_t *)(v2 - 104));
}

uint64_t sub_23F5079C0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5079F0()
{
  uint64_t v0;

  return v0;
}

void sub_23F507A00()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 392);
}

void sub_23F507A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v0, v1, (uint64_t *)(v2 - 288));
}

uint64_t sub_23F507A28@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = *(_OWORD *)(a2 - 256);
  return sub_23F617CFC();
}

BOOL sub_23F507A38(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t sub_23F507A4C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 336);
}

uint64_t sub_23F507A64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_23F61AAD4();
}

uint64_t sub_23F507A74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_23F619FAC();
}

uint64_t sub_23F507A84()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F507A8C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F507A94()
{
  return sub_23F61CC1C();
}

void sub_23F507AA4()
{
  JUMPOUT(0x242670B88);
}

uint64_t sub_23F507AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(v0, v3, v1);
}

void sub_23F507AC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F3D9844(v2, a2);
}

uint64_t sub_23F507ACC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F507AD8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F507AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t, uint64_t))
{
  uint64_t v19;
  uint64_t v20;

  return a19(v19, v20);
}

uint64_t sub_23F507AF4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F507AFC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 216))(v1, *(_QWORD *)(v0 + 224));
}

uint64_t sub_23F507B0C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void sub_23F507B14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[16];
  *(_QWORD *)(v1 - 112) = v0[17];
  *(_QWORD *)(v1 - 104) = v2;
  *(_QWORD *)(v1 - 96) = v0[13];
}

uint64_t sub_23F507B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a13 + 8))(a16, a15);
}

uint64_t sub_23F507B3C()
{
  uint64_t v0;

  return v0;
}

void sub_23F507B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v1, v0, (uint64_t *)(v2 - 88));
}

BOOL sub_23F507B64(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

void sub_23F507B6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F3D9844(v2, a2);
}

uint64_t sub_23F507B74()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 104) + 8))(v0, *(_QWORD *)(v1 - 112));
}

uint64_t sub_23F507B84@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(_QWORD, _QWORD);
  uint64_t v2;

  return v1(*(_QWORD *)(a1 - 256), *(_QWORD *)(v2 - 328));
}

uint64_t sub_23F507B94()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F507BA0()
{
  return sub_23F61C61C();
}

uint64_t sub_23F507BA8@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t sub_23F507BC0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F507BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F502D54(a1, a2, *(_QWORD *)(v2 - 736));
}

uint64_t sub_23F507BD4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 888) = a1;
  return v1 + 888;
}

uint64_t sub_23F507BE8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t sub_23F507C08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 192))(a1, a2, v2);
}

uint64_t sub_23F507C14()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3754D4(v1, v0);
}

uint64_t sub_23F507C20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23F507C2C()
{
  uint64_t v0;

  return v0;
}

void sub_23F507C40(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F3D9844(v2, a2);
}

uint64_t sub_23F507C48()
{
  return sub_23F61C790();
}

void sub_23F507C54(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F383004(a1, a2, v2);
}

uint64_t sub_23F507C5C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 312));
}

void sub_23F507C64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 104));
}

uint64_t sub_23F507C6C()
{
  uint64_t v0;

  return sub_23F3754D4(*(_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 120));
}

uint64_t sub_23F507C78(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(a1, *(_QWORD *)(v2 - 528));
}

uint64_t sub_23F507C84()
{
  return sub_23F61B32C();
}

uint64_t sub_23F507C9C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_23F507CA8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = result;
  return result;
}

void sub_23F507CCC()
{
  sub_23F377D48();
}

void sub_23F507CD8()
{
  sub_23F372C2C();
}

void sub_23F507CE4()
{
  uint64_t v0;

}

uint64_t sub_23F507CEC()
{
  return sub_23F61B128();
}

uint64_t sub_23F507CF8()
{
  return swift_retain();
}

uint64_t sub_23F507D00()
{
  return swift_retain_n();
}

uint64_t sub_23F507D0C()
{
  return sub_23F61CC1C();
}

uint64_t sub_23F507D14(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F507D1C()
{
  return sub_23F61C790();
}

uint64_t sub_23F507D24()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 144))();
}

void sub_23F507D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 320));
}

__n128 sub_23F507D38()
{
  _DWORD *v0;
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 304);
  *v0 = result.n128_u32[0];
  return result;
}

uint64_t sub_23F507D4C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F507D60()
{
  return sub_23F61C610();
}

uint64_t sub_23F507D74()
{
  return swift_endAccess();
}

uint64_t sub_23F507D7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23F507D88()
{
  return sub_23F619E8C();
}

uint64_t sub_23F507D90()
{
  return sub_23F61B14C();
}

uint64_t sub_23F507D98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 376))(a1, a2, v3);
}

uint64_t sub_23F507DA4()
{
  return sub_23F61C388();
}

_WORD *sub_23F507DB0(_WORD *result)
{
  *result = 0;
  return result;
}

void sub_23F507DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_23F37AE00(a1, a2, (uint64_t *)va);
}

uint64_t sub_23F507DC8()
{
  return sub_23F6190AC();
}

void sub_23F507DD0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  sub_23F506F68(*(_QWORD *)(v3 - 88), a2, v2);
}

uint64_t sub_23F507DDC()
{
  uint64_t v0;

  return v0;
}

void sub_23F507DE8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F3D9608(v2, a2);
}

uint64_t sub_23F507DF0()
{
  return sub_23F61C790();
}

uint64_t sub_23F507DF8()
{
  return sub_23F619E8C();
}

uint64_t sub_23F507E00()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F507E0C()
{
  return sub_23F6190AC();
}

uint64_t sub_23F507E14@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(_QWORD, uint64_t);
  uint64_t v2;

  return v1(*(_QWORD *)(a1 - 256), v2);
}

uint64_t sub_23F507E20()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F507E2C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F507E38()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_23F507E40()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F507E4C()
{
  return sub_23F617C9C();
}

uint64_t sub_23F507E6C()
{
  uint64_t v0;

  return v0;
}

void sub_23F507E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 248) = (char *)&a9 - v9;
}

void sub_23F507E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 88) = (char *)&a9 - v9;
}

uint64_t sub_23F507EA8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(a1, *(_QWORD *)(v2 - 616));
}

uint64_t sub_23F507EC8()
{
  uint64_t v0;

  return v0 + 880;
}

void sub_23F507EDC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  unsigned int v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint8_t *v24;
  uint8_t *v25;
  id v26;
  id v27;
  id v28;
  _QWORD v29[2];
  int v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  NSObject *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;

  v4 = sub_23F3B1728();
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v7 = v6 - v5;
  v8 = sub_23F616E68();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F362AAC();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v29 - v10;
  sub_23F616DFC();
  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_23F616E20();
  v13 = (void *)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_fileExistsAtPath_, v13);

  if (!v14)
    goto LABEL_10;
  sub_23F509F20();
  sub_23F509FC0();
  v15 = sub_23F509FF4();
  if (!v15)
    goto LABEL_10;
  v36 = v15;
  sub_23F616DFC();
  v16 = sub_23F509FF4();
  if (!v16)
  {
    v17 = v36;
LABEL_9:

LABEL_10:
    sub_23F3ECBA8(a1);
    sub_23F3ECBA8((uint64_t)v11);
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    goto LABEL_11;
  }
  v17 = v16;
  sub_23F509FC0();
  v18 = sub_23F509FF4();
  if (!v18)
  {

    goto LABEL_9;
  }
  v19 = v18;
  v20 = v36;
  v34 = v17;
  v33 = v19;
  sub_23F6190AC();
  v32 = v20;
  v21 = sub_23F619E8C();
  v22 = sub_23F61C61C();
  v23 = v22;
  v35 = v21;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = (uint8_t *)sub_23F366668();
    v31 = v19;
    v25 = v24;
    *(_DWORD *)v24 = 134217984;
    v29[1] = v24 + 4;
    v30 = v23;
    v26 = v32;
    v39 = objc_msgSend(v32, sel_count);
    sub_23F61C790();

    sub_23F38485C(&dword_23F35A000, v35, (os_log_type_t)v30, "Plan overrides tries loaded with override count: %ld", v25);
    sub_23F366530();
  }

  v27 = v32;
  v28 = v32;

  sub_23F3ECBA8(a1);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v7, v38);
  sub_23F3ECBA8((uint64_t)v11);
  *a2 = v36;
  a2[1] = v17;
  a2[2] = v19;
LABEL_11:
  sub_23F362948();
}

uint64_t sub_23F508200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t result;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _QWORD v46[2];

  v2 = sub_23F3B1728();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v40 = v4;
  v5 = *(void **)v0;
  v6 = *(void **)(v0 + 8);
  v7 = *(void **)(v0 + 16);
  v46[0] = MEMORY[0x24BEE4AF8];
  sub_23F61C178();
  v8 = sub_23F61C0E8();
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)sub_23F36682C();
  v9[2] = v5;
  v9[3] = v6;
  v9[4] = v7;
  v9[5] = v46;
  v10 = sub_23F36682C();
  *(_QWORD *)(v10 + 16) = sub_23F509E5C;
  *(_QWORD *)(v10 + 24) = v9;
  v44 = sub_23F509E6C;
  v45 = v10;
  v42 = MEMORY[0x24BDAC760];
  v43 = 1107296256;
  v11 = sub_23F50A038((uint64_t)sub_23F504D70);
  v12 = v5;
  v13 = v6;
  v14 = v7;
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_lookupKey_resultBlock_, v8, v11);

  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v8 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (*(_QWORD *)(v46[0] + 16))
    {
      sub_23F6190AC();
      v16 = sub_23F619E8C();
      v17 = sub_23F61C61C();
      if (os_log_type_enabled(v16, v17))
      {
        v37 = v17;
        v39 = v16;
        v18 = (uint8_t *)sub_23F366668();
        v42 = sub_23F366668();
        v38 = v18;
        *(_DWORD *)v18 = 136315138;
        sub_23F3C08CC();
        v19 = v46[0];
        v20 = *(_QWORD *)(v46[0] + 16);
        v21 = MEMORY[0x24BEE4AF8];
        if (v20)
        {
          v41 = MEMORY[0x24BEE4AF8];
          sub_23F617BA0();
          sub_23F37B47C();
          v21 = v41;
          v22 = (uint64_t *)(v19 + 40);
          do
          {
            v24 = *(v22 - 1);
            v23 = *v22;
            v25 = *(_QWORD *)(v41 + 16);
            v26 = *(_QWORD *)(v41 + 24);
            sub_23F384324();
            if (v25 >= v26 >> 1)
              sub_23F37B47C();
            v22 += 24;
            *(_QWORD *)(v41 + 16) = v25 + 1;
            v27 = v41 + 16 * v25;
            *(_QWORD *)(v27 + 32) = v24;
            *(_QWORD *)(v27 + 40) = v23;
            --v20;
          }
          while (v20);
          swift_bridgeObjectRelease();
        }
        v28 = MEMORY[0x24266F8F8](v21, MEMORY[0x24BEE0D00]);
        swift_bridgeObjectRelease();
        sub_23F4F292C(v28, v29, &v42);
        sub_23F61C790();
        swift_bridgeObjectRelease();
        sub_23F38485C(&dword_23F35A000, v39, v37, "Found exact match of utterance to overrides: %s", v38);
        sub_23F3B17D4();
        sub_23F366530();
      }

      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v40, v2);
    }
    v30 = (_QWORD *)sub_23F36682C();
    v30[2] = v12;
    v30[3] = v13;
    v30[4] = v14;
    v30[5] = v46;
    v31 = sub_23F36682C();
    *(_QWORD *)(v31 + 16) = sub_23F509EC4;
    *(_QWORD *)(v31 + 24) = v30;
    v44 = sub_23F509ED4;
    v45 = v31;
    v42 = MEMORY[0x24BDAC760];
    v43 = 1107296256;
    v32 = sub_23F50A038((uint64_t)sub_23F509DD0);
    v33 = v12;
    v34 = v13;
    v35 = v14;
    swift_retain();
    sub_23F3DDBDC();
    objc_msgSend(v34, sel_enumerateAllRowsWithBlock_, v32);
    _Block_release(v32);
    LOBYTE(v32) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v32 & 1) == 0)
    {
      sub_23F3C08CC();
      v36 = v46[0];
      swift_release();
      swift_release();
      return v36;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23F5086D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  void *v13;
  uint64_t result;
  void *v15;
  void *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;

  v5 = sub_23F619E98();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  v9 = v8 - v7;
  v10 = *a1;
  v24 = *a1;
  v11 = sub_23F508A8C(&v24);
  if (v2)
    return sub_23F38458C();
  v15 = v12;
  v16 = v13;
  v23 = v11;
  v17 = v15;
  v22 = v16;
  sub_23F6190AC();
  sub_23F617BA0();
  v18 = sub_23F619E8C();
  v19 = sub_23F61C61C();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)sub_23F366668();
    *(_DWORD *)v20 = 134217984;
    v21 = *(_QWORD *)(v10 + 16);
    sub_23F38458C();
    v24 = v21;
    sub_23F61C790();
    sub_23F38458C();
    _os_log_impl(&dword_23F35A000, v18, v19, "Plan overrides tries created based on override count: %ld", v20, 0xCu);
    sub_23F366530();
  }

  swift_bridgeObjectRelease_n();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  *a2 = v23;
  a2[1] = v17;
  a2[2] = v22;
  return result;
}

id PlanOverridesStore.utterancesToStatementIds.getter()
{
  id *v0;

  return *v0;
}

id PlanOverridesStore.regexStatementIds.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id PlanOverridesStore.statementIdsToStatements.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

_QWORD *initializeBufferWithCopyOfBuffer for PlanOverridesStore(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for PlanOverridesStore(id *a1)
{

}

uint64_t assignWithCopy for PlanOverridesStore(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for PlanOverridesStore(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for PlanOverridesStore()
{
  return &type metadata for PlanOverridesStore;
}

id sub_23F508A10(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_23F616DF0();
  v4 = objc_msgSend(v2, sel_initWithURL_, v3);

  v5 = sub_23F616E68();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

_QWORD *sub_23F508A8C(_QWORD *a1)
{
  NSObject *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  NSObject *v13;
  _QWORD *v14;
  id v15;
  id v16;
  id v17;
  _QWORD *result;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  NSObject *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  unint64_t v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  id v64;
  NSObject *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  id v78;
  unint64_t v79;
  NSObject *v80;
  uint64_t v81;
  NSObject *v82;
  __int128 v83;
  NSObject *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[12];
  _QWORD v91[27];

  v3 = sub_23F61C148();
  v67 = *(_QWORD *)(v3 - 8);
  v68 = v3;
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v66 = v4;
  v5 = sub_23F619E98();
  v87 = *(_QWORD *)(v5 - 8);
  v88 = v5;
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3C05DC();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v82 = ((char *)&v63 - v8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = ((char *)&v63 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v13 = ((char *)&v63 - v12);
  v14 = (_QWORD *)*a1;
  v15 = sub_23F50A058();
  v64 = sub_23F50A050(v15);
  v16 = sub_23F50A058();
  v69 = sub_23F50A050(v16);
  v17 = sub_23F50A058();
  v78 = sub_23F50A050(v17);
  v91[26] = MEMORY[0x24BEE4B08];
  sub_23F616B2C();
  swift_allocObject();
  v81 = sub_23F616B20();
  v75 = v14[2];
  if (!v75)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    v62 = v64;
    objc_msgSend(v64, sel_buildKeyset);
    objc_msgSend(v69, sel_buildKeyset);
    objc_msgSend(v78, sel_buildKeyset);
    swift_release();
    return v62;
  }
  v73 = v14;
  v74 = v14 + 4;
  sub_23F383EB0();
  result = v73;
  v19 = 0;
  v63 = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v20 = 136315138;
  v83 = v20;
  v80 = v1;
  v65 = v11;
  v84 = v13;
LABEL_3:
  if (v19 < result[2])
  {
    v21 = v74[v19];
    v22 = *(_QWORD *)(v21 + 16);
    if (!v22)
      goto LABEL_35;
    v77 = v19;
    sub_23F617BA0();
    v89 = v22 - 1;
    v23 = 32;
    v86 = v21;
    while (1)
    {
      memcpy(v91, (const void *)(v21 + v23), 0xB9uLL);
      v24 = sub_23F61C184();
      v26 = v25;
      sub_23F50A000();
      sub_23F383EB0();
      sub_23F471708();
      v28 = v27;
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
        break;
      v90[0] = *(_OWORD *)&v91[13];
      *(_QWORD *)&v90[1] = v91[15];
      if ((sub_23F509228((uint64_t)v90) & 1) == 0)
      {
        sub_23F384120();
        v39 = v80;
        sub_23F6190AC();
        sub_23F50A000();
        sub_23F619E8C();
        v40 = sub_23F3F0EEC();
        if (sub_23F509FA0(v40))
        {
          sub_23F366668();
          v41 = sub_23F366668();
          sub_23F509F88(v41);
          sub_23F509FB0();
          sub_23F509FE8(v42);
          sub_23F509F80();
          sub_23F509F80();
          sub_23F509FDC(&dword_23F35A000, v39, (os_log_type_t)v13, "Override has invalid plan value, ignoring statement: %s");
          sub_23F496AF8();
          sub_23F366530();
        }
        sub_23F509F80();
        sub_23F509F80();

        sub_23F50A008();
        v13 = v84;
LABEL_17:
        v21 = v86;
        goto LABEL_28;
      }
      memcpy(v90, v91, 0xB9uLL);
      sub_23F4EF288();
      v29 = v85;
      v30 = sub_23F616B14();
      if (v29)
      {
        v85 = 0;
        sub_23F384120();

        v32 = v82;
        sub_23F6190AC();
        sub_23F50A000();
        sub_23F619E8C();
        v33 = sub_23F3F0EEC();
        if (sub_23F509FA0(v33))
        {
          sub_23F366668();
          v34 = sub_23F366668();
          sub_23F509F88(v34);
          sub_23F509FB0();
          sub_23F509FE8(v35);
          sub_23F509F80();
          sub_23F509F80();
          sub_23F509FDC(&dword_23F35A000, v32, (os_log_type_t)v13, "Unable to convert statement to Data, ignoring statement: (%s)");
          sub_23F496AF8();
          sub_23F366530();
        }
        sub_23F509F80();
        sub_23F509F80();

        (*(void (**)(NSObject *, uint64_t))(v87 + 8))(v82, v88);
      }
      else
      {
        v43 = v30;
        v85 = 0;
        v79 = v31;
        if (v23 == 32 && v91[3])
        {
          v76 = v91[2];
          v44 = v91[4];
          sub_23F384324();
          sub_23F617BA0();
          sub_23F509F80();
          if ((v44 & 1) != 0)
          {
            sub_23F50A028(v76);
            v59 = (void *)sub_23F50A044();
            objc_msgSend(v69, sel_addRow_, v59, v63);

          }
          else
          {
            v71 = v43;
            v45 = v76;
            v70 = sub_23F61C178();
            v72 = v46;
            sub_23F50A028(v45);
            v47 = v66;
            sub_23F61C13C();
            v48 = sub_23F61C118();
            v50 = v49;
            (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v47, v68);
            if (v50 >> 60 == 15)
            {
              swift_bridgeObjectRelease();
              v51 = v65;
              sub_23F6190AC();
              swift_bridgeObjectRetain_n();
              v52 = v51;
              sub_23F619E8C();
              v53 = sub_23F3F0EEC();
              if (os_log_type_enabled(v51, v53))
              {
                v54 = sub_23F366668();
                *(_QWORD *)&v90[0] = sub_23F366668();
                *(_DWORD *)v54 = v83;
                sub_23F383EB0();
                sub_23F37AE00(v24, v26, (uint64_t *)v90);
                *(_QWORD *)(v54 + 4) = v55;
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_23F35A000, v52, v53, "Unable to encode override statement id: %s", (uint8_t *)v54, 0xCu);
                swift_arrayDestroy();
                sub_23F366530();
              }

              swift_bridgeObjectRelease_n();
              (*(void (**)(NSObject *, uint64_t))(v87 + 8))(v51, v88);
            }
            else
            {
              v60 = (void *)sub_23F61C0E8();
              swift_bridgeObjectRelease();
              v61 = (void *)sub_23F616EE0();
              objc_msgSend(v64, sel_addKey_payload_, v60, v61);

              sub_23F4F2360(v48, v50);
            }
            v43 = v71;
          }
        }
        else
        {
          sub_23F509F80();
        }
        v56 = (void *)sub_23F50A044();
        sub_23F384120();
        v57 = v79;
        v58 = (void *)sub_23F616EE0();
        objc_msgSend(v78, sel_addKey_payload_, v56, v58);

        sub_23F3F3D0C(v43, v57);
      }
      v13 = v84;
LABEL_28:
      if (!v89)
      {
        swift_bridgeObjectRelease();
        result = v73;
        v19 = v77;
LABEL_35:
        if (++v19 == v75)
        {
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        goto LABEL_3;
      }
      --v89;
      v23 += 192;
    }
    sub_23F384120();
    sub_23F6190AC();
    sub_23F50A000();
    sub_23F619E8C();
    v36 = sub_23F3F0EEC();
    if (sub_23F509FA0(v36))
    {
      sub_23F366668();
      v37 = sub_23F366668();
      sub_23F509F88(v37);
      sub_23F509FB0();
      sub_23F509FE8(v38);
      sub_23F509F80();
      sub_23F509F80();
      sub_23F509FDC(&dword_23F35A000, v13, (os_log_type_t)v13, "Unable to insert duplicated override statement id: %s");
      sub_23F496AF8();
      sub_23F366530();
    }
    sub_23F509F80();
    sub_23F509F80();

    sub_23F50A008();
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_23F509228(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  _BOOL4 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[2];

  v4 = sub_23F617D08();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F362AAC();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v59 - v7;
  v9 = sub_23F61A684();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3C05DC();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v59 - v12;
  sub_23F3B1728();
  MEMORY[0x24BDAC7A8](a1);
  sub_23F362AAC();
  v16 = v14 - v15;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v24 = (char *)v59 - v23;
  if (*(_QWORD *)(v19 + 8))
  {
    v25 = v22;
    v26 = v21;
    sub_23F6190AC();
    v27 = sub_23F619E8C();
    v28 = sub_23F61C628();
    if (os_log_type_enabled(v27, v28))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F50A018(&dword_23F35A000, v27, v29, "Plan Text is deprecated. No longer supported!");
      sub_23F366530();
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v26);
  }
  else
  {
    v66 = v2;
    v67 = v4;
    v65 = (char *)v1;
    v68 = v10;
    v31 = *(_QWORD *)(v19 + 16);
    if (v31)
    {
      v64 = v22;
      v70[1] = MEMORY[0x24BEE4B08];
      v32 = *(_QWORD *)(v31 + 16);
      if (!v32)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return 1;
      }
      v33 = v9;
      v61 = v20;
      v62 = v21;
      v34 = v31 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
      v35 = *(_QWORD *)(v68 + 72);
      v36 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
      v63 = v31;
      sub_23F617BA0();
      while (1)
      {
        v36(v13, v34, v33);
        sub_23F61A660();
        sub_23F4723D0();
        v38 = v37;
        v39 = *(void (**)(char *, uint64_t))(v66 + 8);
        v39(v8, v67);
        if ((v38 & 1) == 0)
          break;
        (*(void (**)(char *, uint64_t))(v68 + 8))(v13, v33);
        v34 += v35;
        if (!--v32)
        {
          swift_bridgeObjectRelease();
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45 = v61;
      sub_23F6190AC();
      v46 = (uint64_t)v65;
      v36(v65, (uint64_t)v13, v33);
      v47 = sub_23F619E8C();
      v48 = sub_23F61C628();
      v49 = v48;
      v50 = os_log_type_enabled(v47, v48);
      v51 = v62;
      v52 = v64;
      if (v50)
      {
        v53 = sub_23F366668();
        LODWORD(v63) = v49;
        v54 = (uint8_t *)v53;
        v66 = sub_23F366668();
        v70[0] = v66;
        v60 = v54;
        *(_DWORD *)v54 = 136315138;
        v59[1] = v54 + 4;
        sub_23F61A660();
        sub_23F3B57DC();
        v55 = v67;
        v56 = sub_23F61CC1C();
        v39(v8, v55);
        sub_23F4F292C(v56, v57, v70);
        v69 = v58;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        sub_23F3B1F64((uint64_t)v65);
        sub_23F38485C(&dword_23F35A000, v47, (os_log_type_t)v63, "Duplicate program statement index found in plan: %s", v60);
        sub_23F3B17D4();
        sub_23F366530();
      }

      sub_23F3B1F64(v46);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v45, v51);
      sub_23F3B1F64((uint64_t)v13);
    }
    else
    {
      v40 = v22;
      v41 = v21;
      sub_23F6190AC();
      v42 = sub_23F619E8C();
      v43 = sub_23F61C628();
      if (os_log_type_enabled(v42, v43))
      {
        *(_WORD *)sub_23F366668() = 0;
        sub_23F50A018(&dword_23F35A000, v42, v44, "Could not find programStatements in planValue");
        sub_23F366530();
      }

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v16, v41);
    }
  }
  return 0;
}

void sub_23F5096CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[192];
  uint64_t v8[25];
  _BYTE v9[185];

  sub_23F3B1728();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  sub_23F616ACC();
  swift_allocObject();
  sub_23F616AC0();
  sub_23F4EF2C4();
  sub_23F616AB4();
  sub_23F3DDBDC();
  memcpy(v7, v9, 0xB9uLL);
  nullsub_1(v7, v6);
  sub_23F509E10(a4, (uint64_t)v8);
  sub_23F509E10((uint64_t)v7, a4);
  sub_23F506A50(v8);
  sub_23F362948();
}

void *sub_23F509978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t *a7)
{
  uint64_t v9;
  void *result;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[6];
  _BYTE v22[192];
  _BYTE v23[192];
  _BYTE v24[192];
  _BYTE v25[192];

  v9 = sub_23F61C148();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F61C13C();
  result = (void *)sub_23F61C124();
  if (v11)
  {
    v12 = result;
    v13 = v11;
    sub_23F5069E0(v23);
    sub_23F509E10((uint64_t)v23, (uint64_t)v22);
    sub_23F61C184();
    v14 = (void *)sub_23F61C0E8();
    swift_bridgeObjectRelease();
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v22;
    v15[3] = v12;
    v15[4] = v13;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_23F506FB0;
    *(_QWORD *)(v16 + 24) = v15;
    v21[4] = sub_23F509F6C;
    v21[5] = v16;
    v21[0] = MEMORY[0x24BDAC760];
    v21[1] = 1107296256;
    v21[2] = sub_23F504D70;
    v21[3] = &unk_250FDA688;
    v17 = _Block_copy(v21);
    swift_retain();
    sub_23F617BA0();
    swift_release();
    objc_msgSend(a6, sel_lookupKey_resultBlock_, v14, v17);

    _Block_release(v17);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    result = (void *)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      sub_23F509E10((uint64_t)v22, (uint64_t)v24);
      swift_bridgeObjectRelease();
      swift_release();
      sub_23F509E10((uint64_t)v24, (uint64_t)v25);
      result = (void *)sub_23F44CD78((uint64_t)v25);
      if ((_DWORD)result != 1)
      {
        sub_23F3769FC();
        v19 = *(_QWORD *)(*a7 + 16);
        sub_23F376BA0();
        v20 = *a7;
        *(_QWORD *)(v20 + 16) = v19 + 1;
        return memcpy((void *)(v20 + 192 * v19 + 32), v25, 0xB9uLL);
      }
    }
  }
  return result;
}

uint64_t sub_23F509BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t *a7)
{
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[192];
  _QWORD aBlock[24];
  _BYTE __src[192];

  sub_23F5069E0(v18);
  sub_23F509E10((uint64_t)v18, (uint64_t)__src);
  sub_23F61C184();
  v11 = (void *)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = __src;
  v12[3] = a1;
  v12[4] = a2;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23F506A0C;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23F509F6C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23F504D70;
  aBlock[3] = &unk_250FDA610;
  v14 = _Block_copy(aBlock);
  sub_23F617BA0();
  swift_retain();
  swift_release();
  objc_msgSend(a6, sel_lookupKey_resultBlock_, v11, v14);

  _Block_release(v14);
  LOBYTE(a6) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a6 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_23F509E10((uint64_t)__src, (uint64_t)aBlock);
    swift_release();
    sub_23F509E10((uint64_t)aBlock, (uint64_t)__src);
    result = sub_23F44CD78((uint64_t)__src);
    if ((_DWORD)result != 1)
    {
      swift_beginAccess();
      sub_23F3769FC();
      v16 = *(_QWORD *)(*a7 + 16);
      sub_23F376BA0();
      v17 = *a7;
      *(_QWORD *)(v17 + 16) = v16 + 1;
      memcpy((void *)(v17 + 192 * v16 + 32), __src, 0xB9uLL);
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_23F509DD0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_23F61C10C();
  v1(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F509E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E78AE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_23F509E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23F509978(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32), *(uint64_t **)(v3 + 40));
}

void sub_23F509E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_23F504D54(a1, a2, a3, *(void (**)(void))(v3 + 16));
}

uint64_t sub_23F509E74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23F509E84()
{
  return swift_release();
}

uint64_t sub_23F509E90()
{
  id *v0;

  return swift_deallocObject();
}

uint64_t sub_23F509EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23F509BC8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32), *(uint64_t **)(v3 + 40));
}

uint64_t sub_23F509ED4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23F509EF4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_23F509F20()
{
  unint64_t result;

  result = qword_256E78BB0;
  if (!qword_256E78BB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E78BB0);
  }
  return result;
}

_QWORD *sub_23F509F80()
{
  uint64_t v0;

  return sub_23F4EF8C4((_QWORD *)(v0 + 424));
}

uint64_t sub_23F509F88(uint64_t a1)
{
  uint64_t v1;
  _DWORD *v2;

  *(_QWORD *)(v1 + 224) = a1;
  *v2 = *(_OWORD *)(v1 + 160);
  return sub_23F617BA0();
}

BOOL sub_23F509FA0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_23F509FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v2, v1, (uint64_t *)(v0 + 224));
}

uint64_t sub_23F509FC0()
{
  return sub_23F616DFC();
}

void sub_23F509FDC(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_23F509FE8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 4) = a1;
  return swift_bridgeObjectRelease();
}

id sub_23F509FF4()
{
  uint64_t v0;

  return sub_23F508A10(v0);
}

_QWORD *sub_23F50A000()
{
  uint64_t v0;

  return sub_23F4EF7DC((_QWORD *)(v0 + 424));
}

uint64_t sub_23F50A008()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(v1, *(_QWORD *)(v0 + 208));
}

void sub_23F50A018(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  uint8_t *v5;

  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

uint64_t sub_23F50A028(uint64_t a1)
{
  uint64_t v1;

  return sub_23F4EF330(a1, v1);
}

void *sub_23F50A038@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = a1;
  *(_QWORD *)(v2 - 136) = v1;
  return _Block_copy((const void *)(v2 - 160));
}

uint64_t sub_23F50A044()
{
  return sub_23F61C0E8();
}

id sub_23F50A050(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 3528));
}

id sub_23F50A058()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 3728));
}

void sub_23F50A060(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v3 = sub_23F619E98();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 16);
  swift_retain();
  sub_23F617BA0();
  sub_23F5FC520(v8, v7);
  v15 = v9;
  swift_release();
  swift_bridgeObjectRelease();
  if (v15)
  {
    sub_23F4A2D00(a1);

  }
  else
  {
    sub_23F6190DC();
    v10 = sub_23F619E8C();
    v11 = sub_23F61C61C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_23F35A000, v10, v11, "TrialModelManaging#trialCompiledModelUrl: No trial model URL available", v12, 2u);
      MEMORY[0x242670B70](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v13 = sub_23F616E68();
    sub_23F36196C(a1, 1, 1, v13);
  }
}

void sub_23F50A1E8(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char *v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint8_t *v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, uint64_t);
  uint8_t *v48;
  uint8_t *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57[2];
  uint64_t v58;

  v53 = a1;
  v2 = sub_23F619E98();
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (uint8_t *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v48 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v48 - v9;
  v11 = sub_23F35D2E8(&qword_256E70760);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F616E68();
  v54 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v48 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v48 - v21;
  sub_23F50A060((uint64_t)v13);
  if (sub_23F36195C((uint64_t)v13, 1, v14) == 1)
  {
    sub_23F3CFCB0((uint64_t)v13, &qword_256E70760);
    sub_23F6190DC();
    v23 = sub_23F619E8C();
    v24 = sub_23F61C61C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_23F35A000, v23, v24, "TrialModelManaging#model: No Trial override, using default compiled model", v25, 2u);
      MEMORY[0x242670B70](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v52);
    sub_23F50AC6C(v53);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v22, v13, v14);
    sub_23F50B1D4((uint64_t)v22, (uint64_t *)&v55);
    if (v56)
    {
      sub_23F362678(&v55, (uint64_t)v57);
      v26 = v8;
      sub_23F6190DC();
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v20, v22, v14);
      v27 = v22;
      v28 = sub_23F619E8C();
      v29 = sub_23F61C61C();
      if (os_log_type_enabled(v28, v29))
      {
        v50 = v27;
        v30 = (uint8_t *)swift_slowAlloc();
        v31 = swift_slowAlloc();
        *(_QWORD *)&v55 = v31;
        *(_DWORD *)v30 = 136315138;
        v49 = v30 + 4;
        sub_23F50BDF0();
        v32 = sub_23F61CC1C();
        sub_23F37AE00(v32, v33, (uint64_t *)&v55);
        v58 = v34;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        v35 = *(void (**)(char *, uint64_t))(v54 + 8);
        v35(v20, v14);
        _os_log_impl(&dword_23F35A000, v28, v29, "TrialModelManaging#model: Loaded model from Trial-override; %s",
          v30,
          0xCu);
        swift_arrayDestroy();
        MEMORY[0x242670B70](v31, -1, -1);
        MEMORY[0x242670B70](v30, -1, -1);

        (*(void (**)(char *, uint64_t))(v51 + 8))(v26, v52);
        v35(v50, v14);
      }
      else
      {

        v47 = *(void (**)(char *, uint64_t))(v54 + 8);
        v47(v20, v14);
        (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v52);
        v47(v27, v14);
      }
      sub_23F362678(v57, (uint64_t)v53);
    }
    else
    {
      v50 = v1;
      sub_23F3CFCB0((uint64_t)&v55, &qword_256E78D10);
      v36 = v5;
      sub_23F6190DC();
      v37 = v22;
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v17, v22, v14);
      v38 = sub_23F619E8C();
      v39 = sub_23F61C628();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = swift_slowAlloc();
        v49 = v36;
        v41 = (uint8_t *)v40;
        v42 = swift_slowAlloc();
        *(_QWORD *)&v57[0] = v42;
        *(_DWORD *)v41 = 136315138;
        v48 = v41 + 4;
        sub_23F50BDF0();
        v43 = sub_23F61CC1C();
        sub_23F37AE00(v43, v44, (uint64_t *)v57);
        *(_QWORD *)&v55 = v45;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        v46 = *(void (**)(char *, uint64_t))(v54 + 8);
        v46(v17, v14);
        _os_log_impl(&dword_23F35A000, v38, v39, "TrialModelManaging#model: Failed to load Trial-overridden model from %s, reverting to default model", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x242670B70](v42, -1, -1);
        MEMORY[0x242670B70](v41, -1, -1);

        (*(void (**)(uint8_t *, uint64_t))(v51 + 8))(v49, v52);
      }
      else
      {
        v46 = *(void (**)(char *, uint64_t))(v54 + 8);
        v46(v17, v14);

        (*(void (**)(uint8_t *, uint64_t))(v51 + 8))(v36, v52);
      }
      sub_23F50AC6C(v53);
      v46(v37, v14);
    }
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PlanResolutionCachableModel.prewarm()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = sub_23F619E98();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F50BE30();
  sub_23F619154();
  v3 = sub_23F619E8C();
  v4 = sub_23F61C628();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)sub_23F3EEE70();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23F35A000, v3, v4, "Default implementation of PlanResolutionCachableModel.prewarm called. This has no effect.", v5, 2u);
    sub_23F366530();
  }

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t PlanResolutionCachableModel.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  PlanResolutionCachableModel.init()();
  return v0;
}

uint64_t PlanResolutionCachableModel.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *inited;
  uint64_t v7;

  v2 = v0;
  swift_defaultActor_initialize();
  v3 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 336);
  type metadata accessor for TrialManager();
  v4 = swift_allocObject();
  v5 = sub_23F50BC04((uint64_t)v3, 0xD000000000000021, 0x800000023F634490, v4);
  type metadata accessor for PlanResolutionCachableModel.ModelInitaliser();
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = 0xD00000000000001BLL;
  inited[3] = 0x800000023F6387A0;
  inited[4] = v5;
  if (v1)
  {
    swift_defaultActor_destroy();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v7 = sub_23F50A9E8();
    swift_release();
    *(_QWORD *)(v2 + 112) = v7;
  }
  return v2;
}

uint64_t sub_23F50A9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_signpost_type_t v11;
  uint8_t *v12;
  uint8_t *v13;
  os_signpost_id_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18[7];

  v2 = sub_23F619E20();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v18[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18[-1] - v7;
  if (qword_256E6F080 != -1)
    swift_once();
  v9 = sub_23F619E44();
  sub_23F361498(v9, (uint64_t)qword_256E80338);
  sub_23F619E38();
  sub_23F619DFC();
  v10 = sub_23F619E38();
  v11 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v12 = (uint8_t *)sub_23F3EEE70();
    v17 = v0;
    v13 = v12;
    *(_WORD *)v12 = 0;
    v14 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v10, v11, v14, "PlanResolutionModelManager.modelLoad", "", v13, 2u);
    sub_23F366530();
  }

  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_23F619E74();
  swift_allocObject();
  sub_23F619E68();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  sub_23F50A1E8(v18);
  if (v1)
    goto LABEL_9;
  v0 = sub_23F35D2E8(&qword_256E78D08);
  type metadata accessor for PlanResolutionModel();
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_23F366414();
    swift_allocError();
    *v15 = 0xD000000000000055;
    v15[1] = 0x800000023F6386A0;
    swift_willThrow();
LABEL_9:
    sub_23F50B724();
    swift_release();
    return v0;
  }
  v0 = v18[6];
  sub_23F50B724();
  swift_release();
  return v0;
}

const char *static PlanResolutionCachableModel.privacyApprovedLoggableName()()
{
  return "PlanResolutionModel";
}

void sub_23F50AC6C(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  void *v10;

  v3 = *v1;
  v4 = sub_23F619E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F50BE30();
  sub_23F6190DC();
  v6 = sub_23F619E8C();
  v7 = sub_23F61C61C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)sub_23F3EEE70();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_23F35A000, v6, v7, "PlanResolutionModelManager#defaultModel: Loading default plan resolution model", v8, 2u);
    sub_23F366530();
  }

  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v1, v4);
  sub_23F3C2EA0(0, (unint64_t *)&qword_256E77B40);
  v9 = sub_23F5CC92C();
  v10 = (void *)MEMORY[0x2426704A4]();
  sub_23F50ADB8(v9, v3, a1);
  objc_autoreleasePoolPop(v10);

}

void sub_23F50ADB8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  id v27;
  uint64_t v28;
  id v29;
  void (*v30)(char *, uint64_t);
  _QWORD *v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  id v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  id v48;

  v44 = a2;
  v5 = sub_23F35D2E8(&qword_256E70760);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F616E68();
  v9 = *(_QWORD **)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v42 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v42 - v17;
  MEMORY[0x24BDAC7A8](v16);
  if (!a1)
  {
    sub_23F366414();
    swift_allocError();
    *v31 = 0xD000000000000039;
    v31[1] = 0x800000023F638730;
    swift_willThrow();
    return;
  }
  v20 = (char *)&v42 - v19;
  v43 = a3;
  v48 = a1;
  v21 = sub_23F5988D8(0xD000000000000013, 0x800000023F6385B0, 0x636C65646F6D6C6DLL, 0xE800000000000000, v48);
  if (!v21)
  {
    sub_23F36196C((uint64_t)v7, 1, 1, v8);
    goto LABEL_8;
  }
  v22 = v21;
  sub_23F616E14();

  v23 = (void (*)(char *, char *, uint64_t))v9[4];
  v23(v7, v18, v8);
  sub_23F36196C((uint64_t)v7, 0, 1, v8);
  if (sub_23F36195C((uint64_t)v7, 1, v8) == 1)
  {
LABEL_8:
    sub_23F3CFCB0((uint64_t)v7, &qword_256E70760);
    v46 = 0;
    v47 = 0xE000000000000000;
    sub_23F61C8E0();
    sub_23F61C280();
    sub_23F61C280();
    sub_23F61C280();
    v32 = v48;
    v33 = objc_msgSend(v48, sel_description);
    sub_23F61C10C();

    sub_23F61C280();
    swift_bridgeObjectRelease();
    v34 = v46;
    v35 = v47;
    sub_23F366414();
    swift_allocError();
    *v36 = v34;
    v36[1] = v35;
    swift_willThrow();

    return;
  }
  v24 = v7;
  v25 = v20;
  v23(v20, v24, v8);
  v26 = (void (*)(char *, char *, uint64_t))v9[2];
  v26(v15, v20, v8);
  v27 = sub_23F4A2CB8();
  sub_23F3C2EA0(0, &qword_256E78D18);
  v26(v12, v15, v8);
  v28 = v45;
  v29 = sub_23F50BB04((uint64_t)v12, v27);
  if (v28)
  {
    v30 = (void (*)(char *, uint64_t))v9[1];
    v30(v15, v8);
    v30(v25, v8);

  }
  else
  {
    v37 = v29;
    v38 = (void (*)(char *, uint64_t))v9[1];
    v38(v15, v8);
    v39 = type metadata accessor for PlanResolutionModel();
    v40 = swift_allocObject();
    *(_QWORD *)(v40 + 16) = v37;
    v41 = v43;
    v43[3] = v39;
    v41[4] = (uint64_t)&off_250FD8598;

    *v41 = v40;
    v38(v25, v8);
  }
}

void sub_23F50B1D4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD v22[5];
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a2;
  v4 = *v2;
  v5 = sub_23F616E68();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F619E98();
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6190DC();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v12 = sub_23F619E8C();
  v13 = sub_23F61C61C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v22[2] = v9;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v22[4] = a1;
    v26 = v16;
    v22[3] = v4;
    *(_DWORD *)v15 = 136315138;
    v22[1] = v15 + 4;
    v17 = sub_23F616DC0();
    sub_23F37AE00(v17, v18, &v26);
    v25 = v19;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F50BE4C();
    _os_log_impl(&dword_23F35A000, v12, v13, "PlanResolutionModelManager#compiledModel Loading compiled plan resolution model from url: %s", v15, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }
  sub_23F50BE4C();

  v20 = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v11, v9);
  v21 = (void *)MEMORY[0x2426704A4](v20);
  sub_23F50B408(a1, v24);
  objc_autoreleasePoolPop(v21);
}

uint64_t sub_23F50B408@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  id v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  char *v21;
  uint8_t *v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t result;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;

  v34 = a2;
  v4 = sub_23F619E98();
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F616E68();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v31 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v14((char *)&v31 - v12, a1, v7);
  v15 = sub_23F4A2CB8();
  sub_23F3C2EA0(0, &qword_256E78D18);
  v14(v11, (uint64_t)v13, v7);
  v16 = sub_23F50BB04((uint64_t)v11, v15);
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    sub_23F6190DC();
    v17 = v2;
    v18 = v2;
    v19 = sub_23F619E8C();
    v20 = sub_23F61C628();
    v21 = v6;
    if (os_log_type_enabled(v19, v20))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v22 = 138412290;
      v24 = v2;
      v25 = _swift_stdlib_bridgeErrorToNSError();
      v35 = v25;
      sub_23F61C790();
      *v23 = v25;
      v21 = v6;

      _os_log_impl(&dword_23F35A000, v19, v20, "PlanResolutionModelManager#compiledModel: Error loading the compiled model: %@", v22, 0xCu);
      sub_23F35D2E8(&qword_256E6FAB0);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v23, -1, -1);
      MEMORY[0x242670B70](v22, -1, -1);

    }
    else
    {

    }
    v30 = v34;
    result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v21, v33);
    v30[4] = 0;
    *(_OWORD *)v30 = 0u;
    *((_OWORD *)v30 + 1) = 0u;
  }
  else
  {
    v26 = v16;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v27 = type metadata accessor for PlanResolutionModel();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v26;
    v29 = v34;
    v34[3] = v27;
    v29[4] = (uint64_t)&off_250FD8598;
    *v29 = result;
  }
  return result;
}

uint64_t sub_23F50B724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  NSObject *v12;
  char v13;
  char v14;
  const char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_signpost_id_t v22;
  void (*v23)(_BYTE *, uint64_t);
  _BYTE v24[12];
  int v25;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_23F619E50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_23F619E20();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v24[-v9];
  if (qword_256E6F080 != -1)
    swift_once();
  v11 = sub_23F619E44();
  sub_23F361498(v11, (uint64_t)qword_256E80338);
  v12 = sub_23F619E38();
  sub_23F619E5C();
  v25 = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v1 + 88))(v3, v0) == *MEMORY[0x24BEE7810])
    {
      v13 = 0;
      v14 = 0;
      v15 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
      v15 = "%s";
      v14 = 2;
      v13 = 1;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v8, v10, v4);
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v27 = v18;
    *(_BYTE *)v17 = v14;
    *(_BYTE *)(v17 + 1) = v13;
    *(_WORD *)(v17 + 2) = 2080;
    v19 = sub_23F61C8F8();
    sub_23F37AE00(v19, v20, &v27);
    v26 = v21;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v22 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v12, (os_signpost_type_t)v25, v22, "PlanResolutionModelManager.modelLoad", v15, (uint8_t *)v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v18, -1, -1);
    MEMORY[0x242670B70](v17, -1, -1);

    v23 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v23(v10, v4);
    return ((uint64_t (*)(_BYTE *, uint64_t))v23)(v8, v4);
  }
  else
  {

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
  }
}

uint64_t sub_23F50BA04()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_23F50BA28()
{
  sub_23F50BA04();
  return swift_deallocClassInstance();
}

uint64_t PlanResolutionCachableModel.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t PlanResolutionCachableModel.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t PlanResolutionCachableModel.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F50BA9C()
{
  return PlanResolutionCachableModel.unownedExecutor.getter();
}

uint64_t sub_23F50BAB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = PlanResolutionCachableModel.__allocating_init()();
  if (!v1)
    *a1 = result;
  return result;
}

const char *sub_23F50BADC()
{
  return "PlanResolutionModel";
}

void sub_23F50BAF0()
{
  PlanResolutionCachableModel.prewarm()();
}

id sub_23F50BB04(uint64_t a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (void *)sub_23F616DF0();
  v10[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_configuration_error_, v4, a2, v10);

  if (v5)
  {
    v6 = v10[0];
  }
  else
  {
    v7 = v10[0];
    sub_23F616D9C();

    swift_willThrow();
  }

  v8 = sub_23F616E68();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  return v5;
}

uint64_t sub_23F50BC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _QWORD v18[5];
  _OWORD v19[3];
  uint64_t v20;
  unsigned __int8 v21;
  unsigned int v22;

  v18[3] = sub_23F3C2EA0(0, &qword_256E78D20);
  v18[4] = &off_250FE0EF0;
  v18[0] = a1;
  sub_23F3C2EA0(0, &qword_256E78D28);
  *(_QWORD *)(a4 + 72) = sub_23F61BFEC();
  *(_OWORD *)(a4 + 80) = xmmword_23F620FD0;
  *(_OWORD *)(a4 + 96) = 0u;
  *(_OWORD *)(a4 + 112) = 0u;
  *(_OWORD *)(a4 + 128) = 0u;
  *(_QWORD *)(a4 + 16) = a2;
  *(_QWORD *)(a4 + 24) = a3;
  sub_23F361418((uint64_t)v18, a4 + 32);
  v8 = *(_QWORD *)(a4 + 56);
  v9 = *(_QWORD *)(a4 + 64);
  sub_23F35EA9C((_QWORD *)(a4 + 32), v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  v10 = sub_23F5FC5A4();
  swift_beginAccess();
  *(_QWORD *)(a4 + 72) = v10;
  swift_bridgeObjectRelease();
  sub_23F5FC87C((uint64_t)v19);
  v11 = v20;
  v12 = v21 | ((unint64_t)v22 << 32);
  v13 = *(_QWORD *)(a4 + 80);
  v14 = *(_QWORD *)(a4 + 88);
  v15 = v19[1];
  *(_OWORD *)(a4 + 80) = v19[0];
  *(_OWORD *)(a4 + 96) = v15;
  *(_OWORD *)(a4 + 112) = v19[2];
  *(_QWORD *)(a4 + 128) = v11;
  *(_QWORD *)(a4 + 136) = v12;
  sub_23F497930(v13, v14);
  v16 = sub_23F617BA0();
  sub_23F5FC9F0(v16);
  swift_bridgeObjectRelease();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v18);
  return a4;
}

uint64_t type metadata accessor for PlanResolutionCachableModel.ModelInitaliser()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PlanResolutionCachableModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlanResolutionCachableModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlanResolutionCachableModel.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_23F50BDF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E730D0;
  if (!qword_256E730D0)
  {
    v1 = sub_23F616E68();
    result = MEMORY[0x242670A44](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_256E730D0);
  }
  return result;
}

uint64_t sub_23F50BE4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t PlanResolverService.init<A>(toolbox:actionRequirements:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v10 = sub_23F384B34();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a5, a1, v10);
  v16 = a3;
  v17 = a4;
  v12 = sub_23F36145C((uint64_t *)&v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v12, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  v13 = type metadata accessor for PlanResolverService();
  return sub_23F362678(&v15, a5 + *(int *)(v13 + 20));
}

uint64_t type metadata accessor for PlanResolverService()
{
  uint64_t result;

  result = qword_256E78DB0;
  if (!qword_256E78DB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PlanResolverService.setup(sessionState:)()
{
  uint64_t v0;

  return sub_23F3B12EC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PlanResolverService.handle(_:plannerServiceContext:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = sub_23F61B2C0();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = sub_23F366578();
  v5 = sub_23F619E98();
  v3[9] = v5;
  v3[10] = *(_QWORD *)(v5 - 8);
  v3[11] = sub_23F366578();
  type metadata accessor for StepResolution();
  v3[12] = sub_23F366578();
  v6 = sub_23F384B34();
  v3[13] = v6;
  v3[14] = *(_QWORD *)(v6 - 8);
  v3[15] = sub_23F366578();
  type metadata accessor for Interpreter(0);
  v3[16] = sub_23F366578();
  v7 = sub_23F619E20();
  v3[17] = v7;
  v3[18] = *(_QWORD *)(v7 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  return sub_23F3B15DC();
}

uint64_t sub_23F50C03C()
{
  uint64_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint8_t *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;

  if (qword_256E6F080 != -1)
    swift_once();
  v1 = sub_23F619E44();
  sub_23F361498(v1, (uint64_t)qword_256E80338);
  sub_23F619E38();
  sub_23F619DFC();
  v2 = sub_23F619E38();
  v3 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v4 = (uint8_t *)sub_23F366668();
    *(_WORD *)v4 = 0;
    v5 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v2, v3, v5, "PlanResolverService.run", "", v4, 2u);
    sub_23F366530();
  }
  v6 = v0[19];
  v7 = v0[20];
  v9 = v0[17];
  v8 = v0[18];
  v10 = v0[15];
  v22 = v0[16];
  v11 = v0[13];
  v12 = v0[14];
  v13 = v0[5];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v7, v9);
  sub_23F619E74();
  swift_allocObject();
  v0[21] = sub_23F619E68();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v14 = (_QWORD *)(v13 + *(int *)(type metadata accessor for PlanResolverService() + 20));
  v15 = v14[3];
  v16 = v14[4];
  v17 = sub_23F35EA9C(v14, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v13, v11);
  v18 = *(_QWORD *)(v15 - 8);
  v19 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v18 + 16))(v19, v17, v15);
  Interpreter.init<A>(toolbox:actionRequirements:)(v10, v19, v15, v16, v22);
  sub_23F366708();
  v20 = (_QWORD *)swift_task_alloc();
  v0[22] = (uint64_t)v20;
  *v20 = v0;
  v20[1] = sub_23F50C254;
  return Interpreter.resolve(sessionState:contextId:)(v0[12], v0[3], v0[4]);
}

uint64_t sub_23F50C254()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return sub_23F3B15DC();
}

uint64_t sub_23F50C2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  StepResolution.toEventPayloads()();
  v2 = v1;
  sub_23F619094();
  swift_bridgeObjectRetain_n();
  v3 = sub_23F619E8C();
  v4 = sub_23F61C61C();
  if (os_log_type_enabled(v3, v4))
  {
    v34 = v4;
    v5 = (uint8_t *)sub_23F366668();
    v38 = sub_23F366668();
    v35 = v5;
    *(_DWORD *)v5 = 136315138;
    v6 = *(_QWORD *)(v2 + 16);
    v7 = MEMORY[0x24BEE4AF8];
    v37 = (_QWORD *)v0;
    if (v6)
    {
      v33 = v3;
      v8 = *(_QWORD *)(v0 + 56);
      v39 = MEMORY[0x24BEE4AF8];
      sub_23F37B47C();
      v9 = v2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v36 = *(_QWORD *)(v8 + 72);
      v10 = v8;
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
      v7 = v39;
      do
      {
        v12 = v37[8];
        v13 = v37[6];
        v11(v12, v9, v13);
        v14 = sub_23F61B29C();
        v16 = v15;
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37B47C();
          v7 = v39;
        }
        v17 = *(_QWORD *)(v7 + 16);
        if (v17 >= *(_QWORD *)(v7 + 24) >> 1)
        {
          sub_23F37B47C();
          v7 = v39;
        }
        *(_QWORD *)(v7 + 16) = v17 + 1;
        v18 = v7 + 16 * v17;
        *(_QWORD *)(v18 + 32) = v14;
        *(_QWORD *)(v18 + 40) = v16;
        v9 += v36;
        --v6;
      }
      while (v6);
      v3 = v33;
    }
    v22 = MEMORY[0x24266F8F8](v7, MEMORY[0x24BEE0D00]);
    v24 = v23;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v22, v24, &v38);
    v37[2] = v25;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F4E4DB4();
    _os_log_impl(&dword_23F35A000, v3, v34, "resolved to %s", v35, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v19 = *(_QWORD *)(v0 + 80);
  v20 = *(_QWORD *)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 72);
  sub_23F4E4DB4();

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
  v26 = *(_QWORD *)(v0 + 184);
  v27 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(swift_task_alloc() + 16) = v27;
  sub_23F367DC0();
  if (v26)
  {
    v29 = *(_QWORD *)(v0 + 128);
    sub_23F50CD1C(*(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for StepResolution);
    sub_23F50CD1C(v29, type metadata accessor for Interpreter);
    swift_bridgeObjectRelease();
    sub_23F366708();
    sub_23F50C76C();
    swift_release();
    sub_23F50CF74();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v31 = v28;
    v32 = *(_QWORD *)(v0 + 128);
    sub_23F50CD1C(*(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for StepResolution);
    sub_23F50CD1C(v32, type metadata accessor for Interpreter);
    swift_bridgeObjectRelease();
    sub_23F366708();
    sub_23F50C76C();
    swift_release();
    swift_task_dealloc();
    sub_23F3666E4();
    sub_23F366698();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v31);
  }
}

uint64_t sub_23F50C6D4()
{
  uint64_t v0;

  sub_23F50CD1C(*(_QWORD *)(v0 + 128), type metadata accessor for Interpreter);
  sub_23F50C76C();
  swift_release();
  sub_23F50CF74();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F50C76C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  NSObject *v12;
  char v13;
  char v14;
  const char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_signpost_id_t v22;
  void (*v23)(_BYTE *, uint64_t);
  _BYTE v24[12];
  int v25;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_23F619E50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_23F619E20();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v24[-v9];
  if (qword_256E6F080 != -1)
    swift_once();
  v11 = sub_23F619E44();
  sub_23F361498(v11, (uint64_t)qword_256E80338);
  v12 = sub_23F619E38();
  sub_23F619E5C();
  v25 = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v1 + 88))(v3, v0) == *MEMORY[0x24BEE7810])
    {
      v13 = 0;
      v14 = 0;
      v15 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
      v15 = "%s";
      v14 = 2;
      v13 = 1;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v8, v10, v4);
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v27 = v18;
    *(_BYTE *)v17 = v14;
    *(_BYTE *)(v17 + 1) = v13;
    *(_WORD *)(v17 + 2) = 2080;
    v19 = sub_23F61C8F8();
    sub_23F37AE00(v19, v20, &v27);
    v26 = v21;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v22 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v12, (os_signpost_type_t)v25, v22, "PlanResolverService.run", v15, (uint8_t *)v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v18, -1, -1);
    MEMORY[0x242670B70](v17, -1, -1);

    v23 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v23(v10, v4);
    return ((uint64_t (*)(_BYTE *, uint64_t))v23)(v8, v4);
  }
  else
  {

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
  }
}

uint64_t sub_23F50CA4C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v17[2];
  _QWORD *v18;

  v18 = a2;
  v17[0] = a3;
  v17[1] = a1;
  v4 = sub_23F35D2E8(&qword_256E702E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F61B164();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F61B2E4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61B128();
  v15 = sub_23F61B14C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_23F3F1328(v15, (uint64_t)v6);
  swift_bridgeObjectRelease();
  sub_23F37462C(0xD000000000000085, 0x800000023F6387E0, 41, 0xD000000000000020, 0x800000023F638140);
  result = sub_23F4283FC((uint64_t)v6);
  if (v3)
  {
    *v18 = v3;
  }
  else
  {
    sub_23F61B23C();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

uint64_t PlanResolverService.telemetryTarget.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE54B78];
  v3 = sub_23F619F10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_23F50CC48()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23F3E013C;
  return PlanResolverService.setup(sessionState:)();
}

uint64_t sub_23F50CC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23F44A834;
  return PlanResolverService.handle(_:plannerServiceContext:)(a1, a2);
}

uint64_t sub_23F50CCE8@<X0>(uint64_t a1@<X8>)
{
  return PlanResolverService.telemetryTarget.getter(a1);
}

uint64_t sub_23F50CD00@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23F50CA4C(a1, a2, a3);
}

uint64_t sub_23F50CD1C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_23F50CD58(uint64_t a1)
{
  unint64_t result;

  result = sub_23F50CD7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23F50CD7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E78D50;
  if (!qword_256E78D50)
  {
    v1 = type metadata accessor for PlanResolverService();
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PlanResolverService, v1);
    atomic_store(result, (unint64_t *)&qword_256E78D50);
  }
  return result;
}

uint64_t destroy for PlanResolverService(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + *(int *)(a2 + 20));
}

uint64_t getEnumTagSinglePayload for PlanResolverService()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F50CE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F384B34();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PlanResolverService()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F50CE90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23F384B34();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_23F50CF04()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F50CF74()
{
  return swift_task_dealloc();
}

uint64_t PrescribedPlanGenerator.init(prescribedPlan:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23F50DC98();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t PrescribedPlanGenerator.setup(sessionState:)()
{
  uint64_t v0;

  return sub_23F3B12EC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PrescribedPlanGenerator.handle(_:plannerServiceContext:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_23F61B2C0();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = sub_23F366578();
  sub_23F35D2E8(&qword_256E702E0);
  v2[7] = sub_23F366578();
  v4 = sub_23F61B164();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = sub_23F366578();
  v5 = sub_23F61B2E4();
  v2[11] = v5;
  v2[12] = *(_QWORD *)(v5 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  sub_23F6184E8();
  v2[15] = sub_23F366578();
  v6 = sub_23F61B1C4();
  v2[16] = v6;
  v2[17] = *(_QWORD *)(v6 - 8);
  v2[18] = sub_23F366578();
  v7 = sub_23F61B1E8();
  v2[19] = v7;
  v2[20] = *(_QWORD *)(v7 - 8);
  v2[21] = sub_23F366578();
  sub_23F35D2E8(&qword_256E78A98);
  v2[22] = sub_23F366578();
  v8 = sub_23F619FAC();
  v2[23] = v8;
  v2[24] = *(_QWORD *)(v8 - 8);
  v2[25] = sub_23F366578();
  sub_23F617D08();
  v2[26] = sub_23F366578();
  v9 = sub_23F61AAF8();
  v2[27] = v9;
  v2[28] = *(_QWORD *)(v9 - 8);
  v2[29] = sub_23F366578();
  v10 = sub_23F50DC98();
  v2[30] = v10;
  v2[31] = *(_QWORD *)(v10 - 8);
  v2[32] = sub_23F366578();
  return swift_task_switch();
}

uint64_t sub_23F50D150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = v0;
  v2 = v0;
  v4 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v2 + 256);
  v5 = (_QWORD *)(v2 + 248);
  v6 = *(v5 - 1);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v3, *(v5 - 28), v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v6) == *MEMORY[0x24BE55D38])
  {
    v7 = *(_QWORD *)(v1 + 256);
    v8 = *(_QWORD *)(v1 + 232);
    v9 = *(_QWORD *)(v1 + 216);
    v10 = *(_QWORD *)(v1 + 224);
    v11 = *(_QWORD *)(v1 + 200);
    v26 = *(_QWORD *)(v1 + 192);
    v27 = *(_QWORD *)(v1 + 184);
    v28 = *(_QWORD *)(v1 + 176);
    v31 = *(_QWORD *)(v1 + 136);
    v32 = *(_QWORD *)(v1 + 144);
    v33 = *(_QWORD *)(v1 + 128);
    v29 = *(_QWORD *)(v1 + 80);
    v34 = *(_QWORD *)(v1 + 72);
    v35 = *(_QWORD *)(v1 + 64);
    v36 = *(_QWORD *)(v1 + 56);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 248) + 96))(v7, *(_QWORD *)(v1 + 240));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, v7, v9);
    sub_23F35D2E8(&qword_256E6FFD8);
    sub_23F61A684();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_23F61E7E0;
    sub_23F61B134();
    sub_23F61B17C();
    swift_release();
    sub_23F61AAEC();
    sub_23F61AAE0();
    sub_23F61A714();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 104))(v11, *MEMORY[0x24BE54D28], v27);
    v12 = sub_23F61B95C();
    sub_23F36196C(v28, 1, 1, v12);
    sub_23F61A678();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v31 + 104))(v32, *MEMORY[0x24BE569D0], v33);
    sub_23F61B1DC();
    sub_23F61B1D0();
    sub_23F61B128();
    v13 = sub_23F61B14C();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v29, v35);
    sub_23F3F1328(v13, v36);
    swift_bridgeObjectRelease();
    sub_23F37462C(0xD000000000000089, 0x800000023F638870, 157, 0xD000000000000020, 0x800000023F638140);
    sub_23F4283FC(v36);
    v14 = *(_QWORD *)(v1 + 168);
    v15 = *(_QWORD *)(v1 + 160);
    v30 = *(_QWORD *)(v1 + 152);
    v16 = *(_QWORD *)(v1 + 112);
    v18 = *(_QWORD *)(v1 + 96);
    v17 = *(_QWORD *)(v1 + 104);
    v19 = *(_QWORD *)(v1 + 88);
    v20 = *(_QWORD *)(v1 + 48);
    v21 = *(_QWORD *)(v1 + 32);
    v22 = *(_QWORD *)(v1 + 40);
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v20, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v20, *MEMORY[0x24BE56AC8], v21);
    sub_23F61B23C();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    sub_23F35D2E8(&qword_256E701A0);
    v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_23F61E7E0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v24 + v23, v16, v19);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v30);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v24);
  }
  else
  {
    sub_23F50D6E8();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(_QWORD, _QWORD))(*v5 + 8))(v5[1], *(v5 - 1));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_23F50D6E8()
{
  unint64_t result;

  result = qword_256E78DF8[0];
  if (!qword_256E78DF8[0])
  {
    result = MEMORY[0x242670A44](&unk_23F62B128, &type metadata for PrescribedPlanGenerator.Error);
    atomic_store(result, qword_256E78DF8);
  }
  return result;
}

uint64_t PrescribedPlanGenerator.telemetryTarget.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE54BA8];
  v3 = sub_23F619F10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_23F50D768()
{
  sub_23F50DC5C();
  return sub_23F61CCAC();
}

uint64_t sub_23F50D790()
{
  sub_23F50DC5C();
  return sub_23F61CCA0();
}

unint64_t sub_23F50D7B8()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_23F50D7D4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23F3E013C;
  return PrescribedPlanGenerator.setup(sessionState:)();
}

uint64_t sub_23F50D818(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F44A834;
  return PrescribedPlanGenerator.handle(_:plannerServiceContext:)(a1);
}

uint64_t sub_23F50D864@<X0>(uint64_t a1@<X8>)
{
  return PrescribedPlanGenerator.telemetryTarget.getter(a1);
}

unint64_t sub_23F50D878(uint64_t a1)
{
  unint64_t result;

  result = sub_23F50D89C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23F50D89C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E78E10;
  if (!qword_256E78E10)
  {
    v1 = type metadata accessor for PrescribedPlanGenerator();
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PrescribedPlanGenerator, v1);
    atomic_store(result, (unint64_t *)&qword_256E78E10);
  }
  return result;
}

uint64_t type metadata accessor for PrescribedPlanGenerator()
{
  uint64_t result;

  result = qword_256E78E70;
  if (!qword_256E78E70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PrescribedPlanGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61AB04();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for PrescribedPlanGenerator(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61AB04();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for PrescribedPlanGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61AB04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PrescribedPlanGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61AB04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PrescribedPlanGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61AB04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PrescribedPlanGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61AB04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrescribedPlanGenerator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F50DAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F50DC98();
  return sub_23F36195C(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PrescribedPlanGenerator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F50DAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F50DC98();
  return sub_23F36196C(a1, a2, a2, v4);
}

uint64_t sub_23F50DB14()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61AB04();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PrescribedPlanGenerator.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F50DBBC + 4 * byte_23F62B000[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F50DBDC + 4 * byte_23F62B005[v4]))();
}

_BYTE *sub_23F50DBBC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F50DBDC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F50DBE4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F50DBEC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F50DBF4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F50DBFC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PrescribedPlanGenerator.Error()
{
  return &type metadata for PrescribedPlanGenerator.Error;
}

unint64_t sub_23F50DC20()
{
  unint64_t result;

  result = qword_256E78EA8;
  if (!qword_256E78EA8)
  {
    result = MEMORY[0x242670A44](&unk_23F62B100, &type metadata for PrescribedPlanGenerator.Error);
    atomic_store(result, (unint64_t *)&qword_256E78EA8);
  }
  return result;
}

unint64_t sub_23F50DC5C()
{
  unint64_t result;

  result = qword_256E78EB0;
  if (!qword_256E78EB0)
  {
    result = MEMORY[0x242670A44](&unk_23F62B080, &type metadata for PrescribedPlanGenerator.Error);
    atomic_store(result, (unint64_t *)&qword_256E78EB0);
  }
  return result;
}

uint64_t sub_23F50DC98()
{
  return sub_23F61AB04();
}

uint64_t sub_23F50DCA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      sub_23F617BA0();
      if (v8 >= v7 >> 1)
        sub_23F37B47C();
      v4 += 4;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_OWORD *PrintBuiltinGrammarGenerator.promptRenderer.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;

  return sub_23F38F144(v1, a1);
}

uint64_t PrintBuiltinGrammarGenerator.progressiveDisclosureEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 200);
}

uint64_t PrintBuiltinGrammarGenerator.progressiveDisclosureRecursionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  sub_23F383738();
  return v1;
}

uint64_t PrintBuiltinGrammarGenerator.makeGrammar(from:identifier:renderingState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[16];
  uint64_t v52;
  uint64_t v53;

  v53 = *MEMORY[0x24BDAC8D0];
  v52 = a4;
  result = sub_23F3679A0((uint64_t)sub_23F50EC3C, (uint64_t)v51, a1);
  if (v5)
    return result;
  v10 = result;
  v46 = a2;
  v47 = a5;
  v11 = sub_23F50DCA0(result);
  v12 = *(_QWORD *)(v11 + 16);
  v13 = MEMORY[0x24BEE4AF8];
  v48 = v10;
  v49 = a3;
  if (v12)
  {
    v50 = MEMORY[0x24BEE4AF8];
    sub_23F37B92C();
    v13 = v50;
    v14 = (uint64_t *)(v11 + 40);
    do
    {
      v16 = *(v14 - 1);
      v15 = *v14;
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v16;
      *(_QWORD *)(v17 + 24) = v15;
      v19 = *(_QWORD *)(v50 + 16);
      v18 = *(_QWORD *)(v50 + 24);
      sub_23F383738();
      if (v19 >= v18 >> 1)
        sub_23F37B92C();
      v14 += 2;
      *(_QWORD *)(v50 + 16) = v19 + 1;
      *(_QWORD *)(v50 + 8 * v19 + 32) = v17 | 0x4000000000000000;
      --v12;
    }
    while (v12);
    v10 = v48;
    a3 = v49;
  }
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v13;
  v21 = *(_QWORD *)(v11 + 16);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  if (!v21)
  {
    sub_23F362984();
    sub_23F50ECA0();
    sub_23F362D64();
    swift_willThrow();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v22 = *(_QWORD *)(v10 + 16);
  if (!v22)
  {
    v23 = MEMORY[0x24BEE4AF8];
LABEL_40:
    result = sub_23F362984();
    *v47 = v46;
    v47[1] = a3;
    v47[2] = v20 | 0x8000000000000000;
    v47[3] = v23;
    return result;
  }
  v45 = v20;
  swift_retain();
  sub_23F383738();
  sub_23F617BA0();
  v23 = MEMORY[0x24BEE4AF8];
  v24 = (uint64_t *)(v10 + 56);
  while (1)
  {
    v26 = *(v24 - 3);
    v25 = *(v24 - 2);
    v28 = *(v24 - 1);
    v27 = *v24;
    sub_23F35D2E8(&qword_256E70310);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
    v30 = (_QWORD *)(inited + 16);
    *(_QWORD *)(inited + 32) = v26;
    *(_QWORD *)(inited + 40) = v25;
    *(_QWORD *)(inited + 48) = v28;
    v31 = *(_QWORD *)(v27 + 16);
    sub_23F617BA0();
    swift_retain();
    sub_23F383738();
    if (!v31)
      goto LABEL_12;
    sub_23F376C6C();
    if (!*(_QWORD *)(v27 + 16))
      break;
    inited = v41;
    v42 = *(_QWORD *)(v41 + 16);
    if ((*(_QWORD *)(v41 + 24) >> 1) - v42 < v31)
      goto LABEL_46;
    v43 = v41 + 24 * v42 + 32;
    if (v27 + 32 < v43 + 24 * v31 && v43 < v27 + 32 + 24 * v31)
      goto LABEL_49;
    v30 = (_QWORD *)(inited + 16);
    swift_arrayInitWithCopy();
    if (__OFADD__(*(_QWORD *)(inited + 16), v31))
      goto LABEL_47;
    *v30 = *(_QWORD *)(inited + 16) + v31;
LABEL_12:
    sub_23F362984();
    v32 = *(_QWORD *)(inited + 16);
    v33 = *(_QWORD *)(v23 + 16);
    if (__OFADD__(v33, v32))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v33 + v32 > *(_QWORD *)(v23 + 24) >> 1)
    {
      sub_23F376C6C();
      v23 = v34;
    }
    if (*v30)
    {
      v35 = *(_QWORD *)(v23 + 16);
      if ((*(_QWORD *)(v23 + 24) >> 1) - v35 < v32)
        goto LABEL_44;
      v36 = v23 + 24 * v35 + 32;
      if (inited + 32 < v36 + 24 * v32 && v36 < inited + 32 + 24 * v32)
        goto LABEL_49;
      swift_arrayInitWithCopy();
      if (v32)
      {
        v38 = *(_QWORD *)(v23 + 16);
        v39 = __OFADD__(v38, v32);
        v40 = v38 + v32;
        if (v39)
          goto LABEL_45;
        *(_QWORD *)(v23 + 16) = v40;
      }
    }
    else if (v32)
    {
      goto LABEL_43;
    }
    swift_bridgeObjectRelease();
    v24 += 4;
    if (!--v22)
    {
      swift_release();
      a3 = v49;
      swift_bridgeObjectRelease();
      sub_23F362984();
      v20 = v45;
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_49:
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F50E20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = PrintBuiltinGrammarGenerator.makeGrammarForTool(for:renderingState:)(a1, a2, a4);
  if (v4)
    *a3 = v4;
  return result;
}

uint64_t PrintBuiltinGrammarGenerator.makeGrammarForTool(for:renderingState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[8];
  char v40;
  uint64_t v41;
  uint64_t v42;

  v35 = a3;
  v6 = type metadata accessor for RenderableTool();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3[8];
  v10 = v3[9];
  sub_23F35EA9C(v3 + 5, v9);
  v11 = sub_23F61B5D8();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v36 = a1;
  v12(v8, a1, v11);
  v13 = *MEMORY[0x24BE57550];
  v14 = sub_23F618BB4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v8, v13, v14);
  swift_storeEnumTagMultiPayload();
  v15 = a2;
  (*(void (**)(_QWORD *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v10 + 32))(v39, v8, a2, v9, v10);
  sub_23F3C2C74((uint64_t)v8);
  v16 = v39[0];
  v37 = v39[7];
  v38 = v39[6];
  v42 = v41;
  if ((v40 & 1) != 0)
  {
    sub_23F39BB58();
    swift_willThrowTypedImpl();
    v17 = sub_23F362D64();
    *v18 = v16;
    sub_23F50F11C(v17, (uint64_t)v18, v19, v20, v21, v22, v23, v24, 1);
  }
  else
  {
    sub_23F617BA0();
    sub_23F50E41C(v36, v15, v35);
    v26 = swift_bridgeObjectRelease();
    sub_23F50F11C(v26, v27, v28, v29, v30, v31, v32, v33, 0);
  }
  return sub_23F50F13C();
}

uint64_t sub_23F50E41C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;

  v6 = sub_23F61B5D8();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F35D2E8(&qword_256E70070);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23F61E7E0;
  v9 = swift_allocObject();
  v26 = 0x28746E697270;
  v27 = 0xE600000000000000;
  sub_23F61C280();
  sub_23F61C280();
  *(_QWORD *)(v9 + 16) = 0x28746E697270;
  *(_QWORD *)(v9 + 24) = 0xE600000000000000;
  *(_QWORD *)(v8 + 32) = v9;
  if (*(_BYTE *)(v3 + 200) == 1)
  {
    sub_23F50E8EC(a1, a2, &v26);
    v10 = v26;
    v11 = *(_QWORD *)(v8 + 16);
    v12 = *(_QWORD *)(v8 + 24);
    v13 = v11 + 1;
    swift_retain();
    if (v11 >= v12 >> 1)
    {
      sub_23F377ABC();
      v8 = v23;
    }
    *(_QWORD *)(v8 + 16) = v13;
    *(_QWORD *)(v8 + 8 * v11 + 32) = v10;
    v14 = swift_allocObject();
    v15 = *(_QWORD *)(v3 + 216);
    *(_QWORD *)(v14 + 16) = *(_QWORD *)(v3 + 208);
    *(_QWORD *)(v14 + 24) = v15;
    v16 = *(_QWORD *)(v8 + 24);
    v17 = v11 + 2;
    sub_23F617BA0();
    if (v13 >= v16 >> 1)
    {
      sub_23F377ABC();
      v8 = v24;
    }
    v18 = a3;
    *(_QWORD *)(v8 + 16) = v17;
    *(_QWORD *)(v8 + 8 * v13 + 32) = v14 | 0x4000000000000000;
    swift_release();
  }
  else
  {
    v18 = a3;
  }
  v26 = 0x6F745F746E697270;
  v27 = 0xEB000000005F6C6FLL;
  sub_23F61C1FC();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  v19 = v26;
  v20 = v27;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v8;
  *v18 = v19;
  v18[1] = v20;
  v22 = MEMORY[0x24BEE4AF8];
  v18[2] = result | 0xC000000000000000;
  v18[3] = v22;
  return result;
}

uint64_t sub_23F50E8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  v38 = a3;
  v7 = type metadata accessor for RenderableTool();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v3[8];
  v11 = v3[9];
  sub_23F35EA9C(v3 + 5, v10);
  v12 = sub_23F61B5D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, a1, v12);
  v13 = *MEMORY[0x24BE57550];
  v14 = sub_23F618BB4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v9, v13, v14);
  swift_storeEnumTagMultiPayload();
  sub_23F510924();
  sub_23F5156E0(v15, v16, v17, v18, v19, v20, v21, v22, v36, v37, (uint64_t)v38, v39, v40, v41, v42, v43, v44, v45, v46,
    v47);
  v24 = v23;
  v37 = v4;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(&v40, v9, v24, a2, v10, v11);
  swift_release();
  sub_23F3C2C74((uint64_t)v9);
  v25 = v40;
  v26 = v41;
  v27 = v42;
  v28 = v43;
  v30 = v44;
  v29 = v45;
  v50 = v46;
  v39 = v47;
  v31 = v49;
  if ((v48 & 1) != 0)
  {
    sub_23F39BB58();
    swift_willThrowTypedImpl();
    swift_allocError();
    *v32 = v25;
    sub_23F39BA98(v25, v26, v27, v28, v30, v29, v50, v39, 1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v34 = swift_allocObject();
    v40 = 0;
    v41 = 0xE000000000000000;
    sub_23F617BA0();
    sub_23F61C8E0();
    swift_bridgeObjectRelease();
    v36 = v31;
    v40 = 0xD000000000000012;
    v41 = 0x800000023F638950;
    sub_23F61C280();
    swift_bridgeObjectRelease();
    sub_23F61C280();
    sub_23F39BA98(v25, v26, v27, v28, v30, v29, v50, v39, 0);
    result = swift_bridgeObjectRelease();
    v35 = v41;
    *(_QWORD *)(v34 + 16) = v40;
    *(_QWORD *)(v34 + 24) = v35;
    *v38 = v34;
  }
  return result;
}

uint64_t sub_23F50EBB4()
{
  sub_23F50F0E0();
  return sub_23F61CCAC();
}

uint64_t sub_23F50EBDC()
{
  sub_23F50F0E0();
  return sub_23F61CCA0();
}

unint64_t sub_23F50EC04()
{
  return 0xD000000000000021;
}

uint64_t sub_23F50EC24@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return PrintBuiltinGrammarGenerator.makeGrammar(from:identifier:renderingState:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_23F50EC3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_23F50E20C(a1, *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_23F50EC58()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F50EC7C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_23F50ECA0()
{
  unint64_t result;

  result = qword_256E78EB8;
  if (!qword_256E78EB8)
  {
    result = MEMORY[0x242670A44](&unk_23F62B274, &type metadata for PrintBuiltinGrammarGenerator.GeneratorError);
    atomic_store(result, (unint64_t *)&qword_256E78EB8);
  }
  return result;
}

uint64_t destroy for PrintBuiltinGrammarGenerator(uint64_t a1)
{
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PrintBuiltinGrammarGenerator(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  v9 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v9;
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for PrintBuiltinGrammarGenerator(uint64_t a1, uint64_t a2)
{
  sub_23F361AD0((uint64_t *)a1, (uint64_t *)a2);
  sub_23F361AD0((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  sub_23F361AD0((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  sub_23F361AD0((uint64_t *)(a1 + 120), (uint64_t *)(a2 + 120));
  sub_23F361AD0((uint64_t *)(a1 + 160), (uint64_t *)(a2 + 160));
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for PrintBuiltinGrammarGenerator(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xE0uLL);
}

uint64_t assignWithTake for PrintBuiltinGrammarGenerator(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  v7 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrintBuiltinGrammarGenerator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 224))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrintBuiltinGrammarGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 224) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 224) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrintBuiltinGrammarGenerator()
{
  return &type metadata for PrintBuiltinGrammarGenerator;
}

uint64_t storeEnumTagSinglePayload for PrintBuiltinGrammarGenerator.GeneratorError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F50F040 + 4 * byte_23F62B170[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F50F060 + 4 * byte_23F62B175[v4]))();
}

_BYTE *sub_23F50F040(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F50F060(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F50F068(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F50F070(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F50F078(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F50F080(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PrintBuiltinGrammarGenerator.GeneratorError()
{
  return &type metadata for PrintBuiltinGrammarGenerator.GeneratorError;
}

unint64_t sub_23F50F0A4()
{
  unint64_t result;

  result = qword_256E78ED8;
  if (!qword_256E78ED8)
  {
    result = MEMORY[0x242670A44](&unk_23F62B24C, &type metadata for PrintBuiltinGrammarGenerator.GeneratorError);
    atomic_store(result, (unint64_t *)&qword_256E78ED8);
  }
  return result;
}

unint64_t sub_23F50F0E0()
{
  unint64_t result;

  result = qword_256E78EE0;
  if (!qword_256E78EE0)
  {
    result = MEMORY[0x242670A44](&unk_23F62B1CC, &type metadata for PrintBuiltinGrammarGenerator.GeneratorError);
    atomic_store(result, (unint64_t *)&qword_256E78EE0);
  }
  return result;
}

void sub_23F50F11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F39BA98(v13, v14, v12, v9, v10, v11, *(_QWORD *)(v15 - 168), *(_QWORD *)(v15 - 176), a9);
}

uint64_t sub_23F50F13C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F50F148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v3 = type metadata accessor for ConversationItem(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v6 = *(_QWORD *)(v4 + 72);
  sub_23F383738();
  v7 = MEMORY[0x24BEE4AF8];
  do
  {
    v8 = (uint64_t *)(v5 + *(int *)(v3 + 20));
    if (*((unsigned __int8 *)v8 + 8) <= 1u)
    {
      v9 = *v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F510640();
        v7 = v11;
      }
      v10 = *(_QWORD *)(v7 + 16);
      if (v10 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_23F510640();
        v7 = v12;
      }
      *(_QWORD *)(v7 + 16) = v10 + 1;
      *(_QWORD *)(v7 + 8 * v10 + 32) = v9;
    }
    v5 += v6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v7;
}

void sub_23F50F25C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char *v30;
  void (*v31)(uint64_t, char *, uint64_t);
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  _QWORD v44[2];
  char *v45;
  char *v46;
  char *v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _BYTE v56[40];

  sub_23F362ABC();
  v3 = v2;
  v4 = sub_23F3846E4();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v47 = v6;
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F3834C0();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v44 - v11;
  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F362838();
  v14 = sub_23F617D08();
  v53 = *(_QWORD *)(v14 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F5105D8();
  MEMORY[0x24BDAC7A8](v16);
  v52 = (uint64_t)v44 - v18;
  v19 = *(_QWORD *)(v3 + 16);
  v44[1] = v3;
  if (!v19)
  {
    sub_23F383738();
LABEL_23:
    swift_bridgeObjectRelease();
    sub_23F362948();
    return;
  }
  v54 = v17;
  v51 = v0;
  v20 = v3 + 32;
  sub_23F383738();
  v21 = (_QWORD *)MEMORY[0x24BEE4B00];
  v45 = v12;
  v46 = v10;
  while (1)
  {
    sub_23F361418(v20, (uint64_t)v56);
    sub_23F510614();
    v22 = v1;
    v1 = v51;
    sub_23F510670(v22);
    if (sub_23F36195C(v1, 1, v14) != 1)
      break;
    sub_23F39E4B8(v1, &qword_256E6FFA0);
LABEL_20:
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v56);
    v20 += 40;
    if (!--v19)
      goto LABEL_23;
  }
  v24 = v52;
  v23 = v53;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v52, v1, v14);
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v48(v54, v24, v14);
  sub_23F510614();
  sub_23F510670(v1);
  v25 = v50;
  sub_23F36196C((uint64_t)v12, 0, 1, v50);
  if (sub_23F36195C((uint64_t)v12, 1, v25) == 1)
  {
    sub_23F39E4B8((uint64_t)v12, &qword_256E6FB20);
    sub_23F617BA0();
    sub_23F510664();
    v27 = v26;
    v29 = v28;
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
    {
      swift_isUniquelyReferenced_nonNull_native();
      v55 = v21;
      sub_23F35D2E8(&qword_256E78EF0);
      sub_23F510600();
      sub_23F510624(v55[6] + *(_QWORD *)(v53 + 72) * v27);
      v21 = v55;
      v1 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v10, v55[7] + *(_QWORD *)(v49 + 72) * v27, v50);
      sub_23F39E4F0(&qword_256E6FFB0, MEMORY[0x24BE52158]);
      sub_23F61CA30();
      swift_bridgeObjectRelease();
      sub_23F36196C((uint64_t)v10, 0, 1, v1);
    }
    else
    {
      sub_23F36196C((uint64_t)v10, 1, 1, v50);
    }
    sub_23F510624(v54);
    sub_23F39E4B8((uint64_t)v10, &qword_256E6FB20);
LABEL_19:
    sub_23F510624(v52);
    goto LABEL_20;
  }
  v30 = v12;
  v31 = *(void (**)(uint64_t, char *, uint64_t))(v49 + 32);
  v32 = v25;
  v31((uint64_t)v47, v30, v25);
  swift_isUniquelyReferenced_nonNull_native();
  v55 = v21;
  sub_23F510664();
  if (!__OFADD__(v21[2], (v34 & 1) == 0))
  {
    v35 = v33;
    v36 = v34;
    sub_23F35D2E8(&qword_256E78EF0);
    v37 = sub_23F510600();
    v1 = v54;
    if ((v37 & 1) != 0)
    {
      sub_23F3756E8();
      if ((v36 & 1) != (v39 & 1))
        goto LABEL_26;
      v35 = v38;
    }
    v40 = v55;
    if ((v36 & 1) != 0)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v49 + 40))(v55[7] + *(_QWORD *)(v49 + 72) * v35, v47, v32);
    }
    else
    {
      v55[(v35 >> 6) + 8] |= 1 << v35;
      v48(v40[6] + *(_QWORD *)(v53 + 72) * v35, v1, v14);
      v31(v40[7] + *(_QWORD *)(v49 + 72) * v35, v47, v32);
      v41 = v40[2];
      v42 = __OFADD__(v41, 1);
      v43 = v41 + 1;
      if (v42)
        goto LABEL_25;
      v40[2] = v43;
    }
    v21 = v55;
    swift_bridgeObjectRelease();
    sub_23F510624(v54);
    v12 = v45;
    v10 = v46;
    goto LABEL_19;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  sub_23F61CC94();
  __break(1u);
}

void sub_23F50F6F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(uint64_t, uint64_t);
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[40];

  sub_23F362ABC();
  v35 = v1;
  v2 = sub_23F617D08();
  v36 = *(_QWORD *)(v2 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v31 = v4;
  v34 = sub_23F35D2E8(&qword_256E70A50);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  v8 = v7 - v6;
  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F5105D8();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v30 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v30 - v15;
  v17 = *v0;
  v18 = *(_QWORD *)(*v0 + 16);
  if (!v18)
    goto LABEL_16;
  v33 = v14;
  v30[1] = v0;
  v30[2] = v17;
  v19 = (_QWORD *)(v17 + 32);
  sub_23F617BA0();
  v20 = 0;
  v32 = v18;
  while (1)
  {
    v22 = v19[3];
    v21 = v19[4];
    sub_23F35EA9C(v19, v22);
    (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v22, v21);
    sub_23F384918((uint64_t)v13, v35, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16));
    sub_23F36196C((uint64_t)v13, 0, 1, v2);
    v23 = v8 + *(int *)(v34 + 48);
    sub_23F3F81F0((uint64_t)v16, v8);
    sub_23F3F81F0((uint64_t)v13, v23);
    sub_23F3E4510(v8);
    if (v25)
      break;
    v24 = v33;
    sub_23F3F81F0(v8, v33);
    sub_23F3E4510(v23);
    if (v25)
    {
      sub_23F39E4B8((uint64_t)v13, &qword_256E6FFA0);
      sub_23F39E4B8((uint64_t)v16, &qword_256E6FFA0);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v24, v2);
      v18 = v32;
LABEL_11:
      sub_23F39E4B8(v8, &qword_256E70A50);
      goto LABEL_13;
    }
    v26 = v36;
    v27 = v31;
    sub_23F384918(v31, v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 32));
    sub_23F39E4F0((unint64_t *)&qword_256E701E8, MEMORY[0x24BE52160]);
    v28 = sub_23F61C0A0();
    v29 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v29(v27, v2);
    sub_23F51062C((uint64_t)v13);
    sub_23F51062C((uint64_t)v16);
    v29(v24, v2);
    sub_23F51062C(v8);
    v18 = v32;
    if ((v28 & 1) != 0)
      goto LABEL_15;
LABEL_13:
    ++v20;
    v19 += 5;
    if (v18 == v20)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  sub_23F39E4B8((uint64_t)v13, &qword_256E6FFA0);
  sub_23F39E4B8((uint64_t)v16, &qword_256E6FFA0);
  sub_23F3E4510(v23);
  if (!v25)
    goto LABEL_11;
  sub_23F39E4B8(v8, &qword_256E6FFA0);
LABEL_15:
  swift_bridgeObjectRelease();
  sub_23F5101B8(v20, (uint64_t)v37);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v37);
LABEL_16:
  sub_23F362948();
}

void sub_23F50F9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_23F362ABC();
  v49 = v1;
  v3 = v2;
  v4 = sub_23F619E98();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v50 = v6;
  v7 = type metadata accessor for ConversationItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v11 = v10 - v9;
  sub_23F35D2E8(&qword_256E78EE8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F38F964();
  v15 = v14 - v13;
  v16 = sub_23F3846E4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v48 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v43 - v20;
  type metadata accessor for StatementSegment(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F362838();
  sub_23F3663D4(v3, v0, v23);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
    v45 = v16;
    sub_23F384918((uint64_t)v21, v0, v24);
    v25 = *(_QWORD *)(v49 + 16);
    v44 = v17;
    if (v25)
    {
      v26 = v49 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v27 = *(_QWORD *)(v8 + 72);
      sub_23F3668F4();
      v28 = v50;
      while (1)
      {
        sub_23F3663D4(v26, v11, type metadata accessor for ConversationItem);
        if ((sub_23F616FE8() & 1) != 0)
          break;
        sub_23F3F5C30(v11);
        v26 += v27;
        if (!--v25)
        {
          v29 = 1;
          goto LABEL_9;
        }
      }
      sub_23F3F5C6C(v11, v15);
      v29 = 0;
LABEL_9:
      v17 = v44;
      v30 = v45;
    }
    else
    {
      sub_23F3668F4();
      v29 = 1;
      v30 = v45;
      v28 = v50;
    }
    sub_23F36196C(v15, v29, 1, v7);
    swift_bridgeObjectRelease();
    if (sub_23F36195C(v15, 1, v7) == 1)
    {
      sub_23F39E4B8(v15, &qword_256E78EE8);
    }
    else
    {
      sub_23F3F6720(*(_QWORD *)(v15 + *(int *)(v7 + 20)), *(_BYTE *)(v15 + *(int *)(v7 + 20) + 8));
      v32 = v31;
      v34 = v33;
      sub_23F3F5C30(v15);
      if (v34)
      {
        sub_23F617BA0();
        v35 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v32, v34);
        sub_23F369004(v35);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v30);
        goto LABEL_17;
      }
    }
    sub_23F619088();
    v36 = (uint64_t)v48;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v48, v21, v30);
    v37 = sub_23F619E8C();
    v38 = sub_23F61C628();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      *(_DWORD *)v39 = 136315138;
      v40 = sub_23F616FDC();
      sub_23F37AE00(v40, v41, &v52);
      v51 = v42;
      sub_23F61C790();
      sub_23F362984();
      sub_23F3B1F64(v36);
      _os_log_impl(&dword_23F35A000, v37, v38, "[resolvedStatementSegment] Unable to find item with UUID: %s", v39, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }
    sub_23F3B1F64(v36);

    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v28, v47);
    sub_23F3B1F64((uint64_t)v21);
  }
LABEL_17:
  sub_23F362948();
}

void sub_23F50FE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;

  sub_23F362ABC();
  v1 = v0;
  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F36285C();
  v53 = v3;
  v52 = *(_QWORD *)(sub_23F3846E4() - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v5 = type metadata accessor for ConversationItem(0);
  v50 = *(_QWORD *)(v5 - 8);
  v51 = (int *)v5;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v57 = v7;
  v8 = *(_QWORD *)(v1 + 16);
  if (!v8)
  {
LABEL_24:
    sub_23F510658();
    sub_23F362948();
    return;
  }
  v9 = (_QWORD *)(v1 + 32);
  sub_23F3668F4();
  v10 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v11 = v9[3];
    sub_23F5105F4();
    sub_23F510670(v11);
    v12 = v9[3];
    v13 = v9[4];
    sub_23F5105F4();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    v55 = v8;
    v56 = v14;
    if (v14)
      break;
    v23 = sub_23F510658();
    v24 = sub_23F51041C(v23);
    v25 = (_QWORD *)sub_23F51064C(v24);
    sub_23F362984();
    v26 = sub_23F385B28(v25);
    v28 = v27;
    swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
      v29 = -1;
    else
      v29 = v26;
    v22 = v29 + 1;
    if (__OFADD__(v29, 1))
      goto LABEL_25;
LABEL_18:
    v30 = v9[3];
    v31 = v9[4];
    sub_23F35EA9C(v9, v30);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 40))(v30, v31);
    v33 = sub_23F510658();
    sub_23F3F6A74(v33, v34, v32);
    v36 = v35;
    v38 = v37;
    v40 = v39;
    sub_23F362984();
    v54 = v10;
    v42 = v9[3];
    v41 = v9[4];
    sub_23F35EA9C(v9, v42);
    (*(void (**)(uint64_t, uint64_t))(v41 + 32))(v42, v41);
    v43 = v9[3];
    v44 = v9[4];
    sub_23F5105F4();
    LOBYTE(v43) = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 24))(v43, v44);
    (*(void (**)(uint64_t))(v52 + 32))(v57);
    v45 = v57 + v51[5];
    *(_QWORD *)v45 = v22;
    *(_BYTE *)(v45 + 8) = v56;
    v46 = (_QWORD *)(v57 + v51[6]);
    *v46 = v36;
    v46[1] = v38;
    v46[2] = v40;
    sub_23F510170(v53, v57 + v51[7]);
    *(_BYTE *)(v57 + v51[8]) = v43;
    v10 = v54;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F510634();
      v10 = v48;
    }
    v47 = *(_QWORD *)(v10 + 16);
    if (v47 >= *(_QWORD *)(v10 + 24) >> 1)
    {
      sub_23F510634();
      v10 = v49;
    }
    *(_QWORD *)(v10 + 16) = v47 + 1;
    sub_23F3F5C6C(v57, v10+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v47);
    v9 += 5;
    v8 = v55 - 1;
    if (v55 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
  }
  if (v14 != 1)
  {
    v22 = 0;
    goto LABEL_18;
  }
  v15 = sub_23F510658();
  v16 = sub_23F510254(v15);
  v17 = (_QWORD *)sub_23F51064C(v16);
  sub_23F362984();
  v18 = sub_23F385B28(v17);
  v20 = v19;
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    v21 = -1;
  else
    v21 = v18;
  v22 = v21 + 1;
  if (!__OFADD__(v21, 1))
    goto LABEL_18;
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_23F510170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FFA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23F5101B8(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F492488();
    v5 = v8;
  }
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v5 + 40 * a1;
    sub_23F362678((__int128 *)(v7 + 32), a2);
    sub_23F37A92C(v7 + 72, v6 - 1 - a1, v7 + 32);
    *(_QWORD *)(v5 + 16) = v6 - 1;
    *v2 = v5;
  }
}

uint64_t sub_23F510254(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v2 = type metadata accessor for ConversationItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - v7;
  v9 = MEMORY[0x24BEE4AF8];
  v24 = MEMORY[0x24BEE4AF8];
  v10 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  if (v10)
  {
    v11 = v8 + 8;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v13 = *(_QWORD *)(v3 + 72);
    v21 = a1;
    v23 = (v12 + 32) & ~v12;
    v14 = a1 + v23;
    v15 = type metadata accessor for ConversationItem;
    v22 = v8 + 8;
    do
    {
      sub_23F3663D4(v14, (uint64_t)v8, v15);
      if (v11[*(int *)(v2 + 20)] == 1)
      {
        v16 = v2;
        v17 = v15;
        sub_23F3F5C6C((uint64_t)v8, (uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23F37BFF4();
        v18 = v24;
        v19 = *(_QWORD *)(v24 + 16);
        if (v19 >= *(_QWORD *)(v24 + 24) >> 1)
        {
          sub_23F37BFF4();
          v18 = v24;
        }
        *(_QWORD *)(v18 + 16) = v19 + 1;
        sub_23F3F5C6C((uint64_t)v6, v18 + v23 + v19 * v13);
        v15 = v17;
        v2 = v16;
        v11 = v22;
      }
      else
      {
        sub_23F3F5C30((uint64_t)v8);
      }
      v14 += v13;
      --v10;
    }
    while (v10);
    v9 = v24;
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_23F51041C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v2 = type metadata accessor for ConversationItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - v7;
  v9 = MEMORY[0x24BEE4AF8];
  v23 = MEMORY[0x24BEE4AF8];
  v10 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  if (v10)
  {
    v11 = v8 + 8;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v13 = *(_QWORD *)(v3 + 72);
    v20 = a1;
    v22 = (v12 + 32) & ~v12;
    v14 = a1 + v22;
    v15 = type metadata accessor for ConversationItem;
    v21 = v8 + 8;
    do
    {
      sub_23F3663D4(v14, (uint64_t)v8, v15);
      if (v11[*(int *)(v2 + 20)])
      {
        sub_23F3F5C30((uint64_t)v8);
      }
      else
      {
        v16 = v15;
        sub_23F3F5C6C((uint64_t)v8, (uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23F37BFF4();
        v17 = v23;
        v18 = *(_QWORD *)(v23 + 16);
        if (v18 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          sub_23F37BFF4();
          v17 = v23;
        }
        *(_QWORD *)(v17 + 16) = v18 + 1;
        sub_23F3F5C6C((uint64_t)v6, v17 + v22 + v18 * v13);
        v15 = v16;
        v11 = v21;
      }
      v14 += v13;
      --v10;
    }
    while (v10);
    v9 = v23;
  }
  swift_bridgeObjectRelease();
  return v9;
}

_QWORD *sub_23F5105F4()
{
  uint64_t v0;
  _QWORD *v1;

  return sub_23F35EA9C(v1, v0);
}

uint64_t sub_23F510600()
{
  return sub_23F61CA18();
}

_QWORD *sub_23F510614()
{
  uint64_t v0;

  return sub_23F35EA9C((_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 96));
}

uint64_t sub_23F510624(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_23F51062C(uint64_t a1)
{
  uint64_t *v1;

  sub_23F39E4B8(a1, v1);
}

void sub_23F510634()
{
  sub_23F377B30();
}

void sub_23F510640()
{
  sub_23F377218();
}

uint64_t sub_23F51064C(uint64_t a1)
{
  return sub_23F50F148(a1);
}

uint64_t sub_23F510658()
{
  uint64_t v0;

  return v0;
}

void sub_23F510664()
{
  sub_23F3756E8();
}

uint64_t sub_23F510670(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F510678(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_23F5106A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F470FB8);
}

uint64_t sub_23F510684(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_23F5106A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F4712E0);
}

uint64_t sub_23F510690(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_23F5106A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F47137C);
}

uint64_t sub_23F51069C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_23F5106A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F47141C);
}

uint64_t sub_23F5106A8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((a4 & 1) == 0)
    goto LABEL_2;
  sub_23F61CC70();
  swift_unknownObjectRetain_n();
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    sub_23F3C08EC();
    v11 = MEMORY[0x24BEE4AF8];
  }
  v12 = *(_QWORD *)(v11 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v12 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    v10 = a5(a1, a2, a3, a4);
    goto LABEL_9;
  }
  v10 = swift_dynamicCastClass();
  if (!v10)
  {
    sub_23F3C08EC();
    v10 = MEMORY[0x24BEE4AF8];
  }
LABEL_9:
  sub_23F3C08EC();
  return v10;
}

void sub_23F51078C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *(_QWORD *)(a3 + 16);
  if (v15)
  {
    v11 = *(_QWORD *)(a2 + 16);
    swift_retain();
    sub_23F3B5EFC();
    swift_retain();
    v4 = 0;
    v5 = a2 + 40;
    v6 = MEMORY[0x24BEE4AF8];
    while (v11 != v4)
    {
      swift_getKeyPath();
      sub_23F384B00();
      sub_23F384A00();
      swift_getAtKeyPath();
      sub_23F38458C();
      sub_23F384364();
      swift_release();
      if (v13)
      {
        if ((sub_23F3849CC() & 1) == 0)
        {
          sub_23F3C0670();
          sub_23F376C6C();
          v6 = v9;
        }
        v7 = *(_QWORD *)(v6 + 16);
        if (v7 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_23F376C6C();
          v6 = v10;
        }
        *(_QWORD *)(v6 + 16) = v7 + 1;
        v8 = (_QWORD *)(v6 + 24 * v7);
        v8[4] = v12;
        v8[5] = v13;
        v8[6] = v14;
      }
      ++v4;
      v5 += 16;
      if (v15 == v4)
      {
        swift_release();
        swift_release();
        swift_release();
        return;
      }
    }
    __break(1u);
  }
}

void sub_23F510924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[2];
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(unint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;

  sub_23F362C98();
  sub_23F40B498();
  v2 = sub_23F618FEC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B95C();
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  v51 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v61 = sub_23F61AF60();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F517024(v9, v44[0]);
  MEMORY[0x24BDAC7A8](v10);
  v60 = (char *)v44 - v12;
  v62 = (_QWORD *)MEMORY[0x24BEE4B00];
  v13 = *(_QWORD *)(v0 + 16);
  if (v13)
  {
    v44[0] = v0;
    v44[1] = v1;
    v14 = *(unsigned __int8 *)(v11 + 80);
    v15 = (v14 + 32) & ~v14;
    v16 = v0 + v15;
    v17 = *(_QWORD *)(v11 + 72);
    v53 = v15;
    v46 = v14 | 7;
    v47 = v17 + v15;
    v18 = (_QWORD *)MEMORY[0x24BEE4B00];
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v54 = v11;
    v55 = v19;
    v45 = xmmword_23F61E7E0;
    v49 = v3;
    v50 = v2;
    v48 = v5;
    v20 = v51;
    while (1)
    {
      v59 = v13;
      v55(v60, v16, v61);
      sub_23F61AF48();
      sub_23F618FE0();
      v21 = v3;
      v22 = *(void (**)(char *, uint64_t))(v3 + 8);
      v23 = v2;
      v22(v5, v2);
      sub_23F517278();
      v26 = v25;
      v27 = v18[2];
      v28 = (v24 & 1) == 0;
      if (__OFADD__(v27, v28))
        break;
      v29 = v24;
      if (v18[3] < v27 + v28)
      {
        sub_23F5143BC();
        v18 = v62;
        sub_23F517278();
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_21;
        v26 = v30;
      }
      if ((v29 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v57 + 8))(v20, v58);
        v18 = v62;
        v32 = v62[7];
        v33 = *(void (**)(uint64_t, char *, uint64_t))(v54 + 32);
        v33(v56, v60, v61);
        v34 = *(_QWORD *)(v32 + 8 * v26);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v32 + 8 * v26) = v34;
        v52 = (void (*)(unint64_t, uint64_t, uint64_t))v33;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F51717C();
          sub_23F377364();
          v34 = v42;
          *(_QWORD *)(v32 + 8 * v26) = v42;
        }
        v36 = v59;
        v37 = *(_QWORD *)(v34 + 16);
        if (v37 >= *(_QWORD *)(v34 + 24) >> 1)
        {
          sub_23F377364();
          v34 = v43;
          *(_QWORD *)(v32 + 8 * v26) = v43;
        }
        *(_QWORD *)(v34 + 16) = v37 + 1;
        v20 = v51;
        v52(v34 + v53 + v37 * v17, v56, v61);
        v3 = v49;
        v2 = v50;
        v5 = v48;
      }
      else
      {
        sub_23F35D2E8(&qword_256E6FC38);
        v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = v45;
        (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v38 + v53, v60, v61);
        v18[(v26 >> 6) + 8] |= 1 << v26;
        (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v18[6] + *(_QWORD *)(v57 + 72) * v26, v20, v58);
        *(_QWORD *)(v18[7] + 8 * v26) = v38;
        v39 = v18[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_20;
        v18[2] = v41;
        v2 = v23;
        v3 = v21;
        v36 = v59;
      }
      v16 += v17;
      v13 = v36 - 1;
      if (!v13)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    sub_23F61CC94();
    __break(1u);
  }
  else
  {
    sub_23F362984();
LABEL_18:
    sub_23F362870();
  }
}

void sub_23F510CB4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v4;
  char v5;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v4 = sub_23F61C754();
    if ((v5 & 1) != 0)
      v4 = a3;
    if (a3 >> 14 >= v4 >> 14)
    {
      sub_23F61C76C();
      sub_23F517094();
      sub_23F517258();
      sub_23F383488();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_23F510D3C(uint64_t a1, uint64_t a2)
{
  return sub_23F510E88(a1, a2, sub_23F5BCFD0);
}

uint64_t sub_23F510D48(uint64_t a1, uint64_t a2)
{
  return sub_23F510E14(a1, a2, sub_23F5BCFD0, (void (*)(_QWORD))MEMORY[0x24BE52DE0]);
}

void sub_23F510D5C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    v6 = sub_23F61C250();
    if ((v7 & 1) != 0)
      v6 = v5;
    if (4 * v3 >= v6 >> 14)
    {
      sub_23F61C34C();
      sub_23F517094();
      sub_23F517258();
      sub_23F383488();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_23F510E00(uint64_t a1, uint64_t a2)
{
  return sub_23F510E14(a1, a2, sub_23F5BCFD0, (void (*)(_QWORD))MEMORY[0x24BE555E0]);
}

uint64_t sub_23F510E14(uint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t, _QWORD, uint64_t), void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  result = sub_23F516F20(result, a2, a3);
  if ((v7 & 1) != 0)
    v8 = v5;
  else
    v8 = result;
  if (v5 < v8)
    goto LABEL_9;
  if ((v8 & 0x8000000000000000) == 0)
  {
    a4(0);
    sub_23F383EB8();
    return v4;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_23F510E88(uint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t, _QWORD, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  result = sub_23F516F20(result, a2, a3);
  if ((v5 & 1) != 0)
    v6 = v4;
  else
    v6 = result;
  if (v4 < v6)
    goto LABEL_9;
  if ((v6 & 0x8000000000000000) == 0)
    return v3;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t PromptGrammar.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (!v2)
    return 0;
  swift_bridgeObjectRetain_n();
  v3 = MEMORY[0x24BEE4AF8];
  v4 = (uint64_t *)(v1 + 56);
  while (1)
  {
    v6 = *(v4 - 3);
    v5 = *(v4 - 2);
    v7 = *(v4 - 1);
    if ((v7 & 0x2000000000000000) != 0)
      break;
    sub_23F384B00();
    v8 = v5;
LABEL_17:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F51717C();
      sub_23F376C88();
      v3 = v29;
    }
    v27 = *(_QWORD *)(v3 + 16);
    if (v27 >= *(_QWORD *)(v3 + 24) >> 1)
    {
      sub_23F376C88();
      v3 = v30;
    }
    v4 += 4;
    *(_QWORD *)(v3 + 16) = v27 + 1;
    v28 = v3 + 16 * v27;
    *(_QWORD *)(v28 + 32) = v6;
    *(_QWORD *)(v28 + 40) = v8;
    if (!--v2)
    {
      swift_bridgeObjectRelease_n();
      sub_23F35D2E8(&qword_256E70580);
      sub_23F3B0CC8(&qword_256E70588, &qword_256E70580);
      v32 = sub_23F61C088();
      swift_bridgeObjectRelease();
      return v32;
    }
  }
  v34 = v3;
  v9 = *v4;
  sub_23F35D2E8(&qword_256E70310);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 48) = v7 & 0xDFFFFFFFFFFFFFFFLL;
  v11 = *(_QWORD *)(v9 + 16);
  v12 = sub_23F517204();
  sub_23F3C8438(v12, v13, v14);
  sub_23F384B00();
  sub_23F3D9D3C();
  sub_23F383E5C();
  if (!v11)
  {
    if (!*(_QWORD *)(v9 + 16))
    {
LABEL_16:
      sub_23F3837B0();
      sub_23F3C4078(inited);
      swift_bridgeObjectRelease();
      sub_23F35D2E8(&qword_256E70580);
      sub_23F3B0CC8(&qword_256E70588, &qword_256E70580);
      v22 = sub_23F61C088();
      v8 = v23;
      swift_bridgeObjectRelease();
      v24 = sub_23F517204();
      sub_23F3C8470(v24, v25, v26);
      v6 = v22;
      v3 = v34;
      goto LABEL_17;
    }
LABEL_7:
    sub_23F416198();
    if (v15 < v11)
    {
      __break(1u);
LABEL_28:
      __break(1u);
    }
    sub_23F416170();
    v18 = v18 || v16 >= v17;
    if (!v18)
      goto LABEL_30;
    swift_arrayInitWithCopy();
    if (v11)
    {
      v19 = *(_QWORD *)(inited + 16);
      v20 = __OFADD__(v19, v11);
      v21 = v19 + v11;
      if (v20)
        goto LABEL_28;
      *(_QWORD *)(inited + 16) = v21;
    }
    goto LABEL_16;
  }
  sub_23F376C6C();
  if (*(_QWORD *)(v9 + 16))
  {
    inited = v31;
    goto LABEL_7;
  }
  __break(1u);
LABEL_30:
  sub_23F416180();
  result = sub_23F416158();
  __break(1u);
  return result;
}

void static PromptGrammarGenerationMode.deviceConfiguration()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20[5];

  sub_23F362ABC();
  v1 = v0;
  v2 = sub_23F619E98();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  v6 = v5 - v4;
  v7 = type metadata accessor for FullPlannerPreferences();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F38F964();
  v11 = v10 - v9;
  if (qword_256E6EE90 != -1)
    swift_once();
  v12 = sub_23F361498(v7, (uint64_t)qword_256E7FE90);
  swift_beginAccess();
  sub_23F3C050C(v12, v11, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F617C48();
  v14 = v20[0];
  v13 = v20[1];
  sub_23F3663AC(v11, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F383E5C();
  v15 = sub_23F61CAB4();
  sub_23F3837B0();
  if (!v15)
  {
    v16 = 0;
    goto LABEL_7;
  }
  if (v15 == 1)
  {
    v16 = 1;
LABEL_7:
    sub_23F3837B0();
    goto LABEL_11;
  }
  sub_23F619088();
  sub_23F383E5C();
  v17 = sub_23F619E8C();
  v18 = sub_23F61C628();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20[0] = swift_slowAlloc();
    *(_DWORD *)v19 = 136315394;
    sub_23F383E5C();
    sub_23F37AE00(v14, v13, v20);
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2080;
    sub_23F37AE00(0x696C43796C6C7566, 0xEB00000000746E65, v20);
    sub_23F61C790();
    _os_log_impl(&dword_23F35A000, v17, v18, "Unexpected grammar generation mode case '%s'. Defaulting to '%s'.", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    sub_23F366530();
  }

  swift_bridgeObjectRelease_n();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  v16 = 0;
LABEL_11:
  *v1 = v16;
  sub_23F362948();
}

void static StandaloneGrammarGenerator.defaultGenerator(tokenizer:renderer:toolbox:rootRuleIdentifier:quotableStringIdentifier:staticTools:baseGrammar:printBuiltinSupported:progressiveDisclosureEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,char a24)
{
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  uint64_t v40;
  _QWORD __src[28];
  __int128 v42;
  __int128 v43;
  _UNKNOWN **v44;
  __int128 v45;
  ValueMetadata *v46;
  _UNKNOWN **v47;
  __int128 v48;
  ValueMetadata *v49;
  _UNKNOWN **v50;
  __int128 v51;
  ValueMetadata *v52;
  _UNKNOWN **v53;
  _BYTE v54[40];
  _OWORD v55[12];
  char v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[10];
  _BYTE v60[56];
  uint64_t v61;

  sub_23F362C98();
  if (a22)
  {
    v32 = v30;
    v33 = v27;
    v34 = v26;
    v35 = v25;
    v36 = v31;
    v40 = v28;
    v61 = v29;
    sub_23F382FC4(v24, (uint64_t)v60);
    v60[40] = 1;
    sub_23F382FC4((uint64_t)v35 + 40, (uint64_t)v59);
    v59[8] = &unk_250FD5670;
    v59[9] = &off_250FD5688;
    v59[5] = v32;
    bzero(v55, 0xE0uLL);
    sub_23F384B00();
    sub_23F383EB0();
    if ((a23 & 1) != 0)
    {
      sub_23F3625D8((uint64_t)v55, &qword_256E78F00);
      sub_23F38F144(v35, v55);
      v56 = a24 & 1;
      v57 = v34;
      v58 = v33;
      sub_23F362CDC();
    }
    sub_23F382FC4((uint64_t)v35 + 40, (uint64_t)v54);
    v52 = &type metadata for QuotableStringGrammarConverter;
    v53 = &protocol witness table for QuotableStringGrammarConverter;
    *(_QWORD *)&v51 = sub_23F36682C();
    sub_23F5136E8((uint64_t)v60, v51 + 16);
    v49 = &type metadata for ToolRendererGrammarGenerator;
    v50 = &off_256E78F38;
    *(_QWORD *)&v48 = sub_23F36682C();
    sub_23F513750((uint64_t)v59, v48 + 16);
    v46 = &type metadata for AssistantSchemaGrammarGenerator;
    v47 = &protocol witness table for AssistantSchemaGrammarGenerator;
    *(_QWORD *)&v45 = sub_23F36682C();
    sub_23F5137A8((uint64_t)v54, v45 + 16);
    sub_23F5137E4((uint64_t)v55, (uint64_t)__src);
    v37 = __src[3];
    if (__src[3])
    {
      *((_QWORD *)&v43 + 1) = &type metadata for PrintBuiltinGrammarGenerator;
      v44 = &protocol witness table for PrintBuiltinGrammarGenerator;
      *(_QWORD *)&v42 = sub_23F36682C();
      memcpy((void *)(v42 + 16), __src, 0xE0uLL);
      sub_23F51382C((uint64_t)v54);
      sub_23F3625D8((uint64_t)v55, &qword_256E78F00);
      sub_23F513860((uint64_t)v59);
      sub_23F51388C((uint64_t)v60);
    }
    else
    {
      sub_23F51382C((uint64_t)v54);
      sub_23F3625D8((uint64_t)v55, &qword_256E78F00);
      sub_23F513860((uint64_t)v59);
      sub_23F51388C((uint64_t)v60);
      sub_23F3625D8((uint64_t)__src, &qword_256E78F00);
      v42 = 0u;
      v43 = 0u;
      v44 = 0;
    }
    *(_QWORD *)v36 = v34;
    *(_QWORD *)(v36 + 8) = v33;
    *(_QWORD *)(v36 + 16) = a21;
    *(_QWORD *)(v36 + 24) = a22;
    *(_QWORD *)(v36 + 32) = 0;
    *(_QWORD *)(v36 + 40) = 0;
    *(_QWORD *)(v36 + 48) = v40;
    *(_QWORD *)(v36 + 56) = v61;
    sub_23F362678(&v51, v36 + 64);
    sub_23F362678(&v48, v36 + 104);
    sub_23F362678(&v45, v36 + 144);
    v38 = (_OWORD *)(v36 + 184);
    if (v37)
    {
      sub_23F362678(&v42, (uint64_t)v38);
    }
    else
    {
      v39 = v43;
      *v38 = v42;
      *(_OWORD *)(v36 + 200) = v39;
      *(_QWORD *)(v36 + 216) = v44;
    }
    sub_23F362CDC();
    sub_23F383738();
  }
  else
  {
    sub_23F513688();
    sub_23F362D64();
    sub_23F517284();
  }
  sub_23F362870();
}

void static StandaloneGrammarGenerator.assistantSchemasForTools(tools:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  int v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  _QWORD v63[2];
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  char *v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  sub_23F362ABC();
  v83 = v0;
  v84 = v1;
  v3 = v2;
  sub_23F35D2E8(&qword_256E78F08);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v7 = v6 - v5;
  v8 = sub_23F61BCE0();
  v82 = *(_QWORD *)(v8 - 8);
  sub_23F362850();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v79 = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v75 = (char *)v63 - v12;
  sub_23F39C56C();
  v13 = sub_23F61B4F4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v63 - v18;
  v20 = sub_23F61B5D8();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v72 = (char *)v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = *(_QWORD *)(v3 + 16);
  if (v69)
  {
    sub_23F383EB8();
    v66 = v3 + v23;
    v78 = *MEMORY[0x24BEB8E98];
    v24 = *(_QWORD *)(v21 + 72);
    v64 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
    v65 = v24;
    v63[1] = v3;
    sub_23F617BA0();
    v25 = 0;
    v73 = MEMORY[0x24BEE4AF8];
    v74 = v19;
    v77 = v7;
    v67 = v21;
    v68 = v20;
    while (1)
    {
      v71 = v25;
      v64(v72, v66 + v65 * v25, v20);
      v26 = *(_QWORD *)(sub_23F61B554() + 16);
      if (v26)
      {
        sub_23F383EB8();
        v70 = v27;
        v29 = (char *)(v27 + v28);
        v30 = *(_QWORD *)(v14 + 72);
        v80 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        v81 = MEMORY[0x24BEE4AF8];
        v76 = v30;
        do
        {
          v31 = v80;
          v80(v19, v29, v13);
          v31(v17, v19, v13);
          v32 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v17, v13);
          if (v32 == v78)
          {
            (*(void (**)(char *, uint64_t))(v14 + 96))(v17, v13);
            (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v7, v17, v8);
            sub_23F36196C(v7, 0, 1, v8);
            (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
          }
          else
          {
            sub_23F36196C(v7, 1, 1, v8);
            v33 = *(void (**)(char *, uint64_t))(v14 + 8);
            v33(v17, v13);
            v33(v19, v13);
          }
          if (sub_23F36195C(v7, 1, v8) == 1)
          {
            sub_23F3625D8(v7, &qword_256E78F08);
          }
          else
          {
            v34 = v17;
            v35 = v14;
            v36 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 32);
            v37 = v75;
            v36(v75, v7, v8);
            v38 = v8;
            v36(v79, (uint64_t)v37, v8);
            v39 = v81;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23F3C0670();
              sub_23F377BB8();
              v39 = v43;
            }
            v40 = *(_QWORD *)(v39 + 16);
            if (v40 >= *(_QWORD *)(v39 + 24) >> 1)
            {
              sub_23F377BB8();
              v39 = v44;
            }
            *(_QWORD *)(v39 + 16) = v40 + 1;
            sub_23F383EB8();
            v81 = v39;
            v36((char *)(v39 + v41 + *(_QWORD *)(v42 + 72) * v40), (uint64_t)v79, v38);
            v14 = v35;
            v17 = v34;
            v8 = v38;
            v19 = v74;
            v30 = v76;
            v7 = v77;
          }
          v29 += v30;
          --v26;
        }
        while (v26);
        swift_bridgeObjectRelease();
        v45 = v81;
      }
      else
      {
        swift_bridgeObjectRelease();
        v45 = MEMORY[0x24BEE4AF8];
      }
      v20 = v68;
      (*(void (**)(char *, uint64_t))(v67 + 8))(v72, v68);
      v46 = v45;
      v47 = *(_QWORD *)(v45 + 16);
      v48 = *(_QWORD *)(v73 + 16);
      if (__OFADD__(v48, v47))
        break;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v50 = v73;
      if (!isUniquelyReferenced_nonNull_native || v48 + v47 > *(_QWORD *)(v73 + 24) >> 1)
      {
        sub_23F377BB8();
        v50 = v51;
      }
      v7 = v77;
      v52 = *(_QWORD *)(v46 + 16);
      v73 = v50;
      if (v52)
      {
        sub_23F416198();
        if (v55 < v47)
          goto LABEL_38;
        v56 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
        v57 = *(_QWORD *)(v82 + 72);
        v58 = v53 + v56 + v57 * v54;
        if (v46 + v56 < v58 + v57 * v47 && v58 < v46 + v56 + v57 * v47)
          goto LABEL_40;
        swift_arrayInitWithCopy();
        if (v47)
        {
          v60 = *(_QWORD *)(v73 + 16);
          v61 = __OFADD__(v60, v47);
          v62 = v60 + v47;
          if (v61)
            goto LABEL_39;
          *(_QWORD *)(v73 + 16) = v62;
        }
      }
      else if (v47)
      {
        goto LABEL_37;
      }
      v25 = v71 + 1;
      sub_23F3837B0();
      if (v25 == v69)
      {
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    sub_23F416180();
    sub_23F416158();
    __break(1u);
  }
  else
  {
LABEL_35:
    sub_23F36925C();
  }
}

void StandaloneGrammarGenerator.generateGrammar(quotableStrings:tools:schemas:plannerGrammar:renderingState:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  _QWORD *v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _DWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  BOOL v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  _QWORD *v127;
  _QWORD *v128;
  _QWORD *v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t *v143;
  uint64_t v144;
  os_log_type_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148[23];
  __int128 v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;

  sub_23F362C98();
  v2 = v0;
  v143 = v4;
  v144 = v3;
  v6 = v5;
  v140 = v7;
  v9 = v8;
  v11 = v10;
  v157 = *MEMORY[0x24BDAC8D0];
  v12 = sub_23F619E98();
  v135 = *(_QWORD *)(v12 - 8);
  v136 = v12;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v139 = v14;
  v137 = *v11;
  v15 = *v6;
  v16 = v6[1];
  v18 = v6[2];
  v17 = v6[3];
  sub_23F35D2E8(&qword_256E78F10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E980;
  *(_QWORD *)(inited + 32) = v15;
  *(_QWORD *)(inited + 40) = v16;
  *(_QWORD *)(inited + 48) = v18;
  *(_QWORD *)(inited + 56) = v17;
  v20 = v2[16];
  v141 = v2[17];
  sub_23F35EA9C(v2 + 13, v20);
  v138 = v9;
  v146 = v9;
  v21 = v2[1];
  *(_QWORD *)&v149 = *v2;
  *((_QWORD *)&v149 + 1) = v21;
  sub_23F39BA5C(v15, v16);
  sub_23F617BA0();
  sub_23F61C280();
  (*(void (**)(uint64_t *__return_ptr, uint64_t *, _QWORD, _QWORD, uint64_t, uint64_t))(v141 + 16))(&v152, &v146, v149, *((_QWORD *)&v149 + 1), v144, v20);
  if (v1)
  {
    sub_23F38432C();
    sub_23F39BB1C(*(_QWORD *)(inited + 32), *(_QWORD *)(inited + 40));
    *(_QWORD *)(inited + 16) = 0;
    swift_setDeallocating();
    sub_23F513648(&qword_256E78FC0);
LABEL_75:
    sub_23F362870();
    return;
  }
  v134 = v2;
  sub_23F38432C();
  v23 = v152;
  v22 = v153;
  v25 = v154;
  v24 = v155;
  *(_QWORD *)(inited + 64) = v152;
  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(inited + 80) = v25;
  *(_QWORD *)(inited + 88) = v24;
  v26 = *(_QWORD *)(inited + 40);
  v27 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v26)
  {
    v28 = *(_QWORD *)(inited + 32);
    v30 = *(uint64_t **)(inited + 48);
    v29 = *(_QWORD **)(inited + 56);
    swift_retain();
    sub_23F383738();
    sub_23F383EB0();
    sub_23F516FB8();
    v27 = v31;
    v32 = v31[2];
    v33 = v32 + 1;
    if (v32 >= v31[3] >> 1)
    {
LABEL_80:
      sub_23F377598();
      v27 = v125;
    }
    v34 = v134;
    v27[2] = v33;
    v35 = &v27[4 * v32];
    v35[4] = v28;
    v35[5] = v26;
    v35[6] = v30;
    v35[7] = v29;
    v23 = *(_QWORD *)(inited + 64);
    v22 = *(_QWORD *)(inited + 72);
    v25 = *(_QWORD *)(inited + 80);
    if (v22)
      goto LABEL_6;
  }
  else
  {
    v34 = v134;
    if (v22)
    {
LABEL_6:
      v36 = *(_QWORD *)(inited + 88);
      swift_retain();
      sub_23F383EB0();
      sub_23F383738();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v37 = v27;
      }
      else
      {
        sub_23F516FB8();
        v37 = v126;
      }
      v38 = v37[2];
      if (v38 >= v37[3] >> 1)
      {
        sub_23F516FB8();
        v37 = v127;
      }
      v37[2] = v38 + 1;
      v142 = v37;
      v39 = &v37[4 * v38];
      v39[4] = v23;
      v39[5] = v22;
      v39[6] = v25;
      v39[7] = v36;
      goto LABEL_13;
    }
  }
  v142 = v27;
LABEL_13:
  swift_setDeallocating();
  sub_23F513648(&qword_256E78FC0);
  if (*(_QWORD *)(v140 + 16))
  {
    sub_23F35EA9C(v34 + 18, v34[21]);
    v146 = v140;
    v40 = v34[1];
    *(_QWORD *)&v149 = *v34;
    *((_QWORD *)&v149 + 1) = v40;
    sub_23F617BA0();
    sub_23F61C280();
    sub_23F5170FC((uint64_t)&v146, v149, *((uint64_t *)&v149 + 1), v144);
    if (v27)
    {
      sub_23F384120();
LABEL_32:
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    sub_23F384120();
    v42 = v152;
    v41 = v153;
    v43 = v154;
    v44 = v155;
    swift_retain();
    sub_23F384A00();
    sub_23F383738();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F516FB8();
      v142 = v128;
    }
    v45 = v142;
    v46 = v142[2];
    if (v46 >= v142[3] >> 1)
    {
      sub_23F516FB8();
      v45 = v129;
    }
    v45[2] = v46 + 1;
    v142 = v45;
    v47 = &v45[4 * v46];
    v47[4] = v42;
    v47[5] = v41;
    v47[6] = v43;
    v47[7] = v44;
    sub_23F38458C();
    swift_release();
    sub_23F362984();
  }
  v48 = v139;
  v49 = v144;
  v50 = (__int128 *)(v34 + 23);
  if (v34[26])
  {
    sub_23F382FC4((uint64_t)v50, (uint64_t)&v149);
  }
  else
  {
    v51 = *(_OWORD *)(v34 + 25);
    v149 = *v50;
    v150 = v51;
    v151 = v34[27];
  }
  if (*((_QWORD *)&v150 + 1))
  {
    sub_23F362678(&v149, (uint64_t)&v152);
    v52 = v155;
    v53 = v156;
    sub_23F35EA9C(&v152, v155);
    v54 = v34[1];
    v146 = *v34;
    v147 = v54;
    v148[0] = v138;
    sub_23F617BA0();
    sub_23F61C280();
    v27 = 0;
    (*(void (**)(__int128 *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 16))(&v149, v148, v146, v147, v144, v52, v53);
    swift_bridgeObjectRelease();
    v55 = v149;
    v56 = v150;
    swift_retain();
    sub_23F384B00();
    sub_23F383738();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F516FB8();
      v142 = v130;
    }
    v57 = v142;
    v58 = v142[2];
    if (v58 >= v142[3] >> 1)
    {
      sub_23F516FB8();
      v57 = v131;
    }
    v57[2] = v58 + 1;
    v142 = v57;
    v59 = &v57[4 * v58];
    *((_OWORD *)v59 + 2) = v55;
    *((_OWORD *)v59 + 3) = v56;
    sub_23F384364();
    swift_release();
    sub_23F362984();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v152);
    v48 = v139;
    v49 = v144;
  }
  if (v137)
  {
    sub_23F35EA9C(v34 + 8, v34[11]);
    *(_QWORD *)&v149 = v137;
    sub_23F5170FC((uint64_t)&v149, v34[6], v34[7], v49);
    if (v27)
      goto LABEL_32;
    v60 = v152;
    v61 = v153;
    v63 = v154;
    v64 = v155;
  }
  else
  {
    v60 = v34[6];
    v61 = v34[7];
    v62 = sub_23F36682C();
    strcpy((char *)(v62 + 16), "quoted_string");
    *(_WORD *)(v62 + 30) = -4864;
    v63 = v62 | 0x4000000000000000;
    sub_23F384324();
    v64 = MEMORY[0x24BEE4AF8];
  }
  sub_23F619088();
  swift_retain_n();
  sub_23F3E0254();
  sub_23F516F58();
  v65 = sub_23F619E8C();
  v66 = sub_23F61C61C();
  v137 = v61;
  v140 = v64;
  v132 = v63;
  v133 = v60;
  if (os_log_type_enabled(v65, v66))
  {
    v145 = v66;
    v67 = (_DWORD *)sub_23F366668();
    v152 = sub_23F366668();
    *v67 = 136315138;
    sub_23F35D2E8(&qword_256E70310);
    v68 = swift_initStackObject();
    *(_OWORD *)(v68 + 16) = xmmword_23F61E7E0;
    *(_QWORD *)(v68 + 32) = v60;
    *(_QWORD *)(v68 + 40) = v61;
    *(_QWORD *)(v68 + 48) = v63;
    *(_QWORD *)&v149 = v68;
    sub_23F384324();
    swift_retain();
    sub_23F617BA0();
    sub_23F385E18();
    sub_23F3C4078(v149);
    v70 = v69;
    sub_23F362984();
    *(_QWORD *)&v149 = v70;
    sub_23F35D2E8(&qword_256E70580);
    sub_23F3B0CC8(&qword_256E70588, &qword_256E70580);
    v71 = sub_23F61C088();
    v73 = v72;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v71, v73, &v152);
    *(_QWORD *)&v149 = v74;
    sub_23F61C790();
    sub_23F384A80();
    sub_23F3D9B70();
    sub_23F384A80();
    sub_23F384120();
    sub_23F517220(&dword_23F35A000, v65, v145, "Generated grammar for quotable content: \n%s");
    swift_arrayDestroy();
    sub_23F366530();
  }

  sub_23F384A80();
  sub_23F3D9B70();
  sub_23F384A80();
  (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v48, v136);
  v139 = *v134;
  v75 = v142[2];
  v136 = v134[1];
  if (v75)
  {
    v152 = MEMORY[0x24BEE4AF8];
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F37B92C();
    v76 = v152;
    v77 = v142 + 5;
    do
    {
      v79 = *(v77 - 1);
      v78 = *v77;
      v80 = sub_23F36682C();
      *(_QWORD *)(v80 + 16) = v79;
      *(_QWORD *)(v80 + 24) = v78;
      v152 = v76;
      v82 = *(_QWORD *)(v76 + 16);
      v81 = *(_QWORD *)(v76 + 24);
      sub_23F383738();
      if (v82 >= v81 >> 1)
      {
        sub_23F37B92C();
        v76 = v152;
      }
      v77 += 4;
      *(_QWORD *)(v76 + 16) = v82 + 1;
      *(_QWORD *)(v76 + 8 * v82 + 32) = v80 | 0x4000000000000000;
      --v75;
    }
    while (v75);
    v83 = v142;
    sub_23F362984();
  }
  else
  {
    sub_23F617BA0();
    v76 = MEMORY[0x24BEE4AF8];
    v83 = v142;
  }
  v138 = sub_23F36682C();
  *(_QWORD *)(v138 + 16) = v76;
  v84 = v83[2];
  v30 = v143;
  if (!v84)
  {
LABEL_74:
    swift_bridgeObjectRelease();
    sub_23F35D2E8(&qword_256E70310);
    v107 = swift_initStackObject();
    *(_OWORD *)(v107 + 16) = xmmword_23F61E7E0;
    *(_QWORD *)(v107 + 32) = v139;
    *(_QWORD *)(v107 + 40) = v136;
    *(_QWORD *)(v107 + 48) = v138 | 0x8000000000000000;
    v152 = v107;
    swift_retain();
    sub_23F383E5C();
    sub_23F384324();
    sub_23F385E18();
    sub_23F5159BC(v152);
    sub_23F51078C(v108, v109, v110);
    v112 = sub_23F510E88(1, v111, sub_23F5BCFD0);
    v114 = v113;
    v116 = v115;
    v118 = v117;
    sub_23F384324();
    swift_retain();
    v119 = sub_23F5106A8(v112, v114, v116, v118, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F470FB8);
    swift_release();
    swift_release();
    swift_release();
    sub_23F35D2E8(&qword_256E78F18);
    v120 = sub_23F36682C();
    *(_OWORD *)(v120 + 16) = xmmword_23F61EBC0;
    *(_QWORD *)(v120 + 32) = v139;
    *(_QWORD *)(v120 + 40) = v136;
    *(_QWORD *)(v120 + 48) = v138 | 0xA000000000000000;
    *(_QWORD *)(v120 + 56) = v119;
    *(_QWORD *)(v120 + 64) = v133;
    *(_QWORD *)(v120 + 72) = v137;
    *(_QWORD *)(v120 + 80) = v132 | 0x2000000000000000;
    *(_QWORD *)(v120 + 88) = v140;
    v121 = v134[2];
    v122 = v134[3];
    v123 = v134[4];
    v124 = v134[5];
    *(_QWORD *)(v120 + 96) = v121;
    *(_QWORD *)(v120 + 104) = v122;
    *(_QWORD *)(v120 + 112) = v123;
    *(_QWORD *)(v120 + 120) = v124;
    sub_23F3C8438(v121, v122, v123);
    swift_bridgeObjectRelease();
    swift_release();
    sub_23F38432C();
    *v30 = v120;
    goto LABEL_75;
  }
  v85 = (uint64_t *)(sub_23F617BA0() + 56);
  v33 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v144 = v84;
    v87 = *(v85 - 3);
    v86 = *(v85 - 2);
    v88 = *(v85 - 1);
    v89 = *v85;
    sub_23F35D2E8(&qword_256E70310);
    v32 = swift_initStackObject();
    *(_OWORD *)(v32 + 16) = xmmword_23F61E7E0;
    v29 = (_QWORD *)(v32 + 16);
    *(_QWORD *)(v32 + 32) = v87;
    *(_QWORD *)(v32 + 40) = v86;
    *(_QWORD *)(v32 + 48) = v88;
    v90 = *(_QWORD *)(v89 + 16);
    sub_23F383E5C();
    sub_23F482D50();
    sub_23F384A00();
    if (!v90)
    {
      v30 = v143;
      goto LABEL_48;
    }
    sub_23F376C6C();
    if (!*(_QWORD *)(v89 + 16))
      goto LABEL_84;
    v32 = v102;
    sub_23F416198();
    v30 = v143;
    if (v103 < v90)
      break;
    sub_23F416170();
    if (!v98 && v104 < v105)
      goto LABEL_85;
    v29 = (_QWORD *)(v32 + 16);
    swift_arrayInitWithCopy();
    if (__OFADD__(*(_QWORD *)(v32 + 16), v90))
      goto LABEL_83;
    *v29 = *(_QWORD *)(v32 + 16) + v90;
LABEL_48:
    sub_23F38458C();
    inited = *(_QWORD *)(v32 + 16);
    v28 = *(_QWORD *)(v33 + 16);
    v26 = v28 + inited;
    if (__OFADD__(v28, inited))
    {
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v92 = v33;
    if (!isUniquelyReferenced_nonNull_native || v26 > *(_QWORD *)(v33 + 24) >> 1)
    {
      sub_23F376C6C();
      v92 = v93;
    }
    if (*v29)
    {
      sub_23F416198();
      if (v94 < inited)
        goto LABEL_78;
      sub_23F416170();
      v98 = v98 || v95 >= v97;
      if (!v98)
        goto LABEL_85;
      v33 = v96;
      swift_arrayInitWithCopy();
      if (inited)
      {
        v99 = *(_QWORD *)(v33 + 16);
        v100 = __OFADD__(v99, inited);
        v101 = v99 + inited;
        if (v100)
          goto LABEL_79;
        *(_QWORD *)(v33 + 16) = v101;
      }
    }
    else
    {
      v33 = v92;
      if (inited)
        goto LABEL_77;
    }
    sub_23F384364();
    v85 += 4;
    --v84;
    if (v144 == 1)
    {
      sub_23F362984();
      goto LABEL_74;
    }
  }
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  sub_23F416180();
  sub_23F61CA9C();
  __break(1u);
}

uint64_t static HybridGrammarGenerator.defaultGenerator(tokenizer:baseGrammar:quotableStringIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;

  if (a3)
  {
    a6[9] = &type metadata for QuotableStringGrammarConverter;
    a6[10] = &protocol witness table for QuotableStringGrammarConverter;
    v12 = sub_23F36682C();
    a6[6] = v12;
    sub_23F382FC4(a1, v12 + 16);
    *(_BYTE *)(v12 + 56) = 1;
    *a6 = a2;
    a6[1] = a3;
    a6[2] = 0;
    a6[3] = 0;
    a6[4] = a4;
    a6[5] = a5;
    sub_23F362CDC();
    return sub_23F383738();
  }
  else
  {
    sub_23F404F4C();
    sub_23F362D64();
    return sub_23F517284();
  }
}

void HybridGrammarGenerator.generateGrammar(quotableStrings:renderingState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  _DWORD *v41;
  uint64_t inited;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59[5];

  sub_23F362C98();
  a19 = v22;
  a20 = v23;
  v24 = v20;
  v26 = v25;
  v28 = v27;
  v58 = v29;
  v30 = sub_23F619E98();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  sub_23F38F964();
  v34 = v33 - v32;
  v35 = v24[9];
  v36 = v24[10];
  sub_23F35EA9C(v24 + 6, v35);
  a10 = v28;
  (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 16))(v59, &a10, v24[4], v24[5], v26, v35, v36);
  if (!v21)
  {
    v56 = v30;
    v37 = v59[1];
    v57 = v59[0];
    v38 = v59[2];
    v39 = v59[3];
    sub_23F619088();
    swift_retain_n();
    sub_23F3E0254();
    sub_23F3E0254();
    v40 = sub_23F619E8C();
    v55 = sub_23F61C61C();
    if (os_log_type_enabled(v40, v55))
    {
      v54 = v40;
      v41 = (_DWORD *)sub_23F366668();
      v59[0] = sub_23F366668();
      *v41 = 136315138;
      sub_23F35D2E8(&qword_256E70310);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
      *(_QWORD *)(inited + 32) = v57;
      *(_QWORD *)(inited + 40) = v37;
      *(_QWORD *)(inited + 48) = v38;
      a10 = inited;
      sub_23F384B00();
      sub_23F3B5EFC();
      sub_23F3B1EA4();
      sub_23F385E18();
      sub_23F3C4078(a10);
      v44 = v43;
      sub_23F362984();
      a10 = v44;
      sub_23F35D2E8(&qword_256E70580);
      sub_23F3B0CC8(&qword_256E70588, &qword_256E70580);
      v45 = sub_23F61C088();
      v47 = v46;
      swift_bridgeObjectRelease();
      sub_23F37AE00(v45, v47, v59);
      a10 = v48;
      sub_23F61C790();
      sub_23F384A80();
      sub_23F3D9B70();
      sub_23F384A80();
      swift_bridgeObjectRelease();
      sub_23F517220(&dword_23F35A000, v54, v55, "Generated grammar for quotable content: \n%s");
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F384A80();
    sub_23F3D9B70();
    sub_23F384A80();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v34, v56);
    sub_23F35D2E8(&qword_256E78F18);
    v49 = sub_23F36682C();
    *(_OWORD *)(v49 + 16) = xmmword_23F61E980;
    v51 = *v24;
    v50 = v24[1];
    v52 = v24[2];
    v53 = v24[3];
    *(_QWORD *)(v49 + 32) = *v24;
    *(_QWORD *)(v49 + 40) = v50;
    *(_QWORD *)(v49 + 48) = v52;
    *(_QWORD *)(v49 + 56) = v53;
    *(_QWORD *)(v49 + 64) = v57;
    *(_QWORD *)(v49 + 72) = v37;
    *(_QWORD *)(v49 + 80) = v38 | 0x2000000000000000;
    *(_QWORD *)(v49 + 88) = v39;
    *v58 = v49;
    sub_23F3C8438(v51, v50, v52);
  }
  sub_23F362870();
}

IntelligenceFlowPlannerRuntime::PromptGrammar __swiftcall PromptGrammar.init(pieces:)(IntelligenceFlowPlannerRuntime::PromptGrammar pieces)
{
  IntelligenceFlowPlannerRuntime::PromptGrammar *v1;

  v1->grammarPieces._rawValue = pieces.grammarPieces._rawValue;
  return pieces;
}

uint64_t PromptGrammarGenerationMode.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x696C43796C6C7566;
}

double sub_23F512E3C@<D0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v5;
  uint64_t v6;

  sub_23F36FF50(*a1, &v5);
  v3 = v6;
  result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_QWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t static PromptGrammar.GrammarPiece.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v26[3];

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = *a2;
  v6 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  if ((v5 & 0x2000000000000000) != 0)
  {
    if ((v9 & 0x2000000000000000) != 0)
    {
      v15 = v3 == v7 && v2 == v6;
      if (v15 || (sub_23F516FFC() & 1) != 0)
      {
        v26[0] = v5 & 0xDFFFFFFFFFFFFFFFLL;
        sub_23F516D74();
        sub_23F516D38();
        sub_23F516D74();
        sub_23F516D38();
        static BNFGrammarRuleExpression.== infix(_:_:)((uint64_t)v26);
        if ((v22 & 1) != 0)
        {
          sub_23F3C5C38(v4, v8, v16, v17, v18, v19, v20, v21, v9 & 0xDFFFFFFFFFFFFFFFLL, v26[0], v26[1], v26[2]);
          v24 = v23;
          sub_23F516CDC();
          sub_23F516CF0();
          sub_23F516CF0();
          sub_23F516CDC();
          if ((v24 & 1) != 0)
          {
            v11 = 1;
            return v11 & 1;
          }
          goto LABEL_11;
        }
        sub_23F516CDC();
        sub_23F516CF0();
        sub_23F516CF0();
        v12 = v3;
        v13 = v2;
        v14 = v5;
LABEL_10:
        sub_23F3C8470(v12, v13, v14);
LABEL_11:
        v11 = 0;
        return v11 & 1;
      }
    }
LABEL_9:
    sub_23F516D74();
    sub_23F516D38();
    sub_23F516CDC();
    v12 = v7;
    v13 = v6;
    v14 = v9;
    goto LABEL_10;
  }
  if ((v9 & 0x2000000000000000) != 0)
    goto LABEL_9;
  if (v3 == v7 && v2 == v6)
    v11 = 1;
  else
    v11 = sub_23F516FFC();
  sub_23F516D74();
  sub_23F516D38();
  sub_23F516CDC();
  sub_23F516CF0();
  return v11 & 1;
}

uint64_t PromptGrammar.grammarPieces.getter()
{
  return sub_23F617BA0();
}

void PromptGrammar.grammarPieces.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  sub_23F362928();
}

uint64_t (*PromptGrammar.grammarPieces.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t static PromptGrammar.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_23F3C5714(*a1, *a2);
}

IntelligenceFlowPlannerRuntime::PromptGrammarGenerationMode_optional __swiftcall PromptGrammarGenerationMode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  IntelligenceFlowPlannerRuntime::PromptGrammarGenerationMode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23F61CAB4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void sub_23F51306C(char *a1, char *a2)
{
  sub_23F4894C8(*a1, *a2);
}

void sub_23F513078()
{
  sub_23F3F6174();
}

uint64_t sub_23F513080()
{
  return sub_23F4E6C40();
}

void sub_23F513088()
{
  sub_23F3F63D4();
}

IntelligenceFlowPlannerRuntime::PromptGrammarGenerationMode_optional sub_23F513090(Swift::String *a1)
{
  return PromptGrammarGenerationMode.init(rawValue:)(*a1);
}

void sub_23F51309C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = PromptGrammarGenerationMode.rawValue.getter();
  a1[1] = v2;
  sub_23F362928();
}

uint64_t HybridGrammarGenerator.init(baseGrammar:quotableStringIdentifier:generator:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X8>)
{
  __int128 v5;

  v5 = a1[1];
  *(_OWORD *)a5 = *a1;
  *(_OWORD *)(a5 + 16) = v5;
  *(_QWORD *)(a5 + 32) = a2;
  *(_QWORD *)(a5 + 40) = a3;
  return sub_23F362678(a4, a5 + 48);
}

void sub_23F5130D4()
{
  sub_23F40B498();
  sub_23F61CD3C();
  sub_23F362928();
}

uint64_t sub_23F5130F4()
{
  sub_23F516A04();
  return sub_23F61CCAC();
}

uint64_t sub_23F51311C()
{
  sub_23F516A04();
  return sub_23F61CCA0();
}

unint64_t sub_23F513144()
{
  return 0xD000000000000012;
}

uint64_t sub_23F513160()
{
  sub_23F516974();
  return sub_23F61CCAC();
}

uint64_t sub_23F513188()
{
  sub_23F516974();
  return sub_23F61CCA0();
}

unint64_t sub_23F5131B0()
{
  return 0xD000000000000016;
}

uint64_t sub_23F5131CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v16[3] = a4;
  sub_23F36F7F4((void (*)(uint64_t *__return_ptr, uint64_t))sub_23F5169B0, (uint64_t)v16, a1);
  v10 = v9;
  v11 = sub_23F35EA9C((_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 64));
  sub_23F413FBC(a2, a3, v10, *v11, &v17);
  result = swift_bridgeObjectRelease();
  v13 = *((_QWORD *)&v17 + 1);
  if (*((_QWORD *)&v17 + 1))
  {
    v15 = v18;
    v14 = v19;
    *a5 = v17;
    a5[1] = v13;
    a5[2] = v15;
    a5[3] = v14;
  }
  else
  {
    sub_23F5169C8();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

void sub_23F51329C(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;

  v50 = a4;
  v7 = type metadata accessor for RenderableTool();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2[3];
  v11 = a2[4];
  sub_23F35EA9C(a2, v10);
  v12 = sub_23F61B5D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, a1, v12);
  v13 = *MEMORY[0x24BE57550];
  v14 = sub_23F618BB4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v9, v13, v14);
  swift_storeEnumTagMultiPayload();
  sub_23F510924();
  sub_23F5156E0(v15, v16, v17, v18, v19, v20, v21, v22, v39[0], v39[1], v40, v41, v42, v43, v44, v45, v46, v47, v48,
    v49);
  v24 = v23;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(&v40, v9, v24, a3, v10, v11);
  swift_release();
  sub_23F3663AC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
  v25 = v40;
  v26 = v41;
  v28 = v42;
  v27 = v43;
  v29 = v44;
  v30 = v45;
  v31 = v46;
  v32 = v47;
  v33 = v48;
  v39[0] = v49;
  sub_23F39B9D8(v40, v41, v42, v43, v44, v45, v46, v47, v48);
  sub_23F39BA98(v25, v26, v28, v27, v29, v30, v31, v32, v33);
  swift_bridgeObjectRelease();
  v34 = 0;
  v35 = 0;
  v36 = 0;
  v37 = 0;
  if ((v33 & 1) == 0)
  {
    sub_23F39BA5C(v29, v30);
    sub_23F39BA98(v25, v26, v28, v27, v29, v30, v31, v32, 0);
    v34 = v29;
    v35 = v30;
    v36 = v31;
    v37 = v32;
  }
  v38 = v50;
  *v50 = v34;
  v38[1] = v35;
  v38[2] = v36;
  v38[3] = v37;
}

uint64_t sub_23F5134F0()
{
  sub_23F516B50();
  return sub_23F61CCAC();
}

uint64_t sub_23F513518()
{
  sub_23F516B50();
  return sub_23F61CCA0();
}

unint64_t sub_23F513540()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_23F51355C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return sub_23F5131CC(*a1, a2, a3, a4, a5);
}

uint64_t sub_23F513574()
{
  return sub_23F5135F4((void (*)(_QWORD))MEMORY[0x24BEBA288]);
}

uint64_t sub_23F513580()
{
  swift_arrayDestroy();
  sub_23F516EA4();
  return swift_deallocClassInstance();
}

uint64_t sub_23F5135A8()
{
  swift_arrayDestroy();
  sub_23F516EA4();
  return swift_deallocClassInstance();
}

uint64_t sub_23F5135D0()
{
  return sub_23F513648(&qword_256E70FD8);
}

uint64_t sub_23F5135DC()
{
  return sub_23F513648(&qword_256E70A58);
}

uint64_t sub_23F5135E8()
{
  return sub_23F5135F4((void (*)(_QWORD))type metadata accessor for RenderableTool);
}

uint64_t sub_23F5135F4(void (*a1)(_QWORD))
{
  a1(0);
  sub_23F516F00();
  sub_23F516EA4();
  return swift_deallocClassInstance();
}

uint64_t sub_23F513618()
{
  return sub_23F513648(&qword_256E703F0);
}

uint64_t sub_23F513624()
{
  sub_23F35D2E8(&qword_256E702E0);
  sub_23F516F00();
  sub_23F516EA4();
  return swift_deallocClassInstance();
}

uint64_t sub_23F513648(uint64_t *a1)
{
  sub_23F35D2E8(a1);
  swift_arrayDestroy();
  sub_23F516EA4();
  return swift_deallocClassInstance();
}

unint64_t sub_23F513688()
{
  unint64_t result;

  result = qword_256E78EF8;
  if (!qword_256E78EF8)
  {
    result = MEMORY[0x242670A44](&unk_23F62B6D8, &unk_250FDB028);
    atomic_store(result, (unint64_t *)&qword_256E78EF8);
  }
  return result;
}

uint64_t sub_23F5136C4()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_23F5136E8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for QuotableStringGrammarConverter(a2, a1);
  return a2;
}

uint64_t sub_23F513724()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 56);
  return swift_deallocObject();
}

uint64_t sub_23F513750(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AlphaPlanParser(a2, a1);
  return a2;
}

uint64_t sub_23F513784()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_23F5137A8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyActionRequirementEvaluating(a2, a1);
  return a2;
}

uint64_t sub_23F5137E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E78F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F51382C(uint64_t a1)
{
  destroy for AnyActionRequirementEvaluating();
  return a1;
}

uint64_t sub_23F513860(uint64_t a1)
{
  destroy for AlphaPlanParser(a1);
  return a1;
}

uint64_t sub_23F51388C(uint64_t a1)
{
  destroy for AnyActionRequirementEvaluating();
  return a1;
}

uint64_t sub_23F5138C0()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 56);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 96);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 176);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F51390C()
{
  swift_bridgeObjectRelease();
  sub_23F516EA4();
  return swift_deallocObject();
}

uint64_t sub_23F513928()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F51394C(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_23F513968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F362ABC();
  sub_23F517014();
  sub_23F61B404();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F516CBC(v6, v21);
  sub_23F61A1D4();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F516C0C();
  sub_23F35D2E8(&qword_256E78FB0);
  sub_23F516D98();
  sub_23F517290();
  if (v8)
  {
    sub_23F516B8C();
    sub_23F516EDC();
    if (!v10)
      v9 = 32;
    sub_23F5171CC(v9);
    if (!v2)
      goto LABEL_6;
LABEL_5:
    sub_23F516DC4();
    while (1)
    {
      sub_23F516C48();
      sub_23F516CA0();
      v0 = *(_QWORD *)(v3 + 40);
      sub_23F3B121C(&qword_256E6FA98, (void (*)(uint64_t))MEMORY[0x24BE55070]);
      sub_23F516D60();
      sub_23F516C7C();
      if (v10)
        break;
      sub_23F516DF0();
LABEL_29:
      sub_23F516BD4();
      sub_23F516D04();
      sub_23F516EF0();
      if (v2)
        goto LABEL_5;
LABEL_6:
      if (__OFADD__(v4, 1))
        goto LABEL_42;
      sub_23F5171C0();
      if (v11 == v12)
      {
        sub_23F516D1C();
        sub_23F5170AC();
        if ((v19 & 1) != 0)
          goto LABEL_35;
        goto LABEL_39;
      }
      sub_23F517064();
      if (!v13)
      {
        sub_23F5171B4();
        if (v11 == v12)
          goto LABEL_32;
        if (!*(_QWORD *)(v1 + 8 * v4))
        {
          sub_23F516ED0();
          if (v11 == v12)
          {
LABEL_32:
            sub_23F516D1C();
            sub_23F51726C();
            if ((v18 & 1) != 0)
            {
LABEL_35:
              sub_23F516C38();
              if (v11 != v12)
                sub_23F517074(v20);
              else
                sub_23F516D4C(v20);
              *(_QWORD *)(v0 + 16) = 0;
            }
LABEL_39:
            sub_23F366748();
            goto LABEL_40;
          }
          if (!*(_QWORD *)(v1 + 8 * v14))
          {
            while (1)
            {
              v4 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_43;
              if (v4 >= v15)
                goto LABEL_32;
              sub_23F5171A8();
              if (v16)
                goto LABEL_20;
            }
          }
          v4 = v14;
        }
      }
LABEL_20:
      sub_23F516DAC();
    }
    sub_23F482220();
    while (1)
    {
      sub_23F482858();
      if (v10)
      {
        if ((v17 & 1) != 0)
          break;
      }
      sub_23F517084();
      if (!v10)
      {
        sub_23F516DDC();
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
  }
  else
  {
    sub_23F3DDBDC();
LABEL_40:
    sub_23F51722C();
    sub_23F362948();
  }
}

void sub_23F513B34()
{
  uint64_t *v0;
  uint64_t *v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (**v31)(char *, unint64_t, uint64_t);
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  _QWORD *v49;
  void (**v50)(char *, unint64_t, uint64_t);
  uint64_t v51;
  int v52;
  uint64_t v53;
  void (**v54)(unint64_t, char *, uint64_t);
  char *v55;
  uint64_t v56;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v56 = sub_23F61B404();
  v4 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v55 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F39C56C();
  v51 = *(_QWORD *)(type metadata accessor for ActionResolver.Parameter(v6) - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v53 = v8;
  v9 = (_QWORD *)*v0;
  sub_23F35D2E8(&qword_256E78FD0);
  v52 = v3;
  v10 = sub_23F61CA84();
  if (!v9[2])
    goto LABEL_39;
  v49 = v9 + 8;
  sub_23F482C44();
  v13 = v12 & v11;
  sub_23F516F74();
  v47 = v0;
  v48 = v14;
  v50 = (void (**)(char *, unint64_t, uint64_t))(v4 + 16);
  v54 = (void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v15 = v10 + 64;
  swift_retain();
  v16 = 0;
  v17 = v53;
  if (!v13)
    goto LABEL_4;
LABEL_3:
  v18 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v18 | (v16 << 6); ; i = v28 + (v16 << 6))
  {
    v29 = *(_QWORD *)(v51 + 72);
    v30 = v9[6] + v29 * i;
    if ((v52 & 1) != 0)
    {
      sub_23F3C04DC(v30, v17, type metadata accessor for ActionResolver.Parameter);
      v31 = (void (**)(char *, unint64_t, uint64_t))v54;
    }
    else
    {
      sub_23F3C050C(v30, v17, type metadata accessor for ActionResolver.Parameter);
      v31 = v50;
    }
    v32 = v9;
    v33 = v9[7];
    v34 = v4;
    v35 = *(_QWORD *)(v4 + 72);
    (*v31)(v55, v33 + v35 * i, v56);
    sub_23F61CD30();
    sub_23F61A1D4();
    sub_23F3B121C(&qword_256E6FA98, (void (*)(uint64_t))MEMORY[0x24BE55070]);
    sub_23F61C04C();
    sub_23F61CD60();
    sub_23F482248();
    sub_23F4828AC();
    if (v38)
    {
      sub_23F482220();
      v17 = v53;
      while (1)
      {
        sub_23F482858();
        if (v38)
        {
          if ((v40 & 1) != 0)
            break;
        }
        if (v41 == v42)
          v41 = 0;
        v43 = *(_QWORD *)(v15 + 8 * v41);
        if (v43 != -1)
        {
          v39 = __clz(__rbit64(~v43)) + (v41 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return;
    }
    v39 = __clz(__rbit64(v37)) | v36 & 0x7FFFFFFFFFFFFFC0;
    v17 = v53;
LABEL_30:
    *(_QWORD *)(v15 + ((v39 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v39;
    sub_23F3C04DC(v17, *(_QWORD *)(v10 + 48) + v29 * v39, type metadata accessor for ActionResolver.Parameter);
    (*v54)(*(_QWORD *)(v10 + 56) + v35 * v39, v55, v56);
    sub_23F516EF0();
    v4 = v34;
    v9 = v32;
    if (v13)
      goto LABEL_3;
LABEL_4:
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_41;
    if (v20 >= v48)
    {
      sub_23F38496C();
      v1 = v47;
      v21 = v49;
      goto LABEL_34;
    }
    v21 = v49;
    ++v16;
    if (!v49[v20])
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v48)
        goto LABEL_32;
      if (!v49[v16])
        break;
    }
LABEL_16:
    sub_23F3844C0();
    v13 = v27 & v26;
  }
  sub_23F516ED0();
  if (v24 != v25)
  {
    if (!v21[v22])
    {
      while (1)
      {
        v16 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_42;
        if (v16 >= v23)
          goto LABEL_32;
        ++v22;
        if (v21[v16])
          goto LABEL_16;
      }
    }
    v16 = v22;
    goto LABEL_16;
  }
LABEL_32:
  sub_23F38496C();
  v1 = v47;
LABEL_34:
  if ((v52 & 1) != 0)
  {
    sub_23F516C38();
    if (v24 != v25)
    {
      *v21 = -1 << v44;
    }
    else
    {
      v45 = sub_23F482954();
      sub_23F51394C(v45, v46, v21);
    }
    v9[2] = 0;
  }
LABEL_39:
  sub_23F38496C();
  *v1 = v10;
  sub_23F362948();
}

void sub_23F513EC4()
{
  uint64_t *v0;
  uint64_t *v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t, uint64_t);
  uint64_t v35;
  _BYTE *v36;
  char v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, _BYTE *, uint64_t);
  uint64_t v45;
  _BYTE v46[4];
  int v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v4 = sub_23F6184B8();
  v54 = *(_QWORD *)(v4 - 8);
  sub_23F362850();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = &v46[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v46[-v9];
  v11 = *v0;
  sub_23F35D2E8(&qword_256E70CC0);
  v12 = sub_23F61CA84();
  if (*(_QWORD *)(v11 + 16))
  {
    sub_23F51712C();
    v50 = v13;
    sub_23F482C44();
    v16 = v15 & v14;
    sub_23F516F74();
    v48 = v0;
    v49 = v17;
    v18 = v11;
    v19 = v12 + 64;
    v53 = v18;
    swift_retain();
    v20 = 0;
    v47 = v3;
    v21 = 16;
    if ((v3 & 1) != 0)
      v21 = 32;
    v51 = v21;
    v52 = v8;
    if (!v16)
      goto LABEL_6;
LABEL_5:
    sub_23F482E24();
    for (i = v22 | (v20 << 6); ; i = v30 + (v20 << 6))
    {
      v31 = v53;
      v32 = *(_QWORD *)(v54 + 72);
      v33 = v32 * i;
      v34 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v54 + v51);
      v34(v10, *(_QWORD *)(v53 + 48) + v32 * i, v4);
      v35 = *(_QWORD *)(v31 + 56) + v33;
      v36 = v52;
      v34(v52, v35, v4);
      sub_23F3B121C(&qword_256E6FCF0, (void (*)(uint64_t))MEMORY[0x24BE549B8]);
      sub_23F61C040();
      sub_23F482248();
      sub_23F4828AC();
      if (v37)
      {
        sub_23F482220();
        while (1)
        {
          sub_23F482858();
          if (v37)
          {
            if ((v39 & 1) != 0)
              break;
          }
          if (v40 == v41)
            v40 = 0;
          if (*(_QWORD *)(v19 + 8 * v40) != -1)
          {
            sub_23F48220C();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      sub_23F482234();
LABEL_29:
      *(_QWORD *)(v19 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
      v42 = v32 * v38;
      v43 = *(_QWORD *)(v12 + 48) + v32 * v38;
      v44 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v54 + 32);
      v44(v43, v10, v4);
      v44(*(_QWORD *)(v12 + 56) + v42, v36, v4);
      sub_23F516D28();
      if (v16)
        goto LABEL_5;
LABEL_6:
      v24 = v20 + 1;
      if (__OFADD__(v20, 1))
        goto LABEL_41;
      if (v24 >= v49)
        break;
      v25 = v50;
      ++v20;
      if (!*(_QWORD *)(v50 + 8 * v24))
      {
        v20 = v24 + 1;
        if (v24 + 1 >= v49)
          goto LABEL_32;
        if (!*(_QWORD *)(v50 + 8 * v20))
        {
          sub_23F516ED0();
          if (v28 == v29)
          {
LABEL_32:
            sub_23F5171D8();
            v1 = v48;
            if ((v47 & 1) == 0)
              goto LABEL_39;
            goto LABEL_35;
          }
          if (!*(_QWORD *)(v25 + 8 * v26))
          {
            while (1)
            {
              v20 = v26 + 1;
              if (__OFADD__(v26, 1))
                goto LABEL_42;
              if (v20 >= v27)
                goto LABEL_32;
              ++v26;
              if (*(_QWORD *)(v25 + 8 * v20))
                goto LABEL_18;
            }
          }
          v20 = v26;
        }
      }
LABEL_18:
      sub_23F517194();
    }
    sub_23F5171D8();
    v1 = v48;
    if ((v47 & 1) == 0)
      goto LABEL_39;
LABEL_35:
    sub_23F516C38();
    if (v28 != v29)
      sub_23F516E94(v45);
    else
      sub_23F516C68(v45);
    *(_QWORD *)(v20 + 16) = 0;
  }
LABEL_39:
  swift_release();
  *v1 = v12;
  sub_23F362948();
}

void sub_23F5141CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F362ABC();
  sub_23F517014();
  sub_23F619FAC();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F516CBC(v6, v21);
  sub_23F617D08();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F516C0C();
  sub_23F35D2E8(&qword_256E78FF8);
  sub_23F516D98();
  sub_23F517290();
  if (v8)
  {
    sub_23F516B8C();
    sub_23F516EDC();
    if (!v10)
      v9 = 32;
    sub_23F5171CC(v9);
    if (!v2)
      goto LABEL_6;
LABEL_5:
    sub_23F516DC4();
    while (1)
    {
      sub_23F516C48();
      sub_23F516CA0();
      v0 = *(_QWORD *)(v3 + 40);
      sub_23F3B121C(&qword_256E6FFB0, (void (*)(uint64_t))MEMORY[0x24BE52140]);
      sub_23F516D60();
      sub_23F516C7C();
      if (v10)
        break;
      sub_23F516DF0();
LABEL_29:
      sub_23F516BD4();
      sub_23F516D04();
      sub_23F516EF0();
      if (v2)
        goto LABEL_5;
LABEL_6:
      if (__OFADD__(v4, 1))
        goto LABEL_42;
      sub_23F5171C0();
      if (v11 == v12)
      {
        sub_23F516D1C();
        sub_23F5170AC();
        if ((v19 & 1) != 0)
          goto LABEL_35;
        goto LABEL_39;
      }
      sub_23F517064();
      if (!v13)
      {
        sub_23F5171B4();
        if (v11 == v12)
          goto LABEL_32;
        if (!*(_QWORD *)(v1 + 8 * v4))
        {
          sub_23F516ED0();
          if (v11 == v12)
          {
LABEL_32:
            sub_23F516D1C();
            sub_23F51726C();
            if ((v18 & 1) != 0)
            {
LABEL_35:
              sub_23F516C38();
              if (v11 != v12)
                sub_23F517074(v20);
              else
                sub_23F516D4C(v20);
              *(_QWORD *)(v0 + 16) = 0;
            }
LABEL_39:
            sub_23F366748();
            goto LABEL_40;
          }
          if (!*(_QWORD *)(v1 + 8 * v14))
          {
            while (1)
            {
              v4 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_43;
              if (v4 >= v15)
                goto LABEL_32;
              sub_23F5171A8();
              if (v16)
                goto LABEL_20;
            }
          }
          v4 = v14;
        }
      }
LABEL_20:
      sub_23F516DAC();
    }
    sub_23F482220();
    while (1)
    {
      sub_23F482858();
      if (v10)
      {
        if ((v17 & 1) != 0)
          break;
      }
      sub_23F517084();
      if (!v10)
      {
        sub_23F516DDC();
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
  }
  else
  {
    sub_23F3DDBDC();
LABEL_40:
    sub_23F51722C();
    sub_23F362948();
  }
}

void sub_23F514398()
{
  sub_23F5143BC();
}

void sub_23F5143BC()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  int v4;
  int v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  _QWORD *v43;
  uint64_t v44;
  int v45;

  sub_23F362ABC();
  v43 = v1;
  v44 = v2;
  v3 = v0;
  v5 = v4;
  v6 = sub_23F40B498();
  v42 = v7;
  v8 = ((uint64_t (*)(uint64_t))v7)(v6);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (unint64_t)&v38 - v10;
  v12 = *v0;
  sub_23F516F64();
  v45 = v5;
  v13 = sub_23F516FC0();
  if (*(_QWORD *)(v12 + 16))
  {
    v14 = 1 << *(_BYTE *)(v12 + 32);
    v15 = *(_QWORD *)(v12 + 64);
    v40 = v12 + 64;
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    sub_23F516F74();
    v38 = v0;
    v39 = v18;
    v19 = v13 + 64;
    sub_23F3D9D3C();
    v20 = 0;
    v41 = v12;
    if (!v17)
      goto LABEL_7;
LABEL_6:
    sub_23F3629D4();
    for (i = v21 | (v20 << 6); ; i = v29 + (v20 << 6))
    {
      v30 = *(_QWORD *)(v9 + 72);
      v31 = *(_QWORD *)(v12 + 48) + v30 * i;
      if ((v45 & 1) != 0)
      {
        sub_23F507278(v11, v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
        v32 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * i);
      }
      else
      {
        sub_23F507278(v11, v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
        v32 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * i);
        sub_23F384A00();
      }
      sub_23F3B121C(v43, v42);
      sub_23F61C040();
      sub_23F482248();
      sub_23F4828AC();
      if (v33)
      {
        sub_23F482220();
        while (1)
        {
          sub_23F482858();
          if (v33)
          {
            if ((v34 & 1) != 0)
              break;
          }
          if (v35 == v36)
            v35 = 0;
          if (*(_QWORD *)(v19 + 8 * v35) != -1)
          {
            sub_23F516DDC();
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      sub_23F516DF0();
LABEL_33:
      *(_QWORD *)(v19 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      sub_23F507278(*(_QWORD *)(v13 + 48) + v30 * v11, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
      *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v11) = v32;
      sub_23F516D28();
      v12 = v41;
      if (v17)
        goto LABEL_6;
LABEL_7:
      v23 = v20 + 1;
      if (__OFADD__(v20, 1))
        goto LABEL_42;
      if (v23 >= v39)
        goto LABEL_35;
      v24 = v40;
      ++v20;
      if (!*(_QWORD *)(v40 + 8 * v23))
      {
        v20 = v23 + 1;
        if (v23 + 1 >= v39)
          goto LABEL_35;
        if (!*(_QWORD *)(v40 + 8 * v20))
        {
          sub_23F516ED0();
          if (v27 == v28)
          {
LABEL_35:
            sub_23F517218();
            v3 = v38;
            if ((v45 & 1) != 0)
            {
              sub_23F516C38();
              if (v27 != v28)
                sub_23F516E94(v37);
              else
                sub_23F516C68(v37);
              *(_QWORD *)(v12 + 16) = 0;
            }
            break;
          }
          if (!*(_QWORD *)(v24 + 8 * v25))
          {
            while (1)
            {
              v20 = v25 + 1;
              if (__OFADD__(v25, 1))
                goto LABEL_43;
              if (v20 >= v26)
                goto LABEL_35;
              ++v25;
              if (*(_QWORD *)(v24 + 8 * v20))
                goto LABEL_19;
            }
          }
          v20 = v25;
        }
      }
LABEL_19:
      sub_23F516FE8();
    }
  }
  sub_23F517218();
  *v3 = v13;
  sub_23F362948();
}

void sub_23F514668()
{
  sub_23F5151E8();
}

void sub_23F51467C()
{
  sub_23F514694();
}

void sub_23F514688()
{
  sub_23F514694();
}

void sub_23F514694()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  sub_23F516EB4();
  sub_23F35D2E8(v3);
  sub_23F516F80();
  sub_23F5170F0();
  if (v4)
  {
    sub_23F5170BC();
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & v6;
    sub_23F516F74();
    v28 = v9;
    v10 = v2 + 64;
    sub_23F482D50();
    v11 = 0;
    if (!v8)
      goto LABEL_7;
LABEL_6:
    sub_23F517164();
    while (1)
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v12);
      if ((v30 & 1) == 0)
      {
        sub_23F384B00();
        sub_23F384324();
      }
      sub_23F517244();
      sub_23F517154();
      v19 = sub_23F61CD60() & ~(-1 << *(_BYTE *)(v2 + 32));
      if (((-1 << v19) & ~*(_QWORD *)(v10 + 8 * (v19 >> 6))) == 0)
      {
        sub_23F482220();
        while (1)
        {
          sub_23F482858();
          if (v24)
          {
            if ((v21 & 1) != 0)
              break;
          }
          if (v22 == v23)
            v22 = 0;
          if (*(_QWORD *)(v10 + 8 * v22) != -1)
          {
            sub_23F48220C();
            goto LABEL_32;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      sub_23F482234();
LABEL_32:
      sub_23F516E04(v20);
      *(_QWORD *)(v26 + 8 * v25) = v18;
      sub_23F516D28();
      if (v8)
        goto LABEL_6;
LABEL_7:
      v13 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_41;
      if (v13 >= v28)
        goto LABEL_34;
      ++v11;
      if (!*(_QWORD *)(v29 + 8 * v13))
      {
        v11 = v13 + 1;
        if (v13 + 1 >= v28)
          goto LABEL_34;
        if (!*(_QWORD *)(v29 + 8 * v11))
        {
          sub_23F516ED0();
          if (v16 == v17)
          {
LABEL_34:
            sub_23F3D9AF4();
            if ((v30 & 1) != 0)
            {
              sub_23F516C38();
              if (v16 != v17)
                sub_23F516E94(v27);
              else
                sub_23F516C68(v27);
              *(_QWORD *)(v1 + 16) = 0;
            }
            break;
          }
          if (!*(_QWORD *)(v29 + 8 * v14))
          {
            while (1)
            {
              v11 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_42;
              if (v11 >= v15)
                goto LABEL_34;
              ++v14;
              if (*(_QWORD *)(v29 + 8 * v11))
                goto LABEL_19;
            }
          }
          v11 = v14;
        }
      }
LABEL_19:
      sub_23F5170D8();
    }
  }
  sub_23F3D9AF4();
  *v0 = v2;
  sub_23F516FCC();
}

void sub_23F51486C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F362ABC();
  sub_23F517014();
  sub_23F61B5D8();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F516CBC(v6, v21);
  sub_23F617000();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F516C0C();
  sub_23F35D2E8(&qword_256E78FE8);
  sub_23F516D98();
  sub_23F517290();
  if (v8)
  {
    sub_23F516B8C();
    sub_23F516EDC();
    if (!v10)
      v9 = 32;
    sub_23F5171CC(v9);
    if (!v2)
      goto LABEL_6;
LABEL_5:
    sub_23F516DC4();
    while (1)
    {
      sub_23F516C48();
      sub_23F516CA0();
      v0 = *(_QWORD *)(v3 + 40);
      sub_23F3B121C(&qword_256E70430, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
      sub_23F516D60();
      sub_23F516C7C();
      if (v10)
        break;
      sub_23F516DF0();
LABEL_29:
      sub_23F516BD4();
      sub_23F516D04();
      sub_23F516EF0();
      if (v2)
        goto LABEL_5;
LABEL_6:
      if (__OFADD__(v4, 1))
        goto LABEL_42;
      sub_23F5171C0();
      if (v11 == v12)
      {
        sub_23F516D1C();
        sub_23F5170AC();
        if ((v19 & 1) != 0)
          goto LABEL_35;
        goto LABEL_39;
      }
      sub_23F517064();
      if (!v13)
      {
        sub_23F5171B4();
        if (v11 == v12)
          goto LABEL_32;
        if (!*(_QWORD *)(v1 + 8 * v4))
        {
          sub_23F516ED0();
          if (v11 == v12)
          {
LABEL_32:
            sub_23F516D1C();
            sub_23F51726C();
            if ((v18 & 1) != 0)
            {
LABEL_35:
              sub_23F516C38();
              if (v11 != v12)
                sub_23F517074(v20);
              else
                sub_23F516D4C(v20);
              *(_QWORD *)(v0 + 16) = 0;
            }
LABEL_39:
            sub_23F366748();
            goto LABEL_40;
          }
          if (!*(_QWORD *)(v1 + 8 * v14))
          {
            while (1)
            {
              v4 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_43;
              if (v4 >= v15)
                goto LABEL_32;
              sub_23F5171A8();
              if (v16)
                goto LABEL_20;
            }
          }
          v4 = v14;
        }
      }
LABEL_20:
      sub_23F516DAC();
    }
    sub_23F482220();
    while (1)
    {
      sub_23F482858();
      if (v10)
      {
        if ((v17 & 1) != 0)
          break;
      }
      sub_23F517084();
      if (!v10)
      {
        sub_23F516DDC();
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
  }
  else
  {
    sub_23F3DDBDC();
LABEL_40:
    sub_23F51722C();
    sub_23F362948();
  }
}

void sub_23F514A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F362ABC();
  sub_23F517014();
  sub_23F61B92C();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F516CBC(v6, v21);
  sub_23F61B7C4();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F516C0C();
  sub_23F35D2E8(&qword_256E73540);
  sub_23F516D98();
  sub_23F517290();
  if (v8)
  {
    sub_23F516B8C();
    sub_23F516EDC();
    if (!v10)
      v9 = 32;
    sub_23F5171CC(v9);
    if (!v2)
      goto LABEL_6;
LABEL_5:
    sub_23F516DC4();
    while (1)
    {
      sub_23F516C48();
      sub_23F516CA0();
      v0 = *(_QWORD *)(v3 + 40);
      sub_23F3B121C(&qword_256E6FE18, (void (*)(uint64_t))MEMORY[0x24BEB97F0]);
      sub_23F516D60();
      sub_23F516C7C();
      if (v10)
        break;
      sub_23F516DF0();
LABEL_29:
      sub_23F516BD4();
      sub_23F516D04();
      sub_23F516EF0();
      if (v2)
        goto LABEL_5;
LABEL_6:
      if (__OFADD__(v4, 1))
        goto LABEL_42;
      sub_23F5171C0();
      if (v11 == v12)
      {
        sub_23F516D1C();
        sub_23F5170AC();
        if ((v19 & 1) != 0)
          goto LABEL_35;
        goto LABEL_39;
      }
      sub_23F517064();
      if (!v13)
      {
        sub_23F5171B4();
        if (v11 == v12)
          goto LABEL_32;
        if (!*(_QWORD *)(v1 + 8 * v4))
        {
          sub_23F516ED0();
          if (v11 == v12)
          {
LABEL_32:
            sub_23F516D1C();
            sub_23F51726C();
            if ((v18 & 1) != 0)
            {
LABEL_35:
              sub_23F516C38();
              if (v11 != v12)
                sub_23F517074(v20);
              else
                sub_23F516D4C(v20);
              *(_QWORD *)(v0 + 16) = 0;
            }
LABEL_39:
            sub_23F366748();
            goto LABEL_40;
          }
          if (!*(_QWORD *)(v1 + 8 * v14))
          {
            while (1)
            {
              v4 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_43;
              if (v4 >= v15)
                goto LABEL_32;
              sub_23F5171A8();
              if (v16)
                goto LABEL_20;
            }
          }
          v4 = v14;
        }
      }
LABEL_20:
      sub_23F516DAC();
    }
    sub_23F482220();
    while (1)
    {
      sub_23F482858();
      if (v10)
      {
        if ((v17 & 1) != 0)
          break;
      }
      sub_23F517084();
      if (!v10)
      {
        sub_23F516DDC();
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
  }
  else
  {
    sub_23F3DDBDC();
LABEL_40:
    sub_23F51722C();
    sub_23F362948();
  }
}

void sub_23F514C04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  sub_23F516EB4();
  sub_23F35D2E8(&qword_256E78F78);
  sub_23F516F80();
  sub_23F5170F0();
  if (v3)
  {
    sub_23F5170BC();
    sub_23F482C44();
    v6 = v5 & v4;
    sub_23F516F74();
    v27 = v0;
    v28 = v7;
    sub_23F482D50();
    v8 = 0;
    if (!v6)
      goto LABEL_4;
LABEL_3:
    sub_23F517164();
    while (1)
    {
      v15 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v9);
      v16 = *v15;
      v17 = v15[1];
      if ((v30 & 1) == 0)
      {
        sub_23F384B00();
        sub_23F384324();
      }
      sub_23F517244();
      sub_23F517154();
      sub_23F61CD60();
      sub_23F482248();
      sub_23F4828AC();
      if (v18)
      {
        sub_23F482220();
        while (1)
        {
          sub_23F482858();
          if (v18)
          {
            if ((v20 & 1) != 0)
              break;
          }
          if (v21 == v22)
            v21 = 0;
          if (*(_QWORD *)(v2 + 64 + 8 * v21) != -1)
          {
            sub_23F48220C();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_23F482234();
LABEL_29:
      sub_23F516E04(v19);
      v25 = (_QWORD *)(v24 + 16 * v23);
      *v25 = v16;
      v25[1] = v17;
      sub_23F516D28();
      if (v6)
        goto LABEL_3;
LABEL_4:
      v10 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_38;
      if (v10 >= v28)
        goto LABEL_31;
      ++v8;
      if (!*(_QWORD *)(v29 + 8 * v10))
      {
        v8 = v10 + 1;
        if (v10 + 1 >= v28)
          goto LABEL_31;
        if (!*(_QWORD *)(v29 + 8 * v8))
        {
          sub_23F516ED0();
          if (v13 == v14)
          {
LABEL_31:
            sub_23F3D9AF4();
            v0 = v27;
            if ((v30 & 1) != 0)
            {
              sub_23F516C38();
              if (v13 != v14)
                sub_23F516E94(v26);
              else
                sub_23F516C68(v26);
              *(_QWORD *)(v1 + 16) = 0;
            }
            break;
          }
          if (!*(_QWORD *)(v29 + 8 * v11))
          {
            while (1)
            {
              v8 = v11 + 1;
              if (__OFADD__(v11, 1))
                goto LABEL_39;
              if (v8 >= v12)
                goto LABEL_31;
              ++v11;
              if (*(_QWORD *)(v29 + 8 * v8))
                goto LABEL_16;
            }
          }
          v8 = v11;
        }
      }
LABEL_16:
      sub_23F5170D8();
    }
  }
  sub_23F3D9AF4();
  *v0 = v2;
  sub_23F516FCC();
}

void sub_23F514DCC(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t i;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _OWORD v36[2];

  v4 = v2;
  v6 = *v2;
  sub_23F35D2E8(&qword_256E78F88);
  sub_23F51710C();
  sub_23F516FC0();
  sub_23F5170F0();
  if (v7)
  {
    sub_23F516F40();
    v35 = v8;
    sub_23F5171F0();
    v11 = v10 & v9;
    sub_23F516F74();
    v34 = v12;
    sub_23F482D50();
    v13 = 0;
    if (!v11)
      goto LABEL_4;
LABEL_3:
    v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (i = v14 | (v13 << 6); ; i = v20 + (v13 << 6))
    {
      v21 = (_OWORD *)(*(_QWORD *)(v6 + 56) + 32 * i);
      if ((a2 & 1) != 0)
      {
        sub_23F382A70(v21, v36);
      }
      else
      {
        sub_23F382B64((uint64_t)v21, (uint64_t)v36);
        sub_23F384324();
      }
      sub_23F61CD30();
      sub_23F5171E4();
      sub_23F61CD60();
      sub_23F517044();
      if (v22)
      {
        sub_23F482220();
        while (1)
        {
          sub_23F482858();
          if (v22)
          {
            if ((v24 & 1) != 0)
              break;
          }
          if (v25 == v26)
            v25 = 0;
          if (*(_QWORD *)(v3 + 64 + 8 * v25) != -1)
          {
            sub_23F48220C();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_23F482234();
LABEL_29:
      sub_23F516E34(v23);
      sub_23F382A70(v36, (_OWORD *)(v28 + 32 * v27));
      sub_23F516D28();
      if (v11)
        goto LABEL_3;
LABEL_4:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_38;
      if (v16 >= v34)
        goto LABEL_31;
      ++v13;
      if (!v35[v16])
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v34)
          goto LABEL_31;
        if (!v35[v13])
        {
          v17 = v16 + 2;
          if (v17 >= v34)
          {
LABEL_31:
            sub_23F3D9AF4();
            v4 = v2;
            if ((a2 & 1) != 0)
            {
              sub_23F516C38();
              if (v30 != v31)
              {
                *v35 = -1 << v29;
              }
              else
              {
                v32 = sub_23F482954();
                sub_23F51394C(v32, v33, v35);
              }
              *(_QWORD *)(v6 + 16) = 0;
            }
            break;
          }
          if (!v35[v17])
          {
            while (1)
            {
              v13 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_39;
              if (v13 >= v34)
                goto LABEL_31;
              ++v17;
              if (v35[v13])
                goto LABEL_15;
            }
          }
          v13 = v17;
        }
      }
LABEL_15:
      sub_23F3844C0();
      v11 = v19 & v18;
    }
  }
  sub_23F3D9AF4();
  *v4 = v3;
  sub_23F516F9C();
}

void sub_23F514FD8()
{
  sub_23F515464();
}

void sub_23F514FEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t i;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  __int128 v28;

  sub_23F516EB4();
  sub_23F35D2E8(&qword_256E78F80);
  sub_23F51710C();
  sub_23F61CA84();
  sub_23F5170F0();
  if (v3)
  {
    sub_23F516F40();
    v26 = v0;
    v27 = v4;
    sub_23F5171F0();
    v7 = v6 & v5;
    v9 = (unint64_t)(v8 + 63) >> 6;
    sub_23F482D50();
    v10 = 0;
    if (!v7)
      goto LABEL_4;
LABEL_3:
    sub_23F482E24();
    for (i = v11 | (v10 << 6); ; i = v15 + (v10 << 6))
    {
      v28 = *(_OWORD *)(*(_QWORD *)(v1 + 56) + 16 * i);
      if ((v2 & 1) == 0)
      {
        sub_23F384324();
        swift_retain();
      }
      sub_23F61CD30();
      sub_23F5171E4();
      sub_23F61CD60();
      sub_23F517044();
      if (v16)
      {
        sub_23F482220();
        while (1)
        {
          sub_23F482858();
          if (v16)
          {
            if ((v18 & 1) != 0)
              break;
          }
          if (v19 == v20)
            v19 = 0;
          if (*(_QWORD *)(v2 + 64 + 8 * v19) != -1)
          {
            sub_23F48220C();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
      sub_23F482234();
LABEL_28:
      sub_23F516E34(v17);
      *(_OWORD *)(v22 + 16 * v21) = v28;
      sub_23F516D28();
      if (v7)
        goto LABEL_3;
LABEL_4:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_37;
      if (v13 >= v9)
        goto LABEL_30;
      ++v10;
      if (!*(_QWORD *)(v27 + 8 * v13))
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v9)
          goto LABEL_30;
        if (!*(_QWORD *)(v27 + 8 * v10))
        {
          v14 = v13 + 2;
          if (v14 >= v9)
          {
LABEL_30:
            sub_23F3D9AF4();
            v0 = v26;
            if ((v2 & 1) != 0)
            {
              sub_23F516C38();
              if (v24 != v25)
                sub_23F516E94(v23);
              else
                sub_23F516C68(v23);
              *(_QWORD *)(v1 + 16) = 0;
            }
            break;
          }
          if (!*(_QWORD *)(v27 + 8 * v14))
          {
            while (1)
            {
              v10 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_38;
              if (v10 >= v9)
                goto LABEL_30;
              ++v14;
              if (*(_QWORD *)(v27 + 8 * v10))
                goto LABEL_15;
            }
          }
          v10 = v14;
        }
      }
LABEL_15:
      sub_23F517194();
    }
  }
  sub_23F3D9AF4();
  *v0 = v2;
  sub_23F516F9C();
}

void sub_23F5151D4()
{
  sub_23F5151E8();
}

void sub_23F5151E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t (*v45)(_QWORD);

  sub_23F362ABC();
  v2 = v1;
  v3 = v0;
  v5 = v4;
  v6 = sub_23F40B498();
  v45 = v7;
  v8 = v7(v6);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - v9;
  v11 = *v0;
  sub_23F516F64();
  sub_23F51710C();
  v44 = v5;
  sub_23F516FC0();
  sub_23F5170F0();
  if (v12)
  {
    sub_23F516F40();
    v42 = v15;
    if (v13 < 64)
      v16 = ~(-1 << v13);
    else
      v16 = -1;
    v17 = v16 & v14;
    sub_23F516F74();
    v40 = v0;
    v41 = v18;
    sub_23F482D50();
    v19 = 0;
    if (!v17)
      goto LABEL_7;
LABEL_6:
    sub_23F3629D4();
    for (i = v20 | (v19 << 6); ; i = v28 + (v19 << 6))
    {
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(_QWORD *)(v11 + 56) + v29 * i;
      if ((v44 & 1) != 0)
      {
        sub_23F3C04DC(v30, (uint64_t)v10, v45);
      }
      else
      {
        sub_23F3C050C(v30, (uint64_t)v10, v45);
        sub_23F384A00();
      }
      sub_23F517238();
      sub_23F51711C();
      sub_23F61CD60();
      sub_23F4828AC();
      if (v31)
      {
        sub_23F482220();
        while (1)
        {
          sub_23F482858();
          if (v31)
          {
            if ((v33 & 1) != 0)
              break;
          }
          if (v34 == v35)
            v34 = 0;
          if (*(_QWORD *)(v2 + 64 + 8 * v34) != -1)
          {
            sub_23F48220C();
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      sub_23F482234();
LABEL_33:
      sub_23F516E64(v32);
      sub_23F3C04DC((uint64_t)v10, v37 + v29 * v36, v45);
      sub_23F516D28();
      if (v17)
        goto LABEL_6;
LABEL_7:
      v22 = v19 + 1;
      if (__OFADD__(v19, 1))
        goto LABEL_42;
      if (v22 >= v41)
        goto LABEL_35;
      v23 = v42;
      ++v19;
      if (!*(_QWORD *)(v42 + 8 * v22))
      {
        v19 = v22 + 1;
        if (v22 + 1 >= v41)
          goto LABEL_35;
        if (!*(_QWORD *)(v42 + 8 * v19))
        {
          sub_23F516ED0();
          if (v26 == v27)
          {
LABEL_35:
            sub_23F3D9AF4();
            v3 = v40;
            if ((v44 & 1) != 0)
            {
              sub_23F516C38();
              if (v26 != v27)
                sub_23F516E94(v38);
              else
                sub_23F516C68(v38);
              *(_QWORD *)(v11 + 16) = 0;
            }
            break;
          }
          if (!*(_QWORD *)(v23 + 8 * v24))
          {
            while (1)
            {
              v19 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_43;
              if (v19 >= v25)
                goto LABEL_35;
              ++v24;
              if (*(_QWORD *)(v23 + 8 * v19))
                goto LABEL_19;
            }
          }
          v19 = v24;
        }
      }
LABEL_19:
      sub_23F516FE8();
    }
  }
  sub_23F3D9AF4();
  *v3 = v2;
  sub_23F362948();
}

void sub_23F51543C()
{
  sub_23F515464();
}

void sub_23F515450()
{
  sub_23F515464();
}

void sub_23F515464()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t i;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  _QWORD *v42;
  int v43;
  char *v44;
  uint64_t v45;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v45 = sub_23F3C0798(v4, v2, v5);
  v6 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v44 = (char *)&v39 - v7;
  v8 = *v0;
  sub_23F516F64();
  v43 = v3;
  v9 = sub_23F516FC0();
  if (*(_QWORD *)(v8 + 16))
  {
    v40 = v0;
    sub_23F51712C();
    v42 = v10;
    sub_23F482C44();
    v13 = v12 & v11;
    sub_23F516F74();
    v41 = v14;
    swift_retain();
    v15 = 0;
    if (!v13)
      goto LABEL_4;
LABEL_3:
    v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    for (i = v16 | (v15 << 6); ; i = v22 + (v15 << 6))
    {
      v23 = *(_QWORD *)(v8 + 56);
      v24 = v8;
      v25 = *(_QWORD *)(v6 + 72);
      v26 = v23 + v25 * i;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v44, v26, v45);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v44, v26, v45);
        sub_23F384A00();
      }
      sub_23F517238();
      sub_23F51711C();
      sub_23F61CD60();
      sub_23F4828AC();
      if (v27)
      {
        sub_23F482220();
        while (1)
        {
          sub_23F482858();
          if (v27)
          {
            if ((v29 & 1) != 0)
              break;
          }
          if (v30 == v31)
            v30 = 0;
          if (*(_QWORD *)(v9 + 64 + 8 * v30) != -1)
          {
            sub_23F48220C();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_23F482234();
LABEL_29:
      sub_23F516E64(v28);
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v33 + v25 * v32, v44, v45);
      sub_23F516D28();
      v8 = v24;
      if (v13)
        goto LABEL_3;
LABEL_4:
      v18 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_38;
      if (v18 >= v41)
        goto LABEL_31;
      ++v15;
      if (!v42[v18])
      {
        v15 = v18 + 1;
        if (v18 + 1 >= v41)
          goto LABEL_31;
        if (!v42[v15])
        {
          v19 = v18 + 2;
          if (v19 >= v41)
          {
LABEL_31:
            swift_release();
            v1 = v40;
            if ((v43 & 1) != 0)
            {
              sub_23F516C38();
              if (v35 != v36)
              {
                *v42 = -1 << v34;
              }
              else
              {
                v37 = sub_23F482954();
                sub_23F51394C(v37, v38, v42);
              }
              *(_QWORD *)(v8 + 16) = 0;
            }
            break;
          }
          if (!v42[v19])
          {
            while (1)
            {
              v15 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_39;
              if (v15 >= v41)
                goto LABEL_31;
              ++v19;
              if (v42[v15])
                goto LABEL_15;
            }
          }
          v15 = v19;
        }
      }
LABEL_15:
      sub_23F3844C0();
      v13 = v21 & v20;
    }
  }
  swift_release();
  *v1 = v9;
  sub_23F362948();
}

void sub_23F5156E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t i;
  BOOL v45;
  int64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  sub_23F362C98();
  a19 = v21;
  a20 = v22;
  v71 = v20;
  v24 = v23;
  v63 = *(_QWORD *)(type metadata accessor for DynamicEnumeration(0) - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F36285C();
  v67 = v26;
  sub_23F39C56C();
  v27 = sub_23F61B95C();
  v69 = *(_QWORD *)(v27 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F517024(v29, v60);
  MEMORY[0x24BDAC7A8](v30);
  v64 = (char *)&v60 - v31;
  sub_23F35D2E8(&qword_256E78F60);
  v32 = sub_23F61CA78();
  v33 = 0;
  v68 = v24;
  v36 = *(_QWORD *)(v24 + 64);
  v35 = v24 + 64;
  v34 = v36;
  v37 = 1 << *(_BYTE *)(v35 - 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v39 = v38 & v34;
  v60 = v35;
  v61 = (unint64_t)(v37 + 63) >> 6;
  v62 = v32 + 64;
  v66 = v32;
  v41 = v64;
  v40 = v65;
  if ((v38 & v34) == 0)
    goto LABEL_5;
LABEL_4:
  sub_23F3629D4();
  v70 = v42;
  for (i = v43 | (v42 << 6); ; i = v49 + (v48 << 6))
  {
    v51 = v68;
    v50 = v69;
    v52 = *(_QWORD *)(v69 + 72) * i;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v41, *(_QWORD *)(v68 + 48) + v52, v27);
    a10 = *(_QWORD *)(*(_QWORD *)(v51 + 56) + 8 * i);
    v53 = *(void (**)(uint64_t, char *, uint64_t))(v50 + 32);
    v53((uint64_t)v40, v41, v27);
    sub_23F3B1EA4();
    v54 = v67;
    v55 = v71;
    sub_23F5E709C(&a10, v67);
    v71 = v55;
    if (v55)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v27);
      swift_bridgeObjectRelease();
LABEL_24:
      sub_23F362870();
      return;
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v62 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v56 = v66;
    v53(*(_QWORD *)(v66 + 48) + v52, v40, v27);
    sub_23F3C04DC(v54, *(_QWORD *)(v56 + 56) + *(_QWORD *)(v63 + 72) * i, type metadata accessor for DynamicEnumeration);
    v57 = *(_QWORD *)(v56 + 16);
    v45 = __OFADD__(v57, 1);
    v58 = v57 + 1;
    if (v45)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    *(_QWORD *)(v56 + 16) = v58;
    v33 = v70;
    if (v39)
      goto LABEL_4;
LABEL_5:
    v45 = __OFADD__(v33, 1);
    v46 = v33 + 1;
    if (v45)
      goto LABEL_26;
    if (v46 >= v61)
      goto LABEL_24;
    if (!*(_QWORD *)(v60 + 8 * v46))
    {
      if (v46 + 1 >= v61)
        goto LABEL_24;
      if (!*(_QWORD *)(v60 + 8 * (v46 + 1)))
      {
        if (v46 + 2 >= v61)
          goto LABEL_24;
        if (!*(_QWORD *)(v60 + 8 * (v46 + 2)))
        {
          v47 = v46 + 3;
          if (v46 + 3 >= v61)
            goto LABEL_24;
          if (!*(_QWORD *)(v60 + 8 * v47))
            break;
        }
      }
    }
LABEL_14:
    sub_23F516FE8();
    v70 = v48;
  }
  while (1)
  {
    v59 = v47 + 1;
    if (__OFADD__(v47, 1))
      break;
    if (v59 >= v61)
      goto LABEL_24;
    ++v47;
    if (*(_QWORD *)(v60 + 8 * v59))
      goto LABEL_14;
  }
LABEL_27:
  __break(1u);
}

void sub_23F5159BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  unint64_t v21;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;

  v1 = a1;
  v2 = MEMORY[0x24BEE4AF8];
  v37 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v34 = *(_QWORD *)(a1 + 16);
  if (!v34)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v33 = a1 + 32;
  sub_23F3B1EA4();
  v3 = 0;
  v32 = v1;
  while (v3 < *(_QWORD *)(v1 + 16))
  {
    v4 = (uint64_t *)(v33 + 24 * v3);
    v5 = v4[1];
    v6 = v37[2];
    v35 = *v4;
    v36 = v4[2];
    if (!v6)
      goto LABEL_22;
    if (v37[4] == *v4 && v37[5] == v5)
    {
      v8 = 0;
    }
    else if ((sub_23F516D88() & 1) != 0)
    {
      v8 = 0;
    }
    else
    {
      if (v6 == 1)
        goto LABEL_22;
      if (v37[6] == v35 && v37[7] == v5)
      {
        v8 = 1;
      }
      else if ((sub_23F516D88() & 1) != 0)
      {
        v8 = 1;
      }
      else
      {
        if (v6 == 2)
          goto LABEL_22;
        if (v37[8] == v35 && v37[9] == v5)
        {
          v8 = 2;
        }
        else if ((sub_23F516D88() & 1) != 0)
        {
          v8 = 2;
        }
        else
        {
          if (v6 == 3)
            goto LABEL_22;
          if (v37[10] == v35 && v37[11] == v5)
          {
            v8 = 3;
          }
          else
          {
            if ((sub_23F516D88() & 1) == 0)
            {
              v29 = v37 + 13;
              v30 = 4;
              while (1)
              {
                v1 = v32;
                if (v6 == v30)
                  break;
                if (*(v29 - 1) == v35 && *v29 == v5)
                {
                  v8 = v30;
                  goto LABEL_12;
                }
                v8 = v30++;
                v29 += 2;
                if ((sub_23F516D88() & 1) != 0)
                  goto LABEL_12;
              }
LABEL_22:
              sub_23F517250();
              sub_23F516F58();
              sub_23F3BCA1C(v35, v5);
              if ((sub_23F3849CC() & 1) == 0)
                sub_23F37BA5C();
              v16 = *(_QWORD *)(v2 + 16);
              if (v16 >= *(_QWORD *)(v2 + 24) >> 1)
                sub_23F37BA5C();
              *(_QWORD *)(v2 + 16) = v16 + 1;
              v17 = v2 + 32;
              v18 = MEMORY[0x24BEE4AF8];
              *(_QWORD *)(v2 + 32 + 8 * v16) = MEMORY[0x24BEE4AF8];
              sub_23F517144();
              sub_23F384324();
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)(v2 + 32 + 8 * v16) = v18;
              v20 = v18;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_23F3C0670();
                sub_23F376C6C();
                v20 = v27;
                *(_QWORD *)(v17 + 8 * v16) = v27;
              }
              v21 = *(_QWORD *)(v20 + 16);
              if (v21 >= *(_QWORD *)(v20 + 24) >> 1)
              {
                sub_23F376C6C();
                v20 = v28;
                *(_QWORD *)(v17 + 8 * v16) = v28;
              }
              *(_QWORD *)(v20 + 16) = v21 + 1;
              v15 = (_QWORD *)(v20 + 24 * v21);
              v13 = v35;
              goto LABEL_31;
            }
            v8 = 3;
          }
        }
      }
    }
LABEL_12:
    sub_23F517250();
    sub_23F516F58();
    if ((sub_23F3849CC() & 1) == 0)
    {
      sub_23F3BCF64();
      v2 = v9;
    }
    if ((v8 & 0x8000000000000000) != 0)
      goto LABEL_67;
    if (v8 >= *(_QWORD *)(v2 + 16))
      goto LABEL_68;
    v10 = v2 + 32;
    v11 = *(_QWORD *)(v2 + 32 + 8 * v8);
    sub_23F517144();
    sub_23F384324();
    v12 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v2 + 32 + 8 * v8) = v11;
    if ((v12 & 1) == 0)
    {
      sub_23F3C0670();
      sub_23F376C6C();
      v11 = v25;
      *(_QWORD *)(v10 + 8 * v8) = v25;
    }
    v13 = v35;
    v14 = *(_QWORD *)(v11 + 16);
    if (v14 >= *(_QWORD *)(v11 + 24) >> 1)
    {
      sub_23F376C6C();
      v13 = v35;
      v11 = v26;
      *(_QWORD *)(v10 + 8 * v8) = v26;
    }
    v1 = v32;
    *(_QWORD *)(v11 + 16) = v14 + 1;
    v15 = (_QWORD *)(v11 + 24 * v14);
LABEL_31:
    v15[4] = v13;
    v15[5] = v5;
    ++v3;
    v15[6] = v36;
    swift_release();
    sub_23F384A80();
    if (v3 == v34)
    {
      sub_23F384A80();
      return;
    }
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
}

unint64_t sub_23F515E34()
{
  unint64_t result;

  result = qword_256E78F20;
  if (!qword_256E78F20)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for PromptGrammarGenerationMode, &type metadata for PromptGrammarGenerationMode);
    atomic_store(result, (unint64_t *)&qword_256E78F20);
  }
  return result;
}

void type metadata accessor for PromptGrammar()
{
  sub_23F362C18();
}

uint64_t destroy for PromptGrammar.GrammarPiece(uint64_t *a1)
{
  return sub_23F3C8470(*a1, a1[1], a1[2]);
}

uint64_t *initializeWithCopy for PromptGrammar.GrammarPiece(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_23F3C8438(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for PromptGrammar.GrammarPiece(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_23F3C8438(*a2, v4, v5);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_23F3C8470(v7, v8, v9);
  return a1;
}

uint64_t *assignWithTake for PromptGrammar.GrammarPiece(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v3 = *a1;
  v5 = a1[1];
  v4 = a1[2];
  v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v6;
  sub_23F3C8470(v3, v5, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PromptGrammar.GrammarPiece(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x1F && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 30;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 16) >> 57) >> 4) & 1 | (2
                                                                   * ((*(_QWORD *)(a1 + 16) >> 57) & 8 | *(_QWORD *)(a1 + 16) & 7))) ^ 0x1F;
      if (v2 >= 0x1E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for PromptGrammar.GrammarPiece(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x1E)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 31;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x1F)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x1F)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0xF | (16 * (-a2 & 0x1F));
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (v3 | (v3 << 57)) & 0x3000000000000007;
      *(_QWORD *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_23F516028(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 16) >> 61) & 1;
}

uint64_t sub_23F516034(uint64_t result)
{
  *(_QWORD *)(result + 16) &= ~0x2000000000000000uLL;
  return result;
}

uint64_t sub_23F516044(uint64_t result, char a2)
{
  *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 0xCFFFFFFFFFFFFFF8 | ((unint64_t)(a2 & 1) << 61);
  return result;
}

void type metadata accessor for PromptGrammar.GrammarPiece()
{
  sub_23F362C18();
}

uint64_t storeEnumTagSinglePayload for PromptGrammarGenerationMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F5160B8 + 4 * byte_23F62B2C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F5160EC + 4 * byte_23F62B2C0[v4]))();
}

uint64_t sub_23F5160EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5160F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5160FCLL);
  return result;
}

uint64_t sub_23F516108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F516110);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F516114(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F51611C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PromptGrammarGenerationMode()
{
  sub_23F362C18();
}

uint64_t destroy for HybridGrammarGenerator(uint64_t *a1)
{
  sub_23F3C8470(*a1, a1[1], a1[2]);
  swift_bridgeObjectRelease();
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(a1 + 6));
}

uint64_t initializeWithCopy for HybridGrammarGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  sub_23F3C8438(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = a2 + 48;
  v10 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v10;
  v11 = v10;
  v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
  sub_23F617BA0();
  v12(a1 + 48, v9, v11);
  return a1;
}

uint64_t *assignWithCopy for HybridGrammarGenerator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  sub_23F3C8438(*a2, v5, v6);
  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  sub_23F3C8470(v8, v9, v10);
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  sub_23F361AD0(a1 + 6, a2 + 6);
  return a1;
}

uint64_t assignWithTake for HybridGrammarGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  sub_23F3C8470(v4, v5, v6);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 48);
  v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for HybridGrammarGenerator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HybridGrammarGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for HybridGrammarGenerator()
{
  sub_23F362C18();
}

uint64_t destroy for StandaloneGrammarGenerator(uint64_t *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  sub_23F3C8470(a1[2], a1[3], a1[4]);
  swift_bridgeObjectRelease();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(a1 + 8));
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(a1 + 13));
  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(a1 + 18));
  if (a1[26])
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(a1 + 23));
  return result;
}

uint64_t initializeWithCopy for StandaloneGrammarGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  sub_23F617BA0();
  sub_23F3C8438(v5, v6, v7);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v10;
  v11 = v10;
  v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
  sub_23F617BA0();
  v12(a1 + 64, a2 + 64, v11);
  v13 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 128) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 104, a2 + 104);
  v14 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 168) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 144, a2 + 144);
  v15 = (_OWORD *)(a1 + 184);
  v16 = (_OWORD *)(a2 + 184);
  v17 = *(_QWORD *)(a2 + 208);
  if (v17)
  {
    v18 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 208) = v17;
    *(_QWORD *)(a1 + 216) = v18;
    (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v15, v16);
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 200);
    *v15 = *v16;
    *(_OWORD *)(a1 + 200) = v19;
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  }
  return a1;
}

uint64_t assignWithCopy for StandaloneGrammarGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  sub_23F3C8438(v4, v5, v6);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  sub_23F3C8470(v8, v9, v10);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  sub_23F361AD0((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  sub_23F361AD0((uint64_t *)(a1 + 104), (uint64_t *)(a2 + 104));
  sub_23F361AD0((uint64_t *)(a1 + 144), (uint64_t *)(a2 + 144));
  v11 = *(_QWORD *)(a2 + 208);
  if (!*(_QWORD *)(a1 + 208))
  {
    if (v11)
    {
      *(_QWORD *)(a1 + 208) = v11;
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 184, a2 + 184);
      return a1;
    }
LABEL_7:
    v12 = *(_OWORD *)(a2 + 184);
    v13 = *(_OWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 184) = v12;
    *(_OWORD *)(a1 + 200) = v13;
    return a1;
  }
  if (!v11)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 184);
    goto LABEL_7;
  }
  sub_23F361AD0((uint64_t *)(a1 + 184), (uint64_t *)(a2 + 184));
  return a1;
}

uint64_t assignWithTake for StandaloneGrammarGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v8;
  sub_23F3C8470(v5, v6, v7);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 64);
  v10 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 104);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 144);
  v11 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v11;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  if (*(_QWORD *)(a1 + 208))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 184);
  v12 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v12;
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for StandaloneGrammarGenerator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 224))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StandaloneGrammarGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 224) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 224) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for StandaloneGrammarGenerator()
{
  sub_23F362C18();
}

uint64_t getEnumTagSinglePayload for StandaloneGrammarGenerator.QuotableStringConfiguration(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StandaloneGrammarGenerator.QuotableStringConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_23F51687C(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23F516894(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

void type metadata accessor for StandaloneGrammarGenerator.QuotableStringConfiguration()
{
  sub_23F362C18();
}

void type metadata accessor for HybridGrammarGenerator.HybridGrammarError()
{
  sub_23F362C18();
}

ValueMetadata *type metadata accessor for ToolRendererGrammarGenerator()
{
  return &type metadata for ToolRendererGrammarGenerator;
}

void type metadata accessor for StandaloneGrammarGenerator.StandaloneGrammarError()
{
  sub_23F362C18();
}

unint64_t sub_23F5168F4()
{
  unint64_t result;

  result = qword_256E78F28;
  if (!qword_256E78F28)
  {
    result = MEMORY[0x242670A44](&unk_23F62B5B8, &unk_250FDB028);
    atomic_store(result, (unint64_t *)&qword_256E78F28);
  }
  return result;
}

unint64_t sub_23F516938()
{
  unint64_t result;

  result = qword_256E78F30;
  if (!qword_256E78F30)
  {
    result = MEMORY[0x242670A44](&unk_23F62B660, &unk_250FDAF18);
    atomic_store(result, (unint64_t *)&qword_256E78F30);
  }
  return result;
}

unint64_t sub_23F516974()
{
  unint64_t result;

  result = qword_256E78F50;
  if (!qword_256E78F50)
  {
    result = MEMORY[0x242670A44](&unk_23F62B538, &unk_250FDB028);
    atomic_store(result, (unint64_t *)&qword_256E78F50);
  }
  return result;
}

void sub_23F5169B0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_23F51329C(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_23F5169C8()
{
  unint64_t result;

  result = qword_256E78F58;
  if (!qword_256E78F58)
  {
    result = MEMORY[0x242670A44](&unk_23F62B80C, &type metadata for ToolRendererGrammarGenerator.GeneratorError);
    atomic_store(result, (unint64_t *)&qword_256E78F58);
  }
  return result;
}

unint64_t sub_23F516A04()
{
  unint64_t result;

  result = qword_256E78F70;
  if (!qword_256E78F70)
  {
    result = MEMORY[0x242670A44](&unk_23F62B5E0, &unk_250FDAF18);
    atomic_store(result, (unint64_t *)&qword_256E78F70);
  }
  return result;
}

void sub_23F516A40()
{
  sub_23F3B0CC8(&qword_256E78FB8, &qword_256E70FE8);
}

uint64_t _s30IntelligenceFlowPlannerRuntime28ToolRendererGrammarGeneratorV14GeneratorErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F516AB0 + 4 * byte_23F62B2CA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F516AD0 + 4 * byte_23F62B2CF[v4]))();
}

_BYTE *sub_23F516AB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F516AD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F516AD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F516AE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F516AE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F516AF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ToolRendererGrammarGenerator.GeneratorError()
{
  return &type metadata for ToolRendererGrammarGenerator.GeneratorError;
}

unint64_t sub_23F516B14()
{
  unint64_t result;

  result = qword_256E78FD8;
  if (!qword_256E78FD8)
  {
    result = MEMORY[0x242670A44](&unk_23F62B7E4, &type metadata for ToolRendererGrammarGenerator.GeneratorError);
    atomic_store(result, (unint64_t *)&qword_256E78FD8);
  }
  return result;
}

unint64_t sub_23F516B50()
{
  unint64_t result;

  result = qword_256E78FE0;
  if (!qword_256E78FE0)
  {
    result = MEMORY[0x242670A44](&unk_23F62B764, &type metadata for ToolRendererGrammarGenerator.GeneratorError);
    atomic_store(result, (unint64_t *)&qword_256E78FE0);
  }
  return result;
}

uint64_t sub_23F516B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = 1 << *(_BYTE *)(v0 + 32);
  *(_QWORD *)(v1 - 136) = v0 + 64;
  *(_QWORD *)(v1 - 144) = (unint64_t)(v2 + 63) >> 6;
  *(_QWORD *)(v1 - 120) = v0;
  return swift_retain();
}

uint64_t sub_23F516BD4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v0 + ((v1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v1;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 112) + 32))(*(_QWORD *)(v2 + 48) + v3 * v1, v5, v4);
}

void sub_23F516C0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = v0;
}

uint64_t sub_23F516C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + v2))(v3, *(_QWORD *)(*(_QWORD *)(v4 - 120) + 48) + *(_QWORD *)(*(_QWORD *)(v4 - 112) + 72) * v0, v1);
}

uint64_t sub_23F516C68@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_23F51394C(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_23F516CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v3 - 96) + v2))(*(_QWORD *)(v3 - 104), *(_QWORD *)(v1 + 56) + *(_QWORD *)(*(_QWORD *)(v3 - 96) + 72) * v0, *(_QWORD *)(v3 - 88));
}

uint64_t sub_23F516CBC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23F516CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23F3C8470(v2, v1, v0);
}

uint64_t sub_23F516CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23F3C8470(v2, v1, v0);
}

uint64_t sub_23F516D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v3 - 96) + 32))(*(_QWORD *)(v2 + 56) + v1 * v0, *(_QWORD *)(v3 - 104), *(_QWORD *)(v3 - 88));
}

uint64_t sub_23F516D1C()
{
  return swift_release();
}

void sub_23F516D28()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

uint64_t sub_23F516D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23F3C8438(v2, v1, v0);
}

uint64_t sub_23F516D4C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_23F51394C(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_23F516D60()
{
  return sub_23F61C040();
}

uint64_t sub_23F516D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23F3C8438(v2, v1, v0);
}

uint64_t sub_23F516D88()
{
  return sub_23F61CC64();
}

uint64_t sub_23F516D98()
{
  return sub_23F61CA84();
}

void sub_23F516E04(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v2 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * a1);
  *v5 = v4;
  v5[1] = v3;
}

void sub_23F516E34(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * a1);
  *v5 = v3;
  v5[1] = v2;
}

void sub_23F516E64(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v2 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * a1);
  *v5 = v4;
  v5[1] = v3;
}

void sub_23F516E94(char a1@<W8>)
{
  _QWORD *v1;

  *v1 = -1 << a1;
}

uint64_t sub_23F516EA4()
{
  uint64_t v0;

  return v0;
}

void sub_23F516EDC()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 156) = v0;
}

void sub_23F516EF0()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

uint64_t sub_23F516F00()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F516F20(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t, _QWORD, uint64_t))
{
  return a3(0, a1, *(_QWORD *)(a2 + 16), a2);
}

uint64_t sub_23F516F58()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23F516F64()
{
  uint64_t *v0;

  return sub_23F35D2E8(v0);
}

uint64_t sub_23F516F80()
{
  return sub_23F61CA84();
}

void sub_23F516FB8()
{
  sub_23F377598();
}

uint64_t sub_23F516FC0()
{
  return sub_23F61CA84();
}

uint64_t sub_23F516FFC()
{
  return sub_23F61CC64();
}

uint64_t sub_23F517014()
{
  return 0;
}

void sub_23F517024(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23F517074(char a1@<W8>)
{
  _QWORD *v1;

  *v1 = -1 << a1;
}

uint64_t sub_23F517094()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5170FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  return v4(a1, a2, a3, a4, v5, v6);
}

uint64_t sub_23F51710C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F51711C()
{
  return sub_23F61C22C();
}

uint64_t sub_23F517144()
{
  return swift_retain();
}

uint64_t sub_23F517154()
{
  return sub_23F61C22C();
}

uint64_t sub_23F51717C()
{
  return 0;
}

void sub_23F5171CC(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = a1;
}

uint64_t sub_23F5171D8()
{
  return swift_release();
}

uint64_t sub_23F5171E4()
{
  return sub_23F61C22C();
}

uint64_t sub_23F517204()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F517218()
{
  return swift_release();
}

void sub_23F517220(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

void sub_23F51722C()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
}

uint64_t sub_23F517238()
{
  return sub_23F61CD30();
}

uint64_t sub_23F517244()
{
  return sub_23F61CD30();
}

uint64_t sub_23F517250()
{
  return swift_retain();
}

uint64_t sub_23F517258()
{
  uint64_t v0;

  return v0;
}

void sub_23F517278()
{
  sub_23F37574C();
}

uint64_t sub_23F517284()
{
  return swift_willThrow();
}

uint64_t *sub_23F51729C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for RenderableTool();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23F61B4F4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = sub_23F35D2E8(&qword_256E708E0);
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 48));
      sub_23F617BA0();
    }
    else
    {
      v10 = sub_23F618BB4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
    v11 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v11) = *(uint64_t *)((char *)a2 + v11);
    sub_23F617BA0();
    sub_23F617BA0();
  }
  return a1;
}

uint64_t sub_23F5173AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for RenderableTool();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_23F61B4F4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
    sub_23F35D2E8(&qword_256E708E0);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = sub_23F618BB4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F517450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for RenderableTool();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23F61B4F4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = sub_23F35D2E8(&qword_256E708E0);
    *(_QWORD *)(a1 + *(int *)(v7 + 48)) = *(_QWORD *)(a2 + *(int *)(v7 + 48));
    sub_23F617BA0();
  }
  else
  {
    v8 = sub_23F618BB4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  v9 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F517534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_23F3663AC(a1, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
    type metadata accessor for RenderableTool();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23F61B4F4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = sub_23F35D2E8(&qword_256E708E0);
      *(_QWORD *)(a1 + *(int *)(v7 + 48)) = *(_QWORD *)(a2 + *(int *)(v7 + 48));
      sub_23F617BA0();
    }
    else
    {
      v8 = sub_23F618BB4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F517648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for RenderableTool();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23F61B4F4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = sub_23F35D2E8(&qword_256E708E0);
    *(_QWORD *)(a1 + *(int *)(v7 + 48)) = *(_QWORD *)(a2 + *(int *)(v7 + 48));
  }
  else
  {
    v8 = sub_23F618BB4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  v9 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  return a1;
}

uint64_t sub_23F51771C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_23F3663AC(a1, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
    type metadata accessor for RenderableTool();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23F61B4F4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = sub_23F35D2E8(&qword_256E708E0);
      *(_QWORD *)(a1 + *(int *)(v7 + 48)) = *(_QWORD *)(a2 + *(int *)(v7 + 48));
    }
    else
    {
      v8 = sub_23F618BB4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F51781C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F517828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F517B4C(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
}

uint64_t sub_23F517834()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F517840(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23F517BD4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
}

uint64_t type metadata accessor for ToolPromptMap(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E79060);
}

uint64_t sub_23F517860()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RenderableTool();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23F5178D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61BBA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    sub_23F617BA0();
  }
  return a1;
}

uint64_t sub_23F517964(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5179A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F517A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F517A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23F517AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F517B34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F517B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F517B4C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEBA368]);
}

void sub_23F517B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    sub_23F36195C(a1, a2, v6);
  else
    sub_23F362B80();
}

uint64_t sub_23F517BBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F517BC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23F517BD4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BEBA368]);
}

uint64_t sub_23F517BD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ParameterPromptMap(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E790F8);
}

uint64_t sub_23F517C5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61BBA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F517CD0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t i;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void);
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  void (*v55)(_BYTE *, _BYTE *, uint64_t);
  _QWORD *v56;
  unint64_t v57;
  char v58;
  unint64_t v59;
  char v60;
  unint64_t v61;
  char v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t result;
  _BYTE v72[16];
  uint64_t v73;
  unsigned int v74;
  _BYTE *v75;
  _BYTE *v76;
  _QWORD *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(void);
  uint64_t v91;
  void (*v92)(_BYTE *, unint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  int64_t v95;
  uint64_t v96;
  _QWORD *v97;
  unint64_t v98;
  _QWORD v99[8];

  v77 = a1;
  v5 = sub_23F6184B8();
  v94 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v76 = &v72[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v78 = (uint64_t *)&v72[-v8];
  v9 = sub_23F35D2E8(&qword_256E78EE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v72[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = type metadata accessor for ConversationItem(0);
  v80 = *(_QWORD *)(v86 - 8);
  v12 = MEMORY[0x24BDAC7A8](v86);
  v14 = &v72[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v82 = &v72[-v15];
  v91 = sub_23F35D2E8(&qword_256E79138);
  v16 = MEMORY[0x24BDAC7A8](v91);
  v75 = &v72[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = &v72[-v19];
  MEMORY[0x24BDAC7A8](v18);
  v85 = &v72[-v21];
  sub_23F38231C(a2, v99);
  v87 = v99[0];
  v79 = v99[1];
  v95 = v99[3];
  v22 = v99[4];
  v81 = (unint64_t)(v99[2] + 64) >> 6;
  v74 = *MEMORY[0x24BE54960];
  sub_23F617BA0();
  v83 = v11;
  v84 = v5;
  v73 = a3;
  if (!v22)
    goto LABEL_3;
LABEL_2:
  v23 = v5;
  v96 = (v22 - 1) & v22;
  for (i = __clz(__rbit64(v22)) | (v95 << 6); ; i = __clz(__rbit64(v26)) + (v27 << 6))
  {
    v29 = v87;
    v30 = *(_QWORD *)(v87 + 48);
    v31 = sub_23F617000();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = v30 + *(_QWORD *)(v32 + 72) * i;
    v88 = v32;
    v34 = *(void (**)(void))(v32 + 16);
    v35 = v85;
    v93 = v31;
    v90 = v34;
    ((void (*)(_BYTE *, uint64_t))v34)(v85, v33);
    v36 = *(_QWORD *)(v29 + 56);
    v89 = *(_QWORD *)(v94 + 72);
    v37 = &v35[*(int *)(v91 + 48)];
    v5 = v23;
    v92 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v94 + 16);
    v92(v37, v36 + v89 * i, v23);
    sub_23F51B90C();
    v38 = *(_QWORD *)(a3 + 16);
    if (v38)
    {
      v39 = v80;
      v40 = a3 + ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80));
      sub_23F617BA0();
      v41 = *(_QWORD *)(v39 + 72);
      while (1)
      {
        sub_23F362600(v40, (uint64_t)v14, type metadata accessor for ConversationItem);
        if ((sub_23F616FE8() & 1) != 0)
          break;
        sub_23F3663AC((uint64_t)v14, type metadata accessor for ConversationItem);
        v40 += v41;
        if (!--v38)
        {
          v42 = 1;
          v11 = v83;
          v5 = v84;
          goto LABEL_26;
        }
      }
      v11 = v83;
      sub_23F36262C((uint64_t)v14, (uint64_t)v83, type metadata accessor for ConversationItem);
      v42 = 0;
      v5 = v84;
    }
    else
    {
      sub_23F617BA0();
      v42 = 1;
    }
LABEL_26:
    v43 = v86;
    sub_23F36196C((uint64_t)v11, v42, 1, v86);
    swift_bridgeObjectRelease();
    if (sub_23F36195C((uint64_t)v11, 1, v43) == 1)
    {
      sub_23F3625D8((uint64_t)v11, &qword_256E78EE8);
    }
    else
    {
      v44 = v82;
      sub_23F36262C((uint64_t)v11, (uint64_t)v82, type metadata accessor for ConversationItem);
      v45 = &v44[*(int *)(v43 + 20)];
      if (v45[8])
      {
        sub_23F3663AC((uint64_t)v44, type metadata accessor for ConversationItem);
      }
      else
      {
        v46 = *(_QWORD *)v45;
        v97 = 0;
        v98 = 0xE000000000000000;
        sub_23F61C280();
        v99[7] = v46;
        sub_23F61CC1C();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v47 = v97;
        v48 = v98;
        v49 = swift_allocObject();
        *(_QWORD *)(v49 + 16) = v47;
        *(_QWORD *)(v49 + 24) = v48;
        v50 = v78;
        *v78 = v49;
        v51 = v94;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v94 + 104))(v50, v74, v5);
        v52 = *(int *)(v91 + 48);
        v53 = &v75[v52];
        v54 = &v20[v52];
        v90();
        v92(v53, (unint64_t)v54, v5);
        v55 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v51 + 32);
        v55(v76, v53, v5);
        v56 = v77;
        swift_isUniquelyReferenced_nonNull_native();
        v97 = v56;
        sub_23F375424();
        if (__OFADD__(v56[2], (v58 & 1) == 0))
          goto LABEL_43;
        v59 = v57;
        v60 = v58;
        sub_23F35D2E8(&qword_256E70428);
        if ((sub_23F61CA18() & 1) != 0)
        {
          sub_23F375424();
          if ((v60 & 1) != (v62 & 1))
            goto LABEL_45;
          v59 = v61;
        }
        v63 = v97;
        if ((v60 & 1) != 0)
        {
          v64 = v97[7] + v59 * v89;
          v65 = v94;
          v5 = v84;
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(v94 + 40))(v64, v76, v84);
        }
        else
        {
          v97[(v59 >> 6) + 8] |= 1 << v59;
          v66 = v59 * v89;
          v67 = v63[6] + v59 * v89;
          v5 = v84;
          v92((_BYTE *)v67, (unint64_t)v78, v84);
          v55((_BYTE *)(v63[7] + v66), v76, v5);
          v68 = v63[2];
          v69 = __OFADD__(v68, 1);
          v70 = v68 + 1;
          if (v69)
            goto LABEL_44;
          v63[2] = v70;
          v65 = v94;
        }
        v77 = v97;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t *, uint64_t))(v65 + 8))(v78, v5);
        sub_23F3663AC((uint64_t)v82, type metadata accessor for ConversationItem);
        (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v75, v93);
        a3 = v73;
        v11 = v83;
      }
    }
    sub_23F3625D8((uint64_t)v20, &qword_256E79138);
    v22 = v96;
    if (v96)
      goto LABEL_2;
LABEL_3:
    v25 = v95 + 1;
    if (__OFADD__(v95, 1))
      break;
    if (v25 >= v81)
      goto LABEL_41;
    v26 = *(_QWORD *)(v79 + 8 * v25);
    v27 = v95 + 1;
    if (!v26)
    {
      v27 = v95 + 2;
      if (v95 + 2 >= v81)
        goto LABEL_41;
      v26 = *(_QWORD *)(v79 + 8 * v27);
      if (!v26)
      {
        v27 = v95 + 3;
        if (v95 + 3 >= v81)
          goto LABEL_41;
        v26 = *(_QWORD *)(v79 + 8 * v27);
        if (!v26)
        {
          v27 = v95 + 4;
          if (v95 + 4 >= v81)
            goto LABEL_41;
          v26 = *(_QWORD *)(v79 + 8 * v27);
          if (!v26)
          {
            v27 = v95 + 5;
            if (v95 + 5 >= v81)
              goto LABEL_41;
            v26 = *(_QWORD *)(v79 + 8 * v27);
            if (!v26)
            {
              v28 = v95 + 6;
              while (v28 < v81)
              {
                v26 = *(_QWORD *)(v79 + 8 * v28++);
                if (v26)
                {
                  v27 = v28 - 1;
                  goto LABEL_18;
                }
              }
LABEL_41:
              swift_release();
              swift_bridgeObjectRelease();
              return (uint64_t)v77;
            }
          }
        }
      }
    }
LABEL_18:
    v23 = v5;
    v95 = v27;
    v96 = (v26 - 1) & v26;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F5184A8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void);
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  void (*v55)(_BYTE *, _BYTE *, uint64_t);
  _QWORD *v56;
  unint64_t v57;
  char v58;
  unint64_t v59;
  char v60;
  unint64_t v61;
  char v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t result;
  _BYTE v72[16];
  uint64_t v73;
  unsigned int v74;
  _BYTE *v75;
  _BYTE *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  int64_t v80;
  uint64_t *v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(void);
  uint64_t v91;
  void (*v92)(_BYTE *, unint64_t, uint64_t);
  int64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  unint64_t v98;
  _QWORD v99[8];

  v77 = a1;
  v5 = sub_23F6184B8();
  v95 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v76 = &v72[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v81 = (uint64_t *)&v72[-v8];
  v9 = sub_23F35D2E8(&qword_256E78EE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v72[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = type metadata accessor for ConversationItem(0);
  v79 = *(_QWORD *)(v86 - 8);
  v12 = MEMORY[0x24BDAC7A8](v86);
  v14 = &v72[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v82 = &v72[-v15];
  v91 = sub_23F35D2E8(&qword_256E79138);
  v16 = MEMORY[0x24BDAC7A8](v91);
  v75 = &v72[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = &v72[-v19];
  MEMORY[0x24BDAC7A8](v18);
  v85 = &v72[-v21];
  sub_23F38231C(a2, v99);
  v87 = v99[0];
  v78 = v99[1];
  v93 = v99[3];
  v22 = v99[4];
  v80 = (unint64_t)(v99[2] + 64) >> 6;
  v74 = *MEMORY[0x24BE54960];
  sub_23F617BA0();
  v83 = v11;
  v84 = v5;
  v73 = a3;
  if (!v22)
    goto LABEL_3;
LABEL_2:
  v23 = v5;
  v96 = (v22 - 1) & v22;
  v24 = __clz(__rbit64(v22)) | (v93 << 6);
  while (1)
  {
    v29 = v87;
    v30 = *(_QWORD *)(v87 + 48);
    v31 = sub_23F617000();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = v30 + *(_QWORD *)(v32 + 72) * v24;
    v88 = v32;
    v34 = *(void (**)(void))(v32 + 16);
    v35 = v85;
    v94 = v31;
    v90 = v34;
    ((void (*)(_BYTE *, uint64_t))v34)(v85, v33);
    v36 = *(_QWORD *)(v29 + 56);
    v89 = *(_QWORD *)(v95 + 72);
    v37 = &v35[*(int *)(v91 + 48)];
    v5 = v23;
    v92 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v95 + 16);
    v92(v37, v36 + v89 * v24, v23);
    sub_23F51B90C();
    v38 = *(_QWORD *)(a3 + 16);
    if (v38)
    {
      v39 = v79;
      v40 = a3 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
      sub_23F617BA0();
      v41 = *(_QWORD *)(v39 + 72);
      while (1)
      {
        sub_23F362600(v40, (uint64_t)v14, type metadata accessor for ConversationItem);
        if ((sub_23F616FE8() & 1) != 0)
          break;
        sub_23F3663AC((uint64_t)v14, type metadata accessor for ConversationItem);
        v40 += v41;
        if (!--v38)
        {
          v42 = 1;
          v11 = v83;
          v5 = v84;
          goto LABEL_26;
        }
      }
      v11 = v83;
      sub_23F36262C((uint64_t)v14, (uint64_t)v83, type metadata accessor for ConversationItem);
      v42 = 0;
      v5 = v84;
    }
    else
    {
      sub_23F617BA0();
      v42 = 1;
    }
LABEL_26:
    v43 = v86;
    sub_23F36196C((uint64_t)v11, v42, 1, v86);
    swift_bridgeObjectRelease();
    if (sub_23F36195C((uint64_t)v11, 1, v43) == 1)
    {
      sub_23F3625D8((uint64_t)v11, &qword_256E78EE8);
    }
    else
    {
      v44 = v82;
      sub_23F36262C((uint64_t)v11, (uint64_t)v82, type metadata accessor for ConversationItem);
      v45 = &v44[*(int *)(v43 + 20)];
      if (v45[8] == 1)
      {
        v46 = *(_QWORD *)v45;
        v97 = 0;
        v98 = 0xE000000000000000;
        sub_23F61C280();
        v99[7] = v46;
        sub_23F61CC1C();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v47 = v97;
        v48 = v98;
        v49 = swift_allocObject();
        *(_QWORD *)(v49 + 16) = v47;
        *(_QWORD *)(v49 + 24) = v48;
        v50 = v81;
        *v81 = v49;
        v51 = v95;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v95 + 104))(v50, v74, v5);
        v52 = *(int *)(v91 + 48);
        v53 = &v75[v52];
        v54 = &v20[v52];
        v90();
        v92(v53, (unint64_t)v54, v5);
        v55 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v51 + 32);
        v55(v76, v53, v5);
        v56 = v77;
        swift_isUniquelyReferenced_nonNull_native();
        v97 = v56;
        sub_23F375424();
        if (__OFADD__(v56[2], (v58 & 1) == 0))
          goto LABEL_43;
        v59 = v57;
        v60 = v58;
        sub_23F35D2E8(&qword_256E70428);
        if ((sub_23F61CA18() & 1) != 0)
        {
          sub_23F375424();
          if ((v60 & 1) != (v62 & 1))
            goto LABEL_45;
          v59 = v61;
        }
        v63 = v97;
        if ((v60 & 1) != 0)
        {
          v64 = v97[7] + v59 * v89;
          v65 = v95;
          v5 = v84;
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(v95 + 40))(v64, v76, v84);
        }
        else
        {
          v97[(v59 >> 6) + 8] |= 1 << v59;
          v66 = v59 * v89;
          v67 = v63[6] + v59 * v89;
          v5 = v84;
          v92((_BYTE *)v67, (unint64_t)v81, v84);
          v55((_BYTE *)(v63[7] + v66), v76, v5);
          v68 = v63[2];
          v69 = __OFADD__(v68, 1);
          v70 = v68 + 1;
          if (v69)
            goto LABEL_44;
          v63[2] = v70;
          v65 = v95;
        }
        v77 = v97;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t *, uint64_t))(v65 + 8))(v81, v5);
        sub_23F3663AC((uint64_t)v82, type metadata accessor for ConversationItem);
        (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v75, v94);
        a3 = v73;
        v11 = v83;
      }
      else
      {
        sub_23F3663AC((uint64_t)v44, type metadata accessor for ConversationItem);
      }
    }
    sub_23F3625D8((uint64_t)v20, &qword_256E79138);
    v22 = v96;
    if (v96)
      goto LABEL_2;
LABEL_3:
    v25 = v93 + 1;
    if (__OFADD__(v93, 1))
      break;
    if (v25 >= v80)
      goto LABEL_41;
    v26 = *(_QWORD *)(v78 + 8 * v25);
    v27 = v93 + 1;
    if (!v26)
    {
      v27 = v93 + 2;
      if (v93 + 2 >= v80)
        goto LABEL_41;
      v26 = *(_QWORD *)(v78 + 8 * v27);
      if (!v26)
      {
        v27 = v93 + 3;
        if (v93 + 3 >= v80)
          goto LABEL_41;
        v26 = *(_QWORD *)(v78 + 8 * v27);
        if (!v26)
        {
          v27 = v93 + 4;
          if (v93 + 4 >= v80)
            goto LABEL_41;
          v26 = *(_QWORD *)(v78 + 8 * v27);
          if (!v26)
          {
            v27 = v93 + 5;
            if (v93 + 5 >= v80)
              goto LABEL_41;
            v26 = *(_QWORD *)(v78 + 8 * v27);
            if (!v26)
            {
              v28 = v93 + 6;
              while (v28 < v80)
              {
                v26 = *(_QWORD *)(v78 + 8 * v28++);
                if (v26)
                {
                  v27 = v28 - 1;
                  goto LABEL_18;
                }
              }
LABEL_41:
              swift_release();
              swift_bridgeObjectRelease();
              return (uint64_t)v77;
            }
          }
        }
      }
    }
LABEL_18:
    v23 = v5;
    v96 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v27 << 6);
    v93 = v27;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F518C88(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(void);
  char *v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t result;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  unint64_t v69;
  char *v70;
  char *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  unint64_t v90;
  _QWORD v91[8];

  v72 = a1;
  v87 = sub_23F61B5D8();
  v84 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v71 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E78EE8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for ConversationItem(0);
  v74 = *(_QWORD *)(v79 - 8);
  v9 = MEMORY[0x24BDAC7A8](v79);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v76 = (uint64_t)&v65 - v12;
  v83 = sub_23F35D2E8(&qword_256E79140);
  v13 = MEMORY[0x24BDAC7A8](v83);
  v70 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v65 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v78 = (char *)&v65 - v18;
  sub_23F38231C(a2, v91);
  v80 = v91[0];
  v73 = v91[1];
  v85 = v91[3];
  v19 = v91[4];
  v75 = (unint64_t)(v91[2] + 64) >> 6;
  sub_23F617BA0();
  v77 = v8;
  v66 = a3;
  if (!v19)
    goto LABEL_3;
LABEL_2:
  v88 = (v19 - 1) & v19;
  v20 = __clz(__rbit64(v19)) | (v85 << 6);
  while (1)
  {
    v25 = v80;
    v26 = *(_QWORD *)(v80 + 48);
    v27 = sub_23F617000();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = v26 + *(_QWORD *)(v28 + 72) * v20;
    v81 = v28;
    v30 = *(void (**)(void))(v28 + 16);
    v31 = v78;
    v86 = v27;
    ((void (*)(char *, uint64_t))v30)(v78, v29);
    v32 = *(_QWORD *)(v25 + 56);
    v82 = *(_QWORD *)(v84 + 72);
    v33 = *(void (**)(char *, unint64_t, uint64_t))(v84 + 16);
    v33(&v31[*(int *)(v83 + 48)], v32 + v82 * v20, v87);
    sub_23F51B90C();
    v34 = *(_QWORD *)(a3 + 16);
    if (v34)
    {
      v35 = v74;
      v36 = a3 + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80));
      sub_23F617BA0();
      v37 = *(_QWORD *)(v35 + 72);
      while (1)
      {
        sub_23F362600(v36, (uint64_t)v11, type metadata accessor for ConversationItem);
        if ((sub_23F616FE8() & 1) != 0)
          break;
        sub_23F3663AC((uint64_t)v11, type metadata accessor for ConversationItem);
        v36 += v37;
        if (!--v34)
        {
          v38 = 1;
          v8 = v77;
          goto LABEL_26;
        }
      }
      v8 = v77;
      sub_23F36262C((uint64_t)v11, (uint64_t)v77, type metadata accessor for ConversationItem);
      v38 = 0;
    }
    else
    {
      sub_23F617BA0();
      v38 = 1;
    }
LABEL_26:
    v39 = v79;
    sub_23F36196C((uint64_t)v8, v38, 1, v79);
    swift_bridgeObjectRelease();
    if (sub_23F36195C((uint64_t)v8, 1, v39) == 1)
    {
      sub_23F3625D8((uint64_t)v8, &qword_256E78EE8);
    }
    else
    {
      v40 = v76;
      sub_23F36262C((uint64_t)v8, v76, type metadata accessor for ConversationItem);
      v41 = v40 + *(int *)(v39 + 20);
      if (*(unsigned __int8 *)(v41 + 8) >= 2u)
      {
        sub_23F3663AC(v40, type metadata accessor for ConversationItem);
      }
      else
      {
        v42 = *(_QWORD *)v41;
        v89 = 0;
        v90 = 0xE000000000000000;
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v91[7] = v42;
        sub_23F61CC1C();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v43 = (uint64_t)v89;
        v69 = v90;
        v44 = *(int *)(v83 + 48);
        v45 = &v70[v44];
        v46 = &v17[v44];
        v30();
        v47 = v46;
        v48 = v87;
        v33(v45, (unint64_t)v47, v87);
        v67 = *(void (**)(char *, char *, uint64_t))(v84 + 32);
        v67(v71, v45, v48);
        v49 = v72;
        swift_isUniquelyReferenced_nonNull_native();
        v89 = v49;
        v68 = v43;
        v50 = v43;
        v51 = v69;
        v52 = sub_23F3754D4(v50, v69);
        if (__OFADD__(v49[2], (v53 & 1) == 0))
          goto LABEL_43;
        v54 = v52;
        v55 = v53;
        sub_23F35D2E8(&qword_256E79148);
        v56 = sub_23F61CA18();
        v8 = v77;
        if ((v56 & 1) != 0)
        {
          v57 = sub_23F3754D4(v68, v51);
          if ((v55 & 1) != (v58 & 1))
            goto LABEL_45;
          v54 = v57;
        }
        v59 = v89;
        if ((v55 & 1) != 0)
        {
          (*(void (**)(unint64_t, char *, uint64_t))(v84 + 40))(v89[7] + v54 * v82, v71, v87);
        }
        else
        {
          v89[(v54 >> 6) + 8] |= 1 << v54;
          v60 = (_QWORD *)(v59[6] + 16 * v54);
          *v60 = v68;
          v60[1] = v51;
          v67((char *)(v59[7] + v54 * v82), v71, v87);
          v61 = v59[2];
          v62 = __OFADD__(v61, 1);
          v63 = v61 + 1;
          if (v62)
            goto LABEL_44;
          v59[2] = v63;
          sub_23F617BA0();
        }
        v72 = v89;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23F3663AC(v76, type metadata accessor for ConversationItem);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v70, v86);
        a3 = v66;
      }
    }
    sub_23F3625D8((uint64_t)v17, &qword_256E79140);
    v19 = v88;
    if (v88)
      goto LABEL_2;
LABEL_3:
    v21 = v85 + 1;
    if (__OFADD__(v85, 1))
      break;
    if (v21 >= v75)
      goto LABEL_41;
    v22 = *(_QWORD *)(v73 + 8 * v21);
    v23 = v85 + 1;
    if (!v22)
    {
      v23 = v85 + 2;
      if (v85 + 2 >= v75)
        goto LABEL_41;
      v22 = *(_QWORD *)(v73 + 8 * v23);
      if (!v22)
      {
        v23 = v85 + 3;
        if (v85 + 3 >= v75)
          goto LABEL_41;
        v22 = *(_QWORD *)(v73 + 8 * v23);
        if (!v22)
        {
          v23 = v85 + 4;
          if (v85 + 4 >= v75)
            goto LABEL_41;
          v22 = *(_QWORD *)(v73 + 8 * v23);
          if (!v22)
          {
            v23 = v85 + 5;
            if (v85 + 5 >= v75)
              goto LABEL_41;
            v22 = *(_QWORD *)(v73 + 8 * v23);
            if (!v22)
            {
              v24 = v85 + 6;
              while (v24 < v75)
              {
                v22 = *(_QWORD *)(v73 + 8 * v24++);
                if (v22)
                {
                  v23 = v24 - 1;
                  goto LABEL_18;
                }
              }
LABEL_41:
              swift_release();
              swift_bridgeObjectRelease();
              return (uint64_t)v72;
            }
          }
        }
      }
    }
LABEL_18:
    v88 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v23 << 6);
    v85 = v23;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F5193DC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(uint64_t, unint64_t, uint64_t);
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  _QWORD *v50;
  char *v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[6];
  _QWORD *v87;

  v5 = v4;
  v75 = a4;
  v77 = a3;
  v8 = sub_23F6184B8();
  v9 = *(_QWORD **)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v85 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v74 = (uint64_t)&v68 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v68 - v14;
  v73 = sub_23F35D2E8(&qword_256E753A8);
  v16 = MEMORY[0x24BDAC7A8](v73);
  v84 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v72 = (uint64_t)&v68 - v18;
  sub_23F38231C(a2, v86);
  v76 = v86[0];
  v69 = v86[1];
  v78 = v86[3];
  v19 = v86[4];
  v70 = (unint64_t)(v86[2] + 64) >> 6;
  sub_23F617BA0();
  v71 = v9;
  while (1)
  {
    v83 = a1;
    if (v19)
    {
      v80 = (v19 - 1) & v19;
      v20 = __clz(__rbit64(v19)) | (v78 << 6);
    }
    else
    {
      v21 = v78 + 1;
      if (__OFADD__(v78, 1))
        goto LABEL_33;
      if (v21 >= v70)
        goto LABEL_30;
      v22 = *(_QWORD *)(v69 + 8 * v21);
      if (!v22)
      {
        v23 = v78 + 2;
        if (v78 + 2 >= v70)
          goto LABEL_30;
        v22 = *(_QWORD *)(v69 + 8 * v23);
        if (v22)
          goto LABEL_13;
        v23 = v78 + 3;
        if (v78 + 3 >= v70)
          goto LABEL_30;
        v22 = *(_QWORD *)(v69 + 8 * v23);
        if (v22)
          goto LABEL_13;
        v23 = v78 + 4;
        if (v78 + 4 >= v70)
          goto LABEL_30;
        v22 = *(_QWORD *)(v69 + 8 * v23);
        if (v22)
        {
LABEL_13:
          v21 = v23;
        }
        else
        {
          v21 = v78 + 5;
          if (v78 + 5 >= v70)
            goto LABEL_30;
          v22 = *(_QWORD *)(v69 + 8 * v21);
          if (!v22)
          {
            v66 = v78 + 6;
            while (v66 < v70)
            {
              v22 = *(_QWORD *)(v69 + 8 * v66++);
              if (v22)
              {
                v21 = v66 - 1;
                goto LABEL_14;
              }
            }
LABEL_30:
            swift_release();
            swift_bridgeObjectRelease();
            return (uint64_t)a1;
          }
        }
      }
LABEL_14:
      v80 = (v22 - 1) & v22;
      v20 = __clz(__rbit64(v22)) + (v21 << 6);
      v78 = v21;
    }
    v24 = v76;
    v25 = *(_QWORD *)(v76 + 48);
    v82 = v9[9];
    v26 = v82 * v20;
    v27 = (void (*)(uint64_t, unint64_t, uint64_t))v9[2];
    v28 = v72;
    v27(v72, v25 + v82 * v20, v8);
    v29 = *(_QWORD *)(v24 + 56) + v26;
    v30 = v73;
    v31 = v28 + *(int *)(v73 + 48);
    v79 = (void (*)(uint64_t, char *, uint64_t))v27;
    v27(v31, v29, v8);
    v32 = v84;
    sub_23F51B90C();
    v33 = v77;
    sub_23F617BA0();
    v34 = v8;
    v35 = v15;
    v36 = v75;
    sub_23F608D9C(v32, v33, v75, v37, v38, v39, v40, v41, v68, v69, v70, (uint64_t)v71, v72, v73, v74, v75, v76, v77, v78,
      (uint64_t)v79);
    v42 = v32 + *(int *)(v30 + 48);
    sub_23F617BA0();
    v43 = v74;
    sub_23F608D9C(v42, v33, v36, v44, v45, v46, v47, v48, v68, v69, v70, (uint64_t)v71, v72, v73, v74, v75, v76, v77, v78,
      (uint64_t)v79);
    v81 = v5;
    v49 = (void (*)(char *, uint64_t, uint64_t))v9[4];
    v49(v85, v43, v34);
    v50 = v83;
    swift_isUniquelyReferenced_nonNull_native();
    v87 = v50;
    v51 = v35;
    sub_23F375424();
    if (__OFADD__(v50[2], (v53 & 1) == 0))
      break;
    v54 = v52;
    v55 = v53;
    sub_23F35D2E8(&qword_256E70428);
    v15 = v51;
    if ((sub_23F61CA18() & 1) != 0)
    {
      sub_23F375424();
      if ((v55 & 1) != (v57 & 1))
        goto LABEL_34;
      v54 = v56;
    }
    v58 = v87;
    if ((v55 & 1) != 0)
    {
      v59 = v87[7] + v54 * v82;
      v60 = (uint64_t)v71;
      v8 = v34;
      ((void (*)(uint64_t, char *, uint64_t))v71[5])(v59, v85, v34);
    }
    else
    {
      v87[(v54 >> 6) + 8] |= 1 << v54;
      v61 = v54 * v82;
      v62 = v58[6] + v54 * v82;
      v8 = v34;
      v79(v62, v51, v34);
      v49((char *)(v58[7] + v61), (uint64_t)v85, v34);
      v63 = v58[2];
      v64 = __OFADD__(v63, 1);
      v65 = v63 + 1;
      if (v64)
        goto LABEL_32;
      v58[2] = v65;
      v60 = (uint64_t)v71;
    }
    a1 = v87;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v8);
    sub_23F3625D8(v84, &qword_256E753A8);
    v19 = v80;
    v5 = v81;
    v9 = (_QWORD *)v60;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F5198CC(uint64_t a1, uint64_t a2)
{
  return sub_23F5198F0(a1, a2, (uint64_t)sub_23F522E68, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_23F51A744);
}

uint64_t sub_23F5198F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  v10 = v12;
  swift_bridgeObjectRelease();
  if (v4)
    swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23F519978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23F51999C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;

  v21 = v0[5];
  v22 = v0[7];
  v1 = (_QWORD *)v0[2];
  sub_23F519B74(v0[3]);
  sub_23F384324();
  sub_23F51BBE0();
  v19 = sub_23F517CD0(v2, v3, v4);
  sub_23F384324();
  sub_23F617BA0();
  sub_23F51BBE0();
  v8 = sub_23F518C88(v5, v6, v7);
  swift_bridgeObjectRelease();
  sub_23F384324();
  sub_23F51BBE0();
  v12 = sub_23F5184A8(v9, v10, v11);
  swift_bridgeObjectRelease();
  sub_23F384324();
  sub_23F617BA0();
  sub_23F51BBE0();
  v17 = sub_23F5193DC(v13, v14, v15, v16);
  swift_bridgeObjectRelease();
  *v1 = v21;
  v1[1] = v17;
  v1[2] = v22;
  v1[3] = v19;
  v1[4] = v12;
  v1[5] = v8;
  v20 = (uint64_t (*)(void))v0[1];
  sub_23F617BA0();
  sub_23F617BA0();
  return v20();
}

void sub_23F519AC0()
{
  sub_23F51BBD4();
  if ((sub_23F61BB6C() & 1) != 0)
  {
    type metadata accessor for ParameterPromptMap(0);
    sub_23F48FFE8();
  }
}

void sub_23F519B08()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_23F51BBD4();
  if ((sub_23F5E6578(v0, v1) & 1) != 0
    && (type metadata accessor for ToolPromptMap(0), sub_23F4904F4(), (v2 & 1) != 0))
  {
    sub_23F48FFE8();
  }
  else
  {
    sub_23F362B80();
  }
}

uint64_t sub_23F519B74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t *, uint64_t);
  unint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;

  v3 = sub_23F6184B8();
  v73 = *(_QWORD *)(v3 - 8);
  v74 = v3;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F362AAC();
  v72 = (uint64_t *)(v5 - v6);
  MEMORY[0x24BDAC7A8](v7);
  v64 = (uint64_t *)((char *)&v61 - v8);
  v9 = sub_23F617000();
  v68 = *(_QWORD *)(v9 - 8);
  v69 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  v76 = v11;
  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3D9BA4();
  v13 = sub_23F617D08();
  v71 = *(_QWORD *)(v13 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  v70 = v15;
  v77 = type metadata accessor for ConversationItem(0);
  v16 = *(_QWORD **)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  sub_23F362AAC();
  v19 = v17 - v18;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v75 = (uint64_t)&v61 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v61 - v23;
  v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v78 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v26 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  v66 = v13;
  v67 = v1;
  v65 = v19;
  if (v26)
  {
    v27 = *((unsigned __int8 *)v16 + 80);
    v62 = v16;
    v63 = a1;
    v28 = v16[9];
    v29 = (v27 + 32) & ~v27;
    v30 = a1 + v29;
    do
    {
      sub_23F362600(v30, (uint64_t)v24, type metadata accessor for ConversationItem);
      if (v24[*(int *)(v77 + 20) + 8] > 1u)
      {
        sub_23F3663AC((uint64_t)v24, type metadata accessor for ConversationItem);
      }
      else
      {
        sub_23F36262C((uint64_t)v24, v75, type metadata accessor for ConversationItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23F37BFF4();
        v31 = v78;
        v32 = v78[2];
        if (v32 >= v78[3] >> 1)
        {
          sub_23F37BFF4();
          v31 = v78;
        }
        v31[2] = v32 + 1;
        sub_23F36262C(v75, (uint64_t)v31 + v29 + v32 * v28, type metadata accessor for ConversationItem);
      }
      v30 += v28;
      --v26;
    }
    while (v26);
    v25 = v78;
    v13 = v66;
    v1 = v67;
    v19 = v65;
    v16 = v62;
  }
  swift_bridgeObjectRelease();
  v33 = v25[2];
  if (!v33)
  {
    v36 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_28:
    swift_release();
    return (uint64_t)v36;
  }
  v34 = (uint64_t)v25 + ((*((unsigned __int8 *)v16 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v16 + 80));
  LODWORD(v75) = *MEMORY[0x24BE54918];
  v35 = v16[9];
  v62 = v25;
  swift_retain();
  v36 = (_QWORD *)MEMORY[0x24BEE4B00];
  v38 = v68;
  v37 = v69;
  v63 = v35;
  while (1)
  {
    sub_23F362600(v34, v19, type metadata accessor for ConversationItem);
    sub_23F3F81F0(v19 + *(int *)(v77 + 28), v1);
    if (sub_23F36195C(v1, 1, v13) == 1)
    {
      sub_23F3625D8(v1, &qword_256E6FFA0);
      goto LABEL_25;
    }
    v39 = v71;
    v40 = v36;
    v41 = v70;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v70, v1, v13);
    v42 = v19;
    v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16);
    v43(v76, v42, v37);
    v44 = swift_allocBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v45, v41, v13);
    v46 = v64;
    *v64 = v44;
    v48 = v73;
    v47 = v74;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v73 + 104))(v46, v75, v74);
    v49 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v48 + 32);
    v49((uint64_t)v72, v46, v47);
    swift_isUniquelyReferenced_nonNull_native();
    v78 = v40;
    sub_23F3757B0();
    if (__OFADD__(v40[2], (v51 & 1) == 0))
      break;
    v52 = v50;
    v53 = v51;
    sub_23F35D2E8(&qword_256E79150);
    if ((sub_23F61CA18() & 1) != 0)
    {
      sub_23F3757B0();
      if ((v53 & 1) != (v55 & 1))
        goto LABEL_31;
      v52 = v54;
    }
    v56 = v78;
    if ((v53 & 1) != 0)
    {
      (*(void (**)(unint64_t, uint64_t *, uint64_t))(v73 + 40))(v78[7] + *(_QWORD *)(v73 + 72) * v52, v72, v74);
      v38 = v68;
      v37 = v69;
    }
    else
    {
      v78[(v52 >> 6) + 8] |= 1 << v52;
      v38 = v68;
      v37 = v69;
      v43(v56[6] + *(_QWORD *)(v68 + 72) * v52, v76, v69);
      v49(v56[7] + *(_QWORD *)(v73 + 72) * v52, v72, v74);
      v57 = v56[2];
      v58 = __OFADD__(v57, 1);
      v59 = v57 + 1;
      if (v58)
        goto LABEL_30;
      v56[2] = v59;
    }
    v36 = v78;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v76, v37);
    v13 = v66;
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v66);
    v1 = v67;
    v19 = v65;
    v35 = v63;
LABEL_25:
    sub_23F3663AC(v19, type metadata accessor for ConversationItem);
    v34 += v35;
    if (!--v33)
    {
      swift_release();
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F51A0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F617BA0();
  v7 = sub_23F617BA0();
  v8 = sub_23F5198F0(v7, a1, (uint64_t)sub_23F51A6A4, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_23F51AE60);
  sub_23F617BA0();
  v9 = sub_23F617BA0();
  sub_23F5198F0(v9, a2, (uint64_t)sub_23F522E68, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_23F51A744);
  sub_23F384324();
  sub_23F617BA0();
  sub_23F385EB0();
  sub_23F617BA0();
  v10 = sub_23F617BA0();
  sub_23F5198F0(v10, a4, (uint64_t)sub_23F51A648, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_23F51AAC4);
  return v8;
}

uint64_t sub_23F51A1E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[2];
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t *v51;

  v47 = a2;
  v51 = a3;
  sub_23F35D2E8(&qword_256E78EE8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v46 = v7;
  v8 = type metadata accessor for ConversationItem(0);
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F362AAC();
  v12 = v10 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v43 = (uint64_t)v40 - v14;
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F617000();
  v48 = *(_QWORD *)(v18 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3D9BA4();
  v20 = sub_23F6184B8();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v50 = a1;
  v49(v23, a1, v20);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v23, v20);
  if (v24 != *MEMORY[0x24BE54960])
  {
    sub_23F51BBEC(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    goto LABEL_16;
  }
  v41 = v24;
  v42 = v4;
  sub_23F51BBEC(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 96));
  sub_23F617BA0();
  swift_release();
  sub_23F616FD0();
  swift_bridgeObjectRelease();
  if (sub_23F36195C((uint64_t)v17, 1, v18) == 1)
  {
    sub_23F3625D8((uint64_t)v17, &qword_256E6FB20);
LABEL_16:
    v38 = (uint64_t)v51;
    v49((char *)v51, v50, v20);
    return sub_23F36196C(v38, 0, 1, v20);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v3, v17, v18);
  v25 = *(_QWORD *)(v47 + 16);
  v40[1] = v18;
  if (v25)
  {
    v26 = v47 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
    v27 = *(_QWORD *)(v44 + 72);
    sub_23F384324();
    while (1)
    {
      sub_23F362600(v26, v12, type metadata accessor for ConversationItem);
      if ((sub_23F616FE8() & 1) != 0)
        break;
      sub_23F3663AC(v12, type metadata accessor for ConversationItem);
      v26 += v27;
      if (!--v25)
      {
        v28 = 1;
        v29 = v46;
        goto LABEL_12;
      }
    }
    v30 = v12;
    v29 = v46;
    sub_23F36262C(v30, v46, type metadata accessor for ConversationItem);
    v28 = 0;
  }
  else
  {
    sub_23F384324();
    v28 = 1;
    v29 = v46;
  }
LABEL_12:
  v31 = v45;
  sub_23F36196C(v29, v28, 1, v45);
  swift_bridgeObjectRelease();
  if (sub_23F36195C(v29, 1, v31) == 1)
  {
    sub_23F51BBC0();
    sub_23F3625D8(v29, &qword_256E78EE8);
    goto LABEL_16;
  }
  v32 = v43;
  sub_23F36262C(v29, v43, type metadata accessor for ConversationItem);
  sub_23F3F6720(*(_QWORD *)(v32 + *(int *)(v31 + 20)), *(_BYTE *)(v32 + *(int *)(v31 + 20) + 8));
  v34 = v33;
  v36 = v35;
  sub_23F3663AC(v32, type metadata accessor for ConversationItem);
  sub_23F51BBC0();
  if (!v36)
    goto LABEL_16;
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v34;
  *(_QWORD *)(v37 + 24) = v36;
  v38 = (uint64_t)v51;
  *v51 = v37;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 104))(v38, v41, v20);
  return sub_23F36196C(v38, 0, 1, v20);
}

void sub_23F51A5C0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;

  sub_23F51BBD4();
  sub_23F490854();
  if ((v2 & 1) != 0)
  {
    sub_23F48FFE8();
    if ((v3 & 1) != 0)
    {
      sub_23F3C4A3C(*(_QWORD **)(v1 + 16), *(_QWORD **)(v0 + 16));
      if ((v4 & 1) != 0)
      {
        sub_23F48FFE8();
        if ((v5 & 1) != 0)
        {
          sub_23F48FFE8();
          if ((v6 & 1) != 0)
            sub_23F490BF0();
        }
      }
    }
  }
}

uint64_t sub_23F51A648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(sub_23F35D2E8(&qword_256E79140) + 48);
  v5 = a2 + *(int *)(sub_23F35D2E8(&qword_256E79158) + 48);
  return sub_23F5E1BB4(a2, v5, a1, v4);
}

uint64_t sub_23F51A6A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23F51A6DC(a1, &qword_256E753E0, &qword_256E79168, (uint64_t (*)(char *, _QWORD, _QWORD, char *))sub_23F5E1C40, a2);
}

uint64_t sub_23F51A6C0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23F51A6DC(a1, &qword_256E708C8, &qword_256E79188, (uint64_t (*)(char *, _QWORD, _QWORD, char *))sub_23F5E1D2C, a2);
}

uint64_t sub_23F51A6DC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(char *, _QWORD, _QWORD, char *)@<X3>, uint64_t *a5@<X8>)
{
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v9 = (char *)a1 + *(int *)(sub_23F35D2E8(a2) + 48);
  v10 = sub_23F35D2E8(a3);
  result = a4((char *)a5 + *(int *)(v10 + 48), *a1, a1[1], v9);
  *a5 = result;
  a5[1] = v12;
  return result;
}

uint64_t sub_23F51A744(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t result;
  _QWORD v49[2];
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;

  v10 = sub_23F6184B8();
  v52 = *(_QWORD *)(v10 - 8);
  v53 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v50 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v55 = (char *)v49 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v49 - v15;
  v17 = sub_23F35D2E8(&qword_256E70EE0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F5E2968(&v54, a1, a2, a3);
  v49[1] = a1;
  sub_23F617BA0();
  v49[0] = a3;
  swift_retain();
  sub_23F5E2D50();
  v20 = sub_23F35D2E8(&qword_256E704E0);
  if (sub_23F36195C((uint64_t)v19, 1, v20) == 1)
  {
LABEL_15:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23F382E18();
    return swift_release();
  }
  v21 = v53;
  v22 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
  v51 = v19;
  while (1)
  {
    v23 = &v19[*(int *)(v20 + 48)];
    v24 = v53;
    v22(v16, v19, v53);
    v22(v55, v23, v24);
    v25 = *a5;
    sub_23F375424();
    v28 = v27;
    v29 = *(_QWORD *)(v25 + 16);
    v30 = (v26 & 1) == 0;
    if (__OFADD__(v29, v30))
      break;
    v31 = v26;
    if (*(_QWORD *)(v25 + 24) >= v29 + v30)
    {
      if ((a4 & 1) != 0)
      {
        if ((v26 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        sub_23F35D2E8(&qword_256E70428);
        sub_23F61CA24();
        if ((v31 & 1) != 0)
          goto LABEL_10;
      }
    }
    else
    {
      sub_23F513EC4();
      sub_23F375424();
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_18;
      v28 = v32;
      if ((v31 & 1) != 0)
      {
LABEL_10:
        v34 = v52;
        v35 = v50;
        v36 = v22;
        v37 = v16;
        v38 = a5;
        v39 = v55;
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v50, v55, v21);
        v40 = *(void (**)(char *, uint64_t))(v34 + 8);
        v41 = v39;
        a5 = v38;
        v16 = v37;
        v22 = v36;
        v40(v41, v21);
        v40(v16, v21);
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 40))(*(_QWORD *)(*a5 + 56) + *(_QWORD *)(v34 + 72) * v28, v35, v21);
        goto LABEL_14;
      }
    }
    v42 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    v43 = v53;
    v44 = *(_QWORD *)(v52 + 72) * v28;
    v22((char *)(v42[6] + v44), v16, v53);
    v22((char *)(v42[7] + v44), v55, v43);
    v45 = v42[2];
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
      goto LABEL_17;
    v42[2] = v47;
LABEL_14:
    v19 = v51;
    sub_23F5E2D50();
    v20 = sub_23F35D2E8(&qword_256E704E0);
    a4 = 1;
    if (sub_23F36195C((uint64_t)v19, 1, v20) == 1)
      goto LABEL_15;
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F51AAC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  char v29;
  unint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  _QWORD v39[3];
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;

  v46 = a5;
  v44 = sub_23F61B5D8();
  v9 = *(_QWORD *)(v44 - 8);
  v10 = MEMORY[0x24BDAC7A8](v44);
  v40 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v39 - v12;
  v43 = sub_23F617000();
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F35D2E8(&qword_256E79160);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F5E2968(&v45, a1, a2, a3);
  v39[2] = a1;
  sub_23F617BA0();
  v39[1] = a3;
  swift_retain();
  sub_23F5E2FCC();
  v19 = sub_23F35D2E8(&qword_256E79158);
  if (sub_23F36195C((uint64_t)v18, 1, v19) == 1)
  {
LABEL_15:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23F382E18();
    return swift_release();
  }
  v42 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
  while (1)
  {
    v20 = &v18[*(int *)(v19 + 48)];
    v42(v15, v18, v43);
    v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v22 = v13;
    v21(v13, v20, v44);
    v23 = *v46;
    sub_23F3757B0();
    v26 = v25;
    v27 = *(_QWORD *)(v23 + 16);
    v28 = (v24 & 1) == 0;
    if (__OFADD__(v27, v28))
      break;
    v29 = v24;
    if (*(_QWORD *)(v23 + 24) >= v27 + v28)
    {
      if ((a4 & 1) != 0)
      {
        if ((v24 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        sub_23F35D2E8(&qword_256E70478);
        sub_23F61CA24();
        if ((v29 & 1) != 0)
          goto LABEL_10;
      }
    }
    else
    {
      sub_23F51486C();
      sub_23F3757B0();
      if ((v29 & 1) != (v31 & 1))
        goto LABEL_18;
      v26 = v30;
      if ((v29 & 1) != 0)
      {
LABEL_10:
        v32 = v40;
        v13 = v22;
        v33 = v44;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v40, v22, v44);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v22, v33);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v43);
        (*(void (**)(unint64_t, char *, uint64_t))(v9 + 40))(*(_QWORD *)(*v46 + 56) + *(_QWORD *)(v9 + 72) * v26, v32, v33);
        goto LABEL_14;
      }
    }
    v34 = (_QWORD *)*v46;
    *(_QWORD *)(*v46 + 8 * (v26 >> 6) + 64) |= 1 << v26;
    v42((char *)(v34[6] + *(_QWORD *)(v41 + 72) * v26), v15, v43);
    v13 = v22;
    v21((char *)(v34[7] + *(_QWORD *)(v9 + 72) * v26), v22, v44);
    v35 = v34[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_17;
    v34[2] = v37;
LABEL_14:
    sub_23F5E2FCC();
    v19 = sub_23F35D2E8(&qword_256E79158);
    a4 = 1;
    if (sub_23F36195C((uint64_t)v18, 1, v19) == 1)
      goto LABEL_15;
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F51AE60(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v58;
  int v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  _QWORD *v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  _QWORD *v71;
  char v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  _BOOL8 v76;
  char v77;
  unint64_t v78;
  char v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  unint64_t v91;
  uint64_t v92;
  _BOOL8 v93;
  char v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[3];
  unint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;

  v117 = a5;
  v9 = sub_23F6184B8();
  v121 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v118 = (char *)v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v123 = (char *)v107 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v125 = (char *)v107 - v14;
  v15 = sub_23F35D2E8(&qword_256E70EE0);
  MEMORY[0x24BDAC7A8](v15);
  v122 = (char *)v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ParameterPromptMap(0);
  v120 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v119 = (uint64_t)v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v124 = (uint64_t)v107 - v20;
  v21 = sub_23F35D2E8(&qword_256E79170);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (_QWORD *)((char *)v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = type metadata accessor for ToolPromptMap(0);
  v112 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v25);
  v111 = (uint64_t)v107 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v116 = (uint64_t)v107 - v30;
  v31 = sub_23F35D2E8(&qword_256E79178);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (_QWORD *)((char *)v107 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F5E2968(&v127, a1, a2, a3);
  v107[1] = a1;
  sub_23F617BA0();
  v107[0] = a3;
  swift_retain();
  sub_23F5E319C();
  v34 = sub_23F35D2E8(&qword_256E79168);
  if (sub_23F36195C((uint64_t)v33, 1, v34) == 1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23F382E18();
    return swift_release();
  }
  v114 = v24;
  v113 = v27;
  v110 = v33;
  while (1)
  {
    v37 = *v33;
    v36 = v33[1];
    v38 = v116;
    sub_23F36262C((uint64_t)v33 + *(int *)(v34 + 48), v116, type metadata accessor for ToolPromptMap);
    v39 = *v117;
    v41 = sub_23F3754D4(v37, v36);
    v42 = *(_QWORD *)(v39 + 16);
    v43 = (v40 & 1) == 0;
    v44 = v42 + v43;
    if (__OFADD__(v42, v43))
      goto LABEL_49;
    v45 = v40;
    v46 = *(_QWORD *)(v39 + 24);
    v115 = v36;
    if (v46 >= v44)
    {
      if ((a4 & 1) != 0)
      {
        v47 = v117;
      }
      else
      {
        sub_23F35D2E8(&qword_256E79180);
        v47 = v117;
        sub_23F61CA24();
      }
    }
    else
    {
      v47 = v117;
      sub_23F514668();
      v48 = sub_23F3754D4(v37, v36);
      if ((v45 & 1) != (v49 & 1))
        goto LABEL_51;
      v41 = v48;
    }
    v50 = (_QWORD *)*v47;
    if ((v45 & 1) == 0)
    {
      v50[(v41 >> 6) + 8] |= 1 << v41;
      v101 = (uint64_t *)(v50[6] + 16 * v41);
      v102 = v115;
      *v101 = v37;
      v101[1] = v102;
      sub_23F36262C(v38, v50[7] + *(_QWORD *)(v112 + 72) * v41, type metadata accessor for ToolPromptMap);
      v103 = v50[2];
      v83 = __OFADD__(v103, 1);
      v104 = v103 + 1;
      if (v83)
        goto LABEL_50;
      v50[2] = v104;
      goto LABEL_42;
    }
    v51 = *(_QWORD *)(v112 + 72) * v41;
    v52 = v50[7] + v51;
    v53 = (uint64_t)v113;
    sub_23F362600(v52, (uint64_t)v113, type metadata accessor for ToolPromptMap);
    sub_23F362600(v53, v111, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
    v54 = *(int *)(v114 + 20);
    v55 = *(_QWORD **)(v53 + v54);
    v56 = *(_QWORD *)(v38 + v54);
    sub_23F617BA0();
    sub_23F617BA0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v128 = v55;
    sub_23F5E2968(&v126, v56, sub_23F51A6C0, 0);
    v109 = v56;
    sub_23F617BA0();
    sub_23F5E37A4();
    v58 = sub_23F35D2E8(&qword_256E79188);
    v59 = sub_23F36195C((uint64_t)v23, 1, v58);
    v108 = v51;
    if (v59 != 1)
      break;
LABEL_12:
    swift_bridgeObjectRelease();
    sub_23F382E18();
    swift_release();
    swift_bridgeObjectRelease();
    v60 = *(int *)(v114 + 24);
    v61 = *(_QWORD **)&v113[v60];
    v62 = *(_QWORD *)(v116 + v60);
    sub_23F617BA0();
    sub_23F617BA0();
    v63 = swift_isUniquelyReferenced_nonNull_native();
    v128 = v61;
    sub_23F5E2968(&v126, v62, sub_23F522E68, 0);
    sub_23F617BA0();
    v64 = v122;
    sub_23F5E2D50();
    v65 = (uint64_t)v64;
    v66 = sub_23F35D2E8(&qword_256E704E0);
    v67 = sub_23F36195C(v65, 1, v66);
    v68 = v117;
    if (v67 != 1)
    {
      v109 = v62;
      v69 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 32);
      while (1)
      {
        v70 = v65 + *(int *)(v66 + 48);
        v69(v125, v65, v9);
        v69(v123, v70, v9);
        v71 = v128;
        sub_23F375424();
        v74 = v73;
        v75 = v71[2];
        v76 = (v72 & 1) == 0;
        if (__OFADD__(v75, v76))
          goto LABEL_46;
        v77 = v72;
        if (v71[3] >= v75 + v76)
        {
          if ((v63 & 1) != 0)
          {
            if ((v72 & 1) == 0)
              goto LABEL_18;
          }
          else
          {
            sub_23F35D2E8(&qword_256E70428);
            sub_23F61CA24();
            if ((v77 & 1) == 0)
              goto LABEL_18;
          }
        }
        else
        {
          sub_23F513EC4();
          sub_23F375424();
          if ((v77 & 1) != (v79 & 1))
            goto LABEL_51;
          v74 = v78;
          if ((v77 & 1) == 0)
          {
LABEL_18:
            v80 = v128;
            v128[(v74 >> 6) + 8] |= 1 << v74;
            v81 = *(_QWORD *)(v121 + 72) * v74;
            v69((char *)(v80[6] + v81), (uint64_t)v125, v9);
            v69((char *)(v80[7] + v81), (uint64_t)v123, v9);
            v82 = v80[2];
            v83 = __OFADD__(v82, 1);
            v84 = v82 + 1;
            if (v83)
              goto LABEL_48;
            v80[2] = v84;
            goto LABEL_23;
          }
        }
        v85 = v118;
        v69(v118, (uint64_t)v123, v9);
        v86 = v121;
        (*(void (**)(char *, uint64_t))(v121 + 8))(v125, v9);
        (*(void (**)(unint64_t, char *, uint64_t))(v86 + 40))(v128[7] + *(_QWORD *)(v86 + 72) * v74, v85, v9);
LABEL_23:
        v87 = v122;
        sub_23F5E2D50();
        v65 = (uint64_t)v87;
        v66 = sub_23F35D2E8(&qword_256E704E0);
        v63 = 1;
        if (sub_23F36195C(v65, 1, v66) == 1)
        {
          v61 = v128;
          v68 = v117;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
    sub_23F382E18();
    swift_release();
    swift_bridgeObjectRelease();
    v105 = v114;
    v106 = v111;
    *(_QWORD *)(v111 + *(int *)(v114 + 20)) = v55;
    *(_QWORD *)(v106 + *(int *)(v105 + 24)) = v61;
    sub_23F3663AC((uint64_t)v113, type metadata accessor for ToolPromptMap);
    sub_23F3663AC(v116, type metadata accessor for ToolPromptMap);
    swift_bridgeObjectRelease();
    sub_23F382D60(v106, *(_QWORD *)(*v68 + 56) + v108, type metadata accessor for ToolPromptMap);
LABEL_42:
    v33 = v110;
    sub_23F5E319C();
    v34 = sub_23F35D2E8(&qword_256E79168);
    a4 = 1;
    if (sub_23F36195C((uint64_t)v33, 1, v34) == 1)
      goto LABEL_2;
  }
  while (1)
  {
    v88 = *v23;
    v89 = v23[1];
    sub_23F36262C((uint64_t)v23 + *(int *)(v58 + 48), v124, type metadata accessor for ParameterPromptMap);
    v91 = sub_23F3754D4(v88, v89);
    v92 = v55[2];
    v93 = (v90 & 1) == 0;
    if (__OFADD__(v92, v93))
      break;
    v94 = v90;
    if (v55[3] >= v92 + v93)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23F35D2E8(&qword_256E70D20);
        sub_23F61CA24();
      }
    }
    else
    {
      sub_23F5151D4();
      v95 = sub_23F3754D4(v88, v89);
      if ((v94 & 1) != (v96 & 1))
        goto LABEL_51;
      v91 = v95;
    }
    v55 = v128;
    if ((v94 & 1) != 0)
    {
      v97 = v119;
      sub_23F36262C(v124, v119, type metadata accessor for ParameterPromptMap);
      swift_bridgeObjectRelease();
      sub_23F382D60(v97, v55[7] + *(_QWORD *)(v120 + 72) * v91, type metadata accessor for ParameterPromptMap);
    }
    else
    {
      v128[(v91 >> 6) + 8] |= 1 << v91;
      v98 = (uint64_t *)(v55[6] + 16 * v91);
      *v98 = v88;
      v98[1] = v89;
      sub_23F36262C(v124, v55[7] + *(_QWORD *)(v120 + 72) * v91, type metadata accessor for ParameterPromptMap);
      v99 = v55[2];
      v83 = __OFADD__(v99, 1);
      v100 = v99 + 1;
      if (v83)
        goto LABEL_47;
      v55[2] = v100;
    }
    sub_23F5E37A4();
    v58 = sub_23F35D2E8(&qword_256E79188);
    isUniquelyReferenced_nonNull_native = 1;
    if (sub_23F36195C((uint64_t)v23, 1, v58) == 1)
      goto LABEL_12;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F51B8E8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23F51B90C()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23F51BBD4();
  v1 = sub_23F35D2E8(v0);
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
  sub_23F362928();
}

uint64_t destroy for PromptMapper()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PromptMapper(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

_QWORD *assignWithCopy for PromptMapper(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for PromptMapper(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PromptMapper(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptMapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptMapper()
{
  return &type metadata for PromptMapper;
}

uint64_t sub_23F51BBC0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 104) + 8))(v0, *(_QWORD *)(v1 - 168));
}

uint64_t sub_23F51BBEC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_23F51BBF8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;

  sub_23F362ABC();
  v2 = v1;
  if (v1 >> 62)
  {
    sub_23F617BA0();
    v3 = sub_23F61CA6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v3)
  {
LABEL_14:
    sub_23F362948();
    return;
  }
  v16 = MEMORY[0x24BEE4AF8];
  sub_23F37BB94();
  if ((v3 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v5 = v16;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x24266FE14](v4, v2);
      }
      else
      {
        v6 = *(_QWORD *)(v2 + 8 * v4 + 32);
        swift_retain();
      }
      v7 = type metadata accessor for EvaluationResultTurnItem(0);
      v14 = v7;
      v15 = &off_250FD4990;
      v13[0] = v6;
      v16 = v5;
      v8 = *(_QWORD *)(v5 + 16);
      if (v8 >= *(_QWORD *)(v5 + 24) >> 1)
      {
        sub_23F37BB94();
        v9 = v14;
        v10 = v15;
      }
      else
      {
        v9 = v7;
        v10 = &off_250FD4990;
      }
      ++v4;
      v11 = sub_23F38EB10((uint64_t)v13, v9);
      MEMORY[0x24BDAC7A8](v11);
      sub_23F3B1F34();
      (*(void (**)(uint64_t))(v12 + 16))(v0);
      sub_23F523A78(v8, v0, &v16, v9, (uint64_t)v10);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v13);
      v5 = v16;
    }
    while (v3 != v4);
    goto LABEL_14;
  }
  __break(1u);
}

void sub_23F51BD88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F362ABC();
  v3 = v2;
  v4 = sub_23F61B5D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B1590();
  sub_23F35D2E8(&qword_256E70238);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F38F964();
  v9 = v8 - v7;
  v10 = *(_QWORD *)(v3 + 16);
  if (v10)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_23F37BD60();
    v11 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v15 = *(_QWORD *)(v5 + 72);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    do
    {
      v12(v0, v11, v4);
      sub_23F5247E0();
      v13 = v16;
      if ((sub_23F3B1CDC() & 1) == 0)
      {
        sub_23F524750();
        sub_23F37BD60();
        v13 = v16;
      }
      v14 = *(_QWORD *)(v13 + 16);
      if (v14 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_23F37BD60();
        v13 = v16;
      }
      *(_QWORD *)(v13 + 16) = v14 + 1;
      sub_23F49B97C(v9, v13+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v14, &qword_256E70238);
      v11 += v15;
      --v10;
    }
    while (v10);
  }
  sub_23F362948();
}

void sub_23F51BEF8()
{
  sub_23F51BF14();
}

void sub_23F51BF14()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v23 = v7;
  v22 = sub_23F35D2E8(v7);
  v8 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  sub_23F383EC4();
  v24 = v4;
  v9 = sub_23F35D2E8(v4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F38F964();
  v13 = v12 - v11;
  v14 = *(_QWORD *)(v6 + 16);
  if (v14)
  {
    v25 = MEMORY[0x24BEE4AF8];
    v21 = v2;
    ((void (*)(_QWORD, uint64_t, _QWORD))v2)(0, v14, 0);
    v15 = v6 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v16 = *(_QWORD *)(v8 + 72);
    v17 = v25;
    do
    {
      sub_23F49B8D8(v15, v0, v23);
      sub_23F5247E0();
      if ((sub_23F3B1CDC() & 1) == 0)
      {
        v18 = sub_23F524750();
        v21(v18);
        v17 = v25;
      }
      v20 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v17 + 24);
      if (v20 >= v19 >> 1)
      {
        ((void (*)(BOOL, unint64_t, uint64_t))v21)(v19 > 1, v20 + 1, 1);
        v17 = v25;
      }
      *(_QWORD *)(v17 + 16) = v20 + 1;
      sub_23F49B97C(v13, v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v20, v24);
      v15 += v16;
      --v14;
    }
    while (v14);
  }
  sub_23F362948();
}

uint64_t sub_23F51C094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_23F37BAF8();
    v2 = v10;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_23F35D2E8(&qword_256E70FD8);
      sub_23F5247E0();
      sub_23F3837B0();
      if ((sub_23F3B1CDC() & 1) == 0)
      {
        sub_23F37BAF8();
        v2 = v10;
      }
      v5 = *(_QWORD *)(v2 + 16);
      if (v5 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_23F37BAF8();
        v2 = v10;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v5 + 1;
      v6 = v2 + 16 * v5;
      *(_QWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 40) = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_23F51C1C4(uint64_t a1, uint64_t (*a2)(char *, _QWORD, _QWORD, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t (*v55)(char *, _QWORD, _QWORD, char *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;

  v4 = v3;
  v55 = a2;
  v56 = a3;
  v54 = sub_23F35D2E8(&qword_256E791B8);
  v6 = MEMORY[0x24BDAC7A8](v54);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)&v46 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v52 = (char *)&v46 - v11;
  v12 = sub_23F35D2E8(&qword_256E6FD08);
  v50 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v64 = MEMORY[0x24BEE4AF8];
    sub_23F37C334();
    v16 = sub_23F3823C8(a1);
    if (v16 < 0 || (v19 = v16, v16 >= 1 << *(_BYTE *)(a1 + 32)))
    {
LABEL_22:
      __break(1u);
    }
    else
    {
      v20 = a1 + 64;
      v21 = v18 & 1;
      v48 = a1;
      v49 = v8;
      v47 = a1 + 64;
      while ((*(_QWORD *)(v20 + 8 * (v19 >> 6)) & (1 << v19)) != 0)
      {
        if ((_DWORD)v17 != *(_DWORD *)(a1 + 36))
          goto LABEL_24;
        v58 = 1 << v19;
        v59 = v19 >> 6;
        v62 = v21;
        v57 = v17;
        v60 = v15;
        v22 = v54;
        v23 = v52;
        v24 = &v52[*(int *)(v54 + 48)];
        v25 = *(_QWORD *)(a1 + 56);
        v26 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v19);
        v63 = v4;
        v27 = *v26;
        v28 = v26[1];
        v29 = sub_23F618470();
        v30 = *(_QWORD *)(v29 - 8);
        v31 = *(_QWORD *)(v30 + 72);
        v61 = v19;
        v32 = v25 + v31 * v19;
        v33 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
        v33(v24, v32, v29);
        *v23 = v27;
        v23[1] = v28;
        v34 = v14;
        v35 = v53;
        *(_QWORD *)v53 = v27;
        *((_QWORD *)v35 + 1) = v28;
        v33(&v35[*(int *)(v22 + 48)], (uint64_t)v24, v29);
        v36 = v49;
        v37 = (uint64_t)v35;
        v14 = v34;
        sub_23F49B97C(v37, (uint64_t)v49, &qword_256E791B8);
        swift_bridgeObjectRetain_n();
        sub_23F3625D8((uint64_t)v23, &qword_256E791B8);
        v38 = v63;
        v39 = v55((char *)v34 + *(int *)(v51 + 48), *(_QWORD *)v36, *((_QWORD *)v36 + 1), &v36[*(int *)(v22 + 48)]);
        v4 = v38;
        if (v38)
        {
          sub_23F3625D8((uint64_t)v36, &qword_256E791B8);
          swift_release();
          return;
        }
        *v34 = v39;
        v34[1] = v40;
        sub_23F3625D8((uint64_t)v36, &qword_256E791B8);
        v41 = v64;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37C334();
          v41 = v64;
        }
        v42 = v61;
        v43 = *(_QWORD *)(v41 + 16);
        if (v43 >= *(_QWORD *)(v41 + 24) >> 1)
        {
          sub_23F37C334();
          v41 = v64;
        }
        *(_QWORD *)(v41 + 16) = v43 + 1;
        sub_23F49B97C((uint64_t)v14, v41+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v43, &qword_256E6FD08);
        if ((v62 & 1) != 0)
          goto LABEL_28;
        v20 = v47;
        a1 = v48;
        v44 = v60;
        if (v42 >= -(-1 << *(_BYTE *)(v48 + 32)))
          goto LABEL_25;
        if ((*(_QWORD *)(v47 + 8 * v59) & v58) == 0)
          goto LABEL_26;
        if ((_DWORD)v57 != *(_DWORD *)(v48 + 36))
          goto LABEL_27;
        v45 = sub_23F61C868();
        v15 = v44 - 1;
        if (!v15)
          return;
        v19 = v45;
        if ((v45 & 0x8000000000000000) == 0)
        {
          v21 = 0;
          v17 = *(unsigned int *)(a1 + 36);
          if (v45 < 1 << *(_BYTE *)(a1 + 32))
            continue;
        }
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
}

void sub_23F51C590(uint64_t a1, uint64_t (*a2)(char *, _QWORD, _QWORD, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t (*v55)(char *, _QWORD, _QWORD, char *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;

  v4 = v3;
  v55 = a2;
  v56 = a3;
  v54 = sub_23F35D2E8(&qword_256E6FCD8);
  v6 = MEMORY[0x24BDAC7A8](v54);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)&v46 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v52 = (char *)&v46 - v11;
  v12 = sub_23F35D2E8(&qword_256E6FD28);
  v50 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v64 = MEMORY[0x24BEE4AF8];
    sub_23F37C368();
    v16 = sub_23F3823C8(a1);
    if (v16 < 0 || (v19 = v16, v16 >= 1 << *(_BYTE *)(a1 + 32)))
    {
LABEL_22:
      __break(1u);
    }
    else
    {
      v20 = a1 + 64;
      v21 = v18 & 1;
      v48 = a1;
      v49 = v8;
      v47 = a1 + 64;
      while ((*(_QWORD *)(v20 + 8 * (v19 >> 6)) & (1 << v19)) != 0)
      {
        if ((_DWORD)v17 != *(_DWORD *)(a1 + 36))
          goto LABEL_24;
        v58 = 1 << v19;
        v59 = v19 >> 6;
        v62 = v21;
        v57 = v17;
        v60 = v15;
        v22 = v54;
        v23 = v52;
        v24 = &v52[*(int *)(v54 + 48)];
        v25 = *(_QWORD *)(a1 + 56);
        v26 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v19);
        v63 = v4;
        v27 = *v26;
        v28 = v26[1];
        v29 = sub_23F6184B8();
        v30 = *(_QWORD *)(v29 - 8);
        v31 = *(_QWORD *)(v30 + 72);
        v61 = v19;
        v32 = v25 + v31 * v19;
        v33 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
        v33(v24, v32, v29);
        *v23 = v27;
        v23[1] = v28;
        v34 = v14;
        v35 = v53;
        *(_QWORD *)v53 = v27;
        *((_QWORD *)v35 + 1) = v28;
        v33(&v35[*(int *)(v22 + 48)], (uint64_t)v24, v29);
        v36 = v49;
        v37 = (uint64_t)v35;
        v14 = v34;
        sub_23F49B97C(v37, (uint64_t)v49, &qword_256E6FCD8);
        swift_bridgeObjectRetain_n();
        sub_23F3625D8((uint64_t)v23, &qword_256E6FCD8);
        v38 = v63;
        v39 = v55((char *)v34 + *(int *)(v51 + 48), *(_QWORD *)v36, *((_QWORD *)v36 + 1), &v36[*(int *)(v22 + 48)]);
        v4 = v38;
        if (v38)
        {
          sub_23F3625D8((uint64_t)v36, &qword_256E6FCD8);
          swift_release();
          return;
        }
        *v34 = v39;
        v34[1] = v40;
        sub_23F3625D8((uint64_t)v36, &qword_256E6FCD8);
        v41 = v64;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37C368();
          v41 = v64;
        }
        v42 = v61;
        v43 = *(_QWORD *)(v41 + 16);
        if (v43 >= *(_QWORD *)(v41 + 24) >> 1)
        {
          sub_23F37C368();
          v41 = v64;
        }
        *(_QWORD *)(v41 + 16) = v43 + 1;
        sub_23F49B97C((uint64_t)v14, v41+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v43, &qword_256E6FD28);
        if ((v62 & 1) != 0)
          goto LABEL_28;
        v20 = v47;
        a1 = v48;
        v44 = v60;
        if (v42 >= -(-1 << *(_BYTE *)(v48 + 32)))
          goto LABEL_25;
        if ((*(_QWORD *)(v47 + 8 * v59) & v58) == 0)
          goto LABEL_26;
        if ((_DWORD)v57 != *(_DWORD *)(v48 + 36))
          goto LABEL_27;
        v45 = sub_23F61C868();
        v15 = v44 - 1;
        if (!v15)
          return;
        v19 = v45;
        if ((v45 & 0x8000000000000000) == 0)
        {
          v21 = 0;
          v17 = *(unsigned int *)(a1 + 36);
          if (v45 < 1 << *(_BYTE *)(a1 + 32))
            continue;
        }
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
}

uint64_t sub_23F51C95C(uint64_t a1, void (*a2)(uint64_t *, uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  v7 = a4 + 56;
  sub_23F3839E4();
  v10 = v9 & v8;
  v12 = (unint64_t)(v11 + 63) >> 6;
  result = sub_23F617BA0();
  v14 = 0;
  if (!v10)
    goto LABEL_3;
LABEL_2:
  v15 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    v20 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * i);
    sub_23F617BA0();
    a2(&v21, &v20);
    if (v4)
    {
      sub_23F38496C();
      swift_bridgeObjectRelease();
      return sub_23F362984();
    }
    result = swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v12)
      goto LABEL_24;
    v18 = *(_QWORD *)(v7 + 8 * v14);
    if (!v18)
      break;
LABEL_15:
    v10 = (v18 - 1) & v18;
  }
  v19 = v14 + 1;
  if (v14 + 1 >= v12)
    goto LABEL_24;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
    goto LABEL_14;
  v19 = v14 + 2;
  if (v14 + 2 >= v12)
    goto LABEL_24;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
    goto LABEL_14;
  v19 = v14 + 3;
  if (v14 + 3 >= v12)
    goto LABEL_24;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
    goto LABEL_14;
  v19 = v14 + 4;
  if (v14 + 4 >= v12)
  {
LABEL_24:
    sub_23F38496C();
    return v21;
  }
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
LABEL_14:
    v14 = v19;
    goto LABEL_15;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v12)
      goto LABEL_24;
    v18 = *(_QWORD *)(v7 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_23F51CAF8(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, char *);
  uint64_t v29;
  int64_t v30;
  _QWORD v31[5];
  uint64_t v32;

  v28 = a2;
  v27 = sub_23F35D2E8(&qword_256E6FCD8);
  v7 = MEMORY[0x24BDAC7A8](v27);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v24 - v10;
  v32 = a1;
  sub_23F38231C(a4, v31);
  v29 = v31[0];
  v30 = v31[3];
  v12 = v31[4];
  v25 = v31[1];
  v26 = (unint64_t)(v31[2] + 64) >> 6;
  sub_23F617BA0();
  if (!v12)
    goto LABEL_3;
LABEL_2:
  v13 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  v14 = v13 | (v30 << 6);
  while (1)
  {
    v18 = *(_QWORD *)(v29 + 56);
    v19 = (uint64_t *)(*(_QWORD *)(v29 + 48) + 16 * v14);
    v20 = *v19;
    v21 = v19[1];
    v22 = sub_23F6184B8();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(&v11[*(int *)(v27 + 48)], v18 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, v22);
    *(_QWORD *)v11 = v20;
    *((_QWORD *)v11 + 1) = v21;
    sub_23F49B97C((uint64_t)v11, (uint64_t)v9, &qword_256E6FCD8);
    sub_23F617BA0();
    v28(&v32, v9);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_23F3625D8((uint64_t)v9, &qword_256E6FCD8);
      swift_release();
      return;
    }
    sub_23F3625D8((uint64_t)v9, &qword_256E6FCD8);
    if (v12)
      goto LABEL_2;
LABEL_3:
    v15 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v15 >= v26)
      goto LABEL_24;
    v16 = *(_QWORD *)(v25 + 8 * v15);
    if (!v16)
    {
      v17 = v30 + 2;
      if (v30 + 2 >= v26)
        goto LABEL_24;
      v16 = *(_QWORD *)(v25 + 8 * v17);
      if (v16)
        goto LABEL_12;
      v17 = v30 + 3;
      if (v30 + 3 >= v26)
        goto LABEL_24;
      v16 = *(_QWORD *)(v25 + 8 * v17);
      if (v16)
        goto LABEL_12;
      v17 = v30 + 4;
      if (v30 + 4 >= v26)
        goto LABEL_24;
      v16 = *(_QWORD *)(v25 + 8 * v17);
      if (v16)
      {
LABEL_12:
        v15 = v17;
      }
      else
      {
        v15 = v30 + 5;
        if (v30 + 5 >= v26)
          goto LABEL_24;
        v16 = *(_QWORD *)(v25 + 8 * v15);
        if (!v16)
        {
          v23 = v30 + 6;
          while (v23 < v26)
          {
            v16 = *(_QWORD *)(v25 + 8 * v23++);
            if (v16)
            {
              v15 = v23 - 1;
              goto LABEL_13;
            }
          }
LABEL_24:
          swift_release();
          return;
        }
      }
    }
LABEL_13:
    v12 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v15 << 6);
    v30 = v15;
  }
  __break(1u);
}

void sub_23F51CDA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  BOOL v21;
  unint64_t v22;
  char v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  void (*v28)(uint64_t *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F362C98();
  v30 = v3;
  v31 = v4;
  v6 = v5;
  v28 = v7;
  v9 = v8;
  sub_23F61B92C();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F482314();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - v12;
  v29 = v9;
  v26 = v6 + 56;
  sub_23F3839E4();
  v16 = v15 & v14;
  v27 = (unint64_t)(v17 + 63) >> 6;
  sub_23F617BA0();
  v18 = 0;
  if (!v16)
    goto LABEL_3;
LABEL_2:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    sub_23F383C64((uint64_t)v13, *(_QWORD *)(v6 + 48) + *(_QWORD *)(v2 + 72) * i, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    sub_23F383C64(v1, (uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    v28(&v29, v1);
    if (v0)
    {
      swift_bridgeObjectRelease();
      sub_23F4838E0();
      sub_23F38496C();
      return;
    }
    sub_23F4838E0();
    if (v16)
      goto LABEL_2;
LABEL_3:
    v21 = __OFADD__(v18++, 1);
    if (v21)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v27)
      goto LABEL_28;
    v22 = *(_QWORD *)(v26 + 8 * v18);
    if (!v22)
      break;
LABEL_19:
    v16 = (v22 - 1) & v22;
  }
  sub_23F5247D4();
  if (v23 == v21)
    goto LABEL_28;
  sub_23F5247B4();
  if (v22)
    goto LABEL_18;
  sub_23F5247D4();
  if (v23 == v21)
    goto LABEL_28;
  sub_23F5247B4();
  if (v22)
    goto LABEL_18;
  sub_23F5247D4();
  if (v23 == v21)
    goto LABEL_28;
  sub_23F5247B4();
  if (v22)
    goto LABEL_18;
  sub_23F5247D4();
  if (v23 == v21)
  {
LABEL_28:
    sub_23F38496C();
    return;
  }
  sub_23F5247B4();
  if (v22)
  {
LABEL_18:
    v18 = v24;
    goto LABEL_19;
  }
  while (1)
  {
    v18 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v18 >= v27)
      goto LABEL_28;
    v22 = *(_QWORD *)(v26 + 8 * v18);
    ++v24;
    if (v22)
      goto LABEL_19;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_23F51CF9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 *v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  __int128 v24;
  uint64_t v25[15];
  uint64_t v26;
  uint64_t v27;

  sub_23F362ABC();
  v26 = v2;
  v27 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  sub_23F619E98();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3B1F34();
  sub_23F35D2E8(&qword_256E72B70);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3D9CCC();
  sub_23F35D2E8(&qword_256E70760);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3B1590();
  v24 = *v9;
  v17 = *((_QWORD *)v9 + 2);
  v18 = *((_QWORD *)v9 + 3);
  sub_23F38F144(v11, (_OWORD *)v13);
  *(_OWORD *)(v13 + 208) = v24;
  *(_QWORD *)(v13 + 224) = v17;
  *(_QWORD *)(v13 + 232) = v18;
  sub_23F361418(v7, v13 + 240);
  sub_23F61A6E4();
  v25[3] = (uint64_t)&type metadata for PlannerToolboxDelegate;
  v25[4] = sub_23F403ECC();
  PlannerToolboxDelegate.init()(v25);
  sub_23F403F08();
  v19 = sub_23F616E68();
  sub_23F36196C(v1, 1, 1, v19);
  v20 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v0, v5, v20);
  sub_23F36196C(v0, 0, 1, v20);
  v21 = sub_23F61A6D8();
  sub_23F524778();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v7);
  sub_23F38BB88((uint64_t)v11);
  type metadata accessor for CachingQueryableToolbox();
  result = swift_allocObject();
  v23 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(result + 16) = v21;
  *(_QWORD *)(result + 24) = v23;
  *(_QWORD *)(v13 + 200) = result;
  return result;
}

uint64_t sub_23F51D218(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F35D2E8(&qword_256E78F90);
    v2 = sub_23F61CA90();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v4 = v2;
  sub_23F5233D0();
  if (v1)
    swift_release();
  return v4;
}

uint64_t sub_23F51D2C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F35D2E8(&qword_256E78F90);
    v3 = sub_23F61CA90();
  }
  else
  {
    v3 = MEMORY[0x24BEE4B00];
  }
  v6 = v3;
  sub_23F522F4C(a1, 1, (uint64_t)&v6);
  v4 = v6;
  if (v1)
    swift_release();
  return v4;
}

uint64_t sub_23F51D350(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F35D2E8(&qword_256E78F98);
    v2 = sub_23F61CA90();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v4 = v2;
  sub_23F5233D0();
  if (v1)
    swift_release();
  return v4;
}

void sub_23F51D3FC(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_23F51D454()
{
  uint64_t v0;
  uint64_t v2;

  sub_23F524718();
  sub_23F61C8E0();
  sub_23F524748();
  sub_23F5247A8();
  v2 = v0 | 1;
  sub_23F61C280();
  return v2;
}

uint64_t sub_23F51D510(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return a3;
}

uint64_t sub_23F51D518()
{
  sub_23F5246C8();
  return sub_23F61CCAC();
}

uint64_t sub_23F51D540()
{
  sub_23F5246C8();
  return sub_23F61CCA0();
}

unint64_t sub_23F51D568()
{
  return 0xD000000000000019;
}

uint64_t sub_23F51D584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F51D510(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_23F51D58C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  os_log_t v28;
  uint64_t v29;
  uint8_t *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_23F362ABC();
  v34 = v3;
  v35 = v4;
  v5 = sub_23F619E98();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3D9CCC();
  v7 = sub_23F618BB4();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F482314();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v27 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v27 - v13;
  sub_23F5247F0((uint64_t)v27 - v13, v0);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v14, v7);
  if (v15 != *MEMORY[0x24BE57550] && v15 != *MEMORY[0x24BE57558])
  {
    if (v15 == *MEMORY[0x24BE57548])
    {
LABEL_15:
      v18 = 0;
      goto LABEL_16;
    }
    if (v15 != *MEMORY[0x24BE57540] && v15 != *MEMORY[0x24BE57568])
    {
      sub_23F619088();
      sub_23F5247F0((uint64_t)v12, v0);
      v19 = sub_23F619E8C();
      v20 = sub_23F61C628();
      v31 = v20;
      if (os_log_type_enabled(v19, v20))
      {
        v30 = (uint8_t *)sub_23F366668();
        v29 = sub_23F366668();
        v33 = v29;
        v28 = v19;
        v22 = v30;
        *(_DWORD *)v30 = 136315138;
        v27[1] = v22 + 4;
        sub_23F5247F0(v1, (uint64_t)v12);
        v23 = sub_23F61C16C();
        sub_23F37AE00(v23, v24, &v33);
        v32 = v25;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        sub_23F524728();
        _os_log_impl(&dword_23F35A000, v28, (os_log_type_t)v31, "❗️[PromptMapperResolver] Unsupported tool type %s Please file a radar on IF Full Planner", v30, 0xCu);
        swift_arrayDestroy();
        sub_23F366530();
      }
      sub_23F524728();

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v5);
      goto LABEL_15;
    }
  }
  v18 = 1;
LABEL_16:
  (*(void (**)(char *, uint64_t))(v2 + 8))(v14, v7);
  return v18;
}

void sub_23F51D818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[8];

  sub_23F362C98();
  v3 = v0;
  v33 = v5;
  v34 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_23F619E98();
  v31 = *(_QWORD *)(v10 - 8);
  v32 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3B1C68();
  v12 = sub_23F6184E8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F362AAC();
  v16 = v14 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v29 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v20((char *)&v29 - v18, v9, v12);
  v21 = sub_23F6184D0();
  v35[2] = v3;
  v35[3] = v7;
  v35[4] = v34;
  sub_23F367AE4((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_23F522E48, (uint64_t)v35, v21);
  if (v1)
  {
    sub_23F362984();
    sub_23F5247F8(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  }
  else
  {
    v29 = (void (*)(uint64_t, char *, uint64_t))v20;
    v30 = v13;
    v34 = v16;
    sub_23F362984();
    sub_23F6184DC();
    sub_23F6190D0();
    v22 = sub_23F619E8C();
    v23 = sub_23F61C610();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)sub_23F366668();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_23F35A000, v22, v23, "Finished resolving all components of the model's output", v24, 2u);
      sub_23F366530();
    }

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v2, v32);
    v25 = v34;
    v29(v34, v19, v12);
    v26 = v30;
    sub_23F5247F8(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32);
    v28 = v33;
    v27(v33, v25, v12);
    *(_QWORD *)(v28 + *(int *)(type metadata accessor for ResolvedProgram() + 20)) = MEMORY[0x24BEE4AF8];
  }
  if (*(_QWORD *)(v3 + 200))
  {
    swift_beginAccess();
    sub_23F35D2E8(&qword_256E79190);
    sub_23F61C004();
    swift_endAccess();
  }
  sub_23F362870();
}

uint64_t sub_23F51DA44@<X0>(unint64_t *a1@<X0>, _QWORD *a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_23F51DA94(*a1, a2, a3);
  if (v5)
    *a4 = v5;
  else
    *a5 = result;
  return result;
}

uint64_t sub_23F51DA94(unint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  _OWORD *v75;
  void (*v76)(uint64_t, uint64_t);
  void (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  _OWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _OWORD *v83;
  __int128 v84;
  _OWORD *v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t, uint64_t);
  char *v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  char *v130;
  void (*v131)(char *, uint64_t, uint64_t);
  char *v132;
  uint64_t inited;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  _BYTE v139[280];
  _QWORD v140[43];
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD v151[2];
  uint64_t v152;

  v5 = v4;
  v6 = v3;
  v137 = a3;
  v9 = sub_23F6184B8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v14);
  v16 = MEMORY[0x24BDAC7A8]((char *)&v119 - v15);
  v18 = (char *)&v119 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v119 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v119 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v138 = (char *)&v119 - v36;
  if (!(a1 >> 62))
  {
    v125 = (char *)v32;
    v126 = v28;
    v132 = v31;
    v121 = v30;
    v122 = v29;
    v130 = v18;
    v123 = v35;
    v124 = v34;
    v120 = v33;
    v37 = swift_projectBox();
    v38 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v38(v138, v37, v9);
    v152 = a2[1];
    v141 = v152;
    v39 = v6[26];
    v128 = v6;
    v129 = a2;
    v131 = v38;
    if (v39)
    {
      v119 = v22;
      v40 = v6[28];
      v134 = v6[27];
      v135 = v40;
      v136 = v6[29];
      v41 = v39;
      v38(v132, (uint64_t)v138, v9);
      sub_23F35D2E8(&qword_256E791A0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23F61E980;
      sub_23F5238F4((uint64_t)v6, (uint64_t)v140);
      v42 = *a2;
      v43 = a2[3];
      v150 = a2[2];
      v151[0] = v42;
      v44 = a2[5];
      v148 = a2[4];
      v149 = v43;
      v147 = v44;
      v45 = swift_allocObject();
      memcpy((void *)(v45 + 16), v140, 0x118uLL);
      v46 = *((_OWORD *)a2 + 1);
      *(_OWORD *)(v45 + 296) = *(_OWORD *)a2;
      *(_OWORD *)(v45 + 312) = v46;
      *(_OWORD *)(v45 + 328) = *((_OWORD *)a2 + 2);
      v48 = inited;
      v47 = v134;
      *(_QWORD *)(v45 + 344) = v41;
      *(_QWORD *)(v45 + 352) = v47;
      v49 = v136;
      *(_QWORD *)(v45 + 360) = v135;
      *(_QWORD *)(v45 + 368) = v49;
      *(_QWORD *)(v45 + 376) = v137;
      *(_QWORD *)(v48 + 32) = sub_23F52392C;
      *(_QWORD *)(v48 + 40) = v45;
      sub_23F5238F4((uint64_t)v128, (uint64_t)v139);
      v50 = swift_allocObject();
      memcpy((void *)(v50 + 16), v139, 0x118uLL);
      v51 = *((_OWORD *)a2 + 1);
      *(_OWORD *)(v50 + 296) = *(_OWORD *)a2;
      *(_OWORD *)(v50 + 312) = v51;
      *(_OWORD *)(v50 + 328) = *((_OWORD *)a2 + 2);
      v53 = v134;
      v52 = v135;
      *(_QWORD *)(v50 + 344) = v41;
      *(_QWORD *)(v50 + 352) = v53;
      v54 = v136;
      *(_QWORD *)(v50 + 360) = v52;
      *(_QWORD *)(v50 + 368) = v54;
      *(_QWORD *)(v50 + 376) = v137;
      v55 = v132;
      v56 = inited;
      *(_QWORD *)(inited + 48) = sub_23F523A0C;
      *(_QWORD *)(v56 + 56) = v50;
      v57 = v56;
      v131(v25, (uint64_t)v55, v9);
      v58 = *(_QWORD *)(v57 + 16);
      sub_23F39B940((uint64_t)&v152);
      v127 = v41;
      sub_23F3CB7DC(v41);
      sub_23F39B940((uint64_t)&v152);
      sub_23F3CB7DC(v41);
      sub_23F39B940((uint64_t)v151);
      sub_23F39B940((uint64_t)&v150);
      sub_23F39B940((uint64_t)&v149);
      sub_23F39B940((uint64_t)&v148);
      sub_23F39B940((uint64_t)&v147);
      swift_retain();
      sub_23F39B940((uint64_t)&v152);
      sub_23F3CB7DC(v127);
      sub_23F39B940((uint64_t)v151);
      sub_23F39B940((uint64_t)&v150);
      sub_23F39B940((uint64_t)&v149);
      sub_23F39B940((uint64_t)&v148);
      sub_23F39B940((uint64_t)&v147);
      if (v58)
      {
        swift_retain();
        v59 = (uint64_t *)(sub_23F617BA0() + 40);
        v60 = (uint64_t)v119;
        while (1)
        {
          v61 = *(v59 - 1);
          v62 = *v59;
          swift_retain();
          sub_23F60BE3C(v61, v62, v63, v64, v65, v66, v67, v68, (uint64_t)v119, v120, v121, v122, v123, v124, (uint64_t)v125, v126, v127, (uint64_t)v128, (uint64_t)v129,
            (uint64_t)v130);
          if (v5)
            break;
          swift_release();
          (*(void (**)(char *, uint64_t))(v10 + 8))(v25, v9);
          v69 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
          v69(v25, v60, v9);
          v59 += 2;
          if (!--v58)
          {
            swift_bridgeObjectRelease();
            goto LABEL_11;
          }
        }
        v115 = inited;
        swift_bridgeObjectRelease();
        swift_release();
        v102 = *(void (**)(char *, uint64_t))(v10 + 8);
        v102(v25, v9);
        swift_setDeallocating();
        v70 = v115;
        sub_23F513618();
        sub_23F3CBAC4(v127);
        v102(v132, v9);
        v112 = v138;
        goto LABEL_22;
      }
      v69 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
      swift_retain();
LABEL_11:
      v74 = v138;
      v69(v125, (uint64_t)v25, v9);
      swift_setDeallocating();
      sub_23F513618();
      sub_23F3CBAC4(v127);
      v76 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v76((uint64_t)v132, v9);
      v76((uint64_t)v74, v9);
      v69(v74, (uint64_t)v125, v9);
      v73 = (uint64_t)v130;
      v38 = v131;
      v75 = &unk_23F61E000;
    }
    else
    {
      sub_23F617BA0();
      v73 = (uint64_t)v130;
      v74 = v138;
      v75 = (_OWORD *)&unk_23F61E000;
    }
    v38((char *)v73, (uint64_t)v74, v9);
    sub_23F35D2E8(&qword_256E791A0);
    v77 = (void (*)(uint64_t, uint64_t, uint64_t))v38;
    v78 = swift_initStackObject();
    *(_OWORD *)(v78 + 16) = v75[152];
    v79 = v129;
    v80 = *v129;
    v81 = v129[3];
    v145 = v129[2];
    v146 = v80;
    v82 = v129[5];
    v143 = v129[4];
    v144 = v81;
    v142 = v82;
    v83 = (_OWORD *)swift_allocObject();
    v84 = v79[1];
    v83[1] = *v79;
    v83[2] = v84;
    v83[3] = v79[2];
    *(_QWORD *)(v78 + 32) = sub_23F52387C;
    *(_QWORD *)(v78 + 40) = v83;
    v85 = (_OWORD *)swift_allocObject();
    v86 = v79[1];
    v85[1] = *v79;
    v85[2] = v86;
    v85[3] = v79[2];
    *(_QWORD *)(v78 + 48) = sub_23F5238D0;
    *(_QWORD *)(v78 + 56) = v85;
    v87 = v126;
    v77(v126, v73, v9);
    v88 = *(_QWORD *)(v78 + 16);
    sub_23F39B940((uint64_t)&v152);
    sub_23F39B940((uint64_t)&v146);
    sub_23F39B940((uint64_t)&v145);
    sub_23F39B940((uint64_t)&v144);
    sub_23F39B940((uint64_t)&v143);
    sub_23F39B940((uint64_t)&v142);
    sub_23F39B940((uint64_t)&v152);
    sub_23F39B940((uint64_t)&v146);
    sub_23F39B940((uint64_t)&v145);
    sub_23F39B940((uint64_t)&v144);
    sub_23F39B940((uint64_t)&v143);
    sub_23F39B940((uint64_t)&v142);
    if (v88)
    {
      sub_23F617BA0();
      v136 = v78;
      v89 = (uint64_t *)(v78 + 40);
      v90 = v121;
      while (1)
      {
        v91 = *(v89 - 1);
        v92 = *v89;
        swift_retain();
        sub_23F60BE3C(v91, v92, v93, v94, v95, v96, v97, v98, (uint64_t)v119, v120, v121, v122, v123, v124, (uint64_t)v125, v126, v127, (uint64_t)v128, (uint64_t)v129,
          (uint64_t)v130);
        if (v5)
          break;
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v87, v9);
        v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
        v99(v87, v90, v9);
        v89 += 2;
        if (!--v88)
        {
          swift_bridgeObjectRelease();
          v100 = v138;
          goto LABEL_18;
        }
      }
      v113 = v136;
      swift_bridgeObjectRelease();
      swift_release();
      v114 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v114(v87, v9);
      swift_setDeallocating();
      v70 = v113;
      sub_23F513618();
      v114((uint64_t)v130, v9);
      v114((uint64_t)v138, v9);
      goto LABEL_23;
    }
    v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
    v100 = v74;
LABEL_18:
    v101 = v122;
    v99(v122, v87, v9);
    swift_setDeallocating();
    sub_23F513618();
    v102 = *(void (**)(char *, uint64_t))(v10 + 8);
    v102(v130, v9);
    v102(v100, v9);
    v99((uint64_t)v100, v101, v9);
    v70 = v124;
    v103 = ((uint64_t (*)(uint64_t, char *, uint64_t))v131)(v124, v100, v9);
    MEMORY[0x24BDAC7A8](v103);
    v104 = (uint64_t)v128;
    *(&v119 - 4) = (char *)v129;
    *(&v119 - 3) = (char *)v104;
    *(&v119 - 2) = (char *)v137;
    *(&v119 - 1) = (char *)&v141;
    v105 = v123;
    sub_23F60BE3C((uint64_t)sub_23F5238D8, (uint64_t)(&v119 - 6), v106, v107, v108, v109, v110, v111, (uint64_t)v119, v120, v121, v122, v123, v124, (uint64_t)v125, v126, v127, (uint64_t)v128, (uint64_t)v129,
      (uint64_t)v130);
    if (!v5)
    {
      v102((char *)v70, v9);
      v102(v100, v9);
      v99((uint64_t)v100, v105, v9);
      v117 = v120;
      sub_23F609C84();
      v102(v100, v9);
      v99((uint64_t)v100, v117, v9);
      v70 = swift_allocBox();
      v99(v118, (uint64_t)v100, v9);
      swift_bridgeObjectRelease();
      return v70;
    }
    v102((char *)v70, v9);
    v112 = v100;
LABEL_22:
    v102(v112, v9);
LABEL_23:
    swift_bridgeObjectRelease();
    return v70;
  }
  v140[0] = 0;
  v140[1] = 0xE000000000000000;
  sub_23F61C8E0();
  sub_23F61C280();
  sub_23F6184C4();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  v70 = v140[0];
  v71 = v140[1];
  sub_23F52383C();
  swift_allocError();
  *(_QWORD *)v72 = v70;
  *(_QWORD *)(v72 + 8) = v71;
  *(_BYTE *)(v72 + 16) = 2;
  swift_willThrow();
  return v70;
}

void sub_23F51E450(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, _QWORD *a7@<X8>, double a8@<D0>)
{
  _QWORD v8[4];

  v8[0] = a3;
  v8[1] = a4;
  v8[2] = a5;
  *(double *)&v8[3] = a8;
  sub_23F51E494(a1, a2, v8, a6, a7);
}

void sub_23F51E494(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint8_t *v22;
  uint8_t *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t KeyPath;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  uint64_t *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[40];
  _OWORD v66[12];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v62 = a5;
  v61 = a2;
  v58 = a4;
  v7 = sub_23F35D2E8(&qword_256E791B0);
  MEMORY[0x24BDAC7A8](v7);
  v59 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for ResolvableTool();
  MEMORY[0x24BDAC7A8](v57);
  v56 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F6184B8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_23F619E98();
  v14 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a3;
  v54 = a3[1];
  v55 = v17;
  v53 = a3[2];
  v18 = *((double *)a3 + 3);
  sub_23F6190D0();
  v19 = sub_23F619E8C();
  v20 = sub_23F61C610();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v52 = a1;
    v22 = v21;
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_23F35A000, v19, v20, "Enforcing call string quoting", v21, 2u);
    v23 = v22;
    a1 = v52;
    MEMORY[0x242670B70](v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v64);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  v25 = v11;
  v26 = v10;
  if (v24 == *MEMORY[0x24BE54948])
  {
    LODWORD(v52) = v24;
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    v27 = *(_QWORD *)v13;
    v28 = *(_QWORD *)(*(_QWORD *)v13 + 16);
    v29 = *(_QWORD *)(*(_QWORD *)v13 + 24);
    v30 = *(_QWORD *)(v27 + 32);
    sub_23F617BA0();
    sub_23F617BA0();
    swift_release();
    v32 = v60;
    v31 = v61;
    v33 = *v61;
    v71 = v61[1];
    v72 = v33;
    v34 = v61[2];
    v69 = v61[3];
    v70 = v34;
    v35 = v61[4];
    v67 = v61[5];
    v68 = v35;
    sub_23F38F144(v60, v66);
    v64 = v26;
    v36 = *((_QWORD *)v32 + 25);
    sub_23F361418((uint64_t)(v32 + 15), (uint64_t)v65);
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F39B940((uint64_t)&v72);
    sub_23F39B940((uint64_t)&v71);
    sub_23F39B940((uint64_t)&v70);
    sub_23F39B940((uint64_t)&v69);
    sub_23F39B940((uint64_t)&v68);
    sub_23F39B940((uint64_t)&v67);
    swift_retain();
    v37 = v58;
    swift_retain();
    v38 = v59;
    v39 = v37;
    v40 = v63;
    sub_23F573A58(v28, v29, v30, v31, v66, v36, (uint64_t)v65, v39, v59);
    if (v40)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (sub_23F36195C(v38, 1, v57) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23F3625D8(v38, &qword_256E791B0);
        v41 = v62;
        v42 = 1;
        v43 = v64;
      }
      else
      {
        v63 = v25;
        v44 = v56;
        sub_23F49B950(v38, v56, (uint64_t (*)(_QWORD))type metadata accessor for ResolvableTool);
        KeyPath = swift_getKeyPath();
        sub_23F521D00(KeyPath, v18, v30, v44, (uint64_t)v61, v55, v54, v53, (uint64_t)sub_23F521CFC, 0);
        v47 = v46;
        swift_release();
        swift_bridgeObjectRelease();
        sub_23F3663AC(v44, (uint64_t (*)(_QWORD))type metadata accessor for ResolvableTool);
        v48 = (_QWORD *)swift_allocObject();
        v48[2] = v28;
        v48[3] = v29;
        v48[4] = v47;
        v50 = v62;
        v49 = v63;
        *v62 = v48;
        v51 = v64;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v49 + 104))(v50, v52, v64);
        v41 = v50;
        v42 = 0;
        v43 = v51;
      }
      sub_23F36196C((uint64_t)v41, v42, 1, v43);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_23F36196C((uint64_t)v62, 1, 1, v10);
  }
}

uint64_t sub_23F51E948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>, uint64_t a8@<D0>)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12[4];

  v12[0] = a3;
  v12[1] = a4;
  v12[2] = a5;
  v12[3] = a8;
  result = sub_23F51E9B8(a1, a2, v12, a6, a7);
  if (!v8)
  {
    v11 = sub_23F6184B8();
    return sub_23F36196C(a7, 0, 1, v11);
  }
  return result;
}

uint64_t sub_23F51E9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  double v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint8_t *v45;
  uint8_t *v46;
  void (*v47)(char *, uint64_t);
  _QWORD *v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t (*v51)(char *, uint64_t);
  unsigned int v52;
  void (*v53)(char *, uint64_t);
  unsigned __int8 *v54;
  uint64_t v55;
  _QWORD *v56;
  _BYTE *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  unsigned __int8 *v61;
  int v62;
  unsigned __int8 *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v96;
  NSObject *v97;
  os_log_type_t v98;
  _BOOL4 v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t KeyPath;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t *v128;
  char *v129;
  uint64_t v130;
  _BYTE *v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t *v137;
  uint64_t *v138;
  uint64_t v139;
  char *v140;
  void (*v141)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  void (*v146)(char *, uint64_t, uint64_t);
  uint64_t *v147;
  char *v148;
  char *v149;
  char *v150;
  NSObject *v151;
  os_log_type_t v152;
  int v153;
  _BOOL4 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  void (*v161)(char *, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, uint64_t);
  uint64_t v168;
  uint64_t v169;
  unsigned int v170;
  void (*v171)(char *, uint64_t, uint64_t);
  uint64_t v172;
  unsigned int v173;
  void (*v174)(char *, uint64_t, uint64_t);
  unsigned int v175;
  void (*v176)(uint64_t, uint64_t);
  uint64_t v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  uint64_t *v182;
  char *v183;
  char *v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  _OWORD *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _QWORD *v204;
  uint64_t v205;
  uint64_t v206;
  __int128 v207;
  uint64_t v208;

  v185 = a4;
  v196 = a2;
  v205 = a1;
  v201 = a5;
  v6 = sub_23F35D2E8(&qword_256E6FD18);
  MEMORY[0x24BDAC7A8](v6);
  v183 = (char *)&v168 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ResolvableTool();
  MEMORY[0x24BDAC7A8](v8);
  v193 = (uint64_t)&v168 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v10);
  v191 = (char *)&v168 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F61B5D8();
  v195 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v184 = (char *)&v168 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v194 = (char *)&v168 - v15;
  v199 = sub_23F35D2E8(&qword_256E70A48);
  MEMORY[0x24BDAC7A8](v199);
  v197 = (char *)&v168 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = sub_23F35D2E8(&qword_256E791A8);
  MEMORY[0x24BDAC7A8](v200);
  v18 = (char *)&v168 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F6184B8();
  v204 = *(_QWORD **)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v179 = (char *)&v168 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v178 = (char *)&v168 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v182 = (uint64_t *)((char *)&v168 - v25);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v181 = (char *)&v168 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v168 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v198 = (char *)&v168 - v31;
  v203 = sub_23F619E98();
  v32 = *(_QWORD *)(v203 - 8);
  v33 = MEMORY[0x24BDAC7A8](v203);
  v187 = (uint64_t)&v168 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v180 = (char *)&v168 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v186 = (char *)&v168 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v168 - v39;
  v190 = *a3;
  v189 = a3[1];
  v188 = a3[2];
  v41 = *((double *)a3 + 3);
  sub_23F6190D0();
  v42 = sub_23F619E8C();
  v43 = sub_23F61C610();
  v44 = os_log_type_enabled(v42, v43);
  v206 = v19;
  if (v44)
  {
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    _os_log_impl(&dword_23F35A000, v42, v43, "Enforcing infix string quoting", v45, 2u);
    v46 = v45;
    v19 = v206;
    MEMORY[0x242670B70](v46, -1, -1);
  }

  v47 = *(void (**)(char *, uint64_t))(v32 + 8);
  v47(v40, v203);
  v48 = v204;
  v49 = (void (*)(char *, uint64_t, uint64_t))v204[2];
  v50 = v205;
  v49(v30, v205, v19);
  v51 = (uint64_t (*)(char *, uint64_t))v48[11];
  v52 = v51(v30, v19);
  if (v52 != *MEMORY[0x24BE54970])
  {
    ((void (*)(char *, uint64_t))v48[1])(v30, v19);
    v66 = v201;
LABEL_15:
    v94 = v50;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v49)(v66, v94, v19);
  }
  v175 = v52;
  v176 = (void (*)(uint64_t, uint64_t))v47;
  v177 = v12;
  v53 = (void (*)(char *, uint64_t))v48[12];
  v53(v30, v19);
  v54 = (unsigned __int8 *)swift_projectBox();
  v55 = *(int *)(v200 + 48);
  v56 = v48;
  v57 = v18;
  v58 = &v18[v55];
  v59 = *(int *)(v200 + 64);
  v60 = &v18[v59];
  v61 = &v54[v59];
  v62 = *v54;
  *v57 = v62;
  v49(v58, (uint64_t)&v54[v55], v206);
  v63 = v61;
  v64 = v206;
  v49(v60, (uint64_t)v63, v206);
  if (v62)
  {
    v65 = (void (*)(char *, uint64_t))v56[1];
    v65(v60, v206);
LABEL_13:
    v93 = v58;
LABEL_14:
    v65(v93, v206);
    v19 = v206;
    swift_release();
    v66 = v201;
    v50 = v205;
    goto LABEL_15;
  }
  v67 = v51(v58, v64);
  if (v67 != *MEMORY[0x24BE54938])
  {
    v65 = (void (*)(char *, uint64_t))v204[1];
    v65(v60, v206);
    goto LABEL_13;
  }
  v173 = v67;
  v53(v58, v64);
  v174 = *(void (**)(char *, uint64_t, uint64_t))v58;
  v68 = swift_projectBox();
  v69 = *(int *)(v199 + 48);
  v70 = v197;
  v71 = (uint64_t *)&v197[v69];
  v72 = (uint64_t *)(v68 + v69);
  ((void (*)(char *))v49)(v197);
  v74 = *v72;
  v73 = v72[1];
  *v71 = v74;
  v71[1] = v73;
  v75 = v206;
  v76 = v51(v70, v206);
  if (v76 != *MEMORY[0x24BE54960])
  {
    v65 = (void (*)(char *, uint64_t))v204[1];
    v65(v70, v206);
    swift_release();
    v93 = v60;
    goto LABEL_14;
  }
  v170 = v76;
  v172 = v74;
  v53(v70, v75);
  v77 = *(_QWORD *)(*(_QWORD *)v70 + 16);
  v78 = *(_QWORD *)(*(_QWORD *)v70 + 24);
  sub_23F617BA0();
  sub_23F617BA0();
  swift_release();
  v19 = v206;
  swift_release();
  v79 = v73;
  v80 = (void (*)(char *, char *, uint64_t))v204[4];
  v80(v198, v60, v19);
  swift_release();
  v81 = *(_QWORD *)(v196 + 40);
  sub_23F617BA0();
  v82 = (uint64_t)v191;
  sub_23F3687D8(v77, v78, v81);
  swift_bridgeObjectRelease();
  v83 = v177;
  if (sub_23F36195C(v82, 1, v177) == 1)
  {
    sub_23F3625D8(v82, &qword_256E70238);
    v84 = v187;
    sub_23F6190D0();
    sub_23F617BA0();
    sub_23F617BA0();
    v85 = sub_23F619E8C();
    v86 = sub_23F61C610();
    if (os_log_type_enabled(v85, v86))
    {
      v87 = swift_slowAlloc();
      v88 = swift_slowAlloc();
      v171 = v49;
      v89 = v88;
      *(_QWORD *)&v207 = v88;
      *(_DWORD *)v87 = 136315394;
      sub_23F617BA0();
      sub_23F37AE00(v77, v78, (uint64_t *)&v207);
      v208 = v90;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v87 + 12) = 2080;
      sub_23F617BA0();
      sub_23F37AE00(v172, v79, (uint64_t *)&v207);
      v208 = v91;
      v19 = v206;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23F35A000, v85, v86, "No tool mapping found for infix %s.%s. Skipping string alignment.", (uint8_t *)v87, 0x16u);
      swift_arrayDestroy();
      v92 = v89;
      v49 = v171;
      MEMORY[0x242670B70](v92, -1, -1);
      MEMORY[0x242670B70](v87, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    v176(v84, v203);
    ((void (*)(char *, uint64_t))v204[1])(v198, v19);
    v66 = v201;
    v94 = v205;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v49)(v66, v94, v19);
  }
  v187 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v195 + 32))(v194, v82, v83);
  v96 = v186;
  sub_23F6190D0();
  swift_bridgeObjectRetain_n();
  v97 = sub_23F619E8C();
  v98 = sub_23F61C610();
  v99 = os_log_type_enabled(v97, v98);
  v171 = v49;
  v174 = (void (*)(char *, uint64_t, uint64_t))v80;
  v197 = (char *)v78;
  v169 = v79;
  if (v99)
  {
    v100 = (uint8_t *)swift_slowAlloc();
    v101 = swift_slowAlloc();
    *(_QWORD *)&v207 = v101;
    *(_DWORD *)v100 = 136315138;
    sub_23F617BA0();
    sub_23F37AE00(v187, v78, (uint64_t *)&v207);
    v208 = v102;
    v83 = v177;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23F35A000, v97, v98, "Found infix slot filling on %s. Attempting string alignment.", v100, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v101, -1, -1);
    MEMORY[0x242670B70](v100, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v176((uint64_t)v96, v203);
  v103 = v193;
  v104 = v185;
  v105 = (uint64_t)v184;
  v106 = v172;
  (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v184, v194, v83);
  sub_23F38F144(v192, &v207);
  swift_retain();
  sub_23F574F68(v105, &v207, v104, v103);
  KeyPath = swift_getKeyPath();
  sub_23F35D2E8(&qword_256E6FCC8);
  v108 = sub_23F35D2E8(&qword_256E6FCD0);
  v109 = *(unsigned __int8 *)(*(_QWORD *)(v108 - 8) + 80);
  v110 = (v109 + 32) & ~v109;
  v111 = swift_allocObject();
  *(_OWORD *)(v111 + 16) = xmmword_23F61E7E0;
  v112 = (uint64_t *)(v111 + v110);
  v113 = v111 + v110 + *(int *)(v108 + 48);
  v114 = v169;
  *v112 = v106;
  v112[1] = v114;
  v115 = v198;
  v116 = v206;
  v171((char *)v113, (uint64_t)v198, v206);
  sub_23F617BA0();
  v117 = sub_23F61BFEC();
  v118 = KeyPath;
  v119 = v193;
  v120 = v202;
  sub_23F521D00(v118, v41, v117, v193, v196, v190, v189, v188, (uint64_t)sub_23F521CFC, 0);
  if (v120)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_23F3663AC(v119, (uint64_t (*)(_QWORD))type metadata accessor for ResolvableTool);
    (*(void (**)(char *, uint64_t))(v195 + 8))(v194, v177);
    return ((uint64_t (*)(char *, uint64_t))v204[1])(v115, v116);
  }
  else
  {
    v122 = v121;
    swift_release();
    swift_bridgeObjectRelease();
    sub_23F617BA0();
    v123 = (uint64_t)v183;
    v124 = v172;
    sub_23F3687AC(v172, v114, v122);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (sub_23F36195C(v123, 1, v116) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23F3663AC(v119, (uint64_t (*)(_QWORD))type metadata accessor for ResolvableTool);
      (*(void (**)(char *, uint64_t))(v195 + 8))(v194, v177);
      ((void (*)(char *, uint64_t))v204[1])(v115, v116);
      sub_23F3625D8(v123, &qword_256E6FD18);
      v125 = v201;
      v126 = (uint64_t *)v205;
      v127 = v116;
      v128 = &v203;
    }
    else
    {
      v129 = v181;
      v174(v181, v123, v116);
      v130 = v200;
      v202 = swift_allocBox();
      v132 = (uint64_t *)&v131[*(int *)(v130 + 48)];
      v200 = (uint64_t)&v131[*(int *)(v130 + 64)];
      *v131 = 0;
      v133 = v199;
      v134 = swift_allocBox();
      v135 = v124;
      v137 = v136;
      v138 = (uint64_t *)((char *)v136 + *(int *)(v133 + 48));
      v139 = swift_allocObject();
      v140 = v197;
      *(_QWORD *)(v139 + 16) = v187;
      *(_QWORD *)(v139 + 24) = v140;
      *v137 = v139;
      v141 = (void (*)(uint64_t *, _QWORD, uint64_t))v204[13];
      v142 = v137;
      v143 = v129;
      v141(v142, v170, v206);
      *v138 = v135;
      v138[1] = v114;
      *v132 = v134;
      v141(v132, v173, v206);
      v144 = v206;
      v145 = v129;
      v146 = v171;
      v171((char *)v200, (uint64_t)v145, v206);
      v147 = v182;
      *v182 = v202;
      v141(v147, v175, v144);
      v148 = v180;
      sub_23F6190D0();
      v149 = v178;
      v146(v178, v205, v144);
      v150 = v179;
      v146(v179, (uint64_t)v147, v144);
      v151 = sub_23F619E8C();
      v152 = sub_23F61C610();
      v153 = v152;
      v154 = os_log_type_enabled(v151, v152);
      v155 = v177;
      if (v154)
      {
        v156 = swift_slowAlloc();
        v205 = swift_slowAlloc();
        *(_QWORD *)&v207 = v205;
        *(_DWORD *)v156 = 136315394;
        sub_23F3EC80C();
        LODWORD(v202) = v153;
        v157 = sub_23F61CC1C();
        sub_23F37AE00(v157, v158, (uint64_t *)&v207);
        v208 = v159;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        v160 = v149;
        v161 = (void (*)(char *, uint64_t))v204[1];
        v161(v160, v206);
        *(_WORD *)(v156 + 12) = 2080;
        v162 = sub_23F61CC1C();
        sub_23F37AE00(v162, v163, (uint64_t *)&v207);
        v208 = v164;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        v161(v150, v206);
        _os_log_impl(&dword_23F35A000, v151, (os_log_type_t)v202, "[Original Infix: %s . Aligned Infix: %s", (uint8_t *)v156, 0x16u);
        v165 = v205;
        swift_arrayDestroy();
        MEMORY[0x242670B70](v165, -1, -1);
        v166 = v156;
        v144 = v206;
        MEMORY[0x242670B70](v166, -1, -1);

        v176((uint64_t)v180, v203);
        v161(v181, v144);
        sub_23F3663AC(v193, (uint64_t (*)(_QWORD))type metadata accessor for ResolvableTool);
        (*(void (**)(char *, uint64_t))(v195 + 8))(v194, v177);
        v161(v198, v144);
      }
      else
      {

        v167 = (void (*)(char *, uint64_t))v204[1];
        v167(v150, v144);
        v167(v149, v144);
        v176((uint64_t)v148, v203);
        v167(v143, v144);
        sub_23F3663AC(v193, (uint64_t (*)(_QWORD))type metadata accessor for ResolvableTool);
        (*(void (**)(char *, uint64_t))(v195 + 8))(v194, v155);
        v167(v198, v144);
      }
      v125 = v201;
      v126 = v182;
      v127 = v144;
      v128 = &v206;
    }
    return ((uint64_t (*)(uint64_t, uint64_t *, uint64_t))*(v128 - 32))(v125, v126, v127);
  }
}

uint64_t sub_23F51FC48@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  if (*(_QWORD *)(v3 + 16) && (sub_23F375424(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v3 + 56);
    v8 = sub_23F6184B8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, v8);
    v9 = a2;
    v10 = 0;
    v11 = v8;
  }
  else
  {
    v11 = sub_23F6184B8();
    v9 = a2;
    v10 = 1;
  }
  return sub_23F36196C(v9, v10, 1, v11);
}

uint64_t sub_23F51FCDC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(v3 + 16) && (sub_23F375424(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v3 + 56);
    v8 = sub_23F6184B8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, v8);
    v9 = a2;
    v10 = 0;
    v11 = v8;
  }
  else
  {
    v11 = sub_23F6184B8();
    v9 = a2;
    v10 = 1;
  }
  return sub_23F36196C(v9, v10, 1, v11);
}

uint64_t sub_23F51FD70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD v36[2];
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[40];
  _OWORD v48[12];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v45 = a4;
  v42 = a5;
  v43 = a3;
  v9 = sub_23F35D2E8(&qword_256E791B0);
  MEMORY[0x24BDAC7A8](v9);
  v44 = (uint64_t)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ResolvableTool();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F6184B8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v17, v14) != *MEMORY[0x24BE54948])
  {
    sub_23F36196C((uint64_t)a6, 1, 1, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  v38 = v13;
  v39 = v11;
  v40 = a6;
  (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
  v18 = *(_QWORD *)v17;
  v19 = *(_QWORD *)(*(_QWORD *)v17 + 24);
  v41 = *(_QWORD *)(*(_QWORD *)v17 + 16);
  v20 = a2[1];
  v54 = *a2;
  v21 = a2[3];
  v52 = a2[2];
  v53 = v20;
  v22 = a2[5];
  v50 = a2[4];
  v51 = v21;
  v23 = *(_QWORD *)(v18 + 32);
  v49 = v22;
  v24 = v43;
  sub_23F38F144(v43, v48);
  v25 = *((_QWORD *)v24 + 25);
  sub_23F361418((uint64_t)(v24 + 15), (uint64_t)v47);
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F39B940((uint64_t)&v54);
  sub_23F39B940((uint64_t)&v53);
  sub_23F39B940((uint64_t)&v52);
  sub_23F39B940((uint64_t)&v51);
  sub_23F39B940((uint64_t)&v50);
  sub_23F39B940((uint64_t)&v49);
  v26 = v25;
  swift_retain();
  v27 = v45;
  swift_retain();
  v28 = v44;
  v37 = v23;
  v29 = v26;
  v30 = v46;
  sub_23F573A58(v41, v19, v23, a2, v48, v29, (uint64_t)v47, v27, v44);
  if (!v30)
  {
    v46 = 0;
    v36[1] = v18;
    if (sub_23F36195C(v28, 1, v39) == 1)
    {
      sub_23F3625D8(v28, &qword_256E791B0);
      sub_23F36196C((uint64_t)v40, 1, 1, v14);
      return swift_release();
    }
    v32 = (uint64_t)v38;
    sub_23F49B950(v28, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for ResolvableTool);
    v33 = sub_23F617BA0();
    v34 = v46;
    sub_23F522EC4(v33, (uint64_t)sub_23F522E68, 0, v42);
    v35 = v40;
    sub_23F5200CC(v37, v32, v45, v40);
    sub_23F3663AC(v32, (uint64_t (*)(_QWORD))type metadata accessor for ResolvableTool);
    if (!v34)
      sub_23F36196C((uint64_t)v35, 0, 1, v14);
  }
  return swift_release();
}

uint64_t sub_23F5200CC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t result;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  unint64_t v103;
  char *v104;
  char *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  void (*v122)(char *, char *, uint64_t);
  uint64_t v123;
  uint64_t v124;
  char v125;
  unint64_t v126;
  char v127;
  char v128;
  uint64_t v129;
  char v130;
  _QWORD *v131;
  uint64_t *v132;
  uint64_t v133;
  BOOL v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  void (*v146)(char *, uint64_t, uint64_t);
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  _QWORD v181[5];
  uint64_t v182;

  v174 = a3;
  v175 = a1;
  v151 = a4;
  v5 = sub_23F618BB4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61847C();
  v169 = *(_QWORD *)(v9 - 8);
  v170 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v168 = (char *)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F618470();
  v178 = *(_QWORD *)(v11 - 8);
  v179 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v177 = (char *)&v145 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v167 = (char *)&v145 - v14;
  v166 = sub_23F35D2E8(&qword_256E6FCD8);
  v15 = MEMORY[0x24BDAC7A8](v166);
  v165 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v164 = (uint64_t *)((char *)&v145 - v18);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v176 = (uint64_t *)((char *)&v145 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v163 = (char *)&v145 - v21;
  v22 = sub_23F619E98();
  v157 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v159 = (char *)&v145 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_23F617D08();
  v152 = *(_QWORD *)(v153 - 8);
  v24 = MEMORY[0x24BDAC7A8](v153);
  v160 = (char *)&v145 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v150 = (char *)&v145 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v145 - v28;
  v30 = sub_23F35D2E8(&qword_256E6FD18);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v145 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v31);
  v158 = (char *)&v145 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v145 - v36;
  v38 = sub_23F6184B8();
  v171 = *(_QWORD *)(v38 - 8);
  v172 = v38;
  v39 = MEMORY[0x24BDAC7A8](v38);
  v162 = (char *)&v145 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v173 = (char *)&v145 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v161 = (char *)&v145 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)&v145 - v46;
  MEMORY[0x24BDAC7A8](v45);
  v154 = (char *)&v145 - v48;
  if ((sub_23F51D58C() & 1) == 0)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
    v67 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
    v68 = *MEMORY[0x24BE57548];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v69 = v172;
    v70 = v175;
    if (v67 == v68)
    {
      sub_23F3687AC(0x746567726174, 0xE600000000000000, v175);
      if (sub_23F36195C((uint64_t)v33, 1, v69) == 1)
      {
        sub_23F3625D8((uint64_t)v33, &qword_256E6FD18);
      }
      else
      {
        v71 = v171;
        v72 = v173;
        (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v173, v33, v69);
        v73 = v162;
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v162, v72, v69);
        if ((*(unsigned int (**)(char *, uint64_t))(v71 + 88))(v73, v69) == *MEMORY[0x24BE54918])
        {
          (*(void (**)(char *, uint64_t))(v71 + 96))(v73, v69);
          v74 = swift_projectBox();
          v75 = v152;
          v76 = v160;
          v77 = v153;
          (*(void (**)(char *, uint64_t, uint64_t))(v152 + 16))(v160, v74, v153);
          swift_release();
          v78 = type metadata accessor for ResolvableTool();
          MEMORY[0x24BDAC7A8](v78);
          *(&v145 - 2) = v79;
          *(&v145 - 1) = (uint64_t)v76;
          v80 = v156;
          sub_23F51CAF8(MEMORY[0x24BEE4B00], (void (*)(uint64_t *, char *))sub_23F523BCC, (uint64_t)(&v145 - 4), v70);
          if (v80)
          {
            (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
            return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v173, v69);
          }
          v70 = v81;
          v156 = 0;
          (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
          (*(void (**)(char *, uint64_t))(v71 + 8))(v173, v69);
          goto LABEL_17;
        }
        v83 = *(void (**)(char *, uint64_t))(v71 + 8);
        v83(v72, v69);
        v83(v73, v69);
      }
    }
    sub_23F617BA0();
LABEL_17:
    v84 = v155;
    v85 = sub_23F521A54();
    v87 = v86;
    v88 = type metadata accessor for ResolvableTool();
    MEMORY[0x24BDAC7A8](v88);
    *(&v145 - 2) = v84;
    *(&v145 - 1) = v89;
    v90 = v156;
    sub_23F51C590(v70, (uint64_t (*)(char *, _QWORD, _QWORD, char *))sub_23F523BB4, (uint64_t)(&v145 - 4));
    if (v90)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F51BF14();
      v92 = v91;
      swift_bridgeObjectRelease();
      v93 = sub_23F51D2C4(v92);
      swift_bridgeObjectRelease();
      v94 = (_QWORD *)swift_allocObject();
      v94[2] = v85;
      v94[3] = v87;
      v94[4] = v93;
      v95 = v151;
      *v151 = (uint64_t)v94;
      return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v171 + 104))(v95, *MEMORY[0x24BE54948], v69);
    }
  }
  v148 = v22;
  v149 = a2;
  sub_23F3687AC(6107227, 0xE300000000000000, v175);
  v49 = v172;
  if (sub_23F36195C((uint64_t)v37, 1, v172) == 1)
  {
    sub_23F3625D8((uint64_t)v37, &qword_256E6FD18);
LABEL_8:
    a2 = v149;
    goto LABEL_9;
  }
  v147 = v29;
  v50 = v171;
  v51 = v154;
  (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v154, v37, v49);
  v52 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  v52(v47, v51, v49);
  if ((*(unsigned int (**)(char *, uint64_t))(v50 + 88))(v47, v49) != *MEMORY[0x24BE54918])
  {
    v66 = *(void (**)(char *, uint64_t))(v50 + 8);
    v66(v51, v49);
    v66(v47, v49);
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v50 + 96))(v47, v49);
  v53 = v51;
  v54 = swift_projectBox();
  v146 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 16);
  v146(v147, v54, v153);
  swift_release();
  v55 = v159;
  sub_23F619088();
  v56 = v161;
  v52(v161, v53, v49);
  v57 = sub_23F619E8C();
  v58 = sub_23F61C610();
  v59 = os_log_type_enabled(v57, v58);
  v160 = (char *)v52;
  if (v59)
  {
    v60 = (uint8_t *)swift_slowAlloc();
    v61 = swift_slowAlloc();
    v182 = v61;
    *(_DWORD *)v60 = 136315138;
    sub_23F3EC80C();
    v62 = sub_23F61CC1C();
    sub_23F37AE00(v62, v63, &v182);
    v180 = v64;
    v65 = v171;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v161 = *(char **)(v65 + 8);
    ((void (*)(char *, uint64_t))v161)(v56, v49);
    _os_log_impl(&dword_23F35A000, v57, v58, "[PromptMapperResolver] Received a parameter update. Dropping anonymous target parameter %s", v60, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v61, -1, -1);
    MEMORY[0x242670B70](v60, -1, -1);

    (*(void (**)(char *, uint64_t))(v157 + 8))(v159, v148);
  }
  else
  {
    v65 = v50;
    v161 = *(char **)(v50 + 8);
    ((void (*)(char *, uint64_t))v161)(v56, v49);

    (*(void (**)(char *, uint64_t))(v157 + 8))(v55, v148);
  }
  v182 = v175;
  sub_23F617BA0();
  v96 = (uint64_t)v158;
  sub_23F37DF18();
  sub_23F3625D8(v96, &qword_256E6FD18);
  v97 = v182;
  sub_23F38231C(v182, v181);
  v162 = (char *)v181[0];
  v157 = v181[1];
  v173 = (char *)v181[3];
  v98 = v181[4];
  v158 = (char *)((unint64_t)(v181[2] + 64) >> 6);
  LODWORD(v159) = *MEMORY[0x24BE548E0];
  v148 = v97;
  swift_bridgeObjectRetain_n();
  v99 = MEMORY[0x24BEE4B00];
  v100 = v172;
  while (1)
  {
    v175 = v99;
    if (v98)
    {
      v174 = (v98 - 1) & v98;
      v101 = __clz(__rbit64(v98)) | ((_QWORD)v173 << 6);
      goto LABEL_43;
    }
    v102 = v173 + 1;
    if (__OFADD__(v173, 1))
      goto LABEL_58;
    if ((uint64_t)v102 >= (uint64_t)v158)
      goto LABEL_52;
    v103 = *(_QWORD *)(v157 + 8 * (_QWORD)v102);
    v104 = v173 + 1;
    if (!v103)
    {
      v104 = v173 + 2;
      if ((uint64_t)(v173 + 2) >= (uint64_t)v158)
        goto LABEL_52;
      v103 = *(_QWORD *)(v157 + 8 * (_QWORD)v104);
      if (!v103)
      {
        v104 = v173 + 3;
        if ((uint64_t)(v173 + 3) >= (uint64_t)v158)
          goto LABEL_52;
        v103 = *(_QWORD *)(v157 + 8 * (_QWORD)v104);
        if (!v103)
        {
          v104 = v173 + 4;
          if ((uint64_t)(v173 + 4) >= (uint64_t)v158)
            goto LABEL_52;
          v103 = *(_QWORD *)(v157 + 8 * (_QWORD)v104);
          if (!v103)
          {
            v104 = v173 + 5;
            if ((uint64_t)(v173 + 5) >= (uint64_t)v158)
              goto LABEL_52;
            v103 = *(_QWORD *)(v157 + 8 * (_QWORD)v104);
            if (!v103)
            {
              v104 = v173 + 6;
              if ((uint64_t)(v173 + 6) >= (uint64_t)v158)
                goto LABEL_52;
              v103 = *(_QWORD *)(v157 + 8 * (_QWORD)v104);
              if (!v103)
                break;
            }
          }
        }
      }
    }
LABEL_42:
    v173 = v104;
    v174 = (v103 - 1) & v103;
    v101 = __clz(__rbit64(v103)) + ((_QWORD)v104 << 6);
LABEL_43:
    v106 = (uint64_t *)(*((_QWORD *)v162 + 6) + 16 * v101);
    v107 = *v106;
    v108 = v106[1];
    v109 = v166;
    v110 = v163;
    v111 = v100;
    v112 = v100;
    v113 = v160;
    ((void (*)(char *, unint64_t, uint64_t))v160)(&v163[*(int *)(v166 + 48)], *((_QWORD *)v162 + 7) + *(_QWORD *)(v65 + 72) * v101, v111);
    *v110 = v107;
    v110[1] = v108;
    v114 = v176;
    sub_23F49B97C((uint64_t)v110, (uint64_t)v176, &qword_256E6FCD8);
    v115 = *(int *)(v109 + 48);
    v116 = v164;
    v117 = (char *)v164 + v115;
    v118 = (char *)v114 + v115;
    v120 = *v114;
    v119 = v114[1];
    *v164 = *v114;
    v116[1] = v119;
    ((void (*)(char *, char *, uint64_t))v113)((char *)v116 + v115, (char *)v114 + v115, v112);
    (*(void (**)(char *, _QWORD, uint64_t))(v169 + 104))(v168, v159, v170);
    ((void (*)(char *, char *, uint64_t))v113)(&v165[*(int *)(v109 + 48)], v118, v112);
    sub_23F617BA0();
    sub_23F617BA0();
    v121 = v167;
    sub_23F618458();
    v122 = *(void (**)(char *, char *, uint64_t))(v178 + 32);
    v122(v177, v121, v179);
    v123 = v175;
    swift_isUniquelyReferenced_nonNull_native();
    v180 = (_QWORD *)v123;
    v124 = sub_23F3754D4(v120, v119);
    if (__OFADD__(*(_QWORD *)(v123 + 16), (v125 & 1) == 0))
    {
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      result = sub_23F61CC94();
      __break(1u);
      return result;
    }
    v126 = v124;
    v127 = v125;
    sub_23F35D2E8(&qword_256E6FD38);
    v128 = sub_23F61CA18();
    v100 = v172;
    if ((v128 & 1) != 0)
    {
      v129 = sub_23F3754D4(v120, v119);
      if ((v127 & 1) != (v130 & 1))
        goto LABEL_59;
      v126 = v129;
    }
    v131 = v180;
    if ((v127 & 1) != 0)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v178 + 40))(v180[7] + *(_QWORD *)(v178 + 72) * v126, v177, v179);
    }
    else
    {
      v180[(v126 >> 6) + 8] |= 1 << v126;
      v132 = (uint64_t *)(v131[6] + 16 * v126);
      *v132 = v120;
      v132[1] = v119;
      v122((char *)(v131[7] + *(_QWORD *)(v178 + 72) * v126), v177, v179);
      v133 = v131[2];
      v134 = __OFADD__(v133, 1);
      v135 = v133 + 1;
      if (v134)
        goto LABEL_57;
      v131[2] = v135;
      sub_23F617BA0();
    }
    v99 = (uint64_t)v180;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v161)(v117, v100);
    sub_23F3625D8((uint64_t)v176, &qword_256E6FCD8);
    v65 = v171;
    v98 = v174;
  }
  v105 = v173 + 7;
  while ((uint64_t)v105 < (uint64_t)v158)
  {
    v103 = *(_QWORD *)(v157 + 8 * (_QWORD)v105++);
    if (v103)
    {
      v104 = v105 - 1;
      goto LABEL_42;
    }
  }
LABEL_52:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v136 = sub_23F5C2F54(v99);
  swift_bridgeObjectRelease();
  v137 = type metadata accessor for ResolvableTool();
  MEMORY[0x24BDAC7A8](v137);
  *(&v145 - 2) = v155;
  *(&v145 - 1) = v138;
  v139 = v156;
  sub_23F51C1C4(v136, (uint64_t (*)(char *, _QWORD, _QWORD, char *))sub_23F523BE4, (uint64_t)(&v145 - 4));
  if (v139)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v152 + 8))(v147, v153);
    return ((uint64_t (*)(char *, uint64_t))v161)(v154, v100);
  }
  else
  {
    sub_23F51D350(v140);
    swift_bridgeObjectRelease();
    sub_23F6184AC();
    v141 = swift_allocBox();
    v142 = v147;
    v143 = v153;
    v146(v150, (uint64_t)v147, v153);
    sub_23F618494();
    (*(void (**)(char *, uint64_t))(v152 + 8))(v142, v143);
    ((void (*)(char *, uint64_t))v161)(v154, v100);
    v144 = v151;
    *v151 = v141;
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v65 + 104))(v144, *MEMORY[0x24BE54930], v100);
  }
}

uint64_t sub_23F5210F4@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (sub_23F375424(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v3 + 56);
    v8 = sub_23F524794();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, v8);
    v9 = a2;
    v10 = 0;
    v11 = v8;
  }
  else
  {
    v11 = sub_23F524794();
    v9 = a2;
    v10 = 1;
  }
  return sub_23F36196C(v9, v10, 1, v11);
}

uint64_t sub_23F521194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t var50[12];

  v9 = sub_23F35D2E8(qword_256E791C0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)var50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ParameterPromptMap(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)var50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F617BA0();
  sub_23F3687E4(a2, a3, a6);
  swift_bridgeObjectRelease();
  if (sub_23F36195C((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F3625D8((uint64_t)v11, qword_256E791C0);
    sub_23F52383C();
    swift_allocError();
    *(_QWORD *)v15 = a2;
    *(_QWORD *)(v15 + 8) = a3;
    *(_BYTE *)(v15 + 16) = 1;
    sub_23F617BA0();
    swift_willThrow();
  }
  else
  {
    sub_23F49B950((uint64_t)v11, (uint64_t)v14, type metadata accessor for ParameterPromptMap);
    MEMORY[0x24BDAC7A8](v16);
    var50[-2] = (uint64_t)v14;
    sub_23F60BE3C((uint64_t)sub_23F524704, (uint64_t)&var50[-4], v17, v18, v19, v20, v21, v22, var50[0], var50[1], var50[2], var50[3], var50[4], var50[5], var50[6], var50[7], var50[8], var50[9], var50[10],
      var50[11]);
    a3 = sub_23F61BB78();
    sub_23F3663AC((uint64_t)v14, type metadata accessor for ParameterPromptMap);
  }
  return a3;
}

uint64_t sub_23F521368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  _QWORD v33[2];
  int v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = sub_23F6184B8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v33 - v11;
  v41 = sub_23F619E98();
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F619088();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v15(v12, a2, v6);
  v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v15;
  v15(v10, a1, v6);
  v16 = sub_23F619E8C();
  v17 = sub_23F61C628();
  v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v19 = swift_slowAlloc();
    v38 = a2;
    v20 = v19;
    v36 = swift_slowAlloc();
    v43 = v36;
    *(_DWORD *)v20 = 136643075;
    v33[1] = v20 + 4;
    sub_23F3EC80C();
    v35 = v16;
    v34 = v18;
    v21 = sub_23F61CC1C();
    sub_23F37AE00(v21, v22, &v43);
    v42 = v23;
    v37 = a3;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v24 = *(void (**)(char *, uint64_t))(v7 + 8);
    v24(v12, v6);
    *(_WORD *)(v20 + 12) = 2085;
    v25 = sub_23F61CC1C();
    sub_23F37AE00(v25, v26, &v43);
    v42 = v27;
    a3 = v37;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v24(v10, v6);
    v28 = v35;
    _os_log_impl(&dword_23F35A000, v35, (os_log_type_t)v34, "❗️ Folding parameters, but parameter key has already been seen.\nTaking new value: %{sensitive}s\nover old value: %{sensitive}s", (uint8_t *)v20, 0x16u);
    v29 = v36;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v29, -1, -1);
    v30 = v20;
    a2 = v38;
    MEMORY[0x242670B70](v30, -1, -1);

  }
  else
  {
    v31 = *(void (**)(char *, uint64_t))(v7 + 8);
    v31(v12, v6);
    v31(v10, v6);

  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v41);
  return v40(a3, a2, v6);
}

uint64_t sub_23F521654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v47 = a1;
  v48 = a6;
  v9 = sub_23F61847C();
  MEMORY[0x24BDAC7A8](v9);
  v45 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(qword_256E791C0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ParameterPromptMap(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_23F6184B8();
  v49 = *(_QWORD *)(v51 - 8);
  v17 = MEMORY[0x24BDAC7A8](v51);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v42 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v43 = (uint64_t)&v42 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v42 - v25;
  v46 = a4;
  sub_23F61844C();
  sub_23F617BA0();
  sub_23F3687E4(a2, a3, v48);
  swift_bridgeObjectRelease();
  if (sub_23F36195C((uint64_t)v13, 1, v14) == 1)
  {
    sub_23F3625D8((uint64_t)v13, qword_256E791C0);
    sub_23F52383C();
    swift_allocError();
    *(_QWORD *)v27 = a2;
    *(_QWORD *)(v27 + 8) = a3;
    *(_BYTE *)(v27 + 16) = 1;
    sub_23F617BA0();
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v51);
  }
  else
  {
    sub_23F49B950((uint64_t)v13, (uint64_t)v16, type metadata accessor for ParameterPromptMap);
    MEMORY[0x24BDAC7A8](v29);
    *(&v42 - 2) = (uint64_t)v16;
    sub_23F60BE3C((uint64_t)sub_23F523BFC, (uint64_t)(&v42 - 4), v30, v31, v32, v33, v34, v35, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52,
      v53);
    v48 = sub_23F61BB78();
    v44 = v36;
    sub_23F3663AC((uint64_t)v16, type metadata accessor for ParameterPromptMap);
    v37 = v49;
    v38 = *(void (**)(uint64_t, char *, uint64_t))(v49 + 32);
    v39 = v43;
    v40 = v51;
    v38(v43, v19, v51);
    v41 = *(void (**)(char *, uint64_t))(v37 + 8);
    v41(v22, v40);
    v38((uint64_t)v26, (char *)v39, v40);
    sub_23F618464();
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v19, v26, v40);
    sub_23F618458();
    v41(v26, v40);
    return v48;
  }
}

uint64_t sub_23F521994@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ParameterPromptMap(0) + 20));
  if (*(_QWORD *)(v3 + 16) && (sub_23F375424(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v3 + 56);
    v8 = sub_23F6184B8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, v8);
    v9 = a2;
    v10 = 0;
    v11 = v8;
  }
  else
  {
    v11 = sub_23F6184B8();
    v9 = a2;
    v10 = 1;
  }
  return sub_23F36196C(v9, v10, 1, v11);
}

uint64_t sub_23F521A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F362ABC();
  v4 = v3;
  v5 = sub_23F61BCE0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F383EC4();
  v7 = sub_23F618C68();
  v20 = *(_QWORD *)(v7 - 8);
  v21 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F38F964();
  v19 = v10 - v9;
  v11 = sub_23F618BB4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3B1C68();
  v13 = sub_23F61B5D8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3D9CCC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v2, v4, v11);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 88))(v2, v11);
  if (v15 == *MEMORY[0x24BE57550])
    goto LABEL_2;
  if (v15 == *MEMORY[0x24BE57558])
  {
    sub_23F3D98DC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v2, v5);
    v16 = sub_23F61BCC8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
    return v16;
  }
  if (v15 == *MEMORY[0x24BE57548] || v15 == *MEMORY[0x24BE57540])
  {
LABEL_2:
    sub_23F3D98DC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v0, v2, v13);
    v16 = sub_23F61B5A8();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0, v13);
    return v16;
  }
  if (v15 == *MEMORY[0x24BE57568])
  {
    sub_23F3D98DC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v19, v2, v21);
    sub_23F35EA9C((_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 264));
    sub_23F618C44();
    sub_23F3A2898();
    sub_23F3837B0();
    sub_23F61C1FC();
    sub_23F524768();
    sub_23F524738();
    sub_23F3837B0();
    sub_23F61C280();
    sub_23F618C50();
    sub_23F61C1FC();
    sub_23F524768();
    sub_23F524738();
    sub_23F3837B0();
    v16 = 0;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    return v16;
  }
  result = sub_23F61CC58();
  __break(1u);
  return result;
}

void sub_23F521D00(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint8_t *v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v11 = v10;
  v34 = a7;
  v31 = a1;
  v32 = a6;
  v36 = a5;
  v30 = a4;
  v33 = a10;
  v15 = sub_23F619E98();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6190D0();
  v19 = sub_23F619E8C();
  v20 = sub_23F61C610();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v29 = a8;
    v22 = v21;
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_23F35A000, v19, v20, "Enforcing string quoting", v21, 2u);
    v23 = v22;
    v11 = v10;
    a8 = v29;
    MEMORY[0x242670B70](v23, -1, -1);
  }

  v24 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  MEMORY[0x24BDAC7A8](v24);
  v25 = v35;
  *(&v29 - 10) = v30;
  *(&v29 - 9) = v25;
  v26 = v32;
  *(&v29 - 8) = v31;
  *(&v29 - 7) = v26;
  *(&v29 - 6) = v34;
  *(&v29 - 5) = a8;
  *((double *)&v29 - 4) = a2;
  *(&v29 - 3) = v36;
  *(&v29 - 2) = a9;
  *(&v29 - 1) = v33;
  sub_23F367ED8();
  if (!v11)
  {
    sub_23F51BF14();
    v28 = v27;
    swift_bridgeObjectRelease();
    sub_23F51D218(v28);
  }
}

uint64_t sub_23F521F08@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23F6184B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

void sub_23F521F44(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, double a9@<D0>, void (*a10)(char *, uint64_t), NSObject *a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  _DWORD *v69;
  uint8_t *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  os_log_t v77;
  char *v78;
  char v79;
  uint64_t v80;
  uint64_t *v81;
  char *v82;
  uint64_t *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t);
  uint64_t *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  NSObject *v112;
  os_log_type_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, void (*)(char *, char *, uint64_t));
  void (*v129)(char *, char *, uint64_t);
  char *v130;
  char *v131;
  void (*v132)(char *, void (*)(char *, char *, uint64_t));
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  char *v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  char *v151;
  void (*v152)(char *, char *, uint64_t);
  void (*v153)(char *, uint64_t);
  os_log_t v154;
  char *v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(char *, char *, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162[2];

  v138 = a7;
  v142 = a6;
  v141 = a5;
  v140 = a4;
  v137 = a3;
  v149 = (uint64_t *)a8;
  v150 = sub_23F6184B8();
  v158 = *(_QWORD *)(v150 - 8);
  v14 = MEMORY[0x24BDAC7A8](v150);
  v139 = (char *)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v143 = (uint64_t)&v134 - v16;
  v157 = sub_23F35D2E8(&qword_256E6FCD8);
  v17 = MEMORY[0x24BDAC7A8](v157);
  v144 = (uint64_t)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v145 = (uint64_t *)((char *)&v134 - v20);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v136 = (uint64_t *)((char *)&v134 - v22);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v146 = (uint64_t *)((char *)&v134 - v24);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v153 = (void (*)(char *, uint64_t))((char *)&v134 - v26);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v152 = (void (*)(char *, char *, uint64_t))((char *)&v134 - v28);
  MEMORY[0x24BDAC7A8](v27);
  v151 = (char *)&v134 - v29;
  v30 = sub_23F619E98();
  v147 = *(_QWORD *)(v30 - 8);
  v148 = v30;
  v31 = MEMORY[0x24BDAC7A8](v30);
  v154 = (os_log_t)((char *)&v134 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v31);
  v155 = (char *)&v134 - v33;
  v34 = type metadata accessor for RenderableTool();
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v134 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_23F35D2E8(&qword_256E78A98);
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v134 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = (void (*)(char *, char *, uint64_t))sub_23F61B95C();
  v40 = *((_QWORD *)v159 - 1);
  v41 = MEMORY[0x24BDAC7A8](v159);
  v43 = (char *)&v134 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v134 - v44;
  v156 = a1;
  v47 = *a1;
  v46 = a1[1];
  v48 = sub_23F618BB4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v36, a2, v48);
  swift_storeEnumTagMultiPayload();
  v49 = type metadata accessor for ResolvableTool();
  v50 = v160;
  sub_23F5C31BC(v47, v46, (uint64_t)v36, *(_QWORD *)(a2 + *(int *)(v49 + 20)), (uint64_t)v39);
  sub_23F3663AC((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
  v160 = v50;
  if (!v50)
  {
    v51 = (uint64_t *)v151;
    v135 = v43;
    v53 = (uint64_t)v152;
    v52 = (uint64_t)v153;
    v54 = v155;
    v55 = v157;
    if (sub_23F36195C((uint64_t)v39, 1, (uint64_t)v159) == 1)
    {
      sub_23F3625D8((uint64_t)v39, &qword_256E78A98);
      v56 = v54;
      sub_23F6190D0();
      v57 = *(int *)(v55 + 48);
      v58 = v51;
      v59 = (char *)v51 + v57;
      v60 = (uint64_t)v156;
      v61 = (char *)v156 + v57;
      v62 = v156[1];
      *v58 = *v156;
      v58[1] = v62;
      v63 = v150;
      v159 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
      v159(v59, v61, v150);
      v64 = (uint64_t *)v53;
      sub_23F49B8D8((uint64_t)v58, v53, &qword_256E6FCD8);
      v65 = v52;
      sub_23F49B97C((uint64_t)v58, v52, &qword_256E6FCD8);
      sub_23F617BA0();
      v66 = sub_23F619E8C();
      v67 = sub_23F61C610();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = v63;
        v154 = v66;
        v69 = (_DWORD *)swift_slowAlloc();
        v151 = (char *)swift_slowAlloc();
        v162[0] = (uint64_t)v151;
        *v69 = 136315138;
        v145 = v69 + 1;
        v70 = (uint8_t *)v69;
        v71 = *(int *)(v157 + 48);
        v72 = (char *)v146 + v71;
        v73 = *v64;
        v74 = v64[1];
        v159((char *)v146 + v71, (char *)v64 + v71, v68);
        v75 = *(void (**)(char *, uint64_t))(v158 + 8);
        sub_23F617BA0();
        v75(v72, v68);
        sub_23F37AE00(v73, v74, v162);
        v161 = v76;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        sub_23F3625D8(v65, &qword_256E6FCD8);
        v60 = (uint64_t)v156;
        sub_23F3625D8((uint64_t)v64, &qword_256E6FCD8);
        v77 = v154;
        _os_log_impl(&dword_23F35A000, v154, v67, "Could not find parameter definition for key %s", v70, 0xCu);
        v78 = v151;
        swift_arrayDestroy();
        MEMORY[0x242670B70](v78, -1, -1);
        MEMORY[0x242670B70](v70, -1, -1);

        (*(void (**)(char *, uint64_t))(v147 + 8))(v155, v148);
      }
      else
      {
        sub_23F3625D8(v65, &qword_256E6FCD8);
        sub_23F3625D8((uint64_t)v64, &qword_256E6FCD8);

        (*(void (**)(char *, uint64_t))(v147 + 8))(v56, v148);
      }
    }
    else
    {
      (*(void (**)(char *, char *, _QWORD *))(v40 + 32))(v45, v39, v159);
      v79 = sub_23F5D4664();
      v134 = v40;
      if ((v79 & 1) != 0)
      {
        v153 = a10;
        v154 = a11;
        v155 = v45;
        v80 = *(int *)(v55 + 48);
        v81 = v146;
        v82 = (char *)v146 + v80;
        v83 = v156;
        v84 = (char *)v156 + v80;
        v85 = v156[1];
        *v146 = *v156;
        v81[1] = v85;
        v86 = *(char **)(v158 + 16);
        v151 = v84;
        v152 = (void (*)(char *, char *, uint64_t))v86;
        v87 = v150;
        ((void (*)(char *))v86)(v82);
        v88 = (uint64_t)v139;
        swift_getAtKeyPath();
        v89 = *(NSObject **)(v138 + 16);
        v90 = v140;
        swift_retain();
        v91 = v141;
        swift_retain();
        v92 = v142;
        sub_23F617BA0();
        sub_23F617BA0();
        v93 = v143;
        v94 = v89;
        v95 = v160;
        sub_23F60A92C(v88, v90, v91, v92, v94, v143, a9);
        v160 = v95;
        v96 = *(void (**)(uint64_t, uint64_t))(v158 + 8);
        v96(v88, v87);
        v96((uint64_t)v82, v87);
        v97 = v149;
        v98 = (char *)v81 + *(int *)(v157 + 48);
        v100 = *v83;
        v99 = v83[1];
        *v81 = v100;
        v81[1] = v99;
        v101 = v151;
        v152(v98, v151, v87);
        *v97 = v100;
        v97[1] = v99;
        sub_23F617BA0();
        v153(v101, v93);
        v96(v93, v87);
        (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v134 + 8))(v155, v159);
        v96((uint64_t)v98, v87);
        return;
      }
      sub_23F6190D0();
      v102 = v55;
      v103 = *(int *)(v55 + 48);
      v104 = (uint64_t)v136;
      v105 = (char *)v136 + v103;
      v60 = (uint64_t)v156;
      v106 = (char *)v156 + v103;
      v107 = v156[1];
      *v136 = *v156;
      *(_QWORD *)(v104 + 8) = v107;
      v108 = v150;
      v153 = *(void (**)(char *, uint64_t))(v158 + 16);
      ((void (*)(char *, char *, uint64_t))v153)(v105, v106, v150);
      sub_23F49B8D8(v104, (uint64_t)v145, &qword_256E6FCD8);
      v109 = v104;
      v110 = v144;
      sub_23F49B97C(v109, v144, &qword_256E6FCD8);
      v111 = v135;
      (*(void (**)(char *, char *, _QWORD *))(v40 + 16))(v135, v45, v159);
      sub_23F617BA0();
      v112 = sub_23F619E8C();
      v113 = sub_23F61C610();
      v114 = v113;
      if (os_log_type_enabled(v112, v113))
      {
        v115 = swift_slowAlloc();
        LODWORD(v151) = v114;
        v116 = v102;
        v117 = v115;
        v152 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
        v162[0] = (uint64_t)v152;
        *(_DWORD *)v117 = 136315394;
        v143 = v117 + 4;
        v118 = *(int *)(v116 + 48);
        v119 = v145;
        v155 = v45;
        v120 = (char *)v146 + v118;
        v121 = *v145;
        v122 = v145[1];
        ((void (*)(char *, char *, uint64_t))v153)((char *)v146 + v118, (char *)v145 + v118, v108);
        v123 = *(void (**)(char *, uint64_t))(v158 + 8);
        sub_23F617BA0();
        v123(v120, v108);
        sub_23F37AE00(v121, v122, v162);
        v161 = v124;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        sub_23F3625D8(v144, &qword_256E6FCD8);
        sub_23F3625D8((uint64_t)v119, &qword_256E6FCD8);
        *(_WORD *)(v117 + 12) = 2080;
        v125 = sub_23F4E64E0();
        sub_23F37AE00(v125, v126, v162);
        v161 = v127;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        v128 = *(void (**)(char *, _QWORD *))(v134 + 8);
        v129 = v159;
        v128(v111, v159);
        _os_log_impl(&dword_23F35A000, v112, (os_log_type_t)v151, "Skipping non quotable parameter Key: %s, Type: %s", (uint8_t *)v117, 0x16u);
        v130 = (char *)v152;
        swift_arrayDestroy();
        v131 = v130;
        v60 = (uint64_t)v156;
        MEMORY[0x242670B70](v131, -1, -1);
        MEMORY[0x242670B70](v117, -1, -1);

        (*(void (**)(os_log_t, uint64_t))(v147 + 8))(v154, v148);
        v128(v155, v129);
      }
      else
      {

        v132 = *(void (**)(char *, _QWORD *))(v134 + 8);
        v133 = v159;
        v132(v111, v159);
        sub_23F3625D8(v110, &qword_256E6FCD8);
        sub_23F3625D8((uint64_t)v145, &qword_256E6FCD8);
        (*(void (**)(os_log_t, uint64_t))(v147 + 8))(v154, v148);
        v132(v45, v133);
      }
    }
    sub_23F49B8D8(v60, (uint64_t)v149, &qword_256E6FCD8);
  }
}

void sub_23F5229C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, char *, uint64_t);
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  void (*v58)(uint64_t, char *, uint64_t);
  uint64_t *v59;
  int v60;
  os_log_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  sub_23F362C98();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v65 = v27;
  v29 = v28(0);
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  sub_23F362AAC();
  v33 = v31 - v32;
  v35 = MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v57 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v57 - v38;
  v40 = sub_23F619E98();
  v63 = *(_QWORD *)(v40 - 8);
  v64 = v40;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F3D9CCC();
  sub_23F619088();
  v42 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 16);
  v66 = v24;
  sub_23F5247E8((uint64_t)v39, v24);
  sub_23F5247E8((uint64_t)v37, v26);
  v43 = sub_23F619E8C();
  v44 = sub_23F61C628();
  v45 = v44;
  if (os_log_type_enabled(v43, v44))
  {
    v46 = sub_23F366668();
    v61 = v43;
    v47 = v46;
    v62 = sub_23F366668();
    a10 = v62;
    *(_DWORD *)v47 = 136643075;
    v57 = v47 + 4;
    sub_23F5247E8(v33, (uint64_t)v39);
    v48 = sub_23F524804();
    v58 = v42;
    sub_23F524788(v48, v49);
    v67 = v50;
    v60 = v45;
    v59 = &a9;
    sub_23F61C790();
    sub_23F362C60();
    v51 = *(void (**)(char *, uint64_t))(v30 + 8);
    v51(v39, v29);
    *(_WORD *)(v47 + 12) = 2085;
    v58(v33, v37, v29);
    v52 = sub_23F524804();
    sub_23F524788(v52, v53);
    v67 = v54;
    sub_23F61C790();
    sub_23F362C60();
    v51(v37, v29);
    _os_log_impl(&dword_23F35A000, v61, (os_log_type_t)v60, "❗️ Folding parameters, but parameter key has already been seen.\nTaking new value: %{sensitive}s\nover old value: %{sensitive}s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v55 = (void (*)(uint64_t, uint64_t, uint64_t))v42;
  v56 = *(void (**)(char *, uint64_t))(v30 + 8);
  v56(v39, v29);
  v56(v37, v29);

  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v20, v64);
  v55(v65, v66, v29);
  sub_23F362870();
}

uint64_t sub_23F522C44@<X0>(uint64_t a1@<X0>, NSObject *a2@<X4>, uint64_t *a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v4 = v3;
  v7 = sub_23F524794();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v11 = (uint64_t *)(v10 - v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10 - v9, a1, v7);
  v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 88))(v11, v7);
  if ((_DWORD)v12 != *MEMORY[0x24BE549A0])
  {
    sub_23F524810(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
LABEL_7:
    v24 = (uint64_t)a3;
    v25 = 1;
    return sub_23F36196C(v24, v25, 1, v7);
  }
  v13 = v12;
  sub_23F524810(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 96));
  v14 = *v11;
  if (*(_BYTE *)(*v11 + 32) != 3)
  {
    swift_release();
    goto LABEL_7;
  }
  v15 = *(_QWORD *)(v14 + 16);
  v16 = *(_QWORD *)(v14 + 24);
  sub_23F617BA0();
  swift_release();
  v17 = v15;
  v18 = StringExprsAreQuotesRequirement.enforce(_:quotes:)(v15, v16, a2);
  if (v4)
  {

    sub_23F5247C8(v15);
    v22 = 0;
    v23 = 0xE000000000000000;
  }
  else
  {
    v26 = v18;
    v27 = v20;
    v28 = v21;
    v29 = v17;
    v30 = v19;
    sub_23F5247C8(v29);
    v22 = MEMORY[0x24266F6AC](v26, v30, v27, v28);
    v23 = v31;
    swift_bridgeObjectRelease();
  }
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v22;
  *(_QWORD *)(v32 + 24) = v23;
  *(_BYTE *)(v32 + 32) = 3;
  *a3 = v32;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 104))(a3, v13, v7);
  v24 = (uint64_t)a3;
  v25 = 0;
  return sub_23F36196C(v24, v25, 1, v7);
}

uint64_t sub_23F522E48@<X0>(unint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_23F51DA44(a1, *(_QWORD **)(v3 + 24), *(_QWORD *)(v3 + 32), a2, a3);
}

uint64_t sub_23F522E68()
{
  sub_23F35D2E8(&qword_256E753A8);
  sub_23F35D2E8(&qword_256E704E0);
  return sub_23F5E1B48();
}

uint64_t sub_23F522EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *a4;
  *a4 = 0x8000000000000000;
  sub_23F51A744(a1, a2, a3, isUniquelyReferenced_nonNull_native, &v10);
  *a4 = v10;
  return swift_bridgeObjectRelease();
}

void sub_23F522F4C(uint64_t a1, char a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  char v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  unint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  id v50;
  _QWORD v51[2];
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;

  v4 = v3;
  v61 = a3;
  v7 = sub_23F6184B8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v51 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v51 - v15;
  v17 = sub_23F35D2E8(&qword_256E6FCD0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v21 = *(_QWORD *)(a1 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v57 = (_QWORD *)((char *)v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v58 = v4;
  v56 = (char *)v57 + *(int *)(v18 + 48);
  v22 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  v54 = *(_QWORD *)(v20 + 72);
  v51[1] = a1;
  sub_23F617BA0();
  v55 = v16;
  v52 = v14;
  v53 = v11;
  while (1)
  {
    v59 = v22;
    v60 = v21;
    v23 = v57;
    sub_23F49B8D8(v22, (uint64_t)v57, &qword_256E6FCD0);
    v25 = *v23;
    v24 = v23[1];
    v64 = v25;
    v65 = v24;
    v26 = v8;
    v27 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v28 = v7;
    v27(v16, v56, v7);
    v29 = *(_QWORD **)v61;
    v31 = sub_23F3754D4(v25, v24);
    v32 = v29[2];
    v33 = (v30 & 1) == 0;
    if (__OFADD__(v32, v33))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      sub_23F61CC94();
      __break(1u);
      goto LABEL_22;
    }
    v34 = v30;
    if (v29[3] >= v32 + v33)
    {
      if ((a2 & 1) == 0)
      {
        sub_23F35D2E8(&qword_256E6FD10);
        sub_23F61CA24();
      }
    }
    else
    {
      sub_23F51543C();
      v35 = sub_23F3754D4(v25, v24);
      if ((v34 & 1) != (v36 & 1))
        goto LABEL_21;
      v31 = v35;
    }
    v37 = *(_QWORD **)v61;
    if ((v34 & 1) != 0)
      break;
    v37[(v31 >> 6) + 8] |= 1 << v31;
    v44 = (uint64_t *)(v37[6] + 16 * v31);
    *v44 = v25;
    v44[1] = v24;
    v45 = v37[7] + *(_QWORD *)(v26 + 72) * v31;
    v16 = v55;
    v7 = v28;
    v27((char *)v45, v55, v28);
    v46 = v37[2];
    v47 = __OFADD__(v46, 1);
    v48 = v46 + 1;
    if (v47)
      goto LABEL_20;
    v37[2] = v48;
    v8 = v26;
LABEL_14:
    v22 = v59 + v54;
    a2 = 1;
    v21 = v60 - 1;
    if (v60 == 1)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  v8 = v26;
  v38 = *(_QWORD *)(v26 + 72) * v31;
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v26 + 16);
  v40 = (uint64_t)v53;
  v7 = v28;
  v39(v53, v37[7] + v38, v28);
  v41 = (uint64_t)v52;
  v16 = v55;
  v42 = v58;
  sub_23F521368(v40, (uint64_t)v55, (uint64_t)v52);
  if (!v42)
  {
    v58 = 0;
    v43 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v43(v40, v7);
    v43((uint64_t)v16, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 40))(*(_QWORD *)(*(_QWORD *)v61 + 56) + v38, v41, v7);
    goto LABEL_14;
  }
  v49 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v49(v40, v7);
  v66 = v42;
  v50 = v42;
  sub_23F35D2E8(&qword_256E70370);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v49((uint64_t)v16, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_22:
  v62 = 0;
  v63 = 0xE000000000000000;
  sub_23F61C8E0();
  sub_23F61C280();
  sub_23F61CA00();
  sub_23F61C280();
  sub_23F61CA60();
  __break(1u);
}

void sub_23F5233D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t (*v4)(_QWORD);
  void (*v5)(void);
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  char v38;
  uint64_t v39;
  char v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  id v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(_QWORD);
  void (*v65)(void);
  uint64_t v66;
  uint64_t *v67;
  char *v68;
  uint64_t v69;
  void *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;

  sub_23F362C98();
  v3 = v2;
  v64 = v4;
  v65 = v5;
  v7 = v6;
  v8 = v0;
  v74 = v9;
  v11 = v10;
  v13 = v12;
  v14 = v4(0);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F362AAC();
  v63 = v16 - v17;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v62 = (uint64_t)&v59 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v59 - v21;
  v71 = v7;
  v23 = sub_23F35D2E8(v7);
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3B1F34();
  v26 = *(_QWORD *)(v13 + 16);
  if (!v26)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    sub_23F362870();
    return;
  }
  v60 = v3;
  v61 = v13;
  v69 = (uint64_t)v7 + *(int *)(v24 + 48);
  v70 = (void *)v8;
  v27 = v13 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  v66 = *(_QWORD *)(v25 + 72);
  sub_23F617BA0();
  v67 = v7;
  v68 = v22;
  while (1)
  {
    v72 = v27;
    v73 = v26;
    sub_23F49B8D8(v27, (uint64_t)v7, v71);
    v29 = *v7;
    v28 = v7[1];
    v77 = *v7;
    v78 = v28;
    v30 = v1;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 32);
    v32 = v14;
    v31(v22, v69, v14);
    v33 = *(_QWORD **)v74;
    v35 = sub_23F52479C();
    v36 = v33[2];
    v37 = (v34 & 1) == 0;
    if (__OFADD__(v36, v37))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      sub_23F61CC94();
      __break(1u);
      goto LABEL_23;
    }
    v38 = v34;
    if (v33[3] >= v36 + v37)
    {
      if ((v11 & 1) == 0)
      {
        sub_23F35D2E8(v60);
        sub_23F61CA24();
      }
    }
    else
    {
      v65();
      v39 = sub_23F52479C();
      if ((v38 & 1) != (v40 & 1))
        goto LABEL_22;
      v35 = v39;
    }
    v41 = *(_QWORD **)v74;
    if ((v38 & 1) != 0)
      break;
    v41[(v35 >> 6) + 8] |= 1 << v35;
    v52 = (uint64_t *)(v41[6] + 16 * v35);
    *v52 = v29;
    v52[1] = v28;
    v53 = v41[7] + *(_QWORD *)(v30 + 72) * v35;
    v22 = v68;
    v14 = v32;
    v31((char *)v53, (uint64_t)v68, v32);
    v54 = v41[2];
    v55 = __OFADD__(v54, 1);
    v56 = v54 + 1;
    if (v55)
      goto LABEL_21;
    v41[2] = v56;
    v1 = v30;
LABEL_14:
    v7 = v67;
    v27 = v72 + v66;
    v11 = 1;
    v26 = v73 - 1;
    if (v73 == 1)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_19;
    }
  }
  v1 = v30;
  v42 = *(_QWORD *)(v30 + 72) * v35;
  v43 = v63;
  v14 = v32;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 16))(v63, v41[7] + v42, v32);
  v44 = v62;
  v22 = v68;
  v45 = v70;
  sub_23F5229C8(v43, (uint64_t)v68, (uint64_t)v64, v46, v47, v48, v49, v50, v59, (uint64_t)v60, v61, v62, v63, (uint64_t)v64, (uint64_t)v65, v66, (uint64_t)v67, (uint64_t)v68, v69,
    (uint64_t)v70);
  if (!v45)
  {
    v70 = 0;
    v51 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v51(v43, v14);
    v51((uint64_t)v22, v14);
    swift_bridgeObjectRelease();
    sub_23F383C64(*(_QWORD *)(*(_QWORD *)v74 + 56) + v42, v44, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 40));
    goto LABEL_14;
  }
  v57 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v57(v43, v14);
  v58 = v45;
  sub_23F35D2E8(&qword_256E70370);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_23F362C60();
    v57((uint64_t)v22, v14);
    sub_23F362C60();
    swift_bridgeObjectRelease();

    goto LABEL_19;
  }
LABEL_23:
  v75 = 0;
  v76 = 0xE000000000000000;
  sub_23F61C8E0();
  sub_23F61C280();
  sub_23F61CA00();
  sub_23F61C280();
  sub_23F61CA60();
  __break(1u);
}

uint64_t type metadata accessor for ResolvedProgram()
{
  uint64_t result;

  result = qword_256E79220;
  if (!qword_256E79220)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23F52383C()
{
  unint64_t result;

  result = qword_256E79198;
  if (!qword_256E79198)
  {
    result = MEMORY[0x242670A44](&unk_23F62BA0C, &type metadata for PromptMapperResolverError);
    atomic_store(result, (unint64_t *)&qword_256E79198);
  }
  return result;
}

uint64_t sub_23F52387C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F51FC48(v1 + 16, a1);
}

uint64_t sub_23F523888()
{
  swift_bridgeObjectRelease();
  sub_23F5247C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F5238D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F51FCDC(v1 + 16, a1);
}

uint64_t sub_23F5238D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23F51FD70(a1, *(uint64_t **)(v2 + 16), *(_OWORD **)(v2 + 24), *(_QWORD *)(v2 + 32), *(uint64_t **)(v2 + 40), a2);
}

uint64_t sub_23F5238F4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PromptMapperResolver(a2, a1);
  return a2;
}

uint64_t sub_23F52392C(uint64_t a1)
{
  return sub_23F523A28(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double))sub_23F51E450);
}

uint64_t sub_23F52394C()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 56);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 96);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 176);
  swift_release();
  if (*(_QWORD *)(v0 + 224))
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 256);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F523A0C(uint64_t a1)
{
  return sub_23F523A28(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double))sub_23F51E948);
}

uint64_t sub_23F523A28(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double))
{
  uint64_t v2;

  return a2(a1, v2 + 16, v2 + 296, *(_QWORD *)(v2 + 344), *(_QWORD *)(v2 + 352), *(_QWORD *)(v2 + 360), *(_QWORD *)(v2 + 376), *(double *)(v2 + 368));
}

uint64_t sub_23F523A58()
{
  sub_23F5247C0();
  return swift_deallocObject();
}

uint64_t sub_23F523A78(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_23F36145C((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_23F362678(&v12, v10 + 40 * a1 + 32);
}

void sub_23F523AF0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, double a9@<D0>, void (*a10)(char *, uint64_t), NSObject *a11, _QWORD *a12)
{
  uint64_t v12;

  sub_23F521F44(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  if (v12)
    *a12 = v12;
}

void sub_23F523B24(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_23F523AF0(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 72), a3, *(double *)(v3 + 64), *(void (**)(char *, uint64_t))(v3 + 80), *(NSObject **)(v3 + 88), a2);
}

uint64_t sub_23F523B64()
{
  uint64_t v0;

  sub_23F3D7A48(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_23F523B8C()
{
  sub_23F5247C0();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F523BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23F521194(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

void sub_23F523BCC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F5C3A70(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23F523BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23F521654(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_23F523BFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F521994(*(_QWORD *)(v1 + 16), a1);
}

uint64_t destroy for PromptMapperResolver(uint64_t a1)
{
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
  swift_release();
  if (*(_QWORD *)(a1 + 208))
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 240);
}

uint64_t initializeWithCopy for PromptMapperResolver(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  v9 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_retain();
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 216);
    v11 = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 208) = v9;
    *(_QWORD *)(a1 + 216) = v10;
    v12 = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 224) = v11;
    *(_QWORD *)(a1 + 232) = v12;
    swift_retain();
    swift_retain();
    sub_23F617BA0();
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v13;
  }
  v14 = *(_QWORD *)(a2 + 264);
  v15 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v14;
  *(_QWORD *)(a1 + 272) = v15;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 240, a2 + 240);
  return a1;
}

uint64_t *assignWithCopy for PromptMapperResolver(uint64_t *a1, uint64_t *a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;

  sub_23F361AD0(a1, a2);
  sub_23F361AD0(a1 + 5, a2 + 5);
  sub_23F361AD0(a1 + 10, a2 + 10);
  sub_23F361AD0(a1 + 15, a2 + 15);
  sub_23F361AD0(a1 + 20, a2 + 20);
  a1[25] = a2[25];
  swift_retain();
  swift_release();
  v4 = a1 + 26;
  v6 = a2 + 26;
  v5 = a2[26];
  if (a1[26])
  {
    if (v5)
    {
      a1[26] = v5;
      swift_retain();
      swift_release();
      a1[27] = a2[27];
      swift_retain();
      swift_release();
      a1[28] = a2[28];
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      a1[29] = a2[29];
    }
    else
    {
      sub_23F523EF8((uint64_t)(a1 + 26));
      v7 = *((_OWORD *)a2 + 14);
      *v4 = *v6;
      *((_OWORD *)a1 + 14) = v7;
    }
  }
  else if (v5)
  {
    a1[26] = v5;
    a1[27] = a2[27];
    a1[28] = a2[28];
    a1[29] = a2[29];
    swift_retain();
    swift_retain();
    sub_23F617BA0();
  }
  else
  {
    v8 = *((_OWORD *)a2 + 14);
    *v4 = *v6;
    *((_OWORD *)a1 + 14) = v8;
  }
  sub_23F361AD0(a1 + 30, a2 + 30);
  return a1;
}

uint64_t sub_23F523EF8(uint64_t a1)
{
  destroy for StringExprsAreQuotesRequirement();
  return a1;
}

void *initializeWithTake for PromptMapperResolver(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t assignWithTake for PromptMapperResolver(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 160);
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  v7 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v7;
  swift_release();
  v8 = *(_QWORD *)(a2 + 208);
  if (!*(_QWORD *)(a1 + 208))
    goto LABEL_5;
  if (!v8)
  {
    sub_23F523EF8(a1 + 208);
LABEL_5:
    v9 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v9;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 208) = v8;
  swift_release();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_release();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
LABEL_6:
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 240);
  v10 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v10;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  return a1;
}

uint64_t getEnumTagSinglePayload for PromptMapperResolver(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 280))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptMapperResolver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 280) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 280) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptMapperResolver()
{
  return &type metadata for PromptMapperResolver;
}

uint64_t destroy for PromptMapperResolverError(uint64_t a1)
{
  return sub_23F435848(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s30IntelligenceFlowPlannerRuntime25PromptMapperResolverErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F435830(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PromptMapperResolverError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F435830(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23F435848(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PromptMapperResolverError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23F435848(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PromptMapperResolverError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptMapperResolverError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F5242B0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_23F5242C8(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PromptMapperResolverError()
{
  return &type metadata for PromptMapperResolverError;
}

uint64_t *sub_23F5242F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F6184E8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    sub_23F617BA0();
  }
  return a1;
}

uint64_t sub_23F52437C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F6184E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5243C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F6184E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F524420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F6184E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F52448C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F6184E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23F5244E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F6184E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F52454C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F524558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F6184E8();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F5245D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5245DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23F6184E8();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23F524650()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F6184E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23F5246C8()
{
  unint64_t result;

  result = qword_256E79258;
  if (!qword_256E79258)
  {
    result = MEMORY[0x242670A44](&unk_23F62B9BC, &type metadata for PromptMapperResolverError);
    atomic_store(result, (unint64_t *)&qword_256E79258);
  }
  return result;
}

uint64_t sub_23F524704@<X0>(uint64_t a1@<X8>)
{
  return sub_23F523BFC(a1);
}

uint64_t sub_23F524728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F524738()
{
  return sub_23F61C280();
}

uint64_t sub_23F524748()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F524750()
{
  return 0;
}

uint64_t sub_23F524768()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F524778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

void sub_23F524788(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 72));
}

uint64_t sub_23F524794()
{
  return sub_23F6184B8();
}

uint64_t sub_23F52479C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3754D4(v1, v0);
}

uint64_t sub_23F5247C0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5247C8(uint64_t a1)
{
  uint64_t v1;

  return sub_23F3D7A48(a1, v1, 3);
}

uint64_t sub_23F5247E0()
{
  return swift_dynamicCast();
}

uint64_t sub_23F5247E8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F5247F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F5247F8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F524804()
{
  return sub_23F61C16C();
}

uint64_t sub_23F524810@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

unint64_t sub_23F52481C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  _BOOL8 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;

  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v9 = a1;
    v46 = MEMORY[0x24BEE4AF8];
    sub_23F37B828(0, v7, 0);
    v8 = v46;
    result = sub_23F3C0378(v9);
    v13 = v12 & 1;
    v39 = v9 + 56;
    v38 = v9;
    while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(_BYTE *)(v9 + 32))
    {
      if (((*(_QWORD *)(v39 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
        goto LABEL_16;
      if (*(_DWORD *)(v9 + 36) != (_DWORD)v11)
        goto LABEL_17;
      v42 = v11;
      v43 = result;
      v44 = v7;
      v45 = v8;
      v14 = a6;
      v40 = *(_BYTE *)(*(_QWORD *)(v9 + 48) + 24 * result + 16);
      v41 = v13;
      sub_23F617BA0();
      v15 = sub_23F61C34C();
      v17 = v16;
      v19 = v18;
      v21 = v20;
      sub_23F362C60();
      MEMORY[0x24266F6AC](v15, v17, v19, v21);
      sub_23F384120();
      sub_23F52768C();
      sub_23F38813C();
      v22 = *(_QWORD *)(sub_23F527634() + 16);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v22 >> 61)
        goto LABEL_18;
      v23 = sub_23F5276D4();
      sub_23F3668F4();
      v24 = sub_23F61C34C();
      v26 = v25;
      v28 = v27;
      v30 = v29;
      swift_bridgeObjectRelease();
      MEMORY[0x24266F6AC](v24, v26, v28, v30);
      sub_23F362C60();
      sub_23F52768C();
      v31 = *(_QWORD *)(sub_23F527634() + 16);
      sub_23F384120();
      result = swift_bridgeObjectRelease();
      if (v31 >> 61)
        goto LABEL_19;
      result = sub_23F5276D4();
      if (result >> 14 < v23 >> 14)
        goto LABEL_20;
      v32 = result;
      a6 = v14;
      v8 = v45;
      v34 = *(_QWORD *)(v45 + 16);
      v33 = *(_QWORD *)(v45 + 24);
      if (v34 >= v33 >> 1)
      {
        v37 = sub_23F3B1A80(v33);
        sub_23F37B828((char *)v37, v34 + 1, 1);
        v8 = v45;
      }
      *(_QWORD *)(v8 + 16) = v34 + 1;
      v35 = v8 + 24 * v34;
      *(_QWORD *)(v35 + 32) = v23;
      *(_QWORD *)(v35 + 40) = v32;
      *(_BYTE *)(v35 + 48) = v40;
      v9 = v38;
      result = sub_23F3C0290(v43, v42, v41 & 1, v38);
      v13 = v36 & 1;
      v7 = v44 - 1;
      if (v44 == 1)
      {
        sub_23F382E0C(result, v11, v13);
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {
LABEL_14:
    sub_23F384120();
    swift_bridgeObjectRelease();
    sub_23F362C60();
    return v8;
  }
  return result;
}

uint64_t sub_23F524B34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v27 = MEMORY[0x24BEE4AF8];
    sub_23F37B910();
    v6 = 0;
    v4 = v27;
    v23 = a1 + 32;
    v24 = v3;
    do
    {
      v7 = (uint64_t *)(v23 + 24 * v6);
      v8 = *v7;
      v9 = v7[1];
      v10 = v7[2];
      sub_23F617BA0();
      sub_23F617BA0();
      v11 = sub_23F61C1E4();
      v13 = v12;
      swift_bridgeObjectRetain_n();
      sub_23F617BA0();
      sub_23F617BA0();
      v25 = v11;
      v14 = v2;
      v15 = sub_23F52481C(v10, v8, v9, v10, v11, v13);
      swift_bridgeObjectRelease();
      sub_23F382B28();
      v16 = sub_23F61C550();
      v26 = v16;
      v17 = *(_QWORD *)(v15 + 16);
      if (v17)
      {
        v18 = v15 + 48;
        do
        {
          v18 += 24;
          sub_23F471B2C();
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 = v26;
      }
      else
      {
        v19 = v16;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v27 + 16);
      if (v20 >= *(_QWORD *)(v27 + 24) >> 1)
        sub_23F37B910();
      ++v6;
      *(_QWORD *)(v27 + 16) = v20 + 1;
      v21 = (_QWORD *)(v27 + 24 * v20);
      v21[4] = v25;
      v21[5] = v13;
      v21[6] = v19;
      v2 = v14;
    }
    while (v6 != v24);
  }
  return v4;
}

uint64_t sub_23F524D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(unint64_t, _QWORD, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_23F362ABC();
  v43 = v3;
  v44 = v4;
  v38 = v5;
  v6 = sub_23F3B1728();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  v36 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E79260);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v37 = v10;
  sub_23F39C56C();
  sub_23F61BB0C();
  sub_23F5276AC();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F38F964();
  v40 = sub_23F61BB3C();
  v12 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E79268);
  v15 = *(_QWORD *)(v1 + 72);
  v16 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_23F61E980;
  v18 = v17 + v16;
  v19 = *(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104);
  v19(v18, *MEMORY[0x24BEBA278], v2);
  v19(v18 + v15, *MEMORY[0x24BEBA280], v2);
  v39 = v0;
  sub_23F61B548();
  sub_23F61BB24();
  v33 = v12;
  v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21 = v40;
  v20(v14, v40);
  v22 = *(_QWORD *)(v17 + 16);
  if (v22)
  {
    sub_23F3CFCEC(&qword_256E79270, (uint64_t (*)(uint64_t))MEMORY[0x24BEBA288], MEMORY[0x24BEBA298]);
    while ((sub_23F61C0A0() & 1) == 0)
    {
      v18 += v15;
      if (!--v22)
        goto LABEL_5;
    }
    sub_23F527624();
    swift_setDeallocating();
    sub_23F513574();
  }
  else
  {
LABEL_5:
    sub_23F527624();
    swift_setDeallocating();
    sub_23F513574();
    v23 = v37;
    sub_23F61B590();
    if (sub_23F36195C(v23, 1, v21) != 1)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v38, v23, v21);
    sub_23F3CFCB0(v23, &qword_256E79260);
    v24 = v36;
    sub_23F619088();
    v25 = sub_23F619E8C();
    v26 = sub_23F61C61C();
    v27 = os_log_type_enabled(v25, v26);
    v29 = v34;
    v28 = v35;
    if (v27)
    {
      v30 = (uint8_t *)sub_23F366668();
      v42 = sub_23F366668();
      *(_DWORD *)v30 = 136315138;
      sub_23F37AE00(0xD000000000000011, 0x800000023F638A80, &v42);
      v41 = v31;
      sub_23F61C790();
      sub_23F38485C(&dword_23F35A000, v25, v26, "%s Falling back on using sourceContainer for the tool rendering", v30);
      sub_23F3B16C0();
      sub_23F366530();
    }

    (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v28);
  }
  return sub_23F61B548();
}

uint64_t sub_23F5250A0(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _BOOL8 v16;
  void *v17;
  _BYTE *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(a1 + 16);
  v22 = MEMORY[0x24BEE4AF8];
  sub_23F37B844(0, v2, 0);
  v3 = v22;
  if (v2)
  {
    sub_23F3668F4();
    v4 = (uint64_t *)(a1 + 48);
    while (1)
    {
      v5 = *(v4 - 2);
      if ((v4[6] & 1) != 0)
        break;
      v21 = *(v4 - 2);
      v6 = *(v4 - 1);
      v7 = *v4;
      v8 = v4[1];
      v9 = v4[2];
      v11 = v4[3];
      v10 = v4[4];
      v12 = v4[5];
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F617BA0();
      v20 = v12;
      sub_23F39BA5C(v9, v11);
      v14 = *(_QWORD *)(v22 + 16);
      v13 = *(_QWORD *)(v22 + 24);
      if (v14 >= v13 >> 1)
      {
        v16 = sub_23F3B1A80(v13);
        sub_23F37B844(v16, v14 + 1, 1);
      }
      *(_QWORD *)(v22 + 16) = v14 + 1;
      v15 = (_QWORD *)(v22 + (v14 << 6));
      v15[4] = v21;
      v15[5] = v6;
      v15[6] = v7;
      v15[7] = v8;
      v15[8] = v9;
      v15[9] = v11;
      v4 += 9;
      v15[10] = v10;
      v15[11] = v20;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    sub_23F39BB58();
    swift_willThrowTypedImpl();
    v17 = (void *)swift_allocError();
    *v18 = v5;
    swift_bridgeObjectRelease();
    swift_release();
    v3 = v5;

  }
  return v3;
}

uint64_t sub_23F525244(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v28 = MEMORY[0x24BEE4AF8];
  sub_23F37B910();
  v4 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  v23 = v4;
  if (v4)
  {
    v5 = 0;
    v22 = a1 + 32;
    while (1)
    {
      v6 = (unint64_t *)(v22 + 24 * v5);
      v7 = v6[1];
      v8 = v6[2];
      v9 = *v6;
      v25 = MEMORY[0x24BEE4B08];
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F35D2E8(&qword_256E70898);
      sub_23F61C55C();
      sub_23F61C55C();
      v24 = v5;
      sub_23F61CC1C();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      sub_23F61C280();
      swift_bridgeObjectRetain_n();
      sub_23F617BA0();
      sub_23F61C280();
      swift_bridgeObjectRetain_n();
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F617BA0();
      v10 = v2;
      sub_23F3B62BC(v8, 0, 0xE000000000000000, v25, v9, v7, v8, 0, 0xE000000000000000);
      v12 = v11;
      result = swift_bridgeObjectRelease();
      if (__OFADD__(*(_QWORD *)(v12 + 16), *(_QWORD *)(v25 + 16)))
        break;
      sub_23F617BA0();
      sub_23F377378();
      v26 = v14;
      v15 = sub_23F617BA0();
      sub_23F3863B4(v15);
      sub_23F617BA0();
      sub_23F38631C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23F382B28();
      v16 = sub_23F61C550();
      v27 = v16;
      v17 = *(_QWORD *)(v26 + 16);
      if (v17)
      {
        v18 = v26 + 48;
        do
        {
          v18 += 24;
          sub_23F471B2C();
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 = v27;
      }
      else
      {
        v19 = v16;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v28 + 16);
      v2 = v10;
      if (v20 >= *(_QWORD *)(v28 + 24) >> 1)
        sub_23F37B910();
      ++v5;
      *(_QWORD *)(v28 + 16) = v20 + 1;
      v21 = (_QWORD *)(v28 + 24 * v20);
      v21[4] = 0;
      v21[5] = 0xE000000000000000;
      v21[6] = v19;
      if (v24 + 1 == v23)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return v28;
  }
  return result;
}

uint64_t sub_23F5255BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  result = sub_23F5250A0(a1);
  v4 = result;
  v6 = v5;
  if ((v5 & 1) != 0)
  {
    *(_QWORD *)a2 = result;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_QWORD *)(a2 + 56) = 0;
  }
  else
  {
    v7 = result;
    sub_23F526C68(&v7, (_QWORD *)a2);
    result = sub_23F3B0CFC(v4, 0);
  }
  *(_BYTE *)(a2 + 64) = v6 & 1;
  return result;
}

void sub_23F52563C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[4];
  _QWORD v68[6];
  uint64_t v69;

  sub_23F362ABC();
  v3 = v2;
  sub_23F6191A8();
  sub_23F5276C0();
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  v64 = (uint64_t)&v55 - v6;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v55 - v8;
  v10 = sub_23F61BA58();
  v68[2] = v3;
  sub_23F3DDC44((uint64_t (*)(_QWORD))sub_23F5275CC, (uint64_t)v68, v10);
  v67[2] = v3;
  sub_23F367240((uint64_t)sub_23F5275E8, (uint64_t)v67, v11);
  v13 = v12;
  swift_bridgeObjectRelease();
  sub_23F3B9CE4();
  v15 = v14;
  v69 = v16;
  v57 = *(_QWORD *)(v13 + 16);
  if (!v57)
    goto LABEL_40;
  v17 = v13 + 32;
  v55 = v13;
  sub_23F617BA0();
  v18 = 0;
  v61 = v1;
  v56 = v13 + 32;
  while (1)
  {
    v19 = *(_QWORD *)(v17 + 16 * v18 + 8);
    v63 = *(_QWORD *)(v19 + 16);
    if (v63)
      break;
LABEL_38:
    if (++v18 == v57)
    {
      swift_bridgeObjectRelease();
LABEL_40:
      swift_bridgeObjectRelease();
      sub_23F362948();
      return;
    }
  }
  v60 = v18;
  sub_23F383EB8();
  v65 = v20;
  v62 = v19 + v20;
  v58 = v21;
  swift_retain_n();
  v59 = v19;
  swift_retain_n();
  v22 = 0;
  v66 = *(_QWORD *)(v1 + 72);
  while (1)
  {
    sub_23F527684((uint64_t)v9, v62 + v66 * v22);
    v23 = v69 + v65;
    v24 = *(_QWORD *)(v69 + 16);
    if (v15)
    {
      swift_retain();
      sub_23F3BD908();
      v26 = v25;
      v28 = v27;
      sub_23F383EDC();
      if ((v26 & 1) == 0)
      {
        v1 = v61;
        goto LABEL_36;
      }
    }
    else
    {
      if (v24)
      {
        while (1)
        {
          v29 = sub_23F527650();
          sub_23F527684(v29, v30);
          sub_23F3CFCEC(&qword_256E70F58, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE63E8]);
          v31 = sub_23F61C0A0();
          sub_23F52766C();
          if ((v31 & 1) != 0)
            break;
          v23 += v66;
          if (!--v24)
            goto LABEL_11;
        }
LABEL_21:
        v15 = 0;
        goto LABEL_36;
      }
LABEL_11:
      v28 = 0;
    }
    sub_23F527684(v64, (uint64_t)v9);
    v32 = v69;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F37B8A8();
      v32 = v69;
    }
    v34 = *(_QWORD *)(v32 + 16);
    v33 = *(_QWORD *)(v32 + 24);
    if (v34 >= v33 >> 1)
    {
      sub_23F3B1A80(v33);
      sub_23F37B8A8();
      v32 = v69;
    }
    *(_QWORD *)(v32 + 16) = v34 + 1;
    v35 = v32 + v65 + v34 * v66;
    v1 = v61;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 32))(v35, v64, v0);
    v69 = v32;
    v36 = *(_QWORD *)(v32 + 16);
    if (!v15)
    {
      v37 = 0;
      if (v36 > 0xF)
        goto LABEL_23;
      goto LABEL_36;
    }
    swift_beginAccess();
    if (MEMORY[0x24266BC8C](*(_QWORD *)(v15 + 16) & 0x3FLL) < (uint64_t)v36)
    {
      v37 = *(_QWORD *)(v15 + 24) & 0x3FLL;
      if (v36 > 0xF || v37)
      {
LABEL_23:
        v38 = MEMORY[0x24266BCA4](v36);
        if (v37 <= v38)
          v39 = v38;
        else
          v39 = v37;
        sub_23F3BD0E4(v32, v39, 0, v37);
        v41 = v40;
        sub_23F383EDC();
        v15 = v41;
        goto LABEL_36;
      }
      sub_23F383EDC();
      goto LABEL_21;
    }
    if ((swift_isUniquelyReferenced_native() & 1) == 0)
    {
      v42 = sub_23F618788();
      sub_23F383EDC();
      if (!v42)
        goto LABEL_42;
      v15 = v42;
    }
    v43 = -1 << *(_QWORD *)(v15 + 16);
    v44 = v43 + 1;
    v45 = *(_QWORD *)(v32 + 16) + ~(*(uint64_t *)(v15 + 24) >> 6);
    v46 = v43 ^ ~(((v45 >> 63) & ~v43) + v45);
    v47 = (*(_QWORD *)(v15 + 16) & 0x3FLL) * v28;
    v48 = v47 >> 6;
    *(_QWORD *)(v15 + 32 + 8 * (v47 >> 6)) = (v46 << v47) | ((v44 << v47) - 1) & *(_QWORD *)(v15 + 32 + 8 * (v47 >> 6));
    v49 = 64 - (v47 & 0x3F);
    v50 = *(_QWORD *)(v15 + 16);
    if (v49 < (v50 & 0x3Fu))
      break;
LABEL_36:
    ++v22;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
    if (v22 == v63)
    {
      swift_release_n();
      swift_release_n();
      v17 = v56;
      v18 = v60;
      goto LABEL_38;
    }
  }
  v51 = (v50 & 0x3F) << (v50 & 0x3F);
  v52 = __OFADD__(v51, 64);
  v53 = v51 + 64;
  if (!v52)
  {
    if (v48 + 1 == (v53 - 1) / 64)
      v54 = 0;
    else
      v54 = v48 + 1;
    *(_QWORD *)(v15 + 32 + 8 * v54) = *(_QWORD *)(v15 + 32 + 8 * v54) & (-1 << (v50
                                                                                - v49)) | (v46 >> v49);
    goto LABEL_36;
  }
  __break(1u);
LABEL_42:
  __break(1u);
}

void sub_23F525B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(char *, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  int v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  void (*v61)(uint64_t, char *, uint64_t);
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (**v66)(uint64_t, uint64_t);
  int v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  char *v99;
  uint64_t (*v100)(uint64_t, uint64_t);
  void (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;

  sub_23F362ABC();
  v2 = v1;
  v101 = v3;
  v92 = sub_23F3B1728();
  v91 = *(_QWORD *)(v92 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F36285C();
  v93 = v5;
  sub_23F39C56C();
  v6 = sub_23F61B8A8();
  v103 = *(_QWORD *)(v6 - 8);
  v104 = v6;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v90 = v8;
  sub_23F35D2E8(&qword_256E79328);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  v105 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v11 = sub_23F6191A8();
  v109 = *(_QWORD *)(v11 - 8);
  v110 = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3834D0();
  v108 = v13;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v14);
  v102 = (uint64_t)&v87 - v15;
  sub_23F39C56C();
  v16 = sub_23F61B6E0();
  v95 = *(_QWORD *)(v16 - 8);
  v96 = v16;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F36285C();
  v94 = v18;
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3842E4();
  v112 = sub_23F61B92C();
  v106 = *(_QWORD *)(v112 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F3834D0();
  v107 = v21;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v22);
  v113 = (char *)&v87 - v23;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v24);
  v99 = (char *)&v87 - v25;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v26);
  v97 = (uint64_t)&v87 - v27;
  sub_23F39C56C();
  v28 = sub_23F61B9EC();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  sub_23F38F964();
  v32 = v31 - v30;
  v33 = sub_23F61BA94();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  sub_23F38F964();
  v37 = v36 - v35;
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
  v111 = v2;
  v38(v37, v2, v33);
  LODWORD(v2) = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 88))(v37, v33);
  v39 = *MEMORY[0x24BEB9F40];
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v37, v33);
  if ((_DWORD)v2 != v39)
    goto LABEL_26;
  sub_23F61BA4C();
  if (qword_256E6F120 != -1)
    swift_once();
  sub_23F361498(v28, (uint64_t)qword_256E804C8);
  v40 = sub_23F61B9D4();
  sub_23F38456C(v32, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
  if ((v40 & 1) == 0)
    goto LABEL_26;
  v41 = sub_23F61B770();
  sub_23F3684B0(0xD000000000000021, 0x800000023F638AA0, v41);
  swift_bridgeObjectRelease();
  v42 = v112;
  if (sub_23F36195C(v0, 1, v112) == 1)
  {
    sub_23F3CFCB0(v0, &qword_256E701F0);
LABEL_26:
    sub_23F52563C();
    sub_23F527644();
    goto LABEL_27;
  }
  v43 = (_QWORD *)v106;
  v44 = v97;
  sub_23F362D94(v97, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 32));
  v101 = (void (*)(char *, uint64_t, uint64_t))v43[2];
  v101(v99, v44, v42);
  v45 = sub_23F527650();
  v100 = v46;
  if (((unsigned int (*)(uint64_t))v46)(v45) != *MEMORY[0x24BEB9988])
  {
    v76 = (void (*)(uint64_t, uint64_t))v43[1];
    v76(v44, v42);
    v77 = sub_23F527650();
    ((void (*)(uint64_t))v76)(v77);
    goto LABEL_26;
  }
  v47 = sub_23F527650();
  v89 = v48;
  ((void (*)(uint64_t))v48)(v47);
  v49 = swift_projectBox();
  v50 = v96;
  sub_23F362D94(v94, v49, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 16));
  sub_23F3668FC();
  v87 = sub_23F61B6D4();
  v51 = *(_QWORD *)(v87 + 16);
  if (v51)
  {
    sub_23F383EB8();
    v53 = v87 + v52;
    v99 = (char *)v43[9];
    v98 = *MEMORY[0x24BEB9A00];
    v88 = *MEMORY[0x24BEB9958];
    sub_23F617BA0();
    v54 = MEMORY[0x24BEE4AF8];
    v55 = v110;
    v56 = v90;
    v57 = (uint64_t)v105;
    v58 = v112;
    while (1)
    {
      v111 = v54;
      v59 = v43;
      v60 = v113;
      v61 = (void (*)(uint64_t, char *, uint64_t))v101;
      v101(v113, v53, v58);
      v62 = v107;
      v61(v107, v60, v58);
      v63 = v100(v62, v58);
      if (v63 != v98)
        break;
      v89(v62, v58);
      v64 = swift_projectBox();
      v66 = (uint64_t (**)(uint64_t, uint64_t))v103;
      v65 = v104;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v56, v64, v104);
      v67 = v66[11](v56, v65);
      if (v67 != v88)
      {
        v43 = v59;
        sub_23F3838CC(v66[1]);
        swift_release();
        v55 = v110;
        v57 = (uint64_t)v105;
        goto LABEL_15;
      }
      sub_23F3838CC(v66[12]);
      swift_release();
      v57 = (uint64_t)v105;
      v43 = (_QWORD *)v106;
      sub_23F6191B4();
      v55 = v110;
      v54 = v111;
LABEL_16:
      ((void (*)(char *, uint64_t))v43[1])(v113, v58);
      if (sub_23F36195C(v57, 1, v55) == 1)
      {
        sub_23F3CFCB0(v57, &qword_256E79328);
      }
      else
      {
        v68 = v102;
        sub_23F52767C(v102, v57);
        sub_23F52767C(v108, v68);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F5276A0();
          v54 = v74;
        }
        v70 = *(_QWORD *)(v54 + 16);
        v69 = *(_QWORD *)(v54 + 24);
        if (v70 >= v69 >> 1)
        {
          sub_23F3B1A80(v69);
          sub_23F5276A0();
          v54 = v75;
        }
        *(_QWORD *)(v54 + 16) = v70 + 1;
        sub_23F383EB8();
        v55 = v110;
        sub_23F52767C(v54 + v71 + *(_QWORD *)(v72 + 72) * v70, v73);
        v43 = (_QWORD *)v106;
      }
      v53 += (uint64_t)v99;
      if (!--v51)
      {
        sub_23F384A80();
        v50 = v96;
        v78 = v93;
        goto LABEL_29;
      }
    }
    v43 = v59;
    sub_23F527618((uint64_t (*)(uint64_t, uint64_t))v59[1]);
LABEL_15:
    v54 = v111;
    sub_23F36196C(v57, 1, 1, v55);
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  v78 = v93;
  v55 = v110;
LABEL_29:
  sub_23F619088();
  swift_bridgeObjectRetain_n();
  v79 = sub_23F619E8C();
  v80 = sub_23F61C61C();
  if (os_log_type_enabled(v79, v80))
  {
    v81 = (uint8_t *)sub_23F366668();
    v114 = sub_23F366668();
    *(_DWORD *)v81 = 136315138;
    v82 = sub_23F617BA0();
    v83 = MEMORY[0x24266F8F8](v82, v55);
    v85 = v84;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v83, v85, &v114);
    sub_23F5276E0(v86);
    sub_23F61C790();
    sub_23F384A80();
    sub_23F3837B0();
    sub_23F38485C(&dword_23F35A000, v79, v80, "UTTypes extracted from dynamic properties on SearchGlobalEntity: %s", v81);
    swift_arrayDestroy();
    sub_23F366530();
  }

  sub_23F384A80();
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v78, v92);
  sub_23F3B9CE4();
  sub_23F527644();
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v94, v50);
  ((void (*)(uint64_t, uint64_t))v43[1])(v97, v112);
LABEL_27:
  sub_23F362948();
}

void sub_23F526368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  int v50;
  uint64_t v51;
  void (*v52)(uint64_t *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, uint64_t);
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[2];
  uint64_t v92;
  uint64_t v93;
  char *v94;
  void (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;

  sub_23F362ABC();
  v103 = v2;
  v110 = v3;
  v4 = sub_23F3B1728();
  v98 = *(_QWORD *)(v4 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v108 = v6;
  sub_23F39C56C();
  v7 = sub_23F61B9BC();
  v105 = *(_QWORD *)(v7 - 8);
  v106 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  v104 = (char *)v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v10 = sub_23F61BADC();
  v111 = *(_QWORD *)(v10 - 8);
  sub_23F362850();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (_QWORD *)((char *)v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v112 = (char *)v91 - v15;
  sub_23F39C56C();
  v16 = sub_23F61BA94();
  v101 = *(_QWORD *)(v16 - 8);
  v102 = v16;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F36285C();
  v100 = v18;
  v19 = sub_23F35D2E8(&qword_256E79320);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  v109 = (char *)v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v22 = sub_23F61B95C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  sub_23F38F964();
  v26 = v25 - v24;
  sub_23F61B9EC();
  sub_23F5276AC();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F3834D0();
  v97 = v28;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v29);
  v107 = (char *)v91 - v30;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v31);
  v99 = (char *)v91 - v32;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)v91 - v34;
  sub_23F362D94(v26, v110, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v23 + 88))(v26, v22) != *MEMORY[0x24BEB9A58])
  {
    sub_23F527618(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    sub_23F3B9CE4();
    sub_23F527644();
LABEL_37:
    sub_23F362948();
    return;
  }
  v93 = v4;
  sub_23F527618(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 96));
  v36 = swift_projectBox();
  v37 = *(int *)(v19 + 48);
  v38 = v109;
  v95 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 16);
  v95(v109, v36, v1);
  v39 = *(_QWORD *)(v36 + v37);
  v96 = v0;
  (*(void (**)(char *, char *, uint64_t))(v0 + 32))(v35, v38, v1);
  sub_23F3668F4();
  swift_release();
  v40 = *(_QWORD *)(v39 + 16);
  v41 = v1;
  v42 = (uint64_t)v35;
  if (v40)
  {
    v94 = v35;
    v92 = v1;
    v43 = v111;
    sub_23F383EB8();
    v46 = v44 + v45;
    v109 = *(char **)(v43 + 72);
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
    LODWORD(v110) = *MEMORY[0x24BEB9F78];
    v91[1] = v44;
    sub_23F617BA0();
    v48 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v49 = v112;
      v47(v112, v46, v10);
      v47((char *)v14, (uint64_t)v49, v10);
      v50 = (*(uint64_t (**)(uint64_t *, uint64_t))(v43 + 88))(v14, v10);
      if (v50 == (_DWORD)v110)
      {
        (*(void (**)(uint64_t *, uint64_t))(v43 + 96))(v14, v10);
        v51 = *v14;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v112, v10);
      }
      else
      {
        v52 = *(void (**)(uint64_t *, uint64_t))(v43 + 8);
        v52(v14, v10);
        v51 = MEMORY[0x24BEE4AF8];
        v52((uint64_t *)v112, v10);
      }
      v53 = *(_QWORD *)(v51 + 16);
      v54 = *(_QWORD *)(v48 + 16);
      if (__OFADD__(v54, v53))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v54 + v53 > *(_QWORD *)(v48 + 24) >> 1)
      {
        sub_23F377328();
        v48 = v55;
      }
      if (*(_QWORD *)(v51 + 16))
      {
        v56 = *(_QWORD *)(v48 + 16);
        v57 = (*(_QWORD *)(v48 + 24) >> 1) - v56;
        v58 = sub_23F6191A8();
        if (v57 < v53)
          goto LABEL_40;
        v59 = *(_QWORD *)(v58 - 8);
        v60 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
        v61 = *(_QWORD *)(v59 + 72);
        v62 = v48 + v60 + v61 * v56;
        v63 = v51 + v60;
        v64 = v61 * v53;
        v65 = v62 + v64;
        v66 = v63 + v64;
        if (v63 < v65 && v62 < v66)
          goto LABEL_42;
        swift_arrayInitWithCopy();
        if (v53)
        {
          v68 = *(_QWORD *)(v48 + 16);
          v69 = __OFADD__(v68, v53);
          v70 = v68 + v53;
          if (v69)
            goto LABEL_41;
          *(_QWORD *)(v48 + 16) = v70;
        }
      }
      else if (v53)
      {
        goto LABEL_39;
      }
      swift_bridgeObjectRelease();
      v46 += (uint64_t)v109;
      --v40;
      v43 = v111;
      if (!v40)
      {
        sub_23F384A80();
        v41 = v92;
        v42 = (uint64_t)v94;
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    sub_23F61CA9C();
    __break(1u);
    goto LABEL_43;
  }
  swift_bridgeObjectRelease();
LABEL_26:
  v72 = v100;
  v71 = v101;
  v73 = v102;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v100, v103, v102);
  v74 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 88))(v72, v73);
  v75 = (uint64_t)v107;
  v76 = v108;
  v77 = v96;
  v79 = v105;
  v78 = v106;
  v80 = v104;
  if (v74 == *MEMORY[0x24BEB9F48])
  {
    v81 = (uint64_t)v99;
    v95(v99, v42, v41);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v77 + 88))(v81, v41) == *MEMORY[0x24BEB9D18])
    {
      sub_23F38456C(v81, *(uint64_t (**)(uint64_t, uint64_t))(v77 + 96));
      v82 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v80, v82, v78);
      if ((*(unsigned int (**)(char *, uint64_t))(v79 + 88))(v80, v78) == *MEMORY[0x24BEB9CA0])
      {
        sub_23F52765C();
        sub_23F3668FC();
LABEL_31:
        sub_23F3B9CE4();
        sub_23F527644();
        sub_23F38456C(v42, *(uint64_t (**)(uint64_t, uint64_t))(v77 + 8));
        goto LABEL_37;
      }
      sub_23F3837B0();
      sub_23F52765C();
      sub_23F3668FC();
    }
    else
    {
      sub_23F3837B0();
      sub_23F38456C(v81, *(uint64_t (**)(uint64_t, uint64_t))(v77 + 8));
    }
    sub_23F619088();
    v83 = (void (*)(uint64_t, uint64_t, uint64_t))v95;
    v95((char *)v75, v42, v41);
    v84 = sub_23F619E8C();
    v85 = sub_23F61C628();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = (uint8_t *)sub_23F366668();
      v87 = sub_23F366668();
      v94 = (char *)v42;
      v113 = v87;
      *(_DWORD *)v86 = 136315138;
      v83(v97, v75, v41);
      v88 = sub_23F61C16C();
      sub_23F37AE00(v88, v89, &v113);
      sub_23F5276E0(v90);
      sub_23F61C790();
      swift_bridgeObjectRelease();
      sub_23F40636C(v75);
      sub_23F38485C(&dword_23F35A000, v84, v85, "Skipping UTType extraction for non-file import: %s", v86);
      sub_23F3B16C0();
      sub_23F366530();
    }
    sub_23F40636C(v75);

    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v76, v93);
    sub_23F3B9CE4();
    sub_23F527644();
    sub_23F40636C(v42);
    goto LABEL_37;
  }
  if (v74 == *MEMORY[0x24BEB9F40])
    goto LABEL_31;
LABEL_43:
  sub_23F61CC58();
  __break(1u);
}

uint64_t sub_23F526AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  v0 = sub_23F61BA94();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61BAA0();
  v4 = sub_23F61BA88();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

void sub_23F526B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  sub_23F362ABC();
  sub_23F61B95C();
  sub_23F5276C0();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F3842E4();
  v1 = sub_23F61BA94();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F38F964();
  v5 = v4 - v3;
  sub_23F61BAA0();
  v6 = sub_23F61BA88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
  if ((v6 & 1) != 0)
  {
    sub_23F61BA7C();
    sub_23F527650();
    sub_23F526368();
    sub_23F52766C();
  }
  else
  {
    sub_23F3B9CE4();
  }
  sub_23F362948();
}

uint64_t sub_23F526C68@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  _QWORD *v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _BOOL8 v54;
  char v55;
  unint64_t v56;
  char v57;
  char *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84[4];
  _QWORD *v85;

  v70 = a2;
  v3 = sub_23F6184B8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v83 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v66 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v66 - v10;
  v12 = sub_23F35D2E8(&qword_256E70EE0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = sub_23F3D0B44(*a1);
  v17 = sub_23F525244(v16);
  swift_bridgeObjectRelease();
  v18 = (_QWORD *)sub_23F524B34(v17);
  swift_bridgeObjectRelease();
  sub_23F3B79EC(0xA2CuLL, 0xE200000000000000, v18);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_bridgeObjectRelease();
  sub_23F35D2E8(&qword_256E6FD50);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61EBC0;
  *(_QWORD *)(inited + 32) = 123;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  v26 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(inited + 48) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(inited + 56) = v20;
  *(_QWORD *)(inited + 64) = v22;
  *(_QWORD *)(inited + 72) = v24;
  *(_QWORD *)(inited + 80) = 125;
  *(_QWORD *)(inited + 88) = 0xE100000000000000;
  *(_QWORD *)(inited + 96) = v26;
  sub_23F3B79EC(0xAuLL, 0xE100000000000000, (_QWORD *)inited);
  v69 = v27;
  v68 = v28;
  v67 = v29;
  swift_setDeallocating();
  result = sub_23F5135A8();
  v74 = *(_QWORD *)(v15 + 16);
  if (!v74)
  {
    v32 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_23;
  }
  v73 = v15 + 32;
  v66 = v15;
  sub_23F617BA0();
  v31 = 0;
  v32 = (_QWORD *)MEMORY[0x24BEE4B00];
  v72 = v4;
  while (1)
  {
    v33 = (_QWORD *)(v73 + (v31 << 6));
    v34 = v33[3];
    if (v34)
      break;
LABEL_20:
    if (++v31 == v74)
    {
      result = swift_bridgeObjectRelease();
LABEL_23:
      v64 = v70;
      v65 = v68;
      *v70 = v69;
      v64[1] = v65;
      v64[2] = v67;
      v64[3] = v32;
      *((_OWORD *)v64 + 2) = 0u;
      *((_OWORD *)v64 + 3) = 0u;
      return result;
    }
  }
  v81 = v31;
  v35 = v33[1];
  v36 = v33[2];
  v37 = v33[4];
  v38 = v33[5];
  v82 = v32;
  v40 = v33[6];
  v39 = v33[7];
  v77 = v35;
  sub_23F617BA0();
  v75 = v36;
  v41 = v72;
  sub_23F617BA0();
  sub_23F617BA0();
  v80 = v37;
  v79 = v38;
  v78 = v40;
  v76 = v39;
  v42 = v82;
  sub_23F39BA5C(v37, v38);
  sub_23F617BA0();
  sub_23F617BA0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v85 = v42;
  sub_23F5E2968(v84, v34, sub_23F522E68, 0);
  sub_23F617BA0();
  v44 = v34;
  sub_23F5E2D50();
  v45 = sub_23F35D2E8(&qword_256E704E0);
  v46 = v42;
  if (sub_23F36195C((uint64_t)v14, 1, v45) == 1)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    sub_23F382E18();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F39BB1C(v80, v79);
    v32 = v46;
    v31 = v81;
    goto LABEL_20;
  }
  v71 = v44;
  v47 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
  while (1)
  {
    v48 = &v14[*(int *)(v45 + 48)];
    v47(v11, v14, v3);
    v47(v9, v48, v3);
    v49 = v85;
    sub_23F375424();
    v52 = v51;
    v53 = v49[2];
    v54 = (v50 & 1) == 0;
    if (__OFADD__(v53, v54))
      break;
    v55 = v50;
    if (v49[3] >= v53 + v54)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v50 & 1) != 0)
          goto LABEL_13;
      }
      else
      {
        sub_23F35D2E8(&qword_256E70428);
        sub_23F61CA24();
        if ((v55 & 1) != 0)
          goto LABEL_13;
      }
    }
    else
    {
      sub_23F513EC4();
      sub_23F375424();
      if ((v55 & 1) != (v57 & 1))
        goto LABEL_26;
      v52 = v56;
      if ((v55 & 1) != 0)
      {
LABEL_13:
        v58 = v83;
        v47(v83, v9, v3);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v3);
        (*(void (**)(unint64_t, char *, uint64_t))(v41 + 40))(v85[7] + *(_QWORD *)(v41 + 72) * v52, v58, v3);
        goto LABEL_17;
      }
    }
    v59 = v85;
    v85[(v52 >> 6) + 8] |= 1 << v52;
    v60 = *(_QWORD *)(v41 + 72) * v52;
    v47((char *)(v59[6] + v60), v11, v3);
    v47((char *)(v59[7] + v60), v9, v3);
    v61 = v59[2];
    v62 = __OFADD__(v61, 1);
    v63 = v61 + 1;
    if (v62)
      goto LABEL_25;
    v59[2] = v63;
LABEL_17:
    sub_23F5E2D50();
    v45 = sub_23F35D2E8(&qword_256E704E0);
    isUniquelyReferenced_nonNull_native = 1;
    if (sub_23F36195C((uint64_t)v14, 1, v45) == 1)
    {
      v46 = v85;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t *sub_23F527260(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    v6 = sub_23F61B92C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F52730C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61B92C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23F527340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23F5273B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23F3CFC2C(a1);
    swift_getEnumCaseMultiPayload();
    v4 = sub_23F61B92C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for DirectionalTypedValue()
{
  uint64_t result;

  result = qword_256E792E8;
  if (!qword_256E792E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F527470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = sub_23F61B92C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23F5274E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23F3CFC2C(a1);
    swift_getEnumCaseMultiPayload();
    v4 = sub_23F61B92C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F527568()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B92C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23F5275CC()
{
  return sub_23F526AF0() & 1;
}

void sub_23F5275E8(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F526B90();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23F527618@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F527624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F527634()
{
  return sub_23F61C7B4();
}

uint64_t sub_23F527650()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F52765C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F52766C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F52767C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F527684(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void sub_23F5276A0()
{
  sub_23F377328();
}

uint64_t sub_23F5276D4()
{
  return sub_23F61C25C();
}

uint64_t sub_23F5276E0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_23F5276F4()
{
  return MEMORY[0x24BEE0D88];
}

void sub_23F527700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  _QWORD v26[4];
  uint64_t v27;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v4 = type metadata accessor for ActionResolver.Parameter(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v26[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v26[-1] - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v26[-1] - v12;
  v25 = v1;
  sub_23F38231C(v3, v26);
  v14 = v26[0];
  v15 = v26[1];
  v16 = v26[3];
  v17 = v27;
  v18 = (unint64_t)(v26[2] + 64) >> 6;
  if (!v27)
    goto LABEL_3;
LABEL_2:
  sub_23F38499C();
  v20 = v19 | (v16 << 6);
  while (1)
  {
    sub_23F529818(*(_QWORD *)(v14 + 48) + *(_QWORD *)(v5 + 72) * v20, (uint64_t)v13);
    sub_23F52985C((uint64_t)v13, (uint64_t)v8);
    sub_23F47154C();
    sub_23F5298A0((uint64_t)v11);
    if (v17)
      goto LABEL_2;
LABEL_3:
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v21 >= v18)
      goto LABEL_21;
    v22 = *(_QWORD *)(v15 + 8 * v21);
    v23 = v16 + 1;
    if (!v22)
    {
      v23 = v16 + 2;
      if (v16 + 2 >= v18)
        goto LABEL_21;
      v22 = *(_QWORD *)(v15 + 8 * v23);
      if (!v22)
      {
        v23 = v16 + 3;
        if (v16 + 3 >= v18)
          goto LABEL_21;
        v22 = *(_QWORD *)(v15 + 8 * v23);
        if (!v22)
        {
          v23 = v16 + 4;
          if (v16 + 4 >= v18)
            goto LABEL_21;
          v22 = *(_QWORD *)(v15 + 8 * v23);
          if (!v22)
          {
            v23 = v16 + 5;
            if (v16 + 5 >= v18)
              goto LABEL_21;
            v22 = *(_QWORD *)(v15 + 8 * v23);
            if (!v22)
            {
              v24 = v16 + 6;
              while (v24 < v18)
              {
                v22 = *(_QWORD *)(v15 + 8 * v24++);
                if (v22)
                {
                  v23 = v24 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              sub_23F362948();
              return;
            }
          }
        }
      }
    }
LABEL_18:
    v17 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v23 << 6);
    v16 = v23;
  }
  __break(1u);
}

void sub_23F5278BC()
{
  sub_23F527A54();
}

void sub_23F5278D0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;

  v1 = 0;
  v3 = a1 + 56;
  v2 = *(_QWORD *)(a1 + 56);
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & v2;
  v7 = (unint64_t)(v4 + 63) >> 6;
  if ((v5 & v2) == 0)
    goto LABEL_5;
LABEL_4:
  for (v6 &= v6 - 1; ; v6 = (v9 - 1) & v9)
  {
    sub_23F471B2C();
    if (v6)
      goto LABEL_4;
LABEL_5:
    v8 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v8 >= v7)
      goto LABEL_23;
    v9 = *(_QWORD *)(v3 + 8 * v8);
    ++v1;
    if (!v9)
    {
      v1 = v8 + 1;
      if (v8 + 1 >= v7)
        goto LABEL_23;
      v9 = *(_QWORD *)(v3 + 8 * v1);
      if (!v9)
      {
        v1 = v8 + 2;
        if (v8 + 2 >= v7)
          goto LABEL_23;
        v9 = *(_QWORD *)(v3 + 8 * v1);
        if (!v9)
        {
          v1 = v8 + 3;
          if (v8 + 3 >= v7)
            goto LABEL_23;
          v9 = *(_QWORD *)(v3 + 8 * v1);
          if (!v9)
            break;
        }
      }
    }
LABEL_20:
    ;
  }
  v10 = v8 + 4;
  if (v10 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  v9 = *(_QWORD *)(v3 + 8 * v10);
  if (v9)
  {
    v1 = v10;
    goto LABEL_20;
  }
  while (1)
  {
    v1 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v1 >= v7)
      goto LABEL_23;
    v9 = *(_QWORD *)(v3 + 8 * v1);
    ++v10;
    if (v9)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
}

void sub_23F527A40()
{
  sub_23F527A54();
}

void sub_23F527A54()
{
  void (*v0)(char *, char *);
  void (*v1)(char *, char *);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v33 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v33 - v15;
  v17 = 0;
  v18 = *(_QWORD *)(v5 + 56);
  v34 = v5 + 56;
  v19 = 1 << *(_BYTE *)(v5 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v35 = (unint64_t)(v19 + 63) >> 6;
  v36 = v3;
  if ((v20 & v18) == 0)
    goto LABEL_5;
LABEL_4:
  sub_23F38499C();
  for (i = v22 | (v17 << 6); ; i = __clz(__rbit64(v25)) + (v17 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v16, *(_QWORD *)(v5 + 48) + *(_QWORD *)(v8 + 72) * i, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v16, v7);
    v1(v14, v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    if (v21)
      goto LABEL_4;
LABEL_5:
    v24 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v24 >= v35)
      goto LABEL_27;
    v25 = *(_QWORD *)(v34 + 8 * v24);
    ++v17;
    if (!v25)
    {
      v17 = v24 + 1;
      sub_23F529CE4();
      if (v26 == v27)
        goto LABEL_27;
      sub_23F529CD8();
      if (!v25)
      {
        v17 = v28 + 2;
        sub_23F529CE4();
        if (v26 == v27)
          goto LABEL_27;
        sub_23F529CD8();
        if (!v25)
        {
          v17 = v29 + 3;
          sub_23F529CE4();
          if (v26 == v27)
            goto LABEL_27;
          sub_23F529CD8();
          if (!v25)
            break;
        }
      }
    }
LABEL_24:
    v21 = (v25 - 1) & v25;
  }
  v31 = v30 + 4;
  if (v31 >= v35)
  {
LABEL_27:
    swift_release();
    sub_23F362948();
    return;
  }
  v25 = *(_QWORD *)(v34 + 8 * v31);
  if (v25)
  {
    v17 = v31;
    goto LABEL_24;
  }
  while (1)
  {
    v17 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    sub_23F529CE4();
    if (v26 == v27)
      goto LABEL_27;
    sub_23F529CD8();
    v31 = v32 + 1;
    if (v25)
      goto LABEL_24;
  }
LABEL_29:
  __break(1u);
}

unint64_t sub_23F527C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v11 = a1;
    v49 = MEMORY[0x24BEE4AF8];
    v48 = *(_QWORD *)(a1 + 16);
    sub_23F37B828(0, v9, 0);
    v10 = v49;
    result = sub_23F3C0378(v11);
    v15 = v14 & 1;
    v42 = v11 + 56;
    v16 = MEMORY[0x24BEE0D00];
    v41 = v11;
    while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(_BYTE *)(v11 + 32))
    {
      if (((*(_QWORD *)(v42 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
        goto LABEL_17;
      if (*(_DWORD *)(v11 + 36) != (_DWORD)v13)
        goto LABEL_18;
      v46 = v13;
      v47 = result;
      v44 = *(_BYTE *)(*(_QWORD *)(v11 + 48) + 24 * result + 16);
      v45 = v15;
      sub_23F617BA0();
      v17 = sub_23F61C34C();
      v19 = v18;
      v21 = v20;
      v23 = v22;
      swift_bridgeObjectRelease();
      MEMORY[0x24266F6AC](v17, v19, v21, v23);
      swift_bridgeObjectRelease();
      sub_23F38813C();
      v24 = *(_QWORD *)(sub_23F61C7B4() + 16);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((unsigned __int128)((v24 - 1) * (__int128)a9) >> 64 != ((v24 - 1) * a9) >> 63)
        goto LABEL_19;
      v43 = sub_23F61C25C();
      sub_23F617BA0();
      v25 = sub_23F61C34C();
      v27 = v26;
      v29 = v28;
      v31 = v30;
      swift_bridgeObjectRelease();
      MEMORY[0x24266F6AC](v25, v27, v29, v31);
      swift_bridgeObjectRelease();
      v32 = v16;
      v33 = *(_QWORD *)(sub_23F61C7B4() + 16);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((unsigned __int128)((v33 - 1) * (__int128)a9) >> 64 != ((v33 - 1) * a9) >> 63)
        goto LABEL_20;
      result = sub_23F61C25C();
      v34 = v43;
      if (result >> 14 < v43 >> 14)
        goto LABEL_21;
      v35 = result;
      v37 = *(_QWORD *)(v49 + 16);
      v36 = *(_QWORD *)(v49 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_23F37B828((char *)(v36 > 1), v37 + 1, 1);
        v34 = v43;
      }
      *(_QWORD *)(v49 + 16) = v37 + 1;
      v38 = v49 + 24 * v37;
      *(_QWORD *)(v38 + 32) = v34;
      *(_QWORD *)(v38 + 40) = v35;
      *(_BYTE *)(v38 + 48) = v44;
      v11 = v41;
      result = sub_23F3C0290(v47, v46, v45 & 1, v41);
      v15 = v39 & 1;
      v40 = v48-- == 1;
      v16 = v32;
      if (v40)
      {
        sub_23F382E0C(result, v13, v15);
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

void sub_23F528014(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  __int128 v30;
  __int128 v33;
  char v34;
  __int128 v35;
  char v36;
  uint64_t v37;

  v37 = a3;
  v28 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 56);
  v29 = (unint64_t)(v10 + 63) >> 6;
  sub_23F617BA0();
  v13 = 0;
  v14 = MEMORY[0x24BEE4AF8];
  v27 = a7;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v13 >= v29)
      goto LABEL_31;
    v18 = *(_QWORD *)(v28 + 8 * v13);
    if (!v18)
      break;
LABEL_18:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_19:
    v20 = *(_QWORD *)(a1 + 48) + 24 * v16;
    v21 = *(_BYTE *)(v20 + 16);
    v35 = *(_OWORD *)v20;
    v36 = v21;
    sub_23F529164((uint64_t *)&v35, a4, a5, a7, (uint64_t)&v33);
    if (v7)
    {
      swift_bridgeObjectRelease();
LABEL_31:
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v22 = v34;
    if (v34 != 3)
    {
      v30 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377378();
        v14 = v25;
      }
      v23 = *(_QWORD *)(v14 + 16);
      if (v23 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_23F377378();
        v14 = v26;
      }
      *(_QWORD *)(v14 + 16) = v23 + 1;
      v24 = v14 + 24 * v23;
      *(_OWORD *)(v24 + 32) = v30;
      *(_BYTE *)(v24 + 48) = v22;
      a7 = v27;
    }
  }
  v19 = v13 + 1;
  if (v13 + 1 >= v29)
    goto LABEL_31;
  v18 = *(_QWORD *)(v28 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v13 + 2;
  if (v13 + 2 >= v29)
    goto LABEL_31;
  v18 = *(_QWORD *)(v28 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v13 + 3;
  if (v13 + 3 >= v29)
    goto LABEL_31;
  v18 = *(_QWORD *)(v28 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v13 + 4;
  if (v13 + 4 >= v29)
    goto LABEL_31;
  v18 = *(_QWORD *)(v28 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v13 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v29)
      goto LABEL_31;
    v18 = *(_QWORD *)(v28 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_23F5282C0(uint64_t result, uint64_t a2)
{
  if (__OFADD__(result, a2))
  {
    __break(1u);
  }
  else
  {
    sub_23F35D2E8(&qword_256E70898);
    sub_23F61C55C();
    sub_23F61C55C();
    return 0;
  }
  return result;
}

void sub_23F528350(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F617BA0();
  sub_23F61C280();
  sub_23F3E0254();
  sub_23F617BA0();
  sub_23F3668F4();
  sub_23F389CDC();
  sub_23F617BA0();
  sub_23F3B62BC(a6, a1, a2, a3, a4, a5, a6, a1, a2);
  v13 = v12;
  sub_23F3837B0();
  v14 = sub_23F3668F4();
  v15 = sub_23F3BBC3C(v14, v13);
  sub_23F362D08();
  sub_23F362D18();
  sub_23F369004(v15);
  sub_23F529C78();
}

uint64_t sub_23F528430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t result;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  sub_23F38813C();
  sub_23F61C7CC();
  sub_23F529CCC();
  v8 = sub_23F529C2C();
  result = sub_23F529C24();
  v10 = __OFSUB__(v8, result);
  v11 = v8 - result;
  if (v10)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_23F3E0254();
  sub_23F389CDC();
  sub_23F383EB0();
  v12 = sub_23F527C60(a3, a1, a2, a3, 92, 0xE100000000000000, v4, v3, v11);
  sub_23F3837B0();
  sub_23F369004(v12);
  sub_23F529BC8();
  sub_23F529CAC();
  v13 = sub_23F529C2C();
  result = sub_23F529C24();
  if (__OFSUB__(v13, result))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_23F383EB0();
  sub_23F3B1EA4();
  sub_23F383E5C();
  v14 = sub_23F529BF8();
  v21 = sub_23F529C14(v14, v15, v16, v17, 7, v18, v19, v20, v97);
  sub_23F369004(v21);
  sub_23F529C90();
  sub_23F384120();
  sub_23F529BC8();
  sub_23F529CCC();
  v22 = sub_23F529C2C();
  result = sub_23F529C24();
  if (__OFSUB__(v22, result))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_23F383E5C();
  sub_23F384A00();
  sub_23F383EB0();
  v23 = sub_23F529C34();
  v30 = sub_23F529C4C(v23, v24, v25, v26, 8, v27, v28, v29, v98);
  sub_23F369004(v30);
  sub_23F529C5C();
  sub_23F3837B0();
  sub_23F529C9C(12);
  sub_23F529BC8();
  sub_23F529CAC();
  v31 = sub_23F529C2C();
  result = sub_23F529C24();
  if (__OFSUB__(v31, result))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23F383EB0();
  sub_23F3B1EA4();
  sub_23F383E5C();
  v32 = sub_23F529BF8();
  v39 = sub_23F529C14(v32, v33, v34, v35, 12, v36, v37, v38, v99);
  sub_23F369004(v39);
  sub_23F529C90();
  sub_23F384120();
  sub_23F529BC8();
  sub_23F529CCC();
  v40 = sub_23F529C2C();
  result = sub_23F529C24();
  if (__OFSUB__(v40, result))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_23F383E5C();
  sub_23F384A00();
  sub_23F383EB0();
  v41 = sub_23F529C34();
  v48 = sub_23F529C4C(v41, v42, v43, v44, 10, v45, v46, v47, v100);
  sub_23F369004(v48);
  sub_23F529C5C();
  sub_23F3837B0();
  sub_23F529C9C(13);
  sub_23F529BC8();
  sub_23F529CAC();
  v49 = sub_23F529C2C();
  result = sub_23F529C24();
  if (__OFSUB__(v49, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_23F383EB0();
  sub_23F3B1EA4();
  sub_23F383E5C();
  v50 = sub_23F529BF8();
  v57 = sub_23F529C14(v50, v51, v52, v53, 13, v54, v55, v56, v101);
  sub_23F369004(v57);
  sub_23F529C90();
  sub_23F384120();
  sub_23F529BC8();
  sub_23F529CCC();
  v58 = sub_23F529C2C();
  result = sub_23F529C24();
  if (__OFSUB__(v58, result))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_23F383E5C();
  sub_23F384A00();
  sub_23F383EB0();
  v59 = sub_23F529C34();
  v66 = sub_23F529C4C(v59, v60, v61, v62, 9, v63, v64, v65, v102);
  sub_23F369004(v66);
  sub_23F529C5C();
  sub_23F3837B0();
  sub_23F529C9C(11);
  sub_23F529BC8();
  sub_23F529CAC();
  v67 = sub_23F529C2C();
  result = sub_23F529C24();
  if (__OFSUB__(v67, result))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_23F383EB0();
  sub_23F3B1EA4();
  sub_23F383E5C();
  v68 = sub_23F529BF8();
  v75 = sub_23F529C14(v68, v69, v70, v71, 11, v72, v73, v74, v103);
  sub_23F369004(v75);
  v77 = v76;
  swift_bridgeObjectRelease();
  sub_23F384120();
  v78 = sub_23F529BC8();
  v80 = v79;
  v81 = sub_23F529C2C();
  result = sub_23F529C24();
  v10 = __OFSUB__(v81, result);
  v82 = v81 - result;
  if (!v10)
  {
    sub_23F383E5C();
    sub_23F384B00();
    sub_23F3668F4();
    v83 = sub_23F527C60(v77, a1, a3, v77, 34, 0xE100000000000000, v78, v80, v82);
    sub_23F369004(v83);
    v85 = v84;
    swift_bridgeObjectRelease();
    sub_23F3837B0();
    v86 = MEMORY[0x24BEE4B08];
    sub_23F528350(0x22uLL, 0xE100000000000000, MEMORY[0x24BEE4B08], v78, v80, v85);
    v88 = v87;
    v90 = v89;
    v92 = v91;
    swift_bridgeObjectRelease();
    sub_23F362D18();
    v93 = sub_23F3B60F0(v86, 34, 0xE100000000000000);
    sub_23F369004(v93);
    sub_23F528350(v88, v90, v92, 0x22uLL, 0xE100000000000000, v94);
    v96 = v95;
    swift_bridgeObjectRelease();
    sub_23F384120();
    sub_23F362D18();
    return v96;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_23F528950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v4 = sub_23F529130();
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v8 = v4;
    v9 = v5;
    v21 = a2;
    v22 = MEMORY[0x24BEE4AF8];
    sub_23F37B828(0, v6, 0);
    v7 = v22;
    v10 = (char *)(a1 + 32);
    v11 = *(_QWORD *)(v22 + 16);
    v12 = 24 * v11;
    do
    {
      v14 = *v10++;
      v13 = v14;
      v15 = *(_QWORD *)(v22 + 24);
      v16 = v11 + 1;
      if (v11 >= v15 >> 1)
        sub_23F37B828((char *)(v15 > 1), v11 + 1, 1);
      *(_QWORD *)(v22 + 16) = v16;
      v17 = v22 + v12;
      *(_QWORD *)(v17 + 32) = v8;
      *(_QWORD *)(v17 + 40) = v9;
      *(_BYTE *)(v17 + 48) = v13;
      v12 += 24;
      v11 = v16;
      --v6;
    }
    while (v6);
    a2 = v21;
  }
  sub_23F3668F4();
  v18 = sub_23F617BA0();
  v19 = sub_23F3BBC3C(v18, v7);
  sub_23F362984();
  swift_bridgeObjectRelease();
  sub_23F369004(v19);
  return a2;
}

void sub_23F528A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = sub_23F61C208();
  v9 = v8;
  sub_23F529130();
  v10 = v7 == a2 && v9 == a3;
  if (v10 || (sub_23F3C8510() & 1) != 0)
  {
    sub_23F3668F4();
  }
  else
  {
    sub_23F471B2C();
    v11 = sub_23F61C25C();
    sub_23F3E0254();
    sub_23F383E5C();
    sub_23F389CDC();
    sub_23F528014(a4, v7, v9, v11, a2, a3, a4);
    v13 = v12;
    sub_23F362D18();
    sub_23F35FF00(v13);
  }
  sub_23F529C78();
}

void sub_23F528BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  BOOL v13;

  v13 = a1 == a4 && a2 == a5;
  if (v13 || (sub_23F3C8510() & 1) != 0)
    sub_23F35D328(a3, a6, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

unint64_t sub_23F528C0C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v4 = sub_23F35D2E8(&qword_256E71E50);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v8 = v7 - v6;
  swift_getKeyPath();
  sub_23F389CDC();
  sub_23F616D54();
  sub_23F35D2E8(&qword_256E71E58);
  sub_23F389844(&qword_256E71E60, &qword_256E71E58, MEMORY[0x24BEE12C8]);
  sub_23F389844(qword_256E71E68, &qword_256E71E50, MEMORY[0x24BDCC6C8]);
  v9 = sub_23F61C358();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = (unint64_t *)(v9 + 40);
    do
    {
      sub_23F3F5630(*(v11 - 1), *v11, 0x455443414445523CLL, 0xEA00000000003E44, v3, v1);
      v3 = v12;
      v14 = v13;
      sub_23F362D08();
      v11 += 2;
      v1 = v14;
      --v10;
    }
    while (v10);
  }
  sub_23F362984();
  return v3;
}

void sub_23F528D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F362ABC();
  v0 = sub_23F35D2E8(&qword_256E71E50);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  sub_23F38F964();
  v4 = v3 - v2;
  swift_getKeyPath();
  sub_23F616D54();
  sub_23F35D2E8(&qword_256E71E58);
  sub_23F389844(&qword_256E71E60, &qword_256E71E58, MEMORY[0x24BEE12C8]);
  sub_23F389844(qword_256E71E68, &qword_256E71E50, MEMORY[0x24BDCC6C8]);
  v5 = (_QWORD *)sub_23F61C358();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  v6 = v5[2];
  if (v6)
  {
    v8 = v5 + 5;
    v7 = v5[5];
    v9 = v5[4];
    v10 = MEMORY[0x24BEE4AF8];
    do
    {
      v12 = *(v8 - 1);
      v11 = *v8;
      v13 = v7 >> 14;
      v14 = v9 >> 14;
      v15 = *v8 >> 14;
      if (v12 >> 14 >= v7 >> 14 || v14 == v13 || v14 >= v15 || v12 >> 14 == v15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F529C6C();
          v10 = v21;
        }
        v19 = *(_QWORD *)(v10 + 16);
        if (v19 >= *(_QWORD *)(v10 + 24) >> 1)
        {
          sub_23F529C6C();
          v10 = v22;
        }
        *(_QWORD *)(v10 + 16) = v19 + 1;
        v20 = v10 + 16 * v19;
        *(_QWORD *)(v20 + 32) = v9;
        *(_QWORD *)(v20 + 40) = v7;
        v7 = v11;
        v9 = v12;
      }
      else
      {
        if (v15 >= v13)
          v7 = *v8;
        if (v14 > v7 >> 14)
        {
          __break(1u);
          goto LABEL_30;
        }
      }
      v8 += 2;
      --v6;
    }
    while (v6);
    sub_23F362984();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_24;
LABEL_30:
    sub_23F529C6C();
    v10 = v25;
LABEL_24:
    v23 = *(_QWORD *)(v10 + 16);
    if (v23 >= *(_QWORD *)(v10 + 24) >> 1)
    {
      sub_23F529C6C();
      v10 = v26;
    }
    *(_QWORD *)(v10 + 16) = v23 + 1;
    v24 = v10 + 16 * v23;
    *(_QWORD *)(v24 + 32) = v9;
    *(_QWORD *)(v24 + 40) = v7;
  }
  else
  {
    sub_23F362984();
  }
  sub_23F362948();
}

BOOL sub_23F528FCC(unint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  return (a4 ^ a1) < 0x4000 && (a5 ^ a2) < 0x4000 && a3 == a6;
}

uint64_t sub_23F528FF4()
{
  sub_23F61CD54();
  sub_23F61CD54();
  return sub_23F61CD3C();
}

uint64_t sub_23F529038()
{
  sub_23F61CD30();
  sub_23F61CD54();
  sub_23F61CD54();
  sub_23F61CD3C();
  return sub_23F61CD60();
}

BOOL sub_23F5290A4(uint64_t a1, uint64_t a2)
{
  return sub_23F528FCC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_23F5290C0()
{
  return sub_23F529038();
}

uint64_t sub_23F5290CC()
{
  return sub_23F528FF4();
}

uint64_t sub_23F5290D8()
{
  sub_23F61CD30();
  sub_23F61CD54();
  sub_23F61CD54();
  sub_23F493448();
  return sub_23F362C10();
}

uint64_t sub_23F529130()
{
  return 15;
}

uint64_t sub_23F529164@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a4;
  v9 = sub_23F619E98();
  result = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *((_BYTE *)a1 + 16);
  if (a2 >> 14 >= (unint64_t)*a1 >> 14)
    v15 = *a1;
  else
    v15 = a2;
  if (a2 >> 14 >= (unint64_t)a1[1] >> 14)
    v16 = a1[1];
  else
    v16 = a2;
  if ((v16 ^ v15) >= 0x4000)
  {
    *(_QWORD *)a5 = v15;
    *(_QWORD *)(a5 + 8) = v16;
    *(_BYTE *)(a5 + 16) = v14;
  }
  else
  {
    v35 = a3;
    v36 = v11;
    v37 = result;
    sub_23F619088();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v17 = sub_23F619E8C();
    v18 = sub_23F61C610();
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v20 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v40 = v34;
      *(_DWORD *)v20 = 136315394;
      v33 = v17;
      LOBYTE(v39) = v14;
      v21 = sub_23F61C16C();
      v32 = v19;
      sub_23F37AE00(v21, v22, &v40);
      v39 = v23;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      v24 = sub_23F61C34C();
      v25 = MEMORY[0x24266F6AC](v24);
      v27 = v26;
      swift_bridgeObjectRelease();
      sub_23F37AE00(v25, v27, &v40);
      v39 = v28;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v29 = v33;
      _os_log_impl(&dword_23F35A000, v33, (os_log_type_t)v32, "Dropped tag %s over substring %s due to full truncation of tagged range.", (uint8_t *)v20, 0x16u);
      v30 = v34;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v30, -1, -1);
      MEMORY[0x242670B70](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v13, v37);
    *(_QWORD *)a5 = 0;
    *(_QWORD *)(a5 + 8) = 0;
    *(_BYTE *)(a5 + 16) = 3;
  }
  return result;
}

void sub_23F52941C()
{
  sub_23F61CD30();
  sub_23F61CD3C();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F529454(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_23F528BB8(*a1, a1[1], a1[2], *a2, a2[1], a2[2], a7, a8, a9, a10, a11);
}

void sub_23F529470()
{
  sub_23F52941C();
}

uint64_t sub_23F529478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_23F5282C0(a1, a2);
  *a3 = 0;
  a3[1] = 0xE000000000000000;
  a3[2] = v5;
  return result;
}

uint64_t sub_23F5294A4(_QWORD *a1)
{
  return sub_23F528340(*a1, a1[1]);
}

uint64_t sub_23F5294B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = nullsub_1(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  a2[2] = v5;
  return result;
}

void sub_23F5294E8(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F528344();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = MEMORY[0x24BEE4B08];
}

unint64_t sub_23F529524()
{
  unint64_t result;

  result = qword_256E79330;
  if (!qword_256E79330)
  {
    result = MEMORY[0x242670A44](&unk_23F62BAD4, &unk_250FDB6A0);
    atomic_store(result, (unint64_t *)&qword_256E79330);
  }
  return result;
}

uint64_t sub_23F529560()
{
  return MEMORY[0x24BEE0D90];
}

unint64_t sub_23F529570()
{
  unint64_t result;

  result = qword_256E79338;
  if (!qword_256E79338)
  {
    result = MEMORY[0x242670A44](&unk_23F62BB0C, &unk_250FDB6A0);
    atomic_store(result, (unint64_t *)&qword_256E79338);
  }
  return result;
}

uint64_t sub_23F5295AC()
{
  return MEMORY[0x24BEE0D80];
}

unint64_t sub_23F5295BC()
{
  unint64_t result;

  result = qword_256E79340;
  if (!qword_256E79340)
  {
    result = MEMORY[0x242670A44](&unk_23F62BB4C, &unk_250FDB6A0);
    atomic_store(result, (unint64_t *)&qword_256E79340);
  }
  return result;
}

unint64_t sub_23F5295FC()
{
  unint64_t result;

  result = qword_256E79348;
  if (!qword_256E79348)
  {
    result = MEMORY[0x242670A44](&unk_23F62BBCC, &unk_250FDB620);
    atomic_store(result, (unint64_t *)&qword_256E79348);
  }
  return result;
}

void sub_23F529638()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F362ABC();
  v1 = v0;
  v2 = sub_23F619E98();
  v19 = *(_QWORD *)(v2 - 8);
  v20 = v2;
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  v5 = v4 - v3;
  v6 = v1[2];
  if (v6)
  {
    v7 = v1[4];
    v8 = v1[5];
    v9 = v1 + 6;
    sub_23F3E0254();
    sub_23F3E0254();
    v10 = v7;
    sub_23F617BA0();
    v18 = v5;
    do
    {
      v11 = *v9;
      v12 = v10 == *(v9 - 2) && v8 == *(v9 - 1);
      if (v12 || (sub_23F3C8510() & 1) != 0)
      {
        sub_23F3B1EA4();
        sub_23F384B00();
        sub_23F617BA0();
        sub_23F5278D0(v11);
      }
      else
      {
        sub_23F3B1EA4();
        sub_23F383E5C();
        sub_23F619088();
        v13 = sub_23F619E8C();
        v14 = sub_23F61C628();
        if (os_log_type_enabled(v13, v14))
        {
          v15 = v10;
          v16 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v16 = 0;
          _os_log_impl(&dword_23F35A000, v13, v14, "mergingTags: Called with prompt string values that are not the same.", v16, 2u);
          v17 = v16;
          v10 = v15;
          MEMORY[0x242670B70](v17, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
        sub_23F384B00();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_23F3837B0();
      v9 += 3;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23F529818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionResolver.Parameter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F52985C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionResolver.Parameter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5298A0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActionResolver.Parameter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for PromptString.TaggedRange(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      v4 = v3 >= 3;
      v2 = v3 - 3;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptString.TaggedRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptString.TaggedRange()
{
  return &type metadata for PromptString.TaggedRange;
}

void type metadata accessor for PromptString.StringInterpolation()
{
  sub_23F362C18();
}

uint64_t sub_23F529990()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_23F5299B8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F362928();
}

uint64_t sub_23F5299F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F529CB8(a1, a2);
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(v4 + 8);
  sub_23F617BA0();
  sub_23F362D08();
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v2 + 16);
  sub_23F617BA0();
  sub_23F362D18();
  return v3;
}

void sub_23F529A40(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F529CB8(a1, a2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(v2 + 8);
  swift_bridgeObjectRelease();
  sub_23F362928();
}

void type metadata accessor for PromptString()
{
  sub_23F362C18();
}

unint64_t sub_23F529A84()
{
  unint64_t result;

  result = qword_256E79350;
  if (!qword_256E79350)
  {
    result = MEMORY[0x242670A44](&unk_23F62BC6C, &type metadata for PromptString.TaggedRange);
    atomic_store(result, (unint64_t *)&qword_256E79350);
  }
  return result;
}

uint64_t sub_23F529AC0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F529B0C + 4 * byte_23F62BA75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F529B40 + 4 * asc_23F62BA70[v4]))();
}

uint64_t sub_23F529B40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F529B48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F529B50);
  return result;
}

uint64_t sub_23F529B5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F529B64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F529B68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F529B70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PromptStringTag()
{
  sub_23F362C18();
}

unint64_t sub_23F529B8C()
{
  unint64_t result;

  result = qword_256E79358;
  if (!qword_256E79358)
  {
    result = MEMORY[0x242670A44](&unk_23F62BD44, &unk_250FDB738);
    atomic_store(result, &qword_256E79358);
  }
  return result;
}

uint64_t sub_23F529BC8()
{
  return sub_23F61C7CC();
}

uint64_t sub_23F529BF8()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F529C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return sub_23F527C60(a1, a2, a3, a4, a5, 0xE100000000000000, v10, v9, a9);
}

uint64_t sub_23F529C24()
{
  return sub_23F61C238();
}

uint64_t sub_23F529C2C()
{
  return sub_23F61C238();
}

uint64_t sub_23F529C34()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F529C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return sub_23F527C60(a1, a2, a3, a4, a5, 0xE100000000000000, v10, v9, a9);
}

uint64_t sub_23F529C5C()
{
  return swift_bridgeObjectRelease();
}

void sub_23F529C6C()
{
  sub_23F377B44();
}

uint64_t sub_23F529C90()
{
  return swift_bridgeObjectRelease();
}

void sub_23F529C9C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  *(_QWORD *)(v1 - 112) = 0xE100000000000000;
}

_QWORD *sub_23F529CB8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_23F529CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(char *, unint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v15[2];
  void (*v16)(char *, unint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v0 = sub_23F618C20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F618BB4();
  v4 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F61ABA0();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v19 = MEMORY[0x24BEE4AF8];
    sub_23F37BBC0();
    v9 = v7 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v17 = *(_QWORD *)(v1 + 72);
    v10 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    v15[1] = v7;
    v16 = v10;
    v11 = v1;
    do
    {
      v16(v3, v9, v0);
      sub_23F618BCC();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      v12 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37BBC0();
        v12 = v19;
      }
      v13 = *(_QWORD *)(v12 + 16);
      if (v13 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_23F37BBC0();
        v12 = v19;
      }
      *(_QWORD *)(v12 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v12+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, v6, v18);
      v19 = v12;
      v9 += v17;
      --v8;
      v1 = v11;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v12;
}

ValueMetadata *type metadata accessor for ProtocolResolver()
{
  return &type metadata for ProtocolResolver;
}

uint64_t sub_23F529EF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_23F37B4B0();
    v2 = v8;
    v4 = a1 + 32;
    do
    {
      swift_getKeyPath();
      sub_23F617BA0();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease();
      swift_release();
      v5 = *(_QWORD *)(v8 + 16);
      if (v5 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_23F37B4B0();
      *(_QWORD *)(v8 + 16) = v5 + 1;
      *(_QWORD *)(v8 + 8 * v5 + 32) = v7;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23F52A008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7[18] = a6;
  v7[19] = a7;
  v7[16] = a4;
  v7[17] = a5;
  v7[14] = a2;
  v7[15] = a3;
  v7[13] = a1;
  v8 = sub_23F61BCE0();
  v7[20] = v8;
  v7[21] = *(_QWORD *)(v8 - 8);
  v7[22] = sub_23F366578();
  v9 = sub_23F618BB4();
  v7[23] = v9;
  v7[24] = *(_QWORD *)(v9 - 8);
  v7[25] = sub_23F366578();
  v10 = sub_23F61B5D8();
  v7[26] = v10;
  v7[27] = *(_QWORD *)(v10 - 8);
  v7[28] = sub_23F366578();
  v11 = sub_23F52E924();
  v7[29] = v11;
  v7[30] = *(_QWORD *)(v11 - 8);
  v7[31] = sub_23F366578();
  v12 = sub_23F3B1728();
  v7[32] = v12;
  v7[33] = *(_QWORD *)(v12 - 8);
  v7[34] = sub_23F366654();
  v7[35] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F52A0CC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t inited;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;

  v1 = *(NSObject **)(v0 + 280);
  v2 = sub_23F52E7CC(*(_QWORD *)(v0 + 104));
  type metadata accessor for QueryDecorationSignpost();
  inited = swift_initStaticObject();
  sub_23F52E8B0(inited);
  v4 = sub_23F619040();
  *(_QWORD *)(v0 + 288) = v4;
  sub_23F6190E8();
  sub_23F617BA0();
  v5 = v1;
  sub_23F619E8C();
  v6 = sub_23F3B1A04();
  if (sub_23F52E788(v6))
  {
    v7 = sub_23F366668();
    v22 = sub_23F366668();
    *(_DWORD *)v7 = 136315650;
    sub_23F37AE00(0xD000000000000079, 0x800000023F638AD0, &v22);
    *(_QWORD *)(v0 + 80) = v8;
    sub_23F61C790();
    sub_23F52E85C();
    *(_QWORD *)(v0 + 88) = v9;
    sub_23F61C790();
    sub_23F362D18();
    *(_WORD *)(v7 + 22) = 2048;
    *(_QWORD *)(v0 + 96) = 10;
    sub_23F61C790();
    sub_23F4064B8(&dword_23F35A000, v1, v2, "%s After QDRanker, avoid protocol round-trip (short-circuit) to PG for assistantSchema tools which resolves, via Joint Resolver, to direct-execute tools. Total of %ld tools to check, capping at %ld.", (uint8_t *)v7);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v10 = *(_QWORD *)(v0 + 280);
  v11 = *(_QWORD *)(v0 + 256);
  v12 = *(_QWORD *)(v0 + 264);
  sub_23F362D18();

  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  *(_QWORD *)(v0 + 296) = v13;
  v15 = *(_QWORD *)(v0 + 144);
  v14 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 56) = 0;
  v16 = swift_task_alloc();
  *(_QWORD *)(v0 + 304) = v16;
  v17 = *(_OWORD *)(v0 + 104);
  v18 = *(_OWORD *)(v0 + 120);
  *(_QWORD *)(v16 + 16) = v0 + 56;
  *(_QWORD *)(v16 + 24) = 10;
  *(_OWORD *)(v16 + 32) = v17;
  *(_OWORD *)(v16 + 48) = v18;
  *(_QWORD *)(v16 + 64) = v15;
  *(_QWORD *)(v16 + 72) = v14;
  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256E73D50 + dword_256E73D50);
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v19;
  *v19 = v0;
  v19[1] = sub_23F52A33C;
  return v21((uint64_t)&unk_256E79370, v16, v4);
}

uint64_t sub_23F52A33C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 320) = a1;
  *(_QWORD *)(v3 + 328) = v1;
  sub_23F52E8D0();
  if (!v1)
    swift_bridgeObjectRelease();
  sub_23F3666DC();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F52A3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v40;
  uint8_t *v41;
  NSObject *v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  void (*v49)(_QWORD, uint64_t, _QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_23F52E874();
  v56 = v1;
  v57 = v2;
  v55 = v0;
  sub_23F6190E8();
  sub_23F3E0254();
  v3 = sub_23F619E8C();
  v4 = sub_23F61C61C();
  if (os_log_type_enabled(v3, v4))
  {
    v40 = v4;
    v42 = v3;
    v5 = *(_QWORD *)(v0 + 320);
    v6 = sub_23F366668();
    v53 = sub_23F366668();
    *(_DWORD *)v6 = 136315394;
    sub_23F37AE00(0xD000000000000079, 0x800000023F638AD0, &v53);
    *(_QWORD *)(v0 + 64) = v7;
    sub_23F61C790();
    v41 = (uint8_t *)v6;
    *(_WORD *)(v6 + 12) = 2080;
    v8 = *(_QWORD *)(v5 + 16);
    v9 = MEMORY[0x24BEE4AF8];
    if (!v8)
    {
LABEL_21:
      MEMORY[0x24266F8F8](v9, MEMORY[0x24BEE0D00]);
      sub_23F384120();
      v33 = sub_23F52E904();
      sub_23F37AE00(v33, v34, v35);
      *(_QWORD *)(v0 + 72) = v36;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      sub_23F384A80();
      sub_23F3E025C(&dword_23F35A000, v42, v40, "%s optimizedTools: %s", v41);
      sub_23F507364();
      sub_23F366530();
    }
    v10 = *(_QWORD *)(v0 + 320);
    v11 = *(_QWORD *)(v0 + 240);
    v47 = *(_QWORD *)(v0 + 216);
    v12 = *(_QWORD *)(v0 + 192);
    v45 = *(_QWORD *)(v0 + 168);
    v54 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v13 = v10 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v50 = *(_QWORD *)(v11 + 72);
    v51 = v11;
    v49 = *(void (**)(_QWORD, uint64_t, _QWORD))(v11 + 16);
    v48 = *MEMORY[0x24BE57550];
    v46 = *MEMORY[0x24BE57558];
    v44 = *MEMORY[0x24BE57548];
    v43 = *MEMORY[0x24BE57540];
    while (1)
    {
      v49(*(_QWORD *)(v0 + 248), v13, *(_QWORD *)(v0 + 232));
      sub_23F618BCC();
      v14 = sub_23F3848F0();
      v16 = v15(v14);
      if (v16 == v48)
        break;
      if (v16 == v46)
      {
        v17 = *(_QWORD *)(v0 + 200);
        v18 = *(_QWORD *)(v0 + 176);
        v19 = *(_QWORD *)(v0 + 160);
        (*(void (**)(uint64_t, _QWORD))(v12 + 96))(v17, *(_QWORD *)(v0 + 184));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v18, v17, v19);
        v20 = sub_23F61BCD4();
        v22 = v21;
        v23 = sub_23F3848F0();
LABEL_13:
        v25(v23, v24);
        goto LABEL_14;
      }
      if (v16 == v44 || v16 == v43)
        break;
      (*(void (**)(_QWORD, _QWORD))(v12 + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
      v22 = 0x800000023F638B50;
      v20 = 0xD000000000000013;
LABEL_14:
      sub_23F384274(v51);
      v9 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F3F0E88();
        v9 = v54;
      }
      v31 = *(_QWORD *)(v9 + 16);
      v30 = *(_QWORD *)(v9 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_23F3B1A80(v30);
        sub_23F3F0E88();
        v9 = v54;
      }
      *(_QWORD *)(v9 + 16) = v31 + 1;
      v32 = v9 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v20;
      *(_QWORD *)(v32 + 40) = v22;
      v13 += v50;
      if (!--v8)
        goto LABEL_21;
    }
    v27 = *(_QWORD *)(v0 + 224);
    v28 = *(_QWORD *)(v0 + 208);
    (*(void (**)(_QWORD, _QWORD))(v12 + 96))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
    sub_23F52E758();
    v20 = sub_23F61B5A8();
    v22 = v29;
    v25 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v23 = v27;
    v24 = v28;
    goto LABEL_13;
  }
  sub_23F384A80();

  sub_23F52E8EC();
  v52 = *(_QWORD *)(v0 + 320);
  v37 = *(_QWORD *)(v0 + 40);
  v38 = *(_QWORD *)(v0 + 48);
  sub_23F52E74C();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F383868();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v52);
}

uint64_t sub_23F52A85C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  sub_23F35EA9C((_QWORD *)(v0 + 16), v2);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v1);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F52A914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v8[10] = v10;
  v8[11] = v11;
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

void sub_23F52A944()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  _QWORD *v6;

  v1 = (uint64_t *)v0[4];
  v2 = *v1 + 1;
  if (__OFADD__(*v1, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = v0[5];
    *v1 = v2;
    if (v2 <= v3)
    {
      v6 = (_QWORD *)swift_task_alloc();
      v0[12] = (uint64_t)v6;
      *v6 = v0;
      v6[1] = sub_23F52A9E0;
      sub_23F52AA0C(v0[2], v0[6], v0[7], v0[3], v0[8], v0[9], v0[10], v0[11]);
    }
    else
    {
      v4 = sub_23F52E924();
      sub_23F38F920(v4);
      v5 = (void (*)(void))sub_23F384760();
      v5();
    }
  }
}

uint64_t sub_23F52A9E0()
{
  uint64_t v0;

  sub_23F3B1998();
  sub_23F3E0168();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F52AA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8[38] = a7;
  v8[39] = a8;
  v8[36] = a5;
  v8[37] = a6;
  v8[34] = a3;
  v8[35] = a4;
  v8[32] = a1;
  v8[33] = a2;
  sub_23F618C08();
  v8[40] = sub_23F366578();
  sub_23F35D2E8(&qword_256E70238);
  v8[41] = sub_23F366578();
  v9 = sub_23F52E924();
  v8[42] = v9;
  v8[43] = *(_QWORD *)(v9 - 8);
  v8[44] = sub_23F366654();
  v8[45] = sub_23F3666CC();
  v8[46] = sub_23F3666CC();
  v8[47] = sub_23F3666CC();
  v8[48] = sub_23F3666CC();
  v8[49] = sub_23F3666CC();
  v8[50] = sub_23F3666CC();
  v8[51] = sub_23F3666CC();
  v10 = sub_23F61B5D8();
  v8[52] = v10;
  v8[53] = *(_QWORD *)(v10 - 8);
  v8[54] = sub_23F366654();
  v8[55] = sub_23F3666CC();
  v11 = sub_23F3B1728();
  v8[56] = v11;
  v8[57] = *(_QWORD *)(v11 - 8);
  v8[58] = sub_23F366654();
  v8[59] = sub_23F3666CC();
  v8[60] = sub_23F3666CC();
  v8[61] = sub_23F3666CC();
  v8[62] = sub_23F3666CC();
  v8[63] = sub_23F3666CC();
  v8[64] = sub_23F3666CC();
  v8[65] = sub_23F3666CC();
  v8[66] = sub_23F3666CC();
  v12 = sub_23F618BB4();
  v8[67] = v12;
  v8[68] = *(_QWORD *)(v12 - 8);
  v8[69] = sub_23F366654();
  v8[70] = sub_23F3666CC();
  v13 = sub_23F61BCE0();
  v8[71] = v13;
  v8[72] = *(_QWORD *)(v13 - 8);
  v8[73] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F52AB7C()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  unsigned int (*v3)(uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v50;
  _BOOL4 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  _BOOL4 v69;
  uint64_t v70;
  uint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t);
  NSObject *v76;
  os_log_type_t v77;
  _BOOL4 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint8_t *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t, uint64_t);
  NSObject *v102;
  _BOOL4 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  os_log_type_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t DecorationTuple;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  NSObject *v138;
  os_log_type_t v139;
  _BOOL4 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  os_log_type_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  os_log_type_t v187;
  uint64_t v188;
  uint64_t v189;
  uint8_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  NSObject *v195;
  uint64_t v196;
  uint64_t v197;
  NSObject *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t (*v201)(uint64_t, uint64_t);
  void (*v202)(uint64_t, unint64_t, uint64_t);
  uint64_t v203;
  uint64_t v204;
  void (*v205)(uint64_t, uint64_t);
  char *v206;
  uint64_t v207;
  uint64_t v208[3];

  sub_23F52E7CC(*(_QWORD *)(v0 + 264));
  type metadata accessor for QueryDecorationSignpost();
  inited = swift_initStaticObject();
  sub_23F52E8B0(inited);
  sub_23F618BCC();
  v2 = sub_23F384AB4();
  if (v3(v2) != *MEMORY[0x24BE57558])
  {
    v12 = *(_QWORD *)(v0 + 336);
    v13 = *(_QWORD *)(v0 + 344);
    v14 = *(_QWORD *)(v0 + 280);
    v15 = *(_QWORD *)(v0 + 256);
    sub_23F384274(*(_QWORD *)(v0 + 544));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v15, v14, v12);
LABEL_4:
    sub_23F52E724();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666DC();
    sub_23F3666A0();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v16 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F52E6F8(v16);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 544) + 96))(*(_QWORD *)(v0 + 560), *(_QWORD *)(v0 + 536));
  v4 = sub_23F384AB4();
  v5(v4);
  sub_23F61B2FC();
  sub_23F35EA9C((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
  sub_23F35D2E8(&qword_256E78AB0);
  v6 = sub_23F61B4DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23F61E7E0;
  v10 = (uint64_t *)(v9 + v8);
  *v10 = sub_23F61BCD4();
  v10[1] = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BEB8E40], v6);
  sub_23F36679C();
  v18 = sub_23F61A000();
  sub_23F384364();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 56);
  sub_23F52E6C0();
  sub_23F3E0254();
  v19 = sub_23F619E8C();
  v20 = sub_23F61C61C();
  if (os_log_type_enabled(v19, v20))
  {
    v187 = v20;
    v195 = v19;
    v22 = sub_23F366668();
    v186 = sub_23F366668();
    v207 = v186;
    *(_DWORD *)v22 = 136315394;
    sub_23F52E698(v186, 0x800000023F638B70, &v207);
    *(_QWORD *)(v0 + 240) = v23;
    sub_23F61C790();
    v190 = (uint8_t *)v22;
    *(_WORD *)(v22 + 12) = 2080;
    v24 = *(_QWORD *)(v18 + 16);
    v25 = MEMORY[0x24BEE4AF8];
    if (v24)
    {
      v26 = *(_QWORD *)(v0 + 424);
      v208[0] = MEMORY[0x24BEE4AF8];
      sub_23F37B47C();
      v27 = v18 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
      v28 = v26;
      v202 = *(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 16);
      v204 = *(_QWORD *)(v26 + 72);
      do
      {
        v29 = *(_QWORD *)(v0 + 440);
        v30 = *(_QWORD *)(v0 + 416);
        v202(v29, v27, v30);
        v31 = sub_23F61B5A8();
        v33 = v32;
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v30);
        v25 = v208[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3F0E88();
          v25 = v208[0];
        }
        v35 = *(_QWORD *)(v25 + 16);
        v34 = *(_QWORD *)(v25 + 24);
        if (v35 >= v34 >> 1)
        {
          sub_23F3B1A80(v34);
          sub_23F3F0E88();
          v25 = v208[0];
        }
        *(_QWORD *)(v25 + 16) = v35 + 1;
        v36 = v25 + 16 * v35;
        *(_QWORD *)(v36 + 32) = v31;
        *(_QWORD *)(v36 + 40) = v33;
        v27 += v204;
        --v24;
      }
      while (v24);
    }
    v39 = MEMORY[0x24266F8F8](v25, MEMORY[0x24BEE0D00]);
    v41 = v40;
    sub_23F38458C();
    sub_23F37AE00(v39, v41, &v207);
    *(_QWORD *)(v0 + 248) = v42;
    sub_23F61C790();
    sub_23F384364();
    sub_23F384A80();
    sub_23F3E025C(&dword_23F35A000, v195, v187, "%s implementingTools: %s", v190);
    sub_23F507364();
    sub_23F366530();
  }
  v37 = *(_QWORD *)(v0 + 456);
  sub_23F384A80();

  v38 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  sub_23F52E8E0();
  *(_QWORD *)(v0 + 592) = v38;
  v43 = *(_QWORD *)(v18 + 16);
  if (v43 == 1)
  {
    v61 = *(_QWORD *)(v0 + 416);
    v62 = *(_QWORD *)(v0 + 328);
    sub_23F3701D0(v18, v62);
    if (sub_23F36195C(v62, 1, v61) != 1)
    {
      v93 = *(_QWORD *)(v0 + 552);
      v94 = *(_QWORD *)(v0 + 544);
      v95 = *(_QWORD *)(v0 + 424);
      v96 = *(_QWORD *)(v0 + 432);
      v97 = *(_QWORD *)(v0 + 416);
      v178 = *(_QWORD *)(v0 + 536);
      v180 = *(_QWORD *)(v0 + 400);
      v189 = *(_QWORD *)(v0 + 392);
      v191 = *(_QWORD *)(v0 + 384);
      v98 = *(_QWORD *)(v0 + 336);
      v182 = *(_QWORD *)(v0 + 344);
      v99 = *(_QWORD *)(v0 + 328);
      v100 = *(_QWORD *)(v0 + 280);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 32))(v96, v99, v97);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v93, v96, v97);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v94 + 104))(v93, *MEMORY[0x24BE57550], v178);
      sub_23F618BD8();
      sub_23F618BE4();
      sub_23F618C14();
      sub_23F618BC0();
      sub_23F6190E8();
      v101 = *(void (**)(uint64_t, uint64_t, uint64_t))(v182 + 16);
      v101(v189, v100, v98);
      v101(v191, v180, v98);
      v102 = sub_23F619E8C();
      v183 = sub_23F61C610();
      v103 = os_log_type_enabled(v102, v183);
      v104 = *(_QWORD *)(v0 + 584);
      v105 = *(_QWORD *)(v0 + 576);
      v106 = *(_QWORD *)(v0 + 568);
      v107 = *(_QWORD *)(v0 + 432);
      v192 = *(_QWORD *)(v0 + 424);
      v200 = *(_QWORD *)(v0 + 416);
      v109 = *(_QWORD *)(v0 + 384);
      v108 = *(_QWORD *)(v0 + 392);
      v110 = *(_QWORD *)(v0 + 336);
      v111 = *(_QWORD *)(v0 + 344);
      if (v103)
      {
        v112 = sub_23F366668();
        v208[0] = sub_23F366668();
        *(_DWORD *)v112 = 136315650;
        sub_23F52E680((uint64_t)"replaceProtocolWithDirectExecuteTool(qdContext:toolbox:tool:spans:utteranceContext:tupleB"
                               "uilder:toolCandidateRanker:)");
        *(_QWORD *)(v0 + 200) = v113;
        sub_23F507380();
        v114 = sub_23F52E83C();
        sub_23F507C64(v114, v115);
        *(_QWORD *)(v0 + 208) = v116;
        sub_23F52E89C();
        sub_23F507380();
        sub_23F38432C();
        v117 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
        v117(v108, v110);
        *(_WORD *)(v112 + 22) = 2080;
        v118 = sub_23F5EF1D0();
        sub_23F507C64(v118, v119);
        *(_QWORD *)(v0 + 216) = v120;
        sub_23F61C790();
        sub_23F362984();
        v117(v109, v110);
        sub_23F4064B8(&dword_23F35A000, v102, v183, "QDInternal: Protocol substitution | %s\nOnly 1 implementing tool for protocol: %s, return it: %s", (uint8_t *)v112);
        swift_arrayDestroy();
        sub_23F366530();
      }

      (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v109, v110);
      sub_23F52E8EC();
      sub_23F52E798();
      (*(void (**)(uint64_t, uint64_t))(v192 + 8))(v107, v200);
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v104, v106);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 344) + 32))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 336));
      goto LABEL_4;
    }
    sub_23F3625D8(*(_QWORD *)(v0 + 328), &qword_256E70238);
  }
  else if (!v43)
  {
    v44 = *(NSObject **)(v0 + 520);
    v45 = *(_QWORD *)(v0 + 408);
    v46 = *(_QWORD *)(v0 + 336);
    v47 = *(_QWORD *)(v0 + 344);
    v48 = *(_QWORD *)(v0 + 280);
    sub_23F384364();
    sub_23F52E6C0();
    v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
    v49(v45, v48, v46);
    sub_23F619E8C();
    v50 = sub_23F507D60();
    v198 = v44;
    v51 = sub_23F52E8F8();
    v52 = *(_QWORD *)(v0 + 584);
    v53 = *(_QWORD *)(v0 + 448);
    v54 = *(_QWORD *)(v0 + 336);
    v203 = *(_QWORD *)(v0 + 568);
    if (v51)
    {
      v55 = *(_QWORD *)(v0 + 344);
      v56 = swift_slowAlloc();
      v208[0] = sub_23F366668();
      *(_DWORD *)v56 = 136315394;
      sub_23F52E680((uint64_t)"replaceProtocolWithDirectExecuteTool(qdContext:toolbox:tool:spans:utteranceContext:tupleBui"
                             "lder:toolCandidateRanker:)");
      *(_QWORD *)(v0 + 224) = v57;
      sub_23F52E7DC();
      *(_WORD *)(v56 + 12) = 2080;
      v58 = sub_23F5EF1D0();
      sub_23F507C64(v58, v59);
      *(_QWORD *)(v0 + 232) = v60;
      sub_23F52E7DC();
      swift_bridgeObjectRelease();
      sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
      sub_23F3E025C(&dword_23F35A000, v44, v50, "QDInternal: Protocol substitution | %s\nNo implementation, pass-thru the original protocol: %s", (uint8_t *)v56);
      sub_23F507364();
      sub_23F366530();
    }
    v88 = *(_QWORD *)(v0 + 576);
    v89 = *(_QWORD *)(v0 + 520);
    v90 = *(_QWORD *)(v0 + 408);
    v91 = *(_QWORD *)(v0 + 344);

    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v90, v54);
    v38(v89, v53);
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v52, v203);
    v92 = sub_23F52E84C();
    ((void (*)(uint64_t))v49)(v92);
    goto LABEL_4;
  }
  v63 = *(_QWORD *)(v0 + 312);
  v64 = *(_QWORD *)(v0 + 280);
  *(_QWORD *)(swift_task_alloc() + 16) = v64;
  sub_23F36820C();
  v66 = v65;
  *(_QWORD *)(v0 + 600) = v65;
  sub_23F384364();
  sub_23F3666DC();
  v205 = v38;
  if (!v63)
  {
    v74 = *(_QWORD *)(v0 + 344);
    sub_23F384120();
    sub_23F52E6C0();
    v75 = *(void (**)(uint64_t))(v74 + 16);
    sub_23F52E7A0();
    v76 = sub_23F619E8C();
    v77 = sub_23F61C628();
    v78 = os_log_type_enabled(v76, v77);
    v79 = *(_QWORD *)(v0 + 472);
    v80 = *(_QWORD *)(v0 + 448);
    v81 = *(_QWORD *)(v0 + 360);
    v82 = *(_QWORD *)(v0 + 344);
    v188 = v0 + 120;
    if (v78)
    {
      v199 = *(_QWORD *)(v0 + 336);
      v83 = (uint8_t *)sub_23F366668();
      v208[0] = sub_23F366668();
      *(_DWORD *)v83 = 136315394;
      sub_23F52E680((uint64_t)"replaceProtocolWithDirectExecuteTool(qdContext:toolbox:tool:spans:utteranceContext:tupleBui"
                             "lder:toolCandidateRanker:)");
      *(_QWORD *)(v0 + 120) = v84;
      sub_23F507380();
      v85 = sub_23F52E83C();
      sub_23F507C64(v85, v86);
      *(_QWORD *)(v0 + 128) = v87;
      sub_23F61C790();
      sub_23F38432C();
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v199);
      sub_23F3E025C(&dword_23F35A000, v76, v77, "%s No ToolCandidateRanker instantiated, pass-thru the original protocol: %s", v83);
      sub_23F507364();
      sub_23F366530();
    }
    v201 = *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8);
    v201(v81, *(_QWORD *)(v0 + 336));

    v38(v79, v80);
    sub_23F52E6C0();
    sub_23F52E7A0();
    v138 = sub_23F619E8C();
    v139 = sub_23F61C610();
    v140 = os_log_type_enabled(v138, v139);
    v141 = *(_QWORD *)(v0 + 584);
    v142 = *(_QWORD *)(v0 + 576);
    v143 = *(_QWORD *)(v0 + 568);
    v193 = *(_QWORD *)(v0 + 448);
    v196 = *(_QWORD *)(v0 + 464);
    if (v140)
    {
      v184 = *(_QWORD *)(v0 + 584);
      v144 = sub_23F366668();
      v208[0] = sub_23F366668();
      *(_DWORD *)v144 = 136315394;
      sub_23F52E680((uint64_t)"replaceProtocolWithDirectExecuteTool(qdContext:toolbox:tool:spans:utteranceContext:tupleBui"
                             "lder:toolCandidateRanker:)");
      *(_QWORD *)(v0 + 104) = v145;
      sub_23F52E7DC();
      *(_WORD *)(v144 + 12) = 2080;
      v146 = sub_23F5EF1D0();
      sub_23F507C64(v146, v147);
      *(_QWORD *)(v0 + 112) = v148;
      sub_23F61C790();
      v149 = sub_23F38458C();
      sub_23F52E7F4(v149, v150, v151, v152, v153, v154, v155, v156, v166, v167, v168, v169, v170, v171, v172, v173, v174, v175, v176,
        v177,
        v143,
        v184,
        v142,
        v188,
        v193,
        v196,
        v201);
      sub_23F3E025C(&dword_23F35A000, v138, v139, "QDInternal: Protocol substitution | %s\nNo ToolCandidateRanker instantiated, pass-thru the original protocol: %s", (uint8_t *)v144);
      sub_23F507364();
      sub_23F366530();
    }

    sub_23F52E7F4(v157, v158, v159, v160, v161, v162, v163, v164, v166, v167, v168, v169, v170, v171, v172, v173, v174, v175, v176,
      v177,
      v179,
      v181,
      v185,
      v188,
      v193,
      v196,
      v201);
    v38(v197, v194);
    (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v141, v143);
    v165 = sub_23F52E84C();
    v75(v165);
    goto LABEL_4;
  }
  v67 = *(NSObject **)(v0 + 504);
  swift_retain();
  sub_23F52E6C0();
  sub_23F619E8C();
  v68 = sub_23F507D60();
  v69 = os_log_type_enabled(v67, v68);
  v70 = *(_QWORD *)(v0 + 504);
  v71 = *(_QWORD *)(v0 + 448);
  if (v69)
  {
    v72 = (uint8_t *)sub_23F366668();
    v208[0] = sub_23F366668();
    *(_DWORD *)v72 = 136315138;
    sub_23F52E680((uint64_t)"replaceProtocolWithDirectExecuteTool(qdContext:toolbox:tool:spans:utteranceContext:tupleBuild"
                           "er:toolCandidateRanker:)");
    *(_QWORD *)(v0 + 192) = v73;
    sub_23F61C790();
    sub_23F38485C(&dword_23F35A000, v67, v68, "QDInternal: Protocol substitution | %s\nCall Joint Resolver model and try to return one n' only Direct Execute tool", v72);
    swift_arrayDestroy();
    sub_23F366530();
  }

  v205(v70, v71);
  v121 = *(NSObject **)(v0 + 496);
  v122 = *(_QWORD *)(v0 + 296);
  v123 = *(_QWORD *)(v0 + 288);
  v124 = sub_23F35EA9C(*(_QWORD **)(v0 + 304), *(_QWORD *)(*(_QWORD *)(v0 + 304) + 24));
  sub_23F55E0C8(v66, v123, v122, *v124, *((unsigned __int8 *)v124 + 8), v124[2]);
  v126 = v125;
  *(_QWORD *)(v0 + 608) = v125;
  sub_23F52E6C0();
  sub_23F3E0254();
  sub_23F619E8C();
  v127 = sub_23F3B1A04();
  if (sub_23F52E788(v127))
  {
    v128 = sub_23F366668();
    v208[0] = sub_23F366668();
    *(_DWORD *)v128 = 136315394;
    sub_23F52E680((uint64_t)"replaceProtocolWithDirectExecuteTool(qdContext:toolbox:tool:spans:utteranceContext:tupleBuild"
                           "er:toolCandidateRanker:)");
    *(_QWORD *)(v0 + 176) = v129;
    sub_23F507380();
    *(_WORD *)(v128 + 12) = 2080;
    DecorationTuple = type metadata accessor for QueryDecorationTuple(0);
    v131 = sub_23F617BA0();
    v132 = MEMORY[0x24266F8F8](v131, DecorationTuple);
    v134 = v133;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v132, v134, v208);
    *(_QWORD *)(v0 + 184) = v135;
    sub_23F61C790();
    sub_23F38432C();
    sub_23F384A80();
    sub_23F3E025C(&dword_23F35A000, v121, (os_log_type_t)v71, "%s Created QueryDecorationTuple %s", (uint8_t *)v128);
    sub_23F507364();
    sub_23F366530();
  }
  sub_23F384A80();

  v136 = sub_23F384AB4();
  ((void (*)(uint64_t))v205)(v136);
  v206 = (char *)&dword_256E79380 + dword_256E79380;
  v137 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 616) = v137;
  *v137 = v0;
  v137[1] = sub_23F52BDD0;
  return ((uint64_t (*)(_QWORD, uint64_t))v206)(*(_QWORD *)(v0 + 264), v126);
}

uint64_t sub_23F52BDD0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_23F52E82C();
  *(_QWORD *)(v3 + 624) = v5;
  *(_QWORD *)(v3 + 632) = v2;
  sub_23F52E8D0();
  if (v2)
  {
    swift_bridgeObjectRelease();
    sub_23F362D18();
  }
  else
  {
    sub_23F362D18();
    *(_BYTE *)(v3 + 640) = a2;
  }
  sub_23F36679C();
  return sub_23F3B13D4();
}

uint64_t sub_23F52BE48()
{
  uint64_t v0;
  NSObject *v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  if ((*(_BYTE *)(v0 + 640) & 1) != 0)
  {
    v15 = *(_QWORD *)(v0 + 368);
    v17 = *(_QWORD *)(v0 + 336);
    v16 = *(_QWORD *)(v0 + 344);
    v18 = *(_QWORD *)(v0 + 280);
    swift_bridgeObjectRelease();
    sub_23F52E6C0();
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    v19(v15, v18, v17);
    v20 = sub_23F619E8C();
    v21 = sub_23F61C610();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
    v24 = *(_QWORD *)(v0 + 584);
    v25 = *(_QWORD *)(v0 + 576);
    v26 = *(_QWORD *)(v0 + 568);
    v41 = *(_QWORD *)(v0 + 448);
    v42 = *(_QWORD *)(v0 + 480);
    if (v22)
    {
      v27 = sub_23F366668();
      v28 = sub_23F366668();
      v43 = v28;
      *(_DWORD *)v27 = 136315394;
      sub_23F52E698(v28, 0x800000023F638B70, &v43);
      *(_QWORD *)(v0 + 136) = v29;
      sub_23F61C790();
      *(_WORD *)(v27 + 12) = 2080;
      v30 = sub_23F5EF1D0();
      sub_23F37AE00(v30, v31, &v43);
      *(_QWORD *)(v0 + 144) = v32;
      sub_23F61C790();
      sub_23F38458C();
      sub_23F52E804();
      sub_23F3E025C(&dword_23F35A000, v20, v21, "QDInternal: Protocol substitution | %s\nJoint Resolver did not resolve to a Direct Execute tool, pass-thru the original protocol: %s", (uint8_t *)v27);
      sub_23F507364();
      sub_23F366530();
    }

    swift_release();
    sub_23F52E804();
    v23(v42, v41);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    v39 = sub_23F52E84C();
    ((void (*)(uint64_t))v19)(v39);
    goto LABEL_12;
  }
  v1 = *(NSObject **)(v0 + 488);
  sub_23F6190E8();
  sub_23F3E0254();
  v2 = v1;
  sub_23F619E8C();
  v3 = sub_23F507D60();
  v4 = os_log_type_enabled(v1, v3);
  v5 = *(_QWORD *)(v0 + 624);
  if (!v4)
  {
    v33 = *(uint64_t (**)(uint64_t))(v0 + 592);
    sub_23F384A80();

    v34 = sub_23F384AB4();
    result = v33(v34);
    if (v5 < 0)
    {
      __break(1u);
    }
    else
    {
      v35 = *(_QWORD *)(v0 + 624);
      v36 = *(_QWORD *)(v0 + 600);
      if (v35 < *(_QWORD *)(v36 + 16))
      {
        (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 344) + 16))(*(_QWORD *)(v0 + 256), v36+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 344) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 344) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 344) + 72) * v35, *(_QWORD *)(v0 + 336));
        swift_release();
        sub_23F362984();
        v37 = sub_23F384AB4();
        v38(v37);
LABEL_12:
        sub_23F52E608();
        sub_23F52E724();
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
        sub_23F3666E4();
        sub_23F366698();
        sub_23F3666D4();
        sub_23F3666A0();
        sub_23F3666DC();
        sub_23F3668DC();
        sub_23F3668D4();
        sub_23F383980();
        sub_23F3667E0();
        sub_23F383898();
        sub_23F383978();
        sub_23F383970();
        sub_23F383890();
        sub_23F383888();
        sub_23F383880();
        sub_23F383878();
        sub_23F383870();
        sub_23F383868();
        sub_23F383C4C();
        sub_23F383C44();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_23F38409C();
        sub_23F41C50C();
        v40 = (uint64_t (*)(void))sub_23F384760();
        return sub_23F52E6A4(v40);
      }
    }
    __break(1u);
    goto LABEL_15;
  }
  v6 = sub_23F366668();
  v7 = sub_23F366668();
  v43 = v7;
  *(_DWORD *)v6 = 136315650;
  sub_23F52E698(v7, 0x800000023F638B70, &v43);
  *(_QWORD *)(v0 + 152) = v8;
  sub_23F52E89C();
  sub_23F52E7DC();
  *(_WORD *)(v6 + 12) = 2048;
  *(_QWORD *)(v0 + 160) = v5;
  result = sub_23F61C790();
  *(_WORD *)(v6 + 22) = 2080;
  if ((v5 & 0x8000000000000000) == 0)
  {
    v10 = *(_QWORD *)(v0 + 624);
    v11 = *(_QWORD *)(v0 + 600);
    if (v10 < *(_QWORD *)(v11 + 16))
    {
      (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 344) + 16))(*(_QWORD *)(v0 + 376), v11+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 344) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 344) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 344) + 72) * v10, *(_QWORD *)(v0 + 336));
      sub_23F52E89C();
      v12 = sub_23F61C16C();
      sub_23F37AE00(v12, v13, &v43);
      *(_QWORD *)(v0 + 168) = v14;
      sub_23F61C790();
      sub_23F362D18();
      sub_23F384A80();
      sub_23F4064B8(&dword_23F35A000, v2, v3, "QDInternal: Protocol substitution | %s\nBest Direct Executable rowIndex resovled by Joint Resolver: %ld. Returning %s", (uint8_t *)v6);
      sub_23F507364();
      sub_23F366530();
    }
    goto LABEL_16;
  }
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_23F52C330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v1 = *(_QWORD *)(v0 + 576);
  swift_release();
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F52E608();
  sub_23F35EA9C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v2 = sub_23F3848F0();
  v3(v2);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F38409C();
  sub_23F41C50C();
  return sub_23F52E6A4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F52C434(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_23F618C08();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23F618BB4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F61B5D8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE57550], v3);
  sub_23F618BD8();
  sub_23F618BE4();
  sub_23F618C14();
  return sub_23F618BC0();
}

uint64_t sub_23F52C55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t DecorationTupleParameter;
  uint64_t DecorationTuple;
  uint64_t v15;

  v4[25] = a3;
  v4[26] = v3;
  v4[23] = a1;
  v4[24] = a2;
  v5 = sub_23F6182A8();
  v4[27] = v5;
  v4[28] = *(_QWORD *)(v5 - 8);
  v4[29] = sub_23F366578();
  v6 = sub_23F619D48();
  v4[30] = v6;
  v4[31] = *(_QWORD *)(v6 - 8);
  v4[32] = sub_23F366578();
  v7 = sub_23F617000();
  v4[33] = v7;
  v4[34] = *(_QWORD *)(v7 - 8);
  v4[35] = sub_23F366578();
  v4[36] = _s10ModelInputVMa();
  v4[37] = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FAA0);
  v4[38] = sub_23F366654();
  v4[39] = sub_23F3666CC();
  v4[40] = type metadata accessor for JointResolution.DeviceContext();
  v4[41] = sub_23F366654();
  v4[42] = sub_23F3666CC();
  v8 = sub_23F3B1728();
  v4[43] = v8;
  v4[44] = *(_QWORD *)(v8 - 8);
  v4[45] = sub_23F366654();
  v4[46] = sub_23F3666CC();
  v4[47] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E6FAB8);
  v4[48] = sub_23F366578();
  v9 = sub_23F6188C0();
  v4[49] = v9;
  v4[50] = *(_QWORD *)(v9 - 8);
  v4[51] = sub_23F366578();
  v10 = sub_23F618D28();
  v4[52] = v10;
  v4[53] = *(_QWORD *)(v10 - 8);
  v4[54] = sub_23F366578();
  v11 = sub_23F618D88();
  v4[55] = v11;
  v4[56] = *(_QWORD *)(v11 - 8);
  v4[57] = sub_23F366578();
  v4[58] = type metadata accessor for QueryDecorationEntityValue(0);
  v4[59] = sub_23F366578();
  sub_23F35D2E8(&qword_256E701F0);
  v4[60] = sub_23F366578();
  v12 = sub_23F61B92C();
  v4[61] = v12;
  v4[62] = *(_QWORD *)(v12 - 8);
  v4[63] = sub_23F366654();
  v4[64] = sub_23F3666CC();
  v4[65] = sub_23F3666CC();
  v4[66] = sub_23F3666CC();
  DecorationTupleParameter = type metadata accessor for QueryDecorationTupleParameter(0);
  v4[67] = DecorationTupleParameter;
  v4[68] = *(_QWORD *)(DecorationTupleParameter - 8);
  v4[69] = sub_23F366654();
  v4[70] = sub_23F3666CC();
  DecorationTuple = type metadata accessor for QueryDecorationTuple(0);
  v4[71] = DecorationTuple;
  v4[72] = *(_QWORD *)(DecorationTuple - 8);
  v4[73] = sub_23F366578();
  v15 = sub_23F616FC4();
  v4[74] = v15;
  v4[75] = *(_QWORD *)(v15 - 8);
  v4[76] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

void sub_23F52C78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  BOOL v14;
  int64_t v15;
  unint64_t v16;
  char v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t DecorationEntity;
  uint64_t EnumCaseMultiPayload;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void (*v42)(uint64_t, uint64_t);
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t);
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v84;
  uint64_t v85;
  _OWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  __int128 v123;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    sub_23F52E76C();
    v86 = *(_OWORD **)(v0 + 184);
    sub_23F52E8D0();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v86[2] = 0u;
    v86[3] = 0u;
    *v86 = 0u;
    v86[1] = 0u;
    sub_23F384760();
    sub_23F52E7B0();
    __asm { BR              X0 }
  }
  v3 = *(_QWORD *)(v0 + 576);
  v97 = *(_QWORD *)(v0 + 568);
  v4 = *(_QWORD *)(v0 + 544);
  v5 = *(_QWORD *)(v0 + 536);
  v115 = *(_QWORD *)(v0 + 496);
  v93 = *(_QWORD *)(v0 + 400);
  v107 = *(_QWORD *)(v0 + 352);
  sub_23F616EF8();
  v119 = MEMORY[0x24BEE4AF8];
  v94 = v2;
  sub_23F37B5E8();
  v6 = 0;
  v96 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v95 = *(_QWORD *)(v3 + 72);
  v108 = v0;
  v109 = v5;
  v110 = v4;
  while (2)
  {
    v7 = *(_QWORD *)(v0 + 584);
    v105 = v6 + 1;
    sub_23F4C8990(v96 + v6 * v95, v7, type metadata accessor for QueryDecorationTuple);
    sub_23F55B988((uint64_t)&v120);
    v103 = v121;
    v104 = v120;
    v102 = v122;
    v101 = v123;
    v8 = *(_QWORD *)(v7 + *(int *)(v97 + 20));
    v111 = v8 + 56;
    v9 = -1 << *(_BYTE *)(v8 + 32);
    if (-v9 < 64)
      v10 = ~(-1 << -(char)v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v8 + 56);
    v112 = (unint64_t)(63 - v9) >> 6;
    v116 = v8;
    sub_23F3E0254();
    v12 = 0;
    v106 = MEMORY[0x24BEE4AF8];
    if (v11)
    {
LABEL_7:
      v117 = (v11 - 1) & v11;
      v118 = v12;
      v13 = __clz(__rbit64(v11)) | (v12 << 6);
      goto LABEL_28;
    }
    while (1)
    {
      v14 = __OFADD__(v12, 1);
      v15 = v12 + 1;
      if (v14)
      {
        __break(1u);
        goto LABEL_80;
      }
      if (v15 >= v112)
        goto LABEL_52;
      v16 = *(_QWORD *)(v111 + 8 * v15);
      if (!v16)
        break;
LABEL_27:
      v117 = (v16 - 1) & v16;
      v118 = v15;
      v13 = __clz(__rbit64(v16)) + (v15 << 6);
LABEL_28:
      v19 = *(_QWORD *)(v0 + 560);
      v20 = *(_QWORD *)(v0 + 552);
      v21 = *(_QWORD *)(v0 + 472);
      sub_23F4C8990(*(_QWORD *)(v116 + 48) + *(_QWORD *)(v4 + 72) * v13, v19, type metadata accessor for QueryDecorationTupleParameter);
      sub_23F52E528(v19, v20, type metadata accessor for QueryDecorationTupleParameter);
      v22 = v20 + *(int *)(v5 + 20);
      DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
      sub_23F4C8990(v22 + *(int *)(DecorationEntity + 20), v21, type metadata accessor for QueryDecorationEntityValue);
      sub_23F3848F0();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (!(_DWORD)EnumCaseMultiPayload)
      {
        sub_23F52E7E4(EnumCaseMultiPayload, *(_QWORD *)(v0 + 472));
        sub_23F618D64();
        goto LABEL_32;
      }
      if ((_DWORD)EnumCaseMultiPayload == 1)
      {
        sub_23F52E7E4(EnumCaseMultiPayload, *(_QWORD *)(v0 + 472));
        sub_23F618CE0();
LABEL_32:
        v25 = sub_23F3848F0();
        v26(v25);
        goto LABEL_34;
      }
      sub_23F36196C(*(_QWORD *)(v0 + 480), 1, 1, *(_QWORD *)(v0 + 488));
LABEL_34:
      v27 = *(_QWORD *)(v0 + 480);
      if (sub_23F36195C(v27, 1, *(_QWORD *)(v0 + 488)) == 1)
      {
        v28 = *(_QWORD *)(v0 + 552);
        sub_23F3625D8(v27, &qword_256E701F0);
      }
      else
      {
        v29 = *(_QWORD *)(v0 + 528);
        v30 = *(_QWORD *)(v0 + 520);
        v32 = *(_QWORD *)(v0 + 504);
        v31 = *(_QWORD *)(v0 + 512);
        v33 = *(_QWORD *)(v0 + 384);
        v113 = *(_QWORD *)(v0 + 392);
        sub_23F52E758();
        sub_23F384480(v30, v29);
        v34 = sub_23F55AF00();
        sub_23F384480(v31, v30);
        sub_23F384480(v32, v31);
        sub_23F4A4BAC(v32, v33);
        if (sub_23F36195C(v33, 1, v113) != 1)
        {
          v114 = v34;
          v49 = *(_QWORD *)(v0 + 552);
          v50 = *(_QWORD *)(v0 + 528);
          v51 = *(_QWORD *)(v0 + 520);
          v52 = *(_QWORD *)(v0 + 488);
          (*(void (**)(_QWORD, _QWORD, _QWORD))(v93 + 32))(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 392));
          v53 = sub_23F6188A8();
          v99 = v54;
          v100 = v53;
          v55 = sub_23F6188B4();
          v98 = v56;
          v57 = *(void (**)(uint64_t))(v115 + 8);
          v58 = sub_23F52E904();
          v57(v58);
          sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v93 + 8));
          ((void (*)(uint64_t, uint64_t))v57)(v51, v52);
          ((void (*)(uint64_t, uint64_t))v57)(v50, v52);
          sub_23F3663AC(v49, type metadata accessor for QueryDecorationTupleParameter);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F376E0C();
            v106 = v62;
          }
          v0 = v108;
          v5 = v109;
          v60 = *(_QWORD *)(v106 + 16);
          v59 = *(_QWORD *)(v106 + 24);
          if (v60 >= v59 >> 1)
          {
            sub_23F3B1A80(v59);
            sub_23F376E0C();
            v106 = v63;
          }
          *(_QWORD *)(v106 + 16) = v60 + 1;
          v61 = (_QWORD *)(v106 + 40 * v60);
          v61[4] = v100;
          v61[5] = v99;
          v61[6] = v55;
          v61[7] = v98;
          v61[8] = v114;
          v4 = v110;
          goto LABEL_41;
        }
        v35 = *(_QWORD *)(v0 + 520);
        v36 = *(_QWORD *)(v0 + 512);
        v37 = *(_QWORD *)(v0 + 488);
        sub_23F3625D8(*(_QWORD *)(v0 + 384), &qword_256E6FAB8);
        v120 = 0;
        v121 = 0xE000000000000000;
        sub_23F61C8E0();
        v38 = v121;
        *(_QWORD *)(v0 + 136) = v120;
        *(_QWORD *)(v0 + 144) = v38;
        sub_23F61C280();
        sub_23F61CA00();
        sub_23F61C280();
        v39 = *(_QWORD *)(v0 + 136);
        v40 = *(_QWORD *)(v0 + 144);
        sub_23F366414();
        swift_allocError();
        *v41 = v39;
        v41[1] = v40;
        swift_willThrow();
        v42 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
        v42(v36, v37);
        v42(v35, v37);
        sub_23F384120();
        sub_23F6190E8();
        sub_23F441468();
        sub_23F441468();
        v43 = sub_23F619E8C();
        v44 = sub_23F61C628();
        if (sub_23F366874(v44))
        {
          v45 = sub_23F366668();
          v46 = (_QWORD *)sub_23F366668();
          *(_DWORD *)v45 = 138412290;
          sub_23F441468();
          v47 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v45 + 4) = v47;
          *v46 = v47;
          sub_23F3665E8();
          sub_23F3665E8();
          sub_23F38485C(&dword_23F35A000, v43, (os_log_type_t)v36, "Failed to convert entity to Joint Resolver candidate: %@", (uint8_t *)v45);
          sub_23F35D2E8(&qword_256E6FAB0);
          sub_23F366844();
          sub_23F366530();
        }
        sub_23F3665E8();

        sub_23F3665E8();
        sub_23F3665E8();
        v5 = v109;
        v4 = v110;
        v0 = v108;
        v28 = *(_QWORD *)(v108 + 552);
        sub_23F384274(v107);
        v48 = sub_23F384AB4();
        ((void (*)(uint64_t))v42)(v48);
      }
      sub_23F3663AC(v28, type metadata accessor for QueryDecorationTupleParameter);
LABEL_41:
      v11 = v117;
      v12 = v118;
      if (v117)
        goto LABEL_7;
    }
    sub_23F52E820();
    if (v17 == v14)
      goto LABEL_52;
    sub_23F52E814();
    if (v16)
      goto LABEL_26;
    sub_23F52E820();
    if (v17 == v14)
      goto LABEL_52;
    sub_23F52E814();
    if (v16)
      goto LABEL_26;
    sub_23F52E820();
    if (v17 == v14)
      goto LABEL_52;
    sub_23F52E814();
    if (v16)
      goto LABEL_26;
    sub_23F52E820();
    if (v17 == v14)
      goto LABEL_52;
    sub_23F52E814();
    if (v16)
    {
LABEL_26:
      v15 = v18;
      goto LABEL_27;
    }
    sub_23F52E820();
    if (v17 != v14)
    {
      sub_23F52E814();
      if (!v16)
      {
        while (1)
        {
          v15 = v18 + 1;
          if (__OFADD__(v18, 1))
            break;
          if (v15 >= v112)
            goto LABEL_52;
          v16 = *(_QWORD *)(v111 + 8 * v15);
          ++v18;
          if (v16)
            goto LABEL_27;
        }
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        sub_23F61CA9C();
        sub_23F52E7B0();
        return;
      }
      goto LABEL_26;
    }
LABEL_52:
    v64 = *(_QWORD *)(v0 + 584);
    sub_23F366748();
    sub_23F362984();
    sub_23F35D2E8(&qword_256E6FDF8);
    v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_23F61E7E0;
    *(_QWORD *)(v65 + 32) = v104;
    *(_QWORD *)(v65 + 40) = v103;
    *(_QWORD *)(v65 + 48) = v102;
    *(_OWORD *)(v65 + 56) = v101;
    v120 = v65;
    sub_23F38776C();
    v66 = v120;
    sub_23F3663AC(v64, type metadata accessor for QueryDecorationTuple);
    v67 = v119;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F37B5E8();
      v67 = v119;
    }
    v6 = v105;
    v69 = *(_QWORD *)(v67 + 16);
    v68 = *(_QWORD *)(v67 + 24);
    if (v69 >= v68 >> 1)
    {
      sub_23F3B1A80(v68);
      sub_23F37B5E8();
      v6 = v105;
      v67 = v119;
    }
    *(_QWORD *)(v0 + 624) = v67;
    *(_QWORD *)(v67 + 16) = v69 + 1;
    *(_QWORD *)(v67 + 8 * v69 + 32) = v66;
    if (v6 != v94)
      continue;
    break;
  }
  v70 = (_QWORD *)sub_23F529EF8(v67);
  v71 = sub_23F385B28(v70);
  v73 = v72;
  sub_23F362D18();
  *(_QWORD *)(v0 + 616) = v71;
  *(_BYTE *)(v0 + 73) = v73;
  v74 = *(_QWORD *)(v67 + 16);
  if (v74)
  {
    swift_retain();
    v75 = 0;
    v76 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v77 = *(_QWORD *)(v67 + 8 * v75 + 32);
      v78 = *(_QWORD *)(v77 + 16);
      v79 = *(_QWORD *)(v76 + 16);
      if (__OFADD__(v79, v78))
        goto LABEL_81;
      sub_23F617BA0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v79 + v78 > *(_QWORD *)(v76 + 24) >> 1)
      {
        sub_23F376E0C();
        v76 = v80;
      }
      if (*(_QWORD *)(v77 + 16))
      {
        v81 = *(_QWORD *)(v76 + 16);
        if ((*(_QWORD *)(v76 + 24) >> 1) - v81 < v78)
          goto LABEL_83;
        v82 = v76 + 40 * v81 + 32;
        if (v77 + 32 < v82 + 40 * v78 && v82 < v77 + 32 + 40 * v78)
          goto LABEL_85;
        swift_arrayInitWithCopy();
        if (v78)
        {
          v84 = *(_QWORD *)(v76 + 16);
          v14 = __OFADD__(v84, v78);
          v85 = v84 + v78;
          if (v14)
            goto LABEL_84;
          *(_QWORD *)(v76 + 16) = v85;
        }
      }
      else if (v78)
      {
        goto LABEL_82;
      }
      sub_23F384120();
      if (v74 == ++v75)
      {
        sub_23F366748();
        goto LABEL_78;
      }
    }
  }
  v76 = MEMORY[0x24BEE4AF8];
LABEL_78:
  sub_23F369280(v76);
  swift_bridgeObjectRelease();
  v87 = swift_retain();
  *(_QWORD *)(v0 + 632) = sub_23F48E3A0(v87, MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + 640) = v88;
  *(_QWORD *)(v0 + 648) = v89;
  sub_23F35EA9C((_QWORD *)(*(_QWORD *)(v0 + 208) + 64), *(_QWORD *)(*(_QWORD *)(v0 + 208) + 88));
  v91 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 656) = v91;
  *v91 = v0;
  v91[1] = sub_23F52D458;
  sub_23F52E7B0();
  sub_23F416960(v92);
}

uint64_t sub_23F52D458()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  sub_23F52E82C();
  *v3 = *v1;
  *(_QWORD *)(v2 + 664) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    sub_23F362D08();
    sub_23F362D18();
    sub_23F362984();
  }
  sub_23F36679C();
  return sub_23F3B13D4();
}

uint64_t sub_23F52D4CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 208);
  v21 = *(_OWORD *)(v0 + 32);
  v22 = *(_OWORD *)(v0 + 16);
  v20 = *(_OWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_BYTE *)(v0 + 72);
  sub_23F616FA0();
  v6 = v1 + *(int *)(v2 + 20);
  *(_OWORD *)v6 = v22;
  *(_OWORD *)(v6 + 16) = v21;
  *(_OWORD *)(v6 + 32) = v20;
  *(_QWORD *)(v6 + 48) = v4;
  *(_BYTE *)(v6 + 56) = v5;
  if (!*(_QWORD *)(v3 + 56))
  {
    sub_23F52E890();
    v14 = MEMORY[0x24BEE4AF8];
    sub_23F3E0254();
    sub_23F619E8C();
    v15 = sub_23F3B1A04();
    if (sub_23F52E8F8())
    {
      v16 = (uint8_t *)sub_23F366668();
      *(_DWORD *)v16 = 134218240;
      *(_QWORD *)(v0 + 160) = *(_QWORD *)(v14 + 16);
      sub_23F3848F0();
      sub_23F61C790();
      sub_23F52E85C();
      *(_QWORD *)(v0 + 168) = v17;
      sub_23F61C790();
      sub_23F384A80();
      sub_23F3E025C(&dword_23F35A000, 0, v15, "ToolCandidateRanker fetched %ld tupleInteractions and %ld candidateInteractions from InteractionStore", v16);
      sub_23F366530();
    }
    sub_23F384A80();

    v18 = *(_QWORD *)(v0 + 336);
    v19 = *(_QWORD *)(v0 + 328);
    sub_23F52E6C8(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 344));
    swift_release();
    sub_23F4C8990(v18, v19, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
    sub_23F52E8D8();
  }
  v8 = *(_QWORD *)(v0 + 304);
  v7 = *(_QWORD *)(v0 + 312);
  sub_23F36678C(v7);
  sub_23F36678C(v8);
  v9 = sub_23F499504(v7, v8);
  *(_QWORD *)(v0 + 672) = v9;
  v10 = sub_23F3848F0();
  sub_23F3625D8(v10, v11);
  sub_23F3625D8(v7, &qword_256E6FAA0);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 680) = v12;
  *v12 = v0;
  v12[1] = sub_23F52D884;
  return sub_23F497DDC(*(_QWORD *)(v0 + 632), *(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 648), *(_QWORD *)(v0 + 608), v9);
}

uint64_t sub_23F52D720(uint64_t a1)
{
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v10 = (a1 + 1) & ~((a1 + 1) >> 63);
  sub_23F52E528(v3, v8, v9);
  v11 = v8 + v1[5];
  *(_OWORD *)v11 = v26;
  *(_QWORD *)(v11 + 16) = v27;
  v12 = (_QWORD *)(v8 + v1[6]);
  *v12 = v2;
  v12[1] = v2;
  *(_QWORD *)(v8 + v1[7]) = v2;
  v13 = (_QWORD *)(v8 + v1[8]);
  *v13 = v2;
  v13[1] = v7;
  v14 = (_QWORD *)(v8 + v1[9]);
  *v14 = 0;
  v14[1] = v10;
  *(_BYTE *)(v8 + v1[10]) = 1;
  sub_23F52E8A8();
  v15 = *(_QWORD *)(v5 + 40);
  v16 = *(_QWORD *)(v5 + 48);
  sub_23F52E74C();
  sub_23F619D3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 96))(v28, v6, v15, v16);
  (*(void (**)(uint64_t))(v29 + 8))(v6);
  sub_23F35EA9C((_QWORD *)(v30 + 16), *(_QWORD *)(v30 + 40));
  v17 = sub_23F618E84();
  v19 = v18;
  v4[89] = v18;
  v20 = *(_QWORD *)(v5 + 40);
  v21 = *(_QWORD *)(v5 + 48);
  v22 = (_QWORD *)sub_23F52E89C();
  sub_23F35EA9C(v22, v23);
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  v24 = (_QWORD *)swift_task_alloc();
  v4[90] = (uint64_t)v24;
  *v24 = v4;
  v24[1] = sub_23F52DEE4;
  return sub_23F493CB8(v31, v4[37], v17, v19, 1, v4[35], v4[29]);
}

uint64_t sub_23F52D884(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v7;

  sub_23F52E82C();
  *v7 = *v3;
  v4[86] = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v4[87] = a2;
    v4[88] = a1;
  }
  sub_23F36679C();
  return sub_23F3B13D4();
}

uint64_t sub_23F52D8F0()
{
  uint64_t v0;

  sub_23F52E874();
  sub_23F384274(*(_QWORD *)(v0 + 600));
  sub_23F52E584(*(_QWORD *)(v0 + 664));
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F38409C();
  sub_23F41C50C();
  return sub_23F441150(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F52D990()
{
  NSObject *v0;
  _QWORD *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v1[88];
  v4 = v1[87];
  sub_23F52E890();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F619E8C();
  v5 = sub_23F3B1A04();
  if (sub_23F366874(v5))
  {
    v6 = sub_23F366668();
    *(_DWORD *)v6 = 134218240;
    v1[20] = *(_QWORD *)(v4 + 16);
    sub_23F61C790();
    *(_WORD *)(v6 + 12) = 2048;
    v1[21] = *(_QWORD *)(v3 + 16);
    sub_23F61C790();
    sub_23F362D18();
    sub_23F362D08();
    sub_23F3E025C(&dword_23F35A000, v0, v2, "ToolCandidateRanker fetched %ld tupleInteractions and %ld candidateInteractions from InteractionStore", (uint8_t *)v6);
    sub_23F366530();
  }
  sub_23F362D18();
  sub_23F362D08();

  sub_23F52E910();
  sub_23F52E704();
  sub_23F52E6C8(v7, v8);
  swift_release();
  v9 = sub_23F3848F0();
  sub_23F4C8990(v9, v10, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
  sub_23F52E8D8();
}

uint64_t sub_23F52DAD4(uint64_t a1)
{
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v10 = (a1 + 1) & ~((a1 + 1) >> 63);
  sub_23F52E528(v5, v8, v9);
  sub_23F52E8BC((__n128 *)(v8 + v1[5]), v36, v39, v41);
  v11 = (_QWORD *)(v8 + v1[6]);
  *v11 = v49;
  v11[1] = v48;
  v12 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v8 + v1[7]) = MEMORY[0x24BEE4AF8];
  v13 = (_QWORD *)(v8 + v1[8]);
  *v13 = v12;
  v13[1] = v3;
  v14 = (_QWORD *)(v8 + v1[9]);
  *v14 = 0;
  v14[1] = v10;
  *(_BYTE *)(v8 + v1[10]) = 1;
  sub_23F52E8A8();
  v15 = v7 + 2;
  v16 = v7[5];
  v17 = v7[6];
  sub_23F52E74C();
  sub_23F619D3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 96))(v2, v6, v16, v17);
  (*(void (**)(uint64_t))(v43 + 8))(v6);
  sub_23F35EA9C((_QWORD *)(v45 + 16), *(_QWORD *)(v45 + 40));
  v18 = sub_23F618E84();
  v20 = v19;
  *(_QWORD *)(v4 + 712) = v19;
  v21 = v7[5];
  v22 = v7[6];
  sub_23F35EA9C(v15, v21);
  (*(void (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
  v23 = (_QWORD *)swift_task_alloc();
  v31 = sub_23F52E6D8(v23, v24, v25, v26, v27, v28, v29, v30, v37, v38, v40, v42, v43, v44, v45, v46, v47);
  return sub_23F493CB8(v31, v32, v18, v20, 1, v33, v34);
}

void sub_23F52DC24()
{
  uint64_t v0;
  os_log_type_t v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(void **)(v0 + 688);
  sub_23F619100();
  v3 = v2;
  v4 = v2;
  v5 = sub_23F619E8C();
  v6 = sub_23F61C628();
  if (sub_23F366874(v6))
  {
    v7 = (uint8_t *)sub_23F366668();
    v8 = (_QWORD *)sub_23F366668();
    *(_DWORD *)v7 = 138412290;
    sub_23F441468();
    v9 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 176) = v9;
    sub_23F61C790();
    *v8 = v9;
    sub_23F3665E8();
    sub_23F3665E8();
    sub_23F38485C(&dword_23F35A000, v5, v1, "[RECOVERABLE_ERROR]: %@", v7);
    sub_23F35D2E8(&qword_256E6FAB0);
    sub_23F366844();
    sub_23F366530();
  }
  sub_23F3665E8();
  sub_23F3665E8();
  sub_23F3665E8();

  sub_23F52E910();
  sub_23F52E704();
  sub_23F52E6C8(v10, v11);
  swift_release();
  v12 = sub_23F52E904();
  sub_23F4C8990(v12, v13, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
  sub_23F52E8D8();
}

uint64_t sub_23F52DD98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v10 = (a1 + 1) & ~((a1 + 1) >> 63);
  sub_23F52E528(v9, v7, v8);
  sub_23F52E8BC((__n128 *)(v7 + v6[5]), v35, v38, v40);
  v11 = (_QWORD *)(v7 + v6[6]);
  v12 = MEMORY[0x24BEE4AF8];
  *v11 = MEMORY[0x24BEE4AF8];
  v11[1] = v12;
  *(_QWORD *)(v7 + v6[7]) = v12;
  v13 = (_QWORD *)(v7 + v6[8]);
  *v13 = v12;
  v13[1] = v3;
  v14 = (_QWORD *)(v7 + v6[9]);
  *v14 = 0;
  v14[1] = v10;
  *(_BYTE *)(v7 + v6[10]) = 1;
  sub_23F52E8A8();
  v15 = v1[5];
  v16 = v1[6];
  sub_23F35EA9C(v1 + 2, v15);
  sub_23F619D3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 96))(v2, v5, v15, v16);
  (*(void (**)(uint64_t))(v42 + 8))(v5);
  sub_23F35EA9C((_QWORD *)(v44 + 16), *(_QWORD *)(v44 + 40));
  v17 = sub_23F618E84();
  v19 = v18;
  *(_QWORD *)(v4 + 712) = v18;
  sub_23F35EA9C(v1 + 2, v1[5]);
  v20 = sub_23F52E904();
  v21(v20);
  v22 = (_QWORD *)swift_task_alloc();
  v30 = sub_23F52E6D8(v22, v23, v24, v25, v26, v27, v28, v29, v36, v37, v39, v41, v42, v43, v44, v45, v46);
  return sub_23F493CB8(v30, v31, v17, v19, 1, v32, v33);
}

uint64_t sub_23F52DEE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 728) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_23F384274(*(_QWORD *)(v2 + 224));
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 224);
    v4 = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v2 + 736) = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v2 + 752) = v4;
    *(_OWORD *)(v2 + 768) = *(_OWORD *)(v2 + 112);
    *(_QWORD *)(v2 + 784) = *(_QWORD *)(v2 + 128);
    sub_23F384274(v3);
  }
  sub_23F362984();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F52DF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v12 = *(_QWORD *)(v0 + 784);
  v10 = *(_OWORD *)(v0 + 752);
  v11 = *(_OWORD *)(v0 + 768);
  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 296);
  sub_23F384274(*(_QWORD *)(v0 + 272));
  sub_23F3663AC(v3, (uint64_t (*)(_QWORD))_s10ModelInputVMa);
  sub_23F3663AC(v2, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v9 = *(_OWORD *)(v0 + 736);
  if ((*(_BYTE *)(v0 + 73) & 1) != 0)
    v4 = 0;
  else
    v4 = *(_QWORD *)(v0 + 616);
  v8 = v4;
  sub_23F52E76C();
  v5 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  *(_OWORD *)v5 = v9;
  *(_OWORD *)(v5 + 16) = v10;
  *(_OWORD *)(v5 + 32) = v11;
  *(_QWORD *)(v5 + 48) = v12;
  *(_QWORD *)(v5 + 56) = v8;
  v6 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F52E6F8(v6);
}

uint64_t sub_23F52E12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F52E874();
  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 296);
  sub_23F384274(*(_QWORD *)(v0 + 272));
  sub_23F3663AC(v3, (uint64_t (*)(_QWORD))_s10ModelInputVMa);
  sub_23F3663AC(v2, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F52E584(*(_QWORD *)(v0 + 728));
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F38409C();
  sub_23F41C50C();
  return sub_23F441150(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F52E204(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 136) = v5;
  *v5 = v2;
  v5[1] = sub_23F52E26C;
  return sub_23F52C55C(v2 + 16, a1, a2);
}

uint64_t sub_23F52E26C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  __int128 v5;

  sub_23F3B1998();
  v2 = *v1;
  *v3 = v2;
  v5 = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v4 + 152) = *(_OWORD *)(v4 + 16);
  *(_QWORD *)(v4 + 144) = v0;
  *(_OWORD *)(v4 + 168) = v5;
  *(_OWORD *)(v4 + 184) = *(_OWORD *)(v4 + 48);
  *(_QWORD *)(v4 + 200) = *(_QWORD *)(v4 + 64);
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F52E2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 168);
  if (!v1)
    goto LABEL_8;
  v2 = *(_QWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 96) = v1;
  v3 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 120) = v3;
  v4 = sub_23F4850B4();
  v6 = v5;
  v8 = v7;
  v9 = *(_QWORD *)(v0 + 160);
  v10 = *(_QWORD *)(v0 + 168);
  v11 = *(_QWORD *)(v0 + 152);
  if (v2)
  {
    sub_23F52E4B4(v11, v9, v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_23F52E4B4(v11, v9, v10);
  if (v8 - 1 < 2)
    goto LABEL_8;
  if (v8)
  {
    sub_23F52E510(v4, v6, 3);
LABEL_8:
    v4 = 0;
    v13 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v13);
  }
  v13 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v13);
}

uint64_t sub_23F52E3C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = v2[6];
  v10 = v2[7];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_23F52E46C;
  return sub_23F52A914(a1, a2, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23F52E46C()
{
  uint64_t v0;

  sub_23F3B1998();
  sub_23F3E0168();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F52E498(uint64_t a1)
{
  return sub_23F52C434(a1);
}

uint64_t sub_23F52E4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F52E510(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 3)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_23F52E528(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23F362BC4(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  sub_23F362928();
}

uint64_t sub_23F52E55C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_23F5E8EF0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_23F52E584@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 - 80) = a1;
  v3 = *(_QWORD *)(v1 + 232);
  *(_QWORD *)(v2 - 96) = *(_QWORD *)(v1 + 256);
  *(_QWORD *)(v2 - 88) = v3;
  return swift_task_dealloc();
}

void sub_23F52E608()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[44];
  *(_QWORD *)(v1 - 112) = v0[45];
  *(_QWORD *)(v1 - 104) = v2;
  v3 = v0[40];
  *(_QWORD *)(v1 - 96) = v0[41];
  *(_QWORD *)(v1 - 88) = v3;
}

void sub_23F52E680(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F37AE00(0xD000000000000075, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 104));
}

void sub_23F52E698(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_23F37AE00(0xD000000000000075, a2, a3);
}

uint64_t sub_23F52E6A4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F52E6C0()
{
  return sub_23F6190E8();
}

uint64_t sub_23F52E6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(a1, a2);
}

uint64_t sub_23F52E6D8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v18 + 720) = a1;
  *a1 = v18;
  a1[1] = v17;
  return a17;
}

uint64_t sub_23F52E6F8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F52E724()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F35EA9C(v2, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
}

_QWORD *sub_23F52E74C()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_23F35EA9C(v0, v1);
}

uint64_t sub_23F52E758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v0, v3, v2);
}

BOOL sub_23F52E788(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F52E798()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 128))();
}

uint64_t sub_23F52E7A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v2, v1);
}

_QWORD *sub_23F52E7CC@<X0>(uint64_t a1@<X8>)
{
  return sub_23F35EA9C((_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 80));
}

uint64_t sub_23F52E7DC()
{
  return sub_23F61C790();
}

uint64_t sub_23F52E7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v3, a2, v4);
}

uint64_t sub_23F52E7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t))
{
  uint64_t v27;
  uint64_t v28;

  return a27(v27, v28);
}

uint64_t sub_23F52E804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 112));
}

void sub_23F52E82C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

unint64_t sub_23F52E83C()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
  return sub_23F5EF1D0();
}

uint64_t sub_23F52E84C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 256);
}

void sub_23F52E85C()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2048;
}

uint64_t sub_23F52E890()
{
  return sub_23F619100();
}

uint64_t sub_23F52E89C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F52E8A8()
{
  return sub_23F616FF4();
}

uint64_t sub_23F52E8B0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

__n128 sub_23F52E8BC@<Q0>(__n128 *a1@<X8>, __n128 a2, uint64_t a3, unint64_t a4)
{
  __n128 result;

  result = a2;
  *a1 = a2;
  a1[1].n128_u64[0] = a4;
  return result;
}

uint64_t sub_23F52E8D0()
{
  return swift_task_dealloc();
}

void sub_23F52E8D8()
{
  sub_23F50502C(2047);
}

uint64_t sub_23F52E8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_23F52E8EC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

BOOL sub_23F52E8F8()
{
  NSObject *v0;
  os_log_type_t v1;

  return os_log_type_enabled(v0, v1);
}

uint64_t sub_23F52E904()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F52E924()
{
  return sub_23F618C20();
}

_QWORD *sub_23F52E92C()
{
  uint64_t v0;
  _QWORD *result;

  type metadata accessor for QueryDecorationCache(0);
  v0 = swift_allocObject();
  result = sub_23F52FC78();
  qword_256E80368 = v0;
  return result;
}

void sub_23F52E968(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(_QWORD);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  double v77;
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  os_log_t v82;
  uint64_t v83;
  void *v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97[3];
  uint64_t v98[4];

  v6 = v2;
  v94 = a2;
  v90 = a1;
  v7 = sub_23F616FC4();
  v92 = *(_QWORD *)(v7 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v91 = v9;
  sub_23F35D2E8(&qword_256E6FF90);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3B1F34();
  sub_23F35D2E8(&qword_256E79778);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3B1590();
  v88 = sub_23F35D2E8(&qword_256E6FF78);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v87 = v13;
  v14 = sub_23F5347FC();
  sub_23F3834C0();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3838E4();
  v86 = v19;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F3838E4();
  v89 = v21;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v78 - v23;
  v93 = sub_23F3B1728();
  MEMORY[0x24BDAC7A8](v93);
  sub_23F389880();
  v26 = MEMORY[0x24BDAC7A8](v25);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)v78 - v29;
  v31 = *(_QWORD *)(v6 + 120);
  if (v31 < 1)
  {
    v46 = v28;
    sub_23F6190E8();
    swift_retain();
    sub_23F619E8C();
    v47 = sub_23F3B1A04();
    if (sub_23F49BA04(v47))
    {
      v48 = sub_23F366668();
      v49 = sub_23F366668();
      v98[0] = v49;
      *(_DWORD *)v48 = 136315394;
      sub_23F53463C(v49, v50, v98);
      v97[0] = v51;
      sub_23F61C790();
      *(_WORD *)(v48 + 12) = 2048;
      v97[0] = v31;
      sub_23F61C790();
      swift_release();
      sub_23F5346EC(&dword_23F35A000, v52, v53, "%s Not using cache as cacheSize=%ld");
      swift_arrayDestroy();
      sub_23F366530();
    }

    swift_release();
    ((void (*)(void *, uint64_t))v46[1])(v4, v93);
  }
  else
  {
    v85 = (void (*)(char *, uint64_t))v28;
    v84 = v27;
    v32 = v6 + 112;
    sub_23F3B1450();
    if ((unint64_t)v31 <= *(_QWORD *)(*(_QWORD *)(v6 + 112) + 16))
    {
      v81 = v5;
      sub_23F52E6C0();
      sub_23F362600(v94, (uint64_t)v24, type metadata accessor for QueryDecorationCacheKey);
      swift_retain();
      v33 = sub_23F619E8C();
      v34 = sub_23F61C61C();
      v82 = v33;
      v35 = v33;
      v36 = v34;
      v37 = os_log_type_enabled(v35, v34);
      v83 = v7;
      if (v37)
      {
        v38 = sub_23F366668();
        v80 = v6;
        v39 = v38;
        v40 = sub_23F366668();
        v78[2] = v40;
        v97[0] = v40;
        *(_DWORD *)v39 = 136315650;
        sub_23F53463C(v40, v41, v97);
        v96 = v42;
        v79 = v32;
        sub_23F5346C4();
        *(_WORD *)(v39 + 12) = 2048;
        v96 = v31;
        sub_23F61C790();
        swift_release();
        *(_WORD *)(v39 + 22) = 2080;
        v78[1] = v39 + 24;
        sub_23F382EF8((uint64_t)v24, v87, &qword_256E6FF78);
        v43 = sub_23F61C16C();
        sub_23F37AE00(v43, v44, v97);
        v96 = v45;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        sub_23F3663AC((uint64_t)v24, type metadata accessor for QueryDecorationCacheKey);
        _os_log_impl(&dword_23F35A000, v82, v36, "%s New entry would exceed cacheSize=%ld for key.query=%s", (uint8_t *)v39, 0x20u);
        sub_23F507364();
        sub_23F366530();
      }
      swift_release();
      sub_23F3663AC((uint64_t)v24, type metadata accessor for QueryDecorationCacheKey);

      v54 = (void (*)(char *, uint64_t))*((_QWORD *)v85 + 1);
      v54(v30, v93);
      v5 = v81;
      v55 = v6 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20QueryDecorationCache_keyLRU;
      sub_23F3B1450();
      sub_23F382EF8(v55, v3, &qword_256E79778);
      v56 = sub_23F36195C(v3, 1, v14);
      if ((_DWORD)v56 == 1)
      {
        sub_23F3B2238(v56, &qword_256E79778);
      }
      else
      {
        v57 = v89;
        sub_23F36262C(v3, v89, type metadata accessor for QueryDecorationCacheKey);
        sub_23F3B1450();
        sub_23F37E028();
        sub_23F3625D8(v5, &qword_256E6FF90);
        sub_23F534758();
        sub_23F3B1450();
        sub_23F37DF2C();
        sub_23F534758();
        v58 = v84;
        sub_23F6190E8();
        v59 = v86;
        sub_23F362600(v57, v86, type metadata accessor for QueryDecorationCacheKey);
        sub_23F619E8C();
        v60 = sub_23F3B1A04();
        if (sub_23F49BA04(v60))
        {
          v61 = v59;
          v62 = sub_23F366668();
          v63 = sub_23F366668();
          v82 = v63;
          v97[0] = (uint64_t)v63;
          *(_DWORD *)v62 = 136315394;
          v79 = v6 + 112;
          sub_23F53463C((uint64_t)v63, v64, v97);
          v95 = v65;
          v80 = v6;
          sub_23F61C790();
          *(_WORD *)(v62 + 12) = 2080;
          v85 = v54;
          sub_23F382EF8(v61, v87, &qword_256E6FF78);
          v66 = sub_23F61C16C();
          sub_23F37AE00(v66, v67, v97);
          v95 = v68;
          sub_23F61C790();
          swift_bridgeObjectRelease();
          sub_23F3663AC(v61, type metadata accessor for QueryDecorationCacheKey);
          sub_23F5346EC(&dword_23F35A000, v69, v70, "%s Removed LRU key: %s");
          sub_23F507364();
          sub_23F366530();
        }

        v71 = sub_23F53480C();
        sub_23F3663AC(v71, v72);
        v54((char *)v58, v93);
        sub_23F3663AC(v57, type metadata accessor for QueryDecorationCacheKey);
      }
    }
    sub_23F534760();
    sub_23F5347D4(v90, v73, type metadata accessor for QueryDecorationCacheValue);
    v74 = sub_23F534790();
    sub_23F5347C0(v5, 0, v75, v74);
    sub_23F3B1450();
    sub_23F372C80(v5);
    sub_23F534758();
    sub_23F534760();
    sub_23F616FB8();
    sub_23F616F7C();
    v77 = v76;
    sub_23F5347A0(*(uint64_t (**)(uint64_t, uint64_t))(v92 + 8));
    sub_23F3B1450();
    sub_23F37E3DC((uint64_t)v18, v77);
    sub_23F3663AC((uint64_t)v18, type metadata accessor for QueryDecorationCacheKey);
    sub_23F534758();
    sub_23F52F830();
  }
  sub_23F4A0EA4();
}

void sub_23F52F1B8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  os_log_type_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  double v63;
  _BYTE v64[4];
  int v65;
  uint64_t v66;
  NSObject *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77[3];
  uint64_t v78;

  v4 = v2;
  v76 = a2;
  v6 = sub_23F616FC4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F38F964();
  v10 = (_BYTE *)(v9 - v8);
  v70 = sub_23F5347FC();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v11);
  v68 = &v64[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3838E4();
  v69 = v14;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v15);
  v67 = &v64[-v16];
  v17 = sub_23F3B1728();
  v71 = *(_QWORD *)(v17 - 8);
  v72 = v17;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F36298C();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3838E4();
  v74 = v20;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v21);
  v75 = &v64[-v22];
  sub_23F35D2E8(&qword_256E6FF90);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F38F964();
  v26 = v25 - v24;
  v27 = sub_23F534790();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F38F964();
  v31 = v30 - v29;
  sub_23F3B1450();
  v32 = *(_QWORD *)(v4 + 112);
  sub_23F617BA0();
  sub_23F3688C4(a1, v32);
  sub_23F362D18();
  v73 = v27;
  if (sub_23F36195C(v26, 1, v27) == 1)
  {
    v67 = v3;
    v75 = (_BYTE *)v4;
    sub_23F3625D8(v26, &qword_256E6FF90);
    sub_23F52E6C0();
    v33 = (uint64_t)v68;
    sub_23F5347D4(a1, v34, type metadata accessor for QueryDecorationCacheKey);
    v35 = sub_23F619E8C();
    v36 = sub_23F61C61C();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = sub_23F366668();
      v77[0] = sub_23F366668();
      *(_DWORD *)v37 = 136315394;
      sub_23F534660();
      v78 = v38;
      sub_23F40B4A4();
      *(_WORD *)(v37 + 12) = 2080;
      sub_23F5347D4(v33, v39, type metadata accessor for QueryDecorationCacheKey);
      v40 = sub_23F61C16C();
      sub_23F37AE00(v40, v41, v77);
      v78 = v42;
      sub_23F40B4A4();
      swift_bridgeObjectRelease();
      sub_23F3663AC(v33, type metadata accessor for QueryDecorationCacheKey);
      sub_23F5347E8(&dword_23F35A000, v35, v36, "%s cache MISS for %s.");
      sub_23F507364();
      sub_23F366530();
    }
    sub_23F3663AC(v33, type metadata accessor for QueryDecorationCacheKey);

    sub_23F534714();
    v54 = v73;
    v55 = v70;
    if ((sub_23F52F9D4(*(_QWORD *)(a1 + *(int *)(v70 + 20)), *(_QWORD *)(a1 + *(int *)(v70 + 20) + 8)) & 1) != 0)
    {
      v56 = v67;
      sub_23F6190E8();
      sub_23F619E8C();
      v57 = sub_23F3B1A04();
      if (sub_23F49BA04(v57))
      {
        v58 = (uint8_t *)sub_23F366668();
        *(_WORD *)v58 = 0;
        _os_log_impl(&dword_23F35A000, v56, v55, "Handling new request. Clear cache completely.", v58, 2u);
        sub_23F366530();
      }

      ((void (*)(NSObject *, uint64_t))v35)(v56, v33);
      sub_23F52FAD0();
    }
    v59 = 1;
  }
  else
  {
    v68 = v10;
    v74 = v7;
    v66 = v6;
    sub_23F36262C(v26, v31, type metadata accessor for QueryDecorationCacheValue);
    sub_23F52E6C0();
    v43 = v67;
    sub_23F362600(a1, (uint64_t)v67, type metadata accessor for QueryDecorationCacheKey);
    swift_retain_n();
    v44 = sub_23F619E8C();
    v45 = sub_23F61C61C();
    v46 = v45;
    if (os_log_type_enabled(v44, v45))
    {
      v47 = sub_23F366668();
      v65 = v46;
      v48 = v47;
      v77[0] = sub_23F366668();
      *(_DWORD *)v48 = 136315650;
      sub_23F534660();
      v78 = v49;
      sub_23F5346C4();
      *(_WORD *)(v48 + 12) = 2080;
      sub_23F362600((uint64_t)v43, v69, type metadata accessor for QueryDecorationCacheKey);
      v50 = sub_23F61C16C();
      v70 = v31;
      sub_23F37AE00(v50, v51, v77);
      v78 = v52;
      sub_23F5346C4();
      swift_bridgeObjectRelease();
      sub_23F3663AC((uint64_t)v43, type metadata accessor for QueryDecorationCacheKey);
      *(_WORD *)(v48 + 22) = 2048;
      v53 = *(_QWORD *)(*(_QWORD *)(v4 + 112) + 16);
      sub_23F3668FC();
      v78 = v53;
      sub_23F5346C4();
      sub_23F3668FC();
      _os_log_impl(&dword_23F35A000, v44, (os_log_type_t)v65, "%s cache HIT for %s from cache size of %ld", (uint8_t *)v48, 0x20u);
      sub_23F507364();
      sub_23F366530();
    }
    swift_release();
    sub_23F3663AC((uint64_t)v43, type metadata accessor for QueryDecorationCacheKey);

    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v71 + 8))(v75, v72);
    v54 = v73;
    v60 = v69;
    v61 = v74;
    sub_23F362600(a1, v69, type metadata accessor for QueryDecorationCacheKey);
    sub_23F616FB8();
    sub_23F616F7C();
    v63 = v62;
    sub_23F5347A0(*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
    sub_23F3B1450();
    sub_23F37E3DC(v60, v63);
    sub_23F3663AC(v60, type metadata accessor for QueryDecorationCacheKey);
    swift_endAccess();
    sub_23F52F830();
    sub_23F36262C(v31, v76, type metadata accessor for QueryDecorationCacheValue);
    v59 = 0;
  }
  sub_23F36196C(v76, v59, 1, v54);
  sub_23F4A0EA4();
}

void sub_23F52F830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t DecorationCacheKey;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19[4];

  sub_23F35D2E8(&qword_256E79780);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F362930();
  sub_23F35D2E8(&qword_256E79778);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F4DC1DC();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19[-1] - v6;
  sub_23F3B1450();
  swift_bridgeObjectRetain_n();
  sub_23F471140();
  v9 = v8;
  swift_bridgeObjectRelease();
  v19[0] = v9;
  sub_23F53312C(v19);
  swift_bridgeObjectRelease();
  sub_23F3701DC(v19[0], v2);
  swift_release();
  v10 = sub_23F35D2E8(&qword_256E6FF50);
  if (sub_23F36195C(v2, 1, v10) == 1)
  {
    sub_23F3625D8(v2, &qword_256E79780);
    v11 = 1;
  }
  else
  {
    v12 = sub_23F3848C0();
    sub_23F36262C(v12, v13, v14);
    v11 = 0;
  }
  DecorationCacheKey = type metadata accessor for QueryDecorationCacheKey(0);
  sub_23F5347C0((uint64_t)v7, v11, v16, DecorationCacheKey);
  sub_23F383004((uint64_t)v7, v0, &qword_256E79778);
  v17 = v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20QueryDecorationCache_keyLRU;
  sub_23F3B1450();
  sub_23F3E2674(v0, v17, &qword_256E79778);
  swift_endAccess();
  sub_23F383488();
}

uint64_t sub_23F52F9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t DecorationCacheKey;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char v13;
  char v14;

  sub_23F35D2E8(&qword_256E79778);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3B1590();
  sub_23F3B1450();
  sub_23F370244(*(_QWORD *)(v2 + 112), v3);
  DecorationCacheKey = type metadata accessor for QueryDecorationCacheKey(0);
  v8 = sub_23F3E4510(v3);
  if (v12)
  {
    sub_23F3B2238(v8, &qword_256E79778);
LABEL_10:
    v14 = 0;
    return v14 & 1;
  }
  v9 = (uint64_t *)(v3 + *(int *)(DecorationCacheKey + 20));
  v11 = *v9;
  v10 = v9[1];
  sub_23F617BA0();
  sub_23F3663AC(v3, type metadata accessor for QueryDecorationCacheKey);
  v12 = v11 == a1 && v10 == a2;
  if (v12)
  {
    sub_23F362D18();
    goto LABEL_10;
  }
  sub_23F3848C0();
  v13 = sub_23F3C8510();
  swift_bridgeObjectRelease();
  v14 = v13 ^ 1;
  return v14 & 1;
}

void sub_23F52FAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t DecorationCacheKey;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F35D2E8(&qword_256E79778);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationCacheKey = type metadata accessor for QueryDecorationCacheKey(0);
  sub_23F534790();
  sub_23F3612C0(&qword_256E6FF80, type metadata accessor for QueryDecorationCacheKey, (uint64_t)&protocol conformance descriptor for QueryDecorationCacheKey);
  v5 = sub_23F61BFEC();
  sub_23F3B1450();
  *(_QWORD *)(v0 + 112) = v5;
  swift_bridgeObjectRelease();
  v6 = sub_23F61BFEC();
  sub_23F3B1450();
  *(_QWORD *)(v0 + 128) = v6;
  swift_bridgeObjectRelease();
  sub_23F36196C((uint64_t)v3, 1, 1, DecorationCacheKey);
  sub_23F3B1450();
  v7 = sub_23F53480C();
  sub_23F3E2674(v7, v8, &qword_256E79778);
  swift_endAccess();
  sub_23F383568();
}

uint64_t sub_23F52FC1C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F3625D8(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20QueryDecorationCache_keyLRU, &qword_256E79778);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_23F52FC60()
{
  sub_23F52FC1C();
  return swift_defaultActor_deallocate();
}

_QWORD *sub_23F52FC78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t DecorationCacheKey;
  uint64_t v4;
  uint64_t v6;

  swift_defaultActor_initialize();
  v1 = MEMORY[0x24BEE4B00];
  v0[14] = MEMORY[0x24BEE4B00];
  swift_getKeyPath();
  sub_23F617C9C();
  sub_23F3668FC();
  v0[15] = v6;
  v0[16] = v1;
  v2 = (uint64_t)v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime20QueryDecorationCache_keyLRU;
  DecorationCacheKey = type metadata accessor for QueryDecorationCacheKey(0);
  sub_23F5347C0(v2, 1, v4, DecorationCacheKey);
  return v0;
}

uint64_t sub_23F52FD00()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F52FD0C()
{
  return sub_23F52FD00();
}

uint64_t sub_23F52FD24(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_23F52FD40()
{
  uint64_t v0;

  sub_23F52E968(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F52FD6C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_23F52FD88()
{
  uint64_t v0;

  sub_23F52F1B8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F52FDB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v12)(uint64_t);

  v7[9] = a6;
  v7[10] = v6;
  v7[7] = a4;
  v7[8] = a5;
  v7[5] = a2;
  v7[6] = a3;
  v7[4] = a1;
  v8 = sub_23F3B1728();
  v7[11] = v8;
  v7[12] = *(_QWORD *)(v8 - 8);
  v7[13] = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FF90);
  v7[14] = sub_23F366578();
  v7[15] = sub_23F534790();
  v7[16] = sub_23F534798();
  v7[17] = sub_23F534798();
  v7[18] = sub_23F534798();
  v7[19] = sub_23F534798();
  v9 = (_QWORD *)sub_23F534700();
  v7[20] = v9;
  v10 = sub_23F5346D0(v9);
  return v12(v10);
}

uint64_t sub_23F52FE94()
{
  sub_23F3B1998();
  sub_23F3E0168();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F52FEC8()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t (*v21)(_QWORD);
  uint64_t v22;

  v1 = v0[14];
  if (sub_23F36195C(v1, 1, v0[15]) == 1)
  {
    v2 = (int *)v0[6];
    sub_23F3625D8(v1, &qword_256E6FF90);
    v21 = (uint64_t (*)(_QWORD))((char *)v2 + *v2);
    v3 = (_QWORD *)swift_task_alloc();
    v0[21] = v3;
    *v3 = v0;
    v3[1] = sub_23F530188;
    return v21(v0[16]);
  }
  else
  {
    v6 = v0[18];
    v5 = v0[19];
    sub_23F36262C(v1, v5, type metadata accessor for QueryDecorationCacheValue);
    sub_23F6190E8();
    sub_23F362600(v5, v6, type metadata accessor for QueryDecorationCacheValue);
    v7 = sub_23F619E8C();
    v8 = sub_23F61C610();
    v9 = os_log_type_enabled(v7, v8);
    v10 = v0[18];
    if (v9)
    {
      v11 = v0[17];
      v12 = sub_23F366668();
      v22 = sub_23F366668();
      *(_DWORD *)v12 = 136315394;
      sub_23F37AE00(0xD000000000000029, 0x800000023F638C60, &v22);
      v0[2] = v13;
      sub_23F40B4A4();
      *(_WORD *)(v12 + 12) = 2080;
      sub_23F362600(v10, v11, type metadata accessor for QueryDecorationCacheValue);
      v14 = sub_23F61C16C();
      sub_23F37AE00(v14, v15, &v22);
      v0[3] = v16;
      sub_23F40B4A4();
      swift_bridgeObjectRelease();
      sub_23F3663AC(v10, type metadata accessor for QueryDecorationCacheValue);
      sub_23F5347E8(&dword_23F35A000, v7, v8, "%s Cache hit. Returning cached output %s ");
      sub_23F507364();
      sub_23F366530();
    }
    v18 = v0[12];
    v17 = v0[13];
    v19 = v0[11];
    sub_23F3663AC(v0[18], type metadata accessor for QueryDecorationCacheValue);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    sub_23F36262C(v0[19], v0[4], type metadata accessor for QueryDecorationCacheValue);
    sub_23F534698();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    v20 = (uint64_t (*)(void))sub_23F384760();
    return v20();
  }
}

uint64_t sub_23F530188()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[22] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_23F36679C();
    return swift_task_switch();
  }
  else
  {
    v4 = (_QWORD *)sub_23F534700();
    v2[23] = v4;
    *v4 = v2;
    v4[1] = sub_23F53022C;
    return v5(v2[16], v2[5], v2[8], v2[9]);
  }
}

uint64_t sub_23F53022C()
{
  sub_23F3B1998();
  sub_23F3E0168();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F530260()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23F36262C(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 32), type metadata accessor for QueryDecorationCacheValue);
  sub_23F534698();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  v1 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F534684(v1);
}

uint64_t sub_23F5302B4()
{
  uint64_t v0;

  sub_23F534698();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return sub_23F534684(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5302F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v8[10] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F530350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v2;
  v3 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 48) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v4;
  *v4 = v0;
  v4[1] = sub_23F5303D4;
  return sub_23F52FDB4(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 24), (uint64_t)&unk_256E79768, v2, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_23F5303D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F53043C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v1 = *(_QWORD *)(v0 + 80);
  swift_getAtKeyPath();
  sub_23F3663AC(v1, type metadata accessor for QueryDecorationCacheValue);
  sub_23F362CC8();
  v2 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F362888(v2);
}

uint64_t sub_23F530484()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23F362CC8();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5304B4(uint64_t a1, int *a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v4[2] = a1;
  v4[3] = a4;
  v6 = *a4;
  v4[4] = *a4;
  sub_23F35D2E8(&qword_256E70F38);
  v4[5] = swift_task_alloc();
  v7 = *(_QWORD *)(*MEMORY[0x24BEE2B70] + v6 + 8);
  v4[6] = v7;
  v4[7] = *(_QWORD *)(v7 - 8);
  v4[8] = swift_task_alloc();
  v8 = swift_task_alloc();
  v4[9] = v8;
  v11 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v9 = (_QWORD *)swift_task_alloc();
  v4[10] = v9;
  *v9 = v4;
  v9[1] = sub_23F530594;
  return v11(v8);
}

uint64_t sub_23F530594()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F3B1998();
  *v2 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5305E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  v1 = v0[8];
  v2 = v0[9];
  v3 = v0[6];
  v4 = v0[7];
  v6 = v0[4];
  v5 = v0[5];
  v7 = (_QWORD *)v0[2];
  sub_23F619064();
  sub_23F44558C(v5);
  v8 = (uint64_t)v7 + *(int *)(*(_QWORD *)(v6 + *MEMORY[0x24BEE2B70]) + 28);
  sub_23F44558C(v8);
  v9 = MEMORY[0x24BEE4AF8];
  *v7 = MEMORY[0x24BEE4AF8];
  v7[1] = v9;
  v7[2] = v9;
  sub_23F3E2674(v5, v8, &qword_256E70F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  swift_setAtWritableKeyPath();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_23F3666C4();
  sub_23F3666DC();
  sub_23F362CC8();
  v10 = (uint64_t (*)(void))sub_23F384760();
  return v10();
}

uint64_t sub_23F5306D4()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23F362CC8();
  sub_23F3666DC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23F530714(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v7 = sub_23F61B4C4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F5346A8();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36298C();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v22 - v11);
  sub_23F35D2E8(&qword_256E6FF68);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F362838();
  v15 = (_QWORD *)(v2 + *(int *)(v14 + 48));
  sub_23F362600(a1, v2, type metadata accessor for QueryDecorationCacheKey.Input);
  sub_23F362600(a2, (uint64_t)v15, type metadata accessor for QueryDecorationCacheKey.Input);
  if (sub_23F5347F4() == 1)
  {
    sub_23F362600(v2, v4, type metadata accessor for QueryDecorationCacheKey.Input);
    if (sub_23F5347F4() == 1)
    {
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v8 + 32))(v3, v15, v7);
      sub_23F61B488();
      v16 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
      v16(v3, v7);
      v17 = v16(v4, v7);
      sub_23F3B1778(v17, type metadata accessor for QueryDecorationCacheKey.Input);
      goto LABEL_15;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
LABEL_7:
    sub_23F3625D8(v2, &qword_256E6FF68);
    goto LABEL_15;
  }
  sub_23F362600(v2, (uint64_t)v12, type metadata accessor for QueryDecorationCacheKey.Input);
  v19 = *v12;
  v18 = v12[1];
  if (sub_23F5347F4() == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v19 == *v15 && v18 == v15[1])
  {
    v21 = swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_23F53480C();
    sub_23F3C8510();
    swift_bridgeObjectRelease();
    v21 = swift_bridgeObjectRelease();
  }
  sub_23F3B1778(v21, type metadata accessor for QueryDecorationCacheKey.Input);
LABEL_15:
  sub_23F362948();
}

void sub_23F530928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);

  v2 = sub_23F61B4C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F5346A8();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B17A4();
  v5 = sub_23F3848C0();
  sub_23F362600(v5, v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v0, v1, v2);
    sub_23F61CD3C();
    sub_23F3612C0(&qword_256E79788, (uint64_t (*)(uint64_t))MEMORY[0x24BE56FD0], MEMORY[0x24BE56FE8]);
    sub_23F61C04C();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
  }
  else
  {
    sub_23F61CD3C();
    sub_23F61C22C();
    swift_bridgeObjectRelease();
  }
  sub_23F383568();
}

uint64_t sub_23F530A3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726575516C6F6F74 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F530B2C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726575516C6F6F74;
  else
    return 0x7972657571;
}

uint64_t sub_23F530B64(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F3C8510();
    sub_23F362D18();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_23F530BC8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = sub_23F35D2E8(&qword_256E79738);
  v17 = *(_QWORD *)(v19 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v16 = v6;
  v18 = sub_23F61B4C4();
  v15 = *(_QWORD *)(v18 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v14 = v8;
  v9 = sub_23F35D2E8(&qword_256E79740);
  v13 = *(_QWORD *)(v9 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F362838();
  type metadata accessor for QueryDecorationCacheKey.Input(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F362930();
  v21 = sub_23F35D2E8(&qword_256E79748);
  v12 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  sub_23F3B1F34();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5330F0();
  sub_23F61CD90();
  sub_23F362600(v20, v2, type metadata accessor for QueryDecorationCacheKey.Input);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v2, v18);
    sub_23F5347DC();
    sub_23F5347C8();
    sub_23F3612C0(&qword_256E79750, (uint64_t (*)(uint64_t))MEMORY[0x24BE56FD0], MEMORY[0x24BE56FE0]);
    sub_23F61CBE0();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v19);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v18);
  }
  else
  {
    sub_23F534194();
    sub_23F5347C8();
    sub_23F61CBB0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v9);
  }
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v3, v21);
  sub_23F362870();
}

void sub_23F530E6C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t DecorationCache;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char v60;

  v50 = a2;
  v5 = sub_23F35D2E8(&qword_256E79700);
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v56 = v7;
  v8 = sub_23F35D2E8(&qword_256E79708);
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v55 = v10;
  v11 = sub_23F35D2E8(&qword_256E79710);
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F362930();
  DecorationCache = type metadata accessor for QueryDecorationCacheKey.Input(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F4DC1DC();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (uint64_t *)((char *)&v46 - v17);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v46 - v19;
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5330F0();
  v21 = v59;
  sub_23F61CD84();
  if (v21)
    goto LABEL_8;
  v46 = v18;
  v47 = v2;
  v48 = v20;
  v49 = DecorationCache;
  v59 = a1;
  v22 = v58;
  v23 = sub_23F61CB5C();
  v24 = *(_QWORD *)(v23 + 16);
  if (!v24)
  {
LABEL_7:
    v31 = v57;
    v32 = v49;
    v33 = sub_23F61C928();
    swift_allocError();
    v35 = v34;
    sub_23F35D2E8(&qword_256E6F538);
    *v35 = v32;
    sub_23F61CAD8();
    sub_23F61C91C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, *MEMORY[0x24BEE26D0], v33);
    swift_willThrow();
    sub_23F3ECBC8();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v3, v22);
    a1 = v59;
LABEL_8:
    v36 = (uint64_t)a1;
    goto LABEL_9;
  }
  v25 = *(_BYTE *)(v23 + 32);
  sub_23F362460(1, v24, v23, v23 + 32, 0, (2 * v24) | 1);
  v27 = v26;
  v29 = v28;
  swift_bridgeObjectRelease();
  if (v27 != v29 >> 1)
  {
    v22 = v58;
    goto LABEL_7;
  }
  if ((v25 & 1) != 0)
  {
    sub_23F5347DC();
    sub_23F534770();
    v30 = (uint64_t)v48;
    sub_23F61B4C4();
    sub_23F3612C0(&qword_256E79728, (uint64_t (*)(uint64_t))MEMORY[0x24BE56FD0], MEMORY[0x24BE56FF0]);
    v37 = v47;
    sub_23F61CB44();
    sub_23F53473C();
    sub_23F3ECBC8();
    v38 = sub_23F3848C0();
    v39(v38);
    swift_storeEnumTagMultiPayload();
    v40 = v37;
    v41 = v50;
  }
  else
  {
    v60 = 0;
    sub_23F534194();
    sub_23F534770();
    v42 = sub_23F61CB14();
    v44 = v43;
    sub_23F534728();
    sub_23F3ECBC8();
    sub_23F534780();
    v45 = v46;
    *v46 = v42;
    v45[1] = v44;
    swift_storeEnumTagMultiPayload();
    v40 = (uint64_t)v45;
    v41 = v50;
    v30 = (uint64_t)v48;
  }
  sub_23F36262C(v40, v30, type metadata accessor for QueryDecorationCacheKey.Input);
  sub_23F36262C(v30, v41, type metadata accessor for QueryDecorationCacheKey.Input);
  v36 = (uint64_t)v59;
LABEL_9:
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v36);
  sub_23F362870();
}

uint64_t sub_23F5312C8()
{
  char *v0;

  return sub_23F530B2C(*v0);
}

uint64_t sub_23F5312D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F530A3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F5312F4()
{
  sub_23F5330F0();
  return sub_23F61CDC0();
}

uint64_t sub_23F53131C()
{
  sub_23F5330F0();
  return sub_23F61CDCC();
}

uint64_t sub_23F531344()
{
  sub_23F534194();
  return sub_23F61CDC0();
}

uint64_t sub_23F53136C()
{
  sub_23F534194();
  return sub_23F61CDCC();
}

uint64_t sub_23F531394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F530B64(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F5313BC()
{
  sub_23F534158();
  return sub_23F61CDC0();
}

uint64_t sub_23F5313E4()
{
  sub_23F534158();
  return sub_23F61CDCC();
}

void sub_23F531410(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23F530E6C(a1, a2);
}

void sub_23F531424(_QWORD *a1)
{
  sub_23F530BC8(a1);
}

void sub_23F531438()
{
  sub_23F5318C8((void (*)(_BYTE *))sub_23F530928);
}

void sub_23F531458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F531908(a1, a2, a3, (void (*)(_BYTE *))sub_23F530928);
}

void QueryDecorationCacheKey.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t DecorationCache;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t DecorationCacheKey;

  v2 = v0;
  DecorationCache = type metadata accessor for QueryDecorationCacheKey.Input(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B17A4();
  sub_23F35D2E8(&qword_256E6FF78);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  v8 = v7 - v6;
  v9 = sub_23F53480C();
  sub_23F382EF8(v9, v10, &qword_256E6FF78);
  if (sub_23F36195C(v8, 1, DecorationCache) == 1)
  {
    sub_23F4E4D40();
  }
  else
  {
    sub_23F36262C(v8, v1, type metadata accessor for QueryDecorationCacheKey.Input);
    sub_23F4E4D40();
    sub_23F530928();
    sub_23F3663AC(v1, type metadata accessor for QueryDecorationCacheKey.Input);
  }
  DecorationCacheKey = type metadata accessor for QueryDecorationCacheKey(0);
  sub_23F617BA0();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F534804();
  sub_23F3612C0(&qword_256E79390, (uint64_t (*)(uint64_t))MEMORY[0x24BE57DB8], MEMORY[0x24BE57DC8]);
  sub_23F61C04C();
  if (*(_QWORD *)(v2 + *(int *)(DecorationCacheKey + 28) + 8))
  {
    sub_23F4E4D40();
    sub_23F617BA0();
    sub_23F61C22C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F4E4D40();
  }
  sub_23F383488();
}

uint64_t type metadata accessor for QueryDecorationCacheKey.Input(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E796B0);
}

uint64_t type metadata accessor for QueryDecorationCacheKey(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E79558);
}

void static QueryDecorationCacheKey.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;

  type metadata accessor for QueryDecorationCacheKey.Input(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F362930();
  v8 = sub_23F35D2E8(&qword_256E6FF70);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3B1590();
  sub_23F35D2E8(&qword_256E6FF78);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F389880();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v36 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v36 - v15;
  sub_23F534750(a1, (uint64_t)&v36 - v15);
  sub_23F534750(a2, (uint64_t)v14);
  v17 = v2 + *(int *)(v8 + 48);
  sub_23F534750((uint64_t)v16, v2);
  sub_23F534750((uint64_t)v14, v17);
  sub_23F3E4510(v2);
  if (!v19)
  {
    sub_23F382EF8(v2, v4, &qword_256E6FF78);
    sub_23F3E4510(v17);
    if (!v19)
    {
      sub_23F36262C(v17, v3, type metadata accessor for QueryDecorationCacheKey.Input);
      sub_23F530714(v4, v3);
      v21 = v20;
      v22 = sub_23F3848C0();
      sub_23F3663AC(v22, v23);
      sub_23F383838((uint64_t)v14);
      sub_23F383838((uint64_t)v16);
      sub_23F3663AC(v4, type metadata accessor for QueryDecorationCacheKey.Input);
      sub_23F383838(v2);
      if ((v21 & 1) == 0)
        goto LABEL_24;
      goto LABEL_11;
    }
    sub_23F3625D8((uint64_t)v14, &qword_256E6FF78);
    sub_23F3625D8((uint64_t)v16, &qword_256E6FF78);
    sub_23F3663AC(v4, type metadata accessor for QueryDecorationCacheKey.Input);
LABEL_9:
    sub_23F3B2238(v18, &qword_256E6FF70);
    goto LABEL_24;
  }
  sub_23F383838((uint64_t)v14);
  sub_23F383838((uint64_t)v16);
  v18 = sub_23F3E4510(v17);
  if (!v19)
    goto LABEL_9;
  sub_23F3B2238(v18, &qword_256E6FF78);
LABEL_11:
  v24 = sub_23F5347FC();
  v25 = *(int *)(v24 + 20);
  v26 = *(_QWORD *)(a1 + v25);
  v27 = *(_QWORD *)(a1 + v25 + 8);
  v28 = (_QWORD *)(a2 + v25);
  v29 = v26 == *v28 && v27 == v28[1];
  if ((v29 || (sub_23F3C8510() & 1) != 0) && (sub_23F618BFC() & 1) != 0)
  {
    v30 = *(int *)(v24 + 28);
    v31 = (_QWORD *)(a1 + v30);
    v32 = *(_QWORD *)(a1 + v30 + 8);
    v33 = (_QWORD *)(a2 + v30);
    v34 = v33[1];
    if (v32)
    {
      if (v34)
      {
        if (*v31 != *v33 || v32 != v34)
          sub_23F3C8510();
      }
    }
  }
LABEL_24:
  sub_23F362948();
}

void QueryDecorationCacheKey.hashValue.getter()
{
  sub_23F5318C8((void (*)(_BYTE *))QueryDecorationCacheKey.hash(into:));
}

void sub_23F5318C8(void (*a1)(_BYTE *))
{
  _BYTE v2[72];

  sub_23F362CB0();
  a1(v2);
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F5318FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F531908(a1, a2, a3, (void (*)(_BYTE *))QueryDecorationCacheKey.hash(into:));
}

void sub_23F531908(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v5[72];

  sub_23F61CD30();
  a4(v5);
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F531938()
{
  sub_23F3612C0(&qword_256E79398, type metadata accessor for QueryDecorationCacheKey, (uint64_t)&protocol conformance descriptor for QueryDecorationCacheKey);
}

uint64_t dispatch thunk of QueryDecorationCaching.put(_:forKey:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  sub_23F5347AC();
  v5 = (_QWORD *)sub_23F3629C0();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23F534634;
  return v7(v4, v3, v1, v0);
}

uint64_t dispatch thunk of QueryDecorationCaching.get(forKey:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  sub_23F5347AC();
  v1 = (_QWORD *)sub_23F3629C0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F5346D0(v1);
  return v4(v2);
}

uint64_t sub_23F531A28()
{
  uint64_t v0;

  sub_23F3E0168();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F531A5C()
{
  return type metadata accessor for QueryDecorationCache(0);
}

uint64_t type metadata accessor for QueryDecorationCache(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E793E0);
}

void sub_23F531A78()
{
  unint64_t v0;

  sub_23F4AED90(319, qword_256E793F0, (void (*)(uint64_t))type metadata accessor for QueryDecorationCacheKey);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t *initializeBufferWithCopyOfBuffer for QueryDecorationCacheKey(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t DecorationCache;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    DecorationCache = type metadata accessor for QueryDecorationCacheKey.Input(0);
    if (sub_23F36195C((uint64_t)a2, 1, DecorationCache))
    {
      v8 = sub_23F35D2E8(&qword_256E6FF78);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v10 = sub_23F61B4C4();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      }
      else
      {
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        sub_23F617BA0();
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C((uint64_t)a1, 0, 1, DecorationCache);
    }
    v12 = a3[5];
    v13 = a3[6];
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    v19 = sub_23F619004();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    sub_23F617BA0();
    v20(v17, v18, v19);
    v21 = a3[7];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    sub_23F617BA0();
  }
  return a1;
}

uint64_t destroy for QueryDecorationCacheKey(uint64_t a1, uint64_t a2)
{
  uint64_t DecorationCache;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  DecorationCache = type metadata accessor for QueryDecorationCacheKey.Input(0);
  if (!sub_23F36195C(a1, 1, DecorationCache))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_23F61B4C4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_23F619004();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for QueryDecorationCacheKey(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t DecorationCache;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  DecorationCache = type metadata accessor for QueryDecorationCacheKey.Input(0);
  if (sub_23F36195C((uint64_t)a2, 1, DecorationCache))
  {
    v7 = sub_23F35D2E8(&qword_256E6FF78);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_23F61B4C4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      sub_23F617BA0();
    }
    swift_storeEnumTagMultiPayload();
    sub_23F36196C((uint64_t)a1, 0, 1, DecorationCache);
  }
  v10 = a3[5];
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v10);
  v13 = (_QWORD *)((char *)a2 + v10);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = (char *)a1 + v11;
  v16 = (char *)a2 + v11;
  v17 = sub_23F619004();
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  sub_23F617BA0();
  v18(v15, v16, v17);
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  sub_23F617BA0();
  return a1;
}

_QWORD *assignWithCopy for QueryDecorationCacheKey(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t DecorationCache;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  DecorationCache = type metadata accessor for QueryDecorationCacheKey.Input(0);
  v7 = sub_23F36195C((uint64_t)a1, 1, DecorationCache);
  v8 = sub_23F36195C((uint64_t)a2, 1, DecorationCache);
  if (v7)
  {
    if (!v8)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v9 = sub_23F61B4C4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        sub_23F617BA0();
      }
      swift_storeEnumTagMultiPayload();
      sub_23F36196C((uint64_t)a1, 0, 1, DecorationCache);
      goto LABEL_15;
    }
LABEL_7:
    v10 = sub_23F35D2E8(&qword_256E6FF78);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for QueryDecorationCacheKey.Input);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for QueryDecorationCacheKey.Input);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_23F61B4C4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_23F617BA0();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v12 = a3[5];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23F619004();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for QueryDecorationCacheKey(char *a1, char *a2, int *a3)
{
  uint64_t DecorationCache;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  DecorationCache = type metadata accessor for QueryDecorationCacheKey.Input(0);
  if (sub_23F36195C((uint64_t)a2, 1, DecorationCache))
  {
    v7 = sub_23F35D2E8(&qword_256E6FF78);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_23F61B4C4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(DecorationCache - 8) + 64));
    }
    sub_23F36196C((uint64_t)a1, 0, 1, DecorationCache);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23F619004();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for QueryDecorationCacheKey(char *a1, char *a2, int *a3)
{
  uint64_t DecorationCache;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  DecorationCache = type metadata accessor for QueryDecorationCacheKey.Input(0);
  v7 = sub_23F36195C((uint64_t)a1, 1, DecorationCache);
  v8 = sub_23F36195C((uint64_t)a2, 1, DecorationCache);
  if (!v7)
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_23F3663AC((uint64_t)a1, type metadata accessor for QueryDecorationCacheKey.Input);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v11 = sub_23F61B4C4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v10 = *(_QWORD *)(DecorationCache - 8);
      goto LABEL_8;
    }
    sub_23F3663AC((uint64_t)a1, type metadata accessor for QueryDecorationCacheKey.Input);
LABEL_7:
    v10 = *(_QWORD *)(sub_23F35D2E8(&qword_256E6FF78) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v10 + 64));
    goto LABEL_14;
  }
  if (v8)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_23F61B4C4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(DecorationCache - 8) + 64));
  }
  sub_23F36196C((uint64_t)a1, 0, 1, DecorationCache);
LABEL_14:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_23F619004();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  v21 = a3[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryDecorationCacheKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F532404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F35D2E8(&qword_256E6FF78);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    if ((_DWORD)a2 == 0x7FFFFFFF)
    {
      sub_23F362B80();
      return;
    }
    v7 = sub_23F534804();
    v8 = a1 + *(int *)(a3 + 24);
  }
  sub_23F3B1A44(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for QueryDecorationCacheKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F5324A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_23F35D2E8(&qword_256E6FF78);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      sub_23F362B80();
      return;
    }
    v9 = sub_23F534804();
    v10 = a1 + *(int *)(a4 + 24);
  }
  sub_23F38370C(v10, a2, a2, v9);
}

void sub_23F53252C()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F4AED90(319, qword_256E79568, (void (*)(uint64_t))type metadata accessor for QueryDecorationCacheKey.Input);
  if (v0 <= 0x3F)
  {
    sub_23F619004();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for QueryDecorationCacheValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23F619064();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    if (sub_23F36195C((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F35D2E8(&qword_256E70F38);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      sub_23F36196C((uint64_t)v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t destroy for QueryDecorationCacheValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23F619064();
  result = sub_23F36195C(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for QueryDecorationCacheValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23F619064();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  if (sub_23F36195C((uint64_t)v7, 1, v8))
  {
    v9 = sub_23F35D2E8(&qword_256E70F38);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    sub_23F36196C((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for QueryDecorationCacheValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F619064();
  v10 = sub_23F36195C((uint64_t)v7, 1, v9);
  v11 = sub_23F36195C((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F35D2E8(&qword_256E70F38);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  sub_23F36196C((uint64_t)v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for QueryDecorationCacheValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_23F619064();
  if (sub_23F36195C((uint64_t)v6, 1, v7))
  {
    v8 = sub_23F35D2E8(&qword_256E70F38);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    sub_23F36196C((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for QueryDecorationCacheValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F619064();
  v10 = sub_23F36195C((uint64_t)v7, 1, v9);
  v11 = sub_23F36195C((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F35D2E8(&qword_256E70F38);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  sub_23F36196C((uint64_t)v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryDecorationCacheValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F532B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 2147483646)
  {
    sub_23F362B80();
  }
  else
  {
    v6 = sub_23F35D2E8(&qword_256E70F38);
    sub_23F3B1A44(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for QueryDecorationCacheValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F532BDC(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 2147483646)
  {
    *a1 = a2;
    sub_23F362B80();
  }
  else
  {
    v7 = sub_23F35D2E8(&qword_256E70F38);
    sub_23F38370C((uint64_t)a1 + *(int *)(a4 + 28), a2, a2, v7);
  }
}

uint64_t type metadata accessor for QueryDecorationCacheValue(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E795F8);
}

void sub_23F532C50()
{
  unint64_t v0;

  sub_23F4AED90(319, qword_256E79608, (void (*)(uint64_t))MEMORY[0x24BE57E10]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_23F532CD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23F61B4C4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      sub_23F617BA0();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F532D94(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = sub_23F61B4C4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *sub_23F532DE4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23F61B4C4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    sub_23F617BA0();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23F532E74(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for QueryDecorationCacheKey.Input);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_23F61B4C4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_23F617BA0();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23F532F24(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23F61B4C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_23F532FB0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for QueryDecorationCacheKey.Input);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23F61B4C4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23F533054()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B4C4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_23F5330C4()
{
  sub_23F3612C0(&qword_256E796E8, type metadata accessor for QueryDecorationCacheKey.Input, (uint64_t)&unk_23F62BFC0);
}

unint64_t sub_23F5330F0()
{
  unint64_t result;

  result = qword_256E79718;
  if (!qword_256E79718)
  {
    result = MEMORY[0x242670A44](&unk_23F62C34C, &type metadata for QueryDecorationCacheKey.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E79718);
  }
  return result;
}

void sub_23F53312C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_23F35D2E8(&qword_256E6FF50) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F3BCFC4();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_23F5331B0(v6);
  *a1 = v3;
}

void sub_23F5331B0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v137 = sub_23F35D2E8(&qword_256E6FF50);
  v3 = *(_QWORD *)(v137 - 8);
  v4 = MEMORY[0x24BDAC7A8](v137);
  v129 = (uint64_t)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v138 = (uint64_t)&v123 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v135 = (uint64_t)&v123 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v134 = (uint64_t)&v123 - v10;
  v11 = a1[1];
  v12 = sub_23F61CC04();
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_139;
    if (v11)
      sub_23F533B24(0, v11, 1, a1);
    return;
  }
  v13 = v12;
  v132 = v1;
  v136 = a1;
  sub_23F3880A4(v11 / 2);
  v124 = v14;
  v125 = v11;
  v130 = v15;
  v131 = v3;
  if (v11 <= 0)
    goto LABEL_102;
  v123 = v13;
  v16 = 0;
  v17 = (char *)MEMORY[0x24BEE4AF8];
  v18 = v11;
  while (1)
  {
    v19 = v16;
    v20 = v16 + 1;
    v127 = v17;
    if (v16 + 1 >= v18)
    {
      ++v16;
      v21 = v136;
      v37 = v132;
    }
    else
    {
      v21 = v136;
      v22 = *v136;
      v23 = *(_QWORD *)(v3 + 72);
      v24 = v134;
      sub_23F382EF8(*v136 + v23 * v20, v134, &qword_256E6FF50);
      v25 = v22 + v23 * v16;
      v26 = v135;
      sub_23F382EF8(v25, v135, &qword_256E6FF50);
      v27 = *(int *)(v137 + 48);
      v28 = *(double *)(v24 + v27);
      v29 = *(double *)(v26 + v27);
      sub_23F3625D8(v26, &qword_256E6FF50);
      sub_23F3625D8(v24, &qword_256E6FF50);
      v16 = v19 + 2;
      v126 = v22;
      v139 = v23;
      if (v19 + 2 >= v18)
      {
        v3 = v131;
      }
      else
      {
        v128 = v19;
        v133 = v23 * v20;
        v30 = v22;
        v31 = v23 * v16;
        while (1)
        {
          v32 = v18;
          v33 = v16;
          v34 = v134;
          sub_23F382EF8(v30 + v31, v134, &qword_256E6FF50);
          v35 = v135;
          sub_23F382EF8(v30 + v133, v135, &qword_256E6FF50);
          v36 = *(double *)(v34 + *(int *)(v137 + 48)) >= *(double *)(v35 + *(int *)(v137 + 48));
          sub_23F3625D8(v35, &qword_256E6FF50);
          sub_23F3625D8(v34, &qword_256E6FF50);
          if (v28 < v29 == v36)
            break;
          ++v16;
          v30 += v139;
          v18 = v32;
          if (v33 + 1 >= v32)
          {
            v16 = v32;
            v21 = v136;
            v3 = v131;
            v19 = v128;
            goto LABEL_13;
          }
        }
        v21 = v136;
        v3 = v131;
        v19 = v128;
        v18 = v32;
      }
LABEL_13:
      v37 = v132;
      if (v28 < v29)
      {
        if (v16 < v19)
          goto LABEL_140;
        if (v19 < v16)
        {
          v133 = v18;
          v38 = 0;
          v39 = v139 * (v16 - 1);
          v40 = v16 * v139;
          v41 = v19;
          v128 = v19;
          v42 = v19 * v139;
          v43 = v139;
          do
          {
            if (v41 != v16 + v38 - 1)
            {
              v44 = v126;
              if (!v126)
                goto LABEL_146;
              v45 = v126 + v42;
              v46 = v126 + v39;
              sub_23F383004(v126 + v42, v129, &qword_256E6FF50);
              if (v42 < v39 || v45 >= v44 + v40)
              {
                swift_arrayInitWithTakeFrontToBack();
                v43 = v139;
              }
              else
              {
                v43 = v139;
                if (v42 != v39)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_23F383004(v129, v46, &qword_256E6FF50);
              v21 = v136;
            }
            ++v41;
            --v38;
            v39 -= v43;
            v40 -= v43;
            v42 += v43;
          }
          while (v41 < v16 + v38);
          v3 = v131;
          v37 = v132;
          v18 = v133;
          v19 = v128;
        }
      }
    }
    if (v16 < v18)
    {
      if (__OFSUB__(v16, v19))
        goto LABEL_138;
      if (v16 - v19 < v123)
      {
        if (__OFADD__(v19, v123))
          goto LABEL_141;
        if (v19 + v123 >= v18)
          v48 = v18;
        else
          v48 = v19 + v123;
        if (v48 < v19)
        {
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (v16 != v48)
        {
          v49 = *(_QWORD *)(v3 + 72);
          v139 = v49 * (v16 - 1);
          v132 = v37;
          v133 = v49;
          v50 = v16 * v49;
          v128 = v19;
          v126 = v48;
          do
          {
            v51 = 0;
            v52 = v19;
            do
            {
              v53 = *v21;
              v54 = v134;
              sub_23F382EF8(v50 + v51 + *v21, v134, &qword_256E6FF50);
              v55 = v139 + v51 + v53;
              v56 = v135;
              sub_23F382EF8(v55, v135, &qword_256E6FF50);
              v57 = *(int *)(v137 + 48);
              v58 = *(double *)(v54 + v57);
              v59 = *(double *)(v56 + v57);
              sub_23F3625D8(v56, &qword_256E6FF50);
              sub_23F3625D8(v54, &qword_256E6FF50);
              if (v58 >= v59)
                break;
              v60 = *v21;
              if (!*v21)
                goto LABEL_144;
              v61 = v60 + v139 + v51;
              sub_23F383004(v60 + v50 + v51, v138, &qword_256E6FF50);
              swift_arrayInitWithTakeFrontToBack();
              sub_23F383004(v138, v61, &qword_256E6FF50);
              v51 -= v133;
              ++v52;
              v21 = v136;
            }
            while (v16 != v52);
            ++v16;
            v139 += v133;
            v50 += v133;
            v19 = v128;
          }
          while (v16 != v126);
          v16 = v126;
          v37 = v132;
        }
      }
    }
    if (v16 < v19)
      goto LABEL_137;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v17 = v127;
    else
      v17 = sub_23F3BC8F8(0, *((_QWORD *)v127 + 2) + 1, 1, v127);
    v63 = *((_QWORD *)v17 + 2);
    v62 = *((_QWORD *)v17 + 3);
    v64 = v63 + 1;
    if (v63 >= v62 >> 1)
      v17 = sub_23F3BC8F8((char *)(v62 > 1), v63 + 1, 1, v17);
    v132 = v37;
    *((_QWORD *)v17 + 2) = v64;
    v65 = v17 + 32;
    v66 = &v17[16 * v63 + 32];
    *(_QWORD *)v66 = v19;
    *((_QWORD *)v66 + 1) = v16;
    if (v63)
      break;
    v64 = 1;
LABEL_94:
    v18 = v136[1];
    v3 = v131;
    if (v16 >= v18)
      goto LABEL_103;
  }
  while (1)
  {
    v67 = v64 - 1;
    if (v64 >= 4)
    {
      v72 = &v65[16 * v64];
      v73 = *((_QWORD *)v72 - 8);
      v74 = *((_QWORD *)v72 - 7);
      v78 = __OFSUB__(v74, v73);
      v75 = v74 - v73;
      if (v78)
        goto LABEL_122;
      v77 = *((_QWORD *)v72 - 6);
      v76 = *((_QWORD *)v72 - 5);
      v78 = __OFSUB__(v76, v77);
      v70 = v76 - v77;
      v71 = v78;
      if (v78)
        goto LABEL_123;
      v79 = v64 - 2;
      v80 = &v65[16 * v64 - 32];
      v82 = *(_QWORD *)v80;
      v81 = *((_QWORD *)v80 + 1);
      v78 = __OFSUB__(v81, v82);
      v83 = v81 - v82;
      if (v78)
        goto LABEL_124;
      v78 = __OFADD__(v70, v83);
      v84 = v70 + v83;
      if (v78)
        goto LABEL_126;
      if (v84 >= v75)
      {
        v102 = &v65[16 * v67];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v78 = __OFSUB__(v103, v104);
        v105 = v103 - v104;
        if (v78)
          goto LABEL_132;
        v95 = v70 < v105;
        goto LABEL_83;
      }
    }
    else
    {
      if (v64 != 3)
      {
        v96 = *((_QWORD *)v17 + 4);
        v97 = *((_QWORD *)v17 + 5);
        v78 = __OFSUB__(v97, v96);
        v89 = v97 - v96;
        v90 = v78;
        goto LABEL_77;
      }
      v69 = *((_QWORD *)v17 + 4);
      v68 = *((_QWORD *)v17 + 5);
      v78 = __OFSUB__(v68, v69);
      v70 = v68 - v69;
      v71 = v78;
    }
    if ((v71 & 1) != 0)
      goto LABEL_125;
    v79 = v64 - 2;
    v85 = &v65[16 * v64 - 32];
    v87 = *(_QWORD *)v85;
    v86 = *((_QWORD *)v85 + 1);
    v88 = __OFSUB__(v86, v87);
    v89 = v86 - v87;
    v90 = v88;
    if (v88)
      goto LABEL_127;
    v91 = &v65[16 * v67];
    v93 = *(_QWORD *)v91;
    v92 = *((_QWORD *)v91 + 1);
    v78 = __OFSUB__(v92, v93);
    v94 = v92 - v93;
    if (v78)
      goto LABEL_129;
    if (__OFADD__(v89, v94))
      goto LABEL_131;
    if (v89 + v94 >= v70)
    {
      v95 = v70 < v94;
LABEL_83:
      if (v95)
        v67 = v79;
      goto LABEL_85;
    }
LABEL_77:
    if ((v90 & 1) != 0)
      goto LABEL_128;
    v98 = &v65[16 * v67];
    v100 = *(_QWORD *)v98;
    v99 = *((_QWORD *)v98 + 1);
    v78 = __OFSUB__(v99, v100);
    v101 = v99 - v100;
    if (v78)
      goto LABEL_130;
    if (v101 < v89)
      goto LABEL_94;
LABEL_85:
    v106 = v16;
    v107 = v67 - 1;
    if (v67 - 1 >= v64)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if (!*v136)
      goto LABEL_145;
    v108 = v17;
    v109 = &v65[16 * v107];
    v110 = *(_QWORD *)v109;
    v111 = &v65[16 * v67];
    v112 = *((_QWORD *)v111 + 1);
    v113 = v132;
    sub_23F533D50(*v136 + *(_QWORD *)(v131 + 72) * *(_QWORD *)v109, *v136 + *(_QWORD *)(v131 + 72) * *(_QWORD *)v111, *v136 + *(_QWORD *)(v131 + 72) * v112, v130);
    v132 = v113;
    if (v113)
      break;
    if (v112 < v110)
      goto LABEL_119;
    if (v67 > *((_QWORD *)v108 + 2))
      goto LABEL_120;
    *(_QWORD *)v109 = v110;
    *(_QWORD *)&v65[16 * v107 + 8] = v112;
    v114 = *((_QWORD *)v108 + 2);
    if (v67 >= v114)
      goto LABEL_121;
    v64 = v114 - 1;
    memmove(&v65[16 * v67], v111 + 16, 16 * (v114 - 1 - v67));
    v17 = v108;
    *((_QWORD *)v108 + 2) = v114 - 1;
    v95 = v114 > 2;
    v16 = v106;
    if (!v95)
      goto LABEL_94;
  }
LABEL_100:
  swift_bridgeObjectRelease();
  if (v125 >= -1)
    goto LABEL_115;
  __break(1u);
LABEL_102:
  v17 = (char *)MEMORY[0x24BEE4AF8];
  v64 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_103:
  if (v64 >= 2)
  {
    v115 = *v136;
    v116 = v132;
    while (1)
    {
      v117 = v64 - 2;
      if (v64 < 2)
        break;
      if (!v115)
        goto LABEL_147;
      v118 = v17;
      v119 = *(_QWORD *)&v17[16 * v117 + 32];
      v120 = *(_QWORD *)&v17[16 * v64 + 24];
      sub_23F533D50(v115 + *(_QWORD *)(v131 + 72) * v119, v115 + *(_QWORD *)(v131 + 72) * *(_QWORD *)&v17[16 * v64 + 16], v115 + *(_QWORD *)(v131 + 72) * v120, v130);
      if (v116)
        goto LABEL_100;
      if (v120 < v119)
        goto LABEL_134;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v118 = sub_23F3BC9E8();
      if (v117 >= *((_QWORD *)v118 + 2))
        goto LABEL_135;
      v121 = &v118[16 * v117 + 32];
      *(_QWORD *)v121 = v119;
      *((_QWORD *)v121 + 1) = v120;
      v122 = *((_QWORD *)v118 + 2);
      if (v64 > v122)
        goto LABEL_136;
      memmove(&v118[16 * v64 + 16], &v118[16 * v64 + 32], 16 * (v122 - v64));
      v17 = v118;
      *((_QWORD *)v118 + 2) = v122 - 1;
      v64 = v122 - 1;
      if (v122 <= 2)
        goto LABEL_114;
    }
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
LABEL_114:
  swift_bridgeObjectRelease();
  if (v125 >= -1)
  {
LABEL_115:
    *(_QWORD *)(v124 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
}

void sub_23F533B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27 = a1;
  v31 = sub_23F35D2E8(&qword_256E6FF50);
  v7 = MEMORY[0x24BDAC7A8](v31);
  v32 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v28 = (uint64_t)&v25 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - v12;
  v30 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v14 = *(_QWORD *)(v11 + 72);
    v34 = v14 * (v30 - 1);
    v29 = v14;
    v33 = v14 * v30;
    while (2)
    {
      v15 = 0;
      v16 = v27;
      do
      {
        v17 = *a4;
        sub_23F382EF8(v33 + v15 + *a4, (uint64_t)v13, &qword_256E6FF50);
        v18 = v34 + v15 + v17;
        v19 = v28;
        sub_23F382EF8(v18, v28, &qword_256E6FF50);
        v20 = *(int *)(v31 + 48);
        v21 = *(double *)&v13[v20];
        v22 = *(double *)(v19 + v20);
        sub_23F3625D8(v19, &qword_256E6FF50);
        sub_23F3625D8((uint64_t)v13, &qword_256E6FF50);
        if (v21 >= v22)
          break;
        v23 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v24 = v23 + v34 + v15;
        sub_23F383004(v23 + v33 + v15, v32, &qword_256E6FF50);
        swift_arrayInitWithTakeFrontToBack();
        sub_23F383004(v32, v24, &qword_256E6FF50);
        v15 -= v29;
        ++v16;
      }
      while (v30 != v16);
      v34 += v29;
      v33 += v29;
      if (++v30 != v26)
        continue;
      break;
    }
  }
}

void sub_23F533D50(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  unint64_t v28;
  unint64_t v30;
  BOOL v32;
  unint64_t v33;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  uint64_t v47;
  unint64_t v50;
  int64_t v52;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v59 = a3;
  v61 = sub_23F35D2E8(&qword_256E6FF50);
  v7 = MEMORY[0x24BDAC7A8](v61);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v54 - v10;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_76;
  v16 = v59 - a2;
  if (v59 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_77;
  v58 = a4;
  v18 = v14 / v13;
  v19 = v16 / v13;
  v20 = v13;
  v60 = v13;
  if (v14 / v13 >= v16 / v13)
  {
    v33 = v58;
    sub_23F37ABD4(a2, v16 / v13);
    v22 = v33 + v19 * v20;
    if (v19 * v20 < 1 || a1 >= a2)
    {
      v21 = v33;
      goto LABEL_70;
    }
    v56 = -v20;
    v57 = v9;
    v35 = v59;
    v55 = a1;
    while (1)
    {
      v36 = v35;
      v37 = v56;
      v35 += v56;
      v38 = v22 + v56;
      v39 = v22;
      sub_23F382EF8(v22 + v56, (uint64_t)v11, &qword_256E6FF50);
      v40 = a2 + v37;
      v41 = a2 + v37;
      v42 = (uint64_t)v11;
      v43 = (uint64_t)v57;
      sub_23F382EF8(v41, (uint64_t)v57, &qword_256E6FF50);
      v44 = *(int *)(v61 + 48);
      v45 = *(double *)(v42 + v44);
      v46 = *(double *)(v43 + v44);
      v47 = v43;
      v11 = (char *)v42;
      sub_23F3625D8(v47, &qword_256E6FF50);
      sub_23F3625D8(v42, &qword_256E6FF50);
      if (v45 >= v46)
      {
        if (v36 >= v39 && v35 < v39)
        {
          v21 = v58;
          v50 = v55;
          if (v36 != v39)
            swift_arrayInitWithTakeBackToFront();
          v22 = v38;
          goto LABEL_65;
        }
        swift_arrayInitWithTakeFrontToBack();
        v22 = v38;
        v21 = v58;
      }
      else
      {
        v59 = v39;
        if (v36 >= a2 && v35 < a2)
        {
          v50 = v55;
          if (v36 != a2)
            swift_arrayInitWithTakeBackToFront();
          a2 = v40;
          v21 = v58;
          v22 = v59;
LABEL_65:
          v20 = v60;
          goto LABEL_66;
        }
        swift_arrayInitWithTakeFrontToBack();
        a2 = v40;
        v21 = v58;
        v22 = v59;
      }
      v20 = v60;
      v50 = v55;
LABEL_66:
      if (v22 <= v21 || a2 <= v50)
        goto LABEL_70;
    }
  }
  v21 = v58;
  sub_23F37ABD4(a1, v14 / v13);
  v22 = v21 + v18 * v20;
  if (v18 * v20 >= 1 && a2 < v59)
  {
    do
    {
      v24 = v22;
      sub_23F382EF8(a2, (uint64_t)v11, &qword_256E6FF50);
      sub_23F382EF8(v21, (uint64_t)v9, &qword_256E6FF50);
      v25 = *(int *)(v61 + 48);
      v26 = *(double *)&v11[v25];
      v27 = *(double *)&v9[v25];
      sub_23F3625D8((uint64_t)v9, &qword_256E6FF50);
      sub_23F3625D8((uint64_t)v11, &qword_256E6FF50);
      if (v26 >= v27)
      {
        v30 = v21 + v20;
        if (a1 < v21 || a1 >= v30)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != v21)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v28 = a2;
        v21 = v30;
        v20 = v60;
      }
      else
      {
        v28 = a2 + v20;
        if (a1 < a2 || a1 >= v28)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      v22 = v24;
      a1 += v20;
      v32 = v21 >= v24 || v28 >= v59;
      a2 = v28;
    }
    while (!v32);
  }
LABEL_70:
  v52 = v22 - v21;
  if (v20 != -1 || v52 != 0x8000000000000000)
  {
    sub_23F37ABD4(v21, v52 / v20);
    return;
  }
LABEL_78:
  __break(1u);
}

unint64_t sub_23F534158()
{
  unint64_t result;

  result = qword_256E79720;
  if (!qword_256E79720)
  {
    result = MEMORY[0x242670A44](&unk_23F62C2FC, &type metadata for QueryDecorationCacheKey.Input.ToolQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E79720);
  }
  return result;
}

unint64_t sub_23F534194()
{
  unint64_t result;

  result = qword_256E79730;
  if (!qword_256E79730)
  {
    result = MEMORY[0x242670A44](&unk_23F62C2AC, &type metadata for QueryDecorationCacheKey.Input.QueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E79730);
  }
  return result;
}

uint64_t sub_23F5341D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;

  v4 = (int *)v1[4];
  v5 = v1[5];
  v6 = (uint64_t *)v1[6];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23F531A28;
  return sub_23F5304B4(a1, v4, v5, v6);
}

uint64_t sub_23F534250@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23F617C18();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for QueryDecorationCacheKey.Input.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F5342C4 + 4 * byte_23F62BDC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F5342F8 + 4 * byte_23F62BDC0[v4]))();
}

uint64_t sub_23F5342F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F534300(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F534308);
  return result;
}

uint64_t sub_23F534314(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F53431CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F534320(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F534328(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for QueryDecorationCacheKey.Input.CodingKeys()
{
  return &type metadata for QueryDecorationCacheKey.Input.CodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationCacheKey.Input.QueryCodingKeys()
{
  return &type metadata for QueryDecorationCacheKey.Input.QueryCodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerRuntime23QueryDecorationCacheKeyV5InputO15QueryCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F534398 + 4 * byte_23F62BDCA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F5343B8 + 4 * byte_23F62BDCF[v4]))();
}

_BYTE *sub_23F534398(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F5343B8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F5343C0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F5343C8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F5343D0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F5343D8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for QueryDecorationCacheKey.Input.ToolQueryCodingKeys()
{
  return &type metadata for QueryDecorationCacheKey.Input.ToolQueryCodingKeys;
}

unint64_t sub_23F5343F8()
{
  unint64_t result;

  result = qword_256E79790;
  if (!qword_256E79790)
  {
    result = MEMORY[0x242670A44](&unk_23F62C114, &type metadata for QueryDecorationCacheKey.Input.ToolQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E79790);
  }
  return result;
}

unint64_t sub_23F534438()
{
  unint64_t result;

  result = qword_256E79798;
  if (!qword_256E79798)
  {
    result = MEMORY[0x242670A44](&unk_23F62C1CC, &type metadata for QueryDecorationCacheKey.Input.QueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E79798);
  }
  return result;
}

unint64_t sub_23F534478()
{
  unint64_t result;

  result = qword_256E797A0;
  if (!qword_256E797A0)
  {
    result = MEMORY[0x242670A44](&unk_23F62C284, &type metadata for QueryDecorationCacheKey.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E797A0);
  }
  return result;
}

unint64_t sub_23F5344B8()
{
  unint64_t result;

  result = qword_256E797A8;
  if (!qword_256E797A8)
  {
    result = MEMORY[0x242670A44](&unk_23F62C13C, &type metadata for QueryDecorationCacheKey.Input.QueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E797A8);
  }
  return result;
}

unint64_t sub_23F5344F8()
{
  unint64_t result;

  result = qword_256E797B0;
  if (!qword_256E797B0)
  {
    result = MEMORY[0x242670A44](&unk_23F62C164, &type metadata for QueryDecorationCacheKey.Input.QueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E797B0);
  }
  return result;
}

unint64_t sub_23F534538()
{
  unint64_t result;

  result = qword_256E797B8;
  if (!qword_256E797B8)
  {
    result = MEMORY[0x242670A44](&unk_23F62C084, &type metadata for QueryDecorationCacheKey.Input.ToolQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E797B8);
  }
  return result;
}

unint64_t sub_23F534578()
{
  unint64_t result;

  result = qword_256E797C0;
  if (!qword_256E797C0)
  {
    result = MEMORY[0x242670A44](&unk_23F62C0AC, &type metadata for QueryDecorationCacheKey.Input.ToolQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E797C0);
  }
  return result;
}

unint64_t sub_23F5345B8()
{
  unint64_t result;

  result = qword_256E797C8;
  if (!qword_256E797C8)
  {
    result = MEMORY[0x242670A44](&unk_23F62C1F4, &type metadata for QueryDecorationCacheKey.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E797C8);
  }
  return result;
}

unint64_t sub_23F5345F8()
{
  unint64_t result;

  result = qword_256E797D0;
  if (!qword_256E797D0)
  {
    result = MEMORY[0x242670A44](&unk_23F62C21C, &type metadata for QueryDecorationCacheKey.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E797D0);
  }
  return result;
}

void sub_23F53463C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_23F37AE00(0x6F663A5F28747570, 0xEE00293A79654B72, a3);
}

void sub_23F534660()
{
  uint64_t v0;

  sub_23F37AE00(0x4B726F6628746567, 0xEC000000293A7965, (uint64_t *)(v0 - 160));
}

uint64_t sub_23F534684(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F534698()
{
  return swift_task_dealloc();
}

uint64_t sub_23F5346A8()
{
  return type metadata accessor for QueryDecorationCacheKey.Input(0);
}

uint64_t sub_23F5346C4()
{
  return sub_23F61C790();
}

uint64_t sub_23F5346D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

void sub_23F5346EC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_23F534700()
{
  return swift_task_alloc();
}

uint64_t sub_23F534714()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 208) + 8))(*(_QWORD *)(v0 - 184), *(_QWORD *)(v0 - 200));
}

uint64_t sub_23F534728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8))(v1, v0);
}

uint64_t sub_23F53473C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v1, v0);
}

void sub_23F534750(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F382EF8(a1, a2, v2);
}

uint64_t sub_23F534758()
{
  return swift_endAccess();
}

void sub_23F534760()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F362600(v0, v2, v1);
}

uint64_t sub_23F534770()
{
  return sub_23F61CACC();
}

uint64_t sub_23F534780()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 104) + 8))(v0, *(_QWORD *)(v1 - 96));
}

uint64_t sub_23F534790()
{
  return type metadata accessor for QueryDecorationCacheValue(0);
}

uint64_t sub_23F534798()
{
  return swift_task_alloc();
}

uint64_t sub_23F5347A0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F5347C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F36196C(a1, a2, 1, a4);
}

uint64_t sub_23F5347C8()
{
  return sub_23F61CB74();
}

void sub_23F5347D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F362600(a1, v3, a3);
}

unint64_t sub_23F5347DC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23F534158();
}

void sub_23F5347E8(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_23F5347F4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F5347FC()
{
  return type metadata accessor for QueryDecorationCacheKey(0);
}

uint64_t sub_23F534804()
{
  return sub_23F619004();
}

uint64_t sub_23F53480C()
{
  uint64_t v0;

  return v0;
}

void QueryDecorationContext.selfLogger.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F382FC4(v1 + 16, a1);
}

void QueryDecorationContext.signposter.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F382FC4(v1 + 56, a1);
}

id QueryDecorationContext.input.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 96);
}

void QueryDecorationContext.toolbox.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F382EF8(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationContext_toolbox, a1, &qword_256E72B70);
}

void QueryDecorationContext.lookback.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F382EF8(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationContext_lookback, a1, &qword_256E797D8);
}

void QueryDecorationContext.toolExecutionSession.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F382EF8(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationContext_toolExecutionSession, a1, &qword_256E797E0);
}

uint64_t QueryDecorationContext.__allocating_init(input:toolbox:lookback:toolExecutionSession:selfLogger:signposter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, __int128 *a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  QueryDecorationContext.init(input:toolbox:lookback:toolExecutionSession:selfLogger:signposter:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t QueryDecorationContext.init(input:toolbox:lookback:toolExecutionSession:selfLogger:signposter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, __int128 *a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 96) = a1;
  sub_23F362678(a5, v6 + 16);
  sub_23F383004(a2, v6 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationContext_toolbox, &qword_256E72B70);
  sub_23F383004(a3, v6 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationContext_lookback, &qword_256E797D8);
  sub_23F383004(a4, v6 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationContext_toolExecutionSession, &qword_256E797E0);
  sub_23F362678(a6, v6 + 56);
  return v6;
}

uint64_t QueryDecorationContext.deinit()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 56);

  sub_23F39E4B8(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationContext_toolbox, &qword_256E72B70);
  sub_23F39E4B8(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationContext_lookback, &qword_256E797D8);
  sub_23F39E4B8(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationContext_toolExecutionSession, &qword_256E797E0);
  return v0;
}

uint64_t QueryDecorationContext.__deallocating_deinit()
{
  QueryDecorationContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23F534A9C()
{
  return type metadata accessor for QueryDecorationContext();
}

uint64_t type metadata accessor for QueryDecorationContext()
{
  uint64_t result;

  result = qword_256E79810;
  if (!qword_256E79810)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23F534ADC()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F4AED90(319, (unint64_t *)&qword_256E79820, (void (*)(uint64_t))MEMORY[0x24BE56D60]);
  if (v0 <= 0x3F)
  {
    sub_23F4AED90(319, qword_256E79828, (void (*)(uint64_t))MEMORY[0x24BE57D08]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for QueryDecorationContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of QueryDecorationContext.__allocating_init(input:toolbox:lookback:toolExecutionSession:selfLogger:signposter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

void static QueryDecorationAnalytics.sendEventForProduction(eventName:prefix:eventPayload:)(int a1, int a2, uint64_t a3, void *a4, void *a5)
{
  void *v10;
  Swift::String_optional v11;

  v10 = (void *)MEMORY[0x2426704A4]();
  v11.value._countAndFlagsBits = a3;
  v11.value._object = a4;
  sub_23F534C14(a1, a2, v11, a5);
  sub_23F5351FC(v10);
}

void sub_23F534C14(int a1, int a2, Swift::String_optional prefix, void *a4)
{
  void *v5;

  String.fullEventName(prefix:)(prefix);
  v5 = (void *)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  if (a4)
  {
    sub_23F5351A8();
    a4 = (void *)sub_23F61BFB0();
  }
  AnalyticsSendEvent();

}

Swift::String __swiftcall String.fullEventName(prefix:)(Swift::String_optional prefix)
{
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String result;
  Swift::String_optional v4;

  if (prefix.value._object)
  {
    v4 = prefix;
    sub_23F617BA0();
    sub_23F61C280();
    sub_23F61C280();
  }
  else
  {
    strcpy((char *)&v4, "com.apple.qd.");
    HIWORD(v4.value._object) = -4864;
  }
  sub_23F61C280();
  countAndFlagsBits = v4.value._countAndFlagsBits;
  object = v4.value._object;
  result._object = object;
  result._countAndFlagsBits = countAndFlagsBits;
  return result;
}

void static QueryDecorationAnalytics.sendEventForProductionLazy(eventName:eventPayloadBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;

  v8 = (void *)MEMORY[0x2426704A4]();
  sub_23F534E6C(a1, a2, a3, a4);
  sub_23F5351FC(v8);
}

void sub_23F534E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  _QWORD v8[6];

  strcpy((char *)v8, "com.apple.qd.");
  sub_23F61C280();
  v6 = (void *)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  v8[4] = a3;
  v8[5] = a4;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_23F534F58;
  v8[3] = &unk_250FDBB38;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v7);

}

id sub_23F534F58(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_23F5351A8();
    v4 = (void *)sub_23F61BFB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t sub_23F53504C(uint64_t a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = (id)(*(uint64_t (**)(void))(a1 + 16))();
  if (!v1)
    return 0;
  v2 = v1;
  sub_23F5351A8();
  v3 = sub_23F61BFBC();

  return v3;
}

id QueryDecorationAnalytics.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id QueryDecorationAnalytics.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id QueryDecorationAnalytics.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for QueryDecorationAnalytics()
{
  return objc_opt_self();
}

uint64_t sub_23F53517C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23F5351A0()
{
  uint64_t v0;

  return sub_23F53504C(*(_QWORD *)(v0 + 16));
}

unint64_t sub_23F5351A8()
{
  unint64_t result;

  result = qword_256E798F8;
  if (!qword_256E798F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E798F8);
  }
  return result;
}

uint64_t sub_23F5351E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23F5351F4()
{
  return swift_release();
}

void sub_23F5351FC(void *a1)
{
  objc_autoreleasePoolPop(a1);
}

uint64_t sub_23F535210(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v3 = *(_QWORD *)(sub_23F618D28() - 8);
    v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    sub_23F617BA0();
    v6 = 0;
    do
    {
      ++v6;
      sub_23F61CC1C();
      sub_23F61C280();
      sub_23F53533C();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      sub_23F61C280();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      v4 += v5;
    }
    while (v1 != v6);
    sub_23F362D18();
  }
  sub_23F61C280();
  return 2651;
}

unint64_t sub_23F53533C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E79900);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F38F964();
  sub_23F618AE8();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F38F964();
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  sub_23F5355C8();
  sub_23F3C8954();
  sub_23F618CD4();
  sub_23F5355C0();
  swift_bridgeObjectRelease();
  sub_23F3F5DC0();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F5355C8();
  sub_23F3C8954();
  sub_23F618CE0();
  sub_23F61C16C();
  sub_23F5355C0();
  swift_bridgeObjectRelease();
  sub_23F3F5DC0();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F618CF8();
  sub_23F61C16C();
  sub_23F5355C0();
  swift_bridgeObjectRelease();
  sub_23F3F5DC0();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C8E0();
  sub_23F3C8954();
  sub_23F618D1C();
  sub_23F61C16C();
  sub_23F5355C0();
  sub_23F362D18();
  sub_23F3F5DC0();
  sub_23F61C280();
  sub_23F362D18();
  sub_23F61C280();
  return 0xD000000000000012;
}

uint64_t sub_23F5355C0()
{
  return sub_23F61C280();
}

uint64_t sub_23F5355C8()
{
  return sub_23F61C8E0();
}

void sub_23F5355D4(_QWORD *a1@<X8>)
{
  sub_23F5355FC(&qword_256E75270, type metadata accessor for JointResolution.CandidateInteraction, a1);
}

void sub_23F5355E8(_QWORD *a1@<X8>)
{
  sub_23F5355FC(&qword_256E75278, type metadata accessor for JointResolution.TupleInteraction, a1);
}

void sub_23F5355FC(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7 = sub_23F35D2E8(a1);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F362930();
  v10 = *v3;
  v9 = v3[1];
  v11 = *(_QWORD *)(*v3 + 16);
  if (v9 == v11)
  {
    sub_23F536518();
    sub_23F5364BC(v12, v13, v14, v15);
    return;
  }
  if (v9 >= v11)
  {
    __break(1u);
  }
  else
  {
    v16 = a2(0);
    v17 = v10
        + ((*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80))
        + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v9;
    v3[1] = v9 + 1;
    v18 = v4 + *(int *)(v7 + 48);
    v19 = v3[2];
    sub_23F53645C(v17, v18, a2);
    if (!__OFADD__(v19, 1))
    {
      v3[2] = v19 + 1;
      v20 = (uint64_t)a3 + *(int *)(v7 + 48);
      *a3 = v19;
      sub_23F53648C(v18, v20, a2);
      sub_23F36196C((uint64_t)a3, 0, 1, v7);
      sub_23F383568();
      return;
    }
  }
  __break(1u);
}

void sub_23F5356EC(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;

  v4 = sub_23F35D2E8(&qword_256E75C18);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F362930();
  v7 = *v1;
  v6 = v1[1];
  v8 = *(_QWORD *)(*v1 + 16);
  if (v6 == v8)
  {
    sub_23F536518();
    sub_23F5364BC(v9, v10, v11, v12);
    return;
  }
  if (v6 >= v8)
  {
    __break(1u);
  }
  else
  {
    v13 = sub_23F35D2E8(&qword_256E702C0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = v7
        + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
        + *(_QWORD *)(v14 + 72) * v6;
    v1[1] = v6 + 1;
    v16 = v2 + *(int *)(v4 + 48);
    v17 = v1[2];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))(v16, v15, v13);
    if (!__OFADD__(v17, 1))
    {
      v1[2] = v17 + 1;
      v18 = (char *)a1 + *(int *)(v4 + 48);
      *a1 = v17;
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v18, v16, v13);
      sub_23F36196C((uint64_t)a1, 0, 1, v4);
      sub_23F383568();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_23F5357F0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v3 = sub_23F35D2E8(&qword_256E79918);
  result = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = *(_QWORD *)(*v1 + 16);
  if (v7 == v9)
    return sub_23F36196C((uint64_t)a1, 1, 1, v3);
  if (v7 >= v9)
  {
    __break(1u);
  }
  else
  {
    v10 = sub_23F618C20();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = v8
        + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
        + *(_QWORD *)(v11 + 72) * v7;
    v1[1] = v7 + 1;
    v13 = &v6[*(int *)(v3 + 48)];
    v14 = v1[2];
    result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v12, v10);
    if (!__OFADD__(v14, 1))
    {
      v1[2] = v14 + 1;
      v15 = (char *)a1 + *(int *)(v3 + 48);
      *a1 = v14;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v13, v10);
      return sub_23F36196C((uint64_t)a1, 0, 1, v3);
    }
  }
  __break(1u);
  return result;
}

uint64_t static QueryDecorationLoggingUtils.timeOperation<A>(_:)(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;

  v14 = a3;
  v15 = a2;
  v4 = sub_23F61C9A0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F5364E0();
  v9 = sub_23F61C9B8();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F38F964();
  sub_23F61C9AC();
  v10 = sub_23F61C988();
  v11 = v16;
  v15(v10);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    return sub_23F5364D0();
  }
  else
  {
    sub_23F61C988();
    v16 = sub_23F61C994();
    v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v8, v4);
    v13(v3, v4);
    sub_23F5364D0();
    return v16;
  }
}

uint64_t static QueryDecorationLoggingUtils.timeOperation<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_23F61C9A0();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  v5 = sub_23F61C9B8();
  v3[9] = v5;
  v3[10] = *(_QWORD *)(v5 - 8);
  v3[11] = swift_task_alloc();
  return sub_23F3B15DC();
}

uint64_t sub_23F535B1C()
{
  _QWORD *v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  v1 = (int *)v0[3];
  sub_23F61C9AC();
  sub_23F61C988();
  v4 = (uint64_t (*)(_QWORD))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc();
  v0[12] = v2;
  *v2 = v0;
  v2[1] = sub_23F535B9C;
  return v4(v0[2]);
}

uint64_t sub_23F535B9C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return sub_23F3B15DC();
}

uint64_t sub_23F535BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  sub_23F61C988();
  v8 = sub_23F61C994();
  v10 = v9;
  v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11(v5, v7);
  v11(v4, v7);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v8, v10);
}

uint64_t sub_23F535CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static QueryDecorationLoggingUtils.generateReadableToolList(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;

  v3 = sub_23F618BB4();
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3834D0();
  v49 = v4;
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)&v38 - v6;
  sub_23F35D2E8(&qword_256E70238);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3834D0();
  v47 = v8;
  MEMORY[0x24BDAC7A8](v9);
  sub_23F5364E0();
  v10 = sub_23F618C08();
  v45 = *(_QWORD *)(v10 - 8);
  v46 = v10;
  MEMORY[0x24BDAC7A8](v10);
  sub_23F38F964();
  v13 = v12 - v11;
  v14 = sub_23F618C20();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  sub_23F38F964();
  v18 = v17 - v16;
  sub_23F35D2E8(&qword_256E79910);
  sub_23F3834C0();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (uint64_t *)((char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v38 - v23;
  v57 = 0;
  v58 = 0xE000000000000000;
  v55 = 0;
  v56 = 0;
  v54 = a1;
  sub_23F617BA0();
  sub_23F5357F0(v22);
  v44 = v22;
  sub_23F5361B4((uint64_t)v22, (uint64_t)v24);
  v25 = sub_23F35D2E8(&qword_256E79918);
  sub_23F5364F4(v25);
  if (v26)
  {
    v27 = 0;
  }
  else
  {
    v39 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
    v38 = v1;
    v42 = v14;
    v43 = v13;
    v40 = v24;
    v41 = v15;
    do
    {
      v39(v18, &v24[(int)v59], v14);
      sub_23F618BD8();
      sub_23F618C14();
      v28 = v48;
      sub_23F618BCC();
      sub_23F618B9C();
      v29 = *(void (**)(char *, uint64_t))(v50 + 8);
      v29(v28, v51);
      v30 = sub_23F61B5D8();
      if (sub_23F36195C(v1, 1, v30) == 1)
      {
        sub_23F5361FC(v1);
      }
      else
      {
        sub_23F61B5A8();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v1, v30);
      }
      v52 = 0;
      v53 = 0xE000000000000000;
      sub_23F61C520();
      sub_23F61C280();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      v31 = v49;
      sub_23F618BCC();
      v32 = v47;
      sub_23F618B9C();
      v29(v31, v51);
      if (sub_23F36195C(v32, 1, v30) == 1)
      {
        sub_23F5361FC(v32);
      }
      else
      {
        sub_23F61B5B4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v32, v30);
      }
      v1 = v38;
      v52 = 0;
      v53 = 0xE000000000000000;
      v33 = v43;
      v34 = v46;
      sub_23F61CA00();
      sub_23F53623C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v33, v34);
      v14 = v42;
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v18, v42);
      v35 = v44;
      sub_23F5357F0(v44);
      v24 = v40;
      sub_23F5361B4((uint64_t)v35, (uint64_t)v40);
      v36 = sub_23F35D2E8(&qword_256E79918);
      sub_23F5364F4(v36);
    }
    while (!v26);
    v27 = v57;
  }
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_23F5361B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E79910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5361FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E70238);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F53623C()
{
  sub_23F61CC1C();
  sub_23F38813C();
  sub_23F61C7F0();
  swift_bridgeObjectRelease();
  sub_23F61C7F0();
  sub_23F61C7F0();
  sub_23F61C7F0();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  return 8202;
}

ValueMetadata *type metadata accessor for QueryDecorationLoggingUtils()
{
  return &type metadata for QueryDecorationLoggingUtils;
}

uint64_t sub_23F53645C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_23F362BC4(a1, a2, a3);
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  return v3;
}

uint64_t sub_23F53648C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_23F362BC4(a1, a2, a3);
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  return v3;
}

uint64_t sub_23F5364BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F36196C(a1, a2, a3, a4);
}

uint64_t sub_23F5364D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F5364E0()
{
  return 0;
}

uint64_t sub_23F5364F4(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(v1, 1, a1);
}

ValueMetadata *type metadata accessor for QueryDecorationPostProcessing()
{
  return &type metadata for QueryDecorationPostProcessing;
}

uint64_t sub_23F53653C(uint64_t a1)
{
  NSObject *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(NSObject *, uint64_t);
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  float v55;
  float v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  BOOL v64;
  char v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  float v75;
  float v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t result;
  uint64_t v102;
  void (*v103)(NSObject *, uint64_t);
  void (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  NSObject *v106;
  void (*v107)(uint64_t, uint64_t, uint64_t);
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  os_log_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126[3];
  uint64_t v127;
  uint64_t v128;

  sub_23F35D2E8(&qword_256E79900);
  sub_23F3834C0();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v114 = (char *)&v102 - v7;
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F3B1690();
  v123 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3834D0();
  v120 = v12;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3838E4();
  v111 = v14;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3838E4();
  v118 = v16;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v17);
  v124 = (uint64_t)&v102 - v18;
  v19 = sub_23F618D28();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3834D0();
  v119 = v21;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3838E4();
  v109 = v23;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3838E4();
  v110 = v25;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F3838E4();
  v112 = v27;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v102 - v29;
  v31 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F3834D0();
  v106 = v32;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v33);
  if (!a1)
    return MEMORY[0x24BEE4AF8];
  v122 = v34;
  sub_23F617BA0();
  sub_23F52E6C0();
  swift_bridgeObjectRetain_n();
  sub_23F619E8C();
  v35 = sub_23F384988();
  v121 = v1;
  LODWORD(v113) = v35;
  v36 = os_log_type_enabled(v1, v35);
  v105 = v31;
  v115 = v19;
  v108 = v6;
  v117 = v10;
  if (v36)
  {
    v37 = sub_23F366668();
    v38 = sub_23F366668();
    v107 = (void (*)(uint64_t, uint64_t, uint64_t))v38;
    v126[0] = v38;
    *(_DWORD *)v37 = 136315650;
    sub_23F53A988(v38, 0x800000023F638E00, v126);
    v128 = v39;
    sub_23F61C790();
    *(_WORD *)(v37 + 12) = 2048;
    v128 = *(_QWORD *)(a1 + 16);
    sub_23F61C790();
    *(_WORD *)(v37 + 22) = 2080;
    v40 = sub_23F535210(a1);
    sub_23F37AE00(v40, v41, v126);
    v128 = v42;
    sub_23F61C790();
    sub_23F384A80();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F35A000, v121, (os_log_type_t)v113, "%s Before size=%ld %s", (uint8_t *)v37, 0x20u);
    sub_23F507364();
    sub_23F366530();
  }

  sub_23F384A80();
  v44 = sub_23F3840BC();
  v103 = v45;
  ((void (*)(uint64_t))v45)(v44);
  v128 = MEMORY[0x24BEE4B00];
  v46 = *(_QWORD *)(a1 + 16);
  if (!v46)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    sub_23F383738();
    sub_23F471218();
    v43 = v88;
    sub_23F362984();
    v89 = v106;
    sub_23F6190E8();
    swift_retain_n();
    sub_23F619E8C();
    v90 = sub_23F3B1A04();
    if (sub_23F3B1E8C(v90))
    {
      v91 = sub_23F366668();
      v92 = sub_23F366668();
      v124 = v92;
      v127 = v92;
      *(_DWORD *)v91 = 136315906;
      sub_23F53A988(v92, 0x800000023F638E00, &v127);
      v126[0] = v93;
      sub_23F61C790();
      *(_WORD *)(v91 + 12) = 2048;
      swift_beginAccess();
      v125 = *(_QWORD *)(v128 + 16);
      sub_23F53A7CC();
      *(_WORD *)(v91 + 22) = 2080;
      sub_23F3612C0(&qword_256E6FDB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D20], MEMORY[0x24BEB9D38]);
      sub_23F617BA0();
      v94 = sub_23F61BFF8();
      v96 = v95;
      swift_bridgeObjectRelease();
      sub_23F37AE00(v94, v96, &v127);
      v125 = v97;
      sub_23F53A7CC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v91 + 32) = 2080;
      v98 = sub_23F535210(v43);
      sub_23F37AE00(v98, v99, &v127);
      v125 = v100;
      sub_23F53A7CC();
      sub_23F53AA30();
      sub_23F3837B0();
      _os_log_impl(&dword_23F35A000, v89, OS_LOG_TYPE_DEFAULT, "%s After size=%ld, keys=%s, %s", (uint8_t *)v91, 0x2Au);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F53AA30();
    v103(v89, v105);
    swift_bridgeObjectRelease();
    return v43;
  }
  v47 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v102 = a1;
  v48 = a1 + v47;
  v49 = *(_QWORD *)(v20 + 16);
  v121 = *(os_log_t *)(v20 + 72);
  v122 = v49;
  v113 = v11;
  v50 = (uint64_t)v114;
  v116 = v20;
  while (1)
  {
    sub_23F53A7DC((uint64_t)v30, v48);
    sub_23F618CE0();
    v51 = sub_23F61B92C();
    sub_23F389920((uint64_t)v10);
    if (!v54)
      break;
    sub_23F39E4B8((uint64_t)v10, &qword_256E701F0);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v30, v19);
LABEL_28:
    v48 += (uint64_t)v121;
    if (!--v46)
      goto LABEL_40;
  }
  v52 = v118;
  sub_23F61B8CC();
  sub_23F383E64((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 32))(v124, v52, v11);
  sub_23F618D1C();
  v53 = sub_23F618AD0();
  sub_23F389920(v50);
  if (v54)
  {
    sub_23F39E4B8(v50, &qword_256E79900);
    v56 = 0.0;
  }
  else
  {
    sub_23F618AC4();
    v56 = v55;
    sub_23F383E64(v50, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8));
  }
  v57 = v128;
  if (*(_QWORD *)(v128 + 16))
  {
    sub_23F375AB4();
    if ((v59 & 1) != 0)
    {
      v60 = v110;
      sub_23F53A7DC(v110, *(_QWORD *)(v57 + 56) + v58 * (_QWORD)v121);
      v20 = v116;
      v61 = v112;
      v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 32);
      v107(v112, v60, v19);
      v62 = (uint64_t)v108;
      sub_23F618D1C();
      sub_23F389920(v62);
      if (v54)
      {
        sub_23F39E4B8(v62, &qword_256E79900);
        if (v56 > 0.0)
        {
LABEL_31:
          v104 = *(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 16);
          v104(v111, v124, v11);
          sub_23F53A7DC(v109, (uint64_t)v30);
          sub_23F3841E0();
          sub_23F53A820();
          sub_23F53A9C0();
          if (v64)
            goto LABEL_46;
          v79 = v77;
          v80 = v78;
          sub_23F35D2E8(&qword_256E79948);
          v81 = sub_23F53A860();
          v19 = v115;
          v10 = v117;
          if ((v81 & 1) != 0)
          {
            sub_23F375AB4();
            if ((v80 & 1) != (v83 & 1))
              goto LABEL_48;
            v79 = v82;
          }
          v61 = v126[0];
          if ((v80 & 1) != 0)
          {
            sub_23F4244A8(*(_QWORD *)(v126[0] + 56) + v79 * (_QWORD)v121, v109, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 40));
            v11 = v113;
          }
          else
          {
            v84 = sub_23F53A784();
            v11 = v113;
            v104(v84, v111, v113);
            v107(*(_QWORD *)(v61 + 56) + v79 * (_QWORD)v121, v109, v19);
            v85 = *(_QWORD *)(v61 + 16);
            v64 = __OFADD__(v85, 1);
            v86 = v85 + 1;
            if (v64)
              goto LABEL_47;
            *(_QWORD *)(v61 + 16) = v86;
          }
          sub_23F53A8F4();
          v87 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
          v87(v111, v11);
          sub_23F53A8BC();
          v87(v124, v11);
          goto LABEL_27;
        }
      }
      else
      {
        v61 = v62;
        sub_23F618AC4();
        v76 = v75;
        sub_23F383E64(v62, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8));
        if (v76 < v56)
          goto LABEL_31;
      }
      sub_23F53A8BC();
      sub_23F38456C(v124, *(uint64_t (**)(uint64_t, uint64_t))(v123 + 8));
      v10 = v117;
LABEL_27:
      ((void (*)(char *, uint64_t))v61)(v30, v19);
      goto LABEL_28;
    }
  }
  v20 = *(_QWORD *)(v123 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v20)(v120, v124, v11);
  sub_23F53A7DC(v119, (uint64_t)v30);
  sub_23F3841E0();
  sub_23F53A820();
  sub_23F53A9C0();
  if (!v64)
  {
    v65 = v63;
    sub_23F35D2E8(&qword_256E79948);
    v66 = sub_23F53A860();
    v19 = v115;
    v10 = v117;
    if ((v66 & 1) != 0)
    {
      sub_23F375AB4();
      if ((v65 & 1) != (v67 & 1))
        goto LABEL_48;
    }
    v68 = v126[0];
    if ((v65 & 1) != 0)
    {
      v69 = sub_23F53A9AC();
      sub_23F4244A8(v69, v119, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 40));
      v11 = v113;
    }
    else
    {
      v70 = sub_23F53A784();
      v11 = v113;
      ((void (*)(uint64_t, uint64_t, uint64_t))v20)(v70, v120, v113);
      v71 = sub_23F53A9AC();
      sub_23F4244A8(v71, v119, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32));
      v72 = *(_QWORD *)(v68 + 16);
      v64 = __OFADD__(v72, 1);
      v73 = v72 + 1;
      if (v64)
        goto LABEL_45;
      *(_QWORD *)(v68 + 16) = v73;
    }
    sub_23F53A8F4();
    v74 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
    v74(v120, v11);
    v74(v124, v11);
    v61 = *(_QWORD *)(v20 + 8);
    v50 = (uint64_t)v114;
    goto LABEL_27;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F536FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;

  sub_23F35D2E8(&qword_256E70F38);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23F618F2C();
  if (v1)
  {
    v2 = sub_23F53A768(v1);
    sub_23F510684(v2, v3, v4, v5);
  }
  v6 = sub_23F618F44();
  if (v6)
  {
    v7 = sub_23F53A768(v6);
    sub_23F510684(v7, v8, v9, v10);
  }
  v11 = sub_23F618F38();
  if (v11)
  {
    v12 = sub_23F53A768(v11);
    sub_23F510684(v12, v13, v14, v15);
  }
  v16 = sub_23F618F50();
  if (v16)
  {
    v17 = sub_23F53A768(v16);
    sub_23F510684(v17, v18, v19, v20);
  }
  v21 = sub_23F618F68();
  if (v21)
  {
    v22 = sub_23F53A768(v21);
    sub_23F510684(v22, v23, v24, v25);
  }
  v26 = sub_23F618F74();
  if (v26)
  {
    v27 = sub_23F53A768(v26);
    sub_23F510684(v27, v28, v29, v30);
  }
  sub_23F618F98();
  sub_23F618F14();
  sub_23F618F20();
  sub_23F618EFC();
  v31 = objc_allocWithZone((Class)sub_23F53AA14());
  return sub_23F618F8C();
}

uint64_t sub_23F53714C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2[32] = a1;
  v2[33] = a2;
  sub_23F35D2E8(&qword_256E70F38);
  v2[34] = sub_23F366578();
  sub_23F35D2E8(&qword_256E79928);
  v2[35] = sub_23F366578();
  v3 = sub_23F61B5F0();
  v2[36] = v3;
  v2[37] = *(_QWORD *)(v3 - 8);
  v2[38] = sub_23F366578();
  sub_23F35D2E8(&qword_256E79930);
  v2[39] = sub_23F366578();
  v4 = sub_23F61B9F8();
  v2[40] = v4;
  v2[41] = *(_QWORD *)(v4 - 8);
  v2[42] = sub_23F366578();
  v5 = sub_23F61BA1C();
  v2[43] = v5;
  v2[44] = *(_QWORD *)(v5 - 8);
  v2[45] = sub_23F366578();
  v6 = sub_23F61BAB8();
  v2[46] = v6;
  v2[47] = *(_QWORD *)(v6 - 8);
  v2[48] = sub_23F366578();
  v7 = sub_23F61BADC();
  v2[49] = v7;
  v2[50] = *(_QWORD *)(v7 - 8);
  v2[51] = sub_23F3666CC();
  v2[52] = sub_23F3666CC();
  v2[53] = sub_23F3666CC();
  v2[54] = sub_23F3666CC();
  v2[55] = sub_23F35D2E8(&qword_256E79320);
  v2[56] = sub_23F366578();
  v8 = sub_23F61B95C();
  v2[57] = v8;
  v2[58] = *(_QWORD *)(v8 - 8);
  v2[59] = sub_23F3666CC();
  v2[60] = sub_23F3666CC();
  v9 = sub_23F619E98();
  v2[61] = v9;
  v2[62] = *(_QWORD *)(v9 - 8);
  v2[63] = sub_23F3666CC();
  v2[64] = sub_23F3666CC();
  v2[65] = sub_23F3666CC();
  v2[66] = sub_23F3666CC();
  v2[67] = sub_23F3666CC();
  v2[68] = sub_23F3666CC();
  v2[69] = sub_23F3666CC();
  v2[70] = sub_23F3666CC();
  v2[71] = sub_23F3666CC();
  v2[72] = sub_23F3666CC();
  v10 = sub_23F61BBA8();
  v2[73] = v10;
  v2[74] = *(_QWORD *)(v10 - 8);
  v2[75] = sub_23F3666CC();
  v2[76] = sub_23F3666CC();
  v2[77] = sub_23F3666CC();
  v2[78] = sub_23F3666CC();
  v11 = sub_23F61B5D8();
  v2[79] = v11;
  v2[80] = *(_QWORD *)(v11 - 8);
  v2[81] = sub_23F3666CC();
  v2[82] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E70220);
  v2[83] = sub_23F366578();
  v12 = sub_23F61B308();
  v2[84] = v12;
  v2[85] = *(_QWORD *)(v12 - 8);
  v2[86] = sub_23F3666CC();
  v2[87] = sub_23F3666CC();
  v2[88] = sub_23F3666CC();
  v2[89] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E72B70);
  v2[90] = sub_23F366578();
  v13 = sub_23F61B32C();
  v2[91] = v13;
  v2[92] = *(_QWORD *)(v13 - 8);
  v2[93] = sub_23F366578();
  return swift_task_switch();
}

uint64_t sub_23F537434()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  Class isa;
  unint64_t v30;
  _DWORD *v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57);
  uint64_t v58;
  os_log_type_t v59;
  _BOOL4 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, _QWORD);
  void (*v73)(uint64_t);
  uint64_t v74;
  NSObject *v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  os_log_type_t v78;
  _BOOL4 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t);
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t);
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  _BOOL4 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint8_t *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t);
  id v111;
  NSObject *v113;
  os_log_type_t v114;
  _BOOL4 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint8_t *v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129[3];

  v2 = *(_QWORD **)(v0 + 256);
  v3 = v2[10];
  v4 = v2[11];
  sub_23F35EA9C(v2 + 7, v3);
  type metadata accessor for QueryDecorationSignpost();
  inited = swift_initStaticObject();
  v128 = (_QWORD *)(v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(inited, v3, v4);
  v6 = sub_23F618F38();
  *(_QWORD *)(v0 + 752) = v6;
  if (!v6)
  {
    v19 = *(NSObject **)(v0 + 504);
    sub_23F52E6C0();
    sub_23F619E8C();
    v20 = sub_23F3B1A04();
    if (sub_23F366874(v20))
    {
      v21 = (uint8_t *)sub_23F366668();
      v129[0] = sub_23F366668();
      *(_DWORD *)v21 = 136315138;
      sub_23F53A6E4((uint64_t)"    typedValue: ");
      *(_QWORD *)(v0 + 240) = v22;
      sub_23F61C790();
      sub_23F38485C(&dword_23F35A000, v19, (os_log_type_t)v4, "%s No adjustedRankedTools to iterate thru, return qdOutput as-is", v21);
      sub_23F3B17D4();
      sub_23F366530();
    }

    v23 = sub_23F384AB4();
    goto LABEL_34;
  }
  v7 = v6;
  v8 = *(_QWORD *)(v0 + 728);
  v9 = *(_QWORD *)(v0 + 720);
  sub_23F39E478(*(_QWORD *)(v0 + 256) + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationContext_toolbox, v9, &qword_256E72B70);
  if (sub_23F36195C(v9, 1, v8) == 1)
  {
    v10 = sub_23F362984();
    sub_23F53AA3C(v10, &qword_256E72B70);
    sub_23F53A7B4();
    sub_23F40B4F0();
    v11 = sub_23F3B1A04();
    v12 = sub_23F3B1E8C(v11);
    v13 = *(_QWORD *)(v0 + 512);
    v15 = *(_QWORD *)(v0 + 488);
    v14 = *(_QWORD *)(v0 + 496);
    if (v12)
    {
      v16 = (uint8_t *)sub_23F366668();
      v17 = sub_23F366668();
      sub_23F53A924(v17);
      *(_DWORD *)v16 = 136315138;
      sub_23F53A6E4((uint64_t)"    typedValue: ");
      *(_QWORD *)(v0 + 176) = v18;
      sub_23F61C790();
      sub_23F38485C(&dword_23F35A000, v7, (os_log_type_t)(v0 + 16), "%s No toolbox indicates this is NOT in-process (i.e. from Mini Mouse), return qdOutput as-is", v16);
      sub_23F3B17D4();
      sub_23F366530();
    }

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v0 + 256);
  sub_23F53A9E0(*(_QWORD *)(v0 + 736));
  sub_23F39E478(v26 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationContext_toolExecutionSession, v0 + 96, &qword_256E797E0);
  if (!*(_QWORD *)(v0 + 120))
  {
    v98 = sub_23F362984();
    sub_23F53AA3C(v98, &qword_256E797E0);
    sub_23F53A7B4();
    v99 = sub_23F40B4F0();
    v100 = sub_23F61C61C();
    v101 = os_log_type_enabled(v99, v100);
    v102 = *(_QWORD *)(v0 + 520);
    v104 = *(_QWORD *)(v0 + 488);
    v103 = *(_QWORD *)(v0 + 496);
    if (v101)
    {
      v105 = (uint8_t *)sub_23F366668();
      v129[0] = sub_23F366668();
      *(_DWORD *)v105 = 136315138;
      sub_23F53A6E4((uint64_t)"    typedValue: ");
      *(_QWORD *)(v0 + 184) = v106;
      sub_23F61C790();
      sub_23F38485C(&dword_23F35A000, v99, v100, "%s No ToolExecutionSessionTask indicates this is NOT in-process (i.e. from Mini Mouse), return qdOutput as-is", v105);
      sub_23F3B17D4();
      sub_23F366530();
    }

    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v102, v104);
    v23 = sub_23F3840BC();
LABEL_34:
    v25(v23, v24);
LABEL_35:
    v107 = *(void **)(v0 + 264);
    v108 = *(_QWORD *)(v0 + 40);
    v109 = *(_QWORD *)(v0 + 48);
    sub_23F35EA9C(v128, v108);
    v110 = *(void (**)(uint64_t))(v109 + 8);
    v111 = v107;
    v97 = v110;
    v96 = v108;
    goto LABEL_36;
  }
  v27 = v0 + 136;
  result = sub_23F362678((__int128 *)(v0 + 96), v0 + 136);
  isa = v7[2].isa;
  *(_QWORD *)(v0 + 760) = isa;
  if (!isa)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
      sub_23F53A964();
      sub_23F618F98();
      sub_23F618F14();
      sub_23F618F20();
      sub_23F618F44();
      sub_23F618F38();
      sub_23F618F44();
      sub_23F618F2C();
      sub_23F618F74();
      sub_23F618F68();
      sub_23F53AA08();
      v93 = objc_allocWithZone((Class)sub_23F53AA14());
      sub_23F53A954();
      sub_23F53A7E8();
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v27);
      v94 = *(_QWORD *)(v0 + 40);
      v95 = *(_QWORD *)(v0 + 48);
      sub_23F35EA9C(v128, v94);
      v96 = v94;
      v97 = *(void (**)(uint64_t))(v95 + 8);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_23F52E6C0();
      v113 = sub_23F619E8C();
      v114 = sub_23F61C61C();
      v115 = sub_23F53A914(v114);
      v116 = *(_QWORD *)(v0 + 744);
      v117 = *(_QWORD *)(v0 + 736);
      v118 = *(_QWORD *)(v0 + 728);
      v119 = *(_QWORD *)(v0 + 496);
      if (v115)
      {
        v120 = (uint8_t *)sub_23F366668();
        v121 = sub_23F366668();
        sub_23F53A924(v121);
        *(_DWORD *)v120 = 136315138;
        sub_23F53A6E4((uint64_t)"    typedValue: ");
        *(_QWORD *)(v0 + 192) = v122;
        sub_23F61C790();
        sub_23F38485C(&dword_23F35A000, v113, (os_log_type_t)v1, "%s Didin't find any dynamicEnumerationEntities, return qdOutput as-is", v120);
        sub_23F3B17D4();
        sub_23F366530();
      }

      sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v119 + 8));
      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v116, v118);
      v123 = *(id *)(v0 + 264);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
      v124 = *(_QWORD *)(v0 + 40);
      v125 = *(_QWORD *)(v0 + 48);
      v126 = (_QWORD *)sub_23F3840BC();
      sub_23F35EA9C(v126, v127);
      v96 = v124;
      v97 = *(void (**)(uint64_t))(v125 + 8);
    }
LABEL_36:
    v97(v96);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v128);
    sub_23F3666E4();
    swift_task_dealloc();
    sub_23F366698();
    sub_23F3666A0();
    sub_23F366708();
    sub_23F3666C4();
    sub_23F3666DC();
    sub_23F3666D4();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383C2C();
    sub_23F383C24();
    sub_23F383C1C();
    sub_23F383C04();
    sub_23F383BFC();
    sub_23F383BF4();
    sub_23F383BEC();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23F383B14();
    sub_23F383B0C();
    sub_23F383B04();
    sub_23F383C54();
    sub_23F383AFC();
    sub_23F383AE4();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F383C6C();
    swift_task_dealloc();
    sub_23F53A938();
    __asm { BR              X1 }
  }
  v30 = 0;
  v31 = (_DWORD *)MEMORY[0x24BEB9A58];
  v32 = (_DWORD *)MEMORY[0x24BEBA118];
  *(_DWORD *)(v0 + 888) = *MEMORY[0x24BE56D38];
  *(_DWORD *)(v0 + 892) = *v31;
  *(_DWORD *)(v0 + 896) = *v32;
  while (1)
  {
    *(_QWORD *)(v0 + 768) = v30;
    v33 = *(_QWORD *)(v0 + 752);
    if (v30 >= *(_QWORD *)(v33 + 16))
      break;
    v34 = *(_QWORD *)(v0 + 672);
    v35 = *(_QWORD *)(v0 + 664);
    v36 = v33 + 16 * v30;
    v38 = *(_QWORD *)(v36 + 32);
    v37 = *(_QWORD *)(v36 + 40);
    sub_23F3668F4();
    sub_23F61B314();
    if (sub_23F36195C(v35, 1, v34) == 1)
    {
      v39 = *(NSObject **)(v0 + 536);
      sub_23F39E4B8(*(_QWORD *)(v0 + 664), &qword_256E70220);
      sub_23F52E6C0();
      sub_23F3668F4();
      sub_23F619E8C();
      v40 = sub_23F3B1A04();
      v41 = sub_23F366874(v40);
      v42 = *(_QWORD *)(v0 + 536);
      v1 = *(_QWORD *)(v0 + 488);
      v43 = *(_QWORD *)(v0 + 496);
      if (v41)
      {
        v44 = sub_23F366668();
        v45 = sub_23F366668();
        sub_23F53A924(v45);
        *(_DWORD *)v44 = 136315394;
        sub_23F37AE00(0xD000000000000037, 0x800000023F638DC0, v129);
        *(_QWORD *)(v44 + 4) = v46;
        *(_WORD *)(v44 + 12) = 2080;
        sub_23F3668F4();
        sub_23F37AE00(v38, v37, v129);
        sub_23F53A8CC(v47);
        sub_23F53A75C(&dword_23F35A000, v39, (os_log_type_t)v34, "%s tool not found: %s, skip it");
        swift_arrayDestroy();
        sub_23F366530();
      }
      sub_23F384A80();

      result = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v42, v1);
    }
    else
    {
      v48 = *(_DWORD *)(v0 + 888);
      v49 = *(_QWORD *)(v0 + 712);
      v50 = *(_QWORD *)(v0 + 680);
      v51 = *(_QWORD *)(v0 + 664);
      sub_23F362D18();
      sub_23F383C64(v49, v51, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 32));
      v1 = *(_QWORD *)(v50 + 16);
      sub_23F53A87C();
      if (sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v50 + 88)) == v48)
      {
        v52 = *(_QWORD *)(v0 + 640);
        sub_23F3B13E4(*(_QWORD *)(v0 + 680));
        sub_23F405608(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 32));
        result = sub_23F61B530();
        *(_QWORD *)(v0 + 776) = result;
        v53 = *(_QWORD *)(result + 16);
        *(_QWORD *)(v0 + 784) = v53;
        if (v53)
        {
          *(_DWORD *)(v0 + 900) = *(_DWORD *)(*(_QWORD *)(v0 + 592) + 80);
          *(_QWORD *)(v0 + 792) = 0;
          if (*(_QWORD *)(result + 16))
          {
            v54 = *(NSObject **)(v0 + 624);
            v55 = *(_QWORD *)(v0 + 576);
            sub_23F53A88C();
            v57 = *(void (**))(v56 + 16);
            v57(v54);
            sub_23F53A7B4();
            v58 = sub_23F53A7BC();
            v57(v58);
            sub_23F40B4F0();
            v59 = sub_23F3B1A04();
            v60 = sub_23F366874(v59);
            v61 = *(_QWORD *)(v0 + 616);
            if (v60)
            {
              v62 = *(_QWORD *)(v0 + 608);
              v63 = *(_QWORD *)(v0 + 592);
              v64 = *(_QWORD *)(v0 + 584);
              v65 = (void (*)(uint64_t, uint64_t, uint64_t))v57;
              v66 = sub_23F366668();
              v129[0] = sub_23F366668();
              *(_DWORD *)v66 = 136315394;
              sub_23F53A6E4((uint64_t)"    typedValue: ");
              *(_QWORD *)(v66 + 4) = v67;
              *(_WORD *)(v66 + 12) = 2080;
              v65(v62, v61, v64);
              v68 = sub_23F61C16C();
              sub_23F482C90(v68, v69);
              *(_QWORD *)(v66 + 14) = v70;
              swift_bridgeObjectRelease();
              (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v64);
              sub_23F3E025C(&dword_23F35A000, v54, (os_log_type_t)v55, "%s Processing parameter: %s", (uint8_t *)v66);
              sub_23F507364();
              sub_23F366530();
            }
            v71 = *(_QWORD *)(v0 + 496);
            v72 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 592) + 8);
            v72(v61, *(_QWORD *)(v0 + 584));

            v73 = *(void (**)(uint64_t))(v71 + 8);
            v74 = sub_23F384AB4();
            v73(v74);
            *(_QWORD *)(v0 + 808) = v72;
            *(_QWORD *)(v0 + 800) = v73;
            sub_23F53AA00();
          }
          __break(1u);
          break;
        }
        swift_bridgeObjectRelease();
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 8))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 632));
        v90 = sub_23F3840BC();
        result = v92(v90, v91);
      }
      else
      {
        v75 = *(NSObject **)(v0 + 696);
        v76 = *(_QWORD *)(v0 + 544);
        v77 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 680) + 8);
        sub_23F53A930(*(_QWORD *)(v0 + 704));
        sub_23F53A7B4();
        sub_23F53A904();
        sub_23F40B4F0();
        v78 = sub_23F3B1BD4();
        v79 = sub_23F4F27F4(v78);
        v80 = *(_QWORD *)(v0 + 712);
        v81 = *(_QWORD *)(v0 + 696);
        if (v79)
        {
          v82 = *(_QWORD *)(v0 + 672);
          v83 = v77;
          v84 = sub_23F366668();
          v129[0] = sub_23F366668();
          *(_DWORD *)v84 = 136315394;
          sub_23F53A6E4((uint64_t)"    typedValue: ");
          v86 = sub_23F53A8DC(v85);
          ((void (*)(uint64_t))v1)(v86);
          v87 = sub_23F61C16C();
          sub_23F482C90(v87, v88);
          *(_QWORD *)(v84 + 14) = v89;
          sub_23F384120();
          v83(v81, v82);
          sub_23F53A75C(&dword_23F35A000, v75, (os_log_type_t)v76, "%s Skipping non-AppIntent tool: %s");
          sub_23F507364();
          sub_23F366530();
        }
        v1 = *(_QWORD *)(v0 + 496);

        sub_23F53A930(v81);
        sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
        result = sub_23F53A930(v80);
      }
    }
    v27 = v0 + 136;
    v30 = *(_QWORD *)(v0 + 768) + 1;
    if (v30 == *(_QWORD *)(v0 + 760))
      goto LABEL_29;
  }
  __break(1u);
  return result;
}

uint64_t sub_23F538C70(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *v2;
  (*v2)[109] = v1;
  swift_task_dealloc();
  if (v1)
  {
    v5 = v4[37];
    sub_23F39E4B8(v4[35], &qword_256E79928);
    sub_23F4062C8(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_23F362D18();
    swift_bridgeObjectRelease();
    sub_23F3837B0();
    sub_23F362984();
  }
  else
  {
    v7 = v4[37];
    v6 = v4[38];
    v8 = v4[35];
    v4[110] = a1;
    sub_23F39E4B8(v8, &qword_256E79928);
    sub_23F383E64(v6, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  }
  return swift_task_switch();
}

void sub_23F538D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD);
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  NSObject *v76;
  void (*v77)(uint64_t, uint64_t);
  os_log_type_t v78;
  _BOOL4 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  NSObject *v98;
  os_log_type_t v99;
  _BOOL4 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  uint64_t v113;
  void (*v114);
  uint64_t v115;
  os_log_type_t v116;
  _BOOL4 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, _QWORD);
  void (*v129)(uint64_t);
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  NSObject *v135;
  os_log_type_t v136;
  _BOOL4 v137;
  uint64_t v138;
  uint8_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t);
  id v144;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184[3];

  v1 = *(_QWORD *)(v0 + 872);
  v2 = *(_QWORD *)(v0 + 856);
  v3 = *(_QWORD *)(v0 + 624);
  *(_QWORD *)(swift_task_alloc() + 16) = v3;
  sub_23F368238();
  v5 = v4;
  sub_23F362D18();
  swift_task_dealloc();
  v6 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v2 + 16);
  if (__OFADD__(v7, v6))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *(_QWORD *)(v0 + 856);
  if (!isUniquelyReferenced_nonNull_native || v7 + v6 > *(_QWORD *)(v9 + 24) >> 1)
  {
    sub_23F377EA8();
    v9 = v10;
  }
  if (*(_QWORD *)(v5 + 16))
  {
    v11 = *(_QWORD *)(v9 + 16);
    v12 = (*(_QWORD *)(v9 + 24) >> 1) - v11;
    v13 = sub_23F618FEC();
    if (v12 < v6)
    {
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    v14 = *(_QWORD *)(v13 - 8);
    v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v16 = *(_QWORD *)(v14 + 72);
    v17 = v9 + v15 + v16 * v11;
    v18 = v5 + v15;
    v19 = v16 * v6;
    v20 = v17 + v19;
    v21 = v18 + v19;
    if (v18 < v20 && v17 < v21)
      goto LABEL_61;
    swift_arrayInitWithCopy();
    if (v6)
    {
      v23 = *(_QWORD *)(v9 + 16);
      v24 = __OFADD__(v23, v6);
      v25 = v23 + v6;
      if (v24)
      {
LABEL_60:
        __break(1u);
LABEL_61:
        sub_23F61CA9C();
        sub_23F3B1EC4();
        return;
      }
      *(_QWORD *)(v9 + 16) = v25;
    }
  }
  else if (v6)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v163 = v1;
  v173 = v9;
  v26 = *(_QWORD *)(v0 + 848);
  v171 = (_QWORD *)(v0 + 16);
  v172 = (_QWORD *)(v0 + 136);
  v182 = *(_QWORD *)(v0 + 824);
  v165 = (_QWORD *)(v0 + 192);
  v27 = *(_QWORD *)(v0 + 376);
  v177 = *(_QWORD *)(v0 + 384);
  v29 = *(_QWORD *)(v0 + 360);
  v28 = *(NSObject **)(v0 + 368);
  v30 = *(_QWORD *)(v0 + 352);
  v31 = *(_QWORD *)(v0 + 328);
  v32 = *(_QWORD *)(v0 + 336);
  swift_bridgeObjectRelease();
  sub_23F38456C(v32, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
  sub_23F3D98EC(v29, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
  (*(void (**)(uint64_t, NSObject *))(v27 + 8))(v177, v28);
  sub_23F53A774();
  if (v26 + 1 == v182)
  {
    swift_bridgeObjectRelease();
    v33 = v0;
LABEL_26:
    v71 = *(_QWORD *)(v33 + 784);
    v72 = *(_QWORD *)(v33 + 792) + 1;
    (*(void (**)(_QWORD, _QWORD))(v33 + 808))(*(_QWORD *)(v33 + 624), *(_QWORD *)(v33 + 584));
    if (v72 == v71)
    {
      while (2)
      {
        swift_bridgeObjectRelease();
        v73 = *(_QWORD *)(v33 + 680);
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v33 + 640) + 8))(*(_QWORD *)(v33 + 656), *(_QWORD *)(v33 + 632));
        sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v73 + 8));
        while (1)
        {
          while (1)
          {
            v91 = *(_QWORD *)(v33 + 768) + 1;
            if (v91 == *(_QWORD *)(v33 + 760))
            {
              swift_bridgeObjectRelease();
              if (*(_QWORD *)(v173 + 16))
              {
                sub_23F618F98();
                sub_23F618F14();
                sub_23F618F20();
                sub_23F618F44();
                sub_23F618F38();
                sub_23F618F44();
                sub_23F618F2C();
                sub_23F618F74();
                sub_23F618F68();
                sub_23F53AA08();
                v131 = objc_allocWithZone((Class)sub_23F53AA14());
                sub_23F53A954();
                sub_23F53A774();
                _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v172);
                v132 = *(_QWORD *)(v33 + 40);
                v133 = *(_QWORD *)(v33 + 48);
                v134 = (uint64_t)v171;
                sub_23F53A994();
              }
              else
              {
                swift_bridgeObjectRelease();
                sub_23F52E6C0();
                v135 = sub_23F619E8C();
                v136 = sub_23F61C61C();
                v137 = sub_23F53A914(v136);
                v138 = *(_QWORD *)(v33 + 496);
                if (v137)
                {
                  v139 = (uint8_t *)sub_23F366668();
                  v140 = sub_23F366668();
                  sub_23F53A924(v140);
                  *(_DWORD *)v139 = 136315138;
                  sub_23F53A6E4((uint64_t)"    typedValue: ");
                  *v165 = v141;
                  sub_23F61C790();
                  sub_23F38485C(&dword_23F35A000, v135, (os_log_type_t)v29, "%s Didin't find any dynamicEnumerationEntities, return qdOutput as-is", v139);
                  sub_23F3B17D4();
                  sub_23F366530();
                }

                sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v138 + 8));
                v142 = sub_23F3840BC();
                v143(v142);
                v134 = (uint64_t)v171;
                v144 = *(id *)(v33 + 264);
                _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v172);
                v132 = *(_QWORD *)(v33 + 40);
                v133 = *(_QWORD *)(v33 + 48);
                sub_23F53A994();
              }
              (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v132, v133);
              _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v134);
              sub_23F366698();
              sub_23F3666A0();
              sub_23F3666C4();
              sub_23F3666DC();
              sub_23F366708();
              sub_23F383898();
              sub_23F383978();
              sub_23F383970();
              sub_23F383890();
              sub_23F383888();
              sub_23F383880();
              sub_23F383878();
              sub_23F383870();
              sub_23F383868();
              sub_23F383C4C();
              sub_23F383C44();
              sub_23F383C3C();
              sub_23F383C34();
              sub_23F383C2C();
              sub_23F383C24();
              sub_23F383C1C();
              sub_23F383C14();
              sub_23F383C0C();
              sub_23F383C04();
              sub_23F383BFC();
              sub_23F383BF4();
              sub_23F383BEC();
              sub_23F383B14();
              sub_23F383B0C();
              sub_23F383B04();
              sub_23F383C54();
              sub_23F383AFC();
              sub_23F383AF4();
              sub_23F383AEC();
              sub_23F383AE4();
              sub_23F383ADC();
              sub_23F383AD4();
              sub_23F3B1EC4();
              __asm { BR              X1 }
            }
            *(_QWORD *)(v33 + 768) = v91;
            v92 = *(_QWORD *)(v33 + 752);
            if (v91 >= *(_QWORD *)(v92 + 16))
            {
              __break(1u);
              goto LABEL_55;
            }
            v93 = *(_QWORD *)(v33 + 664);
            v94 = v92 + 16 * v91;
            v96 = *(_QWORD *)(v94 + 32);
            v95 = *(_QWORD *)(v94 + 40);
            sub_23F3668F4();
            sub_23F61B314();
            sub_23F389920(v93);
            if (!v97)
              break;
            v98 = *(NSObject **)(v33 + 536);
            sub_23F39E4B8(*(_QWORD *)(v33 + 664), &qword_256E70220);
            sub_23F52E6C0();
            sub_23F3668F4();
            sub_23F619E8C();
            v99 = sub_23F3B1A04();
            v100 = os_log_type_enabled(v98, v99);
            v29 = *(_QWORD *)(v33 + 488);
            v101 = *(_QWORD *)(v33 + 496);
            if (v100)
            {
              v102 = sub_23F366668();
              v103 = sub_23F366668();
              sub_23F53A8AC(v103);
              sub_23F37AE00(0xD000000000000037, 0x800000023F638DC0, v184);
              *(_QWORD *)(v102 + 4) = v104;
              *(_WORD *)(v102 + 12) = 2080;
              sub_23F3668F4();
              sub_23F37AE00(v96, v95, v184);
              sub_23F53A8CC(v105);
              sub_23F53A75C(&dword_23F35A000, v98, v99, "%s tool not found: %s, skip it");
              swift_arrayDestroy();
              sub_23F366530();
            }
            sub_23F384A80();

            sub_23F4062C8(*(uint64_t (**)(uint64_t, uint64_t))(v101 + 8));
          }
          v106 = *(_DWORD *)(v33 + 888);
          v107 = *(_QWORD *)(v33 + 712);
          v108 = *(_QWORD *)(v33 + 680);
          v28 = *(NSObject **)(v33 + 664);
          sub_23F362D18();
          sub_23F383C64(v107, (uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 32));
          v29 = *(_QWORD *)(v108 + 16);
          sub_23F53A87C();
          v109 = sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v108 + 88));
          if (v109 == v106)
            break;
          v76 = *(NSObject **)(v33 + 696);
          v77 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 + 680) + 8);
          v77(*(_QWORD *)(v33 + 704), *(_QWORD *)(v33 + 672));
          sub_23F53A7B4();
          sub_23F53A904();
          sub_23F40B4F0();
          v78 = sub_23F3B1BD4();
          v79 = os_log_type_enabled(v76, v78);
          v80 = *(_QWORD *)(v33 + 712);
          v81 = *(_QWORD *)(v33 + 696);
          if (v79)
          {
            v82 = *(_QWORD *)(v33 + 672);
            v83 = sub_23F366668();
            v84 = sub_23F366668();
            sub_23F53A8AC(v84);
            sub_23F53A6E4((uint64_t)"    typedValue: ");
            v86 = sub_23F53A8DC(v85);
            ((void (*)(uint64_t))v29)(v86);
            v87 = sub_23F61C16C();
            sub_23F482C90(v87, v88);
            *(_QWORD *)(v83 + 14) = v89;
            sub_23F384120();
            v77(v81, v82);
            sub_23F53A75C(&dword_23F35A000, v76, v78, "%s Skipping non-AppIntent tool: %s");
            sub_23F507364();
            sub_23F366530();
          }
          v90 = *(_QWORD *)(v33 + 672);
          v29 = *(_QWORD *)(v33 + 496);

          v77(v81, v90);
          sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
          v77(v80, v90);
        }
        v110 = *(_QWORD *)(v33 + 640);
        sub_23F3B13E4(*(_QWORD *)(v33 + 680));
        sub_23F405608(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 32));
        v75 = sub_23F61B530();
        *(_QWORD *)(v33 + 776) = v75;
        v111 = *(_QWORD *)(v75 + 16);
        *(_QWORD *)(v33 + 784) = v111;
        if (!v111)
          continue;
        break;
      }
      v74 = 0;
      *(_DWORD *)(v33 + 900) = *(_DWORD *)(*(_QWORD *)(v33 + 592) + 80);
    }
    else
    {
      v74 = *(_QWORD *)(v33 + 792) + 1;
      v75 = *(_QWORD *)(v33 + 776);
    }
    *(_QWORD *)(v33 + 792) = v74;
    if (v74 < *(_QWORD *)(v75 + 16))
    {
      v112 = *(NSObject **)(v33 + 624);
      sub_23F53A88C();
      v114 = *(void (**))(v113 + 16);
      v114(v112);
      sub_23F53A7B4();
      v115 = sub_23F53A7BC();
      v114(v115);
      sub_23F40B4F0();
      v116 = sub_23F3B1A04();
      v117 = sub_23F3B1E8C(v116);
      v118 = *(_QWORD *)(v33 + 616);
      if (v117)
      {
        v119 = *(_QWORD *)(v33 + 608);
        v120 = *(_QWORD *)(v33 + 592);
        v121 = *(_QWORD *)(v33 + 584);
        v122 = sub_23F366668();
        v184[0] = sub_23F366668();
        *(_DWORD *)v122 = 136315394;
        sub_23F53A6E4((uint64_t)"    typedValue: ");
        *(_QWORD *)(v122 + 4) = v123;
        *(_WORD *)(v122 + 12) = 2080;
        ((void (*)(uint64_t, uint64_t, uint64_t))v114)(v119, v118, v121);
        v124 = sub_23F61C16C();
        sub_23F482C90(v124, v125);
        *(_QWORD *)(v122 + 14) = v126;
        sub_23F3837B0();
        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v118, v121);
        sub_23F3E025C(&dword_23F35A000, v112, (os_log_type_t)v28, "%s Processing parameter: %s", (uint8_t *)v122);
        sub_23F507364();
        sub_23F366530();
      }
      v127 = *(_QWORD *)(v33 + 496);
      v128 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v33 + 592) + 8);
      v128(v118, *(_QWORD *)(v33 + 584));

      v129 = *(void (**)(uint64_t))(v127 + 8);
      v130 = sub_23F384AB4();
      v129(v130);
      *(_QWORD *)(v33 + 808) = v128;
      *(_QWORD *)(v33 + 800) = v129;
      sub_23F53AA00();
    }
    __break(1u);
    goto LABEL_57;
  }
  v34 = *(_QWORD *)(v0 + 848) + 1;
  v35 = *(void (**)(_QWORD))(v0 + 840);
  v36 = *(_QWORD *)(v0 + 832);
  v37 = *(_BYTE *)(v0 + 904);
  v38 = *(_QWORD *)(v0 + 400);
  v33 = v0;
  *(_QWORD *)(v0 + 856) = v173;
  *(_QWORD *)(v0 + 848) = v34;
  v39 = *(_DWORD *)(v0 + 896);
  ((void (*)(_QWORD, unint64_t, _QWORD))v35)(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 816) + ((v37 + 32) & ~(unint64_t)v37) + v36 * v34, *(_QWORD *)(v0 + 392));
  v40 = sub_23F53A7BC();
  v35(v40);
  if (sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 88)) != v39)
  {
    v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 840);
    v51 = *(NSObject **)(v33 + 560);
    v52 = *(_QWORD *)(v33 + 432);
    v53 = *(_QWORD *)(v33 + 416);
    v54 = *(_QWORD *)(v33 + 392);
    v55 = *(_QWORD *)(v33 + 400);
    swift_bridgeObjectRelease();
    v56 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    sub_23F53A97C();
    sub_23F52E6C0();
    v50(v53, v52, v54);
    sub_23F619E8C();
    v57 = sub_23F3B1A04();
    if (os_log_type_enabled(v51, v57))
    {
      v175 = *(void (**)(uint64_t))(v33 + 840);
      v58 = *(_QWORD *)(v33 + 416);
      v59 = *(_QWORD *)(v33 + 392);
      v60 = sub_23F366668();
      v184[0] = sub_23F366668();
      *(_DWORD *)v60 = 136315394;
      sub_23F53A6E4((uint64_t)"    typedValue: ");
      *(_QWORD *)(v33 + 216) = v61;
      sub_23F61C790();
      *(_WORD *)(v60 + 12) = 2080;
      v62 = sub_23F384AB4();
      v175(v62);
      v63 = sub_23F61C16C();
      sub_23F482C90(v63, v64);
      *(_QWORD *)(v33 + 224) = v65;
      sub_23F61C790();
      sub_23F362D18();
      v56(v58, v59);
      sub_23F53A75C(&dword_23F35A000, v51, v57, "%s Skip non .inSet RestrictionContext: %s");
      sub_23F507364();
      sub_23F366530();
    }
    v66 = *(void (**)(uint64_t))(v33 + 800);
    v67 = *(_QWORD *)(v33 + 432);
    v28 = *(NSObject **)(v33 + 416);
    v29 = *(_QWORD *)(v33 + 392);

    sub_23F53A874((uint64_t)v28);
    v68 = sub_23F384AB4();
    v66(v68);
    sub_23F53A874(v67);
    goto LABEL_26;
  }
  v41 = *(_QWORD *)(v0 + 400);
  v42 = *(_QWORD *)(v0 + 376);
  v28 = *(NSObject **)(v33 + 344);
  v43 = *(_QWORD *)(v33 + 312);
  v183 = *(_QWORD *)(v33 + 320);
  sub_23F3B13E4(v41);
  sub_23F35D2E8(&qword_256E77B08);
  sub_23F405608(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 32));
  sub_23F53A838();
  sub_23F53A9E8();
  if (sub_23F36195C(v43, 1, v183) == 1)
  {
    v44 = swift_bridgeObjectRelease();
    sub_23F53AA3C(v44, &qword_256E79930);
    sub_23F52E6C0();
    sub_23F619E8C();
    v45 = sub_23F384988();
    v46 = os_log_type_enabled(v28, v45);
    v47 = *(_QWORD *)(v33 + 376);
    v29 = *(_QWORD *)(v33 + 384);
    if (v46)
    {
      v48 = (uint8_t *)sub_23F366668();
      v184[0] = sub_23F366668();
      *(_DWORD *)v48 = 136315138;
      sub_23F53A6E4((uint64_t)"    typedValue: ");
      *(_QWORD *)(v33 + 232) = v49;
      sub_23F53A9F4();
      sub_23F38485C(&dword_23F35A000, v28, v45, "%s Skip template w/o .valid predicate", v48);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F53A8A4();
    sub_23F53A9D4();
    sub_23F3D98EC(v29, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
    v69 = sub_23F384AB4();
    v70(v69);
    goto LABEL_26;
  }
  v146 = *(_QWORD *)(v33 + 656);
  v147 = *(_QWORD *)(v33 + 648);
  v148 = *(_QWORD *)(v33 + 640);
  sub_23F53A9E0(*(_QWORD *)(v33 + 328));
  sub_23F35EA9C(v172, *(_QWORD *)(v33 + 160));
  sub_23F384840(v147, v146, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v148 + 16));
  sub_23F35D2E8(&qword_256E79938);
  sub_23F61BFEC();
  sub_23F61B5E4();
  if (v163)
  {
    v181 = *(void (**)(uint64_t, uint64_t))(v33 + 808);
    v178 = *(_QWORD *)(v33 + 736);
    v179 = *(_QWORD *)(v33 + 728);
    v180 = *(_QWORD *)(v33 + 744);
    v168 = *(_QWORD *)(v33 + 680);
    v169 = *(_QWORD *)(v33 + 672);
    v170 = *(_QWORD *)(v33 + 712);
    v164 = *(_QWORD *)(v33 + 640);
    v166 = *(_QWORD *)(v33 + 632);
    v167 = *(_QWORD *)(v33 + 656);
    v174 = *(_QWORD *)(v33 + 584);
    v176 = *(_QWORD *)(v33 + 624);
    v149 = *(_QWORD *)(v33 + 400);
    v150 = *(_QWORD *)(v33 + 376);
    v151 = *(_QWORD *)(v33 + 360);
    v152 = v33;
    v153 = *(_QWORD *)(v33 + 352);
    sub_23F53A7F8();
    sub_23F38456C(v151, *(uint64_t (**)(uint64_t, uint64_t))(v153 + 8));
    sub_23F4062C8(*(uint64_t (**)(uint64_t, uint64_t))(v150 + 8));
    sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v149 + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v167, v166);
    (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v170, v169);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v180, v179);
    v181(v176, v174);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v172);
    sub_23F53A6F8();
    v155 = *(_QWORD *)(v33 + 40);
    v154 = *(_QWORD *)(v152 + 48);
    sub_23F35EA9C(v171, *(_QWORD *)(v152 + 40));
    (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v155, v154);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v171);
    sub_23F3666D4();
    sub_23F3666C4();
    sub_23F366698();
    sub_23F3666E4();
    sub_23F366708();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383C2C();
    sub_23F383C24();
    sub_23F383C1C();
    sub_23F383C14();
    sub_23F383C0C();
    sub_23F383C04();
    sub_23F383BFC();
    sub_23F383BF4();
    sub_23F383BEC();
    sub_23F383B14();
    sub_23F383B04();
    sub_23F383C54();
    sub_23F383AFC();
    sub_23F383AF4();
    sub_23F383AEC();
    sub_23F383AE4();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F3B1EC4();
    __asm { BR              X0 }
  }
LABEL_55:
  v157 = *(_QWORD *)(v33 + 328);
  v158 = *(_QWORD *)(v33 + 336);
  *(_QWORD *)(v33 + 80) = *(_QWORD *)(v33 + 320);
  sub_23F3612C0(&qword_256E79940, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D58], MEMORY[0x24BEB9D50]);
  *(_QWORD *)(v33 + 88) = v159;
  v160 = sub_23F36145C((uint64_t *)(v33 + 56));
  sub_23F384840((uint64_t)v160, v158, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v157 + 16));
  sub_23F53A808();
  v161 = sub_23F61BD70();
  sub_23F53A84C(v161);
  v162 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v33 + 864) = v162;
  *v162 = v33;
  v162[1] = sub_23F538C70;
  sub_23F53AA1C(*(_QWORD *)(v33 + 384));
  sub_23F3B1EC4();
  sub_23F61B008();
}

uint64_t sub_23F53A314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);

  v19 = *(void (**)(uint64_t, uint64_t))(v0 + 808);
  sub_23F53A964();
  v15 = *(_QWORD *)(v0 + 672);
  v16 = *(_QWORD *)(v0 + 712);
  v13 = *(_QWORD *)(v0 + 656);
  v14 = *(_QWORD *)(v0 + 680);
  v11 = *(_QWORD *)(v0 + 640);
  v12 = *(_QWORD *)(v0 + 632);
  v17 = *(_QWORD *)(v0 + 584);
  v18 = *(_QWORD *)(v0 + 624);
  v1 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 384);
  v5 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v0 + 352);
  sub_23F53A7F8();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  sub_23F53A7E8();
  v19(v18, v17);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 48);
  sub_23F35EA9C((_QWORD *)(v0 + 16), v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F3666D4();
  sub_23F3666DC();
  sub_23F3666A0();
  sub_23F366698();
  sub_23F3666E4();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383C54();
  swift_task_dealloc();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F53A5E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_23F61B92C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B95C();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24266F0AC](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  return sub_23F618FC8();
}

uint64_t sub_23F53A6C8(uint64_t a1)
{
  return sub_23F53A5E0(a1);
}

void sub_23F53A6E4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F37AE00(0xD000000000000037, a1 | 0x8000000000000000, (uint64_t *)(v1 - 96));
}

void sub_23F53A75C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_23F53A768(uint64_t a1)
{
  return sub_23F3EEF5C(15, a1);
}

uint64_t sub_23F53A774()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 136) + 8))(*(_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 128));
}

uint64_t sub_23F53A784()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
  return *(_QWORD *)(v0 + 48) + *(_QWORD *)(*(_QWORD *)(v2 - 168) + 72) * v1;
}

uint64_t sub_23F53A7B4()
{
  return sub_23F6190E8();
}

uint64_t sub_23F53A7BC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F53A7CC()
{
  return sub_23F61C790();
}

uint64_t sub_23F53A7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 176))(a1, a2, v2);
}

uint64_t sub_23F53A7E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 120) + 8))(*(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 112));
}

uint64_t sub_23F53A7F8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[41] + 8))(v0[42], v0[40]);
}

uint64_t sub_23F53A808()
{
  return sub_23F61BD64();
}

void sub_23F53A820()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = v0;
  *(_QWORD *)(v1 - 112) = 0x8000000000000000;
  sub_23F375AB4();
}

uint64_t sub_23F53A838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v0, v3, v1);
}

uint64_t sub_23F53A84C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(v1, 0, 1, a1);
}

uint64_t sub_23F53A860()
{
  return sub_23F61CA18();
}

uint64_t sub_23F53A874(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F53A87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v0, v2);
}

uint64_t sub_23F53A8A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 112))();
}

__n128 sub_23F53A8AC(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;
  __n128 result;

  *(_QWORD *)(v2 - 96) = a1;
  result = *(__n128 *)(v2 - 112);
  *v1 = result.n128_u32[0];
  return result;
}

uint64_t sub_23F53A8BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 256), v1);
}

uint64_t sub_23F53A8CC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 14) = a1;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F53A8DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 4) = a1;
  *(_WORD *)(v2 + 12) = 2080;
  return v1;
}

uint64_t sub_23F53A8F4()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 112) = *(_QWORD *)(v0 - 144);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F53A904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

BOOL sub_23F53A914(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F53A924(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = result;
  return result;
}

uint64_t sub_23F53A930(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F53A954()
{
  return sub_23F618F80();
}

void sub_23F53A964()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[93];
  *(_QWORD *)(v1 - 120) = v0[92];
  *(_QWORD *)(v1 - 112) = v0[91];
  *(_QWORD *)(v1 - 104) = v2;
}

uint64_t sub_23F53A97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

void sub_23F53A988(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_23F37AE00(0xD000000000000032, a2, a3);
}

_QWORD *sub_23F53A994()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_23F35EA9C(v0, v1);
}

uint64_t sub_23F53A9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F53A9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return *(_QWORD *)(v0 + 56) + v1 * *(_QWORD *)(v2 - 184);
}

uint64_t sub_23F53A9D4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 136), *(_QWORD *)(v1 - 144));
}

uint64_t sub_23F53A9E0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_23F53A9E8()
{
  return sub_23F61BA10();
}

uint64_t sub_23F53A9F4()
{
  return sub_23F61C790();
}

void sub_23F53AA00()
{
  JUMPOUT(0x24266F0ACLL);
}

uint64_t sub_23F53AA08()
{
  return sub_23F618EFC();
}

uint64_t sub_23F53AA14()
{
  return sub_23F618FA4();
}

uint64_t sub_23F53AA1C@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_23F53AA30()
{
  return swift_release_n();
}

void sub_23F53AA3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F39E4B8(v2, a2);
}

uint64_t sub_23F53AA44()
{
  return swift_projectBox();
}

uint64_t sub_23F53AA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t (*v33)(_QWORD, uint64_t);
  uint64_t v34;

  return v33(*(_QWORD *)(v34 - 136), a33);
}

void sub_23F53AA68(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  void (*v38)(uint64_t);
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v46 = a3;
  v45 = sub_23F543800(a1, a2, a3);
  v9 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  sub_23F3834D0();
  v43 = v10;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F383780();
  v44 = v12;
  v13 = sub_23F39C56C();
  v14 = a4(v13);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v37 - v16;
  v18 = *(_QWORD *)(a1 + 16);
  if (v18)
  {
    v37[1] = v5;
    v38 = a5;
    v50 = MEMORY[0x24BEE4AF8];
    ((void (*)(_QWORD, uint64_t, _QWORD))a5)(0, v18, 0);
    sub_23F383EB8();
    v20 = a1 + v19;
    v21 = *(_QWORD *)(v9 + 72);
    v39 = *(void (**)(uint64_t))(v15 + 16);
    v40 = v21;
    v41 = v14;
    v42 = v15;
    v22 = v39;
    do
    {
      v48 = v20;
      v49 = v18;
      v23 = v45;
      v24 = (uint64_t *)(v20 + *(int *)(v45 + 48));
      v25 = v15;
      v26 = v44;
      v22(v44);
      v28 = *v24;
      v27 = v24[1];
      v29 = v17;
      v30 = v43;
      v31 = (_QWORD *)(v43 + *(int *)(v23 + 48));
      v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32);
      v47(v43, v26, v14);
      *v31 = v28;
      v31[1] = v27;
      v32 = v29;
      ((void (*)(char *, uint64_t, uint64_t))v22)(v29, v30, v14);
      sub_23F383738();
      sub_23F3625D8(v30, v46);
      if ((sub_23F3848A8() & 1) == 0)
      {
        v33 = sub_23F384468();
        v38(v33);
        v27 = v50;
      }
      v35 = *(_QWORD *)(v27 + 16);
      v34 = *(_QWORD *)(v27 + 24);
      v15 = v42;
      v17 = v29;
      v36 = v49;
      if (v35 >= v34 >> 1)
      {
        ((void (*)(BOOL, unint64_t, uint64_t))v38)(v34 > 1, v35 + 1, 1);
        v27 = v50;
      }
      *(_QWORD *)(v27 + 16) = v35 + 1;
      v14 = v41;
      v47(v27+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v35, (uint64_t)v32, v41);
      v50 = v27;
      v20 = v48 + v40;
      v18 = v36 - 1;
    }
    while (v18);
  }
  sub_23F362870();
}

void sub_23F53AC90(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v29;

  v27 = sub_23F543800(a1, a2, a3);
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F362AAC();
  v10 = v8 - v9;
  MEMORY[0x24BDAC7A8](v11);
  sub_23F383780();
  v26 = v12;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v29 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    sub_23F383EB8();
    v15 = a1 + v14;
    v25 = *(_QWORD *)(v4 + 72);
    v16 = a4(0);
    v24 = *(_QWORD *)(v16 - 8);
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
    do
    {
      v17 = (uint64_t *)(v15 + *(int *)(v27 + 48));
      v23(v26, v15, v16);
      v19 = *v17;
      v18 = v17[1];
      v20 = (_QWORD *)(v10 + *(int *)(v27 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v10, v26, v16);
      *v20 = v19;
      v20[1] = v18;
      swift_bridgeObjectRetain_n();
      sub_23F3625D8(v10, a3);
      if ((sub_23F3848A8() & 1) == 0)
      {
        sub_23F384468();
        sub_23F37B47C();
        v20 = v29;
      }
      v21 = v20[2];
      if (v21 >= v20[3] >> 1)
      {
        sub_23F37B47C();
        v20 = v29;
      }
      v20[2] = v21 + 1;
      v22 = &v20[2 * v21];
      v22[4] = v19;
      v22[5] = v18;
      v15 += v25;
      --v13;
    }
    while (v13);
  }
  sub_23F362870();
}

uint64_t sub_23F53AE38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[2];
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v3 = sub_23F35D2E8(&qword_256E701F0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v42 = (uint64_t)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v39 - v6;
  v8 = sub_23F35D2E8(&qword_256E702C8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v43 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v39 - v11;
  v13 = sub_23F61B9EC();
  v47 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v46 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v41 = (char *)v39 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v40 = (char *)v39 - v18;
  v19 = *(_QWORD *)(a1 + 16);
  if (!v19)
    return MEMORY[0x24BEE4AF8];
  v39[1] = v1;
  v20 = *(_QWORD *)(sub_23F618D88() - 8);
  v21 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  v45 = *(_QWORD *)(v20 + 72);
  v39[0] = a1;
  sub_23F617BA0();
  v48 = MEMORY[0x24BEE4AF8];
  v22 = (uint64_t)v43;
  do
  {
    sub_23F618D64();
    v23 = sub_23F61B92C();
    if (sub_23F36195C((uint64_t)v7, 1, v23) == 1)
    {
      sub_23F36196C(v22, 1, 1, v13);
    }
    else
    {
      v24 = v42;
      sub_23F38F124((uint64_t)v7, v42, &qword_256E701F0);
      v44 = v19;
      v25 = v41;
      sub_23F61B8CC();
      v26 = v7;
      v27 = v12;
      v28 = v47;
      (*(void (**)(uint64_t, char *, uint64_t))(v47 + 16))(v22, v25, v13);
      sub_23F36196C(v22, 0, 1, v13);
      v29 = *(void (**)(char *, uint64_t))(v28 + 8);
      v12 = v27;
      v7 = v26;
      v30 = v25;
      v19 = v44;
      v29(v30, v13);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v24, v23);
    }
    sub_23F3625D8((uint64_t)v7, &qword_256E701F0);
    sub_23F3CD9FC(v22, (uint64_t)v12, &qword_256E702C8);
    if (sub_23F36195C((uint64_t)v12, 1, v13) == 1)
    {
      sub_23F3625D8((uint64_t)v12, &qword_256E702C8);
    }
    else
    {
      v31 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
      v32 = v40;
      v31(v40, v12, v13);
      v31(v46, v32, v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v33 = v48;
      }
      else
      {
        sub_23F3778B8();
        v33 = v36;
      }
      v34 = *(_QWORD *)(v33 + 16);
      if (v34 >= *(_QWORD *)(v33 + 24) >> 1)
      {
        sub_23F3778B8();
        v33 = v37;
      }
      *(_QWORD *)(v33 + 16) = v34 + 1;
      v35 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      v48 = v33;
      v31((char *)(v33 + v35 + *(_QWORD *)(v47 + 72) * v34), v46, v13);
      v22 = (uint64_t)v43;
    }
    v21 += v45;
    --v19;
  }
  while (v19);
  swift_bridgeObjectRelease();
  return v48;
}

uint64_t sub_23F53B21C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  unint64_t v39;
  _QWORD v40[3];
  char *v41;
  char *v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v11 = sub_23F61B95C();
  v54 = *(_QWORD *)(v11 - 8);
  v55 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F618BB4();
  v47 = *(_QWORD *)(v17 - 8);
  v48 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v46 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23F61B5D8();
  v45 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v44 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F618C20();
  v52 = *(_QWORD *)(v20 - 8);
  v53 = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v21);
  v51 = (char *)v40 - v24;
  v25 = MEMORY[0x24BEE4AF8];
  v56 = MEMORY[0x24BEE4AF8];
  v26 = a4 >> 1;
  if (a4 >> 1 == a3)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v25;
  }
  v40[1] = a1;
  v40[2] = v5;
  v40[0] = a2;
  v42 = v16;
  v43 = a4 >> 1;
  while (a3 < v26)
  {
    v49 = *(_QWORD *)(v52 + 72);
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, a2 + v49 * a3, v53);
    v27 = v46;
    sub_23F618BCC();
    sub_23F618B9C();
    v28 = v50;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v48);
    if (sub_23F36195C((uint64_t)v16, 1, v28) == 1)
    {
      sub_23F3625D8((uint64_t)v16, &qword_256E70238);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v44, v16, v28);
      v29 = sub_23F61B530();
      v30 = *(_QWORD *)(v29 + 16);
      if (v30)
      {
        v31 = a5;
        v32 = *(_QWORD *)(sub_23F61BBA8() - 8);
        v33 = v29 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
        v34 = *(_QWORD *)(v32 + 72);
        while (1)
        {
          MEMORY[0x24266F0AC]();
          v35 = sub_23F61B938();
          (*(void (**)(char *, uint64_t))(v54 + 8))(v13, v55);
          v36 = sub_23F540888(v31, v35);
          swift_bridgeObjectRelease();
          if ((v36 & 1) == 0)
            break;
          v33 += v34;
          if (!--v30)
          {
            swift_bridgeObjectRelease();
            a5 = v31;
            a2 = v40[0];
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v50);
        v37 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
        v37(v41, v51, v53);
        v38 = v56;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37C3B8();
          v38 = v56;
        }
        v39 = *(_QWORD *)(v38 + 16);
        if (v39 >= *(_QWORD *)(v38 + 24) >> 1)
        {
          sub_23F37C3B8();
          v38 = v56;
        }
        *(_QWORD *)(v38 + 16) = v39 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v37)(v38+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ v39 * v49, v41, v53);
        v56 = v38;
        a5 = v31;
        a2 = v40[0];
        v16 = v42;
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
LABEL_12:
      v16 = v42;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v50);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v51, v53);
LABEL_14:
    ++a3;
    v26 = v43;
    if (a3 == v43)
    {
      v25 = v56;
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

void sub_23F53B644(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD), void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v33 = a5;
  v40 = a2;
  v41 = a4;
  v8 = a1;
  v9 = sub_23F543800(a1, a2, a3);
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  v37 = (uint64_t)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3838E4();
  v36 = v13;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F543724();
  v44 = MEMORY[0x24BEE4AF8];
  v35 = *(_QWORD *)(v8 + 16);
  if (v35)
  {
    v32 = v5;
    v15 = 0;
    v34 = v8;
    v16 = v36;
    while (v15 < *(_QWORD *)(v8 + 16))
    {
      sub_23F383EB8();
      v42 = *(_QWORD *)(v17 + 72);
      v43 = v18;
      sub_23F38F124(v8 + v18 + v42 * v15, v6, a3);
      v19 = *(int *)(v39 + 48);
      v20 = (_QWORD *)(v16 + v19);
      v21 = (uint64_t *)(v6 + v19);
      v22 = v41(0);
      v23 = *(_QWORD *)(v22 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v16, v6, v22);
      v24 = *v21;
      v25 = v21[1];
      *v20 = v24;
      v20[1] = v25;
      v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      sub_23F617BA0();
      v26(v16, v22);
      sub_23F471708();
      v28 = v27;
      swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
      {
        sub_23F3CD9FC(v6, v37, a3);
        if ((sub_23F3848A8() & 1) == 0)
        {
          v29 = sub_23F384468();
          v33(v29);
          v28 = v44;
        }
        v31 = *(_QWORD *)(v28 + 16);
        v30 = *(_QWORD *)(v28 + 24);
        if (v31 >= v30 >> 1)
        {
          ((void (*)(BOOL, unint64_t, uint64_t))v33)(v30 > 1, v31 + 1, 1);
          v28 = v44;
        }
        *(_QWORD *)(v28 + 16) = v31 + 1;
        sub_23F3CD9FC(v37, v28 + v43 + v31 * v42, a3);
      }
      else
      {
        sub_23F3625D8(v6, a3);
      }
      ++v15;
      v8 = v34;
      if (v35 == v15)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    sub_23F362870();
  }
}

void sub_23F53B86C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23F35D2E8(&qword_256E79980);
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F38F964();
  v6 = v5 - v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v5 - v4, v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime28QueryDecorationRankerService__useFilteredTuplesForRanking, v2);
  sub_23F617C48();
  sub_23F383E88(v6, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F362B80();
}

void QueryDecorationRankerService.__allocating_init()()
{
  _QWORD *v0;

  type metadata accessor for ToolCandidateRanker();
  sub_23F36682C();
  v0 = sub_23F5D6CF8();
  sub_23F53B94C((uint64_t)v0);
}

void sub_23F53B94C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F61BCBC();
  v2 = sub_23F61BCB0();
  type metadata accessor for TrialManager();
  sub_23F36682C();
  sub_23F5FCDE8(1);
  v4 = v3;
  sub_23F541188();
  swift_allocObject();
  sub_23F53B9D0(10, 0, v2, v4, a1);
  sub_23F362B80();
}

uint64_t sub_23F53B9D0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  swift_defaultActor_initialize();
  sub_23F617C3C();
  sub_23F617C78();
  *(_QWORD *)(v5 + 112) = a1;
  *(_BYTE *)(v5 + 120) = a2;
  *(_QWORD *)(v5 + 128) = a3;
  *(_QWORD *)(v5 + 136) = a4;
  *(_QWORD *)(v5 + 144) = a5;
  return v5;
}

void static QueryDecorationRankerService.isEnabled()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_23F618B90();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  v5 = v4 - v3;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v4 - v3, *MEMORY[0x24BE57448], v1);
  sub_23F618B84();
  sub_23F383E88(v5, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F362B80();
}

uint64_t sub_23F53BB08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE54B98];
  v3 = sub_23F619F10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_23F53BB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6[14] = a5;
  v6[15] = v5;
  v6[12] = a3;
  v6[13] = a4;
  v6[10] = a1;
  v6[11] = a2;
  sub_23F35D2E8(&qword_256E79958);
  v6[16] = sub_23F366578();
  v7 = sub_23F618D28();
  v6[17] = v7;
  v6[18] = *(_QWORD *)(v7 - 8);
  v6[19] = sub_23F366578();
  v8 = sub_23F61BB3C();
  v6[20] = v8;
  v6[21] = *(_QWORD *)(v8 - 8);
  v6[22] = sub_23F366578();
  v9 = sub_23F618C68();
  v6[23] = v9;
  v6[24] = *(_QWORD *)(v9 - 8);
  v6[25] = sub_23F366578();
  sub_23F35D2E8(qword_256E71C50);
  v6[26] = sub_23F366578();
  v10 = sub_23F618D88();
  v6[27] = v10;
  v6[28] = *(_QWORD *)(v10 - 8);
  v6[29] = sub_23F366578();
  v11 = sub_23F61994C();
  v6[30] = v11;
  v6[31] = *(_QWORD *)(v11 - 8);
  v6[32] = sub_23F4E6230();
  v6[33] = sub_23F3E0220();
  v6[34] = sub_23F3E0220();
  v12 = sub_23F61BCE0();
  v6[35] = v12;
  v6[36] = *(_QWORD *)(v12 - 8);
  v6[37] = sub_23F366578();
  v13 = sub_23F618BB4();
  v6[38] = v13;
  v6[39] = *(_QWORD *)(v13 - 8);
  v6[40] = sub_23F4E6230();
  v6[41] = sub_23F3E0220();
  v6[42] = sub_23F3E0220();
  v14 = sub_23F61B5D8();
  v6[43] = v14;
  v6[44] = *(_QWORD *)(v14 - 8);
  v6[45] = sub_23F4E6230();
  v6[46] = sub_23F3E0220();
  v15 = sub_23F52E924();
  v6[47] = v15;
  v6[48] = *(_QWORD *)(v15 - 8);
  v6[49] = sub_23F4E6230();
  v6[50] = sub_23F3E0220();
  v16 = sub_23F619064();
  v6[51] = v16;
  v6[52] = *(_QWORD *)(v16 - 8);
  v6[53] = sub_23F366578();
  v17 = sub_23F619E98();
  v6[54] = v17;
  v6[55] = *(_QWORD *)(v17 - 8);
  v6[56] = sub_23F4E6230();
  v6[57] = sub_23F3E0220();
  return sub_23F36664C();
}

uint64_t sub_23F53BD20()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  int *v7;
  int *v8;
  int *v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, _QWORD, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t);
  __int8 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *v141;
  _QWORD *v142;
  __int8 v143;
  uint64_t v144;
  void (*v145)(uint64_t, _QWORD, uint64_t);
  os_log_type_t v146;
  uint64_t v147;
  uint8_t *v148;
  int v149;
  NSObject *log;
  int loga;
  int v152;
  uint64_t v153;
  int v154;
  int v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  int v165;
  void (*v166)(uint64_t, uint64_t, uint64_t);
  uint64_t v167;
  void (*v168)(uint64_t, uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  void (*v171)(uint64_t);
  uint64_t v172;
  uint64_t v173;
  int8x16_t v174;
  uint64_t v175;
  void (*v176)(uint64_t);
  uint64_t v177;
  uint64_t v178;

  v2 = v0[26].i64[0];
  v1 = v0[26].i64[1];
  v3 = v0[6].i64[1];
  sub_23F619130();
  sub_23F362D94(v1, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v4 = sub_23F619E8C();
  v5 = sub_23F61C61C();
  v6 = os_log_type_enabled(v4, v5);
  v7 = (int *)MEMORY[0x24BE57550];
  v8 = (int *)MEMORY[0x24BE57558];
  v9 = (int *)MEMORY[0x24BE57548];
  if (v6)
  {
    v146 = v5;
    log = v4;
    v10 = (uint8_t *)sub_23F366668();
    v177 = sub_23F366668();
    v148 = v10;
    *(_DWORD *)v10 = 136315138;
    v11 = sub_23F619040();
    v12 = *(_QWORD *)(v11 + 16);
    if (!v12)
    {
      swift_bridgeObjectRelease();
      v34 = MEMORY[0x24BEE4AF8];
LABEL_21:
      v41 = v0[26].i64[0];
      v42 = v0[26].i64[1];
      v43 = MEMORY[0x24266F8F8](v34, MEMORY[0x24BEE0D00]);
      v45 = v44;
      sub_23F384120();
      sub_23F37AE00(v43, v45, &v177);
      v0[4].i64[1] = v46;
      sub_23F61C790();
      sub_23F3837B0();
      sub_23F3B1CC8(v42, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
      _os_log_impl(&dword_23F35A000, log, v146, "toolRetrievalResponse: %s", v148, 0xCu);
      sub_23F543734();
      sub_23F366530();
    }
    v13 = v0[24].i64[0];
    v162 = v0[22].i64[0];
    v14 = v0[19].i64[1];
    v158 = v0[18].i64[0];
    v178 = MEMORY[0x24BEE4AF8];
    sub_23F5436DC();
    sub_23F383EB8();
    v16 = v11 + v15;
    v170 = *(_QWORD *)(v13 + 72);
    v166 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    v164 = *v7;
    v160 = *v8;
    v156 = *v9;
    v154 = *MEMORY[0x24BE57540];
    while (1)
    {
      v17 = v0[21].i64[0];
      v18 = v0[19].i64[0];
      v166(v0[25].i64[0], v16, v0[23].i64[1]);
      sub_23F618BCC();
      v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 88))(v17, v18);
      if (v19 != v164)
      {
        if (v19 == v160)
        {
          v27 = v0[21].i64[0];
          v28 = v0[18].i64[1];
          v29 = v0[17].i64[1];
          sub_23F4057A8(*(uint64_t (**)(uint64_t))(v14 + 96));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v158 + 32))(v28, v27, v29);
          v24 = sub_23F61BCD4();
          v26 = v30;
          v31 = sub_23F3848F0();
          v33(v31, v32);
          goto LABEL_8;
        }
        if (v19 != v156 && v19 != v154)
        {
          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0[21].i64[0], v0[19].i64[0]);
          v26 = 0x800000023F638B50;
          v24 = 0xD000000000000013;
          goto LABEL_8;
        }
      }
      v20 = v0[23].i64[0];
      v21 = v0[21].i64[1];
      (*(void (**)(uint64_t, uint64_t))(v14 + 96))(v0[21].i64[0], v0[19].i64[0]);
      v22 = sub_23F38422C();
      v23(v22);
      v24 = sub_23F61B5A8();
      v26 = v25;
      (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v20, v21);
LABEL_8:
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0[25].i64[0], v0[23].i64[1]);
      v34 = v178;
      if ((sub_23F3849CC() & 1) == 0)
      {
        sub_23F3F0E88();
        v34 = v178;
      }
      v35 = *(_QWORD *)(v34 + 16);
      if (v35 >= *(_QWORD *)(v34 + 24) >> 1)
      {
        sub_23F3F0E88();
        v34 = v178;
      }
      *(_QWORD *)(v34 + 16) = v35 + 1;
      v36 = v34 + 16 * v35;
      *(_QWORD *)(v36 + 32) = v24;
      *(_QWORD *)(v36 + 40) = v26;
      v16 += v170;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
  }
  v38 = v0[27].i64[1];
  (*(void (**)(uint64_t, uint64_t))(v0[26].i64[0] + 8))(v0[26].i64[1], v0[25].i64[1]);

  v39 = *(void (**)(uint64_t))(v38 + 8);
  v40 = sub_23F38422C();
  v39(v40);
  v0[29].i64[0] = (uint64_t)v39;
  v47 = v0[17].i64[0];
  v48 = v0[15].i64[0];
  v49 = v0[15].i64[1];
  v50 = (_QWORD *)v0[7].i64[0];
  v51 = v0[7].i64[1];
  v52 = v0[5].i64[0];
  v54 = v50[5];
  v53 = v50[6];
  v142 = v50;
  v174 = v0[6];
  v141 = v50 + 2;
  sub_23F543740(v50 + 2);
  v55 = *MEMORY[0x24BE59330];
  v56 = *(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 104);
  v0[29].i64[1] = (uint64_t)v56;
  v145 = v56;
  v56(v47, v55, v48);
  v57 = swift_task_alloc();
  *(_QWORD *)(v57 + 16) = v51;
  *(_QWORD *)(v57 + 24) = v52;
  *(int8x16_t *)(v57 + 32) = vextq_s8(v174, v174, 8uLL);
  v58 = 0;
  QueryDecorationSELFLogging.logSubComponentExecution<A>(_:_:)(v47, (void (*)(uint64_t))sub_23F54107C, v57, v54, (uint64_t)&type metadata for QueryDecorationTupleBuilderOutput, v53, (uint64_t)&v0[2].i64[1]);
  sub_23F3666E4();
  v0[30].i64[0] = *(_QWORD *)(v49 + 8);
  v59 = sub_23F3848F0();
  v60(v59);
  v61 = v0[2].i8[8];
  v62 = v0[3].i64[0];
  v0[30].i64[1] = v62;
  v63 = *(_QWORD *)(v52 + 16);
  v64 = MEMORY[0x24BEE4AF8];
  v144 = v62;
  v143 = v61;
  if (v63)
  {
    sub_23F543748();
    v66 = *(_QWORD *)(v65 + 72);
    v171 = *(void (**)(uint64_t))(v65 + 16);
    sub_23F617BA0();
    v67 = MEMORY[0x24BEE4AF8];
    v167 = v66;
    do
    {
      v68 = sub_23F38422C();
      v171(v68);
      v69 = *(_QWORD *)(sub_23F618D70() + 16);
      v70 = sub_23F618B78();
      if (v69)
      {
        sub_23F543704();
        (*(void (**)(void))(v71 + 16))();
        v72 = 0;
      }
      else
      {
        v72 = 1;
      }
      v73 = v0[13].i64[0];
      sub_23F36196C(v73, v72, 1, v70);
      sub_23F362984();
      v74 = sub_23F36195C(v73, 1, v70);
      v75 = v0[13].i64[0];
      if (v74 == 1)
      {
        sub_23F3625D8(v0[13].i64[0], qword_256E71C50);
        sub_23F5436A8();
      }
      else
      {
        v76 = sub_23F618B60();
        v78 = v77;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v75, v70);
        sub_23F5436A8();
        if ((sub_23F4890A8() & 1) == 0)
        {
          sub_23F543650();
          v67 = v81;
        }
        v79 = *(_QWORD *)(v67 + 16);
        if (v79 >= *(_QWORD *)(v67 + 24) >> 1)
        {
          sub_23F543650();
          v67 = v82;
        }
        *(_QWORD *)(v67 + 16) = v79 + 1;
        v80 = v67 + 16 * v79;
        *(_QWORD *)(v80 + 32) = v76;
        *(_QWORD *)(v80 + 40) = v78;
        v66 = v167;
      }
      v58 += v66;
      --v63;
    }
    while (v63);
    swift_bridgeObjectRelease();
    v64 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v67 = MEMORY[0x24BEE4AF8];
  }
  v0[31].i64[0] = v67;
  v83 = sub_23F619040();
  v84 = *(_QWORD *)(v83 + 16);
  if (v84)
  {
    v85 = v0[24].i64[0];
    v86 = v0[19].i64[1];
    v153 = v0[18].i64[0];
    v147 = v0[12].i64[0];
    v157 = v0[10].i64[1];
    v159 = v0[22].i64[0];
    v178 = v64;
    sub_23F5436DC();
    sub_23F383EB8();
    v88 = v83 + v87;
    v161 = *(_QWORD *)(v85 + 72);
    v163 = v85;
    v168 = *(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 16);
    v165 = *MEMORY[0x24BE57550];
    v155 = *MEMORY[0x24BE57558];
    v152 = *MEMORY[0x24BE57548];
    loga = *MEMORY[0x24BE57540];
    v149 = *MEMORY[0x24BE57568];
    while (1)
    {
      v90 = v0[20].i64[0];
      v89 = v0[20].i64[1];
      v91 = v0[19].i64[0];
      v168(v0[24].i64[1], v88, v0[23].i64[1]);
      sub_23F618BCC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16))(v90, v89, v91);
      v92 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 88))(v90, v91);
      if (v92 == v165)
        goto LABEL_47;
      if (v92 != v155)
        break;
      v93 = v0[20].i64[0];
      v94 = v0[18].i64[1];
      sub_23F4057A8(*(uint64_t (**)(uint64_t))(v86 + 96));
      sub_23F383F00(v94, v93, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v153 + 32));
      v95 = sub_23F61BCD4();
      v172 = v96;
      v175 = v95;
      sub_23F3B1CC8(v94, *(uint64_t (**)(uint64_t, uint64_t))(v153 + 8));
LABEL_49:
      v106 = v0[24].i64[1];
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v0[20].i64[1], v0[19].i64[0]);
      sub_23F362984();
      sub_23F383E64(v106, *(uint64_t (**)(uint64_t, uint64_t))(v163 + 8));
      v107 = v178;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F3F0E88();
        v107 = v178;
      }
      v58 = v175;
      v108 = *(_QWORD *)(v107 + 16);
      if (v108 >= *(_QWORD *)(v107 + 24) >> 1)
      {
        sub_23F3F0E88();
        v107 = v178;
      }
      *(_QWORD *)(v107 + 16) = v108 + 1;
      v109 = v107 + 16 * v108;
      *(_QWORD *)(v109 + 32) = v175;
      *(_QWORD *)(v109 + 40) = v172;
      v88 += v161;
      if (!--v84)
      {
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
    }
    if (v92 == v152 || v92 == loga)
    {
LABEL_47:
      v98 = v0[22].i64[1];
      v99 = v0[20].i64[0];
      v100 = v86;
      v101 = v0[11].i64[0];
      sub_23F4057A8(*(uint64_t (**)(uint64_t))(v100 + 96));
      sub_23F383F00(v98, v99, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v159 + 32));
      v102 = sub_23F61B5A8();
      v172 = v103;
      v175 = v102;
      sub_23F61B548();
      sub_23F61BB18();
      v104 = v101;
      v86 = v100;
      sub_23F383E64(v104, *(uint64_t (**)(uint64_t, uint64_t))(v157 + 8));
      v105 = *(uint64_t (**)(uint64_t, uint64_t))(v159 + 8);
    }
    else
    {
      if (v92 != v149)
        return sub_23F61CC58();
      v110 = v0[20].i64[0];
      v98 = v0[12].i64[1];
      sub_23F4057A8(*(uint64_t (**)(uint64_t))(v86 + 96));
      sub_23F383F00(v98, v110, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v147 + 32));
      v111 = sub_23F618C2C();
      v172 = v112;
      v175 = v111;
      sub_23F618C44();
      v105 = *(uint64_t (**)(uint64_t, uint64_t))(v147 + 8);
    }
    sub_23F3B1CC8(v98, v105);
    goto LABEL_49;
  }
  sub_23F362D18();
  v107 = MEMORY[0x24BEE4AF8];
LABEL_58:
  v0[31].i64[1] = v107;
  v113 = *(_QWORD *)(v0[6].i64[0] + 16);
  if (v113)
  {
    sub_23F543748();
    v115 = *(_QWORD *)(v114 + 72);
    v173 = v114;
    v176 = *(void (**)(uint64_t))(v114 + 16);
    sub_23F617BA0();
    v116 = MEMORY[0x24BEE4AF8];
    do
    {
      v117 = v0[8].i64[0];
      v118 = sub_23F38422C();
      v176(v118);
      sub_23F618D10();
      v119 = sub_23F618C8C();
      v120 = sub_23F54375C(v117);
      v121 = v0[9].i64[1];
      v122 = v0[8].i64[0];
      if (v120 == 1)
      {
        sub_23F3625D8(v0[8].i64[0], &qword_256E79958);
        sub_23F3B1CC8(v121, *(uint64_t (**)(uint64_t, uint64_t))(v173 + 8));
      }
      else
      {
        v123 = v115;
        v169 = sub_23F618C74();
        v125 = v124;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 8))(v122, v119);
        sub_23F3B1CC8(v121, *(uint64_t (**)(uint64_t, uint64_t))(v173 + 8));
        if (v125)
        {
          if ((sub_23F4890A8() & 1) == 0)
          {
            sub_23F543650();
            v116 = v129;
          }
          v127 = *(_QWORD *)(v116 + 16);
          v126 = *(_QWORD *)(v116 + 24);
          if (v127 >= v126 >> 1)
          {
            sub_23F3B1A80(v126);
            sub_23F543650();
            v116 = v130;
          }
          *(_QWORD *)(v116 + 16) = v127 + 1;
          v128 = v116 + 16 * v127;
          *(_QWORD *)(v128 + 32) = v169;
          *(_QWORD *)(v128 + 40) = v125;
        }
        v115 = v123;
      }
      v58 += v115;
      --v113;
    }
    while (v113);
    swift_bridgeObjectRelease();
  }
  else
  {
    v116 = MEMORY[0x24BEE4AF8];
  }
  v0[32].i64[0] = v116;
  v131 = v0[16].i64[1];
  v132 = v0[15].i64[0];
  v134 = v0[7].i64[0];
  v133 = v0[7].i64[1];
  v135 = v142[5];
  v136 = v142[6];
  sub_23F35EA9C(v141, v135);
  v145(v131, *MEMORY[0x24BE59358], v132);
  v137 = swift_task_alloc();
  v0[32].i64[1] = v137;
  *(_QWORD *)(v137 + 16) = v133;
  *(_BYTE *)(v137 + 24) = v143;
  *(_QWORD *)(v137 + 32) = v144;
  *(_QWORD *)(v137 + 40) = v134;
  v138 = (_QWORD *)swift_task_alloc();
  v0[33].i64[0] = (uint64_t)v138;
  v139 = sub_23F35D2E8(&qword_256E79970);
  *v138 = v0;
  v138[1] = sub_23F53C8E4;
  return QueryDecorationSELFLogging.logSubComponentExecution<A>(_:_:)((uint64_t)v0[1].i64, v0[16].i64[1], (uint64_t)&unk_256E79968, v137, v135, v139, v136);
}

uint64_t sub_23F53C8E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 536) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2 + 480))(*(_QWORD *)(v2 + 264), *(_QWORD *)(v2 + 240));
  sub_23F3837B0();
  sub_23F3666C4();
  return sub_23F36664C();
}

uint64_t sub_23F53C96C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 32);
  v18 = *(_QWORD *)(v0 + 24);
  v20 = *(_QWORD *)(v0 + 504);
  v21 = *(_QWORD *)(v0 + 512);
  v19 = *(_QWORD *)(v0 + 496);
  v2 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 472);
  v22 = *(void (**)(uint64_t, uint64_t))(v0 + 480);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 240);
  v16 = v4;
  v14 = *(_OWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD **)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = v6[5];
  v15 = v6[6];
  sub_23F543740(v6 + 2);
  v2(v3, *MEMORY[0x24BE59338], v4);
  v10 = swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = v1;
  *(_QWORD *)(v10 + 40) = v18;
  *(_QWORD *)(v10 + 48) = v17;
  *(_QWORD *)(v10 + 56) = v6;
  *(_OWORD *)(v10 + 64) = v14;
  *(_QWORD *)(v10 + 80) = v8;
  *(_QWORD *)(v10 + 88) = v20;
  *(_QWORD *)(v10 + 96) = v19;
  *(_QWORD *)(v10 + 104) = v21;
  v11 = sub_23F618FA4();
  QueryDecorationSELFLogging.logSubComponentExecution<A>(_:_:)(v3, (void (*)(uint64_t))sub_23F541114, v10, v9, v11, v15, v0 + 56);
  sub_23F3666E4();
  v22(v3, v16);
  sub_23F541150(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F3666DC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
}

uint64_t sub_23F53CBF0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;

  v1 = *(void **)(v0 + 536);
  sub_23F61913C();
  v2 = v1;
  v3 = v1;
  v4 = sub_23F619E8C();
  v5 = sub_23F61C628();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 536);
    v7 = (uint8_t *)sub_23F366668();
    v8 = (_QWORD *)sub_23F366668();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 64) = v10;
    sub_23F61C790();
    *v8 = v10;

    _os_log_impl(&dword_23F35A000, v4, v5, "QueryDecorationService failed with underlying error %@. Original ranking will be used as fallback.", v7, 0xCu);
    sub_23F35D2E8(&qword_256E6FAB0);
    sub_23F543734();
    sub_23F366530();
  }
  sub_23F3665E8();
  sub_23F3665E8();
  v11 = *(void (**)(uint64_t))(v0 + 464);

  v12 = sub_23F3848F0();
  v11(v12);
  sub_23F619040();
  sub_23F53D9E4();
  v14 = v13;
  v33 = v16;
  v34 = v15;
  sub_23F3665E8();
  sub_23F362984();
  v32 = *(_QWORD *)(v0 + 512);
  v36 = *(_QWORD *)(v0 + 504);
  v31 = *(_QWORD *)(v0 + 496);
  v17 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 472);
  v35 = *(void (**)(uint64_t, uint64_t))(v0 + 480);
  v18 = *(_QWORD *)(v0 + 256);
  v19 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 120);
  v21 = *(_QWORD *)(v0 + 104);
  v22 = *(_QWORD **)(v0 + 112);
  v23 = *(_QWORD *)(v0 + 96);
  v29 = *(_OWORD *)(v0 + 80);
  v24 = v22[5];
  v30 = v22[6];
  sub_23F543740(v22 + 2);
  v17(v18, *MEMORY[0x24BE59338], v19);
  v25 = swift_task_alloc();
  *(_QWORD *)(v25 + 16) = v20;
  *(_QWORD *)(v25 + 24) = v21;
  *(_QWORD *)(v25 + 32) = v14;
  *(_QWORD *)(v25 + 40) = v34;
  *(_QWORD *)(v25 + 48) = v33;
  *(_QWORD *)(v25 + 56) = v22;
  *(_OWORD *)(v25 + 64) = v29;
  *(_QWORD *)(v25 + 80) = v23;
  *(_QWORD *)(v25 + 88) = v36;
  *(_QWORD *)(v25 + 96) = v31;
  *(_QWORD *)(v25 + 104) = v32;
  v26 = sub_23F618FA4();
  QueryDecorationSELFLogging.logSubComponentExecution<A>(_:_:)(v18, (void (*)(uint64_t))sub_23F541114, v25, v24, v26, v30, v0 + 56);
  sub_23F3666E4();
  v35(v18, v19);
  sub_23F541150(v14);
  sub_23F362D18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F366708();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v27);
}

uint64_t sub_23F53CFC0@<X0>(uint64_t a1@<X8>)
{
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  sub_23F619040();
  sub_23F53F904();
  v3 = v2;
  v5 = v4;
  result = swift_bridgeObjectRelease();
  *(_BYTE *)a1 = v3 & 1;
  *(_QWORD *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_23F53D044(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v9;

  v5[2] = a1;
  v5[3] = a2;
  v9 = (_QWORD *)swift_task_alloc();
  v5[4] = v9;
  *v9 = v5;
  v9[1] = sub_23F53D0B4;
  return sub_23F53E7E4(a3, a4, a5);
}

uint64_t sub_23F53D0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v8;
  _QWORD *v9;

  v8 = (_QWORD *)*v4;
  v9 = (_QWORD *)*v4;
  swift_task_dealloc();
  if (v3)
    return ((uint64_t (*)(void))v9[1])();
  v8[5] = a3;
  v8[6] = a2;
  v8[7] = a1;
  return swift_task_switch();
}

uint64_t sub_23F53D148()
{
  uint64_t v0;
  uint64_t v1;
  int8x16_t *v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(int8x16_t **)(v0 + 16);
  *v2 = vextq_s8(*(int8x16_t *)(v0 + 48), *(int8x16_t *)(v0 + 48), 8uLL);
  v2[1].i64[0] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F53D16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, char *a10, char *a11, char *a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(uint64_t, char *, uint64_t);
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t result;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char v108[8];
  char v109[8];
  char v110[8];
  char v111[8];
  char v112[8];

  v89 = a8;
  v93 = a7;
  v81 = a6;
  v103 = a4;
  v107 = a1;
  v94 = a9;
  v16 = sub_23F35D2E8(&qword_256E70F38);
  MEMORY[0x24BDAC7A8](v16);
  v88 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_23F619D48();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v82 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_23F619064();
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v87 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F35D2E8(&qword_256E700A0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F618C20();
  v100 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v106 = (char *)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v99 = (char *)&v80 - v26;
  v27 = sub_23F35D2E8(&qword_256E6FF18);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v105 = (char *)&v80 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v104 = (char *)&v80 - v31;
  v32 = sub_23F619E98();
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v80 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = a2;
  v90 = a3;
  v83 = a5;
  sub_23F53F518();
  v96 = v38;
  v97 = v36;
  v95 = v37;
  if (v36)
  {
    v39 = *(_QWORD *)(v37 + 16);
    if (v39)
    {
      v101 = v23;
      v102 = v22;
      v40 = v37 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      sub_23F5435D4(v36);
      v103 = *(_QWORD *)(v28 + 72);
      sub_23F617BA0();
      v41 = MEMORY[0x24BEE4AF8];
      v43 = v100;
      v42 = v101;
      v44 = (uint64_t)v104;
      v45 = (uint64_t)v102;
      do
      {
        v107 = v41;
        sub_23F38F124(v40, v44, &qword_256E6FF18);
        v46 = v105;
        (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v105, v44, v42);
        v47 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 32);
        v47(v45, v46, v42);
        sub_23F36196C(v45, 0, 1, v42);
        sub_23F3625D8(v44, &qword_256E6FF18);
        if (sub_23F36195C(v45, 1, v42) == 1)
        {
          sub_23F3625D8(v45, &qword_256E700A0);
          v41 = v107;
        }
        else
        {
          v48 = v99;
          v47((uint64_t)v99, (char *)v45, v42);
          v47((uint64_t)v106, v48, v42);
          v41 = v107;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F377E30();
            v41 = v50;
          }
          v49 = *(_QWORD *)(v41 + 16);
          if (v49 >= *(_QWORD *)(v41 + 24) >> 1)
          {
            sub_23F377E30();
            v41 = v51;
          }
          *(_QWORD *)(v41 + 16) = v49 + 1;
          v43 = v100;
          v47(v41+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v100 + 72) * v49, v106, v42);
        }
        v40 += v103;
        --v39;
      }
      while (v39);
    }
    else
    {
      sub_23F5435D4(v36);
      sub_23F617BA0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v55 = v87;
    v56 = v98;
  }
  else
  {
    sub_23F61913C();
    v52 = sub_23F619E8C();
    v53 = sub_23F61C628();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v54 = 0;
      _os_log_impl(&dword_23F35A000, v52, v53, "No QD re-ranked tools. Using semantically-ranked tool retrieval results", v54, 2u);
      MEMORY[0x242670B70](v54, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    sub_23F619040();
    v55 = v87;
    v56 = v98;
  }
  v105 = a11;
  v106 = a12;
  v104 = a10;
  sub_23F61901C();
  sub_23F619028();
  sub_23F619034();
  sub_23F619058();
  sub_23F619010();
  v107 = a13;
  if (v90)
  {
    v57 = v81[5];
    v58 = v81[6];
    sub_23F35EA9C(v81 + 2, v57);
    v59 = sub_23F617BA0();
    sub_23F53AA68(v59, (uint64_t)v109, &qword_256E6FF28, (uint64_t (*)(uint64_t))MEMORY[0x24BE578B8], (void (*)(uint64_t))sub_23F37BE90);
    v61 = v60;
    swift_bridgeObjectRelease();
    v62 = sub_23F617BA0();
    sub_23F53AA68(v62, (uint64_t)v108, &qword_256E6FF38, (uint64_t (*)(uint64_t))MEMORY[0x24BE577B0], (void (*)(uint64_t))sub_23F37BEC4);
    v64 = v63;
    v98 = v56;
    swift_bridgeObjectRelease();
    v65 = sub_23F619040();
    v66 = v82;
    sub_23F619D3C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v58 + 56))(v61, v64, v65, v66, v57, v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v66, v85);
  }
  v67 = (uint64_t)v88;
  if (v97)
  {
    v68 = sub_23F617BA0();
    v69 = v98;
    sub_23F53AC90(v68, (uint64_t)v112, &qword_256E6FF18, (uint64_t (*)(_QWORD))MEMORY[0x24BE57608]);
    v103 = v70;
    swift_bridgeObjectRelease();
    v71 = sub_23F617BA0();
    sub_23F53AC90(v71, (uint64_t)v111, &qword_256E6FF28, (uint64_t (*)(_QWORD))MEMORY[0x24BE578B8]);
    v102 = v72;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_23F53AC90(v96, (uint64_t)v110, &qword_256E6FF38, (uint64_t (*)(_QWORD))MEMORY[0x24BE577B0]);
    v101 = v73;
    v98 = v69;
    swift_bridgeObjectRelease();
  }
  else
  {
    v101 = 0;
    v102 = 0;
    v103 = 0;
  }
  v74 = v91;
  v75 = v55;
  v76 = v55;
  v77 = v92;
  (*(void (**)(uint64_t, char *, uint64_t))(v91 + 16))(v67, v75, v92);
  sub_23F36196C(v67, 0, 1, v77);
  objc_allocWithZone((Class)sub_23F618FA4());
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  v78 = sub_23F618F8C();
  result = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v76, v77);
  *v94 = v78;
  return result;
}

void sub_23F53D9E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[2];
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  sub_23F362ABC();
  v83 = v0;
  v2 = v1;
  v4 = v3;
  sub_23F35D2E8(&qword_256E79AC0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v88 = v6;
  v101 = sub_23F35D2E8(&qword_256E6FF38);
  v87 = *(_QWORD *)(v101 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3834D0();
  v100 = v8;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v9);
  v86 = (uint64_t)v81 - v10;
  sub_23F39C56C();
  v99 = sub_23F618D28();
  v103 = *(_QWORD *)(v99 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  v98 = v12;
  v97 = sub_23F52E924();
  v102 = *(_QWORD *)(v97 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v96 = v14;
  v15 = sub_23F35D2E8(&qword_256E6FF18);
  v94 = *(_QWORD *)(v15 - 8);
  v95 = v15;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F38F964();
  v19 = v18 - v17;
  sub_23F35D2E8(&qword_256E79AC8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F38F964();
  v23 = v22 - v21;
  v93 = sub_23F35D2E8(&qword_256E6FF28);
  v85 = *(_QWORD *)(v93 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3834D0();
  v92 = v25;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F383780();
  v84 = v27;
  sub_23F39C56C();
  v28 = sub_23F618D88();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  sub_23F38F964();
  v32 = v31 - v30;
  v33 = *(_QWORD *)(v4 + 16);
  if (v33)
  {
    v82 = v2;
    sub_23F541188();
    sub_23F383EB8();
    v35 = v4 + v34;
    v91 = *(_QWORD *)(v29 + 72);
    v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
    v89 = v37;
    v90 = v36;
    v81[1] = v4;
    sub_23F389CDC();
    v38 = MEMORY[0x24BEE4AF8];
    do
    {
      v90(v32, v35, v28);
      sub_23F53DFD4(v32, v23);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v28);
      if (sub_23F36195C(v23, 1, v93) == 1)
      {
        sub_23F3625D8(v23, &qword_256E79AC8);
      }
      else
      {
        v39 = v84;
        sub_23F5436A0(v23, v84);
        sub_23F5436A0(v39, v92);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3DDBE4();
          sub_23F377ED0();
          v38 = v46;
        }
        v41 = *(_QWORD *)(v38 + 16);
        v40 = *(_QWORD *)(v38 + 24);
        v42 = v38;
        if (v41 >= v40 >> 1)
        {
          sub_23F54368C(v40);
          sub_23F377ED0();
          v42 = v47;
        }
        *(_QWORD *)(v42 + 16) = v41 + 1;
        v38 = v42;
        sub_23F383EB8();
        sub_23F3CD9FC(v92, v43 + v44 + *(_QWORD *)(v45 + 72) * v41, &qword_256E6FF28);
      }
      v35 += v91;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    v2 = v82;
  }
  else
  {
    v38 = MEMORY[0x24BEE4AF8];
  }
  v48 = *(_QWORD *)(v2 + 16);
  v49 = v83;
  v93 = v38;
  if (v48)
  {
    v104 = MEMORY[0x24BEE4AF8];
    sub_23F5437EC();
    sub_23F541188();
    sub_23F383EB8();
    v51 = v2 + v50;
    v53 = *(_QWORD *)(v52 + 72);
    v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16);
    do
    {
      v56 = v96;
      v55 = v97;
      v54(v96, v51, v97);
      v57 = (uint64_t *)(v19 + *(int *)(v95 + 48));
      *v57 = sub_23F53E378(v19, v56);
      v57[1] = v58;
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v56, v55);
      v59 = v104;
      if ((sub_23F3849CC() & 1) == 0)
      {
        sub_23F543674();
        v59 = v104;
      }
      v60 = *(_QWORD *)(v59 + 16);
      if (v60 >= *(_QWORD *)(v59 + 24) >> 1)
      {
        sub_23F543674();
        v59 = v104;
      }
      *(_QWORD *)(v59 + 16) = v60 + 1;
      sub_23F5436E4();
      sub_23F3CD9FC(v19, v61 + v62 * v60, &qword_256E6FF18);
      v51 += v53;
      --v48;
    }
    while (v48);
    v49 = v83;
  }
  v63 = *(_QWORD *)(v49 + 16);
  v64 = v88;
  if (v63)
  {
    sub_23F541188();
    sub_23F383EB8();
    v66 = v49 + v65;
    v68 = *(_QWORD *)(v67 + 72);
    v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16);
    sub_23F3668F4();
    v70 = MEMORY[0x24BEE4AF8];
    do
    {
      v71 = v98;
      v72 = v99;
      v69(v98, v66, v99);
      sub_23F53E440(v71, v64);
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v71, v72);
      if (sub_23F36195C(v64, 1, v101) == 1)
      {
        sub_23F3625D8(v64, &qword_256E79AC0);
      }
      else
      {
        v73 = v64;
        v74 = v86;
        sub_23F5436A0(v73, v86);
        sub_23F5436A0(v74, v100);
        if ((sub_23F3F5E54() & 1) == 0)
        {
          sub_23F3DDBE4();
          sub_23F377EBC();
          v70 = v79;
        }
        v76 = *(_QWORD *)(v70 + 16);
        v75 = *(_QWORD *)(v70 + 24);
        if (v76 >= v75 >> 1)
        {
          sub_23F54368C(v75);
          sub_23F377EBC();
          v70 = v80;
        }
        *(_QWORD *)(v70 + 16) = v76 + 1;
        sub_23F543714();
        sub_23F3CD9FC(v100, v78 + *(_QWORD *)(v77 + 72) * v76, &qword_256E6FF38);
        v64 = v88;
      }
      v66 += v68;
      --v63;
    }
    while (v63);
    swift_bridgeObjectRelease();
  }
  sub_23F362948();
}

uint64_t sub_23F53DFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v39[12];
  int v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a2;
  v3 = sub_23F618D88();
  v45 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v39[-v7];
  v9 = sub_23F619E98();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v39[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_23F35D2E8(qword_256E71C50);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v39[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_23F618D70();
  sub_23F36FE08(v16, (uint64_t)v15);
  swift_bridgeObjectRelease();
  v17 = sub_23F618B78();
  if (sub_23F36195C((uint64_t)v15, 1, v17) == 1)
  {
    v42 = v6;
    v43 = v10;
    v44 = v9;
    sub_23F3625D8((uint64_t)v15, qword_256E71C50);
    sub_23F619130();
    v18 = v45;
    v19 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v45 + 16);
    v19(v8, a1, v3);
    v20 = sub_23F619E8C();
    v21 = sub_23F61C628();
    v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v23 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v48 = v41;
      *(_DWORD *)v23 = 136315394;
      v40 = v22;
      sub_23F37AE00(0xD000000000000017, 0x800000023F638F50, &v48);
      v47 = v24;
      sub_23F61C790();
      *(_WORD *)(v23 + 12) = 2080;
      v19(v42, (uint64_t)v8, v3);
      v25 = sub_23F61C16C();
      sub_23F37AE00(v25, v26, &v48);
      v47 = v27;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v8, v3);
      _os_log_impl(&dword_23F35A000, v20, (os_log_type_t)v40, "[%s] Failed to get spanEntityId (entity: %s)", (uint8_t *)v23, 0x16u);
      v28 = v41;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v28, -1, -1);
      MEMORY[0x242670B70](v23, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v8, v3);
    }

    (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v12, v44);
    v37 = sub_23F35D2E8(&qword_256E6FF28);
    v35 = v46;
    v36 = 1;
  }
  else
  {
    v29 = sub_23F618B60();
    v30 = v46;
    v32 = v31;
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
    v33 = sub_23F35D2E8(&qword_256E6FF28);
    v34 = (uint64_t *)(v30 + *(int *)(v33 + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v30, a1, v3);
    *v34 = v29;
    v34[1] = v32;
    v35 = v30;
    v36 = 0;
    v37 = v33;
  }
  return sub_23F36196C(v35, v36, 1, v37);
}

uint64_t sub_23F53E378(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_23F618BB4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F618C20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
  sub_23F618BCC();
  RetrievedTool.Definition.toCandidateIdentifier()();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v9 = v11;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_23F53E440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_23F618D28();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v37 - v8;
  v10 = sub_23F619E98();
  v41 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F35D2E8(&qword_256E79958);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F618D10();
  v16 = sub_23F618C8C();
  v17 = sub_23F36195C((uint64_t)v15, 1, v16);
  v42 = v10;
  if (v17 == 1)
  {
    sub_23F3625D8((uint64_t)v15, &qword_256E79958);
  }
  else
  {
    v18 = sub_23F618C74();
    v20 = v19;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    if (v20)
    {
      v21 = sub_23F35D2E8(&qword_256E6FF38);
      v22 = a2;
      v23 = (uint64_t *)(a2 + *(int *)(v21 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v22, a1, v4);
      *v23 = v18;
      v23[1] = v20;
      v24 = v22;
      v25 = 0;
      v26 = v21;
      return sub_23F36196C(v24, v25, 1, v26);
    }
  }
  sub_23F619130();
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v27(v9, a1, v4);
  v28 = sub_23F619E8C();
  v29 = sub_23F61C628();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v44 = v38;
    *(_DWORD *)v30 = 136315394;
    v37 = v5;
    sub_23F37AE00(0xD000000000000023, 0x800000023F638F20, &v44);
    v43 = v31;
    v39 = a2;
    sub_23F61C790();
    *(_WORD *)(v30 + 12) = 2080;
    v27(v40, (uint64_t)v9, v4);
    v32 = sub_23F61C16C();
    sub_23F37AE00(v32, v33, &v44);
    v43 = v34;
    a2 = v39;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v4);
    _os_log_impl(&dword_23F35A000, v28, v29, "[%s] Failed to get utteranceContextId (entity: %s)", (uint8_t *)v30, 0x16u);
    v35 = v38;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v35, -1, -1);
    MEMORY[0x242670B70](v30, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }

  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v42);
  v26 = sub_23F35D2E8(&qword_256E6FF38);
  v24 = a2;
  v25 = 1;
  return sub_23F36196C(v24, v25, 1, v26);
}

uint64_t sub_23F53E7E4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t DecorationTuple;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 16) = a2;
  *(_BYTE *)(v4 + 256) = a1;
  sub_23F35D2E8(&qword_256E79AC0);
  *(_QWORD *)(v4 + 40) = sub_23F366578();
  v5 = sub_23F35D2E8(&qword_256E6FF38);
  *(_QWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 64) = sub_23F4E6230();
  *(_QWORD *)(v4 + 72) = sub_23F3E0220();
  sub_23F35D2E8(&qword_256E79AC8);
  *(_QWORD *)(v4 + 80) = sub_23F366578();
  v6 = sub_23F35D2E8(&qword_256E6FF28);
  *(_QWORD *)(v4 + 88) = v6;
  *(_QWORD *)(v4 + 96) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 104) = sub_23F4E6230();
  *(_QWORD *)(v4 + 112) = sub_23F3E0220();
  *(_QWORD *)(v4 + 120) = *(_QWORD *)(type metadata accessor for QueryDecorationTupleParameter(0) - 8);
  *(_QWORD *)(v4 + 128) = sub_23F4E6230();
  *(_QWORD *)(v4 + 136) = sub_23F3E0220();
  DecorationTuple = type metadata accessor for QueryDecorationTuple(0);
  *(_QWORD *)(v4 + 144) = DecorationTuple;
  *(_QWORD *)(v4 + 152) = *(_QWORD *)(DecorationTuple - 8);
  *(_QWORD *)(v4 + 160) = sub_23F366578();
  v8 = sub_23F35D2E8(&qword_256E6FF18);
  *(_QWORD *)(v4 + 168) = v8;
  *(_QWORD *)(v4 + 176) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 184) = sub_23F366578();
  v9 = sub_23F619D48();
  *(_QWORD *)(v4 + 192) = v9;
  *(_QWORD *)(v4 + 200) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 208) = sub_23F366578();
  return sub_23F36664C();
}

uint64_t sub_23F53E918()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 144);
  *(_QWORD *)(v0 + 216) = v1;
  if (v1)
  {
    v4 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256E79AD0 + dword_256E79AD0);
    sub_23F3D9E08();
    v2 = (_QWORD *)sub_23F3E0220();
    *(_QWORD *)(v0 + 224) = v2;
    *v2 = v0;
    v2[1] = sub_23F53EA2C;
    return v4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
  }
  else
  {
    sub_23F54379C();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0);
  }
}

uint64_t sub_23F53EA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  v5 = (_QWORD *)*v3;
  v5[29] = a1;
  v5[30] = v2;
  swift_task_dealloc();
  if (!v2)
    v5[31] = a2;
  return sub_23F3B183C();
}

void sub_23F53EA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v79 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD **)(v0 + 24);
  v7 = *(unsigned __int8 *)(v0 + 256);
  v8 = v5[5];
  v9 = v5[6];
  sub_23F35EA9C(v5 + 2, v8);
  v10 = *(_QWORD *)(v6 + 16);
  sub_23F619D3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 64))(v10, v1, v7, v3, v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v79);
  v78 = v2;
  v11 = *(_QWORD *)(v2 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  if (v11)
  {
    v13 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 176);
    v80 = *(_QWORD *)(v0 + 168);
    v82 = MEMORY[0x24BEE4AF8];
    v15 = *(_QWORD *)(v0 + 152);
    sub_23F5437EC();
    sub_23F541188();
    sub_23F383EB8();
    v17 = v13 + v16;
    v18 = *(_QWORD *)(v15 + 72);
    v19 = v82;
    do
    {
      v20 = *(_QWORD *)(v0 + 184);
      v21 = *(_QWORD *)(v0 + 160);
      sub_23F38F530(v17, v21, type metadata accessor for QueryDecorationTuple);
      v22 = (uint64_t *)(v20 + *(int *)(v80 + 48));
      *v22 = sub_23F53E378(v20, v21);
      v22[1] = v23;
      sub_23F3663AC(v21, type metadata accessor for QueryDecorationTuple);
      if ((sub_23F3849CC() & 1) == 0)
      {
        sub_23F543674();
        v19 = v82;
      }
      v25 = *(_QWORD *)(v19 + 16);
      v24 = *(_QWORD *)(v19 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_23F3B1A80(v24);
        sub_23F543674();
        v19 = v82;
      }
      v26 = *(_QWORD *)(v0 + 184);
      *(_QWORD *)(v19 + 16) = v25 + 1;
      sub_23F3CD9FC(v26, v19+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v25, &qword_256E6FF18);
      v17 += v18;
      --v11;
    }
    while (v11);
    v12 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v19 = MEMORY[0x24BEE4AF8];
  }
  sub_23F53F1C4(v19, &qword_256E6FF18, (uint64_t (*)(_QWORD))MEMORY[0x24BE57608], (void (*)(uint64_t))sub_23F37C420);
  sub_23F384120();
  v83 = v12;
  v27 = *(_QWORD *)(v78 + 16);
  if (v27)
  {
    sub_23F543704();
    v30 = v28 + v29;
    v32 = *(_QWORD *)(v31 + 72);
    sub_23F617BA0();
    v33 = v27;
    do
    {
      v34 = *(_QWORD *)(v0 + 160);
      sub_23F38F530(v30, v34, type metadata accessor for QueryDecorationTuple);
      sub_23F3668F4();
      sub_23F3663AC(v34, type metadata accessor for QueryDecorationTuple);
      sub_23F5437D4();
      v30 += v32;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    v35 = v83;
  }
  else
  {
    v35 = v12;
  }
  v36 = *(_QWORD *)(v35 + 16);
  if (v36)
  {
    v37 = *(_QWORD *)(v0 + 120);
    sub_23F541188();
    sub_23F383EB8();
    v39 = v35 + v38;
    v81 = *(_QWORD *)(v37 + 72);
    sub_23F389CDC();
    v40 = MEMORY[0x24BEE4AF8];
    do
    {
      v41 = *(_QWORD *)(v0 + 136);
      v42 = *(_QWORD *)(v0 + 80);
      sub_23F38F530(v39, v41, type metadata accessor for QueryDecorationTupleParameter);
      sub_23F53F25C(v41, v42);
      sub_23F3663AC(v41, type metadata accessor for QueryDecorationTupleParameter);
      if (sub_23F54375C(v42) == 1)
      {
        sub_23F3625D8(*(_QWORD *)(v0 + 80), &qword_256E79AC8);
      }
      else
      {
        v44 = *(_QWORD *)(v0 + 104);
        v43 = *(_QWORD *)(v0 + 112);
        sub_23F3CD9FC(*(_QWORD *)(v0 + 80), v43, &qword_256E6FF28);
        sub_23F3CD9FC(v43, v44, &qword_256E6FF28);
        if ((sub_23F4890A8() & 1) == 0)
        {
          sub_23F543790();
          v40 = v50;
        }
        v46 = *(_QWORD *)(v40 + 16);
        v45 = *(_QWORD *)(v40 + 24);
        if (v46 >= v45 >> 1)
        {
          sub_23F3B1A80(v45);
          sub_23F543790();
          v40 = v51;
        }
        *(_QWORD *)(v40 + 16) = v46 + 1;
        sub_23F383EB8();
        sub_23F3CD9FC(v49, v40 + v47 + *(_QWORD *)(v48 + 72) * v46, &qword_256E6FF28);
      }
      v39 += v81;
      --v36;
    }
    while (v36);
    sub_23F384A80();
  }
  else
  {
    sub_23F362D08();
    v40 = MEMORY[0x24BEE4AF8];
  }
  sub_23F53F1C4(v40, &qword_256E6FF28, (uint64_t (*)(_QWORD))MEMORY[0x24BE578B8], (void (*)(uint64_t))sub_23F37C488);
  sub_23F3837B0();
  v84 = MEMORY[0x24BEE4AF8];
  if (v27)
  {
    sub_23F543704();
    v54 = v52 + v53;
    v56 = *(_QWORD *)(v55 + 72);
    sub_23F617BA0();
    do
    {
      v57 = *(_QWORD *)(v0 + 160);
      sub_23F38F530(v54, v57, type metadata accessor for QueryDecorationTuple);
      sub_23F3668F4();
      sub_23F3663AC(v57, type metadata accessor for QueryDecorationTuple);
      sub_23F5437D4();
      v54 += v56;
      --v27;
    }
    while (v27);
    sub_23F384A80();
    v58 = v84;
  }
  else
  {
    swift_bridgeObjectRelease();
    v58 = MEMORY[0x24BEE4AF8];
  }
  v59 = *(_QWORD *)(v58 + 16);
  if (v59)
  {
    v60 = *(_QWORD *)(v0 + 120);
    sub_23F541188();
    sub_23F383EB8();
    v62 = v58 + v61;
    v63 = *(_QWORD *)(v60 + 72);
    sub_23F389CDC();
    v64 = MEMORY[0x24BEE4AF8];
    do
    {
      v65 = *(_QWORD *)(v0 + 128);
      v67 = *(_QWORD *)(v0 + 40);
      v66 = *(_QWORD *)(v0 + 48);
      sub_23F38F530(v62, v65, type metadata accessor for QueryDecorationTupleParameter);
      sub_23F53F3B8(v65, v67);
      sub_23F3663AC(v65, type metadata accessor for QueryDecorationTupleParameter);
      if (sub_23F36195C(v67, 1, v66) == 1)
      {
        sub_23F3625D8(*(_QWORD *)(v0 + 40), &qword_256E79AC0);
      }
      else
      {
        v69 = *(_QWORD *)(v0 + 64);
        v68 = *(_QWORD *)(v0 + 72);
        sub_23F5436A0(*(_QWORD *)(v0 + 40), v68);
        sub_23F5436A0(v68, v69);
        if ((sub_23F3849CC() & 1) == 0)
        {
          sub_23F3DDBE4();
          sub_23F377EBC();
          v64 = v75;
        }
        v71 = *(_QWORD *)(v64 + 16);
        v70 = *(_QWORD *)(v64 + 24);
        if (v71 >= v70 >> 1)
        {
          sub_23F3B1A80(v70);
          sub_23F377EBC();
          v64 = v76;
        }
        *(_QWORD *)(v64 + 16) = v71 + 1;
        sub_23F5436E4();
        sub_23F3CD9FC(v74, v72 + v73 * v71, &qword_256E6FF38);
      }
      v62 += v63;
      --v59;
    }
    while (v59);
    sub_23F384A80();
  }
  else
  {
    sub_23F362D08();
    v64 = MEMORY[0x24BEE4AF8];
  }
  sub_23F53F1C4(v64, &qword_256E6FF38, (uint64_t (*)(_QWORD))MEMORY[0x24BE577B0], (void (*)(uint64_t))sub_23F37C454);
  sub_23F384120();
  sub_23F3668FC();
  sub_23F54379C();
  sub_23F3666DC();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666C4();
  sub_23F362CC8();
  swift_task_dealloc();
  sub_23F543634();
  __asm { BR              X3 }
}

uint64_t sub_23F53F11C()
{
  uint64_t v0;

  swift_release();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F53F1C4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = a1;
  if (*(_QWORD *)(a1 + 16) > 1uLL)
  {
    v11 = sub_23F61C550();
    v8 = sub_23F3668F4();
    sub_23F53B644(v8, (uint64_t)&v11, a2, a3, a4);
    v4 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F3668F4();
  }
  return v4;
}

uint64_t sub_23F53F25C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t DecorationEntityValue;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t DecorationEntity;
  uint64_t v13;
  uint64_t v15;

  DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
  MEMORY[0x24BDAC7A8](DecorationEntityValue);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F618D88();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 + *(int *)(type metadata accessor for QueryDecorationTupleParameter(0) + 20);
  DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
  sub_23F38F530(v11 + *(int *)(DecorationEntity + 20), (uint64_t)v6, type metadata accessor for QueryDecorationEntityValue);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_23F3663AC((uint64_t)v6, type metadata accessor for QueryDecorationEntityValue);
    v13 = sub_23F35D2E8(&qword_256E6FF28);
    return sub_23F36196C(a2, 1, 1, v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    sub_23F53DFD4((uint64_t)v10, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_23F53F3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t DecorationEntityValue;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t DecorationEntity;
  uint64_t v14;
  uint64_t v15;

  DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
  MEMORY[0x24BDAC7A8](DecorationEntityValue);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F618D28();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 + *(int *)(type metadata accessor for QueryDecorationTupleParameter(0) + 20);
  DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
  sub_23F38F530(v11 + *(int *)(DecorationEntity + 20), (uint64_t)v6, type metadata accessor for QueryDecorationEntityValue);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    sub_23F53E440((uint64_t)v10, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    sub_23F3663AC((uint64_t)v6, type metadata accessor for QueryDecorationEntityValue);
    v14 = sub_23F35D2E8(&qword_256E6FF38);
    return sub_23F36196C(a2, 1, 1, v14);
  }
}

void sub_23F53F518()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t inited;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  sub_23F362ABC();
  v2 = v1;
  v59 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v64 = sub_23F35D2E8(&qword_256E6FF18);
  v66 = *(_QWORD *)(v64 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F362AAC();
  v13 = v11 - v12;
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3838E4();
  v62 = v15;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v53 - v17;
  v19 = sub_23F52E924();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3834D0();
  v63 = v21;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F383780();
  v60 = v23;
  v65 = v13;
  v58 = v7;
  if (v7)
  {
    HIDWORD(v57) = v2;
    v24 = *(_QWORD *)(v5 + 16);
    v7 = MEMORY[0x24BEE4AF8];
    if (v24)
    {
      v55 = v0;
      v56 = v9;
      v67 = MEMORY[0x24BEE4AF8];
      sub_23F617BA0();
      sub_23F37C3B8();
      sub_23F383EB8();
      v54 = v5;
      v26 = v5 + v25;
      v61 = *(_QWORD *)(v27 + 72);
      v28 = v60;
      do
      {
        sub_23F38F124(v26, (uint64_t)v18, &qword_256E6FF18);
        v29 = v62;
        (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v62, v18, v19);
        v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
        v30(v28, v29, v19);
        sub_23F5437BC();
        v7 = v67;
        if ((sub_23F3F5E54() & 1) == 0)
        {
          sub_23F3DDBE4();
          sub_23F37C3B8();
          v28 = v60;
          v7 = v67;
        }
        v31 = *(_QWORD *)(v7 + 16);
        if (v31 >= *(_QWORD *)(v7 + 24) >> 1)
        {
          sub_23F37C3B8();
          v28 = v60;
          v7 = v67;
        }
        *(_QWORD *)(v7 + 16) = v31 + 1;
        sub_23F543714();
        v30(v32 + *(_QWORD *)(v20 + 72) * v31, v28, v19);
        v67 = v7;
        v26 += v61;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      v13 = v65;
      v0 = v55;
    }
    LOBYTE(v2) = BYTE4(v57);
  }
  v33 = *(_QWORD *)(v0 + 136);
  type metadata accessor for QueryDecorationToolSelector();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v33;
  sub_23F3D9E08();
  v35 = sub_23F619040();
  sub_23F559230(v35, v7, v2 & 1, v36, v37, v38, v39, v40, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64);
  v42 = v41;
  swift_bridgeObjectRelease();
  sub_23F362D18();
  v43 = *(_QWORD *)(v42 + 16);
  if (v43)
  {
    v61 = inited;
    v67 = MEMORY[0x24BEE4AF8];
    sub_23F5437EC();
    v62 = sub_23F541188();
    sub_23F383EB8();
    v60 = v42;
    v45 = v42 + v44;
    v46 = *(_QWORD *)(v20 + 72);
    v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
    v48 = v63;
    do
    {
      v47(v48, v45, v19);
      v49 = (uint64_t *)(v13 + *(int *)(v64 + 48));
      v50 = v62;
      *v49 = sub_23F53E378(v13, v48);
      v49[1] = v51;
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v48, v19);
      if ((sub_23F3841E0() & 1) == 0)
      {
        sub_23F543674();
        v50 = v67;
      }
      v52 = *(_QWORD *)(v50 + 16);
      if (v52 >= *(_QWORD *)(v50 + 24) >> 1)
      {
        sub_23F543674();
        v50 = v67;
      }
      *(_QWORD *)(v50 + 16) = v52 + 1;
      v13 = v65;
      sub_23F3CD9FC(v65, v50+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(_QWORD *)(v66 + 72) * v52, &qword_256E6FF18);
      v45 += v46;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F362D08();
  }
  if (v58)
  {
    sub_23F389CDC();
    sub_23F3668F4();
  }
  swift_release();
  sub_23F362948();
}

void sub_23F53F904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (**v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint8_t *v44;
  char v45;
  void (*v46)(_QWORD, uint64_t);
  char v47;
  NSObject *v48;
  _BOOL4 v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (**v58)(uint64_t, uint64_t);
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  unint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, char *, uint64_t);
  uint64_t v102;
  unint64_t v103;
  NSObject *v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(uint64_t, uint64_t, uint64_t);
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  void (*v129)(_QWORD, uint64_t);
  NSObject *v130;
  int v131;
  _BOOL4 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int64_t v136;
  uint64_t v137;
  int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD v159[2];
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  NSObject *v164;
  uint64_t v165;
  void (*v166)(_QWORD, uint64_t);
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(uint64_t, char *, uint64_t);
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t (**v194)(uint64_t, uint64_t);
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;

  sub_23F362ABC();
  v198 = v2;
  v199 = v3;
  v173 = v4;
  v174 = v5;
  v175 = v6;
  v7 = sub_23F61BCE0();
  v182 = *(_QWORD *)(v7 - 8);
  v183 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v181 = v9;
  sub_23F39C56C();
  v10 = sub_23F618BB4();
  v11 = *(uint64_t (***)(uint64_t, uint64_t))(v10 - 8);
  v193 = v10;
  v194 = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3834D0();
  v188 = v13;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3838E4();
  v187 = v15;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v159 - v17;
  v19 = sub_23F61B5D8();
  v189 = *(_QWORD *)(v19 - 8);
  v190 = v19;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F3834D0();
  v178 = v21;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3838E4();
  v179 = v23;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v24);
  v180 = (unint64_t)v159 - v25;
  v195 = sub_23F52E924();
  v26 = *(_QWORD *)(v195 - 8);
  MEMORY[0x24BDAC7A8](v195);
  v191 = (uint64_t)v159 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F3838E4();
  v192 = v29;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F543724();
  v177 = sub_23F619E98();
  v31 = *(_QWORD *)(v177 - 8);
  MEMORY[0x24BDAC7A8](v177);
  sub_23F3834D0();
  v171 = v32;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F3838E4();
  v172 = v34;
  sub_23F383588();
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)v159 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)v159 - v39;
  sub_23F619130();
  sub_23F3D9E08();
  v41 = sub_23F619E8C();
  v42 = sub_23F61C61C();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)sub_23F366668();
    v170 = (unint64_t)v38;
    v44 = v43;
    *(_DWORD *)v43 = 67109120;
    sub_23F53B86C();
    LODWORD(v197) = v45 & 1;
    sub_23F61C790();
    swift_release();
    _os_log_impl(&dword_23F35A000, v41, v42, "Using filtered tools for ranking: %{BOOL}d", v44, 8u);
    sub_23F366530();
  }

  swift_release();
  v46 = *(void (**)(_QWORD, uint64_t))(v31 + 8);
  sub_23F5436BC((uint64_t)v40);
  sub_23F53B86C();
  if ((v47 & 1) == 0)
  {
    sub_23F543774();
    sub_23F55E0C8(v74, v75, v76, v77, v78, v79);
    return;
  }
  v169 = v0;
  sub_23F5437C8();
  sub_23F619130();
  sub_23F5437F4();
  swift_bridgeObjectRetain_n();
  v48 = sub_23F619E8C();
  LODWORD(v164) = sub_23F61C61C();
  v49 = os_log_type_enabled(v48, (os_log_type_t)v164);
  v166 = v46;
  if (v49)
  {
    v160 = (uint64_t)v48;
    v170 = (unint64_t)v38;
    v50 = sub_23F366668();
    v51 = sub_23F366668();
    v162 = v51;
    *(_DWORD *)v50 = 134218242;
    v196 = (char *)*((_QWORD *)v38 + 2);
    v52 = v196;
    v197 = v51;
    sub_23F54367C();
    v161 = v53;
    sub_23F61C790();
    v163 = v50;
    *(_WORD *)(v50 + 12) = 2080;
    if (!v52)
LABEL_25:
      sub_23F5437A8();
    v196 = (char *)MEMORY[0x24BEE4AF8];
    sub_23F5436DC();
    sub_23F383EB8();
    v55 = &v38[v54];
    v56 = *(_QWORD *)(v26 + 72);
    v185 = *(void (**)(uint64_t, char *, uint64_t))(v26 + 16);
    v186 = v56;
    LODWORD(v184) = *MEMORY[0x24BE57550];
    LODWORD(v176) = *MEMORY[0x24BE57558];
    LODWORD(v168) = *MEMORY[0x24BE57548];
    LODWORD(v167) = *MEMORY[0x24BE57540];
    v165 = (uint64_t)"der:toolCandidateRanker:)";
    while (1)
    {
      v185(v1, v55, v195);
      sub_23F618BCC();
      v57 = v193;
      v58 = v194;
      v59 = v194[11]((uint64_t)v18, v193);
      if (v59 == (_DWORD)v184)
        break;
      if (v59 == (_DWORD)v176)
      {
        sub_23F417108(v194[12]);
        v57 = v181;
        v60 = v182;
        v61 = sub_23F38422C();
        sub_23F383F00(v61, v62, v63);
        v64 = sub_23F61BCD4();
LABEL_16:
        v73 = v64;
        v72 = v65;
        sub_23F3B1CC8(v57, *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8));
        goto LABEL_17;
      }
      v66 = v59 == (_DWORD)v168 || v59 == (_DWORD)v167;
      v58 = v194;
      if (v66)
        break;
      sub_23F417108(v194[1]);
      v72 = v165 | 0x8000000000000000;
      v73 = 0xD000000000000013;
LABEL_17:
      sub_23F543788(v1, *(uint64_t (**)(uint64_t, _QWORD))(v26 + 8));
      if ((sub_23F3841E0() & 1) == 0)
      {
        sub_23F54360C();
        v57 = (uint64_t)v196;
      }
      v70 = *(_QWORD *)(v57 + 16);
      if (v70 >= *(_QWORD *)(v57 + 24) >> 1)
      {
        sub_23F3F0E88();
        v57 = (uint64_t)v196;
      }
      *(_QWORD *)(v57 + 16) = v70 + 1;
      v71 = v57 + 16 * v70;
      *(_QWORD *)(v71 + 32) = v73;
      *(_QWORD *)(v71 + 40) = v72;
      v55 += v186;
      if (!--v52)
        goto LABEL_25;
    }
    sub_23F417108(v58[12]);
    v60 = v189;
    v57 = v180;
    v67 = sub_23F38422C();
    sub_23F383F00(v67, v68, v69);
    v64 = sub_23F61B5A8();
    goto LABEL_16;
  }

  sub_23F384A80();
  sub_23F5436BC((uint64_t)v38);
  v80 = (uint64_t)v38;
  sub_23F5436C8();
  v82 = v81;
  sub_23F5436C8();
  v84 = v83;
  v180 = v82;
  v85 = sub_23F3EEFC8(v82, (uint64_t)v38);
  v186 = v86;
  v88 = v87;
  v90 = v89;
  sub_23F389CDC();
  sub_23F53AE38(v175);
  sub_23F369084();
  v92 = v91;
  v93 = v90 >> 1;
  v168 = v88;
  if (__OFSUB__(v90 >> 1, v88))
    goto LABEL_76;
  v167 = v90;
  v176 = (v90 >> 1) - v88;
  sub_23F54081C(v176, v80);
  v174 = v85;
  v95 = v94;
  sub_23F3668F4();
  sub_23F5437F4();
  v99 = sub_23F53B21C(v96, v97, v98, v95, v92);
  v163 = v84;
  v100 = sub_23F3EEFC8(v84, v99);
  v184 = v102;
  v185 = v101;
  v170 = v103;
  sub_23F543768();
  swift_unknownObjectRetain_n();
  v104 = sub_23F619E8C();
  v105 = sub_23F61C61C();
  if (!os_log_type_enabled(v104, (os_log_type_t)v105))
  {

    sub_23F5436FC();
    v129 = v166;
    v166(0, v177);
    sub_23F543768();
    swift_unknownObjectRetain_n();
    v130 = sub_23F619E8C();
    v131 = sub_23F61C61C();
    v132 = os_log_type_enabled(v130, (os_log_type_t)v131);
    v133 = v188;
    if (!v132)
    {

      sub_23F5436FC();
      v129(0, v177);
      v150 = *(_QWORD *)(v169 + 112);
      v151 = *(unsigned __int8 *)(v169 + 120);
      v152 = *(_QWORD *)(v169 + 128);
      v153 = swift_unknownObjectRetain();
      v154 = sub_23F510690(v153, v186, v168, v167);
      v155 = swift_unknownObjectRetain();
      sub_23F510690(v155, (uint64_t)v185, v184, v170);
      v197 = v154;
      sub_23F387804();
      sub_23F543774();
      sub_23F55E0C8(v156, v157, v158, v150, v151, v152);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_23F362D08();
      return;
    }
    LODWORD(v179) = v131;
    v165 = v100;
    v134 = sub_23F366668();
    v135 = sub_23F366668();
    v176 = v135;
    *(_DWORD *)v134 = 134218242;
    v196 = (char *)v163;
    v197 = v135;
    sub_23F54367C();
    sub_23F61C790();
    *(_WORD *)(v134 + 12) = 2080;
    v136 = v170 >> 1;
    v137 = (v170 >> 1) - v184;
    if (__OFSUB__(v170 >> 1, v184))
      goto LABEL_77;
    v172 = v134;
    if (!v137)
LABEL_73:
      sub_23F5437A8();
    v164 = v130;
    sub_23F54365C();
    if (v137 < 0)
      goto LABEL_79;
    v138 = *MEMORY[0x24BE57550];
    v139 = *MEMORY[0x24BE57558];
    LODWORD(v192) = *MEMORY[0x24BE57548];
    v180 = (unint64_t)"der:toolCandidateRanker:)";
    v140 = v184;
    LODWORD(v187) = *MEMORY[0x24BE57540];
    while (1)
    {
      if (v140 >= v136)
        goto LABEL_75;
      sub_23F5437B0((uint64_t)v185 + *(_QWORD *)(v26 + 72) * v140, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v26 + 16));
      sub_23F618BCC();
      v141 = (uint64_t)v194;
      v142 = v194[11](v133, v193);
      if (v142 == v138)
        break;
      if (v142 == v139)
      {
        sub_23F383E88(v133, *(uint64_t (**)(uint64_t, uint64_t))(v141 + 96));
        v141 = v181;
        v143 = v182;
        sub_23F362D94(v181, v133, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v182 + 32));
        v144 = sub_23F61BCD4();
LABEL_65:
        v133 = v144;
        v149 = v145;
        sub_23F383E64(v141, *(uint64_t (**)(uint64_t, uint64_t))(v143 + 8));
        goto LABEL_66;
      }
      if (v142 == (_DWORD)v192 || v142 == (_DWORD)v187)
        break;
      sub_23F383E88(v133, *(uint64_t (**)(uint64_t, uint64_t))(v141 + 8));
      v149 = v180 | 0x8000000000000000;
      sub_23F5437C8();
LABEL_66:
      sub_23F543788(v191, *(uint64_t (**)(uint64_t, _QWORD))(v26 + 8));
      if ((sub_23F3841E0() & 1) == 0)
      {
        sub_23F54360C();
        v141 = (uint64_t)v196;
      }
      v147 = *(_QWORD *)(v141 + 16);
      if (v147 >= *(_QWORD *)(v141 + 24) >> 1)
      {
        sub_23F3F0E88();
        v141 = (uint64_t)v196;
      }
      *(_QWORD *)(v141 + 16) = v147 + 1;
      v148 = v141 + 16 * v147;
      *(_QWORD *)(v148 + 32) = v133;
      *(_QWORD *)(v148 + 40) = v149;
      ++v140;
      v133 = v188;
      if (v136 == v140)
      {
        sub_23F5437F4();
        goto LABEL_73;
      }
    }
    sub_23F383E88(v133, *(uint64_t (**)(uint64_t, uint64_t))(v141 + 96));
    v143 = v189;
    v141 = v178;
    sub_23F362D94(v178, v133, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v189 + 32));
    v144 = sub_23F61B5A8();
    goto LABEL_65;
  }
  LODWORD(v161) = v105;
  v106 = sub_23F366668();
  v107 = sub_23F366668();
  v160 = v107;
  *(_DWORD *)v106 = 134218242;
  v196 = (char *)v180;
  v197 = v107;
  sub_23F54367C();
  v159[1] = v108;
  sub_23F61C790();
  v162 = v106;
  *(_WORD *)(v106 + 12) = 2080;
  v109 = v176;
  if (!v176)
    goto LABEL_49;
  v159[0] = v104;
  v165 = v100;
  sub_23F54365C();
  if (v109 < 0)
    goto LABEL_78;
  v110 = *MEMORY[0x24BE57550];
  v111 = *MEMORY[0x24BE57558];
  LODWORD(v180) = *MEMORY[0x24BE57548];
  v164 = "der:toolCandidateRanker:)";
  v112 = v168;
  LODWORD(v176) = *MEMORY[0x24BE57540];
  while (v112 < v93)
  {
    sub_23F5437B0(v186 + *(_QWORD *)(v26 + 72) * v112, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v26 + 16));
    v113 = v187;
    sub_23F618BCC();
    v114 = (uint64_t)v194;
    v115 = v194[11](v113, v193);
    if (v115 != v110)
    {
      if (v115 == v111)
      {
        sub_23F383E88(v113, *(uint64_t (**)(uint64_t, uint64_t))(v114 + 96));
        v114 = v181;
        v116 = v182;
        v122 = sub_23F38422C();
        sub_23F362D94(v122, v123, v124);
        v120 = sub_23F61BCD4();
        goto LABEL_36;
      }
      if (v115 != (_DWORD)v180 && v115 != (_DWORD)v176)
      {
        sub_23F383E88(v113, *(uint64_t (**)(uint64_t, uint64_t))(v114 + 8));
        v125 = (unint64_t)v164 | 0x8000000000000000;
        sub_23F5437C8();
        goto LABEL_37;
      }
    }
    sub_23F383E88(v113, *(uint64_t (**)(uint64_t, uint64_t))(v114 + 96));
    v116 = v189;
    v114 = v179;
    v117 = sub_23F38422C();
    sub_23F362D94(v117, v118, v119);
    v120 = sub_23F61B5A8();
LABEL_36:
    v95 = v120;
    v125 = v121;
    sub_23F383E64(v114, *(uint64_t (**)(uint64_t, uint64_t))(v116 + 8));
LABEL_37:
    sub_23F543788(v192, *(uint64_t (**)(uint64_t, _QWORD))(v26 + 8));
    if ((sub_23F3841E0() & 1) == 0)
    {
      sub_23F54360C();
      v114 = (uint64_t)v196;
    }
    v126 = *(_QWORD *)(v114 + 16);
    if (v126 >= *(_QWORD *)(v114 + 24) >> 1)
    {
      sub_23F3F0E88();
      v114 = (uint64_t)v196;
    }
    *(_QWORD *)(v114 + 16) = v126 + 1;
    v127 = v114 + 16 * v126;
    *(_QWORD *)(v127 + 32) = v95;
    *(_QWORD *)(v127 + 40) = v125;
    if (v93 == ++v112)
    {
      sub_23F5437F4();
LABEL_49:
      sub_23F5437A8();
    }
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
}

uint64_t sub_23F54081C(uint64_t result, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    sub_23F618C20();
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_23F540888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  int64_t i;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  _QWORD v38[2];
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_23F61B9EC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v38 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v44 = (char *)v38 - v12;
  v13 = *(_QWORD *)(a2 + 16);
  if (!v13)
    return 1;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return 1;
  if (v13 >= v14)
    v15 = a1;
  else
    v15 = a2;
  if (v13 >= v14)
    a1 = a2;
  v16 = *(_QWORD *)(v15 + 56);
  v40 = v15 + 56;
  v17 = -1 << *(_BYTE *)(v15 + 32);
  v38[1] = ~v17;
  if (-v17 < 64)
    v18 = ~(-1 << -(char)v17);
  else
    v18 = -1;
  v19 = v18 & v16;
  v39 = (unint64_t)(63 - v17) >> 6;
  v47 = a1 + 56;
  v43 = v15;
  sub_23F617BA0();
  v48 = a1;
  result = sub_23F617BA0();
  for (i = 0; ; i = v46)
  {
    v41 = v19;
    v42 = i;
    if (!v19)
      break;
    v45 = (v19 - 1) & v19;
    v46 = i;
    v22 = __clz(__rbit64(v19)) | (i << 6);
LABEL_28:
    v27 = v44;
    v28 = *(_QWORD *)(v5 + 72);
    v29 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v29(v44, *(_QWORD *)(v43 + 48) + v28 * v22, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v27, v4);
    if (*(_QWORD *)(v48 + 16))
    {
      v30 = v48;
      sub_23F5413C0(&qword_256E6FDB0, MEMORY[0x24BEB9D38]);
      v31 = sub_23F61C040();
      v32 = -1 << *(_BYTE *)(v30 + 32);
      v33 = v31 & ~v32;
      if (((*(_QWORD *)(v47 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) != 0)
      {
        v34 = ~v32;
        while (1)
        {
          v29(v8, *(_QWORD *)(v48 + 48) + v33 * v28, v4);
          sub_23F5413C0(&qword_256E70168, MEMORY[0x24BEB9D40]);
          v35 = sub_23F61C0A0();
          v36 = *(void (**)(char *, uint64_t))(v5 + 8);
          v36(v8, v4);
          if ((v35 & 1) != 0)
            break;
          v33 = (v33 + 1) & v34;
          if (((*(_QWORD *)(v47 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
            goto LABEL_33;
        }
        swift_bridgeObjectRelease();
        v36(v11, v4);
        v37 = 0;
        goto LABEL_36;
      }
    }
LABEL_33:
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    v19 = v45;
  }
  v23 = i + 1;
  if (__OFADD__(i, 1))
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v23 >= v39)
    goto LABEL_38;
  v24 = *(_QWORD *)(v40 + 8 * v23);
  v25 = i + 1;
  if (v24)
    goto LABEL_27;
  v25 = i + 2;
  if (i + 2 >= v39)
    goto LABEL_38;
  v24 = *(_QWORD *)(v40 + 8 * v25);
  if (v24)
    goto LABEL_27;
  v25 = i + 3;
  if (i + 3 >= v39)
    goto LABEL_38;
  v24 = *(_QWORD *)(v40 + 8 * v25);
  if (v24)
  {
LABEL_27:
    v45 = (v24 - 1) & v24;
    v46 = v25;
    v22 = __clz(__rbit64(v24)) + (v25 << 6);
    goto LABEL_28;
  }
  v26 = i + 4;
  if (i + 4 >= v39)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    v37 = 1;
LABEL_36:
    sub_23F382E18();
    return v37;
  }
  v24 = *(_QWORD *)(v40 + 8 * v26);
  if (v24)
  {
    v25 = i + 4;
    goto LABEL_27;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v39)
      goto LABEL_38;
    v24 = *(_QWORD *)(v40 + 8 * v25);
    ++v26;
    if (v24)
      goto LABEL_27;
  }
LABEL_40:
  __break(1u);
  return result;
}

void QueryDecorationRankerService.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  v0 = sub_23F35D2E8(&qword_256E79980);
  sub_23F362B6C(v0);
  swift_defaultActor_destroy();
  sub_23F362928();
}

uint64_t QueryDecorationRankerService.__deallocating_deinit()
{
  QueryDecorationRankerService.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t QueryDecorationRankerService.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F540CA4()
{
  return QueryDecorationRankerService.unownedExecutor.getter();
}

uint64_t sub_23F540CBC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  _QWORD *v6;

  v2[17] = a2;
  v5 = sub_23F35D2E8(&qword_256E6FF40);
  v2[18] = v5;
  v2[19] = *(_QWORD *)(v5 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = *(_QWORD *)(type metadata accessor for QueryDecorationTuple(0) - 8);
  v2[23] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v2[24] = v6;
  *v6 = v2;
  v6[1] = sub_23F540D90;
  return sub_23F52C55C((uint64_t)(v2 + 2), a1, a2);
}

uint64_t sub_23F540D90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 200) = v0;
  v3 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v2 + 208) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v2 + 224) = v3;
  v4 = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v2 + 240) = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v2 + 256) = v4;
  swift_task_dealloc();
  if (!v0)
    return sub_23F3B183C();
  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_23F540E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 200);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
    *(_QWORD *)(v0 + 96) = v1;
    *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 232);
    *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 248);
    sub_23F487D34(0);
    v5 = v4;
    v6 = *(_QWORD *)(v0 + 216);
    v7 = *(_QWORD *)(v0 + 224);
    v8 = *(_QWORD *)(v0 + 208);
    if (v3)
    {
      sub_23F52E4B4(v8, v6, v7);
      swift_task_dealloc();
      sub_23F362CC8();
      sub_23F3666DC();
      sub_23F543634();
      __asm { BR              X0 }
    }
    sub_23F52E4B4(v8, v6, v7);
    sub_23F383738();
    v11 = sub_23F617BA0();
    sub_23F542E38(v11);
    v31 = v12;
    sub_23F5413FC(&v31, v5);
    swift_bridgeObjectRelease();
    sub_23F362984();
    v13 = v31;
    v14 = *(_QWORD *)(v31 + 16);
    if (v14)
    {
      v15 = *(_QWORD *)(v0 + 176);
      v16 = *(_QWORD *)(v0 + 152);
      v30 = *(_QWORD *)(v0 + 144);
      v31 = v2;
      sub_23F37C4BC();
      sub_23F383EB8();
      v18 = v13 + v17;
      v19 = *(_QWORD *)(v16 + 72);
      v20 = v31;
      do
      {
        v21 = *(_QWORD *)(v0 + 184);
        v23 = *(_QWORD *)(v0 + 160);
        v22 = *(_QWORD *)(v0 + 168);
        sub_23F38F124(v18, v22, &qword_256E6FF40);
        v24 = *(int *)(v30 + 48);
        v25 = v23 + v24;
        sub_23F38F530(v22 + v24, v25, type metadata accessor for QueryDecorationTuple);
        sub_23F543128(v25, v21);
        sub_23F5437BC();
        if ((sub_23F3F5E54() & 1) == 0)
        {
          sub_23F3DDBE4();
          sub_23F37C4BC();
          v20 = v31;
        }
        v27 = *(_QWORD *)(v20 + 16);
        v26 = *(_QWORD *)(v20 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_23F3B1A80(v26);
          sub_23F37C4BC();
          v20 = v31;
        }
        *(_QWORD *)(v20 + 16) = v27 + 1;
        sub_23F543714();
        sub_23F543128(v29, v28 + *(_QWORD *)(v15 + 72) * v27);
        v18 += v19;
        --v14;
      }
      while (v14);
    }
    swift_release();
  }
  swift_task_dealloc();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F543634();
  __asm { BR              X2 }
}

uint64_t sub_23F54107C@<X0>(uint64_t a1@<X8>)
{
  return sub_23F53CFC0(a1);
}

uint64_t sub_23F541098(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23F3E013C;
  return sub_23F53D044(a1, v4, v5, v7, v6);
}

uint64_t sub_23F541114@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23F53D16C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD **)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), a1, *(char **)(v1 + 80), *(char **)(v1 + 88), *(char **)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_23F541150(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F541188()
{
  return type metadata accessor for QueryDecorationRankerService();
}

uint64_t type metadata accessor for QueryDecorationRankerService()
{
  uint64_t result;

  result = qword_256E799B0;
  if (!qword_256E799B0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23F5411C8()
{
  unint64_t v0;

  sub_23F54130C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for QueryDecorationRankerService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of QueryDecorationRankerService.telemetryTarget.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of QueryDecorationRankerService.rankQueryDecorationOutput(spans:requiredContext:utteranceContext:toolRetrievalResponse:qdContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v5 + 168)
                                                                            + *(_QWORD *)(*(_QWORD *)v5 + 168));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_23F4E4FC0;
  return v14(a1, a2, a3, a4, a5);
}

void sub_23F54130C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E799D0)
  {
    sub_23F617C3C();
    v0 = sub_23F617C90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256E799D0);
  }
}

void sub_23F541374(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  sub_23F617BA0();
  sub_23F383738();
  sub_23F389CDC();
  sub_23F362B80();
}

ValueMetadata *type metadata accessor for QueryDecorationRankerService.RankedListsOutput()
{
  return &type metadata for QueryDecorationRankerService.RankedListsOutput;
}

void sub_23F5413C0(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_23F61B9EC();
    atomic_store(MEMORY[0x242670A44](a2, v4), a1);
  }
  sub_23F362928();
}

uint64_t sub_23F5413FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v9[2];

  v4 = *(_QWORD *)(sub_23F35D2E8(&qword_256E6FF40) - 8);
  v5 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F3BCFD4();
    v5 = v6;
  }
  v7 = *(char **)(v5 + 16);
  v9[0] = (char *)(v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
  v9[1] = v7;
  sub_23F617BA0();
  sub_23F5414B8(v9, a2);
  *a1 = v5;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F5414B8(char **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  char *v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  float v30;
  float v31;
  char *v32;
  int64_t v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  int64_t v44;
  char *v45;
  char *v46;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  float v62;
  float v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  char *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  char v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  char *v140;
  unint64_t v141;
  uint64_t result;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int64_t v146;
  int64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t *v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char **v161;
  unint64_t *v162;

  v153 = sub_23F35D2E8(&qword_256E6FF40);
  v150 = *(_QWORD *)(v153 - 8);
  v5 = MEMORY[0x24BDAC7A8](v153);
  v148 = (uint64_t)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v159 = (uint64_t)&v143 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v143 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v162 = (unint64_t *)((char *)&v143 - v12);
  v161 = a1;
  v13 = (uint64_t)a1[1];
  swift_bridgeObjectRetain_n();
  v14 = sub_23F61CC04();
  if (v14 >= v13)
  {
    if ((v13 & 0x8000000000000000) == 0)
    {
      if (v13)
        sub_23F541FA8(0, v13, 1, v161, a2);
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
    goto LABEL_162;
  }
  v15 = v14;
  v152 = v2;
  sub_23F3880B0(v13 / 2);
  v144 = v16;
  v145 = v13;
  v149 = v17;
  v158 = a2;
  if (v13 > 0)
  {
    v143 = v15;
    v18 = 0;
    v155 = (unint64_t *)v11;
    v156 = a2 + 32;
    v19 = (char *)MEMORY[0x24BEE4AF8];
    v20 = v13;
    while (1)
    {
      v21 = v18;
      v22 = v18 + 1;
      if (v18 + 1 >= v20)
      {
        ++v18;
        v38 = (uint64_t)v155;
      }
      else
      {
        v23 = *v161;
        v24 = *(_QWORD *)(v150 + 72);
        v25 = v162;
        sub_23F38F124((uint64_t)&(*v161)[v24 * v22], (uint64_t)v162, &qword_256E6FF40);
        v151 = v23;
        v160 = v24;
        v26 = (uint64_t)&v23[v24 * v21];
        v27 = v155;
        sub_23F38F124(v26, (uint64_t)v155, &qword_256E6FF40);
        v28 = *v25;
        if ((*v25 & 0x8000000000000000) != 0)
          goto LABEL_158;
        v29 = *(_QWORD *)(a2 + 16);
        if (v28 >= v29)
          goto LABEL_159;
        if (*v27 >= v29)
          goto LABEL_160;
        v30 = *(float *)(v156 + 4 * v28);
        v31 = *(float *)(v156 + 4 * *v27);
        sub_23F3625D8((uint64_t)v27, &qword_256E6FF40);
        sub_23F3625D8((uint64_t)v162, &qword_256E6FF40);
        v18 = v21 + 2;
        if (v21 + 2 < v20)
        {
          v147 = v21;
          v157 = v160 * v22;
          v32 = v151;
          v154 = v160 * v18;
          while (1)
          {
            v33 = v18;
            v34 = v162;
            sub_23F38F124((uint64_t)&v32[v154], (uint64_t)v162, &qword_256E6FF40);
            sub_23F38F124((uint64_t)&v32[v157], (uint64_t)v27, &qword_256E6FF40);
            v35 = *v34;
            if ((*v34 & 0x8000000000000000) != 0)
              goto LABEL_138;
            v36 = *(_QWORD *)(a2 + 16);
            if (v35 >= v36)
              goto LABEL_139;
            if (*v27 >= v36)
              goto LABEL_140;
            v37 = *(float *)(v156 + 4 * *v27) >= *(float *)(v156 + 4 * v35);
            sub_23F3625D8((uint64_t)v27, &qword_256E6FF40);
            sub_23F3625D8((uint64_t)v162, &qword_256E6FF40);
            if (v31 < v30 == v37)
              break;
            v18 = v33 + 1;
            v32 += v160;
            if (v33 + 1 >= v20)
            {
              v18 = v20;
              v21 = v147;
              goto LABEL_18;
            }
          }
          v18 = v33;
          v21 = v147;
        }
LABEL_18:
        v38 = (uint64_t)v27;
        if (v31 < v30)
        {
          if (v18 < v21)
            goto LABEL_165;
          if (v21 < v18)
          {
            v154 = v20;
            v39 = 0;
            v40 = v160 * (v18 - 1);
            v41 = v21;
            v42 = v18 * v160;
            v43 = v41;
            v147 = v41;
            v44 = v41 * v160;
            do
            {
              if (v43 != v18 + v39 - 1)
              {
                v45 = v151;
                if (!v151)
                  goto LABEL_169;
                v46 = &v151[v44];
                v157 = (unint64_t)&v151[v40];
                sub_23F3CD9FC((uint64_t)&v151[v44], v148, &qword_256E6FF40);
                if (v44 < v40 || v46 >= &v45[v42])
                {
                  v48 = v157;
                  swift_arrayInitWithTakeFrontToBack();
                }
                else
                {
                  v48 = v157;
                  if (v44 != v40)
                    swift_arrayInitWithTakeBackToFront();
                }
                sub_23F3CD9FC(v148, v48, &qword_256E6FF40);
                v38 = (uint64_t)v155;
              }
              ++v43;
              --v39;
              v40 -= v160;
              v42 -= v160;
              v44 += v160;
            }
            while (v43 < v18 + v39);
            v21 = v147;
            v20 = v154;
          }
        }
      }
      if (v18 >= v20)
        goto LABEL_56;
      if (__OFSUB__(v18, v21))
        goto LABEL_161;
      if (v18 - v21 >= v143)
        goto LABEL_56;
      if (__OFADD__(v21, v143))
        goto LABEL_163;
      v49 = v21 + v143 >= v20 ? v20 : v21 + v143;
      if (v49 < v21)
        break;
      if (v18 == v49)
        goto LABEL_56;
      v146 = v49;
      v147 = v21;
      v151 = v19;
      v50 = *(_QWORD *)(v150 + 72);
      v160 = v50 * (v18 - 1);
      v154 = v50;
      v51 = v18 * v50;
      do
      {
        v52 = 0;
        v53 = v147;
        v157 = v18;
        while (1)
        {
          v54 = (unint64_t *)v38;
          v55 = *v161;
          v56 = v51;
          v57 = (uint64_t)&(*v161)[v51 + v52];
          v58 = v162;
          sub_23F38F124(v57, (uint64_t)v162, &qword_256E6FF40);
          v59 = (uint64_t)&v55[v160 + v52];
          v38 = (uint64_t)v54;
          sub_23F38F124(v59, (uint64_t)v54, &qword_256E6FF40);
          v60 = *v58;
          if ((*v58 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
            goto LABEL_152;
          }
          v61 = *(_QWORD *)(v158 + 16);
          if (v60 >= v61)
            goto LABEL_132;
          if (*v54 >= v61)
            goto LABEL_133;
          v62 = *(float *)(v156 + 4 * v60);
          v63 = *(float *)(v156 + 4 * *v54);
          sub_23F3625D8((uint64_t)v54, &qword_256E6FF40);
          sub_23F3625D8((uint64_t)v162, &qword_256E6FF40);
          if (v63 >= v62)
            break;
          v64 = *v161;
          if (!*v161)
            goto LABEL_167;
          v51 = v56;
          v65 = (uint64_t)&v64[v160 + v52];
          sub_23F3CD9FC((uint64_t)&v64[v56 + v52], v159, &qword_256E6FF40);
          swift_arrayInitWithTakeFrontToBack();
          sub_23F3CD9FC(v159, v65, &qword_256E6FF40);
          v38 = (uint64_t)v155;
          v52 -= v154;
          ++v53;
          v66 = v157;
          if (v157 == v53)
            goto LABEL_54;
        }
        v66 = v157;
        v51 = v56;
LABEL_54:
        v18 = v66 + 1;
        v160 += v154;
        v51 += v154;
      }
      while (v18 != v146);
      v18 = v146;
      v19 = v151;
      v21 = v147;
LABEL_56:
      if (v18 < v21)
        goto LABEL_156;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_23F3BC8F8(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
      v68 = *((_QWORD *)v19 + 2);
      v67 = *((_QWORD *)v19 + 3);
      v69 = v68 + 1;
      if (v68 >= v67 >> 1)
        v19 = sub_23F3BC8F8((char *)(v67 > 1), v68 + 1, 1, v19);
      *((_QWORD *)v19 + 2) = v69;
      v70 = v19 + 32;
      v71 = &v19[16 * v68 + 32];
      *(_QWORD *)v71 = v21;
      *((_QWORD *)v71 + 1) = v18;
      if (v68)
      {
        v157 = v18;
        v151 = v19;
        while (1)
        {
          v72 = v69 - 1;
          if (v69 >= 4)
          {
            v77 = &v70[16 * v69];
            v78 = *((_QWORD *)v77 - 8);
            v79 = *((_QWORD *)v77 - 7);
            v83 = __OFSUB__(v79, v78);
            v80 = v79 - v78;
            if (v83)
              goto LABEL_141;
            v82 = *((_QWORD *)v77 - 6);
            v81 = *((_QWORD *)v77 - 5);
            v83 = __OFSUB__(v81, v82);
            v75 = v81 - v82;
            v76 = v83;
            if (v83)
              goto LABEL_142;
            v84 = v69 - 2;
            v85 = &v70[16 * v69 - 32];
            v87 = *(_QWORD *)v85;
            v86 = *((_QWORD *)v85 + 1);
            v83 = __OFSUB__(v86, v87);
            v88 = v86 - v87;
            if (v83)
              goto LABEL_143;
            v83 = __OFADD__(v75, v88);
            v89 = v75 + v88;
            if (v83)
              goto LABEL_145;
            if (v89 >= v80)
            {
              v107 = &v70[16 * v72];
              v109 = *(_QWORD *)v107;
              v108 = *((_QWORD *)v107 + 1);
              v83 = __OFSUB__(v108, v109);
              v110 = v108 - v109;
              if (v83)
                goto LABEL_151;
              v100 = v75 < v110;
              goto LABEL_94;
            }
          }
          else
          {
            if (v69 != 3)
            {
              v101 = *((_QWORD *)v19 + 4);
              v102 = *((_QWORD *)v19 + 5);
              v83 = __OFSUB__(v102, v101);
              v94 = v102 - v101;
              v95 = v83;
              goto LABEL_88;
            }
            v74 = *((_QWORD *)v19 + 4);
            v73 = *((_QWORD *)v19 + 5);
            v83 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            v76 = v83;
          }
          if ((v76 & 1) != 0)
            goto LABEL_144;
          v84 = v69 - 2;
          v90 = &v70[16 * v69 - 32];
          v92 = *(_QWORD *)v90;
          v91 = *((_QWORD *)v90 + 1);
          v93 = __OFSUB__(v91, v92);
          v94 = v91 - v92;
          v95 = v93;
          if (v93)
            goto LABEL_146;
          v96 = &v70[16 * v72];
          v98 = *(_QWORD *)v96;
          v97 = *((_QWORD *)v96 + 1);
          v83 = __OFSUB__(v97, v98);
          v99 = v97 - v98;
          if (v83)
            goto LABEL_148;
          if (__OFADD__(v94, v99))
            goto LABEL_150;
          if (v94 + v99 >= v75)
          {
            v100 = v75 < v99;
LABEL_94:
            if (v100)
              v72 = v84;
            goto LABEL_96;
          }
LABEL_88:
          if ((v95 & 1) != 0)
            goto LABEL_147;
          v103 = &v70[16 * v72];
          v105 = *(_QWORD *)v103;
          v104 = *((_QWORD *)v103 + 1);
          v83 = __OFSUB__(v104, v105);
          v106 = v104 - v105;
          if (v83)
            goto LABEL_149;
          if (v106 < v94)
            goto LABEL_105;
LABEL_96:
          v111 = v72 - 1;
          if (v72 - 1 >= v69)
            goto LABEL_134;
          v112 = *v161;
          if (!*v161)
            goto LABEL_168;
          v113 = &v70[16 * v111];
          v114 = *(_QWORD *)v113;
          v115 = v70;
          v116 = v72;
          v117 = &v70[16 * v72];
          v118 = *((_QWORD *)v117 + 1);
          v119 = *(_QWORD *)(v150 + 72);
          v120 = (unint64_t)&v112[v119 * *(_QWORD *)v113];
          v160 = (uint64_t)&v112[v119 * *(_QWORD *)v117];
          v121 = (unint64_t)&v112[v119 * v118];
          v122 = v158;
          sub_23F617BA0();
          v123 = v120;
          v124 = v152;
          sub_23F542250(v123, v160, v121, v149, v122);
          if (v124)
          {
LABEL_111:
            v128 = v145;
            swift_bridgeObjectRelease();
            if (v128 >= -1)
            {
LABEL_128:
              *(_QWORD *)(v144 + 16) = 0;
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              return swift_bridgeObjectRelease();
            }
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
            goto LABEL_164;
          }
          if (v118 < v114)
            goto LABEL_135;
          v125 = v151;
          if (v116 > *((_QWORD *)v151 + 2))
            goto LABEL_136;
          v126 = v116;
          *(_QWORD *)v113 = v114;
          *(_QWORD *)&v115[16 * v111 + 8] = v118;
          v127 = *((_QWORD *)v125 + 2);
          if (v116 >= v127)
            goto LABEL_137;
          v70 = v115;
          v19 = v125;
          v152 = 0;
          v69 = v127 - 1;
          memmove(v117, v117 + 16, 16 * (v127 - 1 - v126));
          *((_QWORD *)v125 + 2) = v127 - 1;
          v18 = v157;
          if (v127 <= 2)
            goto LABEL_105;
        }
      }
      v69 = 1;
LABEL_105:
      v20 = (int64_t)v161[1];
      a2 = v158;
      if (v18 >= v20)
        goto LABEL_114;
    }
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
    goto LABEL_166;
  }
  v19 = (char *)MEMORY[0x24BEE4AF8];
  v69 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_114:
  if (v69 >= 2)
  {
    v129 = *v161;
    while (1)
    {
      v130 = v69 - 2;
      if (v69 < 2)
        break;
      if (!v129)
        goto LABEL_170;
      v151 = v19;
      v131 = *(_QWORD *)&v19[16 * v130 + 32];
      v132 = *(_QWORD *)&v19[16 * v69 + 24];
      v133 = *(_QWORD *)(v150 + 72);
      v134 = (unint64_t)&v129[v133 * v131];
      v135 = (unint64_t)&v129[v133 * *(_QWORD *)&v19[16 * v69 + 16]];
      v136 = (unint64_t)&v129[v133 * v132];
      v137 = v158;
      sub_23F617BA0();
      v138 = v134;
      v139 = v152;
      sub_23F542250(v138, v135, v136, v149, v137);
      v152 = v139;
      if (v139)
        goto LABEL_111;
      if (v132 < v131)
        goto LABEL_153;
      v19 = v151;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_23F3BC9E8();
      if (v130 >= *((_QWORD *)v19 + 2))
        goto LABEL_154;
      v140 = &v19[16 * v130 + 32];
      *(_QWORD *)v140 = v131;
      *((_QWORD *)v140 + 1) = v132;
      v141 = *((_QWORD *)v19 + 2);
      if (v69 > v141)
        goto LABEL_155;
      memmove(&v19[16 * v69 + 16], &v19[16 * v69 + 32], 16 * (v141 - v69));
      *((_QWORD *)v19 + 2) = v141 - 1;
      v69 = v141 - 1;
      if (v141 <= 2)
        goto LABEL_127;
    }
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
LABEL_127:
  swift_bridgeObjectRelease();
  if (v145 >= -1)
    goto LABEL_128;
LABEL_166:
  __break(1u);
LABEL_167:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_168:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_169:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_170:
  result = swift_bridgeObjectRelease_n();
  __break(1u);
  return result;
}

void sub_23F541FA8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  float v25;
  float v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;

  v32 = a1;
  v33 = sub_23F35D2E8(&qword_256E6FF40);
  v9 = MEMORY[0x24BDAC7A8](v33);
  v39 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v37 = (char *)&v30 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v41 = (unint64_t *)((char *)&v30 - v14);
  v31 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v13 + 72);
    v42 = v15 * (a3 - 1);
    v35 = a5 + 32;
    v36 = v15;
    v16 = v15 * a3;
    v34 = a4;
    while (2)
    {
      v38 = a3;
      v17 = 0;
      v40 = v32;
      v18 = (unint64_t *)v37;
      do
      {
        v19 = *a4;
        v20 = v16;
        v21 = v16 + v17 + v19;
        v22 = v41;
        sub_23F38F124(v21, (uint64_t)v41, &qword_256E6FF40);
        sub_23F38F124(v42 + v17 + v19, (uint64_t)v18, &qword_256E6FF40);
        v23 = *v22;
        if ((*v22 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_13:
          __break(1u);
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
          return;
        }
        v24 = *(_QWORD *)(a5 + 16);
        if (v23 >= v24)
          goto LABEL_13;
        if (*v18 >= v24)
          goto LABEL_14;
        v25 = *(float *)(v35 + 4 * v23);
        v26 = *(float *)(v35 + 4 * *v18);
        sub_23F3625D8((uint64_t)v18, &qword_256E6FF40);
        sub_23F3625D8((uint64_t)v41, &qword_256E6FF40);
        v16 = v20;
        a4 = v34;
        if (v26 >= v25)
          break;
        v27 = *v34;
        if (!*v34)
          goto LABEL_15;
        v28 = v34;
        v29 = v27 + v42 + v17;
        sub_23F3CD9FC(v27 + v16 + v17, v39, &qword_256E6FF40);
        swift_arrayInitWithTakeFrontToBack();
        sub_23F3CD9FC(v39, v29, &qword_256E6FF40);
        v17 -= v36;
        ++v40;
        a4 = v28;
        v18 = (unint64_t *)v37;
      }
      while (v38 != v40);
      a3 = v38 + 1;
      v42 += v36;
      v16 += v36;
      if (v38 + 1 != v31)
        continue;
      break;
    }
  }
  swift_bridgeObjectRelease();
}

void sub_23F542250(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  float v28;
  float v29;
  unint64_t v30;
  unint64_t v32;
  BOOL v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  float v47;
  float v48;
  BOOL v50;
  int64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t *v61;

  v60 = a5;
  v57 = sub_23F35D2E8(&qword_256E6FF40);
  v9 = MEMORY[0x24BDAC7A8](v57);
  v61 = (unint64_t *)((char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v12 = (unint64_t *)((char *)&v54 - v11);
  v14 = *(_QWORD *)(v13 + 72);
  if (!v14)
  {
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  v15 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_88;
  v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_89;
  v19 = v15 / v14;
  v20 = v17 / v14;
  if (v15 / v14 >= v17 / v14)
  {
    sub_23F37ABE0(a2, v17 / v14);
    v21 = a4 + v20 * v14;
    v35 = v20 * v14 < 1 || a1 >= a2;
    v23 = v14;
    if (v35)
      goto LABEL_76;
    v56 = v60 + 32;
    v55 = v14;
    v58 = -v14;
    v59 = (unint64_t)v12;
    while (1)
    {
      v36 = a4;
      v37 = a3;
      v38 = v21;
      v39 = v58;
      v40 = v21 + v58;
      v41 = v21 + v58;
      v42 = (unint64_t *)v59;
      sub_23F38F124(v41, v59, &qword_256E6FF40);
      v43 = a2 + v39;
      sub_23F38F124(v43, (uint64_t)v61, &qword_256E6FF40);
      v44 = *v42;
      if ((*v42 & 0x8000000000000000) != 0)
        goto LABEL_84;
      v45 = *(_QWORD *)(v60 + 16);
      if (v44 >= v45)
        goto LABEL_85;
      if (*v61 >= v45)
        goto LABEL_86;
      v46 = v37 + v58;
      v47 = *(float *)(v56 + 4 * v44);
      v48 = *(float *)(v56 + 4 * *v61);
      sub_23F3625D8((uint64_t)v61, &qword_256E6FF40);
      sub_23F3625D8(v59, &qword_256E6FF40);
      if (v48 >= v47)
      {
        v50 = v37 < v38 || v46 >= v38;
        a3 = v46;
        if (v50)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v37 != v38)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v21 = v40;
        a4 = v36;
        goto LABEL_71;
      }
      if (v37 < a2 || v46 >= a2)
        break;
      if (v37 == a2)
        goto LABEL_66;
      swift_arrayInitWithTakeBackToFront();
      a2 = v43;
      a3 = v46;
      a4 = v36;
LABEL_67:
      v21 = v38;
LABEL_71:
      if (v21 <= a4 || a2 <= a1)
      {
        v23 = v55;
        goto LABEL_76;
      }
    }
    swift_arrayInitWithTakeFrontToBack();
LABEL_66:
    a2 = v43;
    a4 = v36;
    a3 = v46;
    goto LABEL_67;
  }
  sub_23F37ABE0(a1, v15 / v14);
  v21 = a4 + v19 * v14;
  v22 = v19 * v14 < 1 || a2 >= a3;
  v23 = v14;
  if (!v22)
  {
    v59 = a3;
    v24 = v60 + 32;
    while (1)
    {
      sub_23F38F124(a2, (uint64_t)v12, &qword_256E6FF40);
      v25 = v61;
      sub_23F38F124(a4, (uint64_t)v61, &qword_256E6FF40);
      v26 = *v12;
      if ((*v12 & 0x8000000000000000) != 0)
        break;
      v27 = *(_QWORD *)(v60 + 16);
      if (v26 >= v27)
        goto LABEL_82;
      if (*v25 >= v27)
        goto LABEL_83;
      v28 = *(float *)(v24 + 4 * v26);
      v29 = *(float *)(v24 + 4 * *v25);
      sub_23F3625D8((uint64_t)v25, &qword_256E6FF40);
      sub_23F3625D8((uint64_t)v12, &qword_256E6FF40);
      if (v29 >= v28)
      {
        v32 = a4;
        a4 += v23;
        if (a1 < v32 || a1 >= a4)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != v32)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v30 = a2;
      }
      else
      {
        v30 = a2 + v23;
        if (a1 < a2 || a1 >= v30)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      a1 += v23;
      v34 = a4 >= v21 || v30 >= v59;
      a2 = v30;
      if (v34)
        goto LABEL_76;
    }
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
LABEL_76:
  v52 = v21 - a4;
  if (v23 != -1 || v52 != 0x8000000000000000)
  {
    sub_23F37ABE0(a4, v52 / v23);
    swift_bridgeObjectRelease();
    return;
  }
LABEL_90:
  __break(1u);
}

size_t sub_23F54269C(size_t result, uint64_t a2)
{
  size_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  BOOL v25;
  unint64_t v26;
  uint64_t v27;
  size_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;

  v2 = result;
  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 >= v3)
    v5 = *(_QWORD *)(result + 16);
  else
    v5 = *(_QWORD *)(a2 + 16);
  if (!v5)
  {
    v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v21 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
    if (!v3)
      goto LABEL_16;
    goto LABEL_14;
  }
  v29 = result;
  sub_23F35D2E8(&qword_256E79AD8);
  v6 = (_QWORD *)sub_23F36682C();
  result = j__malloc_size(v6);
  v7 = (uint64_t)(result - 32) / 80;
  v6[2] = v5;
  v6[3] = 2 * v7;
  if (v3)
  {
    v2 = 0;
    v27 = v7 & 0x7FFFFFFFFFFFFFFFLL;
    v8 = (uint64_t *)(v29 + 48);
    v9 = (uint64_t *)(a2 + 40);
    v30 = 1 - v5;
    v31 = v4;
    v10 = 4;
    v32 = v3;
    v33 = v6;
    while (v4 + v2)
    {
      v11 = &v6[v10];
      v13 = v8[4];
      v12 = v8[5];
      v15 = v8[2];
      v14 = v8[3];
      v17 = *v8;
      v16 = v8[1];
      v18 = *(v8 - 1);
      v19 = *(v9 - 1);
      v20 = *v9;
      *v11 = *(v8 - 2);
      v11[1] = v18;
      v11[2] = v17;
      v11[3] = v16;
      v11[4] = v15;
      v11[5] = v14;
      v11[6] = v13;
      v11[7] = v12;
      v11[8] = v19;
      v11[9] = v20;
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F39BA5C(v15, v14);
      result = sub_23F617BA0();
      if (v30 == v2)
        goto LABEL_11;
      --v2;
      v8 += 8;
      v10 += 10;
      v9 += 2;
      v6 = v33;
      v4 = v31;
      if (!(v32 + v2))
        goto LABEL_10;
    }
    __break(1u);
    goto LABEL_21;
  }
LABEL_10:
  __break(1u);
LABEL_11:
  v21 = v27 + v2 - 1;
  v4 = v31;
  v3 = v32;
  v22 = v33;
  if (v32 > v31)
  {
LABEL_14:
    sub_23F383738();
    result = sub_23F389CDC();
    if (v3 <= v4)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    sub_23F362D08();
    result = sub_23F362984();
  }
LABEL_16:
  v23 = v22[3];
  if (v23 < 2)
    return (size_t)v22;
  v24 = v23 >> 1;
  v25 = __OFSUB__(v24, v21);
  v26 = v24 - v21;
  if (!v25)
  {
    v22[2] = v26;
    return (size_t)v22;
  }
LABEL_22:
  __break(1u);
  return result;
}

void sub_23F542878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  int64_t v28;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;

  sub_23F362ABC();
  v2 = v1;
  v40 = sub_23F35D2E8(&qword_256E704D0);
  MEMORY[0x24BDAC7A8](v40);
  sub_23F3834D0();
  v46 = v3;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3838E4();
  v45 = v5;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F543724();
  v47 = v7;
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v2 + 16);
  sub_23F362CDC();
  v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v39 = (v8 + 32) & ~v8;
    v11 = MEMORY[0x24BEE4AF8] + v39;
    sub_23F61B2E4();
    v12 = 0;
    v13 = 0;
    sub_23F383EB8();
    v15 = v2 + v14;
    v43 = v17;
    v44 = v16;
    v41 = *(_QWORD *)(v17 + 72);
    v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
    v18 = v10;
    v19 = v40;
    while (1)
    {
      v20 = v46 + *(int *)(v19 + 48);
      v42(v20, v15, v44);
      v21 = (char *)v45 + *(int *)(v19 + 48);
      *v45 = v12;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v21, v20, v44);
      sub_23F3CD9FC((uint64_t)v45, v0, &qword_256E704D0);
      if (v13)
      {
        v10 = v18;
      }
      else
      {
        sub_23F543808();
        if (v23)
          goto LABEL_34;
        v24 = v22 & 0xFFFFFFFFFFFFFFFELL;
        if (v24 <= 1)
          v25 = 1;
        else
          v25 = v24;
        sub_23F35D2E8(&qword_256E704C8);
        v26 = *(_QWORD *)(v47 + 72);
        v10 = (_QWORD *)swift_allocObject();
        v27 = j__malloc_size(v10);
        if (!v26)
          goto LABEL_35;
        v28 = v27 - v39;
        if (v27 - v39 == 0x8000000000000000 && v26 == -1)
          goto LABEL_36;
        v30 = v28 / v26;
        v10[2] = v25;
        v10[3] = 2 * (v28 / v26);
        v31 = (char *)v10 + v39;
        v32 = v18[3];
        v33 = (v32 >> 1) * v26;
        if (v18[2])
        {
          if (v10 < v18 || v31 >= (char *)v18 + v39 + v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v10 != v18)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v18[2] = 0;
        }
        v11 = (uint64_t)&v31[v33];
        v13 = (v30 & 0x7FFFFFFFFFFFFFFFLL) - (v32 >> 1);
        swift_release();
        v19 = v40;
      }
      v35 = __OFSUB__(v13--, 1);
      if (v35)
        break;
      ++v12;
      sub_23F3CD9FC(v0, v11, &qword_256E704D0);
      v11 += *(_QWORD *)(v47 + 72);
      v15 += v41;
      v18 = v10;
      if (v9 == v12)
        goto LABEL_29;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v13 = 0;
LABEL_29:
  swift_bridgeObjectRelease();
  v36 = v10[3];
  if (v36 < 2)
  {
LABEL_32:
    sub_23F362948();
    return;
  }
  v37 = v36 >> 1;
  v35 = __OFSUB__(v37, v13);
  v38 = v37 - v13;
  if (!v35)
  {
    v10[2] = v38;
    goto LABEL_32;
  }
LABEL_37:
  __break(1u);
}

void sub_23F542B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  size_t v39;
  int64_t v40;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  BOOL v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD v51[2];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v57 = sub_23F35D2E8(&qword_256E71E30);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v56 = v7;
  v58 = sub_23F35D2E8(&qword_256E701C0);
  MEMORY[0x24BDAC7A8](v58);
  sub_23F362AAC();
  v10 = (_QWORD *)(v8 - v9);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v51 - v12;
  v59 = v14;
  v15 = *(unsigned __int8 *)(v14 + 80);
  sub_23F389CDC();
  v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v17 = v5 - v3;
  if (v5 == v3)
  {
    v18 = 0;
LABEL_32:
    sub_23F362D08();
    v21 = v16;
LABEL_34:
    v48 = v21[3];
    if (v48 < 2)
      goto LABEL_37;
    v49 = v48 >> 1;
    v47 = __OFSUB__(v49, v18);
    v50 = v49 - v18;
    if (!v47)
    {
      v21[2] = v50;
LABEL_37:
      sub_23F362948();
      return;
    }
  }
  else
  {
    if (v3 >= v5)
    {
      v19 = 0;
      v18 = 0;
      v51[1] = v15 | 7;
      v52 = (v15 + 32) & ~v15;
      v20 = MEMORY[0x24BEE4AF8] + v52;
      v21 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v54 = v5;
      v55 = v1;
      v53 = v17;
      while (v17 + v19)
      {
        v22 = *(_QWORD *)(v1 + 16);
        if (v19 == v22)
        {
          sub_23F362D08();
          goto LABEL_34;
        }
        if (v19 >= v22)
          goto LABEL_39;
        v23 = v5 + v19;
        v24 = v13;
        v25 = *(_QWORD *)(sub_23F61B2E4() - 8);
        sub_23F383EB8();
        v27 = v1 + v26 + *(_QWORD *)(v25 + 72) * v19;
        v28 = v56 + *(int *)(v57 + 48);
        sub_23F383F00(v28, v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16));
        v29 = (uint64_t)v10 + *(int *)(v58 + 48);
        *v10 = v23;
        v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32);
        v13 = v24;
        sub_23F383F00(v29, v28, v30);
        v31 = sub_23F3848F0();
        sub_23F3CD9FC(v31, v32, &qword_256E701C0);
        if (v18)
        {
          v16 = v21;
        }
        else
        {
          sub_23F543808();
          if (v34)
            goto LABEL_41;
          v35 = v33 & 0xFFFFFFFFFFFFFFFELL;
          if (v35 <= 1)
            v36 = 1;
          else
            v36 = v35;
          sub_23F35D2E8(&qword_256E701B8);
          v37 = *(_QWORD *)(v59 + 72);
          v38 = v52;
          v16 = (_QWORD *)swift_allocObject();
          v39 = j__malloc_size(v16);
          if (!v37)
            goto LABEL_42;
          v40 = v39 - v38;
          if (v39 - v38 == 0x8000000000000000 && v37 == -1)
            goto LABEL_43;
          v42 = v40 / v37;
          v16[2] = v36;
          v16[3] = 2 * (v40 / v37);
          v43 = (char *)v16 + v38;
          v44 = v21[3];
          v45 = (v44 >> 1) * v37;
          if (v21[2])
          {
            if (v16 < v21 || v43 >= (char *)v21 + v52 + v45)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v16 != v21)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v21[2] = 0;
          }
          v20 = (uint64_t)&v43[v45];
          v18 = (v42 & 0x7FFFFFFFFFFFFFFFLL) - (v44 >> 1);
          swift_release();
        }
        v47 = __OFSUB__(v18--, 1);
        v1 = v55;
        if (v47)
          goto LABEL_40;
        ++v19;
        sub_23F3CD9FC((uint64_t)v13, v20, &qword_256E701C0);
        v20 += *(_QWORD *)(v59 + 72);
        v21 = v16;
        v17 = v53;
        v5 = v54;
        if (!(v53 + v19))
          goto LABEL_32;
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
}

void sub_23F542E38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  size_t v28;
  int64_t v29;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  BOOL v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD v40[2];
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;

  v2 = sub_23F35D2E8(&qword_256E6FF40);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v47 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (_QWORD *)((char *)v40 - v6);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v40 - v8;
  v48 = v10;
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v46 = v12;
  v40[1] = a1;
  if (v12)
  {
    v43 = (v11 + 32) & ~v11;
    v14 = MEMORY[0x24BEE4AF8] + v43;
    v15 = 0;
    v16 = 0;
    v17 = *(_QWORD *)(type metadata accessor for QueryDecorationTuple(0) - 8);
    v18 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v44 = *(_QWORD *)(v17 + 72);
    v45 = v9;
    v41 = v7;
    v42 = v11 | 7;
    v19 = v13;
    while (1)
    {
      v20 = (uint64_t)&v47[*(int *)(v2 + 48)];
      sub_23F38F530(v18, v20, type metadata accessor for QueryDecorationTuple);
      v21 = (uint64_t)v7 + *(int *)(v2 + 48);
      *v7 = v15;
      sub_23F543128(v20, v21);
      sub_23F3CD9FC((uint64_t)v7, (uint64_t)v9, &qword_256E6FF40);
      if (v16)
      {
        v13 = v19;
      }
      else
      {
        v22 = v19[3];
        if ((uint64_t)((v22 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_34;
        v23 = v2;
        v24 = v22 & 0xFFFFFFFFFFFFFFFELL;
        if (v24 <= 1)
          v25 = 1;
        else
          v25 = v24;
        sub_23F35D2E8(&qword_256E6FF48);
        v26 = *(_QWORD *)(v48 + 72);
        v27 = v43;
        v13 = (_QWORD *)swift_allocObject();
        v28 = j__malloc_size(v13);
        if (!v26)
          goto LABEL_35;
        v29 = v28 - v27;
        if (v28 - v27 == 0x8000000000000000 && v26 == -1)
          goto LABEL_36;
        v31 = v29 / v26;
        v13[2] = v25;
        v13[3] = 2 * (v29 / v26);
        v32 = (char *)v13 + v27;
        v33 = v19[3];
        v34 = (v33 >> 1) * v26;
        if (v19[2])
        {
          if (v13 < v19 || v32 >= (char *)v19 + v43 + v34)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v13 != v19)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v19[2] = 0;
        }
        v14 = (uint64_t)&v32[v34];
        v16 = (v31 & 0x7FFFFFFFFFFFFFFFLL) - (v33 >> 1);
        swift_release();
        v2 = v23;
        v7 = v41;
      }
      v36 = __OFSUB__(v16--, 1);
      if (v36)
        break;
      ++v15;
      v9 = v45;
      sub_23F3CD9FC((uint64_t)v45, v14, &qword_256E6FF40);
      v14 += *(_QWORD *)(v48 + 72);
      v18 += v44;
      v19 = v13;
      if (v46 == v15)
        goto LABEL_29;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v16 = 0;
LABEL_29:
  swift_bridgeObjectRelease();
  v37 = v13[3];
  if (v37 >= 2)
  {
    v38 = v37 >> 1;
    v36 = __OFSUB__(v38, v16);
    v39 = v38 - v16;
    if (v36)
    {
LABEL_37:
      __break(1u);
      return;
    }
    v13[2] = v39;
  }
}

uint64_t sub_23F543128(uint64_t a1, uint64_t a2)
{
  uint64_t DecorationTuple;

  DecorationTuple = type metadata accessor for QueryDecorationTuple(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationTuple - 8) + 32))(a2, a1, DecorationTuple);
  return a2;
}

void sub_23F54316C(double a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  double *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  uint64_t v13;
  double v14;
  double v15;
  _BOOL4 v16;
  BOOL v17;
  _BOOL4 v18;
  double v19;
  uint64_t v20;
  char v21;
  int64_t v22;
  uint64_t v23;
  double *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v6 = sub_23F543568(a1, a2, a3);
  v7 = v6;
  if (v6 <= 0)
  {
    if ((v6 & 0x8000000000000000) == 0)
    {
      v9 = 0;
      v10 = 0;
      v8 = (double *)MEMORY[0x24BEE4AF8];
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
      v12 = (double *)(MEMORY[0x24BEE4AF8] + 32);
      v14 = a1;
      goto LABEL_15;
    }
    goto LABEL_48;
  }
  sub_23F35D2E8(&qword_256E70318);
  v8 = (double *)sub_23F36682C();
  v9 = 0;
  v10 = 0;
  v11 = (uint64_t)(j__malloc_size(v8) - 32) / 8;
  *((_QWORD *)v8 + 2) = v7;
  *((_QWORD *)v8 + 3) = 2 * v11;
  v12 = v8 + 4;
  v13 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - v7;
  v14 = a1;
  do
  {
    if (!v7)
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    v15 = v14;
    v16 = v14 <= a2;
    if (a3 > 0.0)
      v16 = v14 >= a2;
    if (v16)
    {
      if (v9 & 1 | (v14 != a2))
        goto LABEL_46;
      v9 = 1;
    }
    else
    {
      v17 = __OFADD__(v10++, 1);
      if (v17)
        goto LABEL_47;
      v14 = a1 + (double)v10 * a3;
    }
    *v12++ = v15;
    --v7;
  }
  while (v7);
  while (1)
  {
LABEL_15:
    v18 = v14 <= a2;
    if (a3 > 0.0)
      v18 = v14 >= a2;
    if (!v18)
    {
      v17 = __OFADD__(v10++, 1);
      if (v17)
        goto LABEL_43;
      v19 = a1 + (double)v10 * a3;
      if (v13)
        goto LABEL_36;
      goto LABEL_23;
    }
    if ((v14 != a2) | v9 & 1)
      break;
    v9 = 1;
    v19 = v14;
    if (v13)
    {
      v19 = v14;
      goto LABEL_36;
    }
LABEL_23:
    sub_23F543808();
    if (v21)
      goto LABEL_44;
    v22 = v20 & 0xFFFFFFFFFFFFFFFELL;
    if (v22 <= 1)
      v23 = 1;
    else
      v23 = v22;
    sub_23F35D2E8(&qword_256E70318);
    v24 = (double *)sub_23F36682C();
    v25 = (uint64_t)(j__malloc_size(v24) - 32) / 8;
    *((_QWORD *)v24 + 2) = v23;
    *((_QWORD *)v24 + 3) = 2 * v25;
    v26 = (unint64_t)(v24 + 4);
    v27 = *((_QWORD *)v8 + 3);
    v28 = v27 >> 1;
    if (*((_QWORD *)v8 + 2))
    {
      if (v24 != v8 || v26 >= (unint64_t)&v8[v28 + 4])
        memmove(v24 + 4, v8 + 4, 8 * v28);
      v8[2] = 0.0;
    }
    v12 = (double *)(v26 + 8 * v28);
    v13 = (v25 & 0x7FFFFFFFFFFFFFFFLL) - (v27 >> 1);
    sub_23F3668FC();
    v8 = v24;
LABEL_36:
    v17 = __OFSUB__(v13--, 1);
    if (v17)
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    *v12++ = v14;
    v14 = v19;
  }
  v30 = *((_QWORD *)v8 + 3);
  if (v30 < 2)
    return;
  v31 = v30 >> 1;
  v17 = __OFSUB__(v31, v13);
  v32 = v31 - v13;
  if (!v17)
  {
    *((_QWORD *)v8 + 2) = v32;
    return;
  }
LABEL_49:
  __break(1u);
}

void sub_23F5433E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v3 = 0;
    v4 = 0;
    v5 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
    v6 = (uint64_t *)(sub_23F617BA0() + 40);
    while (1)
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      if (v3)
      {
        sub_23F362CDC();
      }
      else
      {
        sub_23F543808();
        if (v10)
          goto LABEL_28;
        v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
        v12 = v11 <= 1 ? 1 : v11;
        sub_23F35D2E8(&qword_256E70080);
        v13 = (_QWORD *)sub_23F36682C();
        v14 = (uint64_t)(j__malloc_size(v13) - 32) / 24;
        v13[2] = v12;
        v13[3] = 2 * v14;
        v15 = v13 + 4;
        v16 = v2[3] >> 1;
        v5 = &v13[3 * v16 + 4];
        v3 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        if (v2[2])
        {
          if (v13 != v2 || v15 >= &v2[3 * v16 + 4])
            memmove(v15, v2 + 4, 24 * v16);
          sub_23F362CDC();
          v2[2] = 0;
        }
        else
        {
          sub_23F362CDC();
        }
        sub_23F3668FC();
        v2 = v13;
      }
      v18 = __OFSUB__(v3--, 1);
      if (v18)
        break;
      v6 += 2;
      *v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      v5 += 3;
      if (v1 == ++v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v3 = 0;
LABEL_23:
  v19 = v2[3];
  if (v19 >= 2)
  {
    v20 = v19 >> 1;
    v18 = __OFSUB__(v20, v3);
    v21 = v20 - v3;
    if (v18)
    {
LABEL_29:
      __break(1u);
      return;
    }
    v2[2] = v21;
  }
}

uint64_t sub_23F543568(double a1, double a2, double a3)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  double v6;
  _BOOL4 v7;
  BOOL v8;

  result = 0;
  v4 = 0;
  v5 = 0;
  v6 = a1;
  while (1)
  {
    v7 = v6 <= a2;
    if (a3 > 0.0)
      v7 = v6 >= a2;
    if (v7)
    {
      if ((v6 != a2) | v4 & 1)
        return result;
      v4 = 1;
      goto LABEL_9;
    }
    v8 = __OFADD__(v5++, 1);
    if (v8)
      break;
    v6 = a1 + (double)v5 * a3;
LABEL_9:
    v8 = __OFADD__(result++, 1);
    if (v8)
    {
      __break(1u);
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23F5435D4(uint64_t result)
{
  if (result)
  {
    sub_23F617BA0();
    sub_23F617BA0();
    return sub_23F617BA0();
  }
  return result;
}

void sub_23F54360C()
{
  sub_23F37B47C();
}

uint64_t sub_23F543624()
{
  return swift_arrayDestroy();
}

void sub_23F543650()
{
  sub_23F376C88();
}

void sub_23F54365C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = v0;
  sub_23F37B47C();
}

void sub_23F543674()
{
  sub_23F37C420();
}

uint64_t sub_23F54367C()
{
  uint64_t v0;

  return v0 - 112;
}

BOOL sub_23F54368C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_23F5436A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F3CD9FC(a1, a2, v2);
}

uint64_t sub_23F5436A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v0, v1);
}

uint64_t sub_23F5436BC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(a1, *(_QWORD *)(v2 - 264));
}

void sub_23F5436C8()
{
  sub_23F558E3C();
}

void sub_23F5436DC()
{
  sub_23F37B47C();
}

uint64_t sub_23F5436FC()
{
  return swift_unknownObjectRelease_n();
}

uint64_t sub_23F543734()
{
  return swift_arrayDestroy();
}

_QWORD *sub_23F543740(_QWORD *a1)
{
  uint64_t v1;

  return sub_23F35EA9C(a1, v1);
}

uint64_t sub_23F54375C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, v1);
}

uint64_t sub_23F543768()
{
  return sub_23F619130();
}

uint64_t sub_23F543788@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 120));
}

void sub_23F543790()
{
  sub_23F377ED0();
}

uint64_t sub_23F54379C()
{
  return swift_task_dealloc();
}

void sub_23F5437A8()
{
  JUMPOUT(0x24266F8F8);
}

uint64_t sub_23F5437B0@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, *(_QWORD *)(v3 - 120));
}

void sub_23F5437BC()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23F3625D8(v1, v0);
}

void sub_23F5437D4()
{
  sub_23F387820();
}

uint64_t sub_23F5437E0()
{
  return sub_23F61C790();
}

void sub_23F5437EC()
{
  sub_23F37C420();
}

uint64_t sub_23F543800(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_23F35D2E8(a3);
}

uint64_t sub_23F543814(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;

  v83 = a2;
  v84 = a5;
  v88 = a4;
  v82 = a1;
  v6 = sub_23F61B9EC();
  v72 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v80 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v8);
  v79 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F35D2E8(&qword_256E7A070);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F35D2E8(&qword_256E6FB20);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v81 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v69 - v16;
  v18 = sub_23F35D2E8(&qword_256E75550);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F35D2E8(&qword_256E7A078);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23F619BB0();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v69 - v29;
  v31 = sub_23F618D88();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v69 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = (unint64_t)v88 >> 1;
  if ((unint64_t)v88 >> 1 == a3)
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v88 = v35;
    v70 = v30;
    v76 = v28;
    v77 = v25;
    v74 = v84
        + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_loggingScope;
    v75 = v12;
    v38 = v33;
    v78 = v36;
    result = swift_unknownObjectRetain();
    v39 = v78;
    v40 = v83;
    v41 = (uint64_t)v81;
    v42 = v38;
    v43 = v32;
    v71 = v23;
    v86 = v42;
    v87 = MEMORY[0x24BEE4AF8];
    v85 = v32;
    while (a3 < v39)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v88, v40 + *(_QWORD *)(v43 + 72) * a3, v42);
      sub_23F619BA4();
      SpanMatchedEntity.getQueryDecorationLogUniqueId(loggingScope:)();
      v44 = sub_23F617000();
      if (sub_23F36195C((uint64_t)v17, 1, v44) == 1)
      {
        sub_23F39E4B8((uint64_t)v17, &qword_256E6FB20);
        v45 = 1;
      }
      else
      {
        sub_23F619D60();
        v46 = *(_QWORD *)(v44 - 8);
        (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v41, v17, v44);
        sub_23F36196C(v41, 0, 1, v44);
        sub_23F619D54();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v17, v44);
        v45 = 0;
      }
      v47 = v80;
      v48 = sub_23F619D6C();
      sub_23F36196C((uint64_t)v20, v45, 1, v48);
      sub_23F619964();
      v49 = (uint64_t)v79;
      sub_23F618D64();
      v50 = sub_23F61B92C();
      if (sub_23F36195C(v49, 1, v50) == 1)
      {
        sub_23F39E4B8(v49, &qword_256E701F0);
        v51 = 1;
        v52 = (uint64_t)v75;
      }
      else
      {
        v53 = v24;
        v54 = v20;
        v55 = v17;
        v56 = v49;
        v52 = (uint64_t)v75;
        MEMORY[0x24266CE2C]();
        sub_23F61B8CC();
        sub_23F61B9A4();
        (*(void (**)(char *, uint64_t))(v72 + 8))(v47, v73);
        sub_23F619910();
        TypedValue.selfLoggingTypeName.getter();
        sub_23F619904();
        v57 = v56;
        v17 = v55;
        v20 = v54;
        v24 = v53;
        v23 = v71;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v57, v50);
        v51 = 0;
      }
      v58 = sub_23F619928();
      sub_23F36196C(v52, v51, 1, v58);
      sub_23F619B98();
      sub_23F36196C((uint64_t)v23, 0, 1, v24);
      v43 = v85;
      v42 = v86;
      (*(void (**)(char *, uint64_t))(v85 + 8))(v88, v86);
      if (sub_23F36195C((uint64_t)v23, 1, v24) == 1)
      {
        sub_23F39E4B8((uint64_t)v23, &qword_256E7A078);
        v41 = (uint64_t)v81;
      }
      else
      {
        v59 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
        v60 = v70;
        v59(v70, v23, v24);
        v59(v76, v60, v24);
        v61 = v87;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v41 = (uint64_t)v81;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F377F0C();
          v61 = v67;
        }
        v64 = *(_QWORD *)(v61 + 16);
        v63 = *(_QWORD *)(v61 + 24);
        v87 = v61;
        v65 = v77;
        if (v64 >= v63 >> 1)
        {
          sub_23F377F0C();
          v65 = v77;
          v87 = v68;
        }
        v66 = v87;
        *(_QWORD *)(v87 + 16) = v64 + 1;
        ((void (*)(unint64_t))v59)(v66+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(_QWORD *)(v65 + 72) * v64);
        v43 = v85;
        v42 = v86;
      }
      ++a3;
      v39 = v78;
      v40 = v83;
      result = v84;
      if (v78 == a3)
      {
        swift_release();
        swift_unknownObjectRelease();
        return v87;
      }
    }
    __break(1u);
  }
  return result;
}

