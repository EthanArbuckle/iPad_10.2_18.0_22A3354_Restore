void sub_23F543E3C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a2;
  sub_23F35D2E8(&qword_256E7A060);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F54DC08();
  v12 = sub_23F619CDC();
  v43 = *(_QWORD *)(v12 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3834D0();
  v15 = v14;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v33 - v17;
  sub_23F618D28();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F36285C();
  v22 = a4 >> 1;
  if (a4 >> 1 == a3)
  {
    swift_release();
LABEL_14:
    sub_23F362870();
  }
  else
  {
    v36 = v21;
    v37 = v5;
    v40 = v20;
    v41 = v15;
    v34 = v18;
    v38 = a5
        + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_loggingScope;
    swift_unknownObjectRetain();
    v23 = MEMORY[0x24BEE4AF8];
    v42 = a5;
    v24 = v44;
    v35 = a1;
    v39 = a4 >> 1;
    v25 = v36;
    while (a3 < v22)
    {
      v26 = v6;
      v27 = v40;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v25, v24 + *(_QWORD *)(v6 + 72) * a3, v40);
      v28 = v37;
      sub_23F547CFC();
      sub_23F36196C(v28, 0, 1, v12);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
      if (sub_23F36195C(v28, 1, v12) == 1)
      {
        sub_23F39E4B8(v28, &qword_256E7A060);
        v24 = v44;
        v6 = v26;
      }
      else
      {
        v29 = (uint64_t)v34;
        sub_23F39C590((uint64_t)v34, v28);
        sub_23F39C590(v41, v29);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F54DEF8();
          v23 = v31;
        }
        v6 = v26;
        v30 = *(_QWORD *)(v23 + 16);
        if (v30 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          sub_23F54DEF8();
          v23 = v32;
        }
        *(_QWORD *)(v23 + 16) = v30 + 1;
        sub_23F39C590(v23+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v30, v41);
        v24 = v44;
      }
      ++a3;
      v22 = v39;
      if (v39 == a3)
      {
        swift_release();
        swift_unknownObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
  }
}

void sub_23F5440D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a2;
  v9 = sub_23F35D2E8(&qword_256E7A050);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F6199C4();
  v45 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v35 - v16;
  v18 = sub_23F618C20();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a4 >> 1;
  if (a4 >> 1 == a3)
  {
    swift_release();
  }
  else
  {
    v38 = v22;
    v39 = v11;
    v42 = v20;
    v43 = v15;
    v36 = v17;
    v40 = a5
        + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_loggingScope;
    swift_unknownObjectRetain();
    v24 = MEMORY[0x24BEE4AF8];
    v44 = a5;
    v25 = v46;
    v37 = a1;
    v41 = a4 >> 1;
    v26 = v38;
    while (a3 < v23)
    {
      v27 = v19;
      v28 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v26, v25 + *(_QWORD *)(v19 + 72) * a3, v42);
      v29 = (uint64_t)v39;
      sub_23F5480A0();
      sub_23F36196C(v29, 0, 1, v12);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v28);
      if (sub_23F36195C(v29, 1, v12) == 1)
      {
        sub_23F39E4B8(v29, &qword_256E7A050);
        v25 = v46;
        v19 = v27;
      }
      else
      {
        v30 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 32);
        v31 = v36;
        v30(v36, v29, v12);
        v30(v43, (uint64_t)v31, v12);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F377EE4();
          v24 = v33;
        }
        v19 = v27;
        v32 = *(_QWORD *)(v24 + 16);
        if (v32 >= *(_QWORD *)(v24 + 24) >> 1)
        {
          sub_23F377EE4();
          v24 = v34;
        }
        *(_QWORD *)(v24 + 16) = v32 + 1;
        v30((char *)(v24+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v32), (uint64_t)v43, v12);
        v25 = v46;
      }
      ++a3;
      v23 = v41;
      if (v41 == a3)
      {
        swift_release();
        swift_unknownObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_23F5443DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v56[4];
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v5 = sub_23F61B9EC();
  v61 = *(_QWORD *)(v5 - 8);
  v62 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v60 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F35D2E8(&qword_256E7A070);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F35D2E8(&qword_256E6FB20);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v59 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v56 - v16;
  v70 = sub_23F619BB0();
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v19 = (char *)v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F35D2E8(&qword_256E75550);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v69 = (char *)v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v56 - v23;
  v73 = sub_23F619D6C();
  v67 = *(_QWORD *)(v73 - 8);
  v25 = MEMORY[0x24BDAC7A8](v73);
  v66 = (char *)v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v58 = (char *)v56 - v27;
  v28 = *(_QWORD *)(a1 + 16);
  if (v28)
  {
    v56[3] = v2;
    v29 = *(_QWORD *)(sub_23F618D88() - 8);
    v30 = a1;
    v31 = a1 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v56[1] = a2;
    v56[2] = v30;
    v63 = *(_QWORD *)(v29 + 72);
    v64 = a2
        + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_loggingScope;
    sub_23F617BA0();
    v71 = MEMORY[0x24BEE4AF8];
    v65 = v24;
    v57 = v19;
    do
    {
      sub_23F619BA4();
      SpanMatchedEntity.getQueryDecorationLogUniqueId(loggingScope:)();
      v32 = sub_23F617000();
      v33 = sub_23F36195C((uint64_t)v17, 1, v32);
      v72 = v31;
      if (v33 == 1)
      {
        sub_23F39E4B8((uint64_t)v17, &qword_256E6FB20);
        v34 = 1;
        v35 = (uint64_t)v69;
      }
      else
      {
        v35 = (uint64_t)v69;
        sub_23F619D60();
        v36 = *(_QWORD *)(v32 - 8);
        v37 = (uint64_t)v59;
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v59, v17, v32);
        sub_23F36196C(v37, 0, 1, v32);
        sub_23F619D54();
        v38 = *(void (**)(char *, uint64_t))(v36 + 8);
        v31 = v72;
        v38(v17, v32);
        v34 = 0;
      }
      sub_23F36196C(v35, v34, 1, v73);
      sub_23F619964();
      sub_23F618D64();
      v39 = sub_23F61B92C();
      if (sub_23F36195C((uint64_t)v9, 1, v39) == 1)
      {
        sub_23F39E4B8((uint64_t)v9, &qword_256E701F0);
        v40 = 1;
      }
      else
      {
        MEMORY[0x24266CE2C]();
        v41 = v17;
        v42 = v12;
        v43 = v60;
        sub_23F61B8CC();
        sub_23F61B9A4();
        v44 = v43;
        v12 = v42;
        v17 = v41;
        v19 = v57;
        (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v62);
        v31 = v72;
        sub_23F619910();
        TypedValue.selfLoggingTypeName.getter();
        sub_23F619904();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v9, v39);
        v40 = 0;
      }
      v45 = (uint64_t)v65;
      v46 = sub_23F619928();
      sub_23F36196C((uint64_t)v12, v40, 1, v46);
      sub_23F619B98();
      sub_23F619B80();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v19, v70);
      v47 = v73;
      if (sub_23F36195C(v45, 1, v73) == 1)
      {
        sub_23F39E4B8(v45, &qword_256E75550);
      }
      else
      {
        v48 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 32);
        v49 = v58;
        v48(v58, v45, v47);
        v48(v66, (uint64_t)v49, v47);
        v50 = v71;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3771B4();
          v50 = v53;
        }
        v51 = *(_QWORD *)(v50 + 16);
        if (v51 >= *(_QWORD *)(v50 + 24) >> 1)
        {
          sub_23F3771B4();
          v50 = v54;
        }
        *(_QWORD *)(v50 + 16) = v51 + 1;
        v52 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
        v71 = v50;
        v48((char *)(v50 + v52 + *(_QWORD *)(v67 + 72) * v51), (uint64_t)v66, v73);
        v31 = v72;
      }
      v31 += v63;
      --v28;
    }
    while (v28);
    swift_release();
    swift_bridgeObjectRelease();
    return v71;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
}

void sub_23F54499C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), uint64_t (*a5)(uint64_t), void (*a6)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];
  uint64_t v34;
  void (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);

  v42 = a5;
  v12 = a3(0);
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v33 - v13;
  sub_23F35D2E8(&qword_256E75550);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3D9B88();
  v16 = sub_23F619D6C();
  v39 = *(_QWORD *)(v16 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F3834D0();
  v38 = v18;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F383780();
  v36 = v20;
  v21 = *(_QWORD *)(a1 + 16);
  if (v21)
  {
    v33[3] = v6;
    a4(0);
    sub_23F54DF54();
    v23 = a2;
    v24 = a1 + ((v22 + 32) & ~v22);
    v33[1] = v23;
    v33[2] = a1;
    v25 = v23
        + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_loggingScope;
    v37 = *(_QWORD *)(v26 + 72);
    sub_23F617BA0();
    v27 = MEMORY[0x24BEE4AF8];
    v34 = v25;
    v35 = a6;
    do
    {
      v28 = v42(v25);
      a6(v28);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v41);
      if (sub_23F36195C(v7, 1, v16) == 1)
      {
        sub_23F39E4B8(v7, &qword_256E75550);
      }
      else
      {
        v29 = v36;
        sub_23F5247F0(v36, v7);
        sub_23F5247F0(v38, v29);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F54DEEC();
          v27 = v31;
        }
        v30 = *(_QWORD *)(v27 + 16);
        if (v30 >= *(_QWORD *)(v27 + 24) >> 1)
        {
          sub_23F54DEEC();
          v27 = v32;
        }
        *(_QWORD *)(v27 + 16) = v30 + 1;
        sub_23F5247F0(v27+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v30, v38);
        v25 = v34;
        a6 = v35;
      }
      v24 += v37;
      --v21;
    }
    while (v21);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  sub_23F362870();
}

uint64_t TypeIdentifier.PrimitiveTypeIdentifier.selfLoggingTypeName.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t result;
  _QWORD v7[2];

  v1 = sub_23F61B9BC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F3D9CCC();
  sub_23F38426C((uint64_t)v0, (uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v3 = sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88));
  if (v3 == *MEMORY[0x24BEB9C48])
  {
    sub_23F383E88((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
    v4 = *v0;
    strcpy((char *)v7, "measurement<");
    BYTE5(v7[1]) = 0;
    HIWORD(v7[1]) = -5120;
    if (v4 != 22)
      TypeIdentifier.MeasurementUnitType.selfLoggingTypeName.getter(v4);
    sub_23F61C280();
    sub_23F362D18();
    sub_23F54DC44();
    return v7[0];
  }
  else
  {
    v5 = v3;
    if (v3 == *MEMORY[0x24BEB9CA8])
    {
      return 1701736302;
    }
    else if (v3 == *MEMORY[0x24BEB9C90])
    {
      return 1819242338;
    }
    else if (v3 == *MEMORY[0x24BEB9C80])
    {
      return 7630441;
    }
    else if (v3 == *MEMORY[0x24BEB9CB0])
    {
      return 0x7265626D756ELL;
    }
    else if (v3 == *MEMORY[0x24BEB9CC8])
    {
      return 0x6C616D69636564;
    }
    else if (v3 == *MEMORY[0x24BEB9CC0])
    {
      return 0x676E69727473;
    }
    else if (v3 == *MEMORY[0x24BEB9C98])
    {
      return 1702125924;
    }
    else if (v3 == *MEMORY[0x24BEB9C60])
    {
      return 0x706D6F4365746164;
    }
    else if (v3 == *MEMORY[0x24BEB9C88])
    {
      return 7107189;
    }
    else if (v3 == *MEMORY[0x24BEB9C38])
    {
      return 0x616E6F6974636964;
    }
    else
    {
      result = 0xD000000000000010;
      if (v5 != *MEMORY[0x24BEB9C70])
      {
        if (v5 == *MEMORY[0x24BEB9C58])
        {
          return 0x79636E6572727563;
        }
        else if (v5 == *MEMORY[0x24BEB9C50])
        {
          return 0x4D746E656D796170;
        }
        else if (v5 == *MEMORY[0x24BEB9CD0])
        {
          return 0x72616D6563616C70;
        }
        else if (v5 == *MEMORY[0x24BEB9CB8])
        {
          return 0x6E6F73726570;
        }
        else if (v5 == *MEMORY[0x24BEB9CA0])
        {
          return 1701603686;
        }
        else if (v5 == *MEMORY[0x24BEB9C78])
        {
          return 7368801;
        }
        else if (v5 == *MEMORY[0x24BEB9C68])
        {
          return 0x6261686372616573;
        }
        else if (v5 == *MEMORY[0x24BEB9C40])
        {
          return 0x4673746E65746E69;
        }
        else
        {
          sub_23F383E88((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
          return 0xD000000000000010;
        }
      }
    }
  }
  return result;
}

uint64_t QueryDecorationSELFLogging.logSubComponentExecution<A>(_:_:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, void (*)(uint64_t), uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  id v49;
  uint64_t v50;
  void (*v51)(id, void (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  void (*v52)(uint64_t, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  _BOOL4 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t);
  uint64_t v101;
  uint64_t (*v102)(uint64_t, uint64_t);
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  os_log_t v121;
  void (*v122)(uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;

  v121 = a3;
  v122 = a2;
  v135 = a1;
  v110 = a7;
  v13 = sub_23F61994C();
  v136 = *(_QWORD *)(v13 - 8);
  v137 = v13;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3834D0();
  v114 = v15;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F383780();
  v112 = v17;
  sub_23F39C56C();
  v129 = sub_23F619E98();
  v127 = *(_QWORD *)(v129 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F3834D0();
  v132 = v19;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F383780();
  v118 = v21;
  v111 = a5;
  v109 = *(_QWORD *)(a5 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3D9B88();
  v23 = sub_23F619D48();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  sub_23F383A54();
  v134 = sub_23F61C9DC();
  v138 = *(_QWORD *)(v134 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F3834D0();
  v131 = v26;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F3838E4();
  v130 = v28;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F3838E4();
  v113 = v30;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F3838E4();
  v116 = v32;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F3838E4();
  v115 = v34;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3838E4();
  v117 = v36;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v108 - v38;
  v126 = sub_23F61C9F4();
  v124 = *(_QWORD *)(v126 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F54DC08();
  v125 = sub_23F617000();
  v123 = *(_QWORD *)(v125 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F54DDF8();
  sub_23F616FF4();
  sub_23F61C9E8();
  v128 = v39;
  v139 = a5;
  sub_23F61C9C4();
  sub_23F54DF1C();
  v42 = a6;
  v43 = *(void (**)(uint64_t, void (*)(uint64_t), uint64_t, uint64_t))(a6 + 72);
  v44 = a4;
  v45 = a4;
  v46 = v42;
  v43(v135, v7, v8, v45);
  v47 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8);
  v119 = v23;
  v48 = v47(v8, v23);
  v49 = v133;
  v122(v48);
  if (v49)
  {
    v50 = v113;
    sub_23F61C9C4();
    sub_23F54DF1C();
    v51 = *(void (**)(id, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v46 + 88);
    v122 = v7;
    v51(v49, v7, v8, v44, v46);
    sub_23F54DE80();
    sub_23F6190E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 16))(v114, v135, v137);
    v52 = *(void (**)(uint64_t, char *, uint64_t))(v138 + 16);
    v53 = (uint64_t)v128;
    v54 = v134;
    v52(v130, v128, v134);
    v52(v131, (char *)v50, v54);
    v55 = v49;
    v56 = v49;
    v57 = sub_23F619E8C();
    v58 = sub_23F61C610();
    v59 = v58;
    if (os_log_type_enabled(v57, v58))
    {
      v60 = sub_23F366668();
      v133 = v49;
      v121 = v57;
      v61 = v60;
      v135 = sub_23F366668();
      v140 = v135;
      *(_DWORD *)v61 = 136315906;
      v120 = v59;
      sub_23F54DD94((uint64_t)"logSubComponentExecution(_:_:)");
      sub_23F54DD20(v62);
      *(_WORD *)(v61 + 12) = 2080;
      sub_23F3612C0(&qword_256E79B08, (uint64_t (*)(uint64_t))MEMORY[0x24BE59360], MEMORY[0x24BE59370]);
      v63 = v137;
      v64 = sub_23F61CC1C();
      sub_23F3ECBE4(v64, v65);
      sub_23F54DB40(v66);
      sub_23F362984();
      v67 = sub_23F54DF10();
      v68(v67, v63);
      *(_WORD *)(v61 + 22) = 2080;
      swift_getErrorValue();
      v69 = sub_23F61CCB8();
      sub_23F3ECBE4(v69, v70);
      sub_23F54DB40(v71);
      sub_23F362984();

      *(_WORD *)(v61 + 32) = 2080;
      v72 = v130;
      v73 = v131;
      sub_23F61C994();
      v74 = sub_23F61CDB4();
      sub_23F3ECBE4(v74, v75);
      sub_23F54DB40(v76);
      sub_23F362984();
      sub_23F3D09D0(v72);
      sub_23F3D09D0(v73);
      _os_log_impl(&dword_23F35A000, v121, (os_log_type_t)v120, "[%s] FAILURE subComponent=%s, error=%s, executionTime=%s", (uint8_t *)v61, 0x2Au);
      swift_arrayDestroy();
      sub_23F366530();
    }
    v99 = sub_23F54DF10();
    v100(v99);

    sub_23F3D09D0(v130);
    sub_23F3D09D0(v131);

    (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v132, v129);
    swift_willThrow();
    sub_23F3D09D0(v50);
    sub_23F3D09D0(v53);
    sub_23F54DC24();
    v101 = sub_23F54DE30();
    return v102(v101, v125);
  }
  else
  {
    v133 = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 32))(v110, v9, v111);
    v77 = v117;
    sub_23F61C9C4();
    sub_23F54DF1C();
    (*(void (**)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v46 + 80))(v7, v8, v44, v46);
    sub_23F54DE80();
    sub_23F6190E8();
    v78 = v112;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 16))(v112, v135, v137);
    v79 = *(void (**)(uint64_t, char *, uint64_t))(v138 + 16);
    v80 = (uint64_t)v128;
    v81 = v134;
    v79(v115, v128, v134);
    v79(v116, (char *)v77, v81);
    v82 = sub_23F619E8C();
    v83 = sub_23F61C610();
    v84 = os_log_type_enabled(v82, v83);
    v85 = v129;
    if (v84)
    {
      v86 = sub_23F366668();
      v122 = v7;
      v87 = v86;
      v140 = sub_23F366668();
      *(_DWORD *)v87 = 136315650;
      sub_23F54DD94((uint64_t)"logSubComponentExecution(_:_:)");
      sub_23F54DD20(v88);
      *(_WORD *)(v87 + 12) = 2080;
      sub_23F3612C0(&qword_256E79B08, (uint64_t (*)(uint64_t))MEMORY[0x24BE59360], MEMORY[0x24BE59370]);
      v89 = v78;
      v90 = v137;
      v91 = sub_23F61CC1C();
      sub_23F3ECBE4(v91, v92);
      sub_23F54DB40(v93);
      sub_23F362984();
      (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v89, v90);
      *(_WORD *)(v87 + 22) = 2080;
      v94 = v116;
      v95 = v115;
      sub_23F61C994();
      v96 = sub_23F61CDB4();
      sub_23F3ECBE4(v96, v97);
      sub_23F54DB40(v98);
      sub_23F362984();
      sub_23F3ECBA8(v95);
      sub_23F3ECBA8(v94);
      _os_log_impl(&dword_23F35A000, v82, v83, "[%s] SUCCESS subComponent=%s, executionTime=%s", (uint8_t *)v87, 0x20u);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F4DC500(v115);
    sub_23F4DC500(v116);
    (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v78, v137);
    v104 = sub_23F54DEB8();
    v105(v104, v85);
    sub_23F4DC500(v117);
    sub_23F4DC500(v80);
    sub_23F54DC24();
    v106 = sub_23F54DF10();
    return v107(v106, v125);
  }
}

uint64_t QueryDecorationSELFLogging.logSubComponentExecution<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8[19] = a7;
  v8[20] = v7;
  v8[17] = a5;
  v8[18] = a6;
  v8[15] = a3;
  v8[16] = a4;
  v8[13] = a1;
  v8[14] = a2;
  v10 = sub_23F54DF38();
  v8[21] = v10;
  v8[22] = *(_QWORD *)(v10 - 8);
  v8[23] = sub_23F3666CC();
  v8[24] = sub_23F3666CC();
  v11 = sub_23F619E98();
  v8[25] = v11;
  v8[26] = *(_QWORD *)(v11 - 8);
  v8[27] = sub_23F3666CC();
  v8[28] = sub_23F3666CC();
  v8[29] = *(_QWORD *)(a6 - 8);
  v8[30] = sub_23F366578();
  v12 = sub_23F4A134C();
  v8[31] = v12;
  v8[32] = *(_QWORD *)(v12 - 8);
  v8[33] = sub_23F366578();
  v13 = sub_23F61C9DC();
  v8[34] = v13;
  v8[35] = *(_QWORD *)(v13 - 8);
  v8[36] = sub_23F3666CC();
  v8[37] = sub_23F3666CC();
  v8[38] = sub_23F3666CC();
  v8[39] = sub_23F3666CC();
  v8[40] = sub_23F3666CC();
  v8[41] = sub_23F3666CC();
  v8[42] = sub_23F3666CC();
  v14 = sub_23F61C9F4();
  v8[43] = v14;
  v8[44] = *(_QWORD *)(v14 - 8);
  v8[45] = sub_23F366578();
  v15 = sub_23F3846E4();
  v8[46] = v15;
  v8[47] = *(_QWORD *)(v15 - 8);
  v8[48] = sub_23F366578();
  return swift_task_switch();
}

uint64_t sub_23F545A88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);

  v1 = v0[48];
  v2 = v0[33];
  v10 = v0[32];
  v11 = v0[31];
  v3 = v0[19];
  v4 = v0[17];
  v6 = v0[14];
  v5 = (int *)v0[15];
  sub_23F616FF4();
  sub_23F61C9E8();
  sub_23F61C9C4();
  sub_23F619D3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 72))(v6, v1, v2, v4, v3);
  v7 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v0[49] = v7;
  v7(v2, v11);
  v12 = (uint64_t (*)(_QWORD))((char *)v5 + *v5);
  v8 = (_QWORD *)swift_task_alloc();
  v0[50] = v8;
  *v8 = v0;
  v8[1] = sub_23F545B7C;
  return v12(v0[30]);
}

uint64_t sub_23F545B7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23F545BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;

  v40 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
  v35 = *(_QWORD *)(v0 + 384);
  v1 = *(_QWORD *)(v0 + 328);
  v42 = *(_QWORD *)(v0 + 320);
  v43 = *(_QWORD *)(v0 + 336);
  v44 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 272);
  v41 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 264);
  v37 = *(_QWORD *)(v0 + 176);
  v38 = *(_QWORD *)(v0 + 168);
  v39 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 136);
  v32 = *(_QWORD *)(v0 + 112);
  v33 = *(_QWORD *)(v0 + 248);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 32))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 144));
  sub_23F61C9C4();
  sub_23F619D3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 80))(v35, v3, v5, v4);
  v40(v3, v33);
  sub_23F6190E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v39, v32, v38);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16);
  v6(v42, v43, v2);
  v6(v44, v1, v2);
  v7 = sub_23F619E8C();
  v8 = sub_23F61C610();
  v45 = v7;
  if (sub_23F52E8F8())
  {
    sub_23F54DBD8();
    v27 = *(_QWORD *)(v0 + 312);
    v28 = *(_QWORD *)(v0 + 320);
    v29 = *(_QWORD *)(v0 + 280);
    v31 = *(_QWORD *)(v0 + 272);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 176);
    v11 = sub_23F366668();
    v30 = sub_23F366668();
    v46 = v30;
    *(_DWORD *)v11 = 136315650;
    sub_23F54DF78(v30, 0x800000023F638FD0, &v46);
    *(_QWORD *)(v0 + 80) = v12;
    sub_23F61C790();
    *(_WORD *)(v11 + 12) = 2080;
    sub_23F3612C0(&qword_256E79B08, (uint64_t (*)(uint64_t))MEMORY[0x24BE59360], MEMORY[0x24BE59370]);
    v13 = sub_23F61CC1C();
    sub_23F54DF6C(v13, v14);
    *(_QWORD *)(v0 + 88) = v15;
    sub_23F61C790();
    sub_23F362984();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v9, v10);
    *(_WORD *)(v11 + 22) = 2080;
    sub_23F61C994();
    v16 = sub_23F61CDB4();
    sub_23F54DF6C(v16, v17);
    *(_QWORD *)(v0 + 96) = v18;
    sub_23F61C790();
    sub_23F362984();
    v19 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v19(v28, v31);
    v19(v27, v31);
    _os_log_impl(&dword_23F35A000, v45, v8, "[%s] SUCCESS subComponent=%s, executionTime=%s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    sub_23F366530();
  }
  sub_23F54DBD8();
  v20 = *(_QWORD *)(v0 + 320);
  v21 = *(_QWORD *)(v0 + 312);
  v34 = *(_QWORD *)(v0 + 224);
  v36 = *(_QWORD *)(v0 + 328);
  v22 = *(_QWORD *)(v0 + 208);
  v23 = *(_QWORD *)(v0 + 192);
  v24 = *(_QWORD *)(v0 + 176);

  sub_23F54DE78(v20);
  sub_23F54DE78(v21);
  sub_23F383E64(v23, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  sub_23F383CA8(v34, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_23F54DE78(v36);
  sub_23F54DE78(v37);
  (*(void (**)(_QWORD, uint64_t))(v38 + 8))(v40, v39);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v42);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F546070()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(os_log_t, uint64_t, uint64_t);
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  uint64_t v58;
  os_log_t loga;
  NSObject *log;
  uint64_t v61;

  v1 = *(void **)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 384);
  v52 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
  v54 = *(_QWORD *)(v0 + 304);
  v57 = *(NSObject **)(v0 + 296);
  v58 = *(_QWORD *)(v0 + 336);
  loga = *(os_log_t *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 272);
  v56 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 248);
  v46 = *(_QWORD *)(v0 + 176);
  v48 = *(_QWORD *)(v0 + 168);
  v50 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 136);
  v44 = *(_QWORD *)(v0 + 112);
  sub_23F61C9C4();
  sub_23F619D3C();
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 88))(v1, v2, v4, v7, v6);
  v52(v4, v5);
  sub_23F54DED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v50, v44, v48);
  v8 = *(void (**)(os_log_t, uint64_t, uint64_t))(v56 + 16);
  v8(v57, v58, v3);
  v8(loga, v54, v3);
  v9 = v1;
  v10 = v1;
  v11 = sub_23F507D88();
  v12 = sub_23F61C610();
  log = v11;
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(void **)(v0 + 408);
    v47 = *(_QWORD *)(v0 + 288);
    v49 = *(_QWORD *)(v0 + 296);
    v51 = *(_QWORD *)(v0 + 280);
    v55 = *(_QWORD *)(v0 + 272);
    v14 = *(_QWORD *)(v0 + 184);
    v45 = *(_QWORD *)(v0 + 176);
    v15 = sub_23F366668();
    v53 = sub_23F366668();
    v61 = v53;
    *(_DWORD *)v15 = 136315906;
    sub_23F54DF78(v53, 0x800000023F638FD0, &v61);
    *(_QWORD *)(v0 + 56) = v16;
    sub_23F61C790();
    *(_WORD *)(v15 + 12) = 2080;
    sub_23F3612C0(&qword_256E79B08, (uint64_t (*)(uint64_t))MEMORY[0x24BE59360], MEMORY[0x24BE59370]);
    v17 = sub_23F61CC1C();
    sub_23F3B5EA8(v17, v18);
    *(_QWORD *)(v0 + 40) = v19;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F383E64(v14, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
    *(_WORD *)(v15 + 22) = 2080;
    swift_getErrorValue();
    v20 = sub_23F61CCB8();
    sub_23F3B5EA8(v20, v21);
    *(_QWORD *)(v0 + 64) = v22;
    sub_23F61C790();
    sub_23F362984();

    *(_WORD *)(v15 + 32) = 2080;
    sub_23F61C994();
    v23 = sub_23F61CDB4();
    sub_23F3B5EA8(v23, v24);
    *(_QWORD *)(v0 + 72) = v25;
    sub_23F61C790();
    sub_23F362984();
    v26 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    v26(v49, v55);
    v26(v47, v55);
    _os_log_impl(&dword_23F35A000, log, v12, "[%s] FAILURE subComponent=%s, error=%s, executionTime=%s", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v27 = *(void **)(v0 + 408);
  v29 = *(_QWORD *)(v0 + 288);
  v28 = *(_QWORD *)(v0 + 296);
  v30 = *(_QWORD *)(v0 + 272);
  v31 = *(_QWORD *)(v0 + 280);
  v33 = *(_QWORD *)(v0 + 208);
  v32 = *(_QWORD *)(v0 + 216);
  v34 = *(_QWORD *)(v0 + 200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));

  v35 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v35(v28, v30);
  v35(v29, v30);

  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
  v36 = *(_QWORD *)(v0 + 360);
  v37 = *(_QWORD *)(v0 + 352);
  v38 = *(_QWORD *)(v0 + 336);
  v39 = *(_QWORD *)(v0 + 304);
  v40 = *(_QWORD *)(v0 + 272);
  swift_willThrow();
  v35(v39, v40);
  v35(v38, v40);
  sub_23F3D98EC(v36, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
  v41 = sub_23F54DF10();
  v42(v41);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void QueryDecorationLoggerBuilder.getSELFLogger(contextId:loggingScope:)()
{
  sub_23F5465B8();
}

void sub_23F546590()
{
  QueryDecorationLoggerBuilder.getSELFLogger(contextId:loggingScope:)();
}

void QueryDecorationNullSELFLoggerBuilder.getSELFLogger(contextId:loggingScope:)()
{
  sub_23F5465B8();
}

void sub_23F5465B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t DecorationSELFLoggerASync;
  uint64_t v17;
  _QWORD v18[2];

  sub_23F362ABC();
  v18[0] = v1;
  v18[1] = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_23F54DE90();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F3846E4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = sub_23F383A54();
  v4(v15);
  swift_allocObject();
  sub_23F4244A8(v0, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 16))(v12, v18[0], v9);
  DecorationSELFLoggerASync = type metadata accessor for QueryDecorationSELFLoggerASync();
  swift_allocObject();
  sub_23F54CD54();
  v8[3] = DecorationSELFLoggerASync;
  v8[4] = &off_250FDBD80;
  *v8 = v17;
  sub_23F362948();
}

void sub_23F5466C0()
{
  QueryDecorationNullSELFLoggerBuilder.getSELFLogger(contextId:loggingScope:)();
}

uint64_t sub_23F5466D4()
{
  uint64_t v0;

  v0 = sub_23F617BA0();
  return sub_23F54672C(v0);
}

uint64_t sub_23F5466FC()
{
  sub_23F3B1450();
  return sub_23F617BA0();
}

uint64_t sub_23F54672C(uint64_t a1)
{
  uint64_t v1;

  sub_23F3B1450();
  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23F54676C())()
{
  sub_23F3B1450();
  return j__swift_endAccess_0;
}

void QueryDecorationCapturingSELFLoggerBuilder.__allocating_init()()
{
  sub_23F516EA4();
  swift_allocObject();
  QueryDecorationCapturingSELFLoggerBuilder.init()();
  sub_23F362928();
}

uint64_t QueryDecorationCapturingSELFLoggerBuilder.init()()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  return v0;
}

void sub_23F546808(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t DecorationSELFLoggerSync;
  uint64_t v13;

  v8 = sub_23F54DE90();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F383EC4();
  v10 = sub_23F3846E4();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3B1F34();
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v4, a1);
  sub_23F383C64(v3, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  DecorationSELFLoggerSync = type metadata accessor for QueryDecorationSELFLoggerSync();
  sub_23F3668A0();
  sub_23F3D9E08();
  sub_23F54CEA4();
  a3[3] = DecorationSELFLoggerSync;
  a3[4] = &off_250FDBD18;
  *a3 = v13;
  sub_23F383568();
}

id sub_23F5468E8()
{
  return sub_23F5469E4((void (*)(id))sub_23F54CF94);
}

uint64_t sub_23F546930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_beginAccess();
  sub_23F376A54();
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 16);
  sub_23F376BEC(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v5 + 16) = v4 + 1;
  v6 = sub_23F619CF4();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v4, a2, v6);
  return swift_endAccess();
}

id sub_23F5469E4(void (*a1)(id))
{
  void *v1;

  a1(objc_msgSend(v1, sel_lock));
  return objc_msgSend(v1, sel_unlock);
}

uint64_t QueryDecorationCapturingSELFLoggerBuilder.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t QueryDecorationCapturingSELFLoggerBuilder.__deallocating_deinit()
{
  QueryDecorationCapturingSELFLoggerBuilder.deinit();
  sub_23F516EA4();
  return swift_deallocClassInstance();
}

void sub_23F546A90(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_23F546808(a1, a2, a3);
}

id sub_23F546AB0()
{
  return sub_23F5468E8();
}

uint64_t sub_23F546AD0()
{
  return sub_23F546ADC();
}

uint64_t sub_23F546ADC()
{
  uint64_t v0;

  v0 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F619D18();
  sub_23F3612C0(&qword_256E7A098, (uint64_t (*)(uint64_t))MEMORY[0x24BE59820], MEMORY[0x24BE59818]);
  return sub_23F619D30();
}

void sub_23F546D8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v2 = sub_23F619CF4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - v7;
  v9 = sub_23F619E98();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6190E8();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v13(v8, a1, v2);
  v14 = sub_23F619E8C();
  v15 = sub_23F61C610();
  v27 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v26 = a1;
    v17 = v16;
    v23 = swift_slowAlloc();
    *(_QWORD *)&v29 = v23;
    *(_DWORD *)v17 = 136315394;
    v25 = v9;
    sub_23F37AE00(0x6E65764574696D65, 0xED0000293A5F2874, (uint64_t *)&v29);
    v28 = v18;
    v24 = v10;
    sub_23F61C790();
    *(_WORD *)(v17 + 12) = 2080;
    v13(v6, (uint64_t)v8, v2);
    v19 = sub_23F61C16C();
    sub_23F37AE00(v19, v20, (uint64_t *)&v29);
    v28 = v21;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    _os_log_impl(&dword_23F35A000, v14, (os_log_type_t)v27, "[%s] Writing log %s", (uint8_t *)v17, 0x16u);
    v22 = v23;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v22, -1, -1);
    MEMORY[0x242670B70](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  if (qword_256E6F098 != -1)
    swift_once();
  if (qword_256E79AF8)
  {
    sub_23F382FC4((uint64_t)&xmmword_256E79AE0, (uint64_t)&v29);
  }
  else
  {
    v29 = xmmword_256E79AE0;
    v30 = unk_256E79AF0;
    v31 = qword_256E79B00;
  }
  if (*((_QWORD *)&v30 + 1))
  {
    sub_23F35EA9C(&v29, *((uint64_t *)&v30 + 1));
    sub_23F619DB4();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v29);
  }
}

void sub_23F5470B4(uint64_t a1)
{
  sub_23F546D8C(a1);
}

uint64_t sub_23F5470D4(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1, a2);
}

uint64_t sub_23F5470F4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;

  v2 = v1;
  v54 = a1;
  v3 = sub_23F35D2E8(&qword_256E7A088);
  MEMORY[0x24BDAC7A8](v3);
  v58 = (uint64_t *)((char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_23F619AD8();
  v6 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  v57 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E7A090);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F619CF4();
  v59 = *(_QWORD *)(v11 - 8);
  v60 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v53 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v49 - v14;
  v16 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F35D2E8(&qword_256E75550);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23F619B74();
  v52 = *(_QWORD *)(v22 - 8);
  v23 = v52;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24266D078](v24);
  v27 = (char *)v2
      + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_contextId;
  sub_23F619D60();
  v28 = sub_23F617000();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v18, v27, v28);
  sub_23F36196C((uint64_t)v18, 0, 1, v28);
  sub_23F619D54();
  v29 = sub_23F619D6C();
  sub_23F36196C((uint64_t)v21, 0, 1, v29);
  sub_23F619964();
  v30 = v54;
  sub_23F5495C8(v54);
  v31 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v51 = v22;
  v31(v10, v26, v22);
  sub_23F36196C((uint64_t)v10, 0, 1, v22);
  v50 = v15;
  sub_23F6198F8();
  v32 = v2 + 2;
  v33 = v2[5];
  v34 = v2[6];
  sub_23F35EA9C(v2 + 2, v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 8))(v15, v33, v34);
  v35 = v55;
  sub_23F619ACC();
  sub_23F619AC0();
  v36 = v53;
  sub_23F5495C8(v30);
  v37 = v56;
  v38 = swift_allocBox();
  v39 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v40, v35, v37);
  v41 = (uint64_t)v58;
  *v58 = v38;
  v42 = *MEMORY[0x24BE59488];
  v43 = sub_23F619AB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v41, v42, v43);
  sub_23F36196C(v41, 0, 1, v43);
  sub_23F619A54();
  v45 = v2[5];
  v44 = v2[6];
  sub_23F35EA9C(v32, v45);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 8))(v36, v45, v44);
  v46 = v60;
  v47 = *(void (**)(char *, uint64_t))(v59 + 8);
  v47(v36, v60);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v35, v37);
  v47(v50, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v26, v51);
}

uint64_t sub_23F547508(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v2 = v1;
  v4 = sub_23F35D2E8(&qword_256E7A088);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_23F619CF4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F619C34();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F619ACC();
  sub_23F619AC0();
  sub_23F5495C8(a1);
  v15 = swift_allocBox();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v16, v14, v11);
  *v6 = v15;
  v17 = *MEMORY[0x24BE59490];
  v18 = sub_23F619AB4();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v6, v17, v18);
  sub_23F36196C((uint64_t)v6, 0, 1, v18);
  sub_23F619A54();
  v19 = v2 + 2;
  v21 = v2[5];
  v20 = v2[6];
  sub_23F35EA9C(v19, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 8))(v10, v21, v20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_23F5476D4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v3 = v2;
  v24 = a2;
  v4 = sub_23F35D2E8(&qword_256E7A088);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_23F619CF4();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F619A9C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (void *)sub_23F616D90();
  sub_23F619A90();
  v15 = objc_msgSend(v14, sel_domain);
  sub_23F61C10C();

  sub_23F619A78();
  result = (uint64_t)objc_msgSend(v14, sel_code);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    v27 = 0;
    sub_23F619A84();
    sub_23F5495C8(v24);
    v17 = swift_allocBox();
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v18, v13, v10);
    *v6 = v17;
    v19 = *MEMORY[0x24BE59498];
    v20 = sub_23F619AB4();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v6, v19, v20);
    sub_23F36196C((uint64_t)v6, 0, 1, v20);
    sub_23F619A54();
    v21 = v3 + 2;
    v23 = v3[5];
    v22 = v3[6];
    sub_23F35EA9C(v21, v23);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 8))(v9, v23, v22);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  __break(1u);
  return result;
}

uint64_t sub_23F547930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = v5;
  v48 = a5;
  v52 = a2;
  v10 = sub_23F35D2E8(&qword_256E7A080);
  MEMORY[0x24BDAC7A8](v10);
  v49 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23F619CF4();
  v56 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v53 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F35D2E8(&qword_256E70F38);
  MEMORY[0x24BDAC7A8](v13);
  v51 = (uint64_t)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F619064();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F619B20();
  v54 = *(_QWORD *)(v19 - 8);
  v55 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F619B14();
  if (a1)
  {
    swift_retain();
    sub_23F5443DC(a1, v6);
    sub_23F619B08();
  }
  if (v52)
  {
    v22 = sub_23F3EEFF0(10, v52);
    v46 = a4;
    v47 = v16;
    v45 = v15;
    v24 = v23;
    v25 = a3;
    v27 = v26;
    v28 = v18;
    v30 = v29;
    swift_retain();
    sub_23F617BA0();
    v31 = v27;
    a3 = v25;
    v32 = v30;
    v18 = v28;
    sub_23F543E3C(v22, v24, v31, v32, v6);
    swift_unknownObjectRelease();
    v15 = v45;
    a4 = v46;
    v16 = v47;
    sub_23F619AF0();
  }
  if (a3)
  {
    swift_retain();
    sub_23F54499C(a3, v6, (uint64_t (*)(_QWORD))MEMORY[0x24BE59738], (void (*)(_QWORD))MEMORY[0x24BE577B0], (uint64_t (*)(uint64_t))sub_23F547CFC, MEMORY[0x24BE59718]);
    sub_23F619AFC();
  }
  v33 = v51;
  sub_23F39E478(a4, v51, &qword_256E70F38);
  if (sub_23F36195C(v33, 1, v15) == 1)
  {
    sub_23F39E4B8(v33, &qword_256E70F38);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v18, v33, v15);
    v34 = sub_23F619040();
    swift_retain();
    sub_23F54499C(v34, v6, (uint64_t (*)(_QWORD))MEMORY[0x24BE593D0], (void (*)(_QWORD))MEMORY[0x24BE57608], (uint64_t (*)(uint64_t))sub_23F5480A0, MEMORY[0x24BE593A8]);
    swift_bridgeObjectRelease();
    sub_23F619AE4();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  v35 = (uint64_t)v49;
  v36 = v50;
  v37 = v53;
  sub_23F5495C8(v48);
  v39 = v54;
  v38 = v55;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v35, v21, v55);
  sub_23F36196C(v35, 0, 1, v38);
  sub_23F619A60();
  v40 = (_QWORD *)(v6 + 16);
  v42 = *(_QWORD *)(v6 + 40);
  v41 = *(_QWORD *)(v6 + 48);
  sub_23F35EA9C(v40, v42);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 8))(v37, v42, v41);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v21, v38);
}

uint64_t sub_23F547CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v0 = sub_23F618AE8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v34 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F35D2E8(&qword_256E7A068);
  MEMORY[0x24BDAC7A8](v3);
  v35 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E7A070);
  MEMORY[0x24BDAC7A8](v8);
  v33 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F35D2E8(&qword_256E6FB20);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - v14;
  v16 = sub_23F35D2E8(&qword_256E75550);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F619CD0();
  RetrievedContext.getQueryDecorationLogUniqueId(loggingScope:)();
  v19 = sub_23F617000();
  if (sub_23F36195C((uint64_t)v15, 1, v19) == 1)
  {
    sub_23F39E4B8((uint64_t)v15, &qword_256E6FB20);
    v20 = 1;
  }
  else
  {
    sub_23F619D60();
    v32 = v1;
    v21 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v13, v15, v19);
    sub_23F36196C((uint64_t)v13, 0, 1, v19);
    sub_23F619D54();
    v1 = v32;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v19);
    v20 = 0;
  }
  v22 = sub_23F619D6C();
  sub_23F36196C((uint64_t)v18, v20, 1, v22);
  sub_23F619964();
  sub_23F618CE0();
  v23 = sub_23F61B92C();
  v24 = sub_23F36195C((uint64_t)v7, 1, v23);
  v25 = (uint64_t)v33;
  if (v24 == 1)
  {
    sub_23F39E4B8((uint64_t)v7, &qword_256E701F0);
    v26 = 1;
  }
  else
  {
    TypedValue.toQDLog()();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v7, v23);
    v26 = 0;
  }
  v27 = sub_23F619928();
  sub_23F36196C(v25, v26, 1, v27);
  sub_23F619CC4();
  v28 = v34;
  sub_23F618CF8();
  v29 = v35;
  sub_23F54B840(v35);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v28, v0);
  v30 = sub_23F619B2C();
  sub_23F36196C(v29, 0, 1, v30);
  return sub_23F619CAC();
}

uint64_t sub_23F5480A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v1 = sub_23F35D2E8(&qword_256E7A058);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F618BB4();
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E6FB20);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v23 - v11;
  v13 = sub_23F35D2E8(&qword_256E75550);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6199B8();
  v24 = v0;
  RetrievedTool.getQueryDecorationLogUniqueId(loggingScope:)((uint64_t)v12);
  v16 = sub_23F617000();
  if (sub_23F36195C((uint64_t)v12, 1, v16) == 1)
  {
    sub_23F39E4B8((uint64_t)v12, &qword_256E6FB20);
    v17 = 1;
  }
  else
  {
    sub_23F619D60();
    v18 = *(_QWORD *)(v16 - 8);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v10, v12, v16);
    sub_23F36196C((uint64_t)v10, 0, 1, v16);
    sub_23F619D54();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v16);
    v17 = 0;
  }
  v19 = sub_23F619D6C();
  sub_23F36196C((uint64_t)v15, v17, 1, v19);
  sub_23F619964();
  sub_23F618BCC();
  RetrievedTool.Definition.toCandidateIdentifier()();
  v20 = *(void (**)(char *, uint64_t))(v23 + 8);
  v20(v6, v4);
  swift_bridgeObjectRelease();
  sub_23F6199A0();
  sub_23F618BCC();
  sub_23F54BCF8((uint64_t)v3);
  v20(v6, v4);
  v21 = sub_23F619934();
  sub_23F36196C((uint64_t)v3, 0, 1, v21);
  return sub_23F6199AC();
}

uint64_t sub_23F548350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v5 = v4;
  v48 = a4;
  v45 = a3;
  v8 = sub_23F35D2E8(&qword_256E7A048);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F619CF4();
  v49 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F619A0C();
  v46 = *(_QWORD *)(v14 - 8);
  v47 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F619A00();
  v17 = sub_23F3EEFDC(10, a1);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_retain();
  sub_23F617BA0();
  sub_23F543814(v17, v19, v21, v23, v5);
  swift_unknownObjectRelease();
  sub_23F6199F4();
  v24 = sub_23F3EEFF0(10, a2);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  swift_retain();
  sub_23F617BA0();
  sub_23F543E3C(v24, v26, v28, v30, v5);
  swift_unknownObjectRelease();
  sub_23F6199E8();
  v31 = sub_23F3EEFC8(10, v45);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_retain();
  sub_23F617BA0();
  sub_23F5440D4(v31, v33, v35, v37, v5);
  swift_unknownObjectRelease();
  sub_23F6199DC();
  sub_23F5495C8(v48);
  v38 = v46;
  v39 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v10, v16, v47);
  sub_23F36196C((uint64_t)v10, 0, 1, v39);
  sub_23F619958();
  v40 = (_QWORD *)(v5 + 16);
  v42 = *(_QWORD *)(v5 + 40);
  v41 = *(_QWORD *)(v5 + 48);
  sub_23F35EA9C(v40, v42);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 8))(v13, v42, v41);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v16, v39);
}

uint64_t sub_23F548600(unint64_t a1, unint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _DWORD v23[4];
  uint64_t v24;
  char v25;
  char v26;

  v5 = v4;
  v24 = a4;
  v23[3] = a3;
  v8 = sub_23F35D2E8(&qword_256E7A040);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F619CF4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F619A48();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F619A3C();
  if ((a1 & 0x8000000000000000) != 0
    || HIDWORD(a1)
    || (v26 = 0, MEMORY[0x24266CF28](a1), (a2 & 0x8000000000000000) != 0)
    || HIDWORD(a2))
  {
    result = sub_23F61CA54();
    __break(1u);
  }
  else
  {
    v25 = 0;
    MEMORY[0x24266CF34](a2);
    sub_23F619A30();
    sub_23F5495C8(v24);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v10, v18, v15);
    sub_23F36196C((uint64_t)v10, 0, 1, v15);
    sub_23F6199D0();
    v19 = v5 + 2;
    v21 = v5[5];
    v20 = v5[6];
    sub_23F35EA9C(v19, v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 8))(v14, v21, v20);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

uint64_t sub_23F54886C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a3;
  v44 = a2;
  v4 = sub_23F35D2E8(&qword_256E7A018);
  MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F619CF4();
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E7A030);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F35D2E8(&qword_256E75550);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F619C7C();
  v42 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F35D2E8(&qword_256E7A038);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F619CA0();
  v41 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24266D1A4](v24);
  v27 = sub_23F61994C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v22, a1, v27);
  sub_23F36196C((uint64_t)v22, 0, 1, v27);
  sub_23F619C88();
  sub_23F619C70();
  sub_23F619D60();
  v28 = sub_23F617000();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v13, v44, v28);
  sub_23F36196C((uint64_t)v13, 0, 1, v28);
  sub_23F619D54();
  v29 = sub_23F619D6C();
  sub_23F36196C((uint64_t)v16, 0, 1, v29);
  sub_23F619C64();
  v30 = v41;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v10, v26, v23);
  sub_23F36196C((uint64_t)v10, 0, 1, v23);
  sub_23F619C40();
  v31 = v43;
  v32 = v47;
  sub_23F5495C8(v46);
  v33 = v42;
  v34 = (uint64_t)v45;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v45, v19, v17);
  sub_23F36196C(v34, 0, 1, v17);
  sub_23F619BE0();
  v35 = v32;
  v36 = (_QWORD *)(v32 + 16);
  v37 = *(_QWORD *)(v32 + 40);
  v38 = *(_QWORD *)(v35 + 48);
  sub_23F35EA9C(v36, v37);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 8))(v31, v37, v38);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v31, v49);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v26, v23);
}

uint64_t sub_23F548C34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a2;
  v35 = a1;
  v2 = sub_23F35D2E8(&qword_256E7A018);
  MEMORY[0x24BDAC7A8](v2);
  v36 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F619CF4();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E7A028);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F35D2E8(&qword_256E75550);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F619C7C();
  v34 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F619BD4();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F619ACC();
  sub_23F619AC0();
  sub_23F619C70();
  sub_23F619D60();
  v23 = sub_23F617000();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v12, v35, v23);
  sub_23F36196C((uint64_t)v12, 0, 1, v23);
  sub_23F619D54();
  v24 = sub_23F619D6C();
  sub_23F36196C((uint64_t)v15, 0, 1, v24);
  sub_23F619C64();
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v9, v22, v19);
  sub_23F36196C((uint64_t)v9, 0, 1, v19);
  sub_23F619C4C();
  v25 = v38;
  sub_23F5495C8(v37);
  v26 = v34;
  v27 = (uint64_t)v36;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v36, v18, v16);
  sub_23F36196C(v27, 0, 1, v16);
  sub_23F619BE0();
  v28 = v25;
  v29 = (_QWORD *)(v25 + 16);
  v30 = *(_QWORD *)(v25 + 40);
  v31 = *(_QWORD *)(v28 + 48);
  sub_23F35EA9C(v29, v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 8))(v6, v30, v31);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v40);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
}

uint64_t sub_23F548F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;

  v42 = a3;
  v38 = a2;
  v3 = sub_23F35D2E8(&qword_256E7A018);
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F619CF4();
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E7A020);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F35D2E8(&qword_256E75550);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F619C7C();
  v40 = *(_QWORD *)(v16 - 8);
  v41 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F619C10();
  v39 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (void *)sub_23F616D90();
  sub_23F619A90();
  v23 = objc_msgSend(v22, sel_domain);
  sub_23F61C10C();

  sub_23F619A78();
  v37 = v22;
  result = (uint64_t)objc_msgSend(v22, sel_code);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    v47 = 0;
    sub_23F619A84();
    sub_23F619C70();
    sub_23F619D60();
    v25 = sub_23F617000();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v12, v38, v25);
    sub_23F36196C((uint64_t)v12, 0, 1, v25);
    sub_23F619D54();
    v26 = sub_23F619D6C();
    sub_23F36196C((uint64_t)v15, 0, 1, v26);
    sub_23F619C64();
    v27 = v39;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v9, v21, v19);
    sub_23F36196C((uint64_t)v9, 0, 1, v19);
    sub_23F619C58();
    v28 = v36;
    v29 = v46;
    sub_23F5495C8(v42);
    v31 = v40;
    v30 = v41;
    v32 = (uint64_t)v43;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v43, v18, v41);
    sub_23F36196C(v32, 0, 1, v30);
    sub_23F619BE0();
    v33 = v29 + 2;
    v34 = v29[5];
    v35 = v29[6];
    sub_23F35EA9C(v33, v34);
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 8))(v28, v34, v35);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v45);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v21, v19);
  }
  __break(1u);
  return result;
}

uint64_t sub_23F54935C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v29 = a2;
  v5 = sub_23F35D2E8(&qword_256E7A010);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F619CF4();
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F35D2E8(&qword_256E75550);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F619B50();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24266D054](v19);
  sub_23F619D60();
  v22 = sub_23F617000();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v13, a1, v22);
  sub_23F36196C((uint64_t)v13, 0, 1, v22);
  sub_23F619D54();
  v23 = sub_23F619D6C();
  sub_23F36196C((uint64_t)v16, 0, 1, v23);
  sub_23F619964();
  sub_23F5495C8(v29);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v7, v21, v17);
  sub_23F36196C((uint64_t)v7, 0, 1, v17);
  sub_23F619A6C();
  v24 = v3 + 2;
  v26 = v3[5];
  v25 = v3[6];
  sub_23F35EA9C(v24, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 8))(v10, v26, v25);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, v17);
}

uint64_t sub_23F5495C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v2 = sub_23F35D2E8(&qword_256E75538);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F35D2E8(&qword_256E7A008);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E75550);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F619988();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61997C();
  v18 = v1
      + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_componentId;
  sub_23F619D60();
  v19 = sub_23F617000();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v10, v18, v19);
  sub_23F36196C((uint64_t)v10, 0, 1, v19);
  sub_23F619D54();
  v20 = sub_23F619D6C();
  sub_23F36196C((uint64_t)v13, 0, 1, v20);
  sub_23F619964();
  sub_23F616FF4();
  sub_23F36196C((uint64_t)v10, 0, 1, v19);
  sub_23F619970();
  sub_23F619CE8();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v17, v14);
  sub_23F36196C((uint64_t)v7, 0, 1, v14);
  sub_23F619940();
  v21 = sub_23F619D48();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v4, v24, v21);
  sub_23F36196C((uint64_t)v4, 0, 1, v21);
  sub_23F619AA8();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_23F549864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  v1 = v0
     + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_contextId;
  v2 = sub_23F617000();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0
     + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_loggingScope;
  v5 = sub_23F6182A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v3(v0+ OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_componentId, v2);
  return v0;
}

uint64_t sub_23F5498F8()
{
  sub_23F549864();
  return swift_deallocClassInstance();
}

uint64_t sub_23F549918(uint64_t a1, uint64_t a2)
{
  return sub_23F549940(a1, a2, (uint64_t)&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_componentId, (void (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23F54992C(uint64_t a1, uint64_t a2)
{
  return sub_23F549940(a1, a2, (uint64_t)&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_loggingScope, (void (*)(_QWORD))MEMORY[0x24BE53790]);
}

uint64_t sub_23F549940(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  a4(0);
  v4 = sub_23F3F9C80();
  return sub_23F3F9C0C(v4, v5, v6, v7);
}

uint64_t sub_23F549970(uint64_t a1)
{
  return sub_23F5470F4(a1);
}

uint64_t sub_23F549990(uint64_t a1)
{
  return sub_23F547508(a1);
}

uint64_t sub_23F5499B0(uint64_t a1, uint64_t a2)
{
  return sub_23F5476D4(a1, a2);
}

uint64_t sub_23F5499D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23F547930(a1, a2, a3, a4, a5);
}

uint64_t sub_23F5499F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F548350(a1, a2, a3, a4);
}

uint64_t sub_23F549A10(unint64_t a1, unint64_t a2, int a3, uint64_t a4)
{
  return sub_23F548600(a1, a2, a3, a4);
}

uint64_t sub_23F549A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F54886C(a1, a2, a3);
}

uint64_t sub_23F549A50(uint64_t a1, uint64_t a2)
{
  return sub_23F548C34(a1, a2);
}

uint64_t sub_23F549A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F548F78(a1, a2, a3);
}

uint64_t sub_23F549A90(uint64_t a1, uint64_t a2)
{
  return sub_23F54935C(a1, a2);
}

uint64_t sub_23F549AB0()
{
  return sub_23F549AD8((uint64_t)&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_componentId, (void (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23F549AC4()
{
  return sub_23F549AD8((uint64_t)&OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_loggingScope, (void (*)(_QWORD))MEMORY[0x24BE53790]);
}

uint64_t sub_23F549AD8(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  a2(0);
  v2 = sub_23F3F9C80();
  return sub_23F3F9C0C(v2, v3, v4, v5);
}

void sub_23F549B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F549C70(a1, (uint64_t)&unk_250FDBF88, (uint64_t)&unk_256E7A000, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t sub_23F549B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_23F549B34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F54DDEC();
  sub_23F5470F4(v1);
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F549B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  sub_23F54CBB4(a1, 0, 0, 0, 1, 0, 0);
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23F61C43C();
    swift_unknownObjectRelease();
  }
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  return swift_task_create();
}

void sub_23F549C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_23F549C70(a1, (uint64_t)&unk_250FDBF60, (uint64_t)&unk_256E79FF0, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_23F549C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;

  sub_23F362ABC();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v27 = v26;
  v28 = sub_23F4A134C();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_QWORD *)(v29 + 64);
  MEMORY[0x24BDAC7A8](v28);
  sub_23F35D2E8(&qword_256E717A8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F383EC4();
  sub_23F61C478();
  v32 = sub_23F61C490();
  sub_23F40B3E8(v21, v33, v34, v32);
  sub_23F384918((uint64_t)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16));
  v35 = (*(unsigned __int8 *)(v29 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = 0;
  v36[3] = 0;
  v36[4] = v20;
  sub_23F384918((uint64_t)v36 + v35, (uint64_t)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32));
  sub_23F3D9E08();
  sub_23F549B5C(v21, v25, (uint64_t)v36);
  swift_release();
  sub_23F39E4B8(v21, &qword_256E717A8);
  sub_23F362948();
}

uint64_t sub_23F549D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_23F549D98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F54DDEC();
  sub_23F547508(v1);
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F549DC0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;

  v5 = sub_23F619D48();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = sub_23F35D2E8(&qword_256E717A8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61C478();
  v11 = sub_23F61C490();
  sub_23F36196C((uint64_t)v10, 0, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = 0;
  *((_QWORD *)v13 + 3) = 0;
  *((_QWORD *)v13 + 4) = v2;
  *((_QWORD *)v13 + 5) = a1;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v13[v12], (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_retain();
  v14 = a1;
  sub_23F549B5C((uint64_t)v10, (uint64_t)&unk_256E79FE0, (uint64_t)v13);
  swift_release();
  sub_23F39E4B8((uint64_t)v10, &qword_256E717A8);
}

uint64_t sub_23F549F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_23F549F40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F54DDDC();
  sub_23F5476D4(v1, v2);
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F549F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  v24 = a5;
  v25 = a1;
  v7 = sub_23F619D48();
  v8 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = sub_23F35D2E8(&qword_256E70F38);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F35D2E8(&qword_256E717A8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61C478();
  v17 = sub_23F61C490();
  sub_23F36196C((uint64_t)v16, 0, 1, v17);
  sub_23F39E478(a4, (uint64_t)v13, &qword_256E70F38);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v7);
  v18 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v19 = (v12 + *(unsigned __int8 *)(v8 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = 0;
  *((_QWORD *)v20 + 3) = 0;
  v21 = v25;
  *((_QWORD *)v20 + 4) = v26;
  *((_QWORD *)v20 + 5) = v21;
  *((_QWORD *)v20 + 6) = v27;
  *((_QWORD *)v20 + 7) = a3;
  sub_23F54D858((uint64_t)v13, (uint64_t)&v20[v18]);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v23);
  sub_23F617BA0();
  swift_retain();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F549B5C((uint64_t)v16, (uint64_t)&unk_256E79FD0, (uint64_t)v20);
  swift_release();
  sub_23F39E4B8((uint64_t)v16, &qword_256E717A8);
}

uint64_t sub_23F54A164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[6] = a8;
  v8[7] = v10;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  return swift_task_switch();
}

uint64_t sub_23F54A18C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_23F54DDEC();
  sub_23F547930(v1, v2, v3, v4, v5);
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F54A1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = v4;
  v21 = a3;
  v9 = sub_23F619D48();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F35D2E8(&qword_256E717A8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61C478();
  v16 = sub_23F61C490();
  sub_23F36196C((uint64_t)v15, 0, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a4, v9);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = 0;
  *((_QWORD *)v18 + 3) = 0;
  *((_QWORD *)v18 + 4) = v5;
  *((_QWORD *)v18 + 5) = a1;
  v19 = v21;
  *((_QWORD *)v18 + 6) = a2;
  *((_QWORD *)v18 + 7) = v19;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v18[v17], v12, v9);
  swift_retain();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F549B5C((uint64_t)v15, (uint64_t)&unk_256E79FC0, (uint64_t)v18);
  swift_release();
  sub_23F39E4B8((uint64_t)v15, &qword_256E717A8);
}

uint64_t sub_23F54A348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

uint64_t sub_23F54A368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23F54DDDC();
  sub_23F548350(v1, v2, v3, v4);
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F54A394(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE v17[12];
  int v18;

  v18 = a3;
  v8 = sub_23F619D48();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = sub_23F35D2E8(&qword_256E717A8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F61C478();
  v14 = sub_23F61C490();
  sub_23F36196C((uint64_t)v13, 0, 1, v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 32) = v4;
  *(_QWORD *)(v16 + 40) = a1;
  *(_QWORD *)(v16 + 48) = a2;
  *(_BYTE *)(v16 + 56) = v18;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v9 + 32))(v16 + v15, &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  swift_retain();
  sub_23F549B5C((uint64_t)v13, (uint64_t)&unk_256E79FB0, v16);
  swift_release();
  sub_23F39E4B8((uint64_t)v13, &qword_256E717A8);
}

uint64_t sub_23F54A508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;

  *(_BYTE *)(v8 + 48) = a7;
  *(_QWORD *)(v8 + 32) = a6;
  *(_QWORD *)(v8 + 40) = a8;
  *(_QWORD *)(v8 + 16) = a4;
  *(_QWORD *)(v8 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_23F54A528()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  int v3;
  uint64_t v4;

  v1 = sub_23F54DDEC();
  sub_23F548600(v1, v2, v3, v4);
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F54A558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v26 = a3;
  v25 = a2;
  v23 = a1;
  v29 = sub_23F619D48();
  v24 = *(_QWORD *)(v29 - 8);
  v3 = *(_QWORD *)(v24 + 64);
  MEMORY[0x24BDAC7A8](v29);
  v28 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F617000();
  v5 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v22 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F61994C();
  v8 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E717A8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61C478();
  v14 = sub_23F61C490();
  sub_23F36196C((uint64_t)v13, 0, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v23, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v4);
  v15 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v28, v26, v29);
  v16 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v17 = (v9 + *(unsigned __int8 *)(v5 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v18 = (v6 + *(unsigned __int8 *)(v15 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = 0;
  *((_QWORD *)v19 + 3) = 0;
  *((_QWORD *)v19 + 4) = v27;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v19[v16], v10, v20);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v19[v17], v22, v21);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v19[v18], v28, v29);
  swift_retain();
  sub_23F549B5C((uint64_t)v13, (uint64_t)&unk_256E79FA0, (uint64_t)v19);
  swift_release();
  sub_23F39E4B8((uint64_t)v13, &qword_256E717A8);
}

uint64_t sub_23F54A7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t sub_23F54A7D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F54DDEC();
  sub_23F54886C(v1, v2, v3);
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F54A7FC()
{
  sub_23F54AA98();
}

uint64_t sub_23F54A810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_23F54A82C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F54DDDC();
  sub_23F548C34(v1, v2);
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F54A854(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;

  v23 = a3;
  v25 = a1;
  v4 = sub_23F619D48();
  v5 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v22 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F617000();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E717A8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61C478();
  v14 = sub_23F61C490();
  sub_23F36196C((uint64_t)v13, 0, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v4);
  v15 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = (v9 + *(unsigned __int8 *)(v5 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = 0;
  *((_QWORD *)v17 + 3) = 0;
  v18 = v25;
  *((_QWORD *)v17 + 4) = v24;
  *((_QWORD *)v17 + 5) = v18;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v17[v15], v10, v7);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v17[v16], v22, v21);
  swift_retain();
  v19 = v18;
  sub_23F549B5C((uint64_t)v13, (uint64_t)&unk_256E79F80, (uint64_t)v17);
  swift_release();
  sub_23F39E4B8((uint64_t)v13, &qword_256E717A8);
}

uint64_t sub_23F54AA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t sub_23F54AA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F54DDEC();
  sub_23F548F78(v1, v2, v3);
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F54AA84()
{
  sub_23F54AA98();
}

void sub_23F54AA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F362ABC();
  v25 = v0;
  v26 = v2;
  v23 = v3;
  v24 = v4;
  v6 = v5;
  v7 = sub_23F4A134C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v22 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F3846E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E717A8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3B1F34();
  sub_23F61C478();
  v15 = sub_23F61C490();
  sub_23F40B3E8(v1, v16, v17, v15);
  sub_23F4244A8((uint64_t)v13, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v7);
  v18 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v19 = (v12 + *(unsigned __int8 *)(v8 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = v25;
  sub_23F4244A8((uint64_t)v20 + v18, (uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
  sub_23F383C64((uint64_t)v20 + v19, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  swift_retain();
  sub_23F549B5C(v1, v26, (uint64_t)v20);
  swift_release();
  sub_23F39E4B8(v1, &qword_256E717A8);
  sub_23F362948();
}

uint64_t sub_23F54AC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_23F54AC44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F54DDDC();
  sub_23F54935C(v1, v2);
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F54AC6C()
{
  return sub_23F549AB0();
}

uint64_t sub_23F54AC8C()
{
  return sub_23F549AC4();
}

#error "23F54ACBC: call analysis failed (funcsize=8)"

#error "23F54ACDC: call analysis failed (funcsize=8)"

void sub_23F54ACEC(void *a1, uint64_t a2)
{
  sub_23F549DC0(a1, a2);
}

void sub_23F54AD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F549F68(a1, a2, a3, a4, a5);
}

void sub_23F54AD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F54A1BC(a1, a2, a3, a4);
}

void sub_23F54AD4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_23F54A394(a1, a2, a3, a4);
}

void sub_23F54AD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23F54A558(a1, a2, a3);
}

void sub_23F54AD8C()
{
  sub_23F54A7FC();
}

void sub_23F54ADAC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_23F54A854(a1, a2, a3);
}

void sub_23F54ADCC()
{
  sub_23F54AA84();
}

void SpanMatchedEntity.getQueryDecorationLogUniqueId(loggingScope:)()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[5];

  sub_23F362ABC();
  v28[4] = v3;
  v31 = v4;
  v5 = sub_23F619E98();
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F362AAC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F54DD04();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F362AAC();
  v13 = v11 - v12;
  MEMORY[0x24BDAC7A8](v14);
  sub_23F54DF40();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v28 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v28 - v19;
  sub_23F618D64();
  if (sub_23F36195C(v0, 1, v9) == 1)
  {
    sub_23F39E4B8(v0, &qword_256E701F0);
    sub_23F54DED8();
    sub_23F507D88();
    v21 = sub_23F3F0EEC();
    if (os_log_type_enabled(v1, v21))
    {
      v22 = (uint8_t *)sub_23F366668();
      v23 = sub_23F366668();
      v32[0] = v23;
      *(_DWORD *)v22 = 136315138;
      sub_23F54DCCC(v23, 0x800000023F638FF0, v32);
      v32[4] = v24;
      sub_23F54DEAC();
      _os_log_impl(&dword_23F35A000, v1, v21, "[%s] Could not convert SpanMatchedEntity to logging id (typedValue missing)", v22, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F54DC38(v29);
    v26 = 1;
    v25 = v31;
  }
  else
  {
    v28[3] = v13;
    sub_23F383C64((uint64_t)v20, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    sub_23F54DE60((uint64_t)v18, (uint64_t)v20);
    JointResolution.CandidateIdentifier.init(typedValue:)((uint64_t)v18, v32);
    sub_23F496920();
    v25 = v31;
    sub_23F6183F8();
    sub_23F383CA8((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    swift_bridgeObjectRelease();
    sub_23F362D18();
    v26 = 0;
  }
  v27 = sub_23F3846E4();
  sub_23F36196C(v25, v26, 1, v27);
  sub_23F362948();
}

void TypedValue.toQDLog()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  sub_23F61B9EC();
  sub_23F383DA4();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24266CE2C](v2);
  sub_23F61B8CC();
  sub_23F61B9A4();
  sub_23F362A28((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_23F619910();
  TypedValue.selfLoggingTypeName.getter();
  sub_23F619904();
  sub_23F383568();
}

void RetrievedContext.getQueryDecorationLogUniqueId(loggingScope:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[6];

  sub_23F362ABC();
  v35[7] = v3;
  v41 = v4;
  v35[6] = sub_23F618AE8();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v35[5] = v6;
  sub_23F39C56C();
  v36 = sub_23F618D28();
  v38 = *(_QWORD *)(v36 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3842E4();
  v8 = sub_23F619E98();
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3834D0();
  v37 = v10;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23F54DD04();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F362AAC();
  v17 = v15 - v16;
  MEMORY[0x24BDAC7A8](v18);
  sub_23F54DF40();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v35 - v21;
  MEMORY[0x24BDAC7A8](v20);
  sub_23F383780();
  v42 = v23;
  v24 = v1;
  sub_23F618CE0();
  v25 = v13;
  if (sub_23F36195C(v0, 1, v13) == 1)
  {
    sub_23F39E4B8(v0, &qword_256E701F0);
    sub_23F54DED8();
    v26 = sub_23F507D88();
    v27 = sub_23F61C628();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)sub_23F366668();
      v29 = sub_23F366668();
      v43[0] = v29;
      *(_DWORD *)v28 = 136315138;
      sub_23F54DCCC(v29, 0x800000023F638FF0, v43);
      v43[4] = v30;
      sub_23F54DEAC();
      _os_log_impl(&dword_23F35A000, v26, v27, "[%s] Could not convert RetrievedContext to logging id (typedValue missing)", v28, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F54DC38(v39);
    v33 = 1;
    v32 = v41;
  }
  else
  {
    v35[4] = v17;
    v37 = v24;
    v31 = v42;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v42, v0, v25);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v22, v31, v25);
    JointResolution.CandidateIdentifier.init(typedValue:)((uint64_t)v22, v43);
    sub_23F496920();
    v32 = v41;
    sub_23F6183F8();
    sub_23F362A28(v42, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    swift_bridgeObjectRelease();
    sub_23F362D18();
    v33 = 0;
  }
  v34 = sub_23F3846E4();
  sub_23F36196C(v32, v33, 1, v34);
  sub_23F362948();
}

uint64_t sub_23F54B840@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v2 = v1;
  v4 = sub_23F618AE8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == *MEMORY[0x24BE57298])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59558];
LABEL_53:
    v10 = *v9;
    v11 = sub_23F619B2C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a1, v10, v11);
  }
  if (v8 == *MEMORY[0x24BE57248])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59508];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE57260])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59520];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE57270])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59530];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE57250])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59510];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE572E0])
  {
    v9 = (unsigned int *)MEMORY[0x24BE595A0];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE57278])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59538];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE57288])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59548];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE57290])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59550];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE57300])
  {
    v9 = (unsigned int *)MEMORY[0x24BE595C0];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE572F0])
  {
    v9 = (unsigned int *)MEMORY[0x24BE595B0];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE57308])
  {
    v9 = (unsigned int *)MEMORY[0x24BE595C8];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE572D8])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59598];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE572E8])
  {
    v9 = (unsigned int *)MEMORY[0x24BE595A8];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE57268])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59528];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE57258])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59518];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE572C8])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59588];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE57280])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59540];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE572D0])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59590];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE572F8])
  {
    v9 = (unsigned int *)MEMORY[0x24BE595B8];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE572B8])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59578];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE572C0])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59580];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE572A0])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59560];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE572A8])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59568];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE572B0])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59570];
    goto LABEL_53;
  }
  if (v8 == *MEMORY[0x24BE57240])
  {
    v9 = (unsigned int *)MEMORY[0x24BE59500];
    goto LABEL_53;
  }
  result = sub_23F61CC58();
  __break(1u);
  return result;
}

void RetrievedTool.getQueryDecorationLogUniqueId(loggingScope:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F618BB4();
  sub_23F54DD74();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F54DDF8();
  sub_23F618BCC();
  RetrievedTool.Definition.toCandidateIdentifier()();
  sub_23F362A28(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F496920();
  sub_23F6183F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = sub_23F3846E4();
  sub_23F40B3E8(a1, v6, v7, v5);
  sub_23F383488();
}

void sub_23F54BCF8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_23F618BB4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3D9CCC();
  sub_23F38426C(v1, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  v5 = sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88));
  if (v5 == *MEMORY[0x24BE57550])
  {
    v6 = (unsigned int *)MEMORY[0x24BE592F0];
LABEL_11:
    v7 = *v6;
    v8 = sub_23F619934();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a1, v7, v8);
    sub_23F383E88(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_23F383488();
    return;
  }
  if (v5 == *MEMORY[0x24BE57558])
  {
    v6 = (unsigned int *)MEMORY[0x24BE592F8];
    goto LABEL_11;
  }
  if (v5 == *MEMORY[0x24BE57548])
  {
    v6 = (unsigned int *)MEMORY[0x24BE592E8];
    goto LABEL_11;
  }
  if (v5 == *MEMORY[0x24BE57540])
  {
    v6 = (unsigned int *)MEMORY[0x24BE592E0];
    goto LABEL_11;
  }
  if (v5 == *MEMORY[0x24BE57568])
  {
    v6 = (unsigned int *)MEMORY[0x24BE59300];
    goto LABEL_11;
  }
  sub_23F61CC58();
  __break(1u);
}

void TypedValue.selfLoggingTypeName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;

  sub_23F362ABC();
  v6 = sub_23F61B740();
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v59 = v8;
  sub_23F39C56C();
  v9 = sub_23F61B7C4();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  v62 = v11;
  sub_23F39C56C();
  v12 = sub_23F61B758();
  v66 = *(_QWORD *)(v12 - 8);
  v67 = v12;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v65 = v14;
  sub_23F39C56C();
  v15 = sub_23F61B6E0();
  v69 = *(_QWORD *)(v15 - 8);
  v70 = v15;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  v68 = v17;
  sub_23F39C56C();
  v18 = sub_23F61B8C0();
  v57 = *(_QWORD *)(v18 - 8);
  v58 = v18;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F36285C();
  v56 = v20;
  sub_23F39C56C();
  v21 = sub_23F61B7AC();
  v72 = *(_QWORD *)(v21 - 8);
  v73 = v21;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F36285C();
  v71 = v23;
  sub_23F39C56C();
  v24 = sub_23F61B710();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v25);
  v26 = sub_23F54DCE8();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  sub_23F3B1F34();
  v28 = sub_23F61B92C();
  sub_23F54DD74();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F3E2718();
  sub_23F38426C(v4, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v4, v28);
  if (v30 != *MEMORY[0x24BEB9A00])
  {
    if (v30 == *MEMORY[0x24BEB9990])
    {
      sub_23F383E88(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
      v31 = sub_23F54DB90();
      v32 = sub_23F4244A8(v1, v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
      strcpy((char *)&v74, "enumeration<");
      BYTE13(v74) = 0;
      HIWORD(v74) = -5120;
      MEMORY[0x24266EC14](v32);
      TypeIdentifier.selfLoggingTypeName.getter();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v3, v26);
      sub_23F61C280();
      swift_bridgeObjectRelease();
      sub_23F54DC44();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v24);
    }
    else
    {
      if (v30 != *MEMORY[0x24BEB99E0])
      {
        if (v30 == *MEMORY[0x24BEB9988])
        {
          sub_23F383E88(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
          sub_23F54DB90();
          v36 = v68;
          v35 = v69;
          v37 = sub_23F54DF04();
          v38 = v70;
          sub_23F38431C(v37, v39, v40);
          *(_QWORD *)&v74 = 0x697463656C6C6F63;
          *((_QWORD *)&v74 + 1) = 0xEB000000003C6E6FLL;
          sub_23F54DEE0();
          MEMORY[0x24266EBD8]();
          sub_23F54DE58();
          sub_23F54DD3C();
          sub_23F61C280();
          swift_bridgeObjectRelease();
          sub_23F54DC44();
        }
        else
        {
          if (v30 == *MEMORY[0x24BEB99D8])
          {
            sub_23F383E88(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
            v41 = sub_23F54DB90();
            v42 = sub_23F384918(v65, v41, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 16));
            MEMORY[0x24266EC5C](v42);
            sub_23F54DE58();
            v43 = sub_23F54DF24();
            v44(v43, v26);
            (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
            goto LABEL_19;
          }
          if (v30 == *MEMORY[0x24BEB99E8])
          {
            sub_23F383E88(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
            sub_23F54DB90();
            v36 = v62;
            v35 = v63;
            v45 = sub_23F54DF04();
            v38 = v64;
            sub_23F38431C(v45, v46, v47);
            sub_23F54DEE0();
            MEMORY[0x24266ECC8]();
          }
          else if (v30 == *MEMORY[0x24BEB99B0])
          {
            sub_23F383E88(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
            sub_23F54DB90();
            v36 = v59;
            v35 = v60;
            v48 = sub_23F54DF04();
            v38 = v61;
            sub_23F38431C(v48, v49, v50);
            sub_23F54DEE0();
            MEMORY[0x24266EC44]();
          }
          else
          {
            if (v30 != *MEMORY[0x24BEB9A08])
            {
              sub_23F383E88(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
              goto LABEL_20;
            }
            sub_23F383E88(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
            sub_23F54DB90();
            v36 = v56;
            v35 = v57;
            v51 = sub_23F54DF04();
            v38 = v58;
            sub_23F38431C(v51, v52, v53);
            sub_23F54DEE0();
            MEMORY[0x24266EDC4]();
          }
          sub_23F54DE58();
          v54 = sub_23F54DF24();
          sub_23F362A28(v54, v55);
        }
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v38);
        goto LABEL_19;
      }
      sub_23F383E88(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
      v33 = sub_23F54DB90();
      v34 = sub_23F383C64(v71, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 16));
      *(_QWORD *)&v74 = 0x3C797469746E65;
      *((_QWORD *)&v74 + 1) = 0xE700000000000000;
      MEMORY[0x24266ECB0](v34);
      sub_23F54DE58();
      sub_23F54DD3C();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      sub_23F54DC44();
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
    }
LABEL_19:
    swift_release();
    goto LABEL_20;
  }
  sub_23F383E88(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
  swift_release();
  sub_23F61B8CC();
  TypeIdentifier.selfLoggingTypeName.getter();
  sub_23F383CA8(v3, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
LABEL_20:
  sub_23F362948();
}

void TypeIdentifier.selfLoggingTypeName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F362ABC();
  v4 = sub_23F61B9BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F54DC08();
  v6 = sub_23F61B9B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_23F54DCE8();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F383EC4();
  sub_23F383C64(v2, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v2, v8);
  if (v10 == *MEMORY[0x24BEB9D18])
  {
    sub_23F54DCD8();
    v11 = swift_projectBox();
    sub_23F38426C(v0, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    TypeIdentifier.PrimitiveTypeIdentifier.selfLoggingTypeName.getter();
    sub_23F383E88(v0, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }
  else if (v10 == *MEMORY[0x24BEB9D00])
  {
    sub_23F54DCD8();
    v12 = swift_projectBox();
    sub_23F54DECC(v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
    TypeIdentifier.BuiltInTypeIdentifier.selfLoggingTypeName.getter();
    sub_23F383E64(v1, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  }
  else
  {
    if (v10 != *MEMORY[0x24BEB9CF8])
    {
      sub_23F383CA8(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      goto LABEL_8;
    }
    sub_23F54DCD8();
    sub_23F617BA0();
  }
  swift_release();
LABEL_8:
  sub_23F362948();
}

uint64_t TypeIdentifier.BuiltInTypeIdentifier.selfLoggingTypeName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F61B9EC();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3842E4();
  sub_23F61B9B0();
  sub_23F54DD74();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3D9CCC();
  sub_23F38426C(v0, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v6 = sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88));
  if (v6 == *MEMORY[0x24BEB9BF0])
  {
    sub_23F383E88(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 96));
    v7 = swift_projectBox();
    v8 = sub_23F54DECC(v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    TypeIdentifier.selfLoggingTypeName.getter(v8);
    sub_23F61C280();
    sub_23F362D18();
    sub_23F54DC44();
    v9 = 0x3C7972657571;
    sub_23F383E64(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    swift_release();
    return v9;
  }
  if (v6 == *MEMORY[0x24BEB9BD0])
    return 0x746163696C707061;
  if (v6 == *MEMORY[0x24BEB9BB0])
    return 0x6D754E646E756F62;
  if (v6 == *MEMORY[0x24BEB9C08])
  {
    v10 = 0x646E656C6163;
    return v10 & 0xFFFFFFFFFFFFLL | 0x7261000000000000;
  }
  if (v6 == *MEMORY[0x24BEB9BE8])
    return 0x726F6C6F63;
  if (v6 == *MEMORY[0x24BEB9C10])
    return 0x79636E6572727563;
  if (v6 == *MEMORY[0x24BEB9BE0])
    return 1701603686;
  if (v6 == *MEMORY[0x24BEB9C18])
    return 0x61657241656D6F68;
  if (v6 == *MEMORY[0x24BEB9BA8])
    return 0x756F52616964656DLL;
  if (v6 == *MEMORY[0x24BEB9BC0])
    return 0x4D746E656D796170;
  if (v6 == *MEMORY[0x24BEB9C00])
    return 0x74736163646F70;
  if (v6 == *MEMORY[0x24BEB9BF8])
    return 0x6E6F73726570;
  if (v6 == *MEMORY[0x24BEB9C28])
  {
    v10 = 0x6D6563616C70;
    return v10 & 0xFFFFFFFFFFFFLL | 0x7261000000000000;
  }
  if (v6 == *MEMORY[0x24BEB9BC8])
  {
    v10 = 0x687365646972;
    return v10 & 0xFFFFFFFFFFFFLL | 0x7261000000000000;
  }
  if (v6 == *MEMORY[0x24BEB9BD8])
    return 7237750;
  if (v6 == *MEMORY[0x24BEB9C20])
    return 0x656E6F5A656D6974;
  if (v6 == *MEMORY[0x24BEB9BB8])
    return 0x6D6572757361656DLL;
  sub_23F383E88(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return 0x426E776F6E6B6E75;
}

uint64_t TypeIdentifier.MeasurementUnitType.selfLoggingTypeName.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F54C9AC + 4 * byte_23F62C5A0[a1]))(0x6874676E656CLL, 0xE600000000000000);
}

uint64_t sub_23F54C9AC()
{
  return 1936941421;
}

uint64_t sub_23F54C9BC()
{
  return 0x74617265706D6574;
}

uint64_t sub_23F54C9E0()
{
  return 0x656D756C6F76;
}

uint64_t sub_23F54C9F0()
{
  return 0x6465657073;
}

uint64_t sub_23F54CA04()
{
  return 0x796772656E65;
}

uint64_t sub_23F54CA14()
{
  return 0x6E6F697461727564;
}

uint64_t sub_23F54CA2C()
{
  return 0x6172656C65636361;
}

uint64_t sub_23F54CA4C()
{
  return 0x656C676E61;
}

uint64_t sub_23F54CA60()
{
  return 1634038369;
}

unint64_t sub_23F54CA70()
{
  return 0xD000000000000011;
}

unint64_t sub_23F54CB00()
{
  return 0xD000000000000012;
}

uint64_t sub_23F54CB88()
{
  return 0x7265776F70;
}

uint64_t sub_23F54CB9C()
{
  return 0x6572757373657270;
}

uint64_t sub_23F54CBB4(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  unsigned __int8 v19;
  uint64_t v20;

  v14 = sub_23F35D2E8(&qword_256E717A8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39E478(a1, (uint64_t)v16, &qword_256E717A8);
  v17 = sub_23F61C490();
  if (sub_23F36195C((uint64_t)v16, 1, v17) == 1)
  {
    sub_23F39E4B8((uint64_t)v16, &qword_256E717A8);
    result = 0;
    if ((a2 & 1) == 0)
      goto LABEL_3;
  }
  else
  {
    v19 = sub_23F61C484();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    result = v19;
    if ((a2 & 1) == 0)
    {
LABEL_3:
      if ((a3 & 1) != 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  result |= 0x100uLL;
  if ((a3 & 1) != 0)
  {
LABEL_4:
    result |= 0x400uLL;
    if ((a4 & 1) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  if ((a4 & 1) == 0)
  {
LABEL_5:
    if ((a5 & 1) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_15:
  result |= 0x800uLL;
  if ((a5 & 1) != 0)
LABEL_6:
    result |= 0x1000uLL;
LABEL_7:
  if ((a6 & 1) != 0)
    result |= 0x2000uLL;
  if ((a7 & 1) != 0)
    return result | 0x4000;
  return result;
}

uint64_t type metadata accessor for QueryDecorationSELFLogEmitter()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for QueryDecorationSELFLoggerASync()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for QueryDecorationDiscardingSELFLogEmitter()
{
  return objc_opt_self();
}

void sub_23F54CD54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  sub_23F362ABC();
  v17[1] = v1;
  v17[2] = v2;
  v18 = v3;
  v5 = v4;
  v7 = v6;
  v8 = sub_23F54DE90();
  sub_23F54DD74();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F3846E4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F4244A8((uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  (*(void (**)(char *, uint64_t, uint64_t))(v0 + 16))(v11, v5, v8);
  type metadata accessor for QueryDecorationSELFLoggerSync();
  sub_23F3668A0();
  sub_23F3D9E08();
  sub_23F54CEA4();
  v16 = v15;
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v5, v8);
  sub_23F3D98EC(v7, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  swift_release();
  *(_QWORD *)(v18 + 16) = v16;
  sub_23F362948();
}

uint64_t type metadata accessor for QueryDecorationSELFLoggerSync()
{
  uint64_t result;

  result = qword_256E79D68;
  if (!qword_256E79D68)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23F54CEA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];

  sub_23F362ABC();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  sub_23F3846E4();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3E2718();
  v19[3] = v5(v7);
  v19[4] = v3;
  v19[0] = v15;
  sub_23F382FC4((uint64_t)v19, v9 + 16);
  sub_23F4244A8(v9+ OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_contextId, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  sub_23F616FF4();
  sub_23F3D98EC(v13, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v19);
  sub_23F4244A8(v9+ OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_componentId, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  v17 = v9
      + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntimeP33_F747242BE1E17047CD31B26B8C3A7DAD29QueryDecorationSELFLoggerSync_loggingScope;
  v18 = sub_23F54DE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, v11, v18);
  sub_23F362948();
}

uint64_t sub_23F54CF94()
{
  uint64_t v0;

  return sub_23F546930(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23F54CFAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23F5466FC();
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of QueryDecorationSELFLoggingBuilding.getSELFLogger(contextId:loggingScope:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for QueryDecorationLoggerBuilder()
{
  return &type metadata for QueryDecorationLoggerBuilder;
}

ValueMetadata *type metadata accessor for QueryDecorationNullSELFLoggerBuilder()
{
  return &type metadata for QueryDecorationNullSELFLoggerBuilder;
}

uint64_t type metadata accessor for QueryDecorationCapturingSELFLoggerBuilder()
{
  return objc_opt_self();
}

uint64_t method lookup function for QueryDecorationCapturingSELFLoggerBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of QueryDecorationCapturingSELFLoggerBuilder.emittedLogs.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of QueryDecorationCapturingSELFLoggerBuilder.emittedLogs.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of QueryDecorationCapturingSELFLoggerBuilder.emittedLogs.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of QueryDecorationCapturingSELFLoggerBuilder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of QueryDecorationCapturingSELFLoggerBuilder.getSELFLogger(contextId:loggingScope:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of QueryDecorationCapturingSELFLoggerBuilder.emitEvent(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of QueryDecorationSELFLogging.componentId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of QueryDecorationSELFLogging.loggingScope.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of QueryDecorationSELFLogging.logQueryDecorationStarted(logTime:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of QueryDecorationSELFLogging.logQueryDecorationCompleted(logTime:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of QueryDecorationSELFLogging.logQueryDecorationFailed(error:logTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of QueryDecorationSELFLogging.logCollection(spans:requiredContext:utteranceContext:toolRetrievalResponse:logTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 48))();
}

uint64_t dispatch thunk of QueryDecorationSELFLogging.logRanked(spans:utteranceContext:tools:logTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t dispatch thunk of QueryDecorationSELFLogging.logTuplesGenerated(tupleCount:maximumTupleWidth:wasToolTupleLimitReached:logTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t dispatch thunk of QueryDecorationSELFLogging.logSubComponentStarted(subComponent:traceId:logTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of QueryDecorationSELFLogging.logSubComponentEnded(traceId:logTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of QueryDecorationSELFLogging.logSubComponentFailed(error:traceId:logTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of QueryDecorationSELFLogging.logJointResolverCall(traceId:logTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t sub_23F54D0D0()
{
  return type metadata accessor for QueryDecorationSELFLoggerSync();
}

uint64_t sub_23F54D0D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F617000();
  if (v1 <= 0x3F)
  {
    result = sub_23F6182A8();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of QueryDecorationLogUniqueIdConvertable.getQueryDecorationLogUniqueId(loggingScope:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_23F54D178()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F3846E4();
  sub_23F4A134C();
  sub_23F54DC80();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F54DB6C(v1);
  return sub_23F54AC28(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_23F54D1EC()
{
  swift_release();
  sub_23F516EA4();
  return swift_deallocObject();
}

uint64_t sub_23F54D208(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 16);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)sub_23F54DBCC(v5);
  *v6 = v2;
  v6[1] = sub_23F3E013C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256E7C9C8 + dword_256E7C9C8))(a1, v4);
}

uint64_t sub_23F54D274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_23F362ABC();
  v3 = *(_QWORD *)(sub_23F3846E4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_23F4A134C();
  sub_23F54DB9C();
  sub_23F54DC78();

  sub_23F383E88(v0 + v4, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F383E64(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return sub_23F54DB28();
}

uint64_t sub_23F54D2E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3846E4();
  sub_23F54DF54();
  sub_23F4A134C();
  sub_23F54DE14();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F54DC50(v1);
  return sub_23F54AA3C(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_23F54D36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_23F362ABC();
  v3 = *(_QWORD *)(sub_23F3846E4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_23F4A134C();
  sub_23F54DB9C();
  sub_23F54DC78();
  sub_23F383E88(v0 + v4, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F383E64(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return sub_23F54DB28();
}

uint64_t sub_23F54D3D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F3846E4();
  sub_23F4A134C();
  sub_23F54DC80();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F54DB6C(v1);
  return sub_23F54A810(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_23F54D448()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v11 = sub_23F54DF38();
  v1 = *(_QWORD *)(v11 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v10 = sub_23F3846E4();
  v4 = *(_QWORD *)(v10 - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_23F4A134C() - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_unknownObjectRelease();
  sub_23F54DC78();
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v11);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v10);
  sub_23F362A28(v0 + v8, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  return swift_deallocObject();
}

uint64_t sub_23F54D53C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F54DF38();
  sub_23F3846E4();
  sub_23F54DF54();
  sub_23F4A134C();
  sub_23F54DE14();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F54DC50(v1);
  return sub_23F54A7B4(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_23F54D5E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F4A134C();
  sub_23F54DDAC();
  sub_23F54DB54();
  sub_23F54DC78();
  sub_23F383E88(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F54DD84();
  return sub_23F4411CC();
}

uint64_t sub_23F54D620()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F4A134C() - 8) + 80);
  v2 = *(_BYTE *)(v0 + 56);
  v3 = v0 + ((v1 + 57) & ~v1);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)sub_23F54DBCC(v4);
  v6 = sub_23F54DCA8(v5);
  return sub_23F54A508(v6, v7, v8, v9, v10, v11, v2, v3);
}

uint64_t sub_23F54D6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F4A134C();
  sub_23F54DDAC();
  sub_23F54DB54();
  sub_23F54DC78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F383E88(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F54DD84();
  return sub_23F4411CC();
}

uint64_t sub_23F54D704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F4A134C();
  sub_23F54DE98();
  v3 = v0 + v2;
  v4 = swift_task_alloc();
  v5 = (_QWORD *)sub_23F54DBCC(v4);
  v6 = sub_23F54DCA8(v5);
  return sub_23F54A348(v6, v7, v8, v9, v10, v11, v1, v3);
}

uint64_t sub_23F54D780()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F362ABC();
  v1 = *(_QWORD *)(sub_23F35D2E8(&qword_256E70F38) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_23F4A134C() - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  swift_unknownObjectRelease();
  sub_23F54DC78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = sub_23F619064();
  if (!sub_23F36195C(v0 + v2, 1, v6))
    sub_23F362A28(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8));
  sub_23F383E88(v0 + ((v2 + v3 + v5) & ~v5), *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  return sub_23F54DB28();
}

uint64_t sub_23F54D858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F54D8A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  sub_23F35D2E8(&qword_256E70F38);
  sub_23F54DF54();
  v10 = (v9 + 64) & ~v9;
  v12 = *(_QWORD *)(v11 + 64);
  sub_23F4A134C();
  sub_23F54DE98();
  v13 = swift_task_alloc();
  v14 = (_QWORD *)sub_23F54DBCC(v13);
  *v14 = v2;
  v14[1] = sub_23F362820;
  return sub_23F54A164(a1, v12, v3, v4, v5, v6, v7, v1 + v10);
}

uint64_t sub_23F54D968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F4A134C();
  sub_23F54DDAC();
  sub_23F54DB54();
  sub_23F54DC78();

  sub_23F383E88(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F54DD84();
  return sub_23F4411CC();
}

uint64_t sub_23F54D9B0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F4A134C();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F54DB6C(v1);
  return sub_23F549F24(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_23F54DA28()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F4A134C();
  sub_23F54DDBC();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F54DD54(v1);
  return sub_23F549D80(v2, v3, v4, v5, v6);
}

uint64_t sub_23F54DA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F4A134C();
  sub_23F54DDAC();
  sub_23F54DB54();
  sub_23F54DC78();
  sub_23F383E88(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F54DD84();
  return sub_23F4411CC();
}

uint64_t sub_23F54DAC8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F4A134C();
  sub_23F54DDBC();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F54DD54(v1);
  return sub_23F549B1C(v2, v3, v4, v5, v6);
}

uint64_t sub_23F54DB28()
{
  return swift_deallocObject();
}

uint64_t sub_23F54DB40(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F54DB54()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F54DB6C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F54DB90()
{
  return swift_projectBox();
}

uint64_t sub_23F54DB9C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F54DBCC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

void sub_23F54DBD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[48];
  *(_QWORD *)(v1 - 112) = v0[47];
  *(_QWORD *)(v1 - 104) = v0[46];
  *(_QWORD *)(v1 - 96) = v2;
}

uint64_t sub_23F54DC08()
{
  return 0;
}

uint64_t sub_23F54DC24()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 256) + 8))(*(_QWORD *)(v0 - 136), *(_QWORD *)(v0 - 240));
}

uint64_t sub_23F54DC38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23F54DC44()
{
  return sub_23F61C280();
}

uint64_t sub_23F54DC50(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F54DC78()
{
  return swift_release();
}

uint64_t sub_23F54DCA8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

void sub_23F54DCCC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_23F37AE00(0xD00000000000002CLL, a2, a3);
}

uint64_t sub_23F54DCD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v1, v0);
}

uint64_t sub_23F54DCE8()
{
  return sub_23F61B9EC();
}

uint64_t sub_23F54DD04()
{
  return sub_23F61B92C();
}

uint64_t sub_23F54DD20(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F54DD3C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 264) + 8))(v0, *(_QWORD *)(v1 - 256));
}

uint64_t sub_23F54DD54(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F54DD84()
{
  uint64_t v0;

  return v0;
}

void sub_23F54DD94(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F37AE00(0xD00000000000001ELL, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 72));
}

uint64_t sub_23F54DDDC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_23F54DDEC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_23F54DE30()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 272);
}

uint64_t sub_23F54DE48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_23F54DE58()
{
  TypeIdentifier.selfLoggingTypeName.getter();
}

uint64_t sub_23F54DE60(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F54DE68()
{
  return sub_23F61C790();
}

uint64_t sub_23F54DE78(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F54DE80()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, *(_QWORD *)(v2 - 296));
}

uint64_t sub_23F54DE90()
{
  return sub_23F6182A8();
}

uint64_t sub_23F54DEAC()
{
  return sub_23F61C790();
}

uint64_t sub_23F54DEB8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 304);
}

uint64_t sub_23F54DECC@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t sub_23F54DED8()
{
  return sub_23F6190E8();
}

void sub_23F54DEEC()
{
  sub_23F3771B4();
}

void sub_23F54DEF8()
{
  sub_23F377EF8();
}

uint64_t sub_23F54DF04()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F54DF10()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F54DF1C()
{
  return sub_23F619D3C();
}

uint64_t sub_23F54DF24()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F54DF38()
{
  return sub_23F61994C();
}

void sub_23F54DF60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 128));
}

void sub_23F54DF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 80));
}

void sub_23F54DF78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_23F37AE00(0xD00000000000001ELL, a2, a3);
}

uint64_t sub_23F54DF84(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
  return swift_release();
}

void QueryDecorationService.__allocating_init(clientApplicationIdentifier:toolbox:toolExecutionSession:)()
{
  sub_23F551598();
  swift_allocObject();
  QueryDecorationService.init(clientApplicationIdentifier:toolbox:toolExecutionSession:)();
  sub_23F383488();
}

void QueryDecorationService.init(clientApplicationIdentifier:toolbox:toolExecutionSession:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F551598();
  swift_defaultActor_initialize();
  v1[14] = 0;
  v1[15] = v4;
  v1[16] = v3;
  sub_23F383004(v2, (uint64_t)v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationService_toolbox, &qword_256E72B70);
  sub_23F383004(v0, (uint64_t)v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationService_toolExecutionSession, &qword_256E797E0);
  sub_23F383488();
}

uint64_t sub_23F54E04C()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  sub_23F35D2E8(&qword_256E72B70);
  v1[3] = sub_23F4E6230();
  v1[4] = sub_23F3E0220();
  sub_23F55153C();
  return sub_23F362AA0();
}

uint64_t sub_23F54E098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v1 + 120);
  v3 = *(_QWORD *)(v1 + 128);
  sub_23F382EF8(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationService_toolbox, v2, &qword_256E72B70);
  v5 = sub_23F61B32C();
  if (sub_23F36195C(v2, 1, v5) == 1)
  {
    sub_23F3668F4();
    sub_23F61B320();
    sub_23F39E4B8(*(_QWORD *)(v0 + 24), &qword_256E72B70);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 24), v5);
    sub_23F3668F4();
  }
  v6 = *(_QWORD *)(v0 + 32);
  sub_23F36196C(v6, 0, 1, v5);
  type metadata accessor for QueryDecorationSignposter(0);
  swift_allocObject();
  v7 = sub_23F557B14();
  v8 = sub_23F550A04(v4, v3, v6, v7);
  sub_23F54DF84((uint64_t)v8);
  sub_23F3666C4();
  sub_23F366708();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F54E1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = sub_23F618B90();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = sub_23F366578();
  sub_23F55153C();
  return swift_task_switch();
}

uint64_t sub_23F54E248()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v2 = v0[6];
  v1 = v0[7];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v2 + 104))(v1, *MEMORY[0x24BE57480], v0[5]);
  v3 = sub_23F618B84();
  sub_23F383E88(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  if ((v3 & 1) != 0)
  {
    v0[8] = v4;
    v5 = sub_23F55150C(v4, (uint64_t)sub_23F54E2FC);
    return sub_23F54F34C(v5, v6);
  }
  else
  {
    v0[9] = v4;
    v8 = sub_23F55150C(v4, (uint64_t)sub_23F54E344);
    return sub_23F54E38C(v8, v9);
  }
}

uint64_t sub_23F54E2FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  sub_23F406D10();
  sub_23F41C4A0(v4);
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return sub_23F551440(v5, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23F54E344(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  sub_23F406D10();
  sub_23F41C4A0(v4);
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return sub_23F551440(v5, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23F54E38C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v3[6] = *v2;
  v4 = sub_23F428AE4();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = sub_23F366578();
  sub_23F35D2E8(&qword_256E797D8);
  v3[10] = sub_23F366578();
  v5 = sub_23F3B1728();
  v3[11] = v5;
  v3[12] = *(_QWORD *)(v5 - 8);
  v3[13] = sub_23F4E6230();
  v3[14] = sub_23F3E0220();
  sub_23F55153C();
  return sub_23F362AA0();
}

uint64_t sub_23F54E414()
{
  os_log_type_t v0;
  _QWORD *v1;
  NSObject *v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v21;
  os_log_type_t v22;
  _WORD *v23;

  sub_23F551490();
  v2 = sub_23F619E8C();
  v3 = sub_23F61C61C();
  if (sub_23F5514B4(v3))
  {
    v4 = (_WORD *)sub_23F3EEE70();
    sub_23F3F0EF4(v4);
    sub_23F3E2784(&dword_23F35A000, v2, v0, "QueryDecorationPrePlanner is not enabled so handleQueryDecoration() is being run.");
    sub_23F366530();
  }
  v5 = v1[14];

  sub_23F55156C();
  sub_23F551524();
  v1[15] = v6;
  if (!v6)
  {
    v21 = v1[13];
    sub_23F551490();
    sub_23F619E8C();
    v22 = sub_23F3F0EEC();
    if (sub_23F3F0E3C(v22))
    {
      v23 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v23);
      sub_23F3E2784(&dword_23F35A000, v21, (os_log_type_t)v5, "Failed to generate Query Decoration Input");
      sub_23F366530();
    }

    sub_23F55156C();
    swift_task_dealloc();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F441330();
    __asm { BR              X1 }
  }
  v7 = v6;
  v8 = *(_QWORD *)(v1[5] + 112);
  v1[16] = v8;
  if (!v8)
  {
    sub_23F550E48();
    swift_allocError();
    swift_willThrow();

    sub_23F5514A8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F441330();
    __asm { BR              X0 }
  }
  v10 = v1[9];
  v9 = v1[10];
  v12 = v1[7];
  v11 = v1[8];
  swift_retain();
  sub_23F61B128();
  v13 = sub_23F61B14C();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  v1[2] = v13;
  sub_23F35D2E8(&qword_256E70F10);
  sub_23F3E29D8();
  sub_23F61ACFC();
  swift_bridgeObjectRelease();
  v14 = sub_23F618FBC();
  sub_23F36196C(v9, 0, 1, v14);
  v15 = (_QWORD *)swift_task_alloc();
  v1[17] = v15;
  *v15 = v1;
  v15[1] = sub_23F54E68C;
  sub_23F441330();
  return sub_23F56267C(v16, v17, v18, v19);
}

uint64_t sub_23F54E68C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 144) = v1;
  swift_task_dealloc();
  v5 = *(_QWORD *)(v4 + 80);
  if (!v1)
    *(_QWORD *)(v4 + 152) = a1;
  sub_23F39E4B8(v5, &qword_256E797D8);
  sub_23F3668FC();
  return swift_task_switch();
}

uint64_t sub_23F54E734()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 120);
  v3 = static QueryDecorationService.events(for:sessionState:)((uint64_t)v1, *(_QWORD *)(v0 + 24));

  sub_23F5514A8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return sub_23F3E0218(v3, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F54E79C()
{
  uint64_t v0;

  sub_23F5514A8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static QueryDecorationService.events(for:sessionState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD, _QWORD, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void (*v54)(_QWORD, _QWORD, _QWORD);
  NSObject *v55;
  os_log_type_t v56;
  _WORD *v57;
  uint64_t v58;
  void (*v59)(_QWORD, _QWORD, _QWORD);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(_QWORD, _QWORD, _QWORD);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(unint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  void (*v99)(char *, char *, uint64_t);
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  _QWORD v112[2];
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(_QWORD, _QWORD, _QWORD);
  uint64_t v146;

  v139 = a1;
  v4 = sub_23F3B1728();
  v140 = *(char **)(v4 - 8);
  v141 = (char *)v4;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v145 = v6;
  sub_23F39C56C();
  v119 = sub_23F61ABB8();
  v118 = *(_QWORD *)(v119 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v117 = v8;
  sub_23F35D2E8(&qword_256E70F38);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383780();
  v144 = v11;
  sub_23F39C56C();
  v127 = (_QWORD *)sub_23F619064();
  v116 = *(v127 - 1);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F383780();
  v122 = v14;
  sub_23F39C56C();
  v15 = sub_23F61A5F4();
  v134 = *(_QWORD *)(v15 - 8);
  v135 = v15;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  v133 = v17;
  sub_23F39C56C();
  v128 = sub_23F61B2C0();
  v120 = *(_QWORD *)(v128 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F383780();
  v126 = v20;
  sub_23F39C56C();
  v131 = sub_23F61AA68();
  v130 = *(_QWORD *)(v131 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F36285C();
  v129 = v22;
  v121 = *(_QWORD *)(sub_23F35D2E8(&qword_256E702E0) - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3834D0();
  v142 = v24;
  sub_23F383588();
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v112 - v27;
  MEMORY[0x24BDAC7A8](v26);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F3838E4();
  v138 = v30;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)v112 - v32;
  v34 = sub_23F428AE4();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v36 = sub_23F551474();
  v143 = *(_QWORD *)(v36 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3834D0();
  sub_23F39E564();
  v39 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)v112 - v40;
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = (char *)v112 - v43;
  MEMORY[0x24BDAC7A8](v42);
  sub_23F3838E4();
  v136 = v45;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F3838E4();
  v137 = v47;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F383780();
  v50 = v49;
  v132 = a2;
  sub_23F61B128();
  v51 = sub_23F61B14C();
  sub_23F383E88(v2, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
  sub_23F3F1328(v51, (uint64_t)v33);
  sub_23F362984();
  if (sub_23F36195C((uint64_t)v33, 1, v36) == 1)
  {
    v53 = v140;
    v52 = v141;
    sub_23F39E4B8((uint64_t)v33, &qword_256E702E0);
    v54 = v145;
    sub_23F551590();
    v55 = sub_23F507DF8();
    v56 = sub_23F61C628();
    if (sub_23F40B304(v56))
    {
      v57 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v57);
      sub_23F3E2784(&dword_23F35A000, v55, (os_log_type_t)v51, "Unable to find any events in the transcript");
      sub_23F366530();
    }

    (*((void (**)(void (*)(_QWORD, _QWORD, _QWORD), char *))v53 + 1))(v54, v52);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v140 = v44;
    v141 = v41;
    v59 = *(void (**)(_QWORD, _QWORD, _QWORD))(v143 + 32);
    v125 = v50;
    v145 = v59;
    v59(v50, v33, v36);
    sub_23F618F98();
    v60 = v129;
    sub_23F61AA5C();
    v61 = v126;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 16))(v126, v60, v131);
    v62 = *MEMORY[0x24BE56B88];
    v63 = v120;
    v124 = *(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 104);
    v64 = v128;
    v124(v61, v62, v128);
    sub_23F61B23C();
    v65 = *(_QWORD *)(v63 + 8);
    sub_23F551554();
    v66 = sub_23F618F14();
    sub_23F551584(v66);
    v113 = v67;
    sub_23F362D18();
    v68 = sub_23F618F20();
    sub_23F551584(v68);
    v70 = v69;
    v71 = v124;
    swift_bridgeObjectRelease();
    v72 = v133;
    MEMORY[0x24266DAC8](v113, v70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 16))(v61, v72, v135);
    v71(v61, *MEMORY[0x24BE56B60], v64);
    sub_23F551578();
    sub_23F551554();
    sub_23F36196C(v138, 1, 1, v36);
    v73 = v144;
    sub_23F618EFC();
    v74 = sub_23F36195C(v73, 1, (uint64_t)v127);
    v75 = v143;
    v120 = v65;
    if (v74 == 1)
    {
      sub_23F39E4B8(v144, &qword_256E70F38);
      v76 = v138;
    }
    else
    {
      v77 = v116;
      v78 = v122;
      v79 = (void (*)(_QWORD, _QWORD, _QWORD))v127;
      (*(void (**)(uint64_t, uint64_t, _QWORD *))(v116 + 32))(v122, v144, v127);
      v80 = v115;
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v77 + 16))(v115, v78, v79);
      v144 = sub_23F61901C();
      v113 = v81;
      sub_23F619028();
      v112[1] = v82;
      sub_23F619034();
      sub_23F619040();
      sub_23F619058();
      v83 = v117;
      sub_23F61ABAC();
      v144 = *(_QWORD *)(v77 + 8);
      ((void (*)(uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))v144)(v80, v79);
      v84 = v118;
      v85 = v119;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 16))(v126, v83, v119);
      sub_23F551530();
      v86 = v114;
      sub_23F551578();
      v75 = v143;
      sub_23F551548();
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
      ((void (*)(uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))v144)(v122, v79);
      v76 = v138;
      sub_23F39E4B8(v138, &qword_256E702E0);
      sub_23F551464(v86);
      sub_23F383004(v86, v76, &qword_256E702E0);
    }
    v87 = v142;
    v88 = v121;
    sub_23F35D2E8(&qword_256E747F8);
    v89 = *(_QWORD *)(v88 + 72);
    v90 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = xmmword_23F61EBC0;
    v126 = v91;
    v92 = v91 + v90;
    v93 = *(void (**)(unint64_t, uint64_t, uint64_t))(v75 + 16);
    v93(v91 + v90, v137, v36);
    sub_23F551464(v92);
    v127 = v93;
    v93(v92 + v89, v136, v36);
    sub_23F551464(v92 + v89);
    v144 = v89;
    sub_23F382EF8(v76, v92 + 2 * v89, &qword_256E702E0);
    v94 = MEMORY[0x24BEE4AF8];
    v95 = 3;
    v97 = v140;
    v96 = v141;
    do
    {
      sub_23F382EF8(v92, (uint64_t)v28, &qword_256E702E0);
      sub_23F383004((uint64_t)v28, v87, &qword_256E702E0);
      if (sub_23F36195C(v87, 1, v36) == 1)
      {
        sub_23F39E4B8(v87, &qword_256E702E0);
      }
      else
      {
        v98 = v28;
        v99 = (void (*)(char *, char *, uint64_t))v145;
        v145(v97, v87, v36);
        v99(v96, v97, v36);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F5515AC();
          v94 = v102;
        }
        v100 = *(_QWORD *)(v94 + 16);
        v28 = v98;
        if (v100 >= *(_QWORD *)(v94 + 24) >> 1)
        {
          sub_23F5515AC();
          v94 = v103;
        }
        *(_QWORD *)(v94 + 16) = v100 + 1;
        v101 = v94
             + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80))
             + *(_QWORD *)(v143 + 72) * v100;
        v96 = v141;
        v145(v101, v141, v36);
        v97 = v140;
        v87 = v142;
      }
      v92 += v144;
      --v95;
    }
    while (v95);
    swift_setDeallocating();
    sub_23F513624();
    v104 = sub_23F618F5C();
    MEMORY[0x24BDAC7A8](v104);
    v112[-2] = v132;
    sub_23F368264();
    sub_23F362984();
    sub_23F618F98();
    v105 = sub_23F618F14();
    sub_23F550048(v105);
    swift_bridgeObjectRelease();
    v106 = sub_23F618F20();
    sub_23F550048(v106);
    swift_bridgeObjectRelease();
    sub_23F618EFC();
    sub_23F61AABC();
    sub_23F551530();
    v107 = v123;
    v108 = v125;
    sub_23F61B23C();
    sub_23F551548();
    sub_23F35D2E8(&qword_256E701A0);
    v109 = (*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
    v110 = swift_allocObject();
    *(_OWORD *)(v110 + 16) = xmmword_23F61E7E0;
    ((void (*)(unint64_t, uint64_t, uint64_t))v127)(v110 + v109, v107, v36);
    v146 = v94;
    sub_23F387DCC();
    v58 = v146;
    sub_23F5075F8(v107);
    sub_23F39E4B8(v138, &qword_256E702E0);
    sub_23F5075F8(v136);
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v133, v135);
    sub_23F5075F8(v137);
    (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v129, v131);
    sub_23F5075F8(v108);
  }
  return v58;
}

uint64_t sub_23F54F34C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v4 = sub_23F3B1728();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = sub_23F4E6230();
  v3[10] = sub_23F3E0220();
  v3[11] = sub_23F3E0220();
  v3[12] = sub_23F3E0220();
  v3[13] = sub_23F3E0220();
  sub_23F55153C();
  return sub_23F362AA0();
}

uint64_t sub_23F54F3B4()
{
  os_log_type_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  NSObject *v14;
  os_log_type_t v15;
  _WORD *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F551490();
  v2 = sub_23F619E8C();
  v3 = sub_23F61C61C();
  if (sub_23F5514B4(v3))
  {
    v4 = (_WORD *)sub_23F3EEE70();
    sub_23F3F0EF4(v4);
    sub_23F3E2784(&dword_23F35A000, v2, v0, "QueryDecorationPrePlanner is enabled so QueryDecorationPrePlanner() is being run.");
    sub_23F366530();
  }
  v5 = *(_QWORD *)(v1 + 104);
  v6 = *(_QWORD *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);

  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(_QWORD *)(v1 + 112) = v8;
  sub_23F48252C();
  sub_23F551524();
  *(_QWORD *)(v1 + 120) = v9;
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 112);
    *(_QWORD *)(v1 + 128) = v11;
    if (v11)
    {
      swift_retain();
      v12 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v1 + 136) = v12;
      *v12 = v1;
      v12[1] = sub_23F54F5B8;
      return sub_23F566084((uint64_t)v10);
    }
    v17 = *(NSObject **)(v1 + 80);
    sub_23F551490();
    sub_23F619E8C();
    v18 = sub_23F3F0EEC();
    if (sub_23F384458(v18))
    {
      v19 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_23F35A000, v17, (os_log_type_t)v6, "Failed to run QueryDecoration Pre Planner Services", v19, 2u);
      sub_23F366530();
    }
    v20 = *(_QWORD *)(v1 + 80);
    v21 = *(_QWORD *)(v1 + 56);

    v8(v20, v21);
  }
  else
  {
    v14 = *(NSObject **)(v1 + 72);
    sub_23F551490();
    sub_23F619E8C();
    v15 = sub_23F3F0EEC();
    if (sub_23F3F0E3C(v15))
    {
      v16 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v16);
      sub_23F3E2784(&dword_23F35A000, v14, (os_log_type_t)v5, "Failed to generate Query Decoration Input");
      sub_23F366530();
    }

    sub_23F48252C();
  }
  swift_task_dealloc();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_23F54F5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F406D10();
  *(_QWORD *)(v1 + 144) = v2;
  *(_QWORD *)(v1 + 152) = v0;
  swift_task_dealloc();
  sub_23F3668FC();
  return swift_task_switch();
}

uint64_t sub_23F54F628()
{
  os_log_type_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  sub_23F551490();
  v2 = sub_23F619E8C();
  v3 = sub_23F61C61C();
  if (sub_23F3F0E3C(v3))
  {
    v4 = (_WORD *)sub_23F3EEE70();
    sub_23F3F0EF4(v4);
    sub_23F3E2784(&dword_23F35A000, v2, v0, "pre planner events passed to PG are as follows:");
    sub_23F366530();
  }
  v5 = *(_QWORD *)(v1 + 144);
  v6 = *(void (**)(uint64_t, uint64_t))(v1 + 112);
  v7 = *(_QWORD *)(v1 + 96);
  v8 = *(_QWORD *)(v1 + 56);

  v6(v7, v8);
  v9 = *(_QWORD *)(v5 + 16);
  if (v9)
  {
    v10 = (_BYTE *)(sub_23F617BA0() + 40);
    do
    {
      v11 = *((_QWORD *)v10 - 1);
      v12 = *v10;
      sub_23F3B1EA4();
      sub_23F551490();
      sub_23F3B1EA4();
      v13 = sub_23F619E8C();
      v14 = sub_23F61C61C();
      v15 = sub_23F384458(v14);
      v16 = *(void (**)(uint64_t, uint64_t))(v1 + 112);
      v17 = *(_QWORD *)(v1 + 88);
      v18 = *(_QWORD *)(v1 + 56);
      if (v15)
      {
        v19 = swift_slowAlloc();
        v29 = swift_slowAlloc();
        *(_DWORD *)v19 = 136315138;
        *(_QWORD *)(v1 + 16) = v11;
        *(_BYTE *)(v1 + 24) = v12;
        sub_23F3B1EA4();
        v20 = sub_23F61C16C();
        sub_23F37AE00(v20, v21, &v29);
        *(_QWORD *)(v19 + 4) = v22;
        sub_23F4F2720();
        sub_23F362D18();
        _os_log_impl(&dword_23F35A000, v13, (os_log_type_t)v8, "PrePlannerStage: %s", (uint8_t *)v19, 0xCu);
        swift_arrayDestroy();
        sub_23F366530();
      }

      sub_23F4F2720();
      v16(v17, v18);
      v10 += 16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  v23 = *(_QWORD *)(v1 + 144);
  v24 = *(void **)(v1 + 120);
  v25 = *(_QWORD *)(v1 + 32);
  type metadata accessor for QueryDecorationService();
  static QueryDecorationService.events(for:sessionState:)(v23, v25);
  v27 = v26;

  sub_23F362984();
  swift_task_dealloc();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v27);
}

uint64_t sub_23F54F880()
{
  uint64_t v0;

  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void static QueryDecorationService.events(for:sessionState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _WORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD v41[3];
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v41[0] = a1;
  v66 = sub_23F3B1728();
  v6 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  sub_23F3E2718();
  v7 = sub_23F61B2C0();
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v56 = v9;
  sub_23F39C56C();
  sub_23F617D08();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  v59 = v11;
  sub_23F39C56C();
  v12 = sub_23F619EBC();
  v57 = *(_QWORD *)(v12 - 8);
  v58 = v12;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  v55 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v15 = sub_23F619EA4();
  v53 = *(_QWORD *)(v15 - 8);
  v54 = v15;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3834D0();
  v52 = v17;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F383780();
  v51 = v19;
  sub_23F35D2E8(&qword_256E702E0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F3B1590();
  v21 = sub_23F428AE4();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  sub_23F383EC4();
  v23 = sub_23F50760C();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)v41 - v30;
  v62 = a2;
  sub_23F61B128();
  v32 = sub_23F61B14C();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v3, v21);
  sub_23F3F1328(v32, v2);
  sub_23F362984();
  if (sub_23F36195C(v2, 1, v23) == 1)
  {
    sub_23F39E4B8(v2, &qword_256E702E0);
    sub_23F61913C();
    v33 = sub_23F619E8C();
    v34 = sub_23F61C628();
    if (sub_23F40B304(v34))
    {
      v35 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v35);
      sub_23F3E2784(&dword_23F35A000, v33, (os_log_type_t)v4, "Unable to find any events in the transcript");
      sub_23F366530();
    }

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v66);
  }
  else
  {
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 32);
    v50 = v31;
    v49(v31, v2, v23);
    v36 = *(_QWORD *)(v41[0] + 16);
    if (v36)
    {
      v44 = *MEMORY[0x24BE54A70];
      v46 = *MEMORY[0x24BE56AB8];
      v43 = *MEMORY[0x24BE54A80];
      v45 = *MEMORY[0x24BE54A88];
      v42 = *MEMORY[0x24BE54A78];
      v37 = sub_23F617BA0();
      v41[2] = 0x800000023F6340E0;
      v41[1] = 0x800000023F634110;
      v47 = v24;
      v48 = v23;
      v38 = *(_QWORD *)(v37 + 32);
      v39 = *(unsigned __int8 *)(v37 + 40);
      v64 = MEMORY[0x24BEE4AF8];
      v65 = v37 + 56;
      v66 = v36;
      v40 = (char *)&loc_23F54FCA8 + 4 * byte_23F62C870[v39];
      v63 = v38;
      __asm { BR              X9 }
    }
    sub_23F383E88((uint64_t)v50, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  }
  sub_23F362948();
}

uint64_t sub_23F550004@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE54B88];
  v3 = sub_23F619F10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

void sub_23F550048(uint64_t a1)
{
  if (a1)
  {
    MEMORY[0x24BDAC7A8](a1);
    sub_23F367974();
  }
}

uint64_t sub_23F5500C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t, char *))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v8 = a4(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - v10;
  sub_23F617D08();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3E2718();
  sub_23F61B134();
  sub_23F61B17C();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  return a5(v5, v11);
}

void sub_23F5501A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _WORD *v34;
  const char *v35;
  os_log_type_t v36;
  _WORD *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t countAndFlagsBits;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(_QWORD *);
  uint64_t v54;

  v46 = a2;
  v6 = sub_23F3B1728();
  v48 = *(_QWORD *)(v6 - 8);
  countAndFlagsBits = v6;
  sub_23F362850();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F383780();
  v47 = v11;
  sub_23F39C56C();
  sub_23F618EF0();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  v45 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v14 = sub_23F617000();
  v41 = *(_QWORD *)(v14 - 8);
  v42 = v14;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F36285C();
  v44 = v16;
  sub_23F35D2E8(&qword_256E702E0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23F551474();
  v43 = *(_QWORD *)(v18 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E701C8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3845CC();
  v23 = sub_23F428AE4();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3B1590();
  v25 = a1;
  sub_23F61B128();
  v26 = sub_23F61B14C();
  sub_23F383E88(v2, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  v27 = *(_QWORD *)(v26 + 16);
  v50 = 0;
  v51 = v27;
  v52 = v26;
  v53 = sub_23F3F3B20;
  v54 = 0;
  sub_23F617BA0();
  sub_23F5514EC();
  v29 = v28;
  sub_23F362984();
  sub_23F3F1380(v29, v4);
  sub_23F362D18();
  sub_23F3F166C(v4);
  v31 = v30;
  sub_23F39E4B8(v4, &qword_256E701C8);
  sub_23F362984();
  if (v31)
  {
    sub_23F55060C(v25, v3);
    if (sub_23F36195C(v3, 1, v18) != 1)
    {
      v38 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v21, v3, v18);
      countAndFlagsBits = Session.Event.getSessionScopedLoggingSalt()()._countAndFlagsBits;
      sub_23F61B224();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v44, v46, v42);
      sub_23F618EE4();
      v39 = objc_allocWithZone((Class)sub_23F618ECC());
      sub_23F618E9C();
      sub_23F3B1CC8((uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    sub_23F39E4B8(v3, &qword_256E702E0);
    v10 = v47;
    sub_23F551590();
    v32 = sub_23F507DF8();
    v33 = sub_23F61C610();
    if (sub_23F40B304(v33))
    {
      v34 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v34);
      v35 = "No query event found in transcript";
      goto LABEL_7;
    }
  }
  else
  {
    sub_23F551590();
    v32 = sub_23F507DF8();
    v36 = sub_23F61C610();
    if (sub_23F40B304(v36))
    {
      v37 = (_WORD *)sub_23F3EEE70();
      sub_23F3F0EF4(v37);
      v35 = "No query found in transcript";
LABEL_7:
      sub_23F3E2784(&dword_23F35A000, v32, (os_log_type_t)v26, v35);
      sub_23F366530();
    }
  }

  (*(void (**)(char *, uint64_t))(v48 + 8))(v10, countAndFlagsBits);
LABEL_10:
  sub_23F362948();
}

Swift::String __swiftcall Session.Event.getSessionScopedLoggingSalt()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String result;

  v1 = sub_23F617000();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F3B1590();
  v3 = sub_23F61B200();
  v5 = v4;
  swift_bridgeObjectRelease();
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    v7 = sub_23F61B200();
  }
  else
  {
    sub_23F61B2D8();
    v9 = sub_23F616FDC();
    v11 = v10;
    sub_23F383E88(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v7 = v9;
    v8 = v11;
  }
  result._object = v8;
  result._countAndFlagsBits = v7;
  return result;
}

uint64_t sub_23F55060C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD *);
  uint64_t v35;

  v30 = a2;
  v4 = sub_23F3B1728();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E701C8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F428AE4();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3845CC();
  v29 = a1;
  sub_23F61B128();
  v10 = sub_23F61B14C();
  sub_23F551560();
  v11 = *(_QWORD *)(v10 + 16);
  v31 = 0;
  v32 = v11;
  v33 = v10;
  v34 = sub_23F3F3B20;
  v35 = 0;
  sub_23F3668F4();
  sub_23F5514EC();
  v13 = v12;
  sub_23F362D18();
  sub_23F3F1380(v13, (uint64_t)v8);
  sub_23F362984();
  v14 = sub_23F3F166C((uint64_t)v8);
  v16 = v15;
  sub_23F39E4B8((uint64_t)v8, &qword_256E701C8);
  sub_23F362D18();
  if (!v16)
  {
    sub_23F61913C();
    v26 = sub_23F619E8C();
    v27 = sub_23F61C610();
    if (sub_23F384458(v27))
    {
      v28 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_23F35A000, v26, (os_log_type_t)v14, "No query found in transcript", v28, 2u);
      sub_23F366530();
    }

    sub_23F3B1CC8(v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    v25 = sub_23F50760C();
    v23 = v30;
    v24 = 1;
    return sub_23F36196C(v23, v24, 1, v25);
  }
  sub_23F362984();
  sub_23F61B128();
  v17 = sub_23F61B14C();
  result = sub_23F551560();
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v14 < *(_QWORD *)(v17 + 16))
  {
    v19 = sub_23F50760C();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = v17
        + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))
        + *(_QWORD *)(v20 + 72) * v14;
    v22 = v30;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16))(v30, v21, v19);
    sub_23F362984();
    v23 = v22;
    v24 = 0;
    v25 = v19;
    return sub_23F36196C(v23, v24, 1, v25);
  }
  __break(1u);
  return result;
}

uint64_t QueryDecorationService.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_23F39E4B8(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationService_toolbox, &qword_256E72B70);
  sub_23F39E4B8(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationService_toolExecutionSession, &qword_256E797E0);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t QueryDecorationService.__deallocating_deinit()
{
  QueryDecorationService.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t QueryDecorationService.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5508DC()
{
  return QueryDecorationService.unownedExecutor.getter();
}

uint64_t sub_23F5508F4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23F3609AC;
  return sub_23F54E04C();
}

uint64_t sub_23F55093C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23F55099C;
  return sub_23F54E1F4(a1, a2);
}

uint64_t sub_23F55099C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = sub_23F3629E8();
  if (!v1)
    v4 = a1;
  return sub_23F3E0218(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23F5509D0@<X0>(uint64_t a1@<X8>)
{
  return sub_23F550004(a1);
}

void sub_23F5509E4()
{
  sub_23F5ABF38();
}

_QWORD *sub_23F550A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t inited;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19[3];
  uint64_t v20;
  uint64_t v21;

  v8 = sub_23F35D2E8(&qword_256E72B70);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for QueryDecorationSignpost();
  inited = swift_initStaticObject();
  sub_23F55737C(inited, v19);
  sub_23F382EF8(a3, (uint64_t)v10, &qword_256E72B70);
  type metadata accessor for ToolCandidateRanker();
  swift_allocObject();
  v12 = sub_23F5D6CF8();
  type metadata accessor for QueryDecorator();
  v13 = (_QWORD *)swift_allocObject();
  swift_retain();
  v14 = sub_23F550E84(a1, a2, (uint64_t)v10, (uint64_t)v12, a4, v13);
  v15 = v20;
  v16 = v21;
  sub_23F35EA9C(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  sub_23F39E4B8(a3, &qword_256E72B70);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v19);
  swift_release();
  return v14;
}

uint64_t sub_23F550B78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F5500C4(a1, *(_QWORD *)(v2 + 16), a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE57D40], MEMORY[0x24BE56478]);
}

unint64_t sub_23F550BA4(uint64_t a1)
{
  unint64_t result;

  result = sub_23F550BC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23F550BC8()
{
  unint64_t result;
  uint64_t DecorationService;

  result = qword_256E7A0E0;
  if (!qword_256E7A0E0)
  {
    DecorationService = type metadata accessor for QueryDecorationService();
    result = MEMORY[0x242670A44](&protocol conformance descriptor for QueryDecorationService, DecorationService);
    atomic_store(result, (unint64_t *)&qword_256E7A0E0);
  }
  return result;
}

uint64_t type metadata accessor for QueryDecorationService()
{
  uint64_t result;

  result = qword_256E7A110;
  if (!qword_256E7A110)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F550C40()
{
  return type metadata accessor for QueryDecorationService();
}

void sub_23F550C48()
{
  unint64_t v0;

  sub_23F550DC8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for QueryDecorationService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of QueryDecorationService.__allocating_init(clientApplicationIdentifier:toolbox:toolExecutionSession:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of QueryDecorationService.setup(sessionState:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v1 + 152) + *(_QWORD *)(*(_QWORD *)v1 + 152));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23F3609AC;
  return sub_23F551440(a1, v6);
}

uint64_t dispatch thunk of QueryDecorationService.handle(_:plannerServiceContext:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 160) + *(_QWORD *)(*(_QWORD *)v2 + 160));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23F3DFCB0;
  return v8(a1, a2);
}

uint64_t dispatch thunk of QueryDecorationService.telemetryTarget.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

void sub_23F550DC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E79820)
  {
    sub_23F61B32C();
    v0 = sub_23F61C730();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256E79820);
  }
}

uint64_t sub_23F550E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F5500C4(a1, *(_QWORD *)(v2 + 16), a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE577B0], (uint64_t (*)(uint64_t, char *))MEMORY[0x24BE561D8]);
}

unint64_t sub_23F550E48()
{
  unint64_t result;

  result = qword_256E7A218;
  if (!qword_256E7A218)
  {
    result = MEMORY[0x242670A44](&unk_23F62CA14, &type metadata for QueryDecorationServiceError);
    atomic_store(result, (unint64_t *)&qword_256E7A218);
  }
  return result;
}

_QWORD *sub_23F550E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t DecorationServiceCaller;
  uint64_t v31;
  uint64_t v32;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  ValueMetadata *v44;
  _UNKNOWN **v45;
  _QWORD v46[5];
  _BYTE v47[24];
  ValueMetadata *v48;
  _UNKNOWN **v49;

  v12 = sub_23F35D2E8(&qword_256E72B70);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F619E98();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = &type metadata for QueryDecorationLoggerBuilder;
  v49 = &protocol witness table for QueryDecorationLoggerBuilder;
  v46[3] = type metadata accessor for QueryDecorationSignposter(0);
  v46[4] = &off_250FDC298;
  v46[0] = a5;
  sub_23F61C9E8();
  sub_23F6190E8();
  swift_bridgeObjectRetain_n();
  v19 = sub_23F619E8C();
  v20 = sub_23F61C610();
  v39 = v20;
  v21 = os_log_type_enabled(v19, v20);
  v40 = a1;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v37 = v16;
    v23 = v22;
    v35 = swift_slowAlloc();
    *(_QWORD *)&v42 = v35;
    *(_DWORD *)v23 = 136315394;
    v36 = v15;
    sub_23F37AE00(0xD00000000000004ELL, 0x800000023F639390, (uint64_t *)&v42);
    v41 = v24;
    v38 = v14;
    sub_23F61C790();
    *(_WORD *)(v23 + 12) = 2080;
    if (a2)
      v25 = a1;
    else
      v25 = 0x3E6C696E3CLL;
    if (a2)
      v26 = a2;
    else
      v26 = 0xE500000000000000;
    v34 = v19;
    sub_23F617BA0();
    sub_23F37AE00(v25, v26, (uint64_t *)&v42);
    v41 = v27;
    v14 = v38;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v28 = v34;
    _os_log_impl(&dword_23F35A000, v34, (os_log_type_t)v39, "%s QueryDecorator initializer (clientApplicationIdentifier: %s)", (uint8_t *)v23, 0x16u);
    v29 = v35;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v29, -1, -1);
    MEMORY[0x242670B70](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v36);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  sub_23F382EF8(a3, (uint64_t)v14, &qword_256E72B70);
  if (qword_256E6F090 != -1)
    swift_once();
  DecorationServiceCaller = type metadata accessor for QueryDecorationServiceCaller();
  swift_allocObject();
  swift_retain();
  sub_23F56C1C4();
  a6[11] = DecorationServiceCaller;
  a6[12] = &off_250FDC0E8;
  a6[8] = v31;
  sub_23F382FC4((uint64_t)v47, (uint64_t)(a6 + 13));
  sub_23F382FC4((uint64_t)v46, (uint64_t)a6 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14QueryDecorator_signposter);
  sub_23F61BCBC();
  v32 = sub_23F61BCB0();
  v44 = &type metadata for QueryDecorationTupleBuilder;
  v45 = &off_250FDC448;
  *(_QWORD *)&v42 = 10;
  BYTE8(v42) = 0;
  v43 = v32;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v46);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v47);
  sub_23F39E4B8(a3, &qword_256E72B70);
  sub_23F362678(&v42, (uint64_t)(a6 + 2));
  a6[7] = a4;
  return a6;
}

uint64_t storeEnumTagSinglePayload for QueryDecorationServiceError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F5512C4 + 4 * byte_23F62C875[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F5512E4 + 4 * byte_23F62C87A[v4]))();
}

_BYTE *sub_23F5512C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F5512E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F5512EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F5512F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F5512FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F551304(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for QueryDecorationServiceError()
{
  return &type metadata for QueryDecorationServiceError;
}

unint64_t sub_23F551324()
{
  unint64_t result;

  result = qword_256E7A220;
  if (!qword_256E7A220)
  {
    result = MEMORY[0x242670A44](&unk_23F62C9EC, &type metadata for QueryDecorationServiceError);
    atomic_store(result, (unint64_t *)&qword_256E7A220);
  }
  return result;
}

uint64_t sub_23F551360()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 - 168) + 16))(*(_QWORD *)(v1 - 176), v0, *(_QWORD *)(v1 - 160));
}

uint64_t sub_23F55137C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 - 144) + 104))(v0, *(unsigned int *)(v1 - 252), *(_QWORD *)(v1 - 136));
}

void sub_23F551394()
{
  sub_23F377C90();
}

void sub_23F5513AC()
{
  sub_23F377C90();
}

uint64_t sub_23F5513C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v0 + 16))(*(_QWORD *)(v3 - 208), v2, v1);
}

uint64_t sub_23F5513DC()
{
  return sub_23F61B23C();
}

uint64_t sub_23F5513EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F5513FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F55140C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F55141C()
{
  return sub_23F61B17C();
}

uint64_t sub_23F551440(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23F55144C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F551458@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, *(unsigned int *)(v2 - 256), v3);
}

uint64_t sub_23F551464(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(a1, 0, 1, v1);
}

uint64_t sub_23F551474()
{
  return sub_23F61B2E4();
}

uint64_t sub_23F551490()
{
  return sub_23F61913C();
}

uint64_t sub_23F551498()
{
  return sub_23F61B134();
}

uint64_t sub_23F5514A0()
{
  return sub_23F619EB0();
}

uint64_t sub_23F5514A8()
{
  return swift_task_dealloc();
}

BOOL sub_23F5514B4(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F5514C4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5514D4()
{
  uint64_t v0;

  return v0;
}

void sub_23F5514EC()
{
  uint64_t v0;

  sub_23F3F0F58((__int128 *)(v0 - 120));
}

uint64_t sub_23F5514FC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F55150C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 16);
}

void sub_23F551524()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F5501A8(v1, v0);
}

uint64_t sub_23F551530()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 312))();
}

uint64_t sub_23F551548()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 360))();
}

uint64_t sub_23F551554()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23F551560()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_23F55156C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F551578()
{
  return sub_23F61B23C();
}

void sub_23F551584(uint64_t a1)
{
  sub_23F550048(a1);
}

uint64_t sub_23F551590()
{
  return sub_23F61913C();
}

void sub_23F5515AC()
{
  sub_23F377C90();
}

void sub_23F5515B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  void (*v23)(char *, unint64_t, uint64_t);
  int v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  int v41;

  v2 = sub_23F618ED8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v34 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v34 - v10;
  v12 = *(_QWORD *)(a1 + 56);
  v39 = a1 + 56;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v41 = *MEMORY[0x24BE57C00];
  v16 = a1;
  sub_23F617BA0();
  v17 = 0;
  v38 = MEMORY[0x24BEE4AF8];
  while (v15)
  {
    v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v19 = v18 | (v17 << 6);
LABEL_22:
    v23 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v23(v11, *(_QWORD *)(v16 + 48) + *(_QWORD *)(v3 + 72) * v19, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v11, v2);
    v23(v6, (unint64_t)v9, v2);
    v24 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    if (v24 == v41)
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
      v26 = *(_QWORD *)v6;
      v37 = *((_QWORD *)v6 + 1);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F376C88();
        v38 = v32;
      }
      v27 = *(_QWORD *)(v38 + 16);
      v28 = v27 + 1;
      if (v27 >= *(_QWORD *)(v38 + 24) >> 1)
      {
        v35 = *(_QWORD *)(v38 + 16);
        v36 = v27 + 1;
        sub_23F376C88();
        v27 = v35;
        v28 = v36;
        v38 = v33;
      }
      v29 = v38;
      *(_QWORD *)(v38 + 16) = v28;
      v30 = v29 + 16 * v27;
      v31 = v37;
      *(_QWORD *)(v30 + 32) = v26;
      *(_QWORD *)(v30 + 40) = v31;
    }
    else
    {
      v25 = *(void (**)(char *, uint64_t))(v3 + 8);
      v25(v6, v2);
      v25(v9, v2);
    }
  }
  v20 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v20 >= v40)
    goto LABEL_29;
  v21 = *(_QWORD *)(v39 + 8 * v20);
  ++v17;
  if (v21)
    goto LABEL_21;
  v17 = v20 + 1;
  if (v20 + 1 >= v40)
    goto LABEL_29;
  v21 = *(_QWORD *)(v39 + 8 * v17);
  if (v21)
    goto LABEL_21;
  v17 = v20 + 2;
  if (v20 + 2 >= v40)
    goto LABEL_29;
  v21 = *(_QWORD *)(v39 + 8 * v17);
  if (v21)
    goto LABEL_21;
  v17 = v20 + 3;
  if (v20 + 3 >= v40)
    goto LABEL_29;
  v21 = *(_QWORD *)(v39 + 8 * v17);
  if (v21)
  {
LABEL_21:
    v15 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v17 << 6);
    goto LABEL_22;
  }
  v22 = v20 + 4;
  if (v22 >= v40)
  {
LABEL_29:
    swift_release();
    return;
  }
  v21 = *(_QWORD *)(v39 + 8 * v22);
  if (v21)
  {
    v17 = v22;
    goto LABEL_21;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v40)
      goto LABEL_29;
    v21 = *(_QWORD *)(v39 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_21;
  }
LABEL_31:
  __break(1u);
}

void sub_23F551908(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  void (*v27)(char *, unint64_t, uint64_t);
  char *v28;
  int v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  int v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;

  v2 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23F61B92C();
  v46 = *(_QWORD *)(v50 - 8);
  v5 = MEMORY[0x24BDAC7A8](v50);
  v43 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v39 - v7;
  v8 = sub_23F618ED8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v39 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v51 = (char *)&v39 - v16;
  v17 = *(_QWORD *)(a1 + 56);
  v47 = a1 + 56;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v45 = v12 + 8;
  v48 = (unint64_t)(v18 + 63) >> 6;
  v49 = *MEMORY[0x24BE57BF8];
  v52 = a1;
  sub_23F617BA0();
  v21 = 0;
  v44 = MEMORY[0x24BEE4AF8];
  while (v20)
  {
    v22 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    v23 = v22 | (v21 << 6);
LABEL_22:
    v27 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v28 = v51;
    v27(v51, *(_QWORD *)(v52 + 48) + *(_QWORD *)(v9 + 72) * v23, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v28, v8);
    v27(v12, (unint64_t)v15, v8);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
    if (v29 == v49)
    {
      (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
      sub_23F35D2E8(&qword_256E7A408);
      swift_bridgeObjectRelease();
      v30 = v50;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v4, v12, v50);
      sub_23F36196C((uint64_t)v4, 0, 1, v30);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    }
    else
    {
      v31 = *(void (**)(char *, uint64_t))(v9 + 8);
      v31(v12, v8);
      v30 = v50;
      sub_23F36196C((uint64_t)v4, 1, 1, v50);
      v31(v15, v8);
    }
    if (sub_23F36195C((uint64_t)v4, 1, v30) == 1)
    {
      sub_23F3625D8((uint64_t)v4, &qword_256E701F0);
    }
    else
    {
      v32 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
      v32(v42, v4, v30);
      v32(v43, v42, v30);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377314();
        v44 = v37;
      }
      v33 = *(_QWORD *)(v44 + 16);
      v34 = v33 + 1;
      if (v33 >= *(_QWORD *)(v44 + 24) >> 1)
      {
        v40 = *(_QWORD *)(v44 + 16);
        v41 = v33 + 1;
        sub_23F377314();
        v33 = v40;
        v34 = v41;
        v44 = v38;
      }
      v35 = v43;
      v36 = v44;
      *(_QWORD *)(v44 + 16) = v34;
      v32((char *)(v36+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v33), v35, v30);
    }
  }
  v24 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v24 >= v48)
    goto LABEL_32;
  v25 = *(_QWORD *)(v47 + 8 * v24);
  ++v21;
  if (v25)
    goto LABEL_21;
  v21 = v24 + 1;
  if (v24 + 1 >= v48)
    goto LABEL_32;
  v25 = *(_QWORD *)(v47 + 8 * v21);
  if (v25)
    goto LABEL_21;
  v21 = v24 + 2;
  if (v24 + 2 >= v48)
    goto LABEL_32;
  v25 = *(_QWORD *)(v47 + 8 * v21);
  if (v25)
    goto LABEL_21;
  v21 = v24 + 3;
  if (v24 + 3 >= v48)
    goto LABEL_32;
  v25 = *(_QWORD *)(v47 + 8 * v21);
  if (v25)
  {
LABEL_21:
    v20 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v21 << 6);
    goto LABEL_22;
  }
  v26 = v24 + 4;
  if (v26 >= v48)
  {
LABEL_32:
    swift_release();
    return;
  }
  v25 = *(_QWORD *)(v47 + 8 * v26);
  if (v25)
  {
    v21 = v26;
    goto LABEL_21;
  }
  while (1)
  {
    v21 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v21 >= v48)
      goto LABEL_32;
    v25 = *(_QWORD *)(v47 + 8 * v21);
    ++v26;
    if (v25)
      goto LABEL_21;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_23F551DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8[16] = v18;
  v8[17] = v19;
  v8[14] = v16;
  v8[15] = v17;
  v8[12] = v14;
  v8[13] = v15;
  v8[10] = v12;
  v8[11] = v13;
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  sub_23F35D2E8(&qword_256E6FF78);
  v8[18] = swift_task_alloc();
  v9 = sub_23F619004();
  v8[19] = v9;
  v8[20] = *(_QWORD *)(v9 - 8);
  v8[21] = swift_task_alloc();
  v8[22] = type metadata accessor for QueryDecorationCacheKey(0);
  v8[23] = swift_task_alloc();
  v10 = (_QWORD *)swift_task_alloc();
  v8[24] = v10;
  v10[2] = v14;
  v10[3] = v15;
  v10[4] = v16;
  v10[5] = v17;
  v10[6] = v18;
  v10[7] = v19;
  return swift_task_switch();
}

#error "23F551F90: call analysis failed (funcsize=77)"

uint64_t sub_23F551FF8()
{
  sub_23F556DD4();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F552034()
{
  sub_23F556DB4();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F552070()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23F4329EC();
  sub_23F3663AC(*(_QWORD *)(v0 + 184), type metadata accessor for QueryDecorationCacheKey);
  sub_23F556E80();
  sub_23F384364();
  sub_23F383EDC();
  sub_23F384120();
  sub_23F517218();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  v1 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F4328BC(v1);
}

uint64_t sub_23F5520C8()
{
  uint64_t v0;

  sub_23F3836F0();
  sub_23F3663AC(*(_QWORD *)(v0 + 184), type metadata accessor for QueryDecorationCacheKey);
  sub_23F556F04();
  sub_23F38432C();
  swift_release();
  sub_23F38458C();
  sub_23F384364();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return sub_23F38346C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F552128()
{
  uint64_t (*v0)(void);

  sub_23F4329EC();
  sub_23F556E80();
  sub_23F384364();
  sub_23F383EDC();
  sub_23F384120();
  sub_23F517218();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  v0 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F4328BC(v0);
}

uint64_t sub_23F552170()
{
  uint64_t v0;

  sub_23F3836F0();
  sub_23F556F04();
  sub_23F38432C();
  swift_release();
  sub_23F38458C();
  sub_23F384364();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return sub_23F38346C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5521C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v8[16] = v17;
  v8[17] = v18;
  v8[14] = v15;
  v8[15] = v16;
  v8[12] = v13;
  v8[13] = v14;
  v8[10] = a8;
  v8[11] = v12;
  v8[8] = a6;
  v8[9] = a7;
  v8[6] = a4;
  v8[7] = a5;
  v8[4] = a2;
  v8[5] = a3;
  v8[3] = a1;
  sub_23F35D2E8(&qword_256E6FF78);
  v8[18] = swift_task_alloc();
  v9 = sub_23F619004();
  v8[19] = v9;
  v8[20] = *(_QWORD *)(v9 - 8);
  v8[21] = swift_task_alloc();
  v8[22] = type metadata accessor for QueryDecorationCacheKey(0);
  v8[23] = swift_task_alloc();
  v10 = (_QWORD *)swift_task_alloc();
  v8[24] = v10;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  v10[5] = v16;
  v10[6] = v17;
  v10[7] = v18;
  return swift_task_switch();
}

#error "23F5523A8: call analysis failed (funcsize=76)"

uint64_t sub_23F552400()
{
  sub_23F556DD4();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F55243C()
{
  sub_23F556DB4();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F552478()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F4329EC();
  sub_23F3663AC(*(_QWORD *)(v0 + 184), type metadata accessor for QueryDecorationCacheKey);
  sub_23F556E14();
  v1 = *(_QWORD *)(v0 + 16);
  sub_23F38432C();
  sub_23F3DDBDC();
  sub_23F384364();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return sub_23F3E0218(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5524FC()
{
  uint64_t v0;

  sub_23F4329EC();
  sub_23F3663AC(*(_QWORD *)(v0 + 184), type metadata accessor for QueryDecorationCacheKey);
  sub_23F556E14();
  sub_23F384364();
  sub_23F38458C();
  sub_23F383EDC();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F552578()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F4329EC();
  sub_23F556E14();
  v1 = *(_QWORD *)(v0 + 16);
  sub_23F38432C();
  sub_23F3DDBDC();
  sub_23F384364();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return sub_23F3E0218(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5525EC()
{
  uint64_t v0;

  sub_23F4329EC();
  sub_23F556E14();
  sub_23F384364();
  sub_23F38458C();
  sub_23F383EDC();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F552658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8[12] = v13;
  v8[13] = v14;
  v8[10] = a8;
  v8[11] = v12;
  v8[8] = a6;
  v8[9] = a7;
  v8[6] = a4;
  v8[7] = a5;
  v8[4] = a2;
  v8[5] = a3;
  v8[3] = a1;
  sub_23F35D2E8(&qword_256E6FF78);
  v8[14] = swift_task_alloc();
  v9 = sub_23F619004();
  v8[15] = v9;
  v8[16] = *(_QWORD *)(v9 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = type metadata accessor for QueryDecorationCacheKey(0);
  v8[19] = swift_task_alloc();
  v10 = swift_task_alloc();
  v8[20] = v10;
  *(_QWORD *)(v10 + 16) = v13;
  *(_QWORD *)(v10 + 24) = v14;
  return swift_task_switch();
}

#error "23F55281C: call analysis failed (funcsize=77)"

uint64_t sub_23F552874()
{
  uint64_t v0;

  sub_23F3B1998();
  sub_23F55701C(v0);
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5528B8()
{
  uint64_t v0;

  sub_23F3B1998();
  sub_23F55700C(v0);
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5528FC()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F556FDC();
  sub_23F3663AC(*(_QWORD *)(v0 + 152), type metadata accessor for QueryDecorationCacheKey);
  sub_23F556E14();
  v1 = *(_QWORD *)(v0 + 16);
  sub_23F3DDBDC();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return sub_23F3E0218(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F55296C()
{
  uint64_t v0;

  sub_23F556FDC();
  sub_23F3663AC(*(_QWORD *)(v0 + 152), type metadata accessor for QueryDecorationCacheKey);
  sub_23F556E14();
  sub_23F383EDC();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5529D4()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F556FDC();
  sub_23F556E14();
  v1 = *(_QWORD *)(v0 + 16);
  sub_23F3DDBDC();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return sub_23F3E0218(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F552A34()
{
  uint64_t v0;

  sub_23F556FDC();
  sub_23F556E14();
  sub_23F383EDC();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F552A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  v9[11] = v12;
  v9[12] = v8;
  v9[9] = a8;
  v9[10] = v11;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  v9[2] = a1;
  v9[13] = type metadata accessor for QueryDecorationCacheKey(0);
  v9[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F552B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  sub_23F3836F0();
  v13 = v12[5];
  if (v13)
  {
    v15 = (int *)v12[13];
    v14 = v12[14];
    v16 = v12[12];
    v18 = v12[7];
    v17 = v12[8];
    v19 = v12[6];
    v20 = v12[3];
    v21 = v12[4];
    v22 = sub_23F61B4C4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v14, v20, v22);
    v23 = v14 + v15[6];
    v24 = sub_23F534804();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v23, v19, v24);
    sub_23F556D34();
    sub_23F3B1CF8();
    swift_storeEnumTagMultiPayload();
    v25 = sub_23F4DD0F4();
    sub_23F36196C(v25, v26, v27, v28);
    v29 = (_QWORD *)(v14 + v15[5]);
    *v29 = v21;
    v29[1] = v13;
    v30 = (_QWORD *)(v14 + v15[7]);
    *v30 = v18;
    v30[1] = v17;
    sub_23F35EA9C((_QWORD *)(v16 + 48), *(_QWORD *)(v16 + 72));
    sub_23F383738();
    sub_23F3668F4();
    v31 = (_QWORD *)swift_task_alloc();
    v12[15] = v31;
    *v31 = v12;
    v31[1] = sub_23F552C58;
    sub_23F557130();
    sub_23F3843EC();
    return sub_23F5302F8(v32, v33, v34, v35, v36, v37, v38);
  }
  else
  {
    v40 = (_QWORD *)sub_23F3629C0();
    v12[17] = v40;
    *v40 = v12;
    v40[1] = sub_23F552CA4;
    sub_23F557130();
    sub_23F3843EC();
    return v42(v41, v42, v43, v44, v45, v46, v47, v48, a9, a10, a11, a12);
  }
}

uint64_t sub_23F552C58()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1998();
  sub_23F3B201C();
  *(_QWORD *)(v1 + 128) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F552CA4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  sub_23F3B2010(&v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_23F435B58((uint64_t (*)(void))v0[1]);
}

uint64_t sub_23F552CE8()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23F3663AC(*(_QWORD *)(v0 + 112), type metadata accessor for QueryDecorationCacheKey);
  swift_task_dealloc();
  v1 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F362888(v1);
}

uint64_t sub_23F552D20()
{
  uint64_t v0;

  sub_23F3663AC(*(_QWORD *)(v0 + 112), type metadata accessor for QueryDecorationCacheKey);
  swift_task_dealloc();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F552D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v8[15] = v17;
  v8[16] = v18;
  v8[13] = v15;
  v8[14] = v16;
  v8[11] = v13;
  v8[12] = v14;
  v8[9] = a8;
  v8[10] = v12;
  v8[7] = a6;
  v8[8] = a7;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  sub_23F35D2E8(&qword_256E6FF78);
  v8[17] = swift_task_alloc();
  v9 = sub_23F619004();
  v8[18] = v9;
  v8[19] = *(_QWORD *)(v9 - 8);
  v8[20] = swift_task_alloc();
  v8[21] = type metadata accessor for QueryDecorationCacheKey(0);
  v8[22] = swift_task_alloc();
  v10 = (_QWORD *)swift_task_alloc();
  v8[23] = v10;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  v10[5] = v16;
  v10[6] = v17;
  v10[7] = v18;
  return swift_task_switch();
}

#error "23F552F44: call analysis failed (funcsize=82)"

uint64_t sub_23F552FB4()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1998();
  sub_23F3B201C();
  *(_QWORD *)(v1 + 200) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F553000()
{
  sub_23F556D94();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F55303C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23F432AC4();
  sub_23F3663AC(*(_QWORD *)(v0 + 176), type metadata accessor for QueryDecorationCacheKey);
  sub_23F556E64();
  sub_23F3DDBDC();
  swift_release();
  sub_23F38432C();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  v1 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F4328EC(v1);
}

uint64_t sub_23F553094()
{
  uint64_t v0;

  sub_23F4329EC();
  sub_23F3663AC(*(_QWORD *)(v0 + 176), type metadata accessor for QueryDecorationCacheKey);
  sub_23F556E1C();
  sub_23F517218();
  sub_23F38432C();
  sub_23F384364();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return sub_23F4328BC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5530EC()
{
  uint64_t (*v0)(void);

  sub_23F432AC4();
  sub_23F556E64();
  sub_23F3DDBDC();
  swift_release();
  sub_23F38432C();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  v0 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F4328EC(v0);
}

uint64_t sub_23F553134()
{
  uint64_t v0;

  sub_23F4329EC();
  sub_23F556E1C();
  sub_23F517218();
  sub_23F38432C();
  sub_23F384364();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return sub_23F4328BC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F55317C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F556D20(a1, a2, a3, a4, a5);
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = sub_23F366578();
  v7 = sub_23F534804();
  v5[12] = v7;
  v5[13] = *(_QWORD *)(v7 - 8);
  v5[14] = sub_23F366578();
  v8 = sub_23F556EE8();
  v5[15] = v8;
  v5[16] = *(_QWORD *)(v8 - 8);
  v5[17] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5531EC(uint64_t a1)
{
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24[14];

  sub_23F556C3C(a1, *MEMORY[0x24BE57400]);
  sub_23F618B84();
  sub_23F556BEC();
  if ((v1 & 1) != 0 && (v3 = *(_QWORD *)(v2[8] + 16), (v2[18] = v3) != 0))
  {
    v4 = v2[7];
    v5 = v2[4];
    sub_23F556F5C(v2[13]);
    v2[19] = swift_getKeyPath();
    v6 = (_QWORD *)swift_task_alloc();
    v2[20] = v6;
    v6[2] = v4;
    v6[3] = v3;
    v6[4] = v5;
    sub_23F3D9E08();
    v7 = (_QWORD *)sub_23F5570CC();
    v2[21] = v7;
    *v7 = v2;
    v7[1] = sub_23F5533E0;
    v24[12] = (uint64_t)&unk_256E7A418;
    v24[13] = (uint64_t)v6;
    sub_23F441330();
    return sub_23F552A8C(v8, v9, v10, v11, v12, v13, v14, v15);
  }
  else
  {
    v17 = (void *)v2[11];
    sub_23F52E6C0();
    sub_23F619E8C();
    v18 = sub_23F507D60();
    if (sub_23F366874(v18))
    {
      sub_23F366668();
      v24[0] = sub_23F366668();
      sub_23F556D84(4.8149e-34);
      sub_23F556C28(58, 0x800000023F6395F0, v24);
      v2[2] = v19;
      sub_23F435C2C();
      sub_23F426464(&dword_23F35A000, v20, v21, "QDInternal: Output of Configurable Tool Retrieval | %s\nToolRetrievalService not enabled, returning nil as tools");
      sub_23F556C18();
      sub_23F366530();
    }

    sub_23F383914();
    v22 = sub_23F556EE0();
    sub_23F4AB728(v22);
    sub_23F556D10();
    sub_23F362CC8();
    sub_23F3666DC();
    v23 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F556CD8(v23);
  }
}

uint64_t sub_23F5533E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F556FDC();
  sub_23F3B1998();
  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[12];
  sub_23F55701C((uint64_t)v0);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  sub_23F3666DC();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F55345C()
{
  uint64_t (*v0)(void);

  swift_release();
  sub_23F556D10();
  sub_23F362CC8();
  sub_23F3666DC();
  v0 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F435B58(v0);
}

uint64_t sub_23F553494()
{
  uint64_t v0;

  swift_release();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  return sub_23F3B182C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5534D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_23F619E98();
  v4[16] = v5;
  v4[17] = *(_QWORD *)(v5 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = sub_23F35D2E8(&qword_256E70F38);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F5535A8()
{
  uint64_t v0;
  uint64_t inited;
  _QWORD *v2;

  sub_23F556C4C(*(_QWORD **)(v0 + 104));
  inited = swift_initStaticObject();
  sub_23F556C00(inited);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v2;
  *v2 = v0;
  v2[1] = sub_23F553620;
  return sub_23F5ECB0C(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 120));
}

uint64_t sub_23F553620()
{
  sub_23F556D94();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F55365C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26)
{
  _QWORD *v26;
  os_log_type_t v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  int v53;
  NSObject *v54;
  os_log_type_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  sub_23F3B15E8();
  a25 = v29;
  a26 = v30;
  a24 = v26;
  v31 = v26;
  sub_23F53A7B4();
  sub_23F5570FC();
  v32 = sub_23F40B4F0();
  v33 = sub_23F61C61C();
  if (sub_23F3B1E8C(v33))
  {
    v34 = v26[24];
    v35 = (uint8_t *)sub_23F366668();
    sub_23F366668();
    sub_23F556FF0();
    sub_23F55711C(4.8151e-34);
    sub_23F556C28(58, v36, v37);
    sub_23F556DF4(v38);
    sub_23F556EC8();
    v39 = sub_23F557150();
    sub_23F5570E8(v39, v40, v41, v42, v43, v44, v45, v46);
    sub_23F556EB0(v47);
    sub_23F3B5F04();
    sub_23F3625D8(v34, &qword_256E70F38);
    sub_23F3E025C(&dword_23F35A000, v32, v27, "%s full list of tools retrieved %s", v35);
    sub_23F507364();
    sub_23F366530();
  }
  v48 = v26[16];
  v49 = v26[17];
  sub_23F3625D8(v26[24], &qword_256E70F38);

  v50 = *(void (**)(uint64_t))(v49 + 8);
  v51 = sub_23F527650();
  v50(v51);
  sub_23F5568B8(v26[25], v26[22]);
  v52 = sub_23F556EE0();
  v53 = sub_23F4DC414(v52);
  v54 = v26[22];
  if (v53 == 1)
  {
    sub_23F3625D8(v26[22], &qword_256E70F38);
    sub_23F5570D4();
    sub_23F507DF8();
    v55 = sub_23F507D60();
    v56 = sub_23F3B1E8C(v55);
    v57 = v26[19];
    v58 = v31[16];
    if (v56)
    {
      v59 = (uint8_t *)sub_23F366668();
      sub_23F366668();
      sub_23F556FF0();
      sub_23F5570BC(4.8149e-34);
      sub_23F556C28(58, 0x800000023F6395F0, &a15);
      v31[7] = v60;
      sub_23F435C2C();
      sub_23F38485C(&dword_23F35A000, v54, v27, "Output of Configurable Tool Retrieval | %s\nToolRetrievalService enabled, but output of Tool Retrieval QueryDecorationToolRetrievalResponse object does not exist.", v59);
      sub_23F556C30();
      sub_23F366530();
    }

    v69 = v57;
    v70 = v58;
  }
  else
  {
    v61 = sub_23F619040();
    sub_23F383E64((uint64_t)v54, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8));
    sub_23F5570D4();
    sub_23F383EB0();
    sub_23F507DF8();
    v62 = sub_23F507D60();
    if (sub_23F482920(v62))
    {
      v63 = sub_23F366668();
      a15 = sub_23F366668();
      *(_DWORD *)v63 = 136315394;
      sub_23F556C28(58, 0x800000023F6395F0, &a15);
      v26[8] = v64;
      sub_23F557170();
      *(_WORD *)(v63 + 12) = 2080;
      sub_23F3EEFC8(5, v61);
      sub_23F618C20();
      sub_23F383EB0();
      v65 = sub_23F61C838();
      v67 = v66;
      swift_unknownObjectRelease();
      sub_23F37AE00(v65, v67, &a15);
      v31[9] = v68;
      sub_23F61C790();
      sub_23F3837B0();
      sub_23F384A80();
      sub_23F3E025C(&dword_23F35A000, v54, v28, "QDInternal: Output of Configurable Tool Retrieval | %s\nShowing first 5 items in [RetrievedTools]: %s", (uint8_t *)v63);
      sub_23F507364();
      sub_23F366530();
    }
    sub_23F384A80();

    v69 = sub_23F527650();
  }
  ((void (*)(uint64_t, uint64_t))v50)(v69, v70);
  sub_23F435730(v31[25], v31[12], &qword_256E70F38);
  sub_23F556BAC(v31 + 2);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v31 + 2));
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_23F3B13B0((uint64_t (*)(void))v31[1]);
}

uint64_t sub_23F553AE0()
{
  uint64_t v0;

  sub_23F3B1D38();
  sub_23F556BAC((_QWORD *)(v0 + 16));
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3668DC();
  sub_23F3668D4();
  return sub_23F366630(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F553B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9[10] = a8;
  v9[11] = v8;
  v9[8] = a6;
  v9[9] = a7;
  v9[6] = a4;
  v9[7] = a5;
  v9[4] = a2;
  v9[5] = a3;
  v9[3] = a1;
  v10 = sub_23F3B1728();
  v9[12] = v10;
  v9[13] = *(_QWORD *)(v10 - 8);
  v9[14] = sub_23F366578();
  v11 = sub_23F534804();
  v9[15] = v11;
  v9[16] = *(_QWORD *)(v11 - 8);
  v9[17] = sub_23F366578();
  v12 = sub_23F556EE8();
  v9[18] = v12;
  v9[19] = *(_QWORD *)(v12 - 8);
  v9[20] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F553BD4(uint64_t a1)
{
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t KeyPath;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v27[20];

  sub_23F556C3C(a1, *MEMORY[0x24BE57400]);
  sub_23F618B84();
  sub_23F556BEC();
  if ((v1 & 1) != 0 && (v3 = *(_QWORD *)(v2[11] + 16), (v2[21] = v3) != 0))
  {
    sub_23F556F5C(v2[16]);
    KeyPath = swift_getKeyPath();
    v2[22] = KeyPath;
    swift_retain_n();
    swift_retain();
    sub_23F383EB0();
    sub_23F383E5C();
    sub_23F3668F4();
    v5 = (_QWORD *)sub_23F5570F4();
    v2[23] = v5;
    *v5 = v2;
    v5[1] = sub_23F553DE4;
    v7 = v2[10];
    v6 = v2[11];
    v9 = v2[6];
    v8 = v2[7];
    v10 = v2[5];
    v27[18] = v2[4];
    v27[19] = v10;
    v27[16] = v8;
    v27[17] = v3;
    v27[14] = v7;
    v27[15] = v9;
    v27[12] = KeyPath;
    v27[13] = v6;
    sub_23F441330();
    return sub_23F551DB4(v11, v12, v13, v14, v15, v16, v17, v18);
  }
  else
  {
    v20 = (void *)v2[14];
    sub_23F52E6C0();
    sub_23F619E8C();
    v21 = sub_23F507D60();
    if (sub_23F366874(v21))
    {
      sub_23F366668();
      v27[0] = sub_23F366668();
      sub_23F556D84(4.8149e-34);
      sub_23F556C28(62, 0x800000023F6395B0, v27);
      v2[2] = v22;
      sub_23F435C2C();
      sub_23F426464(&dword_23F35A000, v23, v24, "QDInternal: Output of Tool Retrieval | %s\nToolRetrievalService not enabled, returning nil as tools");
      sub_23F556C18();
      sub_23F366530();
    }

    sub_23F383914();
    v25 = sub_23F556EE0();
    sub_23F4AB728(v25);
    sub_23F556FFC();
    sub_23F362CC8();
    sub_23F3666DC();
    v26 = (uint64_t (*)(void))sub_23F384760();
    return v26();
  }
}

uint64_t sub_23F553DE4()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1998();
  v1 = *(_QWORD *)(v0 + 128);
  sub_23F55700C(v0);
  sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3668FC();
  sub_23F36679C();
  return sub_23F556CCC();
}

uint64_t sub_23F553E4C()
{
  uint64_t (*v0)(void);

  swift_release();
  sub_23F556FFC();
  sub_23F362CC8();
  sub_23F3666DC();
  v0 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F435B58(v0);
}

uint64_t sub_23F553E84()
{
  uint64_t v0;

  swift_release();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  return sub_23F3B182C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F553EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[17] = a6;
  v7[18] = a7;
  v7[15] = a4;
  v7[16] = a5;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  v8 = sub_23F619E98();
  v7[19] = v8;
  v7[20] = *(_QWORD *)(v8 - 8);
  v7[21] = swift_task_alloc();
  v7[22] = swift_task_alloc();
  v7[23] = swift_task_alloc();
  v7[24] = sub_23F35D2E8(&qword_256E70F38);
  v7[25] = swift_task_alloc();
  v7[26] = swift_task_alloc();
  v7[27] = swift_task_alloc();
  v7[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F553FA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[14];
  v1 = v0[15];
  v3 = (_QWORD *)v0[13];
  v4 = v3[10];
  v5 = v3[11];
  sub_23F35EA9C(v3 + 7, v4);
  type metadata accessor for QueryDecorationSignpost();
  inited = swift_initStaticObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(inited, v4, v5);
  sub_23F5515B8(v2);
  v8 = v7;
  sub_23F551908(v1);
  sub_23F368E14(v8);
  v10 = v9;
  v0[29] = v9;
  sub_23F368EA8();
  v12 = v11;
  v0[30] = v11;
  v13 = (_QWORD *)swift_task_alloc();
  v0[31] = v13;
  *v13 = v0;
  v13[1] = sub_23F55409C;
  return sub_23F5ED670(v0[28], v0[17], v0[18], v10, v12);
}

uint64_t sub_23F55409C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  sub_23F3B2010(&v4);
  *(_QWORD *)(v2 + 256) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F554104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26)
{
  _QWORD *v26;
  os_log_type_t v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  int v53;
  NSObject *v54;
  os_log_type_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  sub_23F3B15E8();
  a25 = v29;
  a26 = v30;
  a24 = v26;
  v31 = v26;
  sub_23F53A7B4();
  sub_23F5570FC();
  v32 = sub_23F40B4F0();
  v33 = sub_23F61C61C();
  if (sub_23F3B1E8C(v33))
  {
    v34 = v26[27];
    v35 = (uint8_t *)sub_23F366668();
    sub_23F366668();
    sub_23F556FF0();
    sub_23F55711C(4.8151e-34);
    sub_23F556C28(62, v36, v37);
    sub_23F556DF4(v38);
    sub_23F556EC8();
    v39 = sub_23F557150();
    sub_23F5570E8(v39, v40, v41, v42, v43, v44, v45, v46);
    sub_23F556EB0(v47);
    sub_23F3B5F04();
    sub_23F3625D8(v34, &qword_256E70F38);
    sub_23F3E025C(&dword_23F35A000, v32, v27, "%s full list of tools retrieved %s", v35);
    sub_23F507364();
    sub_23F366530();
  }
  v48 = v26[19];
  v49 = v26[20];
  sub_23F3625D8(v26[27], &qword_256E70F38);

  v50 = *(void (**)(uint64_t))(v49 + 8);
  v51 = sub_23F527650();
  v50(v51);
  sub_23F5568B8(v26[28], v26[25]);
  v52 = sub_23F556EE0();
  v53 = sub_23F4DC414(v52);
  v54 = v26[25];
  if (v53 == 1)
  {
    sub_23F3625D8(v26[25], &qword_256E70F38);
    sub_23F5570D4();
    sub_23F507DF8();
    v55 = sub_23F507D60();
    v56 = sub_23F3B1E8C(v55);
    v57 = v26[22];
    v58 = v31[19];
    if (v56)
    {
      v59 = (uint8_t *)sub_23F366668();
      sub_23F366668();
      sub_23F556FF0();
      sub_23F5570BC(4.8149e-34);
      sub_23F556C28(62, 0x800000023F6395B0, &a15);
      v31[7] = v60;
      sub_23F435C2C();
      sub_23F38485C(&dword_23F35A000, v54, v27, "Output of Tool Retrieval | %s\nToolRetrievalService enabled, but output of Tool Retrieval QueryDecorationToolRetrievalResponse object does not exist.", v59);
      sub_23F556C30();
      sub_23F366530();
    }

    v75 = v57;
    v76 = v58;
  }
  else
  {
    v61 = sub_23F619040();
    sub_23F383E64((uint64_t)v54, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8));
    v62 = sub_23F3EEFC8(5, v61);
    sub_23F510690(v62, v63, v64, v65);
    sub_23F5570D4();
    sub_23F383EB0();
    sub_23F507DF8();
    v66 = sub_23F507D60();
    if (sub_23F482920(v66))
    {
      v67 = sub_23F366668();
      a15 = sub_23F366668();
      *(_DWORD *)v67 = 136315394;
      sub_23F556C28(62, 0x800000023F6395B0, &a15);
      v26[8] = v68;
      sub_23F557170();
      *(_WORD *)(v67 + 12) = 2080;
      v69 = sub_23F618C20();
      v70 = sub_23F383EB0();
      MEMORY[0x24266F8F8](v70, v69);
      sub_23F384120();
      v71 = sub_23F3B1CF8();
      sub_23F37AE00(v71, v72, v73);
      v26[9] = v74;
      sub_23F557170();
      sub_23F3837B0();
      sub_23F384A80();
      sub_23F3E025C(&dword_23F35A000, v54, v28, "QDInternal: Output of Tool Retrieval | %s\nShowing first 5 items in [RetrievedTools]: %s", (uint8_t *)v67);
      sub_23F507364();
      sub_23F366530();
    }
    sub_23F384A80();

    v75 = sub_23F527650();
  }
  ((void (*)(uint64_t, uint64_t))v50)(v75, v76);
  sub_23F435730(v31[28], v31[12], &qword_256E70F38);
  sub_23F556BAC(v31 + 2);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v31 + 2));
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_23F3B13B0((uint64_t (*)(void))v31[1]);
}

uint64_t sub_23F55455C()
{
  uint64_t v0;

  sub_23F3B1D38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F556BAC((_QWORD *)(v0 + 16));
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3668DC();
  sub_23F3668D4();
  return sub_23F366630(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5545DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F556D20(a1, a2, a3, a4, a5);
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = sub_23F366578();
  v7 = sub_23F534804();
  v5[12] = v7;
  v5[13] = *(_QWORD *)(v7 - 8);
  v5[14] = sub_23F366578();
  v8 = sub_23F556EE8();
  v5[15] = v8;
  v5[16] = *(_QWORD *)(v8 - 8);
  v5[17] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F55464C(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F556C3C(a1, *MEMORY[0x24BE57438]);
  sub_23F618B84();
  sub_23F556BEC();
  if ((v1 & 1) != 0)
  {
    sub_23F556F5C(*(_QWORD *)(v2 + 104));
    *(_QWORD *)(v2 + 144) = swift_getKeyPath();
    swift_retain();
    sub_23F383E5C();
    sub_23F383738();
    sub_23F3B5EFC();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 152) = v3;
    *v3 = v2;
    v3[1] = sub_23F55483C;
    sub_23F3843EC();
    return sub_23F5521C0(v4, v5, v6, v7, v8, v9, v10, v11);
  }
  else
  {
    v13 = *(void **)(v2 + 88);
    sub_23F52E6C0();
    sub_23F619E8C();
    v14 = sub_23F507D60();
    if (sub_23F366874(v14))
    {
      sub_23F366668();
      v18 = sub_23F366668();
      sub_23F556D84(4.8149e-34);
      sub_23F556C28(43, 0x800000023F639630, &v18);
      *(_QWORD *)(v2 + 16) = v15;
      sub_23F435C2C();
      sub_23F426464(&dword_23F35A000, v16, v17, "QDInternal: Output of Span Matching | %s\nPlannerSpanMatchService not enabled, returning nil as span matches");
      sub_23F556C18();
      sub_23F366530();
    }

    sub_23F383914();
    sub_23F556D10();
    sub_23F362CC8();
    sub_23F3666DC();
    return (*(uint64_t (**)(_QWORD))(v2 + 8))(0);
  }
}

uint64_t sub_23F55483C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23F432AC4();
  sub_23F557108();
  sub_23F3B2010(v4);
  *(_QWORD *)(v3 + 160) = v0;
  swift_task_dealloc();
  v5 = *(_QWORD *)(v3 + 104);
  if (v0)
  {
    sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_23F3668FC();
    sub_23F36679C();
    return sub_23F556D54();
  }
  else
  {
    sub_23F3668FC();
    sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    swift_task_dealloc();
    sub_23F362CC8();
    sub_23F3666DC();
    return sub_23F556D6C(v2, *(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_23F5548D0()
{
  uint64_t v0;

  sub_23F556D10();
  sub_23F362CC8();
  sub_23F3666DC();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F554904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  v7[10] = a2;
  v7[11] = a3;
  v7[9] = a1;
  v8 = sub_23F619E98();
  v7[16] = v8;
  v7[17] = *(_QWORD *)(v8 - 8);
  v7[18] = swift_task_alloc();
  v9 = sub_23F619F70();
  v7[19] = v9;
  v7[20] = *(_QWORD *)(v9 - 8);
  v7[21] = swift_task_alloc();
  v10 = sub_23F617000();
  v7[22] = v10;
  v7[23] = *(_QWORD *)(v10 - 8);
  v7[24] = swift_task_alloc();
  v11 = sub_23F619F94();
  v7[25] = v11;
  v7[26] = *(_QWORD *)(v11 - 8);
  v7[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F5549E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[12];
  v2 = v0[10];
  v3 = *(_QWORD *)(v2 + 80);
  sub_23F556C4C((_QWORD *)(v2 + 56));
  inited = swift_initStaticObject();
  sub_23F556C00(inited);
  if (v1)
  {
    v3 = v0[12];
  }
  else
  {
    sub_23F616FF4();
    sub_23F616FDC();
    sub_23F556E98();
  }
  v0[28] = v3;
  sub_23F61724C();
  sub_23F383E5C();
  sub_23F384B00();
  sub_23F619F58();
  swift_retain();
  v5 = (_QWORD *)sub_23F5570CC();
  v0[29] = v5;
  sub_23F5570B4(&qword_256E7A450, v6, MEMORY[0x24BE54C28]);
  sub_23F5570B4(&qword_256E7A458, v7, MEMORY[0x24BE54C20]);
  sub_23F55702C(&qword_256E7A460, v8, MEMORY[0x24BE54C50]);
  sub_23F55702C(&qword_256E7A468, v9, MEMORY[0x24BE54C48]);
  *v5 = v0;
  v5[1] = sub_23F554B5C;
  sub_23F557034(v0[27]);
  return sub_23F556D3C();
}

uint64_t sub_23F554B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F556FDC();
  sub_23F3B1998();
  v2 = *(_QWORD *)(v1 + 160);
  sub_23F3B201C();
  *(_QWORD *)(v3 + 240) = v0;
  swift_task_dealloc();
  sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F3DDBDC();
  sub_23F362D18();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F554BD4()
{
  uint64_t v0;
  os_log_type_t v1;
  NSObject *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v22;

  v2 = *(NSObject **)(v0 + 144);
  v3 = sub_23F619F88();
  sub_23F6190E8();
  swift_bridgeObjectRetain_n();
  sub_23F619E8C();
  v4 = sub_23F507D60();
  if (sub_23F52E788(v4))
  {
    v5 = sub_23F366668();
    v22 = sub_23F366668();
    *(_DWORD *)v5 = 136315394;
    sub_23F556C28(43, 0x800000023F639630, &v22);
    *(_QWORD *)(v0 + 56) = v6;
    sub_23F3B1CF8();
    sub_23F61C790();
    *(_WORD *)(v5 + 12) = 2080;
    v7 = sub_23F618D88();
    v8 = sub_23F3668F4();
    v9 = MEMORY[0x24266F8F8](v8, v7);
    v11 = v10;
    sub_23F362D18();
    sub_23F37AE00(v9, v11, &v22);
    *(_QWORD *)(v0 + 64) = v12;
    sub_23F61C790();
    sub_23F3B5F04();
    sub_23F384A80();
    sub_23F3E025C(&dword_23F35A000, v2, v1, "QDInternal: Output of Span Matching | %s\nspanMatcher.findMatches found matches: %s", (uint8_t *)v5);
    sub_23F507364();
    sub_23F366530();
  }
  v14 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 144);
  v15 = *(_QWORD *)(v0 + 128);

  sub_23F384A80();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  v16 = sub_23F3B1CF8();
  v17(v16);
  sub_23F55713C();
  **(_QWORD **)(v0 + 72) = v3;
  v18 = *(_QWORD *)(v0 + 40);
  v19 = *(_QWORD *)(v0 + 48);
  sub_23F35EA9C((_QWORD *)(v0 + 16), v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  v20 = (uint64_t (*)(void))sub_23F384760();
  return v20();
}

uint64_t sub_23F554E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F4329EC();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  sub_23F35EA9C((_QWORD *)(v0 + 16), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  return sub_23F4328BC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F554EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23F554EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = sub_23F619F64();
  v3 = v2;
  *(_QWORD *)(v0 + 40) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v4;
  *v4 = v0;
  v4[1] = sub_23F554F30;
  return sub_23F4E5C28(v1, v3);
}

uint64_t sub_23F554F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_23F557178();
  sub_23F3B2010(v3);
  *(_QWORD *)(v2 + 56) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 64) = v0;
  }
  sub_23F36679C();
  return sub_23F556CC0();
}

uint64_t sub_23F554F90()
{
  uint64_t (*v0)(void);

  sub_23F619F7C();
  v0 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F362888(v0);
}

uint64_t sub_23F554FBC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F554FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F556D20(a1, a2, a3, a4, a5);
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = sub_23F366578();
  v7 = sub_23F534804();
  v5[12] = v7;
  v5[13] = *(_QWORD *)(v7 - 8);
  v5[14] = sub_23F366578();
  type metadata accessor for QueryDecorationCacheValue(0);
  v5[15] = sub_23F366578();
  v8 = sub_23F556EE8();
  v5[16] = v8;
  v5[17] = *(_QWORD *)(v8 - 8);
  v5[18] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F55506C(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F556C3C(a1, *MEMORY[0x24BE57418]);
  sub_23F618B84();
  sub_23F556BEC();
  if ((v1 & 1) != 0)
  {
    sub_23F556F5C(*(_QWORD *)(v2 + 104));
    sub_23F3B5EFC();
    sub_23F389CDC();
    sub_23F383E5C();
    sub_23F3D9E08();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 152) = v3;
    *v3 = v2;
    v3[1] = sub_23F55524C;
    sub_23F3843EC();
    return sub_23F552D5C(v4, v5, v6, v7, v8, v9, v10, v11);
  }
  else
  {
    v13 = *(void **)(v2 + 88);
    sub_23F52E6C0();
    sub_23F619E8C();
    v14 = sub_23F507D60();
    if (sub_23F366874(v14))
    {
      sub_23F366668();
      v18 = sub_23F366668();
      sub_23F556D84(4.8149e-34);
      sub_23F556C28(48, 0x800000023F639570, &v18);
      *(_QWORD *)(v2 + 16) = v15;
      sub_23F435C2C();
      sub_23F426464(&dword_23F35A000, v16, v17, "QDInternal: Output of Context Retrieval| %s\nContextRetrievalService not enabled, returning empty (requiredContext: [], utteranceContext: [])");
      sub_23F556C18();
      sub_23F366530();
    }

    sub_23F383914();
    sub_23F557094();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 8))(MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8]);
  }
}

uint64_t sub_23F55524C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F3B1998();
  v3 = *(_QWORD *)(v1 + 104);
  v2 = *(_QWORD *)(v1 + 112);
  sub_23F3B201C();
  *(_QWORD *)(v4 + 160) = v0;
  swift_task_dealloc();
  sub_23F383E64(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F5552B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = *(_QWORD *)(v0 + 120);
  sub_23F617BA0();
  sub_23F3668F4();
  sub_23F3663AC(v1, type metadata accessor for QueryDecorationCacheValue);
  swift_task_dealloc();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F366708();
  v2 = sub_23F3B1CF8();
  return v3(v2);
}

uint64_t sub_23F55534C()
{
  uint64_t v0;

  sub_23F557094();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F555390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  v7[12] = a2;
  v7[13] = a3;
  v7[11] = a1;
  sub_23F35D2E8(&qword_256E70F38);
  v7[18] = swift_task_alloc();
  v8 = sub_23F619E98();
  v7[19] = v8;
  v7[20] = *(_QWORD *)(v8 - 8);
  v7[21] = swift_task_alloc();
  v9 = sub_23F61AEB8();
  v7[22] = v9;
  v7[23] = *(_QWORD *)(v9 - 8);
  v7[24] = swift_task_alloc();
  v10 = sub_23F617000();
  v7[25] = v10;
  v7[26] = *(_QWORD *)(v10 - 8);
  v7[27] = swift_task_alloc();
  v11 = sub_23F61AEE8();
  v7[28] = v11;
  v7[29] = *(_QWORD *)(v11 - 8);
  v7[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F555498()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[14];
  v2 = v0[12];
  v3 = *(_QWORD *)(v2 + 80);
  sub_23F556C4C((_QWORD *)(v2 + 56));
  inited = swift_initStaticObject();
  sub_23F556C00(inited);
  if (v1)
  {
    v3 = v0[14];
  }
  else
  {
    sub_23F616FF4();
    sub_23F616FDC();
    sub_23F556E98();
  }
  v0[31] = v3;
  sub_23F61724C();
  sub_23F383E5C();
  sub_23F384B00();
  sub_23F61AEA0();
  swift_retain();
  v5 = (_QWORD *)sub_23F5570CC();
  v0[32] = v5;
  sub_23F5570B4(&qword_256E7A3C8, v6, MEMORY[0x24BE56348]);
  sub_23F5570B4(&qword_256E7A3D0, v7, MEMORY[0x24BE56340]);
  sub_23F55702C(&qword_256E7A3D8, v8, MEMORY[0x24BE56388]);
  sub_23F55702C(&qword_256E7A3E0, v9, MEMORY[0x24BE56380]);
  *v5 = v0;
  v5[1] = sub_23F55560C;
  sub_23F557034(v0[30]);
  return sub_23F556D3C();
}

uint64_t sub_23F55560C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F556FDC();
  sub_23F3B1998();
  v2 = *(_QWORD *)(v1 + 184);
  sub_23F3B201C();
  *(_QWORD *)(v3 + 264) = v0;
  swift_task_dealloc();
  sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F3DDBDC();
  sub_23F362D18();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F555684()
{
  _QWORD *v0;
  os_log_type_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v23;
  uint64_t v24;

  v2 = v0[30];
  v3 = sub_23F61AED0();
  v4 = sub_23F61AEDC();
  sub_23F53A7B4();
  sub_23F389CDC();
  sub_23F3668F4();
  sub_23F40B4F0();
  v5 = sub_23F507D60();
  if (sub_23F52E788(v5))
  {
    v6 = sub_23F366668();
    v24 = sub_23F366668();
    *(_DWORD *)v6 = 136315394;
    sub_23F556C28(48, 0x800000023F639570, &v24);
    v0[9] = v7;
    sub_23F61C790();
    *(_WORD *)(v6 + 12) = 2080;
    v0[7] = v3;
    v0[8] = v4;
    sub_23F389CDC();
    sub_23F3668F4();
    sub_23F35D2E8(&qword_256E7A3E8);
    v8 = sub_23F61C16C();
    sub_23F37AE00(v8, v9, &v24);
    v0[10] = v10;
    sub_23F61C790();
    sub_23F3B5F04();
    sub_23F384A80();
    sub_23F384A80();
    sub_23F3E025C(&dword_23F35A000, v2, v1, "QDInternal: Output of Context Retrieval| %s\nResults as a tuple of (requiredContext: [], utteranceContext: []): %s", (uint8_t *)v6);
    sub_23F507364();
    sub_23F366530();
  }
  v12 = v0[20];
  v11 = v0[21];
  v13 = v0[19];
  sub_23F384A80();
  sub_23F384A80();

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  v14 = v0[29];
  v15 = v0[30];
  v23 = v0[28];
  v16 = v0[18];
  v17 = (_QWORD *)v0[11];
  v18 = sub_23F61AED0();
  v19 = sub_23F61AEDC();
  sub_23F556EE0();
  sub_23F55704C(v16);
  v20 = (uint64_t)v17 + *(int *)(type metadata accessor for QueryDecorationCacheValue(0) + 28);
  sub_23F55704C(v20);
  *v17 = MEMORY[0x24BEE4AF8];
  v17[1] = v18;
  v17[2] = v19;
  sub_23F556A04(v16, v20);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v23);
  sub_23F556F78(v0 + 2);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v0 + 2));
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  swift_task_dealloc();
  sub_23F3666DC();
  v21 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F556CD8(v21);
}

uint64_t sub_23F555920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F3836F0();
  sub_23F55713C();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  sub_23F35EA9C((_QWORD *)(v0 + 16), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  return sub_23F38346C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F555994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23F5559B0()
{
  _QWORD *v0;
  uint64_t v1;

  v0[5] = *(_QWORD *)(v0[4] + 24);
  v0[6] = sub_23F61AEAC();
  v0[7] = v1;
  return sub_23F36664C();
}

uint64_t sub_23F5559F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F3F26E0(v0[6], v0[7]);
  v3 = v2;
  sub_23F3837B0();
  v0[8] = v3;
  v0[9] = v1;
  sub_23F36679C();
  return sub_23F556CCC();
}

uint64_t sub_23F555A6C()
{
  uint64_t (*v0)(void);

  sub_23F61AEC4();
  v0 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F362888(v0);
}

uint64_t sub_23F555A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_23F3B1728();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = sub_23F366578();
  v6 = sub_23F534804();
  v4[10] = v6;
  v4[11] = *(_QWORD *)(v6 - 8);
  v4[12] = sub_23F366578();
  v7 = sub_23F556EE8();
  v4[13] = v7;
  v4[14] = *(_QWORD *)(v7 - 8);
  v4[15] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F555B10(uint64_t a1)
{
  char v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F556C3C(a1, *MEMORY[0x24BE57418]);
  sub_23F618B84();
  sub_23F556BEC();
  if ((v1 & 1) != 0)
  {
    sub_23F556F5C(*(_QWORD *)(v2 + 88));
    *(_QWORD *)(v2 + 128) = swift_getKeyPath();
    sub_23F3B5EFC();
    sub_23F3D9E08();
    v3 = (_QWORD *)sub_23F5570CC();
    *(_QWORD *)(v2 + 136) = v3;
    *v3 = v2;
    v3[1] = sub_23F555CE0;
    sub_23F3843EC();
    return sub_23F552658(v4, v5, v6, v7, v8, v9, v10, v11);
  }
  else
  {
    v13 = *(void **)(v2 + 72);
    sub_23F52E6C0();
    sub_23F619E8C();
    v14 = sub_23F507D60();
    if (sub_23F366874(v14))
    {
      sub_23F366668();
      v18 = sub_23F366668();
      sub_23F556D84(4.8149e-34);
      sub_23F556C28(48, 0x800000023F639530, &v18);
      *(_QWORD *)(v2 + 16) = v15;
      sub_23F435C2C();
      sub_23F426464(&dword_23F35A000, v16, v17, "QDInternal: Output of Context Retrieval| %s\nContextRetrievalService not enabled, returning empty []");
      sub_23F556C18();
      sub_23F366530();
    }

    sub_23F383914();
    sub_23F5570A4();
    sub_23F362CC8();
    sub_23F3666DC();
    return (*(uint64_t (**)(_QWORD))(v2 + 8))(MEMORY[0x24BEE4AF8]);
  }
}

uint64_t sub_23F555CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;

  sub_23F432AC4();
  sub_23F557108();
  sub_23F3B2010(v4);
  *(_QWORD *)(v3 + 144) = v0;
  swift_task_dealloc();
  v5 = *(_QWORD *)(v3 + 88);
  if (v0)
  {
    sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_23F3668FC();
    sub_23F36679C();
    return sub_23F556D54();
  }
  else
  {
    sub_23F3668FC();
    sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    if (v2)
      v7 = v2;
    else
      v7 = MEMORY[0x24BEE4AF8];
    swift_task_dealloc();
    sub_23F3666DC();
    sub_23F3666C4();
    return sub_23F556D6C(v7, *(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_23F555D84()
{
  uint64_t v0;

  sub_23F5570A4();
  sub_23F362CC8();
  sub_23F3666DC();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F555DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  v4 = sub_23F619E98();
  v3[12] = v4;
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F555E1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t inited;

  v1 = v0[11];
  sub_23F556C4C((_QWORD *)(v0[10] + 56));
  inited = swift_initStaticObject();
  sub_23F556C00(inited);
  v0[15] = *(_QWORD *)(v1 + 24);
  return sub_23F556CCC();
}

uint64_t sub_23F555E80()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 128) = sub_23F3F3194();
  *(_QWORD *)(v0 + 136) = 0;
  sub_23F36679C();
  return sub_23F556CC0();
}

uint64_t sub_23F555ED0()
{
  uint64_t v0;
  os_log_type_t v1;
  NSObject *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v18;

  v2 = *(NSObject **)(v0 + 112);
  sub_23F6190E8();
  swift_bridgeObjectRetain_n();
  v3 = v2;
  sub_23F619E8C();
  v4 = sub_23F507D60();
  if (sub_23F3B1E8C(v4))
  {
    v5 = sub_23F366668();
    v18 = sub_23F366668();
    *(_DWORD *)v5 = 136315394;
    sub_23F556C28(48, 0x800000023F639530, &v18);
    *(_QWORD *)(v0 + 56) = v6;
    sub_23F61C790();
    *(_WORD *)(v5 + 12) = 2080;
    v7 = sub_23F618D28();
    v8 = sub_23F384B00();
    v9 = MEMORY[0x24266F8F8](v8, v7);
    v11 = v10;
    sub_23F384364();
    sub_23F37AE00(v9, v11, &v18);
    *(_QWORD *)(v0 + 64) = v12;
    sub_23F61C790();
    sub_23F38432C();
    sub_23F384A80();
    sub_23F3E025C(&dword_23F35A000, v2, v1, "QDInternal: Output of Tool Context Retrieval| %s\n%s", (uint8_t *)v5);
    sub_23F507364();
    sub_23F366530();
  }
  v14 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 96);
  sub_23F384A80();

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  **(_QWORD **)(v0 + 72) = *(_QWORD *)(v0 + 128);
  sub_23F556E38();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F3666C4();
  v16 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F556CD8(v16);
}

uint64_t sub_23F5560C4()
{
  uint64_t v0;

  sub_23F556E38();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F3666C4();
  return sub_23F496B4C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F556110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[13] = a5;
  v6[14] = v5;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  v7 = sub_23F3B1728();
  v6[15] = v7;
  v6[16] = *(_QWORD *)(v7 - 8);
  v6[17] = sub_23F366654();
  v6[18] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E70F38);
  v6[19] = sub_23F366654();
  v6[20] = swift_task_alloc();
  v8 = sub_23F556EE0();
  v6[21] = v8;
  v6[22] = *(_QWORD *)(v8 - 8);
  v6[23] = sub_23F366578();
  v9 = sub_23F556EE8();
  v6[24] = v9;
  v6[25] = *(_QWORD *)(v9 - 8);
  v6[26] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5561BC()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39[9];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23F3B15E8();
  v41 = v3;
  v42 = v4;
  v40 = v0;
  v6 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 192);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x24BE57448], v7);
  v8 = sub_23F618B84();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  if ((v8 & 1) == 0)
  {
    v25 = *(NSObject **)(v0 + 136);
    sub_23F52E6C0();
    sub_23F619E8C();
    v26 = sub_23F507D60();
    v27 = sub_23F3B1E8C(v26);
    v6 = *(_QWORD *)(v0 + 136);
    if (v27)
    {
      v28 = (uint8_t *)sub_23F366668();
      sub_23F366668();
      sub_23F556FF0();
      sub_23F5570BC(4.8149e-34);
      sub_23F556C28(98, 0x800000023F6394C0, v39);
      *(_QWORD *)(v0 + 56) = v29;
      sub_23F435C2C();
      sub_23F38485C(&dword_23F35A000, v25, v1, "QDInternal: Output of Query Decoration Ranking | %s\nQueryDecorationRankerService not enabled, construct an instance of QueryDecorationOutput to pass through", v28);
      sub_23F556C18();
      sub_23F366530();
    }

    v30 = sub_23F3B1CF8();
    v31(v30);
    sub_23F556F64();
    v32 = objc_allocWithZone((Class)sub_23F618FA4());
    sub_23F3668F4();
    sub_23F383E5C();
    sub_23F389CDC();
    sub_23F556C68();
    sub_23F5570DC();
    goto LABEL_13;
  }
  v9 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD **)(v0 + 104);
  v11 = v10[10];
  v12 = v10[11];
  sub_23F35EA9C(v10 + 7, v11);
  type metadata accessor for QueryDecorationSignpost();
  inited = swift_initStaticObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(inited, v11, v12);
  if (!v9 || (v14 = *(_QWORD *)(v0 + 80)) == 0 || !*(_QWORD *)(v0 + 88))
  {
LABEL_7:
    v17 = *(NSObject **)(v0 + 144);
    sub_23F52E6C0();
    sub_23F619E8C();
    v18 = sub_23F507D60();
    v19 = sub_23F52E788(v18);
    v20 = *(_QWORD *)(v0 + 144);
    v22 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 128);
    if (v19)
    {
      v23 = (uint8_t *)sub_23F366668();
      v39[0] = sub_23F366668();
      *(_DWORD *)v23 = 136315138;
      sub_23F556C28(98, 0x800000023F6394C0, v39);
      *(_QWORD *)(v0 + 64) = v24;
      sub_23F61C790();
      sub_23F38485C(&dword_23F35A000, v17, (os_log_type_t)v2, "%s One of the params is empty. Construct an instance of QueryDecorationOutput to pass through", v23);
      swift_arrayDestroy();
      sub_23F366530();
    }

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    sub_23F556F64();
    v33 = objc_allocWithZone((Class)sub_23F618FA4());
    sub_23F3668F4();
    sub_23F383E5C();
    sub_23F389CDC();
    sub_23F556C68();
    sub_23F5570DC();
    v34 = *(_QWORD *)(v0 + 40);
    v35 = *(_QWORD *)(v0 + 48);
    sub_23F35EA9C((_QWORD *)(v0 + 16), v34);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
LABEL_13:
    swift_task_dealloc();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
  }
  v15 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 160);
  v16 = *(_QWORD *)(v0 + 168);
  sub_23F5568B8(*(_QWORD *)(v0 + 96), v2);
  if (sub_23F36195C(v2, 1, v16) == 1)
  {
    sub_23F3625D8(*(_QWORD *)(v0 + 160), &qword_256E70F38);
    goto LABEL_7;
  }
  v37 = *(_QWORD *)(v0 + 88);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 32))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
  v38 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v38;
  *v38 = v0;
  v38[1] = sub_23F5565E0;
  return sub_23F53BB4C(v15, v14, v37, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 104));
}

uint64_t sub_23F5565E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_23F557178();
  sub_23F3B2010(v3);
  *(_QWORD *)(v2 + 224) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 232) = v0;
  sub_23F36679C();
  return sub_23F556CC0();
}

uint64_t sub_23F556638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F556FDC();
  v1 = *(_QWORD *)(v0 + 176);
  sub_23F618F08();
  sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F556F78((_QWORD *)(v0 + 16));
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  v2 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  return sub_23F3E0218(v2, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5566CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  uint64_t (*v13)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  sub_23F3836F0();
  v22 = v12[17];
  (*(void (**)(_QWORD, _QWORD))(v12[22] + 8))(v12[23], v12[21]);
  sub_23F556BAC(v12 + 2);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v12 + 2));
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  swift_task_dealloc();
  sub_23F3843EC();
  return v13(v13, v14, v15, v16, v17, v18, v19, v20, v22, a10, a11, a12);
}

void sub_23F556758()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 48);
  swift_bridgeObjectRelease();
  v1 = sub_23F61C9F4();
  sub_23F362B6C(v1);
  sub_23F362928();
}

uint64_t sub_23F5567B8()
{
  sub_23F556758();
  return swift_deallocClassInstance();
}

uint64_t sub_23F5567DC()
{
  return type metadata accessor for QueryDecorationServiceCaller();
}

uint64_t type metadata accessor for QueryDecorationServiceCaller()
{
  uint64_t result;

  result = qword_256E7A258;
  if (!qword_256E7A258)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F55681C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61C9F4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23F5568B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F556900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = swift_task_alloc();
  v7 = (_QWORD *)sub_23F54DBCC(v6);
  *v7 = v2;
  v7[1] = sub_23F362820;
  return sub_23F555DB8(a1, v5, v4);
}

uint64_t sub_23F556960()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F432AC4();
  sub_23F556EF0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F54DC50(v1);
  return sub_23F555390(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_23F5569B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F557074(v1);
  return sub_23F555994(v2, v3, v4);
}

uint64_t sub_23F556A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F556A4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F432AC4();
  sub_23F556EF0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F54DC50(v1);
  return sub_23F553EC8(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_23F556AA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = swift_task_alloc();
  v8 = (_QWORD *)sub_23F54DBCC(v7);
  *v8 = v2;
  v8[1] = sub_23F362820;
  return sub_23F5534D8(a1, v4, v5, v6);
}

uint64_t sub_23F556B08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F432AC4();
  sub_23F556EF0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F54DC50(v1);
  return sub_23F554904(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_23F556B5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F557074(v1);
  return sub_23F554EA4(v2, v3, v4);
}

uint64_t sub_23F556BAC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23F35EA9C(a1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v1);
}

uint64_t sub_23F556BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_23F5302F8(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_23F556BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F556C00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 8))(a1, v1, v2);
}

uint64_t sub_23F556C18()
{
  return swift_arrayDestroy();
}

void sub_23F556C28(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_23F37AE00(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, a3);
}

uint64_t sub_23F556C30()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F556C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, a2, v2);
}

uint64_t sub_23F556C4C(_QWORD *a1)
{
  uint64_t v1;

  sub_23F35EA9C(a1, v1);
  return type metadata accessor for QueryDecorationSignpost();
}

uint64_t sub_23F556C68()
{
  return sub_23F618F8C();
}

uint64_t sub_23F556C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v17 = (_QWORD *)(v12 + *(int *)(v15 + 20));
  *v17 = v11;
  v17[1] = a11;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v12 + *(int *)(v15 + 24), v13, v14);
}

uint64_t sub_23F556CC0()
{
  return swift_task_switch();
}

uint64_t sub_23F556CCC()
{
  return swift_task_switch();
}

uint64_t sub_23F556CD8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F556CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v16 = (_QWORD *)(v11 + *(int *)(v14 + 20));
  *v16 = v10;
  v16[1] = a10;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v11 + *(int *)(v14 + 24), v12, v13);
}

uint64_t sub_23F556D10()
{
  return swift_task_dealloc();
}

uint64_t sub_23F556D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return sub_23F619E98();
}

uint64_t sub_23F556D34()
{
  return type metadata accessor for QueryDecorationCacheKey.Input(0);
}

uint64_t sub_23F556D3C()
{
  return sub_23F617234();
}

uint64_t sub_23F556D54()
{
  return swift_task_switch();
}

uint64_t sub_23F556D6C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_23F556D84(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t sub_23F556D94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 216) = v0;
  return swift_task_dealloc();
}

uint64_t sub_23F556DB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 224) = v0;
  return swift_task_dealloc();
}

uint64_t sub_23F556DD4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 208) = v0;
  return swift_task_dealloc();
}

uint64_t sub_23F556DF4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F556E14()
{
  return swift_release();
}

uint64_t sub_23F556E1C()
{
  return swift_release();
}

uint64_t sub_23F556E38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  sub_23F35EA9C(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
}

uint64_t sub_23F556E64()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F556E80()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F556E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F556EB0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F556EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v0 + 12) = 2080;
  return sub_23F5568B8(v1, v2);
}

uint64_t sub_23F556EE0()
{
  return sub_23F619064();
}

uint64_t sub_23F556EE8()
{
  return sub_23F618B90();
}

uint64_t sub_23F556F04()
{
  return swift_release();
}

uint64_t sub_23F556F1C()
{
  return swift_storeEnumTagMultiPayload();
}

_QWORD *sub_23F556F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v5 = (_QWORD *)(v1 + *(int *)(v3 + 28));
  *v5 = v0;
  v5[1] = v2;
  return sub_23F35EA9C((_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 72));
}

uint64_t sub_23F556F5C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 104))();
}

uint64_t sub_23F556F64()
{
  uint64_t v0;

  return sub_23F5568B8(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 152));
}

uint64_t sub_23F556F78(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23F35EA9C(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_23F556F9C()
{
  return swift_storeEnumTagMultiPayload();
}

_QWORD *sub_23F556FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(v4 + 28));
  *v5 = v1;
  v5[1] = v3;
  return sub_23F35EA9C((_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 72));
}

uint64_t sub_23F556FFC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F55700C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  *v1 = *v3;
  *(_QWORD *)(a1 + 192) = v2;
  return swift_task_dealloc();
}

uint64_t sub_23F55701C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  *v1 = *v3;
  *(_QWORD *)(a1 + 176) = v2;
  return swift_task_dealloc();
}

void sub_23F55702C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_23F3612C0(a1, v3, a3);
}

uint64_t sub_23F557034@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_23F55704C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(a1, 1, 1, v1);
}

uint64_t sub_23F55705C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return a11;
}

uint64_t sub_23F557074(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F55708C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_23F557094()
{
  return swift_task_dealloc();
}

uint64_t sub_23F5570A4()
{
  return swift_task_dealloc();
}

void sub_23F5570B4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_23F3612C0(a1, v3, a3);
}

void sub_23F5570BC(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t sub_23F5570CC()
{
  return swift_task_alloc();
}

uint64_t sub_23F5570D4()
{
  return sub_23F6190E8();
}

uint64_t sub_23F5570DC()
{
  return sub_23F618F08();
}

void sub_23F5570E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23F37AE00(a1, a2, (uint64_t *)va);
}

uint64_t sub_23F5570F4()
{
  return swift_task_alloc();
}

uint64_t sub_23F5570FC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F5568B8(v0, v1);
}

void sub_23F557108()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void sub_23F55711C(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t sub_23F557130()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_23F557150()
{
  return sub_23F61C16C();
}

_QWORD *sub_23F55715C(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  *result = v2;
  result[1] = v1;
  return result;
}

uint64_t sub_23F557170()
{
  return sub_23F61C790();
}

void sub_23F557178()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23F55718C()
{
  uint64_t v0;

  return v0;
}

uint64_t QueryDecorationSignpost.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t QueryDecorationSignpost.analytics.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[5];
  v3 = v1[6];
  v4 = v1[7];
  v5 = v1[8];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_23F5571C0(v2, v3);
}

uint64_t sub_23F5571C0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_23F617BA0();
    return sub_23F617BA0();
  }
  return result;
}

uint64_t QueryDecorationSignpost.deinit()
{
  uint64_t v0;

  sub_23F558E30();
  return v0;
}

uint64_t QueryDecorationSignpost.__deallocating_deinit()
{
  sub_23F558E30();
  return swift_deallocClassInstance();
}

uint64_t static QueryDecorationSignpost.protocolResolverReplaceProtocolWithDirectExecuteTool.getter()
{
  type metadata accessor for QueryDecorationSignpost();
  return swift_initStaticObject();
}

uint64_t type metadata accessor for QueryDecorationSignpost()
{
  return objc_opt_self();
}

uint64_t static QueryDecorationSignpost.protocolResolverResolveProtocolsToTools.getter()
{
  type metadata accessor for QueryDecorationSignpost();
  return swift_initStaticObject();
}

uint64_t static QueryDecorationSignpost.queryDecorationPostProcessingRetrieveDynamicEnumerationEntities.getter()
{
  type metadata accessor for QueryDecorationSignpost();
  return swift_initStaticObject();
}

uint64_t static QueryDecorationSignpost.queryDecoratorCallConfigurableToolRetrieval.getter()
{
  type metadata accessor for QueryDecorationSignpost();
  return swift_initStaticObject();
}

uint64_t static QueryDecorationSignpost.queryDecoratorCallContextRetriever.getter()
{
  type metadata accessor for QueryDecorationSignpost();
  return swift_initStaticObject();
}

uint64_t static QueryDecorationSignpost.queryDecoratorCallQueryDecorationRanker.getter()
{
  type metadata accessor for QueryDecorationSignpost();
  return swift_initStaticObject();
}

uint64_t static QueryDecorationSignpost.queryDecoratorCallSpanMatcher.getter()
{
  type metadata accessor for QueryDecorationSignpost();
  return swift_initStaticObject();
}

uint64_t static QueryDecorationSignpost.queryDecoratorCallToolRetrieval.getter()
{
  type metadata accessor for QueryDecorationSignpost();
  return swift_initStaticObject();
}

uint64_t static QueryDecorationSignpost.queryDecoratorGetContextForToolRetrieval.getter()
{
  type metadata accessor for QueryDecorationSignpost();
  return swift_initStaticObject();
}

uint64_t static QueryDecorationSignpost.queryDecoratorInit.getter()
{
  type metadata accessor for QueryDecorationSignpost();
  return swift_initStaticObject();
}

uint64_t static QueryDecorationSignpost.queryDecoratorQueryDecorationCollection.getter()
{
  type metadata accessor for QueryDecorationSignpost();
  return swift_initStaticObject();
}

uint64_t sub_23F55737C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t Decoration;
  uint64_t result;

  Decoration = type metadata accessor for QueryDecorationSignposter.SignpostStateImpl(0);
  sub_23F3668A0();
  swift_retain();
  swift_retain();
  result = sub_23F5573F0(v2, a1);
  a2[3] = Decoration;
  a2[4] = (uint64_t)&off_250FDC278;
  *a2 = result;
  return result;
}

uint64_t sub_23F5573F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  uint64_t result;
  const char *v19;
  uint8_t *v20;
  os_signpost_id_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  const char *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v3 = v2;
  v6 = sub_23F61C9DC();
  v7 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  v29 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F619E20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v23 - v15;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  v26 = *(const char **)(a2 + 16);
  v27 = *(unsigned __int8 *)(a2 + 32);
  swift_retain();
  swift_retain();
  sub_23F619E38();
  sub_23F619DFC();
  v17 = sub_23F619E38();
  v25 = sub_23F61C694();
  result = sub_23F61C718();
  if ((result & 1) == 0)
    goto LABEL_10;
  v23 = v10;
  v24 = v9;
  if ((v27 & 1) == 0)
  {
    v19 = v26;
    if (v26)
    {
LABEL_9:
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      v21 = sub_23F619E08();
      _os_signpost_emit_with_name_impl(&dword_23F35A000, v17, (os_signpost_type_t)v25, v21, v19, "", v20, 2u);
      MEMORY[0x242670B70](v20, -1, -1);
      v10 = v23;
      v9 = v24;
LABEL_10:

      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
      sub_23F619E74();
      swift_allocObject();
      v22 = sub_23F619E68();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      *(_QWORD *)(v3 + 32) = v22;
      sub_23F61C9C4();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v3+ OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime25QueryDecorationSignposterP33_F96CF7C2E9F3A9F34A91CA78F1C7733217SignpostStateImpl_start, v9, v28);
      *(_BYTE *)(v3
               + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime25QueryDecorationSignposterP33_F96CF7C2E9F3A9F34A91CA78F1C7733217SignpostStateImpl_ended) = 0;
      return v3;
    }
    __break(1u);
  }
  if ((unint64_t)v26 >> 32)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v26 >> 11 != 27)
  {
    if (v26 >> 16 <= 0x10)
    {
      v19 = &v30;
      goto LABEL_9;
    }
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_23F557670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  const char *v16;
  char v17;
  NSObject *v18;
  const char *v19;
  os_signpost_type_t v20;
  const char *v21;
  uint8_t *v22;
  os_signpost_id_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  float v33;
  id v34;
  double v35;
  void *v36;
  _BYTE v37[4];
  int v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v1 = v0;
  v2 = sub_23F61C9DC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v37[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_23F619E50();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_23F619E20();
  result = MEMORY[0x24BDAC7A8](v10);
  v14 = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(_BYTE *)(v1
                 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime25QueryDecorationSignposterP33_F96CF7C2E9F3A9F34A91CA78F1C7733217SignpostStateImpl_ended) & 1) != 0)
    return result;
  v43 = v12;
  v44 = result;
  v40 = v5;
  v41 = v3;
  v42 = v2;
  v45 = OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime25QueryDecorationSignposterP33_F96CF7C2E9F3A9F34A91CA78F1C7733217SignpostStateImpl_ended;
  v46 = v1;
  v15 = *(_QWORD *)(v1 + 24);
  v39 = *(_QWORD *)(v1 + 16);
  v16 = *(const char **)(v15 + 16);
  v17 = *(_BYTE *)(v15 + 32);
  v18 = sub_23F619E38();
  sub_23F619E5C();
  v38 = sub_23F61C688();
  result = sub_23F61C718();
  if ((result & 1) != 0)
  {
    if ((v17 & 1) != 0)
    {
      if (!((unint64_t)v16 >> 32))
      {
        if (v16 >> 11 == 27)
        {
LABEL_21:
          __break(1u);
          return result;
        }
        if (v16 >> 16 <= 0x10)
        {
          v19 = &v47;
          goto LABEL_10;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    else
    {
      if (v16)
      {
        v19 = v16;
LABEL_10:
        v20 = v38;
        swift_retain();
        sub_23F619E80();
        swift_release();
        if ((*(unsigned int (**)(_BYTE *, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x24BEE7810])
        {
          v21 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
          v21 = "";
        }
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        v23 = sub_23F619E08();
        _os_signpost_emit_with_name_impl(&dword_23F35A000, v18, v20, v23, v19, v21, v22, 2u);
        MEMORY[0x242670B70](v22, -1, -1);
        goto LABEL_14;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
LABEL_14:

  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v43 + 8))(v14, v44);
  v24 = *(_QWORD *)(v15 + 48);
  v25 = v46;
  if (v24)
  {
    v27 = *(_QWORD *)(v15 + 56);
    v26 = *(_QWORD *)(v15 + 64);
    v28 = *(_QWORD *)(v15 + 40);
    type metadata accessor for QueryDecorationAnalytics();
    sub_23F35D2E8(&qword_256E7AA98);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
    *(_QWORD *)(inited + 32) = v27;
    *(_QWORD *)(inited + 40) = v26;
    sub_23F5571C0(v28, v24);
    sub_23F617BA0();
    v30 = v40;
    sub_23F61C9C4();
    sub_23F61C994();
    (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v30, v42);
    v31 = sub_23F61CDA8();
    v33 = (double)v31 * 1000.0 + (double)v32 * 1.0e-15;
    v34 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
    *(float *)&v35 = v33;
    *(_QWORD *)(inited + 48) = objc_msgSend(v34, sel_initWithFloat_, v35);
    sub_23F5351A8();
    v36 = (void *)sub_23F61BFEC();
    static QueryDecorationAnalytics.sendEventForProduction(eventName:prefix:eventPayload:)(v28, v24, 0, 0, v36);
    swift_bridgeObjectRelease();
    result = sub_23F4EF330(v28, v24);
  }
  *(_BYTE *)(v25 + v45) = 1;
  return result;
}

uint64_t sub_23F557A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  v1 = v0
     + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime25QueryDecorationSignposterP33_F96CF7C2E9F3A9F34A91CA78F1C7733217SignpostStateImpl_start;
  v2 = sub_23F61C9DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_23F557AA4()
{
  return sub_23F5580BC((void (*)(void))sub_23F557A48);
}

uint64_t sub_23F557AB0()
{
  return sub_23F557670();
}

uint64_t sub_23F557AD0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F619E44();
  sub_23F362B6C(v0);
  v1 = sub_23F558E1C();
  sub_23F362B6C(v1);
  sub_23F3F9B6C();
  return swift_deallocClassInstance();
}

uint64_t sub_23F557B14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F6190E8();
  sub_23F619E2C();
  sub_23F61C9E8();
  return v0;
}

void sub_23F557BA0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23F55737C(a1, a2);
  sub_23F362928();
}

void sub_23F557BBC(uint64_t *a1@<X8>)
{
  uint64_t DecorationNull;
  uint64_t v3;

  DecorationNull = type metadata accessor for QueryDecorationNullSignposter.QueryDecorationNullActiveSignpost();
  v3 = swift_allocObject();
  a1[3] = DecorationNull;
  a1[4] = (uint64_t)&off_250FDC258;
  *a1 = v3;
  sub_23F362928();
}

void sub_23F557BFC(uint64_t *a1@<X8>)
{
  sub_23F557BBC(a1);
}

uint64_t sub_23F557C10()
{
  uint64_t v0;

  v0 = sub_23F617BA0();
  return sub_23F557C68(v0);
}

uint64_t sub_23F557C38()
{
  sub_23F3B1450();
  return sub_23F617BA0();
}

uint64_t sub_23F557C68(uint64_t a1)
{
  uint64_t v1;

  sub_23F3B1450();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23F557CA8())()
{
  sub_23F3B1450();
  return j__swift_endAccess_0;
}

uint64_t QueryDecorationCapturingSignposter.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  QueryDecorationCapturingSignposter.init()();
  return v0;
}

uint64_t QueryDecorationCapturingSignposter.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  sub_23F61C9E8();
  return v0;
}

uint64_t sub_23F557D60(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DecorationCapturing;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v3 = v2;
  v5 = sub_23F558E10();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationCapturing = type metadata accessor for QueryDecorationCapturingSignposter.CapturingSignpostStateImpl(0);
  sub_23F3668A0();
  swift_retain();
  swift_retain();
  v9 = sub_23F557EBC(v3, a1);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = v9
      + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime34QueryDecorationCapturingSignposterP33_F96CF7C2E9F3A9F34A91CA78F1C7733226CapturingSignpostStateImpl_instanceId;
  v12 = &v7[*(int *)(v5 + 24)];
  v13 = sub_23F3846E4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v11, v13);
  swift_retain();
  sub_23F61C9C4();
  *v7 = 0;
  *((_QWORD *)v7 + 1) = v10;
  sub_23F5580FC();
  result = sub_23F558144((uint64_t)v7);
  v1[3] = DecorationCapturing;
  v1[4] = (uint64_t)&off_250FDC288;
  *v1 = v9;
  return result;
}

uint64_t type metadata accessor for QueryDecorationCapturingSignposter.Event(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7AA58);
}

uint64_t type metadata accessor for QueryDecorationCapturingSignposter.CapturingSignpostStateImpl(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7A960);
}

uint64_t sub_23F557EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = sub_23F617000();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2
            + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime34QueryDecorationCapturingSignposterP33_F96CF7C2E9F3A9F34A91CA78F1C7733226CapturingSignpostStateImpl_owner) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  sub_23F616FF4();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v2+ OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime34QueryDecorationCapturingSignposterP33_F96CF7C2E9F3A9F34A91CA78F1C7733226CapturingSignpostStateImpl_instanceId, v8, v5);
  return v2;
}

uint64_t sub_23F557F60()
{
  uint64_t v0;
  uint64_t DecorationCapturing;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  DecorationCapturing = type metadata accessor for QueryDecorationCapturingSignposter.Event(0);
  MEMORY[0x24BDAC7A8](DecorationCapturing);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = v0
     + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime34QueryDecorationCapturingSignposterP33_F96CF7C2E9F3A9F34A91CA78F1C7733226CapturingSignpostStateImpl_instanceId;
  swift_retain();
  sub_23F61C9C4();
  *v3 = 1;
  *((_QWORD *)v3 + 1) = v4;
  v6 = &v3[*(int *)(DecorationCapturing + 24)];
  v7 = sub_23F617000();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, v5, v7);
  sub_23F5580FC();
  return sub_23F558144((uint64_t)v3);
}

uint64_t sub_23F558054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0
     + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime34QueryDecorationCapturingSignposterP33_F96CF7C2E9F3A9F34A91CA78F1C7733226CapturingSignpostStateImpl_instanceId;
  v2 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t sub_23F5580B0()
{
  return sub_23F5580BC((void (*)(void))sub_23F558054);
}

uint64_t sub_23F5580BC(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_23F5580DC()
{
  return sub_23F557F60();
}

id sub_23F5580FC()
{
  return sub_23F5469E4((void (*)(id))sub_23F558DB4);
}

uint64_t sub_23F558144(uint64_t a1)
{
  uint64_t DecorationCapturing;

  DecorationCapturing = type metadata accessor for QueryDecorationCapturingSignposter.Event(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(DecorationCapturing - 8) + 8))(a1, DecorationCapturing);
  return a1;
}

uint64_t sub_23F558180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t DecorationCapturing;

  swift_beginAccess();
  sub_23F376A70();
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  sub_23F376C08(v4);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v5 + 16) = v4 + 1;
  DecorationCapturing = type metadata accessor for QueryDecorationCapturingSignposter.Event(0);
  sub_23F558DCC(a2, v5+ ((*(unsigned __int8 *)(*(_QWORD *)(DecorationCapturing - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(DecorationCapturing - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(DecorationCapturing - 8) + 72) * v4);
  return swift_endAccess();
}

BOOL static QueryDecorationCapturingSignposter.EventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void QueryDecorationCapturingSignposter.EventType.hash(into:)()
{
  sub_23F61CD3C();
  sub_23F362928();
}

uint64_t QueryDecorationCapturingSignposter.EventType.hashValue.getter()
{
  sub_23F61CD30();
  sub_23F61CD3C();
  return sub_23F61CD60();
}

void QueryDecorationCapturingSignposter.Event.eventType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t QueryDecorationCapturingSignposter.Event.signpost.getter()
{
  return swift_retain();
}

uint64_t QueryDecorationCapturingSignposter.Event.instanceId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F558E10();
  sub_23F3846E4();
  v0 = sub_23F3F9C80();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

uint64_t QueryDecorationCapturingSignposter.Event.timestamp.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F558E10();
  sub_23F558E28();
  v0 = sub_23F3F9C80();
  return sub_23F3F9C0C(v0, v1, v2, v3);
}

uint64_t QueryDecorationCapturingSignposter.deinit()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();

  v1 = sub_23F558E1C();
  sub_23F362B6C(v1);
  return v0;
}

uint64_t QueryDecorationCapturingSignposter.__deallocating_deinit()
{
  QueryDecorationCapturingSignposter.deinit();
  sub_23F3F9B6C();
  return swift_deallocClassInstance();
}

unint64_t sub_23F558374()
{
  unint64_t result;

  result = qword_256E7A480;
  if (!qword_256E7A480)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for QueryDecorationCapturingSignposter.EventType, &type metadata for QueryDecorationCapturingSignposter.EventType);
    atomic_store(result, (unint64_t *)&qword_256E7A480);
  }
  return result;
}

uint64_t sub_23F5583B0(uint64_t a1)
{
  return sub_23F557D60(a1);
}

void sub_23F5583D0(uint64_t *a1@<X8>)
{
  *a1 = sub_23F557C38();
  sub_23F362928();
}

uint64_t dispatch thunk of QueryDecorationSignposting.begin(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of QueryDecorationSignpostTracking.end()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for QueryDecorationSignpost()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for QueryDecorationSignpost.AnalaticsValues()
{
  return &type metadata for QueryDecorationSignpost.AnalaticsValues;
}

uint64_t sub_23F558424()
{
  return type metadata accessor for QueryDecorationSignposter(0);
}

uint64_t type metadata accessor for QueryDecorationSignposter(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7A570);
}

uint64_t sub_23F558440()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F619E44();
  if (v1 <= 0x3F)
  {
    result = sub_23F61C9F4();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_23F5584C8()
{
  return type metadata accessor for QueryDecorationSignposter.SignpostStateImpl(0);
}

uint64_t type metadata accessor for QueryDecorationSignposter.SignpostStateImpl(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7A640);
}

uint64_t sub_23F5584E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61C9DC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for QueryDecorationNullSignposter()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for QueryDecorationNullSignposter.QueryDecorationNullActiveSignpost()
{
  return objc_opt_self();
}

uint64_t sub_23F5585AC()
{
  return type metadata accessor for QueryDecorationCapturingSignposter(0);
}

uint64_t type metadata accessor for QueryDecorationCapturingSignposter(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7A870);
}

uint64_t sub_23F5585C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61C9F4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for QueryDecorationCapturingSignposter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of QueryDecorationCapturingSignposter.events.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of QueryDecorationCapturingSignposter.events.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of QueryDecorationCapturingSignposter.events.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of QueryDecorationCapturingSignposter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of QueryDecorationCapturingSignposter.begin(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_23F558694()
{
  return type metadata accessor for QueryDecorationCapturingSignposter.CapturingSignpostStateImpl(0);
}

uint64_t sub_23F55869C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F617000();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for QueryDecorationCapturingSignposter.EventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F558764 + 4 * byte_23F62CBA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F558798 + 4 * byte_23F62CBA0[v4]))();
}

uint64_t sub_23F558798(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5587A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5587A8);
  return result;
}

uint64_t sub_23F5587B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5587BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F5587C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5587C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for QueryDecorationCapturingSignposter.EventType()
{
  return &type metadata for QueryDecorationCapturingSignposter.EventType;
}

uint64_t *initializeBufferWithCopyOfBuffer for QueryDecorationCapturingSignposter.Event(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23F617000();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
    v12 = *(int *)(a3 + 28);
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23F61C9DC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return v4;
}

uint64_t destroy for QueryDecorationCapturingSignposter.Event(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = sub_23F61C9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for QueryDecorationCapturingSignposter.Event(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23F617000();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23F61C9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for QueryDecorationCapturingSignposter.Event(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23F61C9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for QueryDecorationCapturingSignposter.Event(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23F61C9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for QueryDecorationCapturingSignposter.Event(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23F617000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23F61C9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryDecorationCapturingSignposter.Event()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F558BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F3846E4();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 24);
    }
    else
    {
      v9 = sub_23F558E28();
      v10 = *(int *)(a3 + 28);
    }
    return sub_23F36195C(a1 + v10, a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for QueryDecorationCapturingSignposter.Event()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F558C8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23F3846E4();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 24);
    }
    else
    {
      v9 = sub_23F558E28();
      v10 = *(int *)(a4 + 28);
    }
    return sub_23F36196C(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_23F558D18()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F617000();
  if (v1 <= 0x3F)
  {
    result = sub_23F61C9DC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23F558DB4()
{
  uint64_t v0;

  return sub_23F558180(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23F558DCC(uint64_t a1, uint64_t a2)
{
  uint64_t DecorationCapturing;

  DecorationCapturing = type metadata accessor for QueryDecorationCapturingSignposter.Event(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationCapturing - 8) + 16))(a2, a1, DecorationCapturing);
  return a2;
}

uint64_t sub_23F558E10()
{
  return type metadata accessor for QueryDecorationCapturingSignposter.Event(0);
}

uint64_t sub_23F558E1C()
{
  return sub_23F61C9F4();
}

uint64_t sub_23F558E28()
{
  return sub_23F61C9DC();
}

uint64_t sub_23F558E30()
{
  uint64_t v0;

  return sub_23F4EF330(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_23F558E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_23F3B1728();
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  MEMORY[0x24BDAC7A8](v9);
  sub_23F362AAC();
  v12 = v10 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v37 - v14;
  v16 = sub_23F35D2E8(&qword_256E7AB58);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3D9CCC();
  v41 = v4;
  sub_23F617C3C();
  sub_23F362CDC();
  sub_23F617C78();
  sub_23F617C84();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v0, v16);
  if ((v42 & 1) != 0)
  {
    sub_23F362CDC();
    v18 = sub_23F55A810(v2, v8, v6, v4);
    swift_bridgeObjectRelease();
    sub_23F6190E8();
    swift_bridgeObjectRetain_n();
    v19 = sub_23F619E8C();
    v20 = sub_23F61C61C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = sub_23F366668();
      v41 = sub_23F366668();
      *(_DWORD *)v21 = 136315650;
      sub_23F362CDC();
      sub_23F55AE20();
      sub_23F55ADC4(v22);
      sub_23F55AE40();
      *(_WORD *)(v21 + 12) = 2080;
      v40 = (uint64_t)v18;
      v23 = sub_23F61C16C();
      sub_23F482C90(v23, v24);
      sub_23F55ADC4(v25);
      sub_23F362D18();
      *(_WORD *)(v21 + 22) = 2080;
      v40 = v4;
      v26 = sub_23F61C16C();
      sub_23F482C90(v26, v27);
      v40 = v28;
      sub_23F61C790();
      sub_23F55AD0C();
      sub_23F362D08();
      _os_log_impl(&dword_23F35A000, v19, v20, "QueryDecorationFactor %s was returned as %s. Default is %s", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      sub_23F366530();
    }

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v12, v39);
  }
  else
  {
    v29 = v41;
    sub_23F6190E8();
    sub_23F55ADDC();
    v30 = sub_23F619E8C();
    v31 = sub_23F61C61C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = sub_23F366668();
      v41 = sub_23F366668();
      *(_DWORD *)v32 = 136315394;
      sub_23F362CDC();
      sub_23F55AE20();
      v40 = v33;
      sub_23F61C790();
      sub_23F55AE40();
      *(_WORD *)(v32 + 12) = 2080;
      v40 = v29;
      v34 = sub_23F61C16C();
      sub_23F482C90(v34, v35);
      v40 = v36;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F35A000, v30, v31, "QueryDecorationFactor %s was set via UserDefaults to %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F55AD0C();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v39);
  }
  sub_23F362948();
}

void sub_23F559230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  _QWORD *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  void (*v81)(uint64_t, uint64_t, uint64_t);
  _QWORD *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  uint64_t v94;
  char v95;
  unint64_t v96;
  void (*v97)(uint64_t, unint64_t, uint64_t);
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char v107;
  void (*v108)(uint64_t, uint64_t);
  uint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  BOOL v134;
  char v135;
  unint64_t v136;
  char v137;
  BOOL v138;
  unint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  unint64_t v142;
  BOOL v143;
  unint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  unint64_t v147;
  BOOL v148;
  unint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  unint64_t v153;
  BOOL v154;
  unint64_t v155;
  char *v156;
  _QWORD *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  unint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  unsigned int v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void (*v183)(uint64_t, _QWORD, uint64_t);
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  _QWORD *v194;
  _QWORD *v195;
  _QWORD *v196;

  sub_23F362ABC();
  a19 = v23;
  a20 = v24;
  v164 = v25;
  v165 = v26;
  v28 = v27;
  v189 = sub_23F618C08();
  v187 = *(char **)(v189 - 8);
  MEMORY[0x24BDAC7A8](v189);
  sub_23F362AAC();
  v31 = v29 - v30;
  MEMORY[0x24BDAC7A8](v32);
  v188 = (char *)&v163 - v33;
  v191 = sub_23F618C20();
  v34 = *(_QWORD *)(v191 - 8);
  MEMORY[0x24BDAC7A8](v191);
  sub_23F362AAC();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3838E4();
  v182 = v38;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F3838E4();
  v180 = v42;
  sub_23F383588();
  v44 = MEMORY[0x24BDAC7A8](v43);
  v46 = (unint64_t)&v163 - v45;
  MEMORY[0x24BDAC7A8](v44);
  sub_23F3838E4();
  v179 = v47;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F3838E4();
  v178 = v50;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v51);
  v173 = (char *)&v163 - v52;
  sub_23F558E3C();
  v181 = v53;
  sub_23F55AD68();
  v55 = v54;
  sub_23F55AD68();
  v168 = v56;
  sub_23F55AD84();
  v167 = v57;
  sub_23F55AD84();
  v166 = v58;
  v59 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v196 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v60 = *(char **)(v28 + 16);
  sub_23F389CDC();
  v171 = v28;
  v190 = v34;
  v169 = v55;
  v170 = (uint64_t)v60;
  v186 = v31;
  if (v60)
  {
    sub_23F383EB8();
    v61 = *(_QWORD *)(v34 + 72);
    v177 = v62;
    v21 = v28 + v62;
    v184 = *(_QWORD *)(v34 + 16);
    v176 = *MEMORY[0x24BE575D0];
    v63 = v28 + v62;
    v28 = v191;
    v163 = v46;
    v185 = v61;
    v64 = (uint64_t)v173;
    v65 = v186;
    do
    {
      sub_23F55AE30();
      v66 = v188;
      sub_23F618C14();
      v67 = v187;
      v68 = v189;
      v183 = (void (*)(uint64_t, _QWORD, uint64_t))*((_QWORD *)v187 + 13);
      v183(v65, v176, v189);
      v69 = sub_23F618BFC();
      v34 = *((_QWORD *)v67 + 1);
      ((void (*)(uint64_t, uint64_t))v34)(v65, v68);
      ((void (*)(char *, uint64_t))v34)(v66, v68);
      if ((v69 & 1) != 0)
      {
        v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v190 + 32);
        v70(v178, v64, v28);
        v71 = v196;
        if ((sub_23F3B1CDC() & 1) == 0)
        {
          sub_23F55AD60();
          v71 = v196;
        }
        v72 = v71[2];
        if (v72 >= v71[3] >> 1)
        {
          sub_23F55AD60();
          v71 = v196;
        }
        v71[2] = v72 + 1;
        v73 = v185;
        v74 = (uint64_t)v71 + v177 + v72 * v185;
        v28 = v191;
        v70(v74, v178, v191);
        v196 = v71;
        v64 = (uint64_t)v173;
      }
      else
      {
        sub_23F383E64(v64, *(uint64_t (**)(uint64_t, uint64_t))(v190 + 8));
        v73 = v185;
      }
      v63 += v73;
      --v60;
    }
    while (v60);
    v75 = v196;
    sub_23F362984();
    v196 = v75;
    v194 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23F617BA0();
    LODWORD(v178) = *MEMORY[0x24BE575D8];
    v22 = v170;
    v76 = v190;
    v77 = v174;
    v78 = v186;
    v20 = (uint64_t)v188;
    do
    {
      sub_23F55AE30();
      sub_23F618C14();
      v79 = v189;
      v183(v78, v178, v189);
      v80 = sub_23F55AE60();
      ((void (*)(uint64_t, uint64_t))v34)(v78, v79);
      ((void (*)(uint64_t, uint64_t))v34)(v20, v79);
      if ((v80 & 1) != 0)
      {
        v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 32);
        v81(v179, v77, v28);
        v82 = v194;
        if ((sub_23F3B1CDC() & 1) == 0)
        {
          sub_23F55AD60();
          v82 = v194;
        }
        v83 = v82[2];
        if (v83 >= v82[3] >> 1)
        {
          sub_23F55AD60();
          v82 = v194;
        }
        v82[2] = v83 + 1;
        v84 = v185;
        v85 = (uint64_t)v82 + v177 + v83 * v185;
        v28 = v191;
        v81(v85, v179, v191);
        v194 = v82;
        v76 = v190;
        v77 = v174;
      }
      else
      {
        sub_23F383E64(v77, *(uint64_t (**)(uint64_t, uint64_t))(v76 + 8));
        v84 = v185;
      }
      v21 += v84;
      --v22;
    }
    while (v22);
    v59 = v194;
    sub_23F55AE6C();
    v86 = MEMORY[0x24BEE4AF8];
    v60 = (char *)v170;
    v46 = v163;
  }
  else
  {
    sub_23F362D08();
    v196 = v59;
    v194 = v59;
    sub_23F389CDC();
    v86 = (uint64_t)v59;
  }
  sub_23F362D08();
  v194 = (_QWORD *)v86;
  v195 = v59;
  sub_23F389CDC();
  if (v60)
  {
    v87 = v191;
    sub_23F383EB8();
    v89 = *(_QWORD *)(v88 + 72);
    v179 = v90;
    v91 = v28 + v90;
    v184 = *(_QWORD *)(v88 + 16);
    LODWORD(v183) = *MEMORY[0x24BE575E8];
    v34 = (uint64_t)v188;
    v20 = v186;
    do
    {
      v185 = (uint64_t)v60;
      sub_23F55AE30();
      sub_23F618C14();
      v92 = v187;
      v93 = v46;
      v94 = v189;
      (*((void (**)(uint64_t, _QWORD, uint64_t))v187 + 13))(v20, v183, v189);
      v95 = sub_23F618BFC();
      v96 = *((_QWORD *)v92 + 1);
      ((void (*)(uint64_t, uint64_t))v96)(v20, v94);
      ((void (*)(uint64_t, uint64_t))v96)(v34, v94);
      if ((v95 & 1) != 0)
      {
        v97 = *(void (**)(uint64_t, unint64_t, uint64_t))(v190 + 32);
        v97(v180, v93, v87);
        v98 = v194;
        v46 = v93;
        if ((sub_23F3B1CDC() & 1) == 0)
        {
          sub_23F55AD60();
          v98 = v194;
        }
        v96 = v98[2];
        if (v96 >= v98[3] >> 1)
        {
          sub_23F55AD60();
          v98 = v194;
        }
        v98[2] = v96 + 1;
        v87 = v191;
        v97((uint64_t)v98 + v179 + v96 * v89, v180, v191);
        v194 = v98;
      }
      else
      {
        (*(void (**)(unint64_t, uint64_t))(v190 + 8))(v93, v87);
        v46 = v93;
      }
      v91 += v89;
      v60 = (char *)(v185 - 1);
    }
    while (v185 != 1);
    v99 = v194;
    sub_23F55AE6C();
    sub_23F362D08();
    v194 = v99;
    v100 = MEMORY[0x24BEE4AF8];
    v192 = MEMORY[0x24BEE4AF8];
    sub_23F389CDC();
    v21 = v172;
    v22 = v170;
    if (v170)
    {
      v101 = v190;
      v46 = v191;
      sub_23F383EB8();
      v102 = *(_QWORD *)(v101 + 72);
      v180 = v103;
      v104 = (char *)(v96 + v103);
      v184 = *(_QWORD *)(v101 + 16);
      LODWORD(v183) = *MEMORY[0x24BE575E0];
      v105 = v186;
      v60 = v187;
      v185 = v102;
      do
      {
        sub_23F55AE30();
        v106 = v188;
        sub_23F618C14();
        v34 = v189;
        (*((void (**)(uint64_t, _QWORD, uint64_t))v60 + 13))(v105, v183, v189);
        v107 = sub_23F55AE60();
        v108 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v60 + 1);
        v108(v105, v34);
        v108((uint64_t)v106, v34);
        if ((v107 & 1) != 0)
        {
          v34 = *(_QWORD *)(v190 + 32);
          ((void (*)(uint64_t, uint64_t, unint64_t))v34)(v175, v21, v46);
          v109 = v192;
          if ((sub_23F3B1CDC() & 1) == 0)
          {
            sub_23F55AD60();
            v109 = v192;
          }
          v20 = v185;
          v110 = *(_QWORD *)(v109 + 16);
          if (v110 >= *(_QWORD *)(v109 + 24) >> 1)
          {
            sub_23F55AD60();
            v109 = v192;
          }
          *(_QWORD *)(v109 + 16) = v110 + 1;
          v46 = v191;
          ((void (*)(unint64_t, uint64_t, uint64_t))v34)(v109 + v180 + v110 * v20, v175, v191);
          v192 = v109;
          v21 = v172;
        }
        else
        {
          (*(void (**)(uint64_t, unint64_t))(v190 + 8))(v21, v46);
          v20 = v185;
        }
        v104 += v20;
        --v22;
      }
      while (v22);
      v100 = v192;
      sub_23F55AE6C();
    }
  }
  else
  {
    sub_23F362D08();
    v194 = (_QWORD *)v86;
    v192 = v86;
    sub_23F389CDC();
    v100 = v86;
  }
  v111 = (_QWORD *)v190;
  sub_23F362D08();
  v193 = (_QWORD *)v100;
  v112 = (uint64_t)v196;
  v113 = v196[2];
  if (v113 >= v169)
    v114 = v169;
  else
    v114 = v196[2];
  if (v114 < 0)
    goto LABEL_176;
  v34 = *((unsigned __int8 *)v111 + 80);
  if (v114)
  {
    v115 = sub_23F5BCFD0(0, v114, v113, v196);
    if ((v116 & 1) != 0)
    {
      __break(1u);
      goto LABEL_189;
    }
    v20 = v115;
    if (v115 < 0)
      goto LABEL_183;
    sub_23F389CDC();
    v111 = &v196;
    sub_23F5C69F0(0, v20);
  }
  else
  {
    sub_23F389CDC();
  }
  v22 = (v34 + 32) & ~v34;
  v118 = sub_23F55AE08(v112, v112 + v22, v117, (2 * v114) | 1);
  v119 = (uint64_t)v195;
  v120 = v195[2];
  if (v120 >= v168)
    v20 = v168;
  else
    v20 = v195[2];
  if (v20 < 0)
    goto LABEL_177;
  v114 = v118;
  if (!v20)
  {
    sub_23F362CDC();
    sub_23F389CDC();
    goto LABEL_62;
  }
  v121 = sub_23F5BCFD0(0, v20, v120, v195);
  if ((v122 & 1) != 0)
  {
LABEL_189:
    __break(1u);
    goto LABEL_190;
  }
  v21 = v121;
  if (v121 < 0)
    goto LABEL_184;
  sub_23F362CDC();
  sub_23F389CDC();
  v111 = &v195;
  sub_23F5C69F0(0, v21);
LABEL_62:
  v189 = sub_23F55AE08(v119, v119 + v22, v123, (2 * v20) | 1);
  v20 = (uint64_t)v194;
  v124 = v194[2];
  if (v124 >= v167)
    v21 = v167;
  else
    v21 = v194[2];
  if (v21 < 0)
    goto LABEL_178;
  if (!v21)
  {
    sub_23F617BA0();
    sub_23F617BA0();
    goto LABEL_71;
  }
  v125 = sub_23F5BCFD0(0, v21, v124, v194);
  if ((v126 & 1) != 0)
  {
LABEL_190:
    __break(1u);
    goto LABEL_191;
  }
  v46 = v125;
  if (v125 < 0)
    goto LABEL_185;
  sub_23F617BA0();
  sub_23F617BA0();
  v111 = &v194;
  sub_23F55AE54();
LABEL_71:
  v188 = (char *)sub_23F55AE08(v20, v20 + v22, v127, (2 * v21) | 1);
  v128 = *(_QWORD *)(v100 + 16);
  if (v128 >= v166)
    v21 = v166;
  else
    v21 = *(_QWORD *)(v100 + 16);
  if (v21 < 0)
    goto LABEL_179;
  if (v21)
  {
    v129 = sub_23F5BCFD0(0, v21, v128, v100);
    if ((v130 & 1) == 0)
    {
      v46 = v129;
      if (v129 < 0)
        goto LABEL_186;
      sub_23F617BA0();
      swift_retain();
      sub_23F55AE54();
      goto LABEL_80;
    }
LABEL_191:
    __break(1u);
    return;
  }
  sub_23F617BA0();
  swift_retain();
LABEL_80:
  v132 = sub_23F55AE08(v100, v100 + v22, v131, (2 * v21) | 1);
  v133 = *(_QWORD *)(v114 + 16);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v189 + 16);
  swift_bridgeObjectRelease();
  v134 = __OFADD__(v133, v34);
  v111 = (_QWORD *)(v133 + v34);
  if (v134)
    goto LABEL_180;
  v34 = *((_QWORD *)v188 + 2);
  swift_bridgeObjectRelease();
  v134 = __OFADD__(v111, v34);
  v111 = (_QWORD *)((char *)v111 + v34);
  if (v134)
    goto LABEL_181;
  v34 = *(_QWORD *)(v132 + 16);
  sub_23F362D18();
  v60 = (char *)v111 + v34;
  if (__OFADD__(v111, v34))
    goto LABEL_182;
  v111 = v193;
  if (v193[2])
  {
    sub_23F55ADB8();
    if (v135 != v134)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_87;
      goto LABEL_187;
    }
  }
LABEL_102:
  sub_23F362984();
  sub_23F55ADB8();
  if (v135 != v134)
  {
    v111 = v196;
    if (v196[2])
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377E30();
        v114 = v160;
      }
      do
      {
        if ((sub_23F3B1CDC() & 1) == 0)
        {
          sub_23F55AE38();
          v111 = v145;
        }
        if (!v111[2])
          goto LABEL_172;
        sub_23F55AD4C();
        sub_23F55ADA0((uint64_t)&a15);
        sub_23F55AD38();
        if (v135 ^ v134 | v137)
          v143 = v46 >= v142;
        else
          v143 = 1;
        if (v143)
        {
          sub_23F55AD28();
        }
        else if (v20)
        {
          sub_23F55AD18();
        }
        v111[2] = v21;
        v46 = *(_QWORD *)(v114 + 16);
        sub_23F55AE78();
        if (v138)
        {
          sub_23F54368C(v144);
          sub_23F377E30();
          v114 = v146;
        }
        *(_QWORD *)(v114 + 16) = v21;
        sub_23F55ADE8(v114 + v22 + v46 * v20, (uint64_t)&a15);
        ++v60;
        sub_23F55ADB8();
        if (v135 == v134)
        {
          v196 = v111;
          goto LABEL_168;
        }
      }
      while (v111[2]);
      v196 = v111;
    }
  }
  sub_23F55ADB8();
  if (v135 != v134)
  {
    v111 = v195;
    if (v195[2])
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F55ADF4();
        v189 = v161;
      }
      do
      {
        if ((sub_23F3B1CDC() & 1) == 0)
        {
          sub_23F55AE38();
          v111 = v151;
        }
        if (!v111[2])
          goto LABEL_173;
        sub_23F55AD4C();
        sub_23F55ADA0((uint64_t)&a14);
        sub_23F55AD38();
        if (v135 ^ v134 | v137)
          v148 = v46 >= v147;
        else
          v148 = 1;
        if (v148)
        {
          sub_23F55AD28();
        }
        else if (v20)
        {
          sub_23F55AD18();
        }
        v111[2] = v21;
        v46 = *(_QWORD *)(v189 + 16);
        sub_23F55AE78();
        if (v138)
        {
          sub_23F54368C(v149);
          sub_23F377E30();
          v189 = v152;
        }
        v150 = v189;
        *(_QWORD *)(v189 + 16) = v21;
        sub_23F55ADE8(v150 + v22 + v46 * v20, (uint64_t)&a14);
        ++v60;
        sub_23F55ADB8();
        if (v135 == v134)
        {
          v195 = v111;
          goto LABEL_168;
        }
      }
      while (v111[2]);
      v195 = v111;
    }
  }
  sub_23F55ADB8();
  if (v135 != v134)
  {
    v111 = v194;
    if (v194[2])
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F55ADF4();
        v188 = v162;
      }
      do
      {
        if ((sub_23F3B1CDC() & 1) == 0)
        {
          sub_23F55AE38();
          v111 = v157;
        }
        if (!v111[2])
          goto LABEL_174;
        sub_23F55AD4C();
        sub_23F55ADA0((uint64_t)&a13);
        sub_23F55AD38();
        if (v135 ^ v134 | v137)
          v154 = v46 >= v153;
        else
          v154 = 1;
        if (v154)
        {
          sub_23F55AD28();
        }
        else if (v20)
        {
          sub_23F55AD18();
        }
        v111[2] = v21;
        v46 = *((_QWORD *)v188 + 2);
        sub_23F55AE78();
        if (v138)
        {
          sub_23F54368C(v155);
          sub_23F377E30();
          v188 = v158;
        }
        v156 = v188;
        *((_QWORD *)v188 + 2) = v21;
        sub_23F55ADE8((uint64_t)&v156[v22 + v46 * v20], (uint64_t)&a13);
        if (__OFADD__(v60, 1))
        {
          while (1)
          {
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            sub_23F377E30();
            v132 = v159;
            while (1)
            {
LABEL_87:
              if ((sub_23F3B1CDC() & 1) == 0)
              {
                sub_23F55AE38();
                v111 = v140;
              }
              if (!v111[2])
                break;
              sub_23F55AD4C();
              sub_23F55ADB0(v182, v46);
              sub_23F55AD38();
              if (v135 ^ v134 | v137)
                v138 = v46 >= v136;
              else
                v138 = 1;
              if (v138)
              {
                sub_23F55AD28();
              }
              else if (v20)
              {
                sub_23F55AD18();
              }
              v111[2] = v21;
              v46 = *(_QWORD *)(v132 + 16);
              sub_23F55AE78();
              if (v138)
              {
                sub_23F54368C(v139);
                sub_23F377E30();
                v132 = v141;
              }
              *(_QWORD *)(v132 + 16) = v21;
              ((void (*)(unint64_t, uint64_t, uint64_t))v34)(v132 + v22 + v46 * v20, v182, v191);
              ++v60;
              if (v111[2])
              {
                sub_23F55ADB8();
                if (v135 != v134)
                  continue;
              }
              goto LABEL_102;
            }
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
          }
        }
        if ((uint64_t)(v60 + 1) >= v181)
          break;
        ++v60;
      }
      while (v111[2]);
      v194 = v111;
    }
  }
LABEL_168:
  v192 = v132;
  sub_23F387804();
  sub_23F387804();
  sub_23F387804();
  sub_23F55AE6C();
  if ((v164 & 1) != 0)
    sub_23F55A1B0();
  sub_23F362CDC();
  sub_23F617BA0();
  sub_23F55A51C();
  sub_23F362984();
  sub_23F362D18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F362948();
}

void sub_23F55A1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD, _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(_QWORD, _QWORD);
  uint64_t v52;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v4 = sub_23F3B1728();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F618C20();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F362AAC();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v40 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v14);
  if (v1)
  {
    v47 = *(_QWORD *)(v1 + 16);
    if (v47)
    {
      v41 = v17;
      v42 = v16;
      v49 = (char *)&v40 - v15;
      v45 = v1;
      v46 = v7;
      v43 = v5;
      v44 = v4;
      sub_23F383EB8();
      v50 = v18;
      v19 = v1 + v18;
      v20 = *(_QWORD *)(v9 + 72);
      v21 = *(void (**)(_QWORD, _QWORD))(v9 + 16);
      sub_23F617BA0();
      v22 = 0;
      v51 = v21;
      v48 = v3;
      v40 = v19;
      while (1)
      {
        sub_23F55ADB0((uint64_t)v13, v19 + v20 * v22);
        v23 = *(_QWORD *)(*v3 + 16);
        if (!v23)
          break;
        ++v22;
        v24 = *v3 + v50;
        sub_23F55ACCC();
        sub_23F55ADDC();
        while ((sub_23F61C0A0() & 1) == 0)
        {
          v24 += v20;
          if (!--v23)
          {
            sub_23F55AE4C();
            sub_23F55AD0C();
            v21 = v51;
            goto LABEL_11;
          }
        }
        sub_23F55AD0C();
        sub_23F383E64((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
        v3 = v48;
        v21 = v51;
        v19 = v40;
        if (v22 == v47)
        {
          sub_23F55AE4C();
          goto LABEL_14;
        }
      }
      sub_23F55AE4C();
LABEL_11:
      v25 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
      v26 = v41;
      v25((uint64_t)v41, v13, v8);
      v27 = (uint64_t)v49;
      v25((uint64_t)v49, v26, v8);
      v28 = v46;
      sub_23F619130();
      sub_23F55ADB0(v42, v27);
      v29 = sub_23F619E8C();
      v30 = sub_23F61C61C();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)sub_23F366668();
        v47 = sub_23F366668();
        v52 = v47;
        *(_DWORD *)v31 = 136315138;
        v32 = sub_23F5EF1D0();
        sub_23F37AE00(v32, v33, &v52);
        sub_23F3E2770(v34);
        sub_23F61C790();
        sub_23F362984();
        sub_23F55AE10();
        _os_log_impl(&dword_23F35A000, v29, v30, "Adding %s to the ranked list", v31, 0xCu);
        sub_23F55AE84();
        sub_23F366530();
      }
      sub_23F55AE10();

      (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v44);
      v35 = v48;
      sub_23F376A38();
      v36 = *(_QWORD *)(*v35 + 16);
      sub_23F376BD0(v36);
      v37 = *v35;
      *(_QWORD *)(v37 + 16) = v36 + 1;
      v38 = v37 + v50 + v36 * v20;
      v39 = v49;
      ((void (*)(uint64_t, char *, uint64_t))v51)(v38, v49, v8);
      *v35 = v37;
      v21(v39, v8);
    }
  }
LABEL_14:
  sub_23F362948();
}

void sub_23F55A51C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = sub_23F3B1728();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3D9CCC();
  sub_23F619130();
  swift_bridgeObjectRetain_n();
  sub_23F55ADDC();
  swift_bridgeObjectRetain_n();
  v9 = sub_23F619E8C();
  v10 = sub_23F61C610();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)sub_23F366668();
    v15 = sub_23F366668();
    *(_DWORD *)v11 = 136315138;
    v12 = sub_23F55A6BC(v6, v4, v2);
    sub_23F37AE00(v12, v13, &v15);
    sub_23F3E2770(v14);
    sub_23F61C790();
    sub_23F384A80();
    sub_23F55AD0C();
    sub_23F384A80();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F35A000, v9, v10, "%s", v11, 0xCu);
    sub_23F55AE84();
    sub_23F366530();
  }

  sub_23F384A80();
  sub_23F55AD0C();
  sub_23F384A80();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v7);
  sub_23F362948();
}

uint64_t sub_23F55A6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  static QueryDecorationLoggingUtils.generateReadableToolList(_:)(a1);
  static QueryDecorationLoggingUtils.generateReadableToolList(_:)(a2);
  static QueryDecorationLoggingUtils.generateReadableToolList(_:)(a3);
  sub_23F61C8E0();
  sub_23F61C280();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t type metadata accessor for QueryDecorationToolSelector()
{
  return objc_opt_self();
}

id sub_23F55A810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  char v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v8 = sub_23F619E98();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v46 - v13;
  sub_23F5FC520(a2, a3);
  if (!v15)
  {
    sub_23F619154();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v20 = sub_23F619E8C();
    v21 = sub_23F61C628();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v49 = v9;
      v24 = v23;
      v53 = v23;
      *(_DWORD *)v22 = 136315394;
      v51 = a4;
      sub_23F617BA0();
      sub_23F37AE00(a2, a3, &v53);
      v52 = v25;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2080;
      v50 = v8;
      v27 = *(_QWORD *)(a1 + 16);
      v26 = *(_QWORD *)(a1 + 24);
      sub_23F617BA0();
      sub_23F37AE00(v27, v26, &v53);
      v52 = v28;
      a4 = v51;
      sub_23F61C790();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F35A000, v20, v21, "Trial factor '%s' not found in namespace '%s'", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v24, -1, -1);
      MEMORY[0x242670B70](v22, -1, -1);

      v29 = *(void (**)(char *, uint64_t))(v49 + 8);
      v30 = v14;
LABEL_8:
      v44 = v50;
LABEL_12:
      v29(v30, v44);
      return (id)a4;
    }

    swift_release_n();
    swift_bridgeObjectRelease_n();
    v29 = *(void (**)(char *, uint64_t))(v9 + 8);
    v30 = v14;
LABEL_11:
    v44 = v8;
    goto LABEL_12;
  }
  v16 = v15;
  v17 = Int.init(level:)(v16);
  if ((v18 & 1) != 0)
  {
    sub_23F619154();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v31 = sub_23F619E8C();
    v32 = sub_23F61C628();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v48 = v33;
      v35 = v34;
      v47 = swift_slowAlloc();
      v53 = v47;
      *(_DWORD *)v35 = 136315650;
      v51 = a4;
      sub_23F617BA0();
      sub_23F37AE00(a2, a3, &v53);
      v52 = v36;
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      v49 = v9;
      v50 = v8;
      *(_WORD *)(v35 + 12) = 2080;
      v37 = *(_QWORD *)(a1 + 16);
      v38 = *(_QWORD *)(a1 + 24);
      sub_23F617BA0();
      sub_23F37AE00(v37, v38, &v53);
      v52 = v39;
      sub_23F61C790();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 22) = 2080;
      v52 = MEMORY[0x24BEE1768];
      sub_23F35D2E8(&qword_256E7AB60);
      v40 = sub_23F61C16C();
      sub_23F37AE00(v40, v41, &v53);
      v52 = v42;
      a4 = v51;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F35A000, v31, (os_log_type_t)v48, "Trial factor '%s' in namespace '%s' not convertable to type '%s'", (uint8_t *)v35, 0x20u);
      v43 = v47;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v43, -1, -1);
      MEMORY[0x242670B70](v35, -1, -1);

      v29 = *(void (**)(char *, uint64_t))(v49 + 8);
      v30 = v12;
      goto LABEL_8;
    }

    swift_release_n();
    swift_bridgeObjectRelease_n();

    v29 = *(void (**)(char *, uint64_t))(v9 + 8);
    v30 = v12;
    goto LABEL_11;
  }
  v19 = v17;

  return v19;
}

unint64_t sub_23F55ACCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E70F30;
  if (!qword_256E70F30)
  {
    v1 = sub_23F618C20();
    result = MEMORY[0x242670A44](MEMORY[0x24BE57628], v1);
    atomic_store(result, (unint64_t *)&qword_256E70F30);
  }
  return result;
}

uint64_t sub_23F55AD0C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F55AD18()
{
  return swift_arrayInitWithTakeBackToFront();
}

uint64_t sub_23F55AD28()
{
  return swift_arrayInitWithTakeFrontToBack();
}

void sub_23F55AD60()
{
  sub_23F37C3B8();
}

void sub_23F55AD68()
{
  sub_23F558E3C();
}

void sub_23F55AD84()
{
  sub_23F558E3C();
}

uint64_t sub_23F55ADA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t, uint64_t);
  uint64_t v3;

  return v2(*(_QWORD *)(a1 - 256), v3, v1);
}

uint64_t sub_23F55ADB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F55ADC4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F55ADDC()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23F55ADE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(uint64_t, _QWORD, _QWORD);
  uint64_t v3;

  return v2(a1, *(_QWORD *)(a2 - 256), *(_QWORD *)(v3 - 136));
}

void sub_23F55ADF4()
{
  sub_23F377E30();
}

uint64_t sub_23F55AE08(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_23F510690(a1, a2, 0, a4);
}

uint64_t sub_23F55AE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void sub_23F55AE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v1, v0, (uint64_t *)(v2 - 96));
}

uint64_t sub_23F55AE30()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 192))();
}

void sub_23F55AE38()
{
  sub_23F492518();
}

uint64_t sub_23F55AE40()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F55AE4C()
{
  return swift_bridgeObjectRelease();
}

void sub_23F55AE54()
{
  uint64_t v0;

  sub_23F5C69F0(0, v0);
}

uint64_t sub_23F55AE60()
{
  return sub_23F618BFC();
}

uint64_t sub_23F55AE84()
{
  return swift_arrayDestroy();
}

ValueMetadata *type metadata accessor for QueryDecorationFeatureControl()
{
  return &type metadata for QueryDecorationFeatureControl;
}

void QueryDecorationEntity.getValue()(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_23F55D9A4();
  sub_23F362600(v2, a1, type metadata accessor for QueryDecorationEntityValue);
}

uint64_t type metadata accessor for QueryDecorationEntity(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7ABD0);
}

uint64_t type metadata accessor for QueryDecorationEntityValue(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7AC78);
}

uint64_t QueryDecorationEntity.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23F55AF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t inited;
  uint64_t v31;
  float v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, unint64_t, uint64_t);
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  float v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  float v54;
  unint64_t v55;
  int v56;
  float v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_23F35D2E8(&qword_256E79958);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F36285C();
  v61 = v2;
  sub_23F35D2E8(&qword_256E79900);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F362AAC();
  v60 = v4 - v5;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v59 - v7;
  v9 = sub_23F55D938();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v62 = v10;
  v11 = sub_23F618B78();
  sub_23F54DD74();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F38F964();
  v15 = v14 - v13;
  v16 = sub_23F55D930();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  sub_23F38F964();
  v20 = v19 - v18;
  sub_23F55D940();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F55D98C();
  sub_23F55DA0C(v65 + v24);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v27 = v61;
      v26 = v62;
      v29 = v63;
      v28 = v64;
      (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v62, v23, v64);
      sub_23F35D2E8(&qword_256E7ADD0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23F61E980;
      *(_BYTE *)(inited + 32) = 2;
      sub_23F618D1C();
      v31 = sub_23F618AD0();
      if (sub_23F36195C((uint64_t)v8, 1, v31) == 1)
      {
        sub_23F3625D8((uint64_t)v8, &qword_256E79900);
        v32 = -1.0;
      }
      else
      {
        sub_23F618AC4();
        v32 = v49;
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v8, v31);
      }
      *(float *)(inited + 36) = v32;
      *(_BYTE *)(inited + 40) = 3;
      sub_23F618D10();
      v50 = sub_23F618C8C();
      if (sub_23F36195C(v27, 1, v50) == 1)
      {
        v51 = &qword_256E79958;
        v52 = v27;
      }
      else
      {
        v53 = v60;
        sub_23F618C80();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v27, v50);
        if (sub_23F36195C(v53, 1, v31) != 1)
        {
          sub_23F618AC4();
          v54 = v57;
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v53, v31);
          goto LABEL_26;
        }
        v51 = &qword_256E79900;
        v52 = v53;
      }
      sub_23F3625D8(v52, v51);
      v54 = -1.0;
LABEL_26:
      *(float *)(inited + 44) = v54;
      sub_23F3664B0();
      v48 = sub_23F61BFEC();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v26, v28);
      return v48;
    }
    sub_23F3664B0();
    return sub_23F61BFEC();
  }
  else
  {
    v65 = v0;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v20, v23, v16);
    sub_23F35D2E8(&qword_256E7ADD0);
    v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_23F61E7E0;
    *(_BYTE *)(v33 + 32) = 1;
    v34 = sub_23F618D70();
    v35 = *(_QWORD *)(v34 + 16);
    v36 = v17;
    v37 = v20;
    if (v35)
    {
      v62 = v33;
      v63 = v17;
      v64 = v16;
      v66 = MEMORY[0x24BEE4AF8];
      sub_23F37B5B4();
      v38 = v65;
      v39 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
      v61 = v34;
      v40 = v34 + v39;
      v41 = *(_QWORD *)(v65 + 72);
      v42 = *(void (**)(uint64_t, unint64_t, uint64_t))(v65 + 16);
      v43 = v20;
      do
      {
        v42(v15, v40, v11);
        sub_23F618B0C();
        v45 = v44;
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v15, v11);
        v46 = v66;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37B5B4();
          v46 = v66;
        }
        v47 = *(_QWORD *)(v46 + 16);
        if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
        {
          sub_23F37B5B4();
          v46 = v66;
        }
        *(_QWORD *)(v46 + 16) = v47 + 1;
        *(_DWORD *)(v46 + 4 * v47 + 32) = v45;
        v40 += v41;
        --v35;
        v38 = v65;
      }
      while (v35);
      v37 = v43;
      swift_bridgeObjectRelease();
      v36 = v63;
      v16 = v64;
      v33 = v62;
    }
    else
    {
      swift_bridgeObjectRelease();
      v46 = MEMORY[0x24BEE4AF8];
    }
    v55 = sub_23F385D88(v46);
    swift_bridgeObjectRelease();
    if ((v55 & 0x100000000) != 0)
      v56 = -1082130432;
    else
      v56 = v55;
    *(_DWORD *)(v33 + 36) = v56;
    sub_23F3664B0();
    v48 = sub_23F61BFEC();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v16);
  }
  return v48;
}

Swift::Int __swiftcall QueryDecorationEntity.getEntitySourceHashValue()()
{
  Swift::Int result;

  sub_23F55D98C();
  sub_23F55B478();
  sub_23F362CB0();
  sub_23F55D9DC();
  sub_23F362C10();
  sub_23F362AD4();
  return result;
}

void sub_23F55B478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  int v4;
  uint64_t v5;

  type metadata accessor for QueryDecorationEntityValue(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F362838();
  sub_23F362600(v1, v0, v3);
  v4 = sub_23F55D9F8();
  if (!v4)
  {
    v5 = sub_23F55D930();
    goto LABEL_5;
  }
  if (v4 == 1)
  {
    v5 = sub_23F55D938();
LABEL_5:
    (*(void (**)(uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0);
  }
  sub_23F362B80();
}

Swift::Bool __swiftcall QueryDecorationEntity.isEmpty()()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  Swift::Bool result;

  type metadata accessor for QueryDecorationEntityValue(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23F55D9A4();
  sub_23F55DA0C(v1);
  v2 = sub_23F55D9F8();
  if (!v2)
  {
    v3 = sub_23F55D930();
    goto LABEL_5;
  }
  if (v2 == 1)
  {
    v3 = sub_23F55D938();
LABEL_5:
    sub_23F362B6C(v3);
  }
  sub_23F362B80();
  return result;
}

void QueryDecorationEntity.getTypedValue()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;

  v3 = sub_23F55D938();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F383EC4();
  v5 = sub_23F55D930();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F55D8FC();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v10 = v9 - v8;
  v11 = sub_23F55D9A4();
  sub_23F362600(v11, v10, type metadata accessor for QueryDecorationEntityValue);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v10, v3);
      sub_23F618CE0();
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    }
    else
    {
      v13 = sub_23F61B92C();
      sub_23F36196C(a1, 1, 1, v13);
    }
  }
  else
  {
    sub_23F384918(v1, v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
    sub_23F618D64();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
  }
  sub_23F362948();
}

void static QueryDecorationEntity.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (*a1 == *a2)
  {
    v4 = *(int *)(type metadata accessor for QueryDecorationEntity(0) + 20);
    static QueryDecorationEntityValue.== infix(_:_:)((uint64_t)a1 + v4, (uint64_t)a2 + v4);
  }
  else
  {
    sub_23F362928();
  }
}

uint64_t static QueryDecorationEntityValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  v5 = sub_23F55D938();
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v24 = v6;
  v7 = sub_23F55D930();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F55D8FC();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F362AAC();
  v12 = v10 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v24 - v14;
  sub_23F35D2E8(&qword_256E6F7F8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F362838();
  v18 = v2 + *(int *)(v17 + 48);
  sub_23F362600(a1, v2, type metadata accessor for QueryDecorationEntityValue);
  sub_23F362600(v27, v18, type metadata accessor for QueryDecorationEntityValue);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_23F362600(v2, (uint64_t)v15, type metadata accessor for QueryDecorationEntityValue);
    if (!sub_23F55D948())
    {
      sub_23F384918(v3, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
      v21 = sub_23F618D7C();
      sub_23F55D9E4(v3);
      v22 = (uint64_t)v15;
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v7);
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_23F362600(v2, v12, type metadata accessor for QueryDecorationEntityValue);
    if (sub_23F55D948() == 1)
    {
      v20 = v24;
      sub_23F384918(v24, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32));
      v21 = sub_23F618CEC();
      sub_23F55D9E4(v20);
      v22 = v12;
LABEL_12:
      sub_23F55D9E4(v22);
      sub_23F3663AC(v2, type metadata accessor for QueryDecorationEntityValue);
      return v21 & 1;
    }
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v12, v26);
    goto LABEL_10;
  }
  if (sub_23F55D948() != 2)
  {
LABEL_10:
    sub_23F3625D8(v2, &qword_256E6F7F8);
    v21 = 0;
    return v21 & 1;
  }
  sub_23F3663AC(v2, type metadata accessor for QueryDecorationEntityValue);
  v21 = 1;
  return v21 & 1;
}

double sub_23F55B988@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  int v9;
  int v10;
  float v11;
  uint64_t v12;
  double result;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_23F55D9C0();
  sub_23F54DD74();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v7 = v6 - v5;
  sub_23F35D2E8(&qword_256E7ADD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
  *(_BYTE *)(inited + 32) = 0;
  sub_23F618BD8();
  v10 = v9;
  if ((~v9 & 0x7F800000) != 0 || (v11 = -1.0, (v10 & 0x7FFFFF) == 0))
    sub_23F618BD8();
  *(float *)(inited + 36) = v11;
  sub_23F3664B0();
  v12 = sub_23F61BFEC();
  sub_23F618BCC();
  RetrievedTool.Definition.toCandidateIdentifier()();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v7, v3);
  result = *(double *)&v14;
  *(_OWORD *)a1 = v14;
  *(_QWORD *)(a1 + 16) = v15;
  *(_QWORD *)(a1 + 24) = v16;
  *(_QWORD *)(a1 + 32) = v12;
  return result;
}

void QueryDecorationTuple.init(tool:parameters:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F55D9C8();
  v2 = sub_23F618C20();
  sub_23F55D918(v2);
  *(_QWORD *)(v1 + *(int *)(type metadata accessor for QueryDecorationTuple(0) + 20)) = v0;
  sub_23F362B80();
}

uint64_t type metadata accessor for QueryDecorationTuple(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7AD08);
}

uint64_t QueryDecorationTuple.hash(into:)(__int128 *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v2 = sub_23F55D9C0();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE57570];
  MEMORY[0x24BDAC7A8](v2);
  sub_23F383EC4();
  sub_23F618BCC();
  sub_23F3612C0(&qword_256E70F20, v3, MEMORY[0x24BE57588]);
  sub_23F55D9EC();
  sub_23F55D954();
  type metadata accessor for QueryDecorationTuple(0);
  sub_23F55D97C();
  sub_23F55DA04(a1);
  return sub_23F362D18();
}

void static QueryDecorationTuple.== infix(_:_:)()
{
  if ((sub_23F618BF0() & 1) != 0)
  {
    type metadata accessor for QueryDecorationTuple(0);
    sub_23F35D4F4();
  }
  else
  {
    sub_23F362928();
  }
}

uint64_t QueryDecorationTuple.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  __int128 v8[4];

  v1 = sub_23F55D9C0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE57570];
  sub_23F54DD74();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61CD30();
  sub_23F618BCC();
  sub_23F3612C0(&qword_256E70F20, v2, MEMORY[0x24BE57588]);
  sub_23F61C04C();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v5, v1);
  type metadata accessor for QueryDecorationTuple(0);
  sub_23F55D97C();
  sub_23F55DA04(v8);
  sub_23F362D18();
  return sub_23F61CD60();
}

uint64_t sub_23F55BCB4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  __int128 v3[4];

  v0 = sub_23F55D9C0();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE57570];
  MEMORY[0x24BDAC7A8](v0);
  sub_23F383EC4();
  sub_23F61CD30();
  sub_23F618BCC();
  sub_23F3612C0(&qword_256E70F20, v1, MEMORY[0x24BE57588]);
  sub_23F55D9EC();
  sub_23F55D954();
  sub_23F617BA0();
  sub_23F55DA04(v3);
  sub_23F362D18();
  return sub_23F61CD60();
}

void QueryDecorationTupleParameter.init(parameterDefinition:entity:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t DecorationTupleParameter;

  sub_23F55D9C8();
  v2 = sub_23F61BBA8();
  sub_23F55D918(v2);
  DecorationTupleParameter = type metadata accessor for QueryDecorationTupleParameter(0);
  sub_23F36262C(v0, v1 + *(int *)(DecorationTupleParameter + 20), type metadata accessor for QueryDecorationEntity);
  sub_23F362B80();
}

uint64_t QueryDecorationTupleParameter.hash(into:)()
{
  sub_23F61BB78();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  type metadata accessor for QueryDecorationTupleParameter(0);
  sub_23F61CD3C();
  sub_23F55D98C();
  sub_23F55B478();
  sub_23F362CB0();
  sub_23F55D9DC();
  sub_23F362C10();
  return sub_23F61CD3C();
}

void static QueryDecorationTupleParameter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t DecorationEntity;

  if ((sub_23F61BB6C() & 1) != 0)
  {
    v4 = *(int *)(type metadata accessor for QueryDecorationTupleParameter(0) + 20);
    v5 = (_QWORD *)(a1 + v4);
    v6 = (_QWORD *)(a2 + v4);
    if (*v5 == *v6)
    {
      DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
      static QueryDecorationEntityValue.== infix(_:_:)((uint64_t)v5 + *(int *)(DecorationEntity + 20), (uint64_t)v6 + *(int *)(DecorationEntity + 20));
    }
  }
  sub_23F362928();
}

void QueryDecorationTupleParameter.hashValue.getter()
{
  sub_23F362CB0();
  QueryDecorationTupleParameter.hash(into:)();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F55BF04()
{
  sub_23F61CD30();
  QueryDecorationTupleParameter.hash(into:)();
  sub_23F362C10();
  sub_23F362AD4();
}

void sub_23F55BF30(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t i;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t DecorationTupleParameter;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v39 = sub_23F55D940();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationTupleParameter = type metadata accessor for QueryDecorationTupleParameter(0);
  v37 = *(_QWORD *)(DecorationTupleParameter - 8);
  MEMORY[0x24BDAC7A8](DecorationTupleParameter);
  sub_23F362AAC();
  v9 = v7 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v34 - v11;
  v13 = *((_QWORD *)a1 + 8);
  v14 = a1[1];
  v41 = *a1;
  v42 = v14;
  v15 = a1[2];
  v16 = a1[3];
  v34[1] = a1;
  v43 = v15;
  v44 = v16;
  v45 = v13;
  v36 = sub_23F61CD60();
  v17 = *(_QWORD *)(a2 + 56);
  v35 = a2 + 56;
  v18 = 1 << *(_BYTE *)(a2 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v21 = (unint64_t)(v18 + 63) >> 6;
  v40 = a2;
  sub_23F617BA0();
  v22 = 0;
  v23 = 0;
  if (!v20)
    goto LABEL_5;
LABEL_4:
  v24 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  for (i = v24 | (v23 << 6); ; i = __clz(__rbit64(v27)) + (v23 << 6))
  {
    sub_23F362600(*(_QWORD *)(v40 + 48) + *(_QWORD *)(v37 + 72) * i, (uint64_t)v12, type metadata accessor for QueryDecorationTupleParameter);
    sub_23F36262C((uint64_t)v12, v9, type metadata accessor for QueryDecorationTupleParameter);
    sub_23F61CD30();
    sub_23F61BB78();
    sub_23F61C22C();
    swift_bridgeObjectRelease();
    v29 = v9 + *(int *)(DecorationTupleParameter + 20);
    sub_23F61CD3C();
    sub_23F55D98C();
    sub_23F362600(v29 + v30, (uint64_t)v6, type metadata accessor for QueryDecorationEntityValue);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
        goto LABEL_20;
      v32 = sub_23F55D938();
    }
    else
    {
      v32 = sub_23F55D930();
    }
    (*(void (**)(char *))(*(_QWORD *)(v32 - 8) + 8))(v6);
LABEL_20:
    sub_23F61CD30();
    sub_23F61CD3C();
    sub_23F61CD60();
    sub_23F61CD3C();
    v33 = sub_23F61CD60();
    sub_23F3663AC(v9, type metadata accessor for QueryDecorationTupleParameter);
    v22 ^= v33;
    if (v20)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v23++, 1))
      goto LABEL_24;
    if (v23 >= v21)
      goto LABEL_22;
    v27 = *(_QWORD *)(v35 + 8 * v23);
    if (!v27)
      break;
LABEL_14:
    v20 = (v27 - 1) & v27;
  }
  v28 = v23 + 1;
  if (v23 + 1 >= v21)
  {
LABEL_22:
    swift_release();
    sub_23F61CD3C();
    sub_23F362948();
    return;
  }
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
  {
    ++v23;
    goto LABEL_14;
  }
  while (1)
  {
    v23 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v23 >= v21)
      goto LABEL_22;
    v27 = *(_QWORD *)(v35 + 8 * v23);
    ++v28;
    if (v27)
      goto LABEL_14;
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t type metadata accessor for QueryDecorationTupleParameter(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7AD98);
}

void sub_23F55C26C()
{
  sub_23F3612C0(&qword_256E7AB68, type metadata accessor for QueryDecorationTuple, (uint64_t)&protocol conformance descriptor for QueryDecorationTuple);
}

void sub_23F55C298()
{
  sub_23F3612C0(&qword_256E7AB70, type metadata accessor for QueryDecorationTupleParameter, (uint64_t)&protocol conformance descriptor for QueryDecorationTupleParameter);
}

uint64_t *initializeBufferWithCopyOfBuffer for QueryDecorationEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t DecorationEntityValue;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v12 = sub_23F618D28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, v7, v12);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(DecorationEntityValue - 8) + 64));
        return v3;
      }
      v10 = sub_23F618D88();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, v7, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for QueryDecorationEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  type metadata accessor for QueryDecorationEntityValue(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v4 = sub_23F618D28();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v4 = sub_23F618D88();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
}

_QWORD *initializeWithCopy for QueryDecorationEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t DecorationEntityValue;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = sub_23F618D28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v5, v6, v10);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(DecorationEntityValue - 8) + 64));
      return a1;
    }
    v9 = sub_23F618D88();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v5, v6, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for QueryDecorationEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t DecorationEntityValue;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 20);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    sub_23F3663AC((uint64_t)a1 + v4, type metadata accessor for QueryDecorationEntityValue);
    DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_23F618D28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v5, v6, v10);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(DecorationEntityValue - 8) + 64));
        return a1;
      }
      v9 = sub_23F618D88();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v5, v6, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for QueryDecorationEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t DecorationEntityValue;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = sub_23F618D28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(DecorationEntityValue - 8) + 64));
      return a1;
    }
    v9 = sub_23F618D88();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v5, v6, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithTake for QueryDecorationEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t DecorationEntityValue;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 20);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    sub_23F3663AC((uint64_t)a1 + v4, type metadata accessor for QueryDecorationEntityValue);
    DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_23F618D28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(DecorationEntityValue - 8) + 64));
        return a1;
      }
      v9 = sub_23F618D88();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v5, v6, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryDecorationEntity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F55C7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_23F55D940();
  return sub_23F36195C(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for QueryDecorationEntity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F55C814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F55D940();
  v0 = sub_23F44D4D4();
  return sub_23F36196C(v0, v1, v2, v3);
}

uint64_t sub_23F55C840()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for QueryDecorationEntityValue(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for QueryDecorationEntityValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_23F618D28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v8 = sub_23F618D88();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for QueryDecorationEntityValue(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_23F618D28();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_23F618D88();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

void *initializeWithCopy for QueryDecorationEntityValue(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_23F618D28();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = sub_23F618D88();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for QueryDecorationEntityValue(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for QueryDecorationEntityValue);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_23F618D28();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = sub_23F618D88();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for QueryDecorationEntityValue(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_23F618D28();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = sub_23F618D88();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for QueryDecorationEntityValue(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for QueryDecorationEntityValue);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_23F618D28();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = sub_23F618D88();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F55CD2C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F618D88();
  if (v1 <= 0x3F)
  {
    result = sub_23F618D28();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for QueryDecorationTuple(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F618C20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    sub_23F617BA0();
  }
  return a1;
}

uint64_t destroy for QueryDecorationTuple(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F618C20();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for QueryDecorationTuple(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F618C20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for QueryDecorationTuple(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F618C20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for QueryDecorationTuple(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F618C20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for QueryDecorationTuple(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F618C20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryDecorationTuple()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F55D014(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F618C20();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    sub_23F3B1A44(a1, a2, v4);
  else
    sub_23F362B80();
}

uint64_t storeEnumTagSinglePayload for QueryDecorationTuple()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F55D088()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F55D964();
  if (*(_DWORD *)(*(_QWORD *)(sub_23F618C20() - 8) + 84) == v3)
  {
    v4 = sub_23F44D4D4();
    sub_23F38370C(v4, v5, v6, v7);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
    sub_23F362B80();
  }
}

uint64_t sub_23F55D0D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F618C20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for QueryDecorationTupleParameter(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t DecorationEntityValue;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61BBA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    v11 = *(int *)(type metadata accessor for QueryDecorationEntity(0) + 20);
    v12 = &v9[v11];
    v13 = &v10[v11];
    DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v18 = sub_23F618D28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, v13, v18);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(DecorationEntityValue - 8) + 64));
        return a1;
      }
      v16 = sub_23F618D88();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v12, v13, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for QueryDecorationTupleParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v4 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = v5 + *(int *)(type metadata accessor for QueryDecorationEntity(0) + 20);
  type metadata accessor for QueryDecorationEntityValue(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v8 = sub_23F618D28();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v8 = sub_23F618D88();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
}

uint64_t initializeWithCopy for QueryDecorationTupleParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t DecorationEntityValue;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = *v9;
  v10 = *(int *)(type metadata accessor for QueryDecorationEntity(0) + 20);
  v11 = (void *)(v8 + v10);
  v12 = (char *)v9 + v10;
  DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v16 = sub_23F618D28();
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, v12, v16);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(DecorationEntityValue - 8) + 64));
      return a1;
    }
    v15 = sub_23F618D88();
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v11, v12, v15);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for QueryDecorationTupleParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t DecorationEntity;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t DecorationEntityValue;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
  if (a1 != a2)
  {
    v11 = *(int *)(DecorationEntity + 20);
    v12 = (void *)(v8 + v11);
    v13 = (const void *)(v9 + v11);
    sub_23F3663AC((uint64_t)v12, type metadata accessor for QueryDecorationEntityValue);
    DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v17 = sub_23F618D28();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v12, v13, v17);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(DecorationEntityValue - 8) + 64));
        return a1;
      }
      v16 = sub_23F618D88();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v12, v13, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for QueryDecorationTupleParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t DecorationEntityValue;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = *v9;
  v10 = *(int *)(type metadata accessor for QueryDecorationEntity(0) + 20);
  v11 = (void *)(v8 + v10);
  v12 = (char *)v9 + v10;
  DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v16 = sub_23F618D28();
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(DecorationEntityValue - 8) + 64));
      return a1;
    }
    v15 = sub_23F618D88();
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v11, v12, v15);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for QueryDecorationTupleParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t DecorationEntity;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t DecorationEntityValue;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
  if (a1 != a2)
  {
    v11 = *(int *)(DecorationEntity + 20);
    v12 = (void *)(v8 + v11);
    v13 = (const void *)(v9 + v11);
    sub_23F3663AC((uint64_t)v12, type metadata accessor for QueryDecorationEntityValue);
    DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v17 = sub_23F618D28();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v13, v17);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(DecorationEntityValue - 8) + 64));
        return a1;
      }
      v16 = sub_23F618D88();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v12, v13, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryDecorationTupleParameter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F55D7B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t DecorationEntity;
  uint64_t v8;

  v6 = sub_23F61BBA8();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    DecorationEntity = v6;
    v8 = a1;
  }
  else
  {
    DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
    v8 = a1 + *(int *)(a3 + 20);
  }
  return sub_23F3B1A44(v8, a2, DecorationEntity);
}

uint64_t storeEnumTagSinglePayload for QueryDecorationTupleParameter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F55D820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t DecorationEntity;
  uint64_t v6;

  sub_23F55D964();
  v4 = sub_23F61BBA8();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == v3)
  {
    DecorationEntity = v4;
    v6 = v1;
  }
  else
  {
    DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
    v6 = v1 + *(int *)(v2 + 20);
  }
  return sub_23F38370C(v6, v0, v0, DecorationEntity);
}

uint64_t sub_23F55D878()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F61BBA8();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for QueryDecorationEntity(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23F55D8FC()
{
  return type metadata accessor for QueryDecorationEntityValue(0);
}

uint64_t sub_23F55D918(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t sub_23F55D930()
{
  return sub_23F618D88();
}

uint64_t sub_23F55D938()
{
  return sub_23F618D28();
}

uint64_t sub_23F55D940()
{
  return type metadata accessor for QueryDecorationEntityValue(0);
}

uint64_t sub_23F55D948()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F55D954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F55D964()
{
  return 0;
}

uint64_t sub_23F55D97C()
{
  return sub_23F617BA0();
}

uint64_t sub_23F55D98C()
{
  return type metadata accessor for QueryDecorationEntity(0);
}

uint64_t sub_23F55D9A4()
{
  uint64_t v0;

  return v0 + *(int *)(type metadata accessor for QueryDecorationEntity(0) + 20);
}

uint64_t sub_23F55D9C0()
{
  return sub_23F618BB4();
}

uint64_t sub_23F55D9C8()
{
  return 0;
}

uint64_t sub_23F55D9DC()
{
  return sub_23F61CD3C();
}

uint64_t sub_23F55D9E4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F55D9EC()
{
  return sub_23F61C04C();
}

uint64_t sub_23F55D9F8()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_23F55DA04(__int128 *a1)
{
  uint64_t v1;

  sub_23F55BF30(a1, v1);
}

void sub_23F55DA0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_23F362600(a1, v1, v2);
}

uint64_t destroy for QueryDecorationTupleBuilder()
{
  return swift_release();
}

void _s30IntelligenceFlowPlannerRuntime27QueryDecorationTupleBuilderVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  sub_23F362928();
}

uint64_t assignWithCopy for QueryDecorationTupleBuilder(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for QueryDecorationTupleBuilder(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for QueryDecorationTupleBuilder()
{
  return &type metadata for QueryDecorationTupleBuilder;
}

uint64_t initializeBufferWithCopyOfBuffer for QueryDecorationTupleBuilderOutput(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for QueryDecorationTupleBuilderOutput(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for QueryDecorationTupleBuilderOutput(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for QueryDecorationTupleBuilderOutput()
{
  return &type metadata for QueryDecorationTupleBuilderOutput;
}

uint64_t sub_23F55DBB0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD), void (*a7)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t DecorationEntity;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, _QWORD, uint64_t);
  uint64_t v69;
  uint64_t v70;

  v67 = a2;
  v68 = a7;
  v10 = v7;
  sub_23F35D2E8(&qword_256E7ADE0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F38F964();
  v17 = v16 - v15;
  DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
  v55 = *(_QWORD *)(DecorationEntity - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F3834D0();
  v63 = v19;
  MEMORY[0x24BDAC7A8](v20);
  v54 = (uint64_t)v53 - v21;
  v66 = sub_23F35D2E8(a5);
  sub_23F362850();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v65 = (char *)v53 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (_QWORD *)((char *)v53 - v28);
  v30 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  v62 = v30;
  v53[1] = a1;
  v70 = a4;
  if (v30)
  {
    v61 = v17;
    v31 = 0;
    v60 = a6(0);
    sub_23F383E04();
    v33 = a1 + v32;
    v56 = *(_QWORD *)(v34 + 72);
    v69 = MEMORY[0x24BEE4AF8];
    v58 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
    v59 = v34;
    v57 = a3 & 1;
    while (1)
    {
      v35 = v66;
      v36 = a5;
      v37 = &v65[*(int *)(v66 + 48)];
      v38 = (uint64_t)v25;
      v39 = v60;
      v58(v37, v33, v60);
      v40 = (char *)v29 + *(int *)(v35 + 48);
      *v29 = v31;
      v41 = v37;
      a5 = v36;
      v42 = v39;
      v25 = (char *)v38;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v40, v41, v42);
      sub_23F4881FC((uint64_t)v29, v38, v36);
      v43 = v61;
      v68(v38, v67, v57, v70);
      if (v10)
        break;
      sub_23F561B70();
      if (sub_23F36195C(v43, 1, DecorationEntity) == 1)
      {
        sub_23F3625D8(v43, &qword_256E7ADE0);
      }
      else
      {
        v44 = v54;
        sub_23F488228(v43, v54, type metadata accessor for QueryDecorationEntity);
        sub_23F488228(v44, v63, type metadata accessor for QueryDecorationEntity);
        v45 = v69;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F561B64();
          v45 = v49;
        }
        v46 = *(_QWORD *)(v45 + 16);
        if (v46 >= *(_QWORD *)(v45 + 24) >> 1)
        {
          sub_23F561B64();
          v45 = v50;
        }
        *(_QWORD *)(v45 + 16) = v46 + 1;
        sub_23F383E04();
        v69 = v45;
        sub_23F488228(v63, v45 + v47 + *(_QWORD *)(v48 + 72) * v46, type metadata accessor for QueryDecorationEntity);
        a5 = v36;
      }
      ++v31;
      v33 += v56;
      if (v62 == v31)
        goto LABEL_14;
    }
    sub_23F561B70();
    swift_release();
    v51 = v69;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v69 = MEMORY[0x24BEE4AF8];
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    return v69;
  }
  return v51;
}

uint64_t sub_23F55DF28(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;

  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = sub_23F617BA0();
  v12 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * i);
    sub_23F617BA0();
    a1(&v18);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v6 + 8 * v12);
    if (!v16)
      break;
LABEL_17:
    v9 = (v16 - 1) & v16;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 4;
  if (v12 + 4 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23F55E0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t (*v32)(_QWORD);
  void (*v33)(uint64_t, uint64_t, _QWORD, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  _BOOL4 v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t i;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v65 = a1;
  v9 = sub_23F618BB4();
  v70 = *(_QWORD *)(v9 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3834D0();
  v69 = v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v63 - v13;
  v75 = sub_23F618C20();
  v73 = *(_QWORD *)(v75 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F38F964();
  v18 = (char *)(v17 - v16);
  v19 = sub_23F619E98();
  v67 = *(_QWORD *)(v19 - 8);
  v68 = v19;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F38F964();
  v23 = v22 - v21;
  sub_23F561B38();
  sub_23F55E5C8(v24);
  sub_23F561B38();
  v26 = sub_23F55E934(v25);
  swift_retain();
  sub_23F561B38();
  v74 = sub_23F55DBB0(v27, v28, v29, v30, v31, v32, v33);
  swift_bridgeObjectRelease();
  swift_retain();
  v71 = a4;
  v72 = a6;
  v64 = a5;
  v34 = a6;
  v35 = v65;
  sub_23F55DBB0(v26, a4, a5, v34, &qword_256E7ADE8, (uint64_t (*)(_QWORD))MEMORY[0x24BE577B0], (void (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23F55F1E8);
  swift_bridgeObjectRelease();
  v77 = v74;
  sub_23F387750();
  v36 = v77;
  sub_23F619130();
  sub_23F617BA0();
  sub_23F617BA0();
  v66 = v23;
  v37 = sub_23F619E8C();
  v38 = sub_23F61C61C();
  v39 = os_log_type_enabled(v37, v38);
  v74 = v36;
  if (v39)
  {
    v40 = sub_23F561B7C();
    v63 = sub_23F561B7C();
    v77 = v63;
    *(_DWORD *)v40 = 136315650;
    sub_23F37AE00(0xD000000000000024, 0x800000023F639B30, &v77);
    v76 = v41;
    sub_23F61C790();
    *(_WORD *)(v40 + 12) = 2048;
    sub_23F561B48(*(_QWORD *)(v36 + 16));
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 22) = 2048;
    sub_23F561B48(*(_QWORD *)(v35 + 16));
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F35A000, v37, v38, "[%s] total entity count: %ld total tool count: %ld", (uint8_t *)v40, 0x20u);
    swift_arrayDestroy();
    sub_23F366530();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
  v42 = *(_QWORD *)(v35 + 16);
  v43 = MEMORY[0x24BEE4AF8];
  v44 = v75;
  if (v42)
  {
    sub_23F383E04();
    v46 = v35 + v45;
    v48 = *(_QWORD *)(v47 + 72);
    v67 = *(_QWORD *)(v47 + 16);
    v68 = v48;
    LODWORD(v66) = *MEMORY[0x24BE57548];
    sub_23F617BA0();
    v49 = MEMORY[0x24BEE4AF8];
    v50 = v64 & 1;
    do
    {
      ((void (*)(char *, uint64_t, uint64_t))v67)(v18, v46, v44);
      sub_23F618BCC();
      v52 = v69;
      v51 = v70;
      (*(void (**)(uint64_t, char *, uint64_t))(v70 + 16))(v69, v14, v9);
      v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 88))(v52, v9);
      v54 = v53 != v66;
      v55 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
      v55(v52, v9);
      v55((uint64_t)v14, v9);
      v56 = sub_23F55F6C8(v18, v74, v54, v71, v50, v72);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F561B58();
        v49 = v58;
      }
      v57 = *(_QWORD *)(v49 + 16);
      if (v57 >= *(_QWORD *)(v49 + 24) >> 1)
      {
        sub_23F561B58();
        v49 = v59;
      }
      *(_QWORD *)(v49 + 16) = v57 + 1;
      *(_QWORD *)(v49 + 8 * v57 + 32) = v56;
      v44 = v75;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v18, v75);
      v46 += v68;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
    v43 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v49 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v77 = v43;
  v60 = *(_QWORD *)(v49 + 16);
  if (v60)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v60; ++i)
    {
      sub_23F617BA0();
      sub_23F387734();
    }
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23F55E5C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;

  v2 = sub_23F619E98();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F618D88();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v41 = MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  v36 = v14;
  if (v14)
  {
    v33 = v5;
    v34 = v3;
    v35 = v2;
    v15 = *(unsigned __int8 *)(v7 + 80);
    v16 = *(_QWORD *)(v7 + 72);
    v32 = a1;
    v37 = (v15 + 32) & ~v15;
    v38 = v7;
    v17 = a1 + v37;
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v18 = v14;
    do
    {
      v39(v12, v17, v6);
      v19 = *(_QWORD *)(sub_23F618D70() + 16);
      swift_bridgeObjectRelease();
      if (v19)
      {
        v20 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v20(v10, v12, v6);
        v21 = v41;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37BE90();
          v21 = v41;
        }
        v22 = *(_QWORD *)(v21 + 16);
        if (v22 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_23F37BE90();
          v21 = v41;
        }
        *(_QWORD *)(v21 + 16) = v22 + 1;
        v20((char *)(v21 + v37 + v22 * v16), v10, v6);
        v41 = v21;
        v7 = v38;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      }
      v17 += v16;
      --v18;
    }
    while (v18);
    v13 = v41;
    v3 = v34;
    v2 = v35;
    v5 = v33;
  }
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v13 + 16);
  v24 = (void (*)(char *, uint64_t, uint64_t))(v36 - v23);
  if (v36 > v23)
  {
    sub_23F619130();
    v25 = sub_23F619E8C();
    v26 = sub_23F61C628();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v39 = v24;
      v28 = v27;
      v29 = swift_slowAlloc();
      v41 = v29;
      *(_DWORD *)v28 = 136315394;
      sub_23F37AE00(0x70537265746C6966, 0xEF293A5F28736E61, &v41);
      v40 = v30;
      sub_23F61C790();
      *(_WORD *)(v28 + 12) = 2048;
      v40 = v39;
      sub_23F61C790();
      _os_log_impl(&dword_23F35A000, v25, v26, "[%s] %ld Entity span objects had no matchMetadata. They will be filtered.", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v29, -1, -1);
      MEMORY[0x242670B70](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v13;
}

uint64_t sub_23F55E934(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;

  v2 = sub_23F619E98();
  v39 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F35D2E8(&qword_256E79900);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F618D28();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v34 - v13;
  v15 = MEMORY[0x24BEE4AF8];
  v45 = MEMORY[0x24BEE4AF8];
  v16 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  if (v16)
  {
    v37 = v4;
    v38 = v2;
    v17 = *(unsigned __int8 *)(v9 + 80);
    v18 = *(_QWORD *)(v9 + 72);
    v35 = v16;
    v36 = a1;
    v41 = (v17 + 32) & ~v17;
    v42 = v12;
    v19 = a1 + v41;
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v40 = v9;
    do
    {
      v43(v14, v19, v8);
      sub_23F618D1C();
      v20 = sub_23F618AD0();
      v21 = sub_23F36195C((uint64_t)v7, 1, v20);
      sub_23F3625D8((uint64_t)v7, &qword_256E79900);
      if (v21 == 1)
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      }
      else
      {
        v22 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v22(v12, v14, v8);
        v23 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37BEC4();
          v23 = v45;
        }
        v24 = *(_QWORD *)(v23 + 16);
        if (v24 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          sub_23F37BEC4();
          v23 = v45;
        }
        *(_QWORD *)(v23 + 16) = v24 + 1;
        v25 = v23 + v41 + v24 * v18;
        v12 = v42;
        v22((char *)v25, v42, v8);
        v45 = v23;
        v9 = v40;
      }
      v19 += v18;
      --v16;
    }
    while (v16);
    v15 = v45;
    v4 = v37;
    v2 = v38;
    v16 = v35;
  }
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v15 + 16);
  v27 = v16 - v26;
  if (v16 > v26)
  {
    sub_23F619130();
    v28 = sub_23F619E8C();
    v29 = sub_23F61C628();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v45 = v31;
      *(_DWORD *)v30 = 136315394;
      sub_23F37AE00(0xD00000000000001ALL, 0x800000023F639BD0, &v45);
      v44 = v32;
      sub_23F61C790();
      *(_WORD *)(v30 + 12) = 2048;
      v44 = v27;
      sub_23F61C790();
      _os_log_impl(&dword_23F35A000, v28, v29, "[%s] %ld Utterance context objects had no score. They will be filtered.", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v31, -1, -1);
      MEMORY[0x242670B70](v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v39 + 8))(v4, v2);
  }
  return v15;
}

uint64_t sub_23F55ED08@<X0>(uint64_t *a1@<X0>, int a2@<W2>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t DecorationEntity;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  int v61;
  char *v62;
  uint64_t *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;

  v64 = a3;
  v61 = a2;
  v4 = sub_23F619E98();
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v58 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v6);
  v59 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E7ADF0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v57 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v54 = (uint64_t *)((char *)&v53 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v60 = (char *)&v53 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (uint64_t *)((char *)&v53 - v16);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v53 - v19;
  v21 = *(int *)(v18 + 48);
  v22 = (char *)&v53 + v21 - v19;
  v23 = (char *)a1 + v21;
  v63 = a1;
  v24 = *a1;
  *(uint64_t *)((char *)&v53 - v19) = v24;
  v25 = sub_23F618D88();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v62 = v23;
  v27(v22, v23, v25);
  if ((v61 & 1) != 0)
  {
    sub_23F3625D8((uint64_t)v20, &qword_256E7ADF0);
LABEL_6:
    v45 = &v60[*(int *)(v8 + 48)];
    v46 = *v63;
    v27(v45, v62, v25);
    DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
    v48 = v64;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))((char *)v64 + *(int *)(DecorationEntity + 20), v45, v25);
    type metadata accessor for QueryDecorationEntityValue(0);
    swift_storeEnumTagMultiPayload();
    *v48 = v46;
    v49 = (uint64_t)v48;
    v50 = 0;
    v51 = DecorationEntity;
    return sub_23F36196C(v49, v50, 1, v51);
  }
  v28 = (char *)v17 + *(int *)(v8 + 48);
  *v17 = v24;
  v27(v28, v22, v25);
  v29 = (uint64_t)v59;
  sub_23F618D64();
  sub_23F3625D8((uint64_t)v20, &qword_256E7ADF0);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  v30 = sub_23F61B92C();
  LODWORD(v28) = sub_23F36195C(v29, 1, v30);
  sub_23F3625D8(v29, &qword_256E701F0);
  if ((_DWORD)v28 != 1)
    goto LABEL_6;
  v31 = v58;
  sub_23F619130();
  v32 = (uint64_t)v54;
  v33 = (char *)v54 + *(int *)(v8 + 48);
  v34 = v62;
  *v54 = *v63;
  v27(v33, v34, v25);
  v35 = v57;
  sub_23F4881FC(v32, v57, &qword_256E7ADF0);
  v36 = sub_23F619E8C();
  v37 = sub_23F61C628();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v66 = v39;
    *(_DWORD *)v38 = 136315394;
    sub_23F37AE00(0xD000000000000024, 0x800000023F639B30, &v66);
    v65 = v40;
    sub_23F61C790();
    *(_WORD *)(v38 + 12) = 2080;
    v41 = v57;
    sub_23F3612C0(&qword_256E7ADF8, (uint64_t (*)(uint64_t))MEMORY[0x24BE578B8], MEMORY[0x24BE578C8]);
    v42 = sub_23F61C034();
    sub_23F37AE00(v42, v43, &v66);
    v65 = v44;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F3625D8(v41, &qword_256E7ADF0);
    _os_log_impl(&dword_23F35A000, v36, v37, "[%s] An entity span had no typedValue %s Will filter it and continue", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v39, -1, -1);
    MEMORY[0x242670B70](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v56);
  }
  else
  {
    sub_23F3625D8(v35, &qword_256E7ADF0);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v56);
  }
  v51 = type metadata accessor for QueryDecorationEntity(0);
  v49 = (uint64_t)v64;
  v50 = 1;
  return sub_23F36196C(v49, v50, 1, v51);
}

uint64_t sub_23F55F1E8@<X0>(uint64_t *a1@<X0>, int a2@<W2>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t DecorationEntity;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  int v61;
  char *v62;
  uint64_t *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;

  v64 = a3;
  v61 = a2;
  v4 = sub_23F619E98();
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v58 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v6);
  v59 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E7ADE8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v57 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v54 = (uint64_t *)((char *)&v53 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v60 = (char *)&v53 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (uint64_t *)((char *)&v53 - v16);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v53 - v19;
  v21 = *(int *)(v18 + 48);
  v22 = (char *)&v53 + v21 - v19;
  v23 = (char *)a1 + v21;
  v63 = a1;
  v24 = *a1;
  *(uint64_t *)((char *)&v53 - v19) = v24;
  v25 = sub_23F618D28();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v62 = v23;
  v27(v22, v23, v25);
  if ((v61 & 1) != 0)
  {
    sub_23F3625D8((uint64_t)v20, &qword_256E7ADE8);
LABEL_6:
    v45 = &v60[*(int *)(v8 + 48)];
    v46 = *v63;
    v27(v45, v62, v25);
    DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
    v48 = v64;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))((char *)v64 + *(int *)(DecorationEntity + 20), v45, v25);
    type metadata accessor for QueryDecorationEntityValue(0);
    swift_storeEnumTagMultiPayload();
    *v48 = v46;
    v49 = (uint64_t)v48;
    v50 = 0;
    v51 = DecorationEntity;
    return sub_23F36196C(v49, v50, 1, v51);
  }
  v28 = (char *)v17 + *(int *)(v8 + 48);
  *v17 = v24;
  v27(v28, v22, v25);
  v29 = (uint64_t)v59;
  sub_23F618CE0();
  sub_23F3625D8((uint64_t)v20, &qword_256E7ADE8);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  v30 = sub_23F61B92C();
  LODWORD(v28) = sub_23F36195C(v29, 1, v30);
  sub_23F3625D8(v29, &qword_256E701F0);
  if ((_DWORD)v28 != 1)
    goto LABEL_6;
  v31 = v58;
  sub_23F619130();
  v32 = (uint64_t)v54;
  v33 = (char *)v54 + *(int *)(v8 + 48);
  v34 = v62;
  *v54 = *v63;
  v27(v33, v34, v25);
  v35 = v57;
  sub_23F4881FC(v32, v57, &qword_256E7ADE8);
  v36 = sub_23F619E8C();
  v37 = sub_23F61C628();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v66 = v39;
    *(_DWORD *)v38 = 136315394;
    sub_23F37AE00(0xD000000000000024, 0x800000023F639B30, &v66);
    v65 = v40;
    sub_23F61C790();
    *(_WORD *)(v38 + 12) = 2080;
    v41 = v57;
    sub_23F3612C0(&qword_256E71D40, (uint64_t (*)(uint64_t))MEMORY[0x24BE577B0], MEMORY[0x24BE577C0]);
    v42 = sub_23F61C034();
    sub_23F37AE00(v42, v43, &v66);
    v65 = v44;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F3625D8(v41, &qword_256E7ADE8);
    _os_log_impl(&dword_23F35A000, v36, v37, "[%s] An utterance context had no typedValue %s Will filter it and continue", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v39, -1, -1);
    MEMORY[0x242670B70](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v56);
  }
  else
  {
    sub_23F3625D8(v35, &qword_256E7ADE8);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v56);
  }
  v51 = type metadata accessor for QueryDecorationEntity(0);
  v49 = (uint64_t)v64;
  v50 = 1;
  return sub_23F36196C(v49, v50, 1, v51);
}

uint64_t sub_23F55F6C8(char *a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  int v46;
  BOOL v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  int EnumCaseMultiPayload;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(char *, char *, uint64_t);
  char *v91;
  uint64_t v92;
  char v93;
  void (*v94)(char *, uint64_t);
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  void (*v117)(char *, char *, uint64_t);
  char *v118;
  uint64_t v119;
  NSObject *v120;
  os_log_type_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v134;
  NSObject *v135;
  os_log_type_t v136;
  uint8_t *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t DecorationTuple;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  int v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t DecorationTupleParameter;
  uint64_t DecorationEntityValue;
  char *v177;
  uint64_t DecorationEntity;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  void (*v183)(char *, unint64_t, uint64_t);
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  void (*v195)(char *, char *, uint64_t);
  uint64_t v196[2];
  uint64_t v197;
  _QWORD v198[5];

  v194 = a6;
  v164 = a5;
  v153 = a4;
  v155 = a3;
  v160 = a2;
  DecorationTuple = type metadata accessor for QueryDecorationTuple(0);
  v7 = MEMORY[0x24BDAC7A8](DecorationTuple);
  v148 = (char *)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v147 = (char *)&v140 - v9;
  v146 = sub_23F618C20();
  v152 = *(_QWORD *)(v146 - 8);
  MEMORY[0x24BDAC7A8](v146);
  v145 = (char *)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_23F61B95C();
  v165 = *(_QWORD *)(v163 - 8);
  MEMORY[0x24BDAC7A8](v163);
  v173 = (char *)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_23F618D28();
  v171 = *(_QWORD *)(v172 - 8);
  MEMORY[0x24BDAC7A8](v172);
  v170 = (char *)&v140 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = sub_23F618D88();
  v168 = *(_QWORD *)(v169 - 8);
  MEMORY[0x24BDAC7A8](v169);
  v167 = (char *)&v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
  MEMORY[0x24BDAC7A8](DecorationEntityValue);
  v174 = (char *)&v140 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v15);
  v189 = (char *)&v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = sub_23F61B9EC();
  v195 = *(void (**)(char *, char *, uint64_t))(v193 - 8);
  v17 = MEMORY[0x24BDAC7A8](v193);
  v190 = (char *)&v140 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v162 = (char *)&v140 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v191 = (char *)&v140 - v21;
  DecorationTupleParameter = type metadata accessor for QueryDecorationTupleParameter(0);
  v182 = *(_QWORD *)(DecorationTupleParameter - 8);
  v22 = MEMORY[0x24BDAC7A8](DecorationTupleParameter);
  v177 = (char *)&v140 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v181 = (char *)&v140 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v180 = (uint64_t)&v140 - v26;
  v184 = sub_23F61BBA8();
  v159 = *(_QWORD *)(v184 - 8);
  MEMORY[0x24BDAC7A8](v184);
  v185 = (char *)&v140 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_23F619E98();
  v150 = *(_QWORD *)(v151 - 8);
  v28 = MEMORY[0x24BDAC7A8](v151);
  v144 = (char *)&v140 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v192 = (char *)&v140 - v30;
  v31 = sub_23F61BCE0();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v140 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23F61B5D8();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v140 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23F618BB4();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v140 = (char *)&v140 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v140 - v43;
  v154 = a1;
  sub_23F618BCC();
  v45 = v40;
  v46 = (*(uint64_t (**)(char *, uint64_t))(v40 + 88))(v44, v39);
  v47 = v46 == *MEMORY[0x24BE57550];
  v142 = v39;
  v141 = v40;
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v38, v44, v35);
    v48 = sub_23F61B530();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
    v49 = v164;
LABEL_8:
    v50 = (uint64_t)v174;
    v51 = (uint64_t)v189;
    v52 = v162;
    v53 = DecorationTupleParameter;
LABEL_9:
    v54 = (uint64_t)v177;
    goto LABEL_10;
  }
  if (v46 == *MEMORY[0x24BE57558])
  {
    (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v44, v31);
    v49 = v164;
    v48 = sub_23F560A94((uint64_t)v34);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    goto LABEL_8;
  }
  v49 = v164;
  if (v46 == *MEMORY[0x24BE57548])
  {
    (*(void (**)(char *, uint64_t))(v45 + 96))(v44, v39);
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v38, v44, v35);
    v48 = sub_23F61B530();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
    goto LABEL_8;
  }
  v53 = DecorationTupleParameter;
  if (v46 == *MEMORY[0x24BE57540])
  {
    (*(void (**)(char *, uint64_t))(v45 + 96))(v44, v39);
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v38, v44, v35);
    v48 = sub_23F61B530();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
LABEL_62:
    v50 = (uint64_t)v174;
    v51 = (uint64_t)v189;
    v52 = v162;
    goto LABEL_9;
  }
  if (v46 == *MEMORY[0x24BE57568])
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v39);
    v48 = MEMORY[0x24BEE4AF8];
    goto LABEL_62;
  }
  v134 = v192;
  sub_23F619130();
  v135 = sub_23F619E8C();
  v136 = sub_23F61C628();
  if (os_log_type_enabled(v135, v136))
  {
    v137 = (uint8_t *)swift_slowAlloc();
    v138 = swift_slowAlloc();
    v196[0] = v138;
    *(_DWORD *)v137 = 136315138;
    sub_23F37AE00(0xD00000000000002FLL, 0x800000023F639B60, v196);
    v198[4] = v139;
    sub_23F61C790();
    _os_log_impl(&dword_23F35A000, v135, v136, "[%s] Unsupported RetrievedTool definition type found", v137, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v138, -1, -1);
    MEMORY[0x242670B70](v137, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v150 + 8))(v134, v151);
  v50 = (uint64_t)v174;
  v51 = (uint64_t)v189;
  v52 = v162;
  v53 = DecorationTupleParameter;
  v54 = (uint64_t)v177;
  (*(void (**)(char *, uint64_t))(v141 + 8))(v44, v142);
  v48 = MEMORY[0x24BEE4AF8];
LABEL_10:
  v55 = v163;
  v158 = *(_QWORD *)(v48 + 16);
  if (v158)
  {
    v56 = 0;
    v57 = (*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
    v143 = v48;
    v157 = v48 + v57;
    v188 = *(_QWORD *)(v160 + 16);
    v156 = *(_QWORD *)(v159 + 72);
    v183 = *(void (**)(char *, unint64_t, uint64_t))(v159 + 16);
    v166 = MEMORY[0x24BEE4AF8];
    v58 = v191;
    v59 = v184;
    v60 = v185;
    while (1)
    {
      v161 = v56;
      v183(v60, v157 + v156 * v56, v59);
      if (v188)
        break;
      v192 = (char *)MEMORY[0x24BEE4AF8];
LABEL_41:
      v99 = v166;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377E44();
        v99 = v104;
      }
      v166 = v99;
      v100 = *(_QWORD *)(v99 + 16);
      v101 = v161;
      if (v100 >= *(_QWORD *)(v99 + 24) >> 1)
      {
        sub_23F377E44();
        v101 = v161;
        v166 = v105;
      }
      v102 = v166;
      *(_QWORD *)(v166 + 16) = v100 + 1;
      *(_QWORD *)(v102 + 8 * v100 + 32) = v192;
      v60 = v185;
      v59 = v184;
      v103 = v101 + 1;
      (*(void (**)(char *, uint64_t))(v159 + 8))(v185, v184);
      v56 = v103;
      v47 = v103 == v158;
      v51 = (uint64_t)v189;
      if (v47)
      {
        swift_bridgeObjectRelease();
        goto LABEL_49;
      }
    }
    DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
    v61 = *(_QWORD *)(DecorationEntity - 8);
    v187 = v160 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
    v186 = *(_QWORD *)(v61 + 72);
    sub_23F617BA0();
    v62 = 0;
    v192 = (char *)MEMORY[0x24BEE4AF8];
    v63 = v165;
    while (1)
    {
      v194 = v62;
      v64 = v187 + v186 * v62;
      if ((v49 & 1) != 0)
        goto LABEL_15;
      v71 = *(int *)(DecorationEntity + 20);
      v179 = v187 + v186 * v62;
      sub_23F488248(v64 + v71, v50, type metadata accessor for QueryDecorationEntityValue);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (!EnumCaseMultiPayload)
        break;
      if (EnumCaseMultiPayload == 1)
      {
        v73 = v171;
        v74 = v170;
        v75 = v172;
        (*(void (**)(char *, uint64_t, uint64_t))(v171 + 32))(v170, v50, v172);
        sub_23F618CE0();
LABEL_24:
        v76 = v74;
        v51 = (uint64_t)v189;
        (*(void (**)(char *, uint64_t))(v73 + 8))(v76, v75);
        goto LABEL_26;
      }
      v77 = sub_23F61B92C();
      sub_23F36196C(v51, 1, 1, v77);
LABEL_26:
      v78 = sub_23F61B92C();
      if (sub_23F36195C(v51, 1, v78) == 1)
      {
        sub_23F3625D8(v51, &qword_256E701F0);
      }
      else
      {
        sub_23F61B8CC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v51, v78);
        v79 = v58;
        v80 = v58;
        v81 = v193;
        v82 = (*((uint64_t (**)(char *, char *, uint64_t))v195 + 4))(v79, v52, v193);
        v83 = v173;
        MEMORY[0x24266F0AC](v82);
        v84 = sub_23F61B938();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v83, v55);
        if (*(_QWORD *)(v84 + 16))
        {
          sub_23F3612C0(&qword_256E6FDB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D20], MEMORY[0x24BEB9D38]);
          v85 = sub_23F61C040();
          v86 = -1 << *(_BYTE *)(v84 + 32);
          v87 = v85 & ~v86;
          if (((*(_QWORD *)(v84 + 56 + ((v87 >> 3) & 0xFFFFFFFFFFFFF8)) >> v87) & 1) != 0)
          {
            v88 = ~v86;
            v89 = *((_QWORD *)v195 + 9);
            v90 = (uint64_t (*)(char *, char *, uint64_t))*((_QWORD *)v195 + 2);
            while (1)
            {
              v91 = v190;
              v92 = v193;
              v90(v190, (char *)(*(_QWORD *)(v84 + 48) + v89 * v87), v193);
              sub_23F3612C0(&qword_256E70168, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D20], MEMORY[0x24BEB9D40]);
              v93 = sub_23F61C0A0();
              v94 = (void (*)(char *, uint64_t))*((_QWORD *)v195 + 1);
              v94(v91, v92);
              if ((v93 & 1) != 0)
                break;
              v87 = (v87 + 1) & v88;
              if (((*(_QWORD *)(v84 + 56 + ((v87 >> 3) & 0xFFFFFFFFFFFFF8)) >> v87) & 1) == 0)
              {
                swift_bridgeObjectRelease();
                v95 = v191;
                v94(v191, v193);
                v58 = v95;
                v49 = v164;
                v55 = v163;
                v63 = v165;
                v50 = (uint64_t)v174;
                v51 = (uint64_t)v189;
                v52 = v162;
                goto LABEL_35;
              }
            }
            swift_bridgeObjectRelease();
            v96 = v191;
            v94(v191, v193);
            v58 = v96;
            v49 = v164;
            v55 = v163;
            v63 = v165;
            v50 = (uint64_t)v174;
            v52 = v162;
            v53 = DecorationTupleParameter;
            v54 = (uint64_t)v177;
            v64 = v179;
LABEL_15:
            v65 = v181;
            v66 = v64;
            v183(v181, (unint64_t)v185, v184);
            sub_23F488248(v66, (uint64_t)&v65[*(int *)(v53 + 20)], type metadata accessor for QueryDecorationEntity);
            v67 = (uint64_t)v65;
            v68 = v180;
            sub_23F488228(v67, v180, type metadata accessor for QueryDecorationTupleParameter);
            sub_23F488228(v68, v54, type metadata accessor for QueryDecorationTupleParameter);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23F377E58();
              v192 = v97;
            }
            v69 = *((_QWORD *)v192 + 2);
            if (v69 >= *((_QWORD *)v192 + 3) >> 1)
            {
              sub_23F377E58();
              v192 = v98;
            }
            v70 = v192;
            *((_QWORD *)v192 + 2) = v69 + 1;
            sub_23F488228(v54, (uint64_t)&v70[((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80))+ *(_QWORD *)(v182 + 72) * v69], type metadata accessor for QueryDecorationTupleParameter);
            v51 = (uint64_t)v189;
            goto LABEL_37;
          }
        }
        swift_bridgeObjectRelease();
        (*((void (**)(char *, uint64_t))v195 + 1))(v80, v81);
        v50 = (uint64_t)v174;
        v51 = (uint64_t)v189;
        v58 = v80;
LABEL_35:
        v53 = DecorationTupleParameter;
      }
      v54 = (uint64_t)v177;
LABEL_37:
      v62 = v194 + 1;
      if (v194 + 1 == v188)
      {
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
    }
    v73 = v168;
    v74 = v167;
    v75 = v169;
    (*(void (**)(char *, uint64_t, uint64_t))(v168 + 32))(v167, v50, v169);
    sub_23F618D64();
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  v166 = MEMORY[0x24BEE4AF8];
LABEL_49:
  v106 = swift_allocObject();
  v107 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v106 + 16) = MEMORY[0x24BEE4B08];
  v108 = swift_allocObject();
  *(_QWORD *)(v108 + 16) = 0;
  v109 = swift_allocObject();
  *(_BYTE *)(v109 + 16) = 0;
  v110 = v166;
  if ((v155 & 1) != 0)
  {
    sub_23F617BA0();
    sub_23F473180(v196, MEMORY[0x24BEE4B08]);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v108 + 16) = 1;
  }
  else
  {
    sub_23F617BA0();
  }
  sub_23F560CA8(v107, 0, v155 & 1, v110, v106, v108, v153, v109);
  swift_beginAccess();
  v111 = *(_QWORD *)(v106 + 16);
  swift_beginAccess();
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v112 = swift_release();
  v198[0] = v107;
  MEMORY[0x24BDAC7A8](v112);
  *(&v140 - 2) = (char *)v198;
  v113 = v154;
  *(&v140 - 1) = v154;
  sub_23F55DF28(sub_23F561ACC, (uint64_t)(&v140 - 4), v111);
  swift_bridgeObjectRelease();
  v114 = *(_QWORD *)(v111 + 16);
  swift_bridgeObjectRelease();
  if (!v114)
  {
    v115 = v144;
    sub_23F619130();
    v116 = v152;
    v117 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
    v118 = v145;
    v119 = v146;
    v117(v145, v113, v146);
    v120 = sub_23F619E8C();
    v121 = sub_23F61C61C();
    if (os_log_type_enabled(v120, v121))
    {
      v122 = swift_slowAlloc();
      v194 = swift_slowAlloc();
      v197 = v194;
      *(_DWORD *)v122 = 136315394;
      sub_23F37AE00(0xD00000000000002FLL, 0x800000023F639B60, &v197);
      v196[0] = v123;
      sub_23F61C790();
      *(_WORD *)(v122 + 12) = 2080;
      v195 = v117;
      v124 = v140;
      sub_23F618BCC();
      RetrievedTool.Definition.toCandidateIdentifier()();
      (*(void (**)(char *, uint64_t))(v141 + 8))(v124, v142);
      v125 = v118;
      v126 = v196[0];
      v127 = v196[1];
      swift_bridgeObjectRelease();
      sub_23F37AE00(v126, v127, &v197);
      v196[0] = v128;
      v107 = MEMORY[0x24BEE4B08];
      sub_23F61C790();
      swift_bridgeObjectRelease();
      v129 = v125;
      v117 = v195;
      (*(void (**)(char *, uint64_t))(v152 + 8))(v129, v119);
      _os_log_impl(&dword_23F35A000, v120, v121, "QDRanker [%s] tool: %s No valid tuples found", (uint8_t *)v122, 0x16u);
      v130 = v194;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v130, -1, -1);
      MEMORY[0x242670B70](v122, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v116 + 8))(v118, v119);
    }

    (*(void (**)(char *, uint64_t))(v150 + 8))(v115, v151);
    v131 = v148;
    v117(v148, v154, v119);
    *(_QWORD *)&v131[*(int *)(DecorationTuple + 20)] = v107;
    v132 = (uint64_t)v147;
    sub_23F472A80();
    sub_23F3663AC(v132, type metadata accessor for QueryDecorationTuple);
  }
  return v198[0];
}

uint64_t sub_23F560A94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_23F35D2E8(&qword_256E7ADD8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - v6;
  v8 = sub_23F61BCA4();
  sub_23F368858(a1, v8);
  swift_bridgeObjectRelease();
  sub_23F561AE4((uint64_t)v7, (uint64_t)v5);
  v9 = sub_23F61B518();
  if (sub_23F36195C((uint64_t)v5, 1, v9) == 1)
  {
    sub_23F3625D8((uint64_t)v5, &qword_256E7ADD8);
    v10 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v10 = sub_23F61B50C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v5, v9);
  }
  sub_23F3625D8((uint64_t)v7, &qword_256E7ADD8);
  return v10;
}

void sub_23F560BB4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t DecorationTuple;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  DecorationTuple = type metadata accessor for QueryDecorationTuple(0);
  v6 = MEMORY[0x24BDAC7A8](DecorationTuple);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v13 - v9;
  v11 = *a1;
  v12 = sub_23F618C20();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, a3, v12);
  *(_QWORD *)&v8[*(int *)(DecorationTuple + 20)] = v11;
  sub_23F617BA0();
  sub_23F472A80();
  sub_23F3663AC((uint64_t)v10, type metadata accessor for QueryDecorationTuple);
}

void sub_23F560CA8(uint64_t a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  _BYTE *v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int EnumCaseMultiPayload;
  void (**v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  int v90;
  void (**v91)(uint64_t, uint64_t);
  char *v92;
  void (**v93)(uint64_t, uint64_t);
  char *v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t DecorationEntity;
  uint64_t v121;
  uint64_t DecorationEntityValue;
  uint64_t DecorationTupleParameter;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  v113 = a8;
  v112 = a5;
  v114 = a4;
  v125 = a1;
  v111 = sub_23F618D28();
  v95 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v94 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_23F618D88();
  v102 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v92 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_23F35D2E8(&qword_256E6F7F8);
  MEMORY[0x24BDAC7A8](v118);
  v15 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(0);
  v16 = MEMORY[0x24BDAC7A8](DecorationEntityValue);
  v103 = (uint64_t)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v117 = (char *)&v85 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v108 = (uint64_t)&v85 - v20;
  DecorationTupleParameter = type metadata accessor for QueryDecorationTupleParameter(0);
  v109 = *(_QWORD *)(DecorationTupleParameter - 8);
  v21 = MEMORY[0x24BDAC7A8](DecorationTupleParameter);
  v105 = (uint64_t)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v104 = (char *)&v85 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v85 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v96 = (char *)&v85 - v28;
  v29 = sub_23F619E98();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v85 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v85 - v34;
  v107 = a6;
  v115 = (_QWORD *)(a6 + 16);
  v106 = a3;
  v124 = v15;
  if ((a3 & 1) != 0 || *(_QWORD *)(v125 + 16) == *(_QWORD *)(v114 + 16))
  {
    swift_beginAccess();
    v36 = v125;
    sub_23F617BA0();
    v37 = sub_23F473180(&v127, v36);
    swift_endAccess();
    swift_bridgeObjectRelease();
    if ((v37 & 1) != 0)
    {
      v38 = v115;
      swift_beginAccess();
      if (__OFADD__(*v38, 1))
      {
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      ++*v38;
    }
  }
  v89 = v33;
  v39 = (_BYTE *)(v113 + 16);
  v40 = v115;
  swift_beginAccess();
  if (*v40 >= a7)
  {
    sub_23F619130();
    v72 = sub_23F619E8C();
    v73 = sub_23F61C628();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = (uint8_t *)swift_slowAlloc();
      v75 = swift_slowAlloc();
      v128 = v75;
      *(_DWORD *)v74 = 136315138;
      sub_23F37AE00(0xD00000000000003CLL, 0x800000023F639B90, &v128);
      v127 = v76;
      sub_23F61C790();
      _os_log_impl(&dword_23F35A000, v72, v73, "[%s] combination limit reached. Some tuples may not be generated", v74, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v75, -1, -1);
      MEMORY[0x242670B70](v74, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v29);
    swift_beginAccess();
    *v39 = 1;
    return;
  }
  v41 = *(_QWORD *)(v114 + 16);
  if (v41 == a2)
    return;
  if (v41 <= a2)
  {
LABEL_56:
    __break(1u);
    return;
  }
  v42 = *(_QWORD *)(v114 + 8 * a2 + 32);
  v101 = *(_QWORD *)(v42 + 16);
  if (v101)
  {
    v86 = v39;
    v87 = v30;
    v88 = v29;
    v100 = v42 + ((*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80));
    sub_23F617BA0();
    swift_beginAccess();
    v43 = 0;
    v91 = (void (**)(uint64_t, uint64_t))(v95 + 8);
    v93 = (void (**)(uint64_t, uint64_t))(v102 + 8);
    v121 = v125 + 56;
    v97 = a2 + 1;
    v44 = (uint64_t)v96;
    v45 = (uint64_t)v117;
    v99 = a7;
    v98 = v42;
    while (1)
    {
      if (v43 >= *(_QWORD *)(v42 + 16))
      {
        __break(1u);
        goto LABEL_55;
      }
      v46 = *(_QWORD *)(v109 + 72);
      v116 = v43;
      sub_23F488248(v100 + v46 * v43, v44, type metadata accessor for QueryDecorationTupleParameter);
      if (!*(_QWORD *)(v125 + 16))
      {
LABEL_39:
        v127 = v125;
        sub_23F488248(v44, v105, type metadata accessor for QueryDecorationTupleParameter);
        sub_23F617BA0();
        v71 = (uint64_t)v104;
        sub_23F472CB4();
        sub_23F3663AC(v71, type metadata accessor for QueryDecorationTupleParameter);
        a7 = v99;
        if (*v115 < v99)
        {
          sub_23F560CA8(v127, v97, v106 & 1, v114, v112, v107, v99, v113);
          swift_bridgeObjectRelease();
          sub_23F3663AC(v44, type metadata accessor for QueryDecorationTupleParameter);
          goto LABEL_41;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v78 = v89;
        sub_23F619130();
        v79 = sub_23F619E8C();
        v80 = sub_23F61C628();
        if (os_log_type_enabled(v79, v80))
        {
          v81 = (uint8_t *)swift_slowAlloc();
          v82 = swift_slowAlloc();
          v128 = v82;
          *(_DWORD *)v81 = 136315138;
          sub_23F37AE00(0xD00000000000003CLL, 0x800000023F639B90, &v128);
          v126 = v83;
          sub_23F61C790();
          _os_log_impl(&dword_23F35A000, v79, v80, "[%s] combination limit reached. Some tuples may not be generated", v81, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x242670B70](v82, -1, -1);
          MEMORY[0x242670B70](v81, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v87 + 8))(v78, v88);
        sub_23F3663AC(v44, type metadata accessor for QueryDecorationTupleParameter);
        v84 = v86;
        swift_beginAccess();
        *v84 = 1;
        return;
      }
      sub_23F61CD30();
      sub_23F61BB78();
      sub_23F61C22C();
      swift_bridgeObjectRelease();
      v47 = (_QWORD *)(v44 + *(int *)(DecorationTupleParameter + 20));
      sub_23F61CD3C();
      DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
      v119 = (uint64_t)v47 + *(int *)(DecorationEntity + 20);
      sub_23F488248(v119, v108, type metadata accessor for QueryDecorationEntityValue);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (!EnumCaseMultiPayload)
        break;
      if (EnumCaseMultiPayload == 1)
      {
        v49 = v91;
        v50 = v111;
LABEL_17:
        (*v49)(v108, v50);
      }
      sub_23F61CD30();
      sub_23F61CD3C();
      sub_23F61CD60();
      sub_23F61CD3C();
      v51 = sub_23F61CD60();
      v52 = -1 << *(_BYTE *)(v125 + 32);
      v53 = v51 & ~v52;
      v54 = v121;
      if (((*(_QWORD *)(v121 + ((v53 >> 3) & 0xFFFFFFFFFFFFF8)) >> v53) & 1) == 0)
        goto LABEL_39;
      v55 = ~v52;
      while (1)
      {
        sub_23F488248(*(_QWORD *)(v125 + 48) + v53 * v46, (uint64_t)v27, type metadata accessor for QueryDecorationTupleParameter);
        if ((sub_23F61BB6C() & 1) == 0)
          goto LABEL_35;
        v56 = &v27[*(int *)(DecorationTupleParameter + 20)];
        if (*(_QWORD *)v56 != *v47)
          goto LABEL_35;
        v57 = v44;
        v58 = v47;
        v59 = (uint64_t)&v124[*(int *)(v118 + 48)];
        sub_23F488248((uint64_t)&v56[*(int *)(DecorationEntity + 20)], (uint64_t)v124, type metadata accessor for QueryDecorationEntityValue);
        sub_23F488248(v119, v59, type metadata accessor for QueryDecorationEntityValue);
        v60 = swift_getEnumCaseMultiPayload();
        if (v60)
          break;
        sub_23F488248((uint64_t)v124, v45, type metadata accessor for QueryDecorationEntityValue);
        if (swift_getEnumCaseMultiPayload())
        {
          (*v93)(v45, v110);
          goto LABEL_32;
        }
        v67 = v92;
        v68 = v110;
        (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v92, v59, v110);
        v90 = sub_23F618D7C();
        v69 = *(void (**)(char *, uint64_t))(v102 + 8);
        v70 = v67;
        v45 = (uint64_t)v117;
        v69(v70, v68);
        v69((char *)v45, v68);
        sub_23F3663AC((uint64_t)v124, type metadata accessor for QueryDecorationEntityValue);
        v54 = v121;
        v47 = v58;
        v44 = v57;
        if ((v90 & 1) != 0)
          goto LABEL_44;
LABEL_35:
        sub_23F3663AC((uint64_t)v27, type metadata accessor for QueryDecorationTupleParameter);
        v53 = (v53 + 1) & v55;
        if (((*(_QWORD *)(v54 + ((v53 >> 3) & 0xFFFFFFFFFFFFF8)) >> v53) & 1) == 0)
          goto LABEL_39;
      }
      if (v60 == 1)
      {
        v61 = v103;
        sub_23F488248((uint64_t)v124, v103, type metadata accessor for QueryDecorationEntityValue);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v62 = v95;
          v63 = v94;
          v64 = v111;
          (*(void (**)(char *, uint64_t, uint64_t))(v95 + 32))(v94, v59, v111);
          v65 = sub_23F618CEC();
          v66 = *(void (**)(char *, uint64_t))(v62 + 8);
          v66(v63, v64);
          v66((char *)v61, v64);
          v44 = (uint64_t)v96;
          v45 = (uint64_t)v117;
          if ((v65 & 1) != 0)
            goto LABEL_43;
          sub_23F3663AC((uint64_t)v124, type metadata accessor for QueryDecorationEntityValue);
        }
        else
        {
          (*v91)(v61, v111);
          v45 = (uint64_t)v117;
LABEL_32:
          v44 = v57;
LABEL_33:
          sub_23F3625D8((uint64_t)v124, &qword_256E6F7F8);
        }
        v54 = v121;
        goto LABEL_35;
      }
      v44 = v57;
      if (swift_getEnumCaseMultiPayload() != 2)
        goto LABEL_33;
LABEL_43:
      sub_23F3663AC((uint64_t)v124, type metadata accessor for QueryDecorationEntityValue);
LABEL_44:
      sub_23F3663AC((uint64_t)v27, type metadata accessor for QueryDecorationTupleParameter);
      sub_23F3663AC(v44, type metadata accessor for QueryDecorationTupleParameter);
      a7 = v99;
LABEL_41:
      v42 = v98;
      v43 = v116 + 1;
      if (v116 + 1 == v101)
      {
        swift_bridgeObjectRelease();
        v77 = v97;
        goto LABEL_49;
      }
    }
    v49 = v93;
    v50 = v110;
    goto LABEL_17;
  }
  v77 = a2 + 1;
LABEL_49:
  sub_23F560CA8(v125, v77, v106 & 1, v114, v112, v107, a7, v113);
}

uint64_t sub_23F561A90()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F561AB4()
{
  return sub_23F561B30();
}

uint64_t sub_23F561AC0()
{
  return sub_23F561B30();
}

void sub_23F561ACC(uint64_t *a1)
{
  uint64_t v1;

  sub_23F560BB4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23F561AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E7ADD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F561B30()
{
  return swift_deallocObject();
}

uint64_t sub_23F561B48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return sub_23F61C790();
}

void sub_23F561B58()
{
  sub_23F377E80();
}

void sub_23F561B64()
{
  sub_23F377E94();
}

void sub_23F561B70()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23F3625D8(v1, v0);
}

uint64_t sub_23F561B7C()
{
  return swift_slowAlloc();
}

BOOL static QueryDecorationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t QueryDecorationError.hash(into:)()
{
  return sub_23F61CD3C();
}

uint64_t QueryDecorationError.hashValue.getter()
{
  sub_23F61CD30();
  sub_23F61CD3C();
  return sub_23F61CD60();
}

unint64_t sub_23F561C18()
{
  unint64_t result;

  result = qword_256E7AE00;
  if (!qword_256E7AE00)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for QueryDecorationError, &type metadata for QueryDecorationError);
    atomic_store(result, &qword_256E7AE00);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for QueryDecorationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F561CA0 + 4 * byte_23F62D115[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F561CD4 + 4 * byte_23F62D110[v4]))();
}

uint64_t sub_23F561CD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F561CDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F561CE4);
  return result;
}

uint64_t sub_23F561CF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F561CF8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F561CFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F561D04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for QueryDecorationError()
{
  return &type metadata for QueryDecorationError;
}

void sub_23F561D20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  void (*v32)(uint64_t);
  int v33;
  void (*v34)(uint64_t *, uint64_t);
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  int v50;

  v2 = sub_23F618ED8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F362AAC();
  v6 = (uint64_t *)(v4 - v5);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v43 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v43 - v11;
  v13 = *(_QWORD *)(a1 + 56);
  v48 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v49 = (unint64_t)(v14 + 63) >> 6;
  v50 = *MEMORY[0x24BE57C00];
  v17 = a1;
  sub_23F3668F4();
  v18 = 0;
  v47 = MEMORY[0x24BEE4AF8];
  while (v16)
  {
    v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v20 = v19 | (v18 << 6);
LABEL_26:
    v30 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v30(v12, *(_QWORD *)(v17 + 48) + *(_QWORD *)(v3 + 72) * v20, v2);
    v31 = sub_23F389F14();
    v32(v31);
    v30((char *)v6, (unint64_t)v10, v2);
    v33 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 88))(v6, v2);
    if (v33 == v50)
    {
      (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v6, v2);
      v35 = *v6;
      v46 = v6[1];
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F3DDBE4();
        sub_23F376C88();
        v47 = v41;
      }
      v36 = *(_QWORD *)(v47 + 16);
      v37 = v36 + 1;
      if (v36 >= *(_QWORD *)(v47 + 24) >> 1)
      {
        v44 = *(_QWORD *)(v47 + 16);
        v45 = v36 + 1;
        sub_23F376C88();
        v36 = v44;
        v37 = v45;
        v47 = v42;
      }
      v38 = v47;
      *(_QWORD *)(v47 + 16) = v37;
      v39 = v38 + 16 * v36;
      v40 = v46;
      *(_QWORD *)(v39 + 32) = v35;
      *(_QWORD *)(v39 + 40) = v40;
    }
    else
    {
      v34 = *(void (**)(uint64_t *, uint64_t))(v3 + 8);
      v34(v6, v2);
      v34((uint64_t *)v10, v2);
    }
  }
  v21 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v21 >= v49)
    goto LABEL_33;
  v22 = *(_QWORD *)(v48 + 8 * v21);
  ++v18;
  if (v22)
    goto LABEL_25;
  v18 = v21 + 1;
  sub_23F56EA8C();
  if (v23 == v24)
    goto LABEL_33;
  sub_23F56EA80();
  if (v22)
    goto LABEL_25;
  v18 = v25 + 2;
  sub_23F56EA8C();
  if (v23 == v24)
    goto LABEL_33;
  sub_23F56EA80();
  if (v22)
    goto LABEL_25;
  v18 = v26 + 3;
  sub_23F56EA8C();
  if (v23 == v24)
    goto LABEL_33;
  sub_23F56EA80();
  if (v22)
  {
LABEL_25:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_26;
  }
  v28 = v27 + 4;
  if (v28 >= v49)
  {
LABEL_33:
    swift_release();
    return;
  }
  v22 = *(_QWORD *)(v48 + 8 * v28);
  if (v22)
  {
    v18 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v18 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    sub_23F56EA8C();
    if (v23 == v24)
      goto LABEL_33;
    sub_23F56EA80();
    v28 = v29 + 1;
    if (v22)
      goto LABEL_25;
  }
LABEL_35:
  __break(1u);
}

void sub_23F56203C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  void (*v27)(char *, unint64_t, uint64_t);
  char *v28;
  int v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  int v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;

  v2 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23F61B92C();
  v46 = *(_QWORD *)(v50 - 8);
  v5 = MEMORY[0x24BDAC7A8](v50);
  v43 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v39 - v7;
  v8 = sub_23F618ED8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v39 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v51 = (char *)&v39 - v16;
  v17 = *(_QWORD *)(a1 + 56);
  v47 = a1 + 56;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v45 = v12 + 8;
  v48 = (unint64_t)(v18 + 63) >> 6;
  v49 = *MEMORY[0x24BE57BF8];
  v52 = a1;
  sub_23F617BA0();
  v21 = 0;
  v44 = MEMORY[0x24BEE4AF8];
  while (v20)
  {
    v22 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    v23 = v22 | (v21 << 6);
LABEL_22:
    v27 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v28 = v51;
    v27(v51, *(_QWORD *)(v52 + 48) + *(_QWORD *)(v9 + 72) * v23, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v28, v8);
    v27(v12, (unint64_t)v15, v8);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
    if (v29 == v49)
    {
      (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
      sub_23F35D2E8(&qword_256E7A408);
      swift_bridgeObjectRelease();
      v30 = v50;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v4, v12, v50);
      sub_23F36196C((uint64_t)v4, 0, 1, v30);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    }
    else
    {
      v31 = *(void (**)(char *, uint64_t))(v9 + 8);
      v31(v12, v8);
      v30 = v50;
      sub_23F36196C((uint64_t)v4, 1, 1, v50);
      v31(v15, v8);
    }
    if (sub_23F36195C((uint64_t)v4, 1, v30) == 1)
    {
      sub_23F3D9844((uint64_t)v4, &qword_256E701F0);
    }
    else
    {
      v32 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
      v32(v42, v4, v30);
      v32(v43, v42, v30);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377314();
        v44 = v37;
      }
      v33 = *(_QWORD *)(v44 + 16);
      v34 = v33 + 1;
      if (v33 >= *(_QWORD *)(v44 + 24) >> 1)
      {
        v40 = *(_QWORD *)(v44 + 16);
        v41 = v33 + 1;
        sub_23F377314();
        v33 = v40;
        v34 = v41;
        v44 = v38;
      }
      v35 = v43;
      v36 = v44;
      *(_QWORD *)(v44 + 16) = v34;
      v32((char *)(v36+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v33), v35, v30);
    }
  }
  v24 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v24 >= v48)
    goto LABEL_32;
  v25 = *(_QWORD *)(v47 + 8 * v24);
  ++v21;
  if (v25)
    goto LABEL_21;
  v21 = v24 + 1;
  if (v24 + 1 >= v48)
    goto LABEL_32;
  v25 = *(_QWORD *)(v47 + 8 * v21);
  if (v25)
    goto LABEL_21;
  v21 = v24 + 2;
  if (v24 + 2 >= v48)
    goto LABEL_32;
  v25 = *(_QWORD *)(v47 + 8 * v21);
  if (v25)
    goto LABEL_21;
  v21 = v24 + 3;
  if (v24 + 3 >= v48)
    goto LABEL_32;
  v25 = *(_QWORD *)(v47 + 8 * v21);
  if (v25)
  {
LABEL_21:
    v20 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v21 << 6);
    goto LABEL_22;
  }
  v26 = v24 + 4;
  if (v26 >= v48)
  {
LABEL_32:
    swift_release();
    return;
  }
  v25 = *(_QWORD *)(v47 + 8 * v26);
  if (v25)
  {
    v21 = v26;
    goto LABEL_21;
  }
  while (1)
  {
    v21 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v21 >= v48)
      goto LABEL_32;
    v25 = *(_QWORD *)(v47 + 8 * v21);
    ++v26;
    if (v25)
      goto LABEL_21;
  }
LABEL_34:
  __break(1u);
}

void QueryDecorator.__allocating_init(clientApplicationIdentifier:toolbox:selfLoggerFactory:signposter:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F362ABC();
  v18 = v3;
  v19 = v0;
  v5 = v4;
  v7 = v6;
  v9 = *(_QWORD *)(v6 + 24);
  v8 = *(_QWORD *)(v6 + 32);
  sub_23F38EB10(v6, v9);
  sub_23F56E9C4();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3845CC();
  (*(void (**)(uint64_t))(v11 + 16))(v1);
  v13 = *(_QWORD *)(v5 + 24);
  v12 = *(_QWORD *)(v5 + 32);
  sub_23F38EB10(v5, v13);
  sub_23F56E9C4();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3B17BC();
  (*(void (**)(uint64_t))(v15 + 16))(v2);
  v16 = sub_23F3ECB90();
  sub_23F56C730(v16, v17, v18, v1, v2, v19, v9, v13, v8, v12);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v7);
  sub_23F362948();
}

uint64_t QueryDecorationPrePlannerStageNames.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F562608 + 4 * byte_23F62D200[*v0]))(0xD000000000000013, 0x800000023F6340E0);
}

uint64_t sub_23F562608()
{
  return 0x656E6F69746E656DLL;
}

uint64_t sub_23F56262C()
{
  return 0x417375636F466E69;
}

void sub_23F56264C()
{
  sub_23F56E86C();
}

uint64_t sub_23F562664()
{
  return 0x736C6F6F54746567;
}

uint64_t sub_23F56267C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[27] = a4;
  v5[28] = v4;
  v5[25] = a2;
  v5[26] = a3;
  v5[24] = a1;
  v6 = sub_23F54DF38();
  v5[29] = v6;
  v5[30] = *(_QWORD *)(v6 - 8);
  v5[31] = sub_23F366578();
  v7 = sub_23F619D48();
  v5[32] = v7;
  v5[33] = *(_QWORD *)(v7 - 8);
  v5[34] = sub_23F366578();
  v8 = sub_23F6182A8();
  v5[35] = v8;
  v5[36] = *(_QWORD *)(v8 - 8);
  v5[37] = sub_23F366578();
  v9 = sub_23F617000();
  v5[38] = v9;
  v5[39] = *(_QWORD *)(v9 - 8);
  v5[40] = sub_23F366578();
  v5[41] = sub_23F35D2E8(&qword_256E797D8);
  v5[42] = sub_23F366654();
  v5[43] = sub_23F3666CC();
  v5[44] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E72B70);
  v5[45] = sub_23F366654();
  v5[46] = sub_23F3666CC();
  v5[47] = sub_23F3666CC();
  v10 = sub_23F3B1728();
  v5[48] = v10;
  v5[49] = *(_QWORD *)(v10 - 8);
  v5[50] = sub_23F366654();
  v5[51] = sub_23F3666CC();
  v5[52] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F562798()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  _QWORD *v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  void (*v39)(uint64_t, uint64_t);
  os_log_type_t v40;
  _BOOL8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t);
  __int128 *v79;
  uint64_t v80;
  __int128 v81[2];

  v80 = v0 + 56;
  v79 = (__int128 *)(v0 + 96);
  v1 = *(NSObject **)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = (_QWORD *)(*(_QWORD *)(v0 + 224) + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14QueryDecorator_signposter);
  v5 = v4[3];
  v6 = v4[4];
  v77 = (uint64_t)v4;
  sub_23F35EA9C(v4, v5);
  type metadata accessor for QueryDecorationSignpost();
  inited = swift_initStaticObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(inited, v5, v6);
  sub_23F6190E8();
  sub_23F56DE98(v3, v2, &qword_256E72B70);
  v8 = sub_23F4414B0();
  sub_23F56DE98(v8, v9, v10);
  sub_23F619E8C();
  v11 = sub_23F507D60();
  if (sub_23F56EA6C(v1))
  {
    v12 = *(_QWORD *)(v0 + 376);
    v69 = *(_QWORD *)(v0 + 344);
    v70 = *(_QWORD *)(v0 + 352);
    v13 = sub_23F366668();
    *(_QWORD *)&v81[0] = sub_23F366668();
    *(_DWORD *)v13 = 136315650;
    sub_23F556C28(75, 0x800000023F639BF0, (uint64_t *)v81);
    *(_QWORD *)(v0 + 176) = v14;
    sub_23F61C790();
    *(_WORD *)(v13 + 12) = 1024;
    v15 = sub_23F384B34();
    sub_23F383740(v12, 1, v15);
    if (v16)
      v17 = 0;
    else
      v17 = 1;
    sub_23F3D9844(v12, &qword_256E72B70);
    *(_DWORD *)(v0 + 540) = v17;
    sub_23F61C790();
    *(_WORD *)(v13 + 18) = 2080;
    sub_23F56DE98(v70, v69, &qword_256E797D8);
    v18 = sub_23F61C16C();
    sub_23F37AE00(v18, v19, (uint64_t *)v81);
    *(_QWORD *)(v0 + 184) = v20;
    sub_23F40B4A4();
    sub_23F3B5F04();
    sub_23F3D9844(v70, &qword_256E797D8);
    _os_log_impl(&dword_23F35A000, v1, v11, "%s running queryDecorationCollection (toolboxPresent: %{BOOL}d, qdLookback: %s)", (uint8_t *)v13, 0x1Cu);
    sub_23F507364();
    sub_23F366530();
  }
  v21 = *(_QWORD *)(v0 + 392);
  sub_23F3D9844(*(_QWORD *)(v0 + 376), &qword_256E72B70);
  sub_23F507B6C(v22, &qword_256E797D8);

  v23 = *(void (**)(uint64_t))(v21 + 8);
  v24 = sub_23F384AB4();
  v23(v24);
  v78 = v23;
  *(_QWORD *)(v0 + 424) = v23;
  v73 = *(NSObject **)(v0 + 408);
  v74 = *(_QWORD *)(v0 + 360);
  v25 = *(_QWORD *)(v0 + 344);
  v67 = *(_QWORD *)(v0 + 368);
  v76 = *(_QWORD *)(v0 + 336);
  v26 = *(_QWORD *)(v0 + 320);
  v27 = *(_QWORD *)(v0 + 296);
  v65 = *(_QWORD *)(v0 + 312);
  v66 = *(_QWORD *)(v0 + 304);
  v28 = *(_QWORD *)(v0 + 272);
  v63 = *(_QWORD *)(v0 + 288);
  v64 = *(_QWORD *)(v0 + 280);
  v30 = *(_QWORD *)(v0 + 216);
  v29 = *(_QWORD *)(v0 + 224);
  v31 = *(_QWORD *)(v0 + 208);
  v68 = *(_QWORD *)(v0 + 264);
  v71 = *(_QWORD *)(v0 + 200);
  v72 = *(_QWORD *)(v0 + 256);
  v32 = *(void **)(v0 + 192);
  sub_23F56DE98(v71, v67, &qword_256E72B70);
  sub_23F56DE98(v31, v25, &qword_256E797D8);
  sub_23F56DE98(v30, v80, &qword_256E797E0);
  sub_23F35EA9C((_QWORD *)(v29 + 104), *(_QWORD *)(v29 + 128));
  v33 = v32;
  sub_23F618EB4();
  sub_23F618E84();
  sub_23F61829C();
  sub_23F362984();
  v34 = sub_23F3ECB90();
  v35(v34);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v27, v64);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v26, v66);
  sub_23F382FC4(v77, (uint64_t)v79);
  type metadata accessor for QueryDecorationContext();
  sub_23F3668A0();
  v36 = (_QWORD *)QueryDecorationContext.init(input:toolbox:lookback:toolExecutionSession:selfLogger:signposter:)((uint64_t)v33, v67, v25, v80, v81, v79);
  *(_QWORD *)(v0 + 432) = v36;
  sub_23F35EA9C(v36 + 2, v36[5]);
  sub_23F56EA74();
  v37 = sub_23F3B1CF8();
  v38(v37);
  v39 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
  *(_QWORD *)(v0 + 440) = v39;
  v39(v28, v72);
  sub_23F52E6C0();
  sub_23F56DE98(v71, v74, &qword_256E72B70);
  sub_23F56DE98(v31, v76, &qword_256E797D8);
  sub_23F619E8C();
  v40 = sub_23F507D60();
  v41 = sub_23F482920(v40);
  v42 = *(_QWORD *)(v0 + 408);
  v43 = *(_QWORD *)(v0 + 384);
  v44 = *(_QWORD *)(v0 + 360);
  if (v41)
  {
    v45 = *(_QWORD *)(v0 + 344);
    v75 = *(_QWORD *)(v0 + 336);
    v46 = sub_23F366668();
    *(_QWORD *)&v81[0] = sub_23F366668();
    *(_DWORD *)v46 = 136315650;
    sub_23F556C28(75, 0x800000023F639BF0, (uint64_t *)v81);
    *(_QWORD *)(v0 + 160) = v47;
    sub_23F56E7A0();
    *(_WORD *)(v46 + 12) = 1024;
    v48 = sub_23F384B34();
    v49 = sub_23F383740(v44, 1, v48);
    if (v16)
      v50 = 0;
    else
      v50 = 1;
    sub_23F507B6C(v49, &qword_256E72B70);
    *(_DWORD *)(v0 + 536) = v50;
    sub_23F56E7A0();
    *(_WORD *)(v46 + 18) = 2080;
    sub_23F56DE98(v75, v45, &qword_256E797D8);
    v51 = sub_23F61C16C();
    sub_23F37AE00(v51, v52, (uint64_t *)v81);
    *(_QWORD *)(v0 + 168) = v53;
    sub_23F56E7A0();
    sub_23F384120();
    sub_23F3D9844(v75, &qword_256E797D8);
    _os_log_impl(&dword_23F35A000, v73, (os_log_type_t)v26, "%s running queryDecorationCollection (toolboxPresent: %{BOOL}d, qdLookback: %s)", (uint8_t *)v46, 0x1Cu);
    sub_23F507364();
    sub_23F366530();
  }
  v54 = *(_QWORD *)(v0 + 336);
  sub_23F507B6C(v41, &qword_256E72B70);
  sub_23F3D9844(v54, &qword_256E797D8);

  ((void (*)(uint64_t, uint64_t))v78)(v42, v43);
  v55 = *(_QWORD *)(v0 + 224);
  v56 = v36[5];
  v57 = v36[6];
  v58 = sub_23F35EA9C(v36 + 2, v56);
  sub_23F56E944((uint64_t)v58, *MEMORY[0x24BE59340]);
  v59 = sub_23F384908();
  *(_QWORD *)(v0 + 448) = v59;
  *(_QWORD *)(v59 + 16) = v55;
  *(_QWORD *)(v59 + 24) = v36;
  v60 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 456) = v60;
  v61 = sub_23F53AA14();
  *v60 = v0;
  v60[1] = sub_23F562E94;
  return QueryDecorationSELFLogging.logSubComponentExecution<A>(_:_:)(v0 + 136, *(_QWORD *)(v0 + 248), (uint64_t)&unk_256E7AE20, v59, v56, v61, v57);
}

uint64_t sub_23F562E94()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D10();
  sub_23F3B2010(v2);
  *(_QWORD *)(v1 + 464) = v0;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v1 + 240));
  sub_23F3666DC();
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F562EF8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0[59] = v0[17];
  v1 = (_QWORD *)swift_task_alloc();
  v0[60] = v1;
  *v1 = v0;
  v1[1] = sub_23F562F4C;
  v2 = sub_23F56E790(v0[54]);
  return sub_23F5636F0(v2, v3);
}

uint64_t sub_23F562F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F56E90C();
  sub_23F56E91C();
  *(_QWORD *)(v2 + 488) = v1;
  *(_QWORD *)(v2 + 496) = v0;
  sub_23F52E8D0();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F562F98()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_23F536FD8();
  v0[63] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[64] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23F562FF8;
  return sub_23F53714C(v0[54], v1);
}

uint64_t sub_23F562FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F56E90C();
  sub_23F56E91C();
  *(_QWORD *)(v2 + 520) = v1;
  *(_QWORD *)(v2 + 528) = v0;
  sub_23F52E8D0();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F563048()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  void (*v3)(uint64_t);
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  os_log_type_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v31;

  v1 = *(void **)(v0 + 520);
  v2 = *(_QWORD **)(v0 + 432);
  v3 = *(void (**)(uint64_t))(v0 + 440);
  v4 = *(NSObject **)(v0 + 400);
  v5 = *(_QWORD *)(v0 + 272);
  v6 = v2[5];
  v7 = v2[6];
  sub_23F35EA9C(v2 + 2, v6);
  sub_23F56EA74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v5, v6, v7);
  v8 = sub_23F3B1CF8();
  v3(v8);
  sub_23F6190E8();
  v9 = v1;
  sub_23F619E8C();
  v10 = sub_23F507D60();
  if (sub_23F3B1E8C(v10))
  {
    v11 = *(void **)(v0 + 520);
    v12 = sub_23F366668();
    v31 = sub_23F366668();
    *(_DWORD *)v12 = 136315394;
    sub_23F56E86C();
    sub_23F556C28(75, v13, &v31);
    *(_QWORD *)(v0 + 144) = v14;
    sub_23F61C790();
    *(_WORD *)(v12 + 12) = 2080;
    v15 = v11;
    v16 = objc_msgSend(v15, sel_description);
    v17 = sub_23F61C10C();

    sub_23F56EAA4(v17, v18, &v31);
    *(_QWORD *)(v0 + 152) = v19;
    sub_23F61C790();
    sub_23F384364();

    sub_23F3E025C(&dword_23F35A000, v4, (os_log_type_t)v6, "QDInternal: Output of QD Collection| %s\n%s", (uint8_t *)v12);
    sub_23F507364();
    sub_23F366530();
  }
  v20 = *(void **)(v0 + 520);
  v21 = *(void **)(v0 + 504);
  v22 = *(void **)(v0 + 488);
  v23 = *(void **)(v0 + 472);
  v24 = *(void (**)(uint64_t))(v0 + 424);

  sub_23F3668FC();
  v25 = sub_23F3B1CF8();
  v24(v25);
  v26 = (_QWORD *)sub_23F3ECB90();
  sub_23F35EA9C(v26, v27);
  v28 = sub_23F4414B0();
  v29(v28);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 520));
}

uint64_t sub_23F563358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3B5C38();
  v3 = *(_QWORD *)(v1 + 464);
  v5 = *(_QWORD *)(v1 + 432);
  v4 = *(void (**)(uint64_t, uint64_t))(v1 + 440);
  v6 = (_QWORD *)sub_23F56E484();
  v8 = *(_QWORD *)(v5 + 40);
  v7 = *(_QWORD *)(v5 + 48);
  sub_23F35EA9C(v6, v8);
  sub_23F56E818();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 40))(v3, v2, v8, v7);
  v4(v2, v0);
  sub_23F56EAAC();
  swift_release();
  sub_23F35EA9C((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_23F56E7E0();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v1 + 16);
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F366708();
  sub_23F383878();
  return sub_23F3B5B9C(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23F563420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F3B5C38();

  v3 = *(_QWORD *)(v1 + 496);
  v5 = *(_QWORD *)(v1 + 432);
  v4 = *(void (**)(uint64_t, uint64_t))(v1 + 440);
  v6 = (_QWORD *)sub_23F56E484();
  v8 = *(_QWORD *)(v5 + 40);
  v7 = *(_QWORD *)(v5 + 48);
  sub_23F35EA9C(v6, v8);
  sub_23F56E818();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 40))(v3, v2, v8, v7);
  v4(v2, v0);
  sub_23F56EAAC();
  swift_release();
  v9 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)(v1 + 48);
  sub_23F35EA9C((_QWORD *)(v1 + 16), v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v1 + 16);
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F366708();
  sub_23F383878();
  return sub_23F3B5B9C(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23F563500()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F3B5C38();
  v1 = *(void **)(v0 + 488);
  v2 = *(void **)(v0 + 472);

  v3 = *(_QWORD *)(v0 + 528);
  v5 = *(_QWORD **)(v0 + 432);
  v4 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
  v6 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 256);
  v8 = v5[5];
  v9 = v5[6];
  sub_23F35EA9C(v5 + 2, v8);
  sub_23F56E818();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 40))(v3, v6, v8, v9);
  v4(v6, v7);
  sub_23F56EAAC();
  swift_release();
  sub_23F35EA9C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_23F56E7E0();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F366708();
  sub_23F383878();
  return sub_23F3B5B9C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F56362C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;

  *(_QWORD *)(v3 + 16) = a1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_23F563684;
  return sub_23F564FC0(a3);
}

uint64_t sub_23F563684(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *v2;
  v7 = *v2;
  v5 = *v2;
  sub_23F50746C(&v7);
  if (v1)
    return sub_23F3B182C(*(uint64_t (**)(void))(v5 + 8));
  *(_QWORD *)(v4 + 32) = a1;
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F5636E0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return sub_23F56E514();
}

uint64_t sub_23F5636F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  v4 = sub_23F3B1728();
  v3[15] = v4;
  v3[16] = *(_QWORD *)(v4 - 8);
  v3[17] = sub_23F366654();
  v3[18] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E70F38);
  v3[19] = sub_23F366578();
  v5 = sub_23F54DF38();
  v3[20] = v5;
  v3[21] = *(_QWORD *)(v5 - 8);
  v3[22] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F563770()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int8x16_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int8x16_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  sub_23F3B1D38();
  v1 = (_QWORD *)v0[12];
  v2 = sub_23F618F20();
  v3 = sub_23F53653C(v2);
  v0[23] = v3;
  sub_23F362984();
  v4 = v1[5];
  v5 = v1[6];
  v6 = sub_23F35EA9C(v1 + 2, v4);
  sub_23F56E944((uint64_t)v6, *MEMORY[0x24BE59358]);
  v7 = (int8x16_t *)swift_task_alloc();
  v0[24] = v7;
  sub_23F56E720(v7, v8, v9, v10, v11, v12, v13, v14, v15);
  *(_QWORD *)(v16 + 32) = v3;
  *(_QWORD *)(v16 + 40) = v1;
  v17 = (_QWORD *)swift_task_alloc();
  v0[25] = v17;
  v18 = sub_23F53AA14();
  *v17 = v0;
  v17[1] = sub_23F56386C;
  return QueryDecorationSELFLogging.logSubComponentExecution<A>(_:_:)((uint64_t)(v0 + 8), v0[22], (uint64_t)&unk_256E7B328, (uint64_t)v7, v4, v18, v5);
}

uint64_t sub_23F56386C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D10();
  sub_23F3B2010(v2);
  *(_QWORD *)(v1 + 208) = v0;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v1 + 168));
  if (v0)
    sub_23F362984();
  sub_23F3666DC();
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F5638E4()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  void *v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_23F3B1D38();
  v28 = v3;
  v29 = v4;
  v27 = v1;
  v5 = *(id *)(v1 + 64);
  sub_23F618F98();
  sub_23F488F74();
  sub_23F362D18();
  if (v0)
    goto LABEL_8;
  v6 = v5;
  sub_23F618F14();
  sub_23F488F74();
  sub_23F362D18();
  v7 = v6;
  sub_23F618F20();
  sub_23F488F74();
  sub_23F362D18();
  v8 = *(_QWORD *)(v1 + 152);
  v9 = v7;
  sub_23F618EFC();

  v10 = sub_23F556EE0();
  LODWORD(v9) = sub_23F36195C(v8, 1, v10);
  sub_23F3D9844(v8, &qword_256E70F38);
  if ((_DWORD)v9 != 1)
  {
LABEL_8:
    v20 = *(void **)(v1 + 64);
    *(_QWORD *)(v1 + 216) = v20;
    v21 = v20;
    v22 = (_QWORD *)sub_23F3666CC();
    *(_QWORD *)(v1 + 224) = v22;
    *v22 = v1;
    v22[1] = sub_23F563B24;
    v23 = sub_23F56E790(*(_QWORD *)(v1 + 96));
    return sub_23F56402C(v23, v24, v25);
  }
  else
  {
    v11 = *(NSObject **)(v1 + 144);
    swift_bridgeObjectRelease();
    sub_23F52E6C0();
    sub_23F619E8C();
    v12 = sub_23F507D60();
    v13 = sub_23F366874(v12);
    v14 = *(_QWORD *)(v1 + 128);
    if (v13)
    {
      v15 = (uint8_t *)sub_23F366668();
      v26 = sub_23F366668();
      *(_DWORD *)v15 = 136315138;
      sub_23F56E86C();
      sub_23F556C28(43, v16, &v26);
      *(_QWORD *)(v1 + 88) = v17;
      sub_23F61C790();
      sub_23F38485C(&dword_23F35A000, v11, v2, "%s Returning empty error QueryDecorationError.queryDecorationNoResponse", v15);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    sub_23F56DF24();
    swift_allocError();
    *v18 = 0;
    swift_willThrow();

    sub_23F56E6B0();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    return sub_23F366630(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_23F563B24()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  sub_23F56E590();
  sub_23F56E628();
  sub_23F3B2010(v3);
  v2[29] = v0;
  swift_task_dealloc();
  v4 = (void *)v2[27];
  if (v0)
  {

    sub_23F362D18();
  }
  else
  {
    sub_23F362D18();

    v2[30] = v1;
  }
  sub_23F36679C();
  return sub_23F383F08();
}

uint64_t sub_23F563B90()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  os_log_type_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(NSObject **)(v0 + 136);

  *(_QWORD *)(v0 + 64) = v1;
  sub_23F52E6C0();
  sub_23F619E8C();
  v3 = sub_23F507D60();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = sub_23F366668();
    v18 = sub_23F366668();
    *(_DWORD *)v4 = 136315394;
    sub_23F56E86C();
    sub_23F556C28(43, v5, &v18);
    *(_QWORD *)(v0 + 72) = v6;
    v17 = v3;
    sub_23F61C790();
    *(_WORD *)(v4 + 12) = 2080;
    sub_23F384AB4();
    sub_23F3C08CC();
    v7 = *(id *)(v0 + 64);
    v8 = objc_msgSend(v7, sel_description);
    v9 = sub_23F61C10C();
    v11 = v10;

    sub_23F37AE00(v9, v11, &v18);
    *(_QWORD *)(v0 + 80) = v12;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F3E025C(&dword_23F35A000, v2, v17, "%s returning QDOutput:%s", (uint8_t *)v4);
    sub_23F507364();
    sub_23F366530();
  }

  v13 = sub_23F3B1CF8();
  v14(v13);
  sub_23F3C08CC();
  v15 = *(_QWORD *)(v0 + 64);
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v15);
}

uint64_t sub_23F563DB4()
{
  uint64_t v0;

  sub_23F56E6B0();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F563DF4()
{
  uint64_t v0;

  sub_23F56E6B0();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F563E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  sub_23F35D2E8(&qword_256E70F38);
  v5[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F563EA0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F556FDC();
  v1 = v0[5];
  sub_23F35EA9C((_QWORD *)(v0[3] + 64), *(_QWORD *)(v0[3] + 88));
  v0[8] = sub_23F618F98();
  v0[9] = sub_23F618F14();
  sub_23F618EFC();
  v2 = (_QWORD *)swift_task_alloc();
  v0[10] = v2;
  *v2 = v0;
  v2[1] = sub_23F563F3C;
  v3 = sub_23F389F14();
  return sub_23F556110(v3, v4, v1, v5, v6);
}

uint64_t sub_23F563F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _QWORD *a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;

  sub_23F56E590();
  a15 = v18;
  a16 = v19;
  a14 = v17;
  v21 = v20;
  a14 = (_QWORD *)*v17;
  v22 = a14;
  sub_23F3B2010(&a14);
  v22[11] = v16;
  swift_task_dealloc();
  v23 = v22[7];
  if (!v16)
    v22[12] = v21;
  sub_23F3D9844(v23, &qword_256E70F38);
  sub_23F362D18();
  sub_23F3837B0();
  sub_23F36679C();
  return sub_23F383F08();
}

uint64_t sub_23F563FCC()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 96);
  swift_task_dealloc();
  v1 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F362888(v1);
}

uint64_t sub_23F564000()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F56402C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  sub_23F35D2E8(&qword_256E70238);
  v4[11] = sub_23F366578();
  v5 = sub_23F61BCE0();
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = sub_23F366578();
  v6 = sub_23F618BB4();
  v4[15] = v6;
  v4[16] = *(_QWORD *)(v6 - 8);
  v4[17] = sub_23F366654();
  v4[18] = sub_23F3666CC();
  v7 = sub_23F61B5D8();
  v4[19] = v7;
  v4[20] = *(_QWORD *)(v7 - 8);
  v4[21] = sub_23F366578();
  v8 = sub_23F618C20();
  v4[22] = v8;
  v4[23] = *(_QWORD *)(v8 - 8);
  v4[24] = sub_23F366654();
  v4[25] = sub_23F3666CC();
  v9 = sub_23F3B1728();
  v4[26] = v9;
  v4[27] = *(_QWORD *)(v9 - 8);
  v4[28] = sub_23F366654();
  v4[29] = sub_23F3666CC();
  v4[30] = sub_23F3666CC();
  v4[31] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E70F38);
  v4[32] = sub_23F366654();
  v4[33] = sub_23F3666CC();
  v4[34] = sub_23F3666CC();
  v10 = sub_23F556EE0();
  v4[35] = v10;
  v4[36] = *(_QWORD *)(v10 - 8);
  v4[37] = sub_23F366578();
  sub_23F35D2E8(&qword_256E72B70);
  v4[38] = sub_23F366578();
  v11 = sub_23F384B34();
  v4[39] = v11;
  v4[40] = *(_QWORD *)(v11 - 8);
  v4[41] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F564194()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  id v38;
  uint64_t v39;

  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 312);
  sub_23F56DE98(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime22QueryDecorationContext_toolbox, v2, &qword_256E72B70);
  sub_23F383740(v2, 1, v3);
  if (v4)
  {
    v5 = *(NSObject **)(v0 + 224);
    sub_23F3D9844(*(_QWORD *)(v0 + 304), &qword_256E72B70);
    sub_23F52E6C0();
    sub_23F619E8C();
    v6 = sub_23F507D60();
    if (sub_23F3B1E8C(v6))
    {
      v7 = (uint8_t *)sub_23F366668();
      v39 = sub_23F366668();
      *(_DWORD *)v7 = 136315138;
      sub_23F556C28(84, 0x800000023F639DD0, &v39);
      *(_QWORD *)(v0 + 16) = v8;
      sub_23F61C790();
      sub_23F38485C(&dword_23F35A000, v5, v1, "%s not run (no toolbox)", v7);
      sub_23F3B17D4();
      sub_23F366530();
    }

    v20 = sub_23F3B1CF8();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 32))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312));
    v9 = sub_23F618F98();
    *(_QWORD *)(v0 + 336) = v9;
    if (!v9)
    {
      sub_23F52E6C0();
      v23 = sub_23F619E8C();
      v24 = sub_23F61C610();
      v25 = os_log_type_enabled(v23, v24);
      v27 = *(_QWORD *)(v0 + 320);
      v26 = *(_QWORD *)(v0 + 328);
      v28 = *(_QWORD *)(v0 + 312);
      v29 = *(_QWORD *)(v0 + 232);
      v30 = *(_QWORD *)(v0 + 216);
      if (v25)
      {
        v31 = (uint8_t *)sub_23F366668();
        v39 = sub_23F366668();
        *(_DWORD *)v31 = 136315138;
        sub_23F556C28(84, 0x800000023F639DD0, &v39);
        *(_QWORD *)(v0 + 24) = v32;
        sub_23F61C790();
        sub_23F38485C(&dword_23F35A000, v23, v24, "%s resolveProtocolsToTools not run (inputs.spans = nil)", v31);
        sub_23F3B17D4();
        sub_23F366530();
      }

      sub_23F383F80(v29, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
      goto LABEL_16;
    }
    v10 = v9;
    v12 = *(_QWORD *)(v0 + 272);
    v11 = *(_QWORD *)(v0 + 280);
    sub_23F618EFC();
    sub_23F383740(v12, 1, v11);
    if (!v4)
    {
      v33 = *(_QWORD *)(v0 + 80);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 32))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 280));
      v34 = v33 + 16;
      v35 = *(_QWORD *)(v33 + 56);
      v36 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 344) = v36;
      *v36 = v0;
      v36[1] = sub_23F5646F8;
      return sub_23F52A008(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 328), (uint64_t)v10, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 296), v34, v35);
    }
    v13 = sub_23F3837B0();
    sub_23F441494(v13, &qword_256E70F38);
    sub_23F54DED8();
    sub_23F507D88();
    v14 = sub_23F56E9D0();
    v15 = sub_23F56EA6C(v10);
    v16 = *(_QWORD *)(v0 + 240);
    v17 = *(_QWORD *)(v0 + 216);
    if (v15)
    {
      v18 = (uint8_t *)sub_23F366668();
      v39 = sub_23F366668();
      *(_DWORD *)v18 = 136315138;
      sub_23F556C28(84, 0x800000023F639DD0, &v39);
      *(_QWORD *)(v0 + 32) = v19;
      sub_23F61C790();
      sub_23F38485C(&dword_23F35A000, v10, v14, "%s resolveProtocolsToTools not run (queryDecorationOutput.queryDecorationToolRetrievalResponse = nil)", v18);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F383F80(v16, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    v20 = sub_23F38422C();
  }
  v22(v20, v21);
LABEL_16:
  v38 = *(id *)(v0 + 64);
  sub_23F56E6C0();
  swift_task_dealloc();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  return (*(uint64_t (**)(id))(v0 + 8))(v38);
}

uint64_t sub_23F5646F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F56E90C();
  sub_23F56E91C();
  *(_QWORD *)(v2 + 352) = v1;
  *(_QWORD *)(v2 + 360) = v0;
  sub_23F52E8D0();
  sub_23F362D18();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F56474C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  void (*v24)(uint64_t);
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(_QWORD, uint64_t, _QWORD);
  void (*v78)(_QWORD, uint64_t, _QWORD);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v2 = *(_QWORD *)(v0 + 352);
  if (v2)
  {
    sub_23F52E6C0();
    sub_23F3E0254();
    sub_23F619E8C();
    v3 = sub_23F56E9D0();
    if (os_log_type_enabled(v1, v3))
    {
      v67 = v3;
      v4 = sub_23F366668();
      v86 = sub_23F366668();
      *(_DWORD *)v4 = 136315394;
      sub_23F37AE00(0xD000000000000054, 0x800000023F639DD0, &v86);
      *(_QWORD *)(v0 + 40) = v5;
      sub_23F56E7A0();
      *(_WORD *)(v4 + 12) = 2080;
      v6 = v2;
      v7 = *(_QWORD *)(v2 + 16);
      v8 = MEMORY[0x24BEE4AF8];
      if (!v7)
        goto LABEL_22;
      v65 = v4;
      v66 = v1;
      v9 = *(_QWORD *)(v0 + 184);
      v10 = *(_QWORD *)(v0 + 128);
      v71 = *(_QWORD *)(v0 + 104);
      v87 = MEMORY[0x24BEE4AF8];
      sub_23F37B47C();
      sub_23F383EB8();
      v12 = v6 + v11;
      v80 = *(_QWORD *)(v9 + 72);
      v83 = v9;
      v77 = *(void (**)(_QWORD, uint64_t, _QWORD))(v9 + 16);
      v74 = *MEMORY[0x24BE57550];
      v72 = *MEMORY[0x24BE57558];
      v69 = *MEMORY[0x24BE57548];
      v68 = *MEMORY[0x24BE57540];
      while (1)
      {
        v13 = *(_QWORD *)(v0 + 144);
        v14 = *(_QWORD *)(v0 + 120);
        v77(*(_QWORD *)(v0 + 200), v12, *(_QWORD *)(v0 + 176));
        sub_23F618BCC();
        v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88))(v13, v14);
        if (v15 == v74)
          break;
        if (v15 == v72)
        {
          v16 = *(_QWORD *)(v0 + 144);
          v17 = *(_QWORD *)(v0 + 112);
          v18 = *(_QWORD *)(v0 + 96);
          (*(void (**)(uint64_t, _QWORD))(v10 + 96))(v16, *(_QWORD *)(v0 + 120));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v17, v16, v18);
          v19 = sub_23F61BCD4();
          v21 = v20;
          (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v17, v18);
        }
        else
        {
          if (v15 == v69 || v15 == v68)
            break;
          (*(void (**)(_QWORD, _QWORD))(v10 + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
          v21 = 0x800000023F638B50;
          v19 = 0xD000000000000013;
        }
LABEL_14:
        sub_23F384274(v83);
        v8 = v87;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3DDBE4();
          sub_23F37B47C();
          v8 = v87;
        }
        v30 = *(_QWORD *)(v8 + 16);
        v29 = *(_QWORD *)(v8 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_23F3B1A80(v29);
          sub_23F37B47C();
          v8 = v87;
        }
        *(_QWORD *)(v8 + 16) = v30 + 1;
        v31 = v8 + 16 * v30;
        *(_QWORD *)(v31 + 32) = v19;
        *(_QWORD *)(v31 + 40) = v21;
        v12 += v80;
        if (!--v7)
        {
          v4 = v65;
          v1 = v66;
LABEL_22:
          v37 = MEMORY[0x24266F8F8](v8, MEMORY[0x24BEE0D00]);
          sub_23F384120();
          sub_23F56E8BC(v37, v38, &v86);
          *(_QWORD *)(v0 + 48) = v39;
          sub_23F56E7A0();
          sub_23F38458C();
          sub_23F384A80();
          sub_23F3E025C(&dword_23F35A000, v1, v67, "%s Re-create QueryDecorationOutput with adjustedRankedTools: %s", (uint8_t *)v4);
          sub_23F507364();
          sub_23F366530();
        }
      }
      (*(void (**)(_QWORD, _QWORD))(v10 + 96))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
      v23 = sub_23F406E84();
      v24(v23);
      v19 = sub_23F61B5A8();
      v21 = v25;
      v26 = sub_23F38422C();
      v28(v26, v27);
      goto LABEL_14;
    }
    sub_23F384A80();

    v36 = sub_23F38422C();
    v40(v36);
    v41 = *(_QWORD *)(v0 + 264);
    sub_23F618EFC();
    if (!sub_23F41C5E8(v41))
    {
      sub_23F384A00();
      sub_23F61904C();
    }
    sub_23F618F98();
    sub_23F618F14();
    sub_23F618F20();
    sub_23F618F50();
    v43 = *(_QWORD *)(v2 + 16);
    if (v43)
    {
      v75 = *(_QWORD *)(v0 + 160);
      v44 = *(_QWORD *)(v0 + 128);
      sub_23F383EB8();
      v46 = v2 + v45;
      v81 = *(_QWORD *)(v47 + 72);
      v84 = v47;
      v78 = *(void (**)(_QWORD, uint64_t, _QWORD))(v47 + 16);
      sub_23F617BA0();
      v48 = MEMORY[0x24BEE4AF8];
      v73 = v44;
      do
      {
        v49 = *(_QWORD *)(v0 + 88);
        v78(*(_QWORD *)(v0 + 192), v46, *(_QWORD *)(v0 + 176));
        sub_23F618BCC();
        sub_23F618B9C();
        sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
        if (sub_23F41C5E8(v49) == 1)
        {
          sub_23F3D9844(*(_QWORD *)(v0 + 88), &qword_256E70238);
          sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v84 + 8));
        }
        else
        {
          v50 = *(_QWORD *)(v0 + 88);
          v51 = sub_23F61B5A8();
          v53 = v52;
          sub_23F383F80(v50, *(uint64_t (**)(uint64_t, uint64_t))(v75 + 8));
          sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v84 + 8));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F3DDBE4();
            sub_23F376C88();
            v48 = v57;
          }
          v55 = *(_QWORD *)(v48 + 16);
          v54 = *(_QWORD *)(v48 + 24);
          if (v55 >= v54 >> 1)
          {
            sub_23F3B1A80(v54);
            sub_23F376C88();
            v48 = v58;
          }
          *(_QWORD *)(v48 + 16) = v55 + 1;
          v56 = v48 + 16 * v55;
          *(_QWORD *)(v56 + 32) = v51;
          *(_QWORD *)(v56 + 40) = v53;
          v44 = v73;
        }
        v46 += v81;
        --v43;
      }
      while (v43);
      sub_23F38458C();
    }
    v79 = *(_QWORD *)(v0 + 320);
    v82 = *(_QWORD *)(v0 + 312);
    v85 = *(_QWORD *)(v0 + 328);
    v59 = *(_QWORD *)(v0 + 288);
    v76 = *(_QWORD *)(v0 + 296);
    v60 = *(_QWORD *)(v0 + 280);
    v62 = *(_QWORD *)(v0 + 256);
    v61 = *(_QWORD *)(v0 + 264);
    sub_23F38458C();
    sub_23F618F44();
    sub_23F618F2C();
    sub_23F618F74();
    sub_23F618F68();
    sub_23F56DE98(v61, v62, &qword_256E70F38);
    v63 = objc_allocWithZone((Class)sub_23F53AA14());
    v70 = sub_23F618F8C();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v76, v60);
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v85, v82);
    sub_23F3D9844(v61, &qword_256E70F38);
  }
  else
  {
    v33 = *(_QWORD *)(v0 + 320);
    v32 = *(_QWORD *)(v0 + 328);
    v34 = *(void **)(v0 + 64);
    sub_23F384274(*(_QWORD *)(v0 + 288));
    sub_23F383E88(v32, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    v35 = v34;
    v70 = *(_QWORD *)(v0 + 64);
  }
  sub_23F56E6C0();
  swift_task_dealloc();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v70);
}

uint64_t sub_23F564ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  sub_23F3C3DC8(*(_QWORD *)(v0 + 288));
  sub_23F38456C(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3666D4();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F564FC0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[273] = v1;
  v2[267] = a1;
  v3 = sub_23F619D48();
  v2[279] = v3;
  v2[285] = *(_QWORD *)(v3 - 8);
  v2[291] = sub_23F366578();
  v2[297] = sub_23F35D2E8(&qword_256E70F38);
  v2[303] = sub_23F366654();
  v2[309] = sub_23F3666CC();
  v4 = sub_23F3B1728();
  v2[315] = v4;
  v2[321] = *(_QWORD *)(v4 - 8);
  v2[327] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F565048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_QWORD *a22,uint64_t a23,uint64_t a24)
{
  _QWORD *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23F3B14B8();
  a23 = v26;
  a24 = v27;
  a22 = v24;
  v28 = *(NSObject **)(v24[267] + 96);
  v29 = sub_23F618EA8();
  v31 = v30;
  sub_23F54DED8();
  sub_23F3668F4();
  sub_23F507D88();
  v32 = sub_23F507D60();
  if (sub_23F3B1E8C(v32))
  {
    v33 = sub_23F366668();
    a13 = sub_23F366668();
    *(_DWORD *)v33 = 136315394;
    sub_23F56E86C();
    sub_23F556C28(39, v34, &a13);
    v24[255] = v35;
    sub_23F56E808();
    *(_WORD *)(v33 + 12) = 2080;
    sub_23F3668F4();
    sub_23F37AE00(v29, v31, &a13);
    v24[261] = v36;
    sub_23F56E7A0();
    swift_bridgeObjectRelease_n();
    sub_23F3E025C(&dword_23F35A000, v28, v25, "QDInternal: %s starting to collect inputs for query: %s", (uint8_t *)v33);
    sub_23F507364();
    sub_23F366530();
  }

  sub_23F384A80();
  v37 = sub_23F3B1CF8();
  v38(v37);
  v39 = v24[273];
  v40 = v24[267];
  v41 = sub_23F3ECBD8();
  *(_QWORD *)(v41 + 16) = v39;
  *(_QWORD *)(v41 + 24) = v40;
  v42 = sub_23F3ECBD8();
  v24[333] = v42;
  *(_QWORD *)(v42 + 16) = &unk_256E7B2D0;
  *(_QWORD *)(v42 + 24) = v41;
  sub_23F4161E8();
  swift_retain();
  sub_23F3D0A10();
  sub_23F35EB74(&qword_256E7AEC0);
  swift_asyncLet_begin();
  return sub_23F56E5BC();
}

uint64_t sub_23F565260()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  _QWORD *v4;

  v1[339] = v0;
  if (v0)
    return sub_23F56E39C();
  v3 = v1[249];
  v1[345] = v3;
  sub_23F389CDC();
  v4 = (_QWORD *)swift_task_alloc();
  v1[351] = v4;
  *v4 = v1;
  v4[1] = sub_23F5652F0;
  return sub_23F568614(v1[267], v3);
}

uint64_t sub_23F5652F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  sub_23F56E628();
  sub_23F3B2010(v6);
  v4[357] = v2;
  swift_task_dealloc();
  if (!v2)
  {
    swift_bridgeObjectRelease();
    v4[363] = a2;
    v4[369] = v3;
  }
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F56535C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F3B14B8();
  v1 = v0[369];
  v2 = v0[363];
  v3 = v0[273];
  v4 = v0[267];
  v5 = (_QWORD *)sub_23F36682C();
  v0[375] = v5;
  v5[2] = v3;
  v5[3] = v4;
  v5[4] = v1;
  v5[5] = v2;
  sub_23F3D0A10();
  swift_retain();
  swift_retain();
  swift_asyncLet_begin();
  v6 = sub_23F3ECBD8();
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = sub_23F3ECBD8();
  v0[376] = v7;
  *(_QWORD *)(v7 + 16) = &unk_256E7B2F8;
  *(_QWORD *)(v7 + 24) = v6;
  sub_23F3D0A10();
  swift_retain();
  swift_retain();
  sub_23F35EB74(&qword_256E7B310);
  swift_asyncLet_begin();
  return sub_23F56E5BC();
}

uint64_t sub_23F56548C()
{
  uint64_t v0;
  _QWORD *v1;

  v1[377] = v0;
  if (v0)
  {
    sub_23F482A1C();
    return sub_23F56E39C();
  }
  else
  {
    v1[378] = v1[249];
    sub_23F617BA0();
    return sub_23F56E400();
  }
}

uint64_t sub_23F5654F8()
{
  uint64_t v0;
  _QWORD *v1;

  v1[379] = v0;
  if (v0)
  {
    sub_23F36679C();
    return sub_23F3B183C();
  }
  else
  {
    v1[380] = v1[247];
    sub_23F617BA0();
    return sub_23F56E400();
  }
}

uint64_t sub_23F565560()
{
  uint64_t v0;
  _QWORD *v1;

  v1[381] = v0;
  if (v0)
  {
    sub_23F36679C();
    return sub_23F36664C();
  }
  else
  {
    v1[382] = v1[248];
    sub_23F617BA0();
    return sub_23F56E82C();
  }
}

uint64_t sub_23F5655C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 3064) = v0;
  return sub_23F362A4C();
}

uint64_t sub_23F5655E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v8;
  uint64_t v9;

  v1 = v0[303];
  v2 = v0[291];
  v8 = v0[285];
  v9 = v0[279];
  v3 = v0[267];
  sub_23F56DE98(v0[309], v1, &qword_256E70F38);
  v4 = objc_allocWithZone((Class)sub_23F53AA14());
  v0[384] = sub_23F618F8C();
  sub_23F35EA9C((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
  sub_23F618F98();
  sub_23F618F14();
  sub_23F618F20();
  sub_23F618EFC();
  sub_23F619D3C();
  v5 = sub_23F3B1CF8();
  v6(v5);
  sub_23F38458C();
  sub_23F3837B0();
  sub_23F362D08();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v9);
  sub_23F3D9844(v1, &qword_256E70F38);
  return swift_asyncLet_finish();
}

uint64_t sub_23F565754()
{
  return sub_23F362A4C();
}

uint64_t sub_23F565760()
{
  sub_23F56E824();
  sub_23F56E8C4();
  return sub_23F56E3F8();
}

uint64_t sub_23F56579C()
{
  return sub_23F362A4C();
}

uint64_t sub_23F5657A8()
{
  sub_23F56E650();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F5657E0()
{
  return sub_23F362A4C();
}

uint64_t sub_23F5657EC()
{
  uint64_t v0;

  sub_23F556FDC();
  sub_23F3D9B70();
  sub_23F3668FC();
  swift_release();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  return sub_23F3E0218(*(_QWORD *)(v0 + 3072), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F565860()
{
  return sub_23F362A4C();
}

uint64_t sub_23F56586C()
{
  uint64_t v0;

  sub_23F56E590();
  sub_23F3D9B70();
  sub_23F4967B8(0);
  sub_23F4967B8(0);
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return sub_23F534684(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5658D4()
{
  swift_bridgeObjectRelease();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F565914()
{
  return sub_23F362A4C();
}

uint64_t sub_23F565920()
{
  uint64_t v0;

  sub_23F56E590();
  sub_23F3D9B70();
  sub_23F4967B8(0);
  sub_23F4967B8(0);
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return sub_23F534684(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F565988()
{
  return sub_23F362A4C();
}

uint64_t sub_23F565994()
{
  sub_23F56E824();
  sub_23F56E8C4();
  return sub_23F56E3F8();
}

uint64_t sub_23F5659D0()
{
  return sub_23F362A4C();
}

uint64_t sub_23F5659DC()
{
  sub_23F56E650();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F565A14()
{
  return sub_23F362A4C();
}

uint64_t sub_23F565A20()
{
  uint64_t v0;

  sub_23F432AC4();
  sub_23F56E444();
  sub_23F56E92C((uint64_t)&unk_256E7B2E8);
  sub_23F4967B8((uint64_t)&unk_256E7B308);
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  return sub_23F4328EC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F565A78()
{
  swift_bridgeObjectRelease();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F565AB8()
{
  return sub_23F362A4C();
}

uint64_t sub_23F565AC4()
{
  sub_23F56E824();
  sub_23F56E8C4();
  return sub_23F56E3F8();
}

uint64_t sub_23F565B00()
{
  return sub_23F362A4C();
}

uint64_t sub_23F565B0C()
{
  sub_23F56E650();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F565B44()
{
  return sub_23F362A4C();
}

uint64_t sub_23F565B50()
{
  uint64_t v0;

  sub_23F432AC4();
  sub_23F56E444();
  sub_23F56E92C((uint64_t)&unk_256E7B2E8);
  sub_23F4967B8((uint64_t)&unk_256E7B308);
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  return sub_23F4328EC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F565BA8()
{
  swift_bridgeObjectRelease();
  sub_23F3837B0();
  sub_23F56E3AC();
  return sub_23F56E3F8();
}

uint64_t sub_23F565BF8()
{
  return sub_23F362A4C();
}

uint64_t sub_23F565C04()
{
  sub_23F56E824();
  sub_23F56E8C4();
  return sub_23F56E3F8();
}

uint64_t sub_23F565C40()
{
  return sub_23F362A4C();
}

uint64_t sub_23F565C4C()
{
  sub_23F56E650();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F565C84()
{
  return sub_23F362A4C();
}

uint64_t sub_23F565C90()
{
  uint64_t v0;

  sub_23F432AC4();
  sub_23F56E444();
  sub_23F56E92C((uint64_t)&unk_256E7B2E8);
  sub_23F4967B8((uint64_t)&unk_256E7B308);
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  return sub_23F4328EC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F565CE8()
{
  sub_23F56E590();
  swift_bridgeObjectRelease();
  sub_23F3837B0();
  sub_23F384120();
  sub_23F56E3AC();
  return sub_23F56E688();
}

uint64_t sub_23F565D38()
{
  return sub_23F362A4C();
}

uint64_t sub_23F565D44()
{
  sub_23F56E824();
  sub_23F56E8C4();
  return sub_23F56E3F8();
}

uint64_t sub_23F565D80()
{
  return sub_23F362A4C();
}

uint64_t sub_23F565D8C()
{
  sub_23F56E650();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F565DC4()
{
  return sub_23F362A4C();
}

uint64_t sub_23F565DD0()
{
  uint64_t v0;

  sub_23F432AC4();
  sub_23F56E444();
  sub_23F56E92C((uint64_t)&unk_256E7B2E8);
  sub_23F4967B8((uint64_t)&unk_256E7B308);
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  return sub_23F4328EC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F565E28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23F56E38C;
  return sub_23F567840(a2);
}

uint64_t sub_23F565E7C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_23F56E394;
  return v5();
}

uint64_t sub_23F565ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_23F3609AC;
  return sub_23F568108(a1, a3, a4, a5);
}

uint64_t sub_23F565F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23F565FA8;
  return sub_23F567D48(a2);
}

uint64_t sub_23F565FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v2 = sub_23F3629E8();
  v4 = *(uint64_t (**)(void))(v1 + 8);
  if (!v0)
    v2 = sub_23F482A1C();
  return sub_23F56E560(v2, v3, v4);
}

uint64_t sub_23F565FE0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_23F566038;
  return v5();
}

uint64_t sub_23F566038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  sub_23F56E628();
  v7 = *v4;
  sub_23F50746C(v8);
  if (!v2)
  {
    v9 = *(_QWORD **)(v5 + 16);
    *v9 = v3;
    v9[1] = a2;
  }
  return sub_23F435B58(*(uint64_t (**)(void))(v7 + 8));
}

uint64_t sub_23F566084(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[393] = v1;
  v2[387] = a1;
  v3 = sub_23F3B1728();
  v2[399] = v3;
  v2[405] = *(_QWORD *)(v3 - 8);
  v2[411] = sub_23F366578();
  v4 = sub_23F61B4C4();
  v2[417] = v4;
  v2[423] = *(_QWORD *)(v4 - 8);
  v2[429] = sub_23F366578();
  sub_23F35D2E8(&qword_256E797D8);
  v2[435] = sub_23F366578();
  sub_23F35D2E8(&qword_256E72B70);
  v2[441] = sub_23F366578();
  v5 = sub_23F6182A8();
  v2[447] = v5;
  v2[453] = *(_QWORD *)(v5 - 8);
  v2[459] = sub_23F366578();
  v6 = sub_23F617000();
  v2[465] = v6;
  v2[471] = *(_QWORD *)(v6 - 8);
  v2[477] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F566150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void *v23;
  os_log_type_t v24;
  _WORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _BYTE v35[32];
  uint64_t v36;

  *(_QWORD *)(v0 + 3864) = sub_23F618EC0();
  *(_QWORD *)(v0 + 3912) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 3816);
    v30 = *(_QWORD *)(v0 + 3768);
    v29 = *(_QWORD *)(v0 + 3624);
    v31 = *(_QWORD *)(v0 + 3720);
    v32 = *(_QWORD *)(v0 + 3528);
    v33 = *(_QWORD *)(v0 + 3480);
    v3 = *(_QWORD *)(v0 + 3144);
    v34 = *(void **)(v0 + 3096);
    sub_23F35EA9C((_QWORD *)(v3 + 104), *(_QWORD *)(v3 + 128));
    sub_23F618EB4();
    sub_23F618E84();
    sub_23F61829C();
    sub_23F362984();
    v4 = sub_23F482A1C();
    v5(v4);
    sub_23F3C3DC8(v29);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v2, v31);
    v6 = sub_23F384B34();
    sub_23F3838D8(v32, v7, v8, v6);
    v9 = sub_23F618FBC();
    sub_23F3838D8(v33, v10, v11, v9);
    v36 = 0;
    memset(v35, 0, sizeof(v35));
    sub_23F382FC4(v0 + 2776, v0 + 2696);
    sub_23F382FC4(v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14QueryDecorator_signposter, v0 + 2616);
    type metadata accessor for QueryDecorationContext();
    sub_23F3668A0();
    *(_QWORD *)(v0 + 3960) = QueryDecorationContext.init(input:toolbox:lookback:toolExecutionSession:selfLogger:signposter:)((uint64_t)v34, v32, v33, (uint64_t)v35, (__int128 *)(v0 + 2696), (__int128 *)(v0 + 2616));
    v12 = (_QWORD *)sub_23F36682C();
    sub_23F56E990(v12);
    v13 = sub_23F3ECBD8();
    *(_QWORD *)(v0 + 4008) = v13;
    *(_QWORD *)(v13 + 16) = &unk_256E7AE40;
    *(_QWORD *)(v13 + 24) = v12;
    v14 = v34;
    sub_23F507CF8();
    sub_23F384B00();
    sub_23F3D9E08();
    sub_23F482D50();
    sub_23F35EB74(&qword_256E7AE58);
    swift_asyncLet_begin();
    v15 = (_QWORD *)sub_23F36682C();
    sub_23F56E990(v15);
    v16 = sub_23F3ECBD8();
    *(_QWORD *)(v0 + 4056) = v16;
    *(_QWORD *)(v16 + 16) = &unk_256E7AE68;
    *(_QWORD *)(v16 + 24) = v15;
    sub_23F507CF8();
    sub_23F384B00();
    sub_23F3D9E08();
    sub_23F482D50();
    sub_23F35EB74(&qword_256E7AE80);
    swift_asyncLet_begin();
    v17 = (_QWORD *)sub_23F36682C();
    sub_23F56E990(v17);
    v18 = sub_23F3ECBD8();
    *(_QWORD *)(v0 + 4104) = v18;
    *(_QWORD *)(v18 + 16) = &unk_256E7AE90;
    *(_QWORD *)(v18 + 24) = v17;
    sub_23F507CF8();
    sub_23F384B00();
    sub_23F3D9E08();
    sub_23F4161E8();
    swift_asyncLet_begin();
    v19 = (_QWORD *)sub_23F36682C();
    sub_23F56E990(v19);
    v20 = sub_23F3ECBD8();
    *(_QWORD *)(v0 + 4152) = v20;
    *(_QWORD *)(v20 + 16) = &unk_256E7AEA8;
    *(_QWORD *)(v20 + 24) = v19;
    sub_23F507CF8();
    sub_23F384B00();
    sub_23F3D9E08();
    sub_23F482D50();
    sub_23F35EB74(&qword_256E7AEC0);
    swift_asyncLet_begin();
    sub_23F35D2E8(&qword_256E70150);
    v21 = sub_23F36682C();
    *(_QWORD *)(v0 + 4200) = v21;
    *(_OWORD *)(v21 + 16) = xmmword_23F61D990;
    sub_23F3ECB90();
    return swift_asyncLet_get_throwing();
  }
  else
  {
    sub_23F52E6C0();
    v23 = (void *)sub_23F619E8C();
    v24 = sub_23F61C628();
    if (sub_23F3F0E3C(v24))
    {
      v25 = (_WORD *)sub_23F366668();
      sub_23F3F0EF4(v25);
      sub_23F3F0DF0(&dword_23F35A000, v26, v27, "No Request ID in Query Decoration Input");
      sub_23F366530();
    }
    v28 = *(_QWORD *)(v0 + 3240);

    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
    swift_task_dealloc();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
  }
}

uint64_t sub_23F5665F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 4248) = v0;
  if (v0)
    sub_23F56E964();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F566638()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 4200);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 2904);
  *(_BYTE *)(v1 + 40) = 0;
  sub_23F617BA0();
  sub_23F56E3AC();
  return sub_23F56E400();
}

uint64_t sub_23F566684()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 4296) = v0;
  if (v0)
    sub_23F56E964();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5666C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 4200);
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(v0 + 3048);
  *(_BYTE *)(v1 + 56) = 1;
  sub_23F617BA0();
  sub_23F56E3AC();
  return sub_23F56E400();
}

uint64_t sub_23F566714()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 4344) = v0;
  if (v0)
    sub_23F56E964();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F566754()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 4200);
  *(_QWORD *)(v1 + 64) = *(_QWORD *)(v0 + 3000);
  *(_BYTE *)(v1 + 72) = 2;
  sub_23F617BA0();
  sub_23F56E3AC();
  return sub_23F56E400();
}

uint64_t sub_23F5667A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 4392) = v0;
  if (v0)
    sub_23F56E964();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5667E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 4200);
  v2 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v0 + 2952))
    v2 = *(_QWORD *)(v0 + 2952);
  *(_QWORD *)(v1 + 80) = v2;
  *(_BYTE *)(v1 + 88) = 3;
  sub_23F617BA0();
  sub_23F56E3AC();
  return sub_23F56E400();
}

uint64_t sub_23F566844()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  v1[555] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_23F362984();
    sub_23F36679C();
    return sub_23F3B183C();
  }
  else
  {
    v3 = v1[381];
    v1[561] = v3;
    v1[357] = v3;
    sub_23F617BA0();
    return sub_23F56E400();
  }
}

uint64_t sub_23F5668C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 4496) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_23F362984();
    sub_23F362D18();
  }
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F56691C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_23F56E590();
  v1 = sub_23F617BA0();
  sub_23F3602F4(v1);
  if (*(_QWORD *)(v0[357] + 16))
  {
    v2 = v0[489];
    sub_23F618EA8();
    sub_23F61B494();
    v3 = (_QWORD *)swift_task_alloc();
    v0[563] = v3;
    *v3 = v0;
    v3[1] = sub_23F5669F4;
    return sub_23F56A314(v0[483], v2, v0[429]);
  }
  else
  {
    sub_23F362D18();
    sub_23F384120();
    v0[566] = v0[525];
    sub_23F38422C();
    return sub_23F56E688();
  }
}

uint64_t sub_23F5669F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F406D10();
  *(_QWORD *)(v1 + 4512) = v2;
  *(_QWORD *)(v1 + 4520) = v0;
  sub_23F52E8D0();
  sub_23F362D18();
  if (v0)
    swift_bridgeObjectRelease();
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F566A60()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_23F556FDC();
  v1 = v0[525];
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if (v3 >= v2 >> 1)
  {
    sub_23F3B1A80(v2);
    sub_23F377F20();
    v1 = v10;
  }
  v4 = v0[564];
  v5 = v0[429];
  v6 = v0[423];
  v7 = v0[417];
  *(_QWORD *)(v1 + 16) = v3 + 1;
  v8 = v1 + 16 * v3;
  *(_QWORD *)(v8 + 32) = v4;
  *(_BYTE *)(v8 + 40) = 4;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v0[566] = v1;
  sub_23F3B1CF8();
  return sub_23F56E3F8();
}

uint64_t sub_23F566B08()
{
  return sub_23F362A4C();
}

uint64_t sub_23F566B14()
{
  sub_23F56E548();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F566B4C()
{
  return sub_23F362A4C();
}

uint64_t sub_23F566B58()
{
  sub_23F56E554();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F566B90()
{
  return sub_23F362A4C();
}

uint64_t sub_23F566B9C()
{
  sub_23F56E520();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F566BD4()
{
  return sub_23F362A4C();
}

uint64_t sub_23F566BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F556FDC();
  swift_release();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 2776);
  sub_23F3D9B70();
  sub_23F3667A8();
  sub_23F3D9AF4();
  sub_23F3668FC();
  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  v1 = sub_23F56E85C();
  return sub_23F3E0218(v1, v2);
}

uint64_t sub_23F566C7C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 4200) + 16) = 0;
  swift_release();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F566CC0()
{
  return sub_23F362A4C();
}

uint64_t sub_23F566CCC()
{
  sub_23F56E548();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F566D04()
{
  return sub_23F362A4C();
}

uint64_t sub_23F566D10()
{
  sub_23F56E554();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F566D48()
{
  return sub_23F362A4C();
}

uint64_t sub_23F566D54()
{
  sub_23F56E520();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F566D8C()
{
  return sub_23F362A4C();
}

uint64_t sub_23F566D98()
{
  uint64_t (*v0)(void);

  sub_23F3B1D38();
  sub_23F56E3BC();
  sub_23F56E468();
  sub_23F3DDBDC();
  sub_23F3667A8();
  sub_23F3D9AF4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  v0 = (uint64_t (*)(void))sub_23F56E784();
  return sub_23F366630(v0);
}

uint64_t sub_23F566DEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 4200);
  sub_23F56EA10();
  *(_QWORD *)(v1 + 16) = 0;
  sub_23F3667A8();
  sub_23F56E3AC();
  return sub_23F56E3F8();
}

uint64_t sub_23F566E3C()
{
  return sub_23F362A4C();
}

uint64_t sub_23F566E48()
{
  sub_23F56E548();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F566E80()
{
  return sub_23F362A4C();
}

uint64_t sub_23F566E8C()
{
  sub_23F56E554();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F566EC4()
{
  return sub_23F362A4C();
}

uint64_t sub_23F566ED0()
{
  sub_23F56E520();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F566F08()
{
  return sub_23F362A4C();
}

uint64_t sub_23F566F14()
{
  uint64_t (*v0)(void);

  sub_23F3B1D38();
  sub_23F56E3BC();
  sub_23F56E468();
  sub_23F3DDBDC();
  sub_23F3667A8();
  sub_23F3D9AF4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  v0 = (uint64_t (*)(void))sub_23F56E784();
  return sub_23F366630(v0);
}

uint64_t sub_23F566F68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 4200);
  swift_bridgeObjectRelease();
  sub_23F56EA10();
  *(_QWORD *)(v1 + 16) = 0;
  sub_23F3667A8();
  sub_23F56E3AC();
  return sub_23F56E3F8();
}

uint64_t sub_23F566FC0()
{
  return sub_23F362A4C();
}

uint64_t sub_23F566FCC()
{
  sub_23F56E548();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F567004()
{
  return sub_23F362A4C();
}

uint64_t sub_23F567010()
{
  sub_23F56E554();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F567048()
{
  return sub_23F362A4C();
}

uint64_t sub_23F567054()
{
  sub_23F56E520();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F56708C()
{
  return sub_23F362A4C();
}

uint64_t sub_23F567098()
{
  uint64_t (*v0)(void);

  sub_23F3B1D38();
  sub_23F56E3BC();
  sub_23F56E468();
  sub_23F3DDBDC();
  sub_23F3667A8();
  sub_23F3D9AF4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  v0 = (uint64_t (*)(void))sub_23F56E784();
  return sub_23F366630(v0);
}

uint64_t sub_23F5670EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 4200);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F56EA10();
  *(_QWORD *)(v1 + 16) = 0;
  sub_23F3667A8();
  sub_23F56E3AC();
  return sub_23F56E3F8();
}

uint64_t sub_23F56714C()
{
  return sub_23F362A4C();
}

uint64_t sub_23F567158()
{
  sub_23F56E548();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F567190()
{
  return sub_23F362A4C();
}

uint64_t sub_23F56719C()
{
  sub_23F56E554();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F5671D4()
{
  return sub_23F362A4C();
}

uint64_t sub_23F5671E0()
{
  sub_23F56E520();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F567218()
{
  return sub_23F362A4C();
}

uint64_t sub_23F567224()
{
  uint64_t (*v0)(void);

  sub_23F3B1D38();
  sub_23F56E3BC();
  sub_23F56E468();
  sub_23F3DDBDC();
  sub_23F3667A8();
  sub_23F3D9AF4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  v0 = (uint64_t (*)(void))sub_23F56E784();
  return sub_23F366630(v0);
}

uint64_t sub_23F567278()
{
  return swift_asyncLet_finish();
}

uint64_t sub_23F567290()
{
  return sub_23F362A4C();
}

uint64_t sub_23F56729C()
{
  sub_23F56E548();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F5672D4()
{
  return sub_23F362A4C();
}

uint64_t sub_23F5672E0()
{
  sub_23F56E554();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F567318()
{
  return sub_23F362A4C();
}

uint64_t sub_23F567324()
{
  sub_23F56E520();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F56735C()
{
  return sub_23F362A4C();
}

uint64_t sub_23F567368()
{
  uint64_t (*v0)(void);

  sub_23F3B1D38();
  sub_23F56E3BC();
  sub_23F56E468();
  sub_23F3DDBDC();
  sub_23F3667A8();
  sub_23F3D9AF4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  v0 = (uint64_t (*)(void))sub_23F56E784();
  return sub_23F366630(v0);
}

uint64_t sub_23F5673BC()
{
  return swift_asyncLet_finish();
}

uint64_t sub_23F5673D8()
{
  return sub_23F362A4C();
}

uint64_t sub_23F5673E4()
{
  sub_23F56E548();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F567420()
{
  return sub_23F362A4C();
}

uint64_t sub_23F56742C()
{
  sub_23F56E554();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F567468()
{
  return sub_23F362A4C();
}

uint64_t sub_23F567474()
{
  sub_23F56E520();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F5674B0()
{
  return sub_23F362A4C();
}

uint64_t sub_23F5674BC()
{
  uint64_t (*v0)(void);

  sub_23F3B1D38();
  sub_23F56E3BC();
  sub_23F56E468();
  sub_23F3DDBDC();
  sub_23F3667A8();
  sub_23F3D9AF4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  v0 = (uint64_t (*)(void))sub_23F56E784();
  return sub_23F366630(v0);
}

uint64_t sub_23F567510()
{
  uint64_t v0;

  sub_23F384274(*(_QWORD *)(v0 + 3384));
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F56755C()
{
  return sub_23F362A4C();
}

uint64_t sub_23F567568()
{
  sub_23F56E548();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F5675A4()
{
  return sub_23F362A4C();
}

uint64_t sub_23F5675B0()
{
  sub_23F56E554();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F5675EC()
{
  return sub_23F362A4C();
}

uint64_t sub_23F5675F8()
{
  sub_23F56E520();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F567630()
{
  return sub_23F362A4C();
}

uint64_t sub_23F56763C()
{
  uint64_t (*v0)(void);

  sub_23F3B1D38();
  sub_23F56E3BC();
  sub_23F56E468();
  sub_23F3DDBDC();
  sub_23F3667A8();
  sub_23F3D9AF4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  v0 = (uint64_t (*)(void))sub_23F56E784();
  return sub_23F366630(v0);
}

uint64_t sub_23F567690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23F56E38C;
  return sub_23F56A144(a2, a3, a4);
}

uint64_t sub_23F5676FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23F56E38C;
  return sub_23F569730(a2, a3, a4);
}

uint64_t sub_23F567768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23F56E38C;
  return sub_23F568FFC(a2, a3, a4);
}

uint64_t sub_23F5677D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23F55099C;
  return sub_23F56A240(a2, a3, a4);
}

uint64_t sub_23F567840(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  v3 = sub_23F3B1728();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = sub_23F366578();
  v4 = sub_23F54DF38();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = sub_23F366578();
  v5 = sub_23F534804();
  v2[12] = v5;
  v2[13] = *(_QWORD *)(v5 - 8);
  v2[14] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5678BC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  int8x16_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int8x16_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v22;
  os_log_type_t v23;
  _WORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 104);
  sub_23F56E570(*MEMORY[0x24BE57D90], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v2 = sub_23F56E6EC();
  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v2 & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 80);
    sub_23F56E5F4(*(double *)(v0 + 24));
    sub_23F56E570(*MEMORY[0x24BE59320], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
    v4 = (int8x16_t *)sub_23F384908();
    *(_QWORD *)(v0 + 120) = v4;
    sub_23F56E720(v4, v5, v6, v7, v8, v9, v10, v11, v12);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v13;
    sub_23F35D2E8(&qword_256E7AEC0);
    *v13 = v0;
    v13[1] = sub_23F567A20;
    v14 = sub_23F56E5D8();
    return sub_23F56E4D8(v14, v15, v16, v17, v18, v19, v20);
  }
  else
  {
    v22 = *(void **)(v0 + 64);
    sub_23F52E6C0();
    sub_23F619E8C();
    v23 = sub_23F507D60();
    if (sub_23F3F0E3C(v23))
    {
      v24 = (_WORD *)sub_23F366668();
      sub_23F3F0EF4(v24);
      sub_23F3F0DF0(&dword_23F35A000, v25, v26, "Span matching skipped as not present in servicesExecuted");
      sub_23F366530();
    }
    v27 = *(_QWORD *)(v0 + 56);

    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
    sub_23F56E878();
    sub_23F362CC8();
    sub_23F3666DC();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_23F567A20()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23F56E590();
  sub_23F3B1998();
  v4 = v2[10];
  v3 = v2[11];
  *v5 = *v1;
  v2[17] = v0;
  swift_task_dealloc();
  sub_23F383CA8(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F3666DC();
  sub_23F36679C();
  return sub_23F383F08();
}

uint64_t sub_23F567A8C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  v0 = sub_23F56E85C();
  return sub_23F551440(v0, v1);
}

uint64_t sub_23F567AD0()
{
  uint64_t v0;

  sub_23F56E878();
  sub_23F362CC8();
  sub_23F3666DC();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F567B04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = sub_23F619004();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(sub_23F618E90() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  if (!v7)
  {
LABEL_8:
    v12 = 1;
    goto LABEL_9;
  }
  v8 = sub_23F618E90();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = v8 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v11 = *(_QWORD *)(v4 + 72);
    sub_23F3612C0(&qword_256E7B288, (uint64_t (*)(uint64_t))MEMORY[0x24BE57DB8], MEMORY[0x24BE57DD0]);
    while ((sub_23F61C0A0() & 1) == 0)
    {
      v10 += v11;
      if (!--v9)
        goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_6:
  swift_bridgeObjectRelease();
  v12 = 0;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v12;
}

uint64_t sub_23F567C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23F567C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F556FDC();
  v1 = sub_23F56E7A8();
  v3 = sub_23F56E8AC(v1, v2);
  sub_23F56E9D8(v3, v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v5;
  v6 = sub_23F56E750(v5, (uint64_t)sub_23F567CB8);
  return sub_23F5545DC(v6, v7, v8, v9, v10);
}

uint64_t sub_23F567CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F56E664();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 72) = v0;
    sub_23F362984();
  }
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F567D08()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 72);
  return sub_23F56E514();
}

uint64_t sub_23F567D18()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_23F362984();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F567D48(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[4] = a1;
  v2[5] = v1;
  v2[6] = *v1;
  v3 = sub_23F3B1728();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = sub_23F366578();
  v4 = sub_23F54DF38();
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 - 8);
  v2[12] = sub_23F366578();
  v5 = sub_23F534804();
  v2[13] = v5;
  v2[14] = *(_QWORD *)(v5 - 8);
  v2[15] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F567DC4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  int8x16_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int8x16_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v22;
  os_log_type_t v23;
  _WORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);

  v1 = *(_QWORD *)(v0 + 112);
  sub_23F56E570(*MEMORY[0x24BE57DA0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v2 = sub_23F56E6EC();
  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v2 & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 88);
    sub_23F56E5F4(*(double *)(v0 + 32));
    sub_23F56E570(*MEMORY[0x24BE59348], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
    v4 = (int8x16_t *)sub_23F384908();
    *(_QWORD *)(v0 + 128) = v4;
    sub_23F56E720(v4, v5, v6, v7, v8, v9, v10, v11, v12);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v13;
    sub_23F35D2E8(&qword_256E7B2B0);
    *v13 = v0;
    v13[1] = sub_23F567F20;
    v14 = sub_23F56E5D8();
    return sub_23F56E4D8(v14, v15, v16, v17, v18, v19, v20);
  }
  else
  {
    v22 = *(void **)(v0 + 72);
    sub_23F52E6C0();
    sub_23F619E8C();
    v23 = sub_23F507D60();
    if (sub_23F3F0E3C(v23))
    {
      v24 = (_WORD *)sub_23F366668();
      sub_23F3F0EF4(v24);
      sub_23F3F0DF0(&dword_23F35A000, v25, v26, "Context retrieval skiped as not present in servicesExecuted");
      sub_23F366530();
    }
    v27 = *(_QWORD *)(v0 + 64);

    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
    sub_23F5570A4();
    sub_23F362CC8();
    sub_23F3666DC();
    v28 = sub_23F56EA18();
    return v29(v28);
  }
}

uint64_t sub_23F567F20()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D10();
  sub_23F3B2010(v2);
  *(_QWORD *)(v1 + 144) = v0;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v1 + 88));
  sub_23F3666DC();
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F567F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc();
  sub_23F3666C4();
  sub_23F3666EC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F567FDC()
{
  uint64_t v0;

  sub_23F5570A4();
  sub_23F362CC8();
  sub_23F3666DC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F568014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23F568030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F556FDC();
  v1 = sub_23F56E7A8();
  v3 = sub_23F56E8AC(v1, v2);
  sub_23F56E9D8(v3, v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v5;
  v6 = sub_23F56E750(v5, (uint64_t)sub_23F568088);
  return sub_23F554FE8(v6, v7, v8, v9, v10);
}

uint64_t sub_23F568088(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  sub_23F56E628();
  sub_23F3B2010(v6);
  v4[8] = v2;
  swift_task_dealloc();
  if (!v2)
  {
    swift_bridgeObjectRelease();
    v4[9] = a2;
    v4[10] = v3;
    sub_23F362984();
  }
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F5680F4()
{
  uint64_t v0;

  *(int8x16_t *)*(_QWORD *)(v0 + 16) = vextq_s8(*(int8x16_t *)(v0 + 72), *(int8x16_t *)(v0 + 72), 8uLL);
  return sub_23F56E514();
}

uint64_t sub_23F568108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = *v4;
  v6 = sub_23F3B1728();
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = sub_23F366578();
  v7 = sub_23F54DF38();
  v5[11] = v7;
  v5[12] = *(_QWORD *)(v7 - 8);
  v5[13] = sub_23F366578();
  v8 = sub_23F534804();
  v5[14] = v8;
  v5[15] = *(_QWORD *)(v8 - 8);
  v5[16] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F56818C()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v15;
  os_log_type_t v16;
  _WORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v26;

  v1 = v0[15];
  sub_23F56E570(*MEMORY[0x24BE57D98], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v2 = sub_23F56E6EC();
  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v2 & 1) != 0)
  {
    v4 = v0[12];
    v3 = v0[13];
    v5 = v0[11];
    v7 = v0[5];
    v6 = v0[6];
    v8 = (_QWORD *)v0[3];
    v9 = v0[4];
    v10 = v8[5];
    v26 = v8[6];
    sub_23F35EA9C(v8 + 2, v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, *MEMORY[0x24BE59328], v5);
    v11 = (_QWORD *)swift_task_alloc();
    v0[17] = (uint64_t)v11;
    v11[2] = v6;
    v11[3] = v8;
    v11[4] = v9;
    v11[5] = v7;
    v12 = (_QWORD *)swift_task_alloc();
    v0[18] = (uint64_t)v12;
    v13 = sub_23F35D2E8(&qword_256E70F38);
    *v12 = v0;
    v12[1] = sub_23F568354;
    return QueryDecorationSELFLogging.logSubComponentExecution<A>(_:_:)(v0[2], v0[13], (uint64_t)&unk_256E7B298, (uint64_t)v11, v10, v13, v26);
  }
  else
  {
    v15 = (void *)v0[10];
    sub_23F52E6C0();
    sub_23F619E8C();
    v16 = sub_23F507D60();
    if (sub_23F3F0E3C(v16))
    {
      v17 = (_WORD *)sub_23F366668();
      sub_23F3F0EF4(v17);
      sub_23F3F0DF0(&dword_23F35A000, v18, v19, "Tool retrieval skipped as not present in servicesExecuted");
      sub_23F366530();
    }
    v20 = v0[9];
    v21 = v0[2];

    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    v22 = sub_23F556EE0();
    sub_23F3838D8(v21, v23, v24, v22);
    sub_23F56E934();
    sub_23F362CC8();
    sub_23F3666DC();
    v25 = (uint64_t (*)(void))sub_23F384760();
    return v25();
  }
}

uint64_t sub_23F568354()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v8)(void);
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F556FDC();
  v10 = v2;
  v11 = v3;
  v9 = v1;
  v4 = (_QWORD *)*v1;
  v9 = v4;
  v6 = v4[12];
  v5 = v4[13];
  sub_23F3B2010(&v9);
  v4[19] = v0;
  swift_task_dealloc();
  sub_23F383CA8(v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_23F3666DC();
  if (v0)
  {
    sub_23F36679C();
    return sub_23F36664C();
  }
  else
  {
    swift_task_dealloc();
    sub_23F362CC8();
    sub_23F3666DC();
    v8 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F435B58(v8);
  }
}

uint64_t sub_23F5683F4()
{
  uint64_t v0;

  sub_23F56E934();
  sub_23F362CC8();
  sub_23F3666DC();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F568428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  return swift_task_switch();
}

uint64_t sub_23F568448()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[10];
  v1 = v0[11];
  sub_23F382FC4(v0[8] + 64, (uint64_t)(v0 + 2));
  sub_23F35EA9C(v0 + 2, v0[5]);
  v3 = sub_23F618EA8();
  v5 = v4;
  v0[12] = v4;
  if (v2)
    v6 = v2;
  else
    v6 = MEMORY[0x24BEE4B08];
  if (v1)
    v7 = v1;
  else
    v7 = MEMORY[0x24BEE4B08];
  sub_23F389CDC();
  sub_23F3668F4();
  v8 = sub_23F618EC0();
  v10 = v9;
  v0[13] = v9;
  v11 = (_QWORD *)swift_task_alloc();
  v0[14] = v11;
  *v11 = v0;
  v11[1] = sub_23F568538;
  return sub_23F553B50(v0[7], v3, v5, v6, v7, v8, v10, v0[9]);
}

uint64_t sub_23F568538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _QWORD *a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  sub_23F56E590();
  a15 = v18;
  a16 = v19;
  a14 = v17;
  a14 = (_QWORD *)*v17;
  v20 = a14;
  sub_23F3B2010(&a14);
  v20[15] = v16;
  swift_task_dealloc();
  sub_23F362D18();
  sub_23F362D08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F36679C();
  return sub_23F383F08();
}

uint64_t sub_23F5685C0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  v1 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F362888(v1);
}

uint64_t sub_23F5685E8()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F568614(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[105] = v2;
  v3[99] = a2;
  v3[93] = a1;
  v3[111] = *v2;
  v4 = sub_23F3B1728();
  v3[112] = v4;
  v3[113] = *(_QWORD *)(v4 - 8);
  v3[114] = sub_23F366578();
  v5 = sub_23F534804();
  v3[115] = v5;
  v3[116] = *(_QWORD *)(v5 - 8);
  v3[117] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F568680()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  os_log_type_t v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);

  sub_23F432AC4();
  v1 = v0[116];
  sub_23F56E570(*MEMORY[0x24BE57DA8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v2 = sub_23F56E6EC();
  sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v2 & 1) != 0)
  {
    v3 = v0[105];
    v4 = v0[93];
    v5 = sub_23F3ECBD8();
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v3;
    v6 = sub_23F3ECBD8();
    v0[118] = v6;
    *(_QWORD *)(v6 + 16) = &unk_256E7B258;
    *(_QWORD *)(v6 + 24) = v5;
    swift_retain();
    sub_23F4161E8();
    sub_23F3D0A10();
    sub_23F35EB74(&qword_256E7B270);
    swift_asyncLet_begin();
    sub_23F384AB4();
    return swift_asyncLet_get_throwing();
  }
  else
  {
    v8 = (void *)v0[114];
    sub_23F52E6C0();
    sub_23F619E8C();
    v9 = sub_23F507D60();
    if (sub_23F3F0E3C(v9))
    {
      v10 = (_WORD *)sub_23F366668();
      sub_23F3F0EF4(v10);
      sub_23F3F0DF0(&dword_23F35A000, v11, v12, "Tool context retrieval skiped as not present in servicesExecuted");
      sub_23F366530();
    }
    v13 = v0[113];

    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    swift_task_dealloc();
    sub_23F362CC8();
    v14 = sub_23F56EA18();
    return v15(v14);
  }
}

uint64_t sub_23F56880C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 952) = v0;
  if (v0)
    return swift_asyncLet_finish();
  else
    return sub_23F362A4C();
}

uint64_t sub_23F568838()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F556FDC();
  sub_23F617BA0();
  sub_23F389F14();
  sub_23F568DE8();
  *(_QWORD *)(v0 + 960) = v1;
  swift_bridgeObjectRelease();
  return sub_23F56E82C();
}

uint64_t sub_23F5688AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 968) = v0;
  return sub_23F362A4C();
}

uint64_t sub_23F5688CC()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F556FDC();
  sub_23F617BA0();
  sub_23F56A68C();
  sub_23F3837B0();
  sub_23F56AC70();
  *(_QWORD *)(v0 + 976) = v1;
  sub_23F384120();
  sub_23F56E3AC();
  return sub_23F56E3F8();
}

uint64_t sub_23F56894C()
{
  return sub_23F362A4C();
}

uint64_t sub_23F568958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3D9B70();
  swift_task_dealloc();
  sub_23F3666C4();
  v0 = sub_23F3C85C0();
  return sub_23F56E560(v0, v1, v2);
}

uint64_t sub_23F5689A4()
{
  return sub_23F362A4C();
}

uint64_t sub_23F5689B0()
{
  uint64_t v0;

  sub_23F3D9B70();
  sub_23F3666DC();
  sub_23F3666C4();
  return sub_23F3B182C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5689F0()
{
  swift_bridgeObjectRelease();
  sub_23F56E3AC();
  return sub_23F56E39C();
}

uint64_t sub_23F568A30()
{
  return sub_23F362A4C();
}

uint64_t sub_23F568A3C()
{
  uint64_t v0;

  sub_23F3D9B70();
  sub_23F3666DC();
  sub_23F3666C4();
  return sub_23F3B182C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F568A7C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = a2;
  v3 = sub_23F61994C();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F568ADC()
{
  uint64_t v0;
  uint64_t v1;
  int8x16_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int8x16_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 48);
  sub_23F56E5F4(*(double *)(v0 + 24));
  sub_23F56E570(*MEMORY[0x24BE59350], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  v2 = (int8x16_t *)sub_23F384908();
  *(_QWORD *)(v0 + 64) = v2;
  sub_23F56E720(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v11;
  sub_23F35D2E8(&qword_256E7B270);
  *v11 = v0;
  v11[1] = sub_23F568B80;
  v12 = sub_23F56E5D8();
  return sub_23F56E4D8(v12, v13, v14, v15, v16, v17, v18);
}

uint64_t sub_23F568B80()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23F56E590();
  sub_23F3B1998();
  v4 = v2[6];
  v3 = v2[7];
  *v5 = *v1;
  v2[10] = v0;
  swift_task_dealloc();
  sub_23F383CA8(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F3666DC();
  sub_23F36679C();
  return sub_23F383F08();
}

uint64_t sub_23F568BEC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  swift_task_dealloc();
  v0 = sub_23F56E85C();
  return v1(v0);
}

uint64_t sub_23F568C20()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F568C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23F568C68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23F35EA9C((_QWORD *)(v0[3] + 64), *(_QWORD *)(v0[3] + 88));
  v1 = sub_23F618EC0();
  v3 = v2;
  v0[5] = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_23F568CE8;
  return sub_23F56E65C(v1, v3, v0[4]);
}

uint64_t sub_23F568CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F56E4F0();
  if (!v1)
  {
    *(_QWORD *)(v2 + 64) = v0;
    swift_bridgeObjectRelease();
  }
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F568D34()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 64);
  return sub_23F56E514();
}

uint64_t sub_23F568D44(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_23F568D9C;
  return v5();
}

uint64_t sub_23F568D9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *v2;
  v7 = *v2;
  v5 = *v2;
  sub_23F50746C(&v7);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return sub_23F3B182C(*(uint64_t (**)(void))(v5 + 8));
}

void sub_23F568DE8()
{
  os_log_type_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14[3];
  uint64_t v15;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  sub_23F3B1728();
  sub_23F56EAB4();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  v15 = MEMORY[0x24BEE4B08];
  if (v2)
  {
    sub_23F5690F8();
    v15 = v6;
  }
  if (v4)
  {
    sub_23F569888();
    v4 = &v15;
    sub_23F36044C();
  }
  sub_23F54DED8();
  sub_23F3E0254();
  sub_23F507D88();
  v7 = sub_23F507D60();
  if (sub_23F3B1E8C(v7))
  {
    v8 = sub_23F366668();
    v14[0] = sub_23F366668();
    *(_DWORD *)v8 = 136315394;
    sub_23F556C28(55, 0x800000023F639D60, v14);
    sub_23F56E8A4();
    *(_WORD *)(v8 + 12) = 2080;
    sub_23F56E834();
    sub_23F3612C0(&qword_256E70148, (uint64_t (*)(uint64_t))MEMORY[0x24BE57C08], MEMORY[0x24BE57C18]);
    sub_23F617BA0();
    v9 = sub_23F61C544();
    v11 = v10;
    swift_bridgeObjectRelease();
    sub_23F37AE00(v9, v11, v14);
    sub_23F56E8A4();
    sub_23F384A80();
    sub_23F3B5F04();
    sub_23F3E025C(&dword_23F35A000, v4, v0, "QDInternal: Apps for Stage Two Tool Retrieval | %s\nOutput of mentioned and foregrounded apps (list of bundle IDs): %s", (uint8_t *)v8);
    sub_23F507364();
    sub_23F366530();
  }

  sub_23F384A80();
  v12 = sub_23F482A1C();
  v13(v12);
  sub_23F3C08CC();
  sub_23F362948();
}

uint64_t sub_23F568FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_23F362A4C();
}

uint64_t sub_23F569010()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F56E96C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_23F56905C;
  v2 = sub_23F56E790(*(_QWORD *)(v0 + 16));
  return sub_23F56E65C(v2, v3, v4);
}

uint64_t sub_23F56905C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F56E4F0();
  if (v1)
    return sub_23F3B182C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 64) = v0;
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F5690A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F5690F8();
  v2 = v1;
  sub_23F362984();
  sub_23F561D20(v2);
  v4 = v3;
  sub_23F362D18();
  sub_23F368E14(v4);
  return sub_23F551440(v5, *(uint64_t (**)(void))(v0 + 8));
}

void sub_23F5690F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91[5];

  sub_23F362ABC();
  v2 = v1;
  v69 = sub_23F3B1728();
  v68 = *(_QWORD *)(v69 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v70 = v4;
  v73 = sub_23F56E834();
  v79 = *(_QWORD *)(v73 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3834D0();
  v72 = v6;
  MEMORY[0x24BDAC7A8](v7);
  sub_23F383780();
  v71 = v8;
  v9 = sub_23F61B83C();
  v77 = *(_QWORD *)(v9 - 8);
  v78 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  v76 = v11;
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F4DC4C4(v13, v66);
  v80 = sub_23F61B8A8();
  v14 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  sub_23F362AAC();
  v17 = (char *)(v15 - v16);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v66 - v19;
  v21 = sub_23F618AE8();
  v88 = *(_QWORD *)(v21 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F38F964();
  v25 = v24 - v23;
  v26 = sub_23F618D28();
  sub_23F56E9C4();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F3E2718();
  v91[3] = MEMORY[0x24BEE4B08];
  v28 = *(_QWORD *)(v2 + 16);
  if (v28)
  {
    sub_23F383EB8();
    v30 = v2 + v29;
    v32 = *(_QWORD *)(v31 + 72);
    v84 = v31;
    v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
    v87 = v32;
    v85 = *MEMORY[0x24BE57298];
    v81 = *MEMORY[0x24BEB9A00];
    v75 = *MEMORY[0x24BEB9910];
    v67 = *MEMORY[0x24BE57C00];
    v66 = v2;
    sub_23F383738();
    v82 = v14;
    v83 = v21;
    v74 = v20;
    do
    {
      v86(v0, v30, v26);
      sub_23F618CF8();
      v33 = v88;
      v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 88))(v25, v21);
      if (v34 == v85)
      {
        sub_23F383CA8(v25, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
        v35 = v89;
        sub_23F618CE0();
        v36 = sub_23F61B92C();
        sub_23F383740(v35, 1, v36);
        if (v37)
        {
          sub_23F56E57C();
          sub_23F3D9844(v89, &qword_256E701F0);
        }
        else
        {
          v38 = *(_QWORD *)(v36 - 8);
          v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 88))(v89, v36);
          if (v39 == v81)
          {
            (*(void (**)(uint64_t, uint64_t))(v38 + 96))(v89, v36);
            v40 = swift_projectBox();
            v41 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 16);
            v42 = v80;
            v41(v20, v40, v80);
            v43 = v82;
            swift_release();
            v41(v17, (uint64_t)v20, v42);
            v44 = (*(uint64_t (**)(char *, uint64_t))(v43 + 88))(v17, v42);
            if (v44 == v75)
            {
              v45 = sub_23F3C85C0();
              v46(v45);
              (*(void (**)(uint64_t, char *, uint64_t))(v77 + 32))(v76, v17, v78);
              v47 = sub_23F61B824();
              v49 = v48;
              v50 = sub_23F618CD4();
              v51 = v72;
              *v72 = v47;
              v51[1] = v49;
              v51[2] = v50;
              v51[3] = v52;
              (*(void (**)(uint64_t *, _QWORD, uint64_t))(v79 + 104))(v51, v67, v73);
              v53 = v71;
              sub_23F4733B0();
              v54 = v53;
              v55 = v82;
              sub_23F383E88(v54, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
              (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v78);
              v20 = v74;
              (*(void (**)(char *, uint64_t))(v55 + 8))(v74, v80);
              (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v0, v26);
            }
            else
            {
              v56 = v42;
              v57 = *(void (**)(char *, uint64_t))(v43 + 8);
              v20 = v74;
              v57(v74, v56);
              sub_23F56E57C();
              v57(v17, v56);
            }
          }
          else
          {
            sub_23F56E57C();
            (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v89, v36);
          }
        }
        v21 = v83;
      }
      else
      {
        sub_23F56E57C();
        sub_23F383CA8(v25, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
      }
      v30 += v87;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
  }
  v58 = v70;
  sub_23F6190E8();
  sub_23F3E0254();
  v59 = sub_23F619E8C();
  v60 = sub_23F61C610();
  if (sub_23F3B1604(v60))
  {
    v61 = sub_23F366668();
    v91[0] = sub_23F366668();
    *(_DWORD *)v61 = 136315394;
    sub_23F556C28(37, 0x800000023F639D30, v91);
    v90 = v62;
    sub_23F56E808();
    *(_WORD *)(v61 + 12) = 2080;
    sub_23F3612C0(&qword_256E70148, (uint64_t (*)(uint64_t))MEMORY[0x24BE57C08], MEMORY[0x24BE57C18]);
    sub_23F617BA0();
    v63 = sub_23F61C544();
    sub_23F384120();
    sub_23F56E8BC(v63, v64, v91);
    v90 = v65;
    sub_23F56E808();
    sub_23F384A80();
    sub_23F38458C();
    sub_23F3E025C(&dword_23F35A000, v59, (os_log_type_t)v28, "%s returning inFocusAppBundleIDs %s", (uint8_t *)v61);
    sub_23F507364();
    sub_23F366530();
  }

  sub_23F384A80();
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v58, v69);
  sub_23F3C08CC();
  sub_23F362948();
}

uint64_t sub_23F569730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_23F362A4C();
}

uint64_t sub_23F569744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F56E590();
  v1 = sub_23F56E6F8();
  sub_23F56EA4C(v1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v4 = sub_23F56E730(v3, (uint64_t)sub_23F569788);
  return sub_23F56E69C(v4, v5, v6, v7, v8);
}

uint64_t sub_23F569788(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v1;
  sub_23F52E8D0();
  if (!v1)
    swift_bridgeObjectRelease();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F5697F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(v0 + 64))
  {
    sub_23F569888();
    v2 = v1;
    sub_23F362984();
    sub_23F561D20(v2);
    v4 = v3;
    sub_23F362D18();
    sub_23F368E14(v4);
  }
  else
  {
    v5 = MEMORY[0x24BEE4B08];
  }
  return sub_23F551440(v5, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F56985C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F569888()
{
  NSObject *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[2];

  sub_23F362ABC();
  v4 = v3;
  v33 = *(_QWORD *)(sub_23F3B1728() - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F4DC4C4(v6, v32);
  sub_23F35D2E8(&qword_256E7B318);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F383EC4();
  v8 = sub_23F56E834();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F482314();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383780();
  v36 = v11;
  v12 = *(_QWORD *)(v4 + 16);
  if (v12)
  {
    v13 = *(_QWORD *)(sub_23F618D88() - 8);
    v14 = v4 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v0 = *(NSObject **)(v13 + 72);
    sub_23F383738();
    v15 = MEMORY[0x24BEE4AF8];
    v35 = v2;
    do
    {
      sub_23F569BDC(v14, v1);
      sub_23F383740((uint64_t)v1, 1, v8);
      if (v16)
      {
        sub_23F3D9844((uint64_t)v1, &qword_256E7B318);
      }
      else
      {
        v17 = sub_23F406E84();
        sub_23F4DC8D0(v17, v18);
        sub_23F4DC8D0(v2, v36);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F3DDBE4();
          sub_23F377FD8();
          v15 = v25;
        }
        v21 = *(_QWORD *)(v15 + 16);
        v20 = *(_QWORD *)(v15 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_23F3B1A80(v20);
          sub_23F377FD8();
          v15 = v26;
        }
        *(_QWORD *)(v15 + 16) = v21 + 1;
        sub_23F383EB8();
        v24 = v15 + v22 + *(_QWORD *)(v23 + 72) * v21;
        v2 = v35;
        sub_23F4DC8D0(v24, v35);
      }
      v14 += (uint64_t)v0;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  sub_23F369344();
  sub_23F52E6C0();
  sub_23F3E0254();
  sub_23F619E8C();
  v27 = sub_23F56E9D0();
  if (os_log_type_enabled(v0, v27))
  {
    v28 = sub_23F366668();
    v37[0] = sub_23F366668();
    *(_DWORD *)v28 = 136315394;
    sub_23F56E86C();
    sub_23F556C28(33, v29, v37);
    sub_23F56E8D0();
    *(_WORD *)(v28 + 12) = 2080;
    sub_23F3612C0(&qword_256E70148, (uint64_t (*)(uint64_t))MEMORY[0x24BE57C08], MEMORY[0x24BE57C18]);
    sub_23F389CDC();
    v30 = sub_23F61C544();
    sub_23F362D08();
    sub_23F56E8BC(v30, v31, v37);
    sub_23F56E8D0();
    sub_23F384A80();
    sub_23F38458C();
    sub_23F3E025C(&dword_23F35A000, v0, v27, "%s returning appNameSpans %s", (uint8_t *)v28);
    sub_23F507364();
    sub_23F366530();
  }

  sub_23F384A80();
  sub_23F38456C(v34, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
  sub_23F362948();
}

uint64_t sub_23F569BDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;

  v57 = a2;
  v3 = sub_23F35D2E8(qword_256E71C50);
  MEMORY[0x24BDAC7A8](v3);
  v55 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_23F618B78();
  v52 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v51 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B9EC();
  v58 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E78AC8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F35D2E8(&qword_256E702C8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (uint64_t *)((char *)&v51 - v19);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v51 - v21;
  v54 = a1;
  sub_23F618D64();
  v23 = sub_23F61B92C();
  if (sub_23F36195C((uint64_t)v13, 1, v23) == 1)
  {
    sub_23F3D9844((uint64_t)v13, &qword_256E701F0);
    v24 = 1;
  }
  else
  {
    sub_23F61B8CC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v13, v23);
    v24 = 0;
  }
  sub_23F36196C((uint64_t)v22, v24, 1, v6);
  v25 = sub_23F61B9BC();
  v26 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEB9C78], v25);
  *v20 = v26;
  v28 = v58;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v58 + 104))(v20, *MEMORY[0x24BEB9D18], v6);
  sub_23F36196C((uint64_t)v20, 0, 1, v6);
  v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23F56DE98((uint64_t)v22, (uint64_t)v10, &qword_256E702C8);
  sub_23F56DE98((uint64_t)v20, v29, &qword_256E702C8);
  if (sub_23F36195C((uint64_t)v10, 1, v6) != 1)
  {
    sub_23F56DE98((uint64_t)v10, (uint64_t)v17, &qword_256E702C8);
    if (sub_23F36195C(v29, 1, v6) != 1)
    {
      v31 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v53, v29, v6);
      sub_23F3612C0(&qword_256E70168, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9D20], MEMORY[0x24BEB9D40]);
      v32 = sub_23F61C0A0();
      v33 = *(void (**)(char *, uint64_t))(v28 + 8);
      v33(v31, v6);
      sub_23F3D9844((uint64_t)v20, &qword_256E702C8);
      sub_23F3D9844((uint64_t)v22, &qword_256E702C8);
      v33(v17, v6);
      sub_23F3D9844((uint64_t)v10, &qword_256E702C8);
      v30 = v57;
      if ((v32 & 1) == 0)
        goto LABEL_13;
      goto LABEL_11;
    }
    sub_23F3D9844((uint64_t)v20, &qword_256E702C8);
    sub_23F3D9844((uint64_t)v22, &qword_256E702C8);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v6);
LABEL_9:
    sub_23F3D9844((uint64_t)v10, &qword_256E78AC8);
    v30 = v57;
    goto LABEL_13;
  }
  sub_23F3D9844((uint64_t)v20, &qword_256E702C8);
  sub_23F3D9844((uint64_t)v22, &qword_256E702C8);
  if (sub_23F36195C(v29, 1, v6) != 1)
    goto LABEL_9;
  sub_23F3D9844((uint64_t)v10, &qword_256E702C8);
  v30 = v57;
LABEL_11:
  v34 = sub_23F618D70();
  v35 = v55;
  sub_23F36FE08(v34, v55);
  swift_bridgeObjectRelease();
  v36 = v56;
  if (sub_23F36195C(v35, 1, v56) != 1)
  {
    v41 = v51;
    v40 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v51, v35, v36);
    v42 = sub_23F618B60();
    v44 = v43;
    v45 = sub_23F618B00();
    v47 = v46;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v36);
    *v30 = v42;
    v30[1] = v44;
    v30[2] = v45;
    v30[3] = v47;
    v48 = *MEMORY[0x24BE57C00];
    v49 = sub_23F618ED8();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v30, v48, v49);
    v38 = (uint64_t)v30;
    v39 = 0;
    v37 = v49;
    return sub_23F36196C(v38, v39, 1, v37);
  }
  sub_23F3D9844(v35, qword_256E71C50);
LABEL_13:
  v37 = sub_23F618ED8();
  v38 = (uint64_t)v30;
  v39 = 1;
  return sub_23F36196C(v38, v39, 1, v37);
}

uint64_t sub_23F56A144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_23F362A4C();
}

uint64_t sub_23F56A158()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F56E96C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_23F56A1A4;
  v2 = sub_23F56E790(*(_QWORD *)(v0 + 16));
  return sub_23F56E65C(v2, v3, v4);
}

uint64_t sub_23F56A1A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F56E4F0();
  if (v1)
    return sub_23F3B182C(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 64) = v0;
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F56A1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F56A68C();
  v2 = v1;
  sub_23F362984();
  sub_23F56203C(v2);
  sub_23F362D18();
  sub_23F368EA8();
  return sub_23F551440(v3, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F56A240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_23F362A4C();
}

uint64_t sub_23F56A254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F56E590();
  v1 = sub_23F56E6F8();
  sub_23F56EA4C(v1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v4 = sub_23F56E730(v3, (uint64_t)sub_23F56A298);
  return sub_23F56E69C(v4, v5, v6, v7, v8);
}

uint64_t sub_23F56A298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F56E664();
  if (v1)
  {
    sub_23F36679C();
    return sub_23F3B183C();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_23F551440(v0, *(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_23F56A2E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F56A314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  sub_23F618BB4();
  v4[6] = sub_23F366578();
  v5 = sub_23F618C20();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = sub_23F366578();
  v6 = sub_23F61B4B8();
  v4[10] = v6;
  v4[11] = *(_QWORD *)(v6 - 8);
  v4[12] = sub_23F366578();
  sub_23F35D2E8(&qword_256E70F38);
  v4[13] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F56A3A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[5];
  v2 = v0[3];
  sub_23F35EA9C((_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 88));
  v3 = v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14QueryDecorator_signposter;
  v4 = (_QWORD *)swift_task_alloc();
  v0[14] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_23F56A430;
  return sub_23F55317C(v0[13], v0[4], v0[2], v2, v3);
}

uint64_t sub_23F56A430()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F3B1998();
  *v2 = *v1;
  *(_QWORD *)(v3 + 120) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F56A480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;

  sub_23F3B14B8();
  v1 = *(_QWORD *)(v0 + 104);
  v2 = sub_23F556EE0();
  v3 = sub_23F383740(v1, 1, v2);
  if (v4)
  {
    sub_23F441494(v3, &qword_256E70F38);
LABEL_13:
    v13 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v5 = sub_23F619040();
  v6 = sub_23F38422C();
  v7(v6);
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    sub_23F362D18();
    goto LABEL_13;
  }
  v9 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 64);
  v23 = MEMORY[0x24BEE4AF8];
  sub_23F37C4F0();
  sub_23F383EB8();
  v12 = v5 + v11;
  v21 = *(void (**)(uint64_t))(v10 + 16);
  v22 = *(_QWORD *)(v10 + 72);
  v13 = v23;
  do
  {
    v14 = sub_23F406E84();
    v21(v14);
    sub_23F618BCC();
    sub_23F61B4AC();
    v15 = sub_23F56E9B8();
    v16(v15);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F3DDBE4();
      sub_23F37C4F0();
      v13 = v23;
    }
    v18 = *(_QWORD *)(v13 + 16);
    v17 = *(_QWORD *)(v13 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_23F3B1A80(v17);
      sub_23F37C4F0();
      v13 = v23;
    }
    *(_QWORD *)(v13 + 16) = v18 + 1;
    sub_23F383EB8();
    (*(void (**)(unint64_t))(v9 + 32))(v13 + v19 + *(_QWORD *)(v9 + 72) * v18);
    v23 = v13;
    v12 += v22;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
LABEL_14:
  sub_23F56E888();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v13);
}

uint64_t sub_23F56A654()
{
  uint64_t v0;

  sub_23F56E888();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  return sub_23F3B182C(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F56A68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[2];
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87[5];

  sub_23F362ABC();
  v2 = v1;
  v3 = sub_23F3B1728();
  v74 = *(_QWORD *)(v3 - 8);
  v75 = v3;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3834D0();
  v64 = v5;
  MEMORY[0x24BDAC7A8](v6);
  sub_23F383780();
  v80 = v7;
  v8 = sub_23F56E834();
  v71 = *(_QWORD *)(v8 - 8);
  v72 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3834D0();
  v70 = v10;
  MEMORY[0x24BDAC7A8](v11);
  sub_23F383780();
  v69 = v12;
  v81 = sub_23F61B92C();
  v79 = *(_QWORD *)(v81 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v78 = v14;
  sub_23F35D2E8(&qword_256E701F0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F362AAC();
  v18 = v16 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v63 - v20;
  v22 = sub_23F618AE8();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3E2718();
  v24 = sub_23F618D28();
  sub_23F56E9C4();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F36285C();
  v73 = v26;
  v87[3] = MEMORY[0x24BEE4B08];
  v27 = *(_QWORD *)(v2 + 16);
  if (v27)
  {
    sub_23F383EB8();
    v29 = v2 + v28;
    v31 = *(_QWORD *)(v30 + 72);
    v82 = v30;
    v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
    v85 = v31;
    v83 = *MEMORY[0x24BE572E8];
    v65 = *MEMORY[0x24BE57BF8];
    v63[1] = v2;
    sub_23F383738();
    v76 = v0;
    v77 = v24;
    v32 = v73;
    v68 = v18;
    v67 = v21;
    v66 = v22;
    do
    {
      v84(v32, v29, v24);
      sub_23F618CF8();
      v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v0, v22);
      if (v33 == v83)
      {
        sub_23F383E88(v0, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
        sub_23F618CE0();
        sub_23F56DE98((uint64_t)v21, v18, &qword_256E701F0);
        sub_23F383740(v18, 1, v81);
        if (v34)
        {
          sub_23F3D9844(v18, &qword_256E701F0);
          sub_23F52E6C0();
          v35 = sub_23F619E8C();
          v36 = sub_23F61C628();
          if (sub_23F482920(v36))
          {
            v37 = (uint8_t *)sub_23F366668();
            *(_WORD *)v37 = 0;
            _os_log_impl(&dword_23F35A000, v35, (os_log_type_t)v24, "getOnScreenAppEntities: typedValue is nil", v37, 2u);
            sub_23F366530();
          }

          (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v80, v75);
          sub_23F3D9844((uint64_t)v21, &qword_256E701F0);
          v53 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
          v32 = v73;
          v54 = v73;
          v24 = v77;
        }
        else
        {
          v38 = v78;
          v39 = v79;
          v40 = v81;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 32))(v78, v18, v81);
          v41 = sub_23F35D2E8(&qword_256E7A408);
          v42 = v70;
          v43 = (uint64_t *)(v70 + *(int *)(v41 + 48));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v70, v38, v40);
          *v43 = sub_23F618CD4();
          v43[1] = v44;
          v46 = v71;
          v45 = v72;
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v71 + 104))(v42, v65, v72);
          v47 = v23;
          v48 = v40;
          v49 = v69;
          sub_23F384AB4();
          v18 = v68;
          sub_23F4733B0();
          v50 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
          v51 = v48;
          v23 = v47;
          v52 = v45;
          v0 = v76;
          v24 = v77;
          v50(v49, v52);
          v21 = v67;
          v22 = v66;
          (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v51);
          sub_23F3D9844((uint64_t)v21, &qword_256E701F0);
          v53 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
          v54 = v32;
        }
        v53(v54, v24);
      }
      else
      {
        sub_23F383F80(v32, *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8));
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0, v22);
      }
      v29 += v85;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
  }
  v55 = v64;
  sub_23F6190E8();
  sub_23F3E0254();
  v56 = sub_23F619E8C();
  v57 = sub_23F61C610();
  if (sub_23F3B1604(v57))
  {
    v58 = sub_23F366668();
    v87[0] = sub_23F366668();
    *(_DWORD *)v58 = 136315394;
    sub_23F556C28(36, 0x800000023F639C40, v87);
    v86 = v59;
    sub_23F56E808();
    *(_WORD *)(v58 + 12) = 2080;
    sub_23F3612C0(&qword_256E70148, (uint64_t (*)(uint64_t))MEMORY[0x24BE57C08], MEMORY[0x24BE57C18]);
    sub_23F617BA0();
    v60 = sub_23F61C544();
    sub_23F3B5F04();
    sub_23F56EAA4(v60, v61, v87);
    v86 = v62;
    sub_23F56E808();
    sub_23F384A80();
    sub_23F384364();
    sub_23F3E025C(&dword_23F35A000, v56, (os_log_type_t)v18, "QDInternal: AppEntities on screen from current utteranceContext for Stage Three Tool Retrieval | %s\nOn-screen entities retrieved: %s", (uint8_t *)v58);
    sub_23F507364();
    sub_23F366530();
  }

  sub_23F384A80();
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v55, v75);
  sub_23F3C08CC();
  sub_23F362948();
}

void sub_23F56AC70()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  _QWORD v31[3];
  os_log_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23F362ABC();
  v3 = sub_23F3B1728();
  v36 = *(_QWORD *)(v3 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F482314();
  MEMORY[0x24BDAC7A8](v5);
  v7 = ((char *)v31 - v6);
  sub_23F35D2E8(&qword_256E797D8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3845CC();
  v9 = sub_23F618FBC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F383EC4();
  v11 = sub_23F56E9B8();
  sub_23F56DE98(v11, v12, &qword_256E797D8);
  sub_23F383740(v2, 1, v9);
  if (v13)
  {
    sub_23F3D9844(v2, &qword_256E797D8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v0, v2, v9);
    if (sub_23F618FB0())
    {
      sub_23F3668F4();
      sub_23F384A00();
      sub_23F527A40();
      sub_23F6190E8();
      sub_23F3E0254();
      sub_23F384A00();
      sub_23F619E8C();
      v14 = sub_23F507D60();
      if (sub_23F482920(v14))
      {
        v15 = sub_23F366668();
        v34 = (int)v1;
        v16 = v15;
        v35 = sub_23F366668();
        v38 = v35;
        *(_DWORD *)v16 = 136315650;
        sub_23F556C28(54, 0x800000023F639CF0, &v38);
        v37 = v17;
        v31[2] = &v38;
        sub_23F56E8A4();
        *(_WORD *)(v16 + 12) = 2080;
        v31[1] = v16 + 14;
        v31[0] = sub_23F56E834();
        sub_23F3612C0(&qword_256E70148, (uint64_t (*)(uint64_t))MEMORY[0x24BE57C08], MEMORY[0x24BE57C18]);
        v32 = v7;
        sub_23F384A00();
        v18 = sub_23F61C544();
        v33 = v3;
        v19 = v18;
        sub_23F38458C();
        sub_23F56EAA4(v19, v20, &v38);
        v37 = v21;
        sub_23F61C790();
        sub_23F384A80();
        sub_23F384364();
        *(_WORD *)(v16 + 22) = 2080;
        sub_23F3668F4();
        v22 = sub_23F61C544();
        sub_23F362D18();
        sub_23F56E8BC(v22, v23, &v38);
        v37 = v24;
        sub_23F56E8A4();
        sub_23F384A80();
        sub_23F38458C();
        _os_log_impl(&dword_23F35A000, v32, (os_log_type_t)v34, "QDInternal: AppEntities for Stage Three Tool Retrieval | %s\nAppEntities from previous request (list of bundle IDs): %s\nAppEntities after union with previousAppEntities (list of bundle IDs): %s", (uint8_t *)v16, 0x20u);
        swift_arrayDestroy();
        sub_23F366530();
      }
      sub_23F384A80();
      sub_23F384A80();

      v29 = sub_23F56E898();
      v30(v29, v3);
      sub_23F383CA8(v0, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
      goto LABEL_12;
    }
    sub_23F383CA8(v0, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  }
  sub_23F6190E8();
  sub_23F619E8C();
  v25 = sub_23F507D60();
  if (sub_23F366874(v25))
  {
    v26 = (uint8_t *)sub_23F366668();
    v38 = sub_23F366668();
    *(_DWORD *)v26 = 136315138;
    sub_23F556C28(54, 0x800000023F639CF0, &v38);
    v37 = v27;
    sub_23F61C790();
    sub_23F38485C(&dword_23F35A000, v1, (os_log_type_t)v9, "QDInternal: AppEntities for Stage Three Tool Retrieval | %s\nNo previous app entities found from QueryDecorationLookback, returning original list.", v26);
    sub_23F3B17D4();
    sub_23F366530();
  }

  sub_23F56EA34();
  sub_23F38456C((uint64_t)v1, v28);
  sub_23F3668F4();
LABEL_12:
  sub_23F362948();
}

void QueryDecorator.deinit()
{
  uint64_t v0;
  uint64_t v1;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  swift_release();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 64);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 104);
  v1 = sub_23F61C9F4();
  sub_23F3C3DC8(*(_QWORD *)(v1 - 8));
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14QueryDecorator_signposter);
  sub_23F362928();
}

uint64_t QueryDecorator.__deallocating_deinit()
{
  QueryDecorator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23F56B120(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  char v8;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023F6340E0 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x656E6F69746E656DLL && a2 == 0xED00007370704164;
    if (v5 || (sub_23F61CC64() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x417375636F466E69 && a2 == 0xEB00000000737070;
      if (v6 || (sub_23F61CC64() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x800000023F634110 || (sub_23F61CC64() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x736C6F6F54746567 && a2 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = sub_23F61CC64();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_23F56B360()
{
  return 5;
}

uint64_t sub_23F56B368(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23F56B3A0 + 4 * byte_23F62D205[a1]))(0xD000000000000013, 0x800000023F6340E0);
}

uint64_t sub_23F56B3A0()
{
  return 0x656E6F69746E656DLL;
}

uint64_t sub_23F56B3C4()
{
  return 0x417375636F466E69;
}

uint64_t sub_23F56B3F8()
{
  return 0x736C6F6F54746567;
}

void sub_23F56B410(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F61CC64();
    sub_23F362D18();
  }
  sub_23F362928();
}

uint64_t sub_23F56B474()
{
  unsigned __int8 *v0;

  return sub_23F56B368(*v0);
}

uint64_t sub_23F56B47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F56B120(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F56B4A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F56B360();
  *a1 = result;
  return result;
}

uint64_t sub_23F56B4C4()
{
  sub_23F56CC6C();
  return sub_23F61CDC0();
}

uint64_t sub_23F56B4EC()
{
  sub_23F56CC6C();
  return sub_23F61CDCC();
}

void sub_23F56B514(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23F56B410(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23F56B53C()
{
  sub_23F56CCA8();
  return sub_23F61CDC0();
}

uint64_t sub_23F56B564()
{
  sub_23F56CCA8();
  return sub_23F61CDCC();
}

uint64_t sub_23F56B58C()
{
  sub_23F56CE18();
  return sub_23F61CDC0();
}

uint64_t sub_23F56B5B4()
{
  sub_23F56CE18();
  return sub_23F61CDCC();
}

uint64_t sub_23F56B5DC()
{
  sub_23F56CE54();
  return sub_23F61CDC0();
}

uint64_t sub_23F56B604()
{
  sub_23F56CE54();
  return sub_23F61CDCC();
}

uint64_t sub_23F56B62C()
{
  sub_23F56CE90();
  return sub_23F61CDC0();
}

uint64_t sub_23F56B654()
{
  sub_23F56CE90();
  return sub_23F61CDCC();
}

uint64_t sub_23F56B67C()
{
  sub_23F56CD60();
  return sub_23F61CDC0();
}

uint64_t sub_23F56B6A4()
{
  sub_23F56CD60();
  return sub_23F61CDCC();
}

void QueryDecorationPrePlannerStage.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F35D2E8(&qword_256E7AEE0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F4DC4C4(v2, v11);
  sub_23F35D2E8(&qword_256E7AEE8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  sub_23F35D2E8(&qword_256E7AEF0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F36285C();
  sub_23F35D2E8(&qword_256E7AEF8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  sub_23F35D2E8(&qword_256E7AF00);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3B17BC();
  sub_23F35D2E8(&qword_256E7AF08);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v8 = *(unsigned __int8 *)(v0 + 8);
  v9 = (_QWORD *)sub_23F56E9B8();
  sub_23F35EA9C(v9, v10);
  sub_23F56CC6C();
  sub_23F61CD90();
  __asm { BR              X9 }
}

void sub_23F56B868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  *(_BYTE *)(v4 - 72) = 0;
  sub_23F56CE90();
  sub_23F56E63C();
  sub_23F56E850();
  sub_23F35D2E8(&qword_256E7AE58);
  sub_23F56CECC();
  sub_23F56E900();
  sub_23F56E810();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 208) + 8))(v3, v2);
  sub_23F56EA34();
  v5(v1, v0);
  sub_23F362870();
}

void QueryDecorationPrePlannerStage.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;

  sub_23F35D2E8(&qword_256E7AF78);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F36285C();
  sub_23F35D2E8(&qword_256E7AF80);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  sub_23F35D2E8(&qword_256E7AF88);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F36285C();
  sub_23F35D2E8(&qword_256E7AF90);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F4DC4C4(v6, v21);
  sub_23F35D2E8(&qword_256E7AF98);
  sub_23F56EAB4();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B17BC();
  v8 = sub_23F35D2E8(&qword_256E7AFA0);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F383EC4();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F56CC6C();
  sub_23F61CD84();
  if (!v22)
  {
    v9 = sub_23F61CB5C();
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v11 = *(unsigned __int8 *)(v9 + 32);
      sub_23F362460(1, v10, v9, v9 + 32, 0, (2 * v10) | 1);
      v13 = v12;
      v15 = v14;
      swift_bridgeObjectRelease();
      if (v13 == v15 >> 1)
        __asm { BR              X9 }
    }
    v16 = sub_23F61C928();
    swift_allocError();
    v18 = v17;
    sub_23F35D2E8(&qword_256E6F538);
    *v18 = &type metadata for QueryDecorationPrePlannerStage;
    sub_23F61CAD8();
    sub_23F61C91C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    sub_23F3ECBC8();
    v19 = sub_23F56E9B8();
    v20(v19);
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
  sub_23F362870();
}

void sub_23F56C0F4(_QWORD *a1)
{
  QueryDecorationPrePlannerStage.init(from:)(a1);
}

void sub_23F56C108()
{
  QueryDecorationPrePlannerStage.encode(to:)();
}

IntelligenceFlowPlannerRuntime::QueryDecorationPrePlannerStageNames_optional __swiftcall QueryDecorationPrePlannerStageNames.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  IntelligenceFlowPlannerRuntime::QueryDecorationPrePlannerStageNames_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23F61CAB4();
  result.value = sub_23F362D18();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_23F56C170(char *a1)
{
  sub_23F489A0C(*a1);
}

void sub_23F56C17C()
{
  sub_23F3F6180();
}

void sub_23F56C184(uint64_t a1)
{
  char *v1;

  sub_23F4E6FA0(a1, *v1);
}

void sub_23F56C18C()
{
  sub_23F3F667C();
}

IntelligenceFlowPlannerRuntime::QueryDecorationPrePlannerStageNames_optional sub_23F56C194(Swift::String *a1)
{
  return QueryDecorationPrePlannerStageNames.init(rawValue:)(*a1);
}

uint64_t sub_23F56C1A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = QueryDecorationPrePlannerStageNames.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_23F56C1C4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[2];
  _QWORD v38[6];

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  sub_23F35D2E8(&qword_256E72B70);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  v35 = v11;
  v34 = sub_23F384B34();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v36 = v13;
  v33 = *(_QWORD *)(sub_23F3B1728() - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F482314();
  MEMORY[0x24BDAC7A8](v15);
  v38[3] = type metadata accessor for QueryDecorationCache(0);
  v38[4] = &off_250FDB868;
  v38[0] = v3;
  sub_23F61C9E8();
  sub_23F52E6C0();
  sub_23F3E0254();
  v16 = sub_23F619E8C();
  v32 = sub_23F61C610();
  if (os_log_type_enabled(v16, v32))
  {
    v17 = sub_23F366668();
    v37[0] = sub_23F366668();
    *(_DWORD *)v17 = 136315394;
    sub_23F556C28(40, 0x800000023F639E90, v37);
    sub_23F40B4A4();
    *(_WORD *)(v17 + 12) = 2080;
    if (v7)
      v18 = v9;
    else
      v18 = 0x3E6C696E3CLL;
    if (v7)
      v19 = v7;
    else
      v19 = 0xE500000000000000;
    sub_23F384A00();
    sub_23F37AE00(v18, v19, v37);
    sub_23F40B4A4();
    sub_23F384A80();
    swift_bridgeObjectRelease();
    sub_23F3E025C(&dword_23F35A000, v16, v32, "%s QueryDecorationCollector initializer (clientApplicationId: %s)", (uint8_t *)v17);
    sub_23F507364();
    sub_23F366530();
  }

  sub_23F384A80();
  v20 = *(void (**)(uint64_t))(v33 + 8);
  v21 = sub_23F406E84();
  v20(v21);
  type metadata accessor for ContextRetrievalService();
  v22 = sub_23F56EA98();
  swift_defaultActor_initialize();
  sub_23F6191FC();
  sub_23F3668A0();
  *(_QWORD *)(v22 + 112) = sub_23F6191F0();
  v1[3] = v22;
  type metadata accessor for PlannerSpanMatchService();
  v23 = sub_23F56EA98();
  swift_defaultActor_initialize();
  sub_23F61AC3C();
  *(_QWORD *)(v23 + 112) = sub_23F61AC30();
  v1[4] = v23;
  type metadata accessor for QueryDecorationRankerService();
  QueryDecorationRankerService.__allocating_init()();
  v1[5] = v24;
  sub_23F382FC4((uint64_t)v38, (uint64_t)(v1 + 6));
  v1[11] = v9;
  v1[12] = v7;
  sub_23F56DE98(v5, v35, &qword_256E72B70);
  sub_23F383740(v35, 1, v34);
  if (v25)
  {
    sub_23F384A00();
    v27 = v36;
    v26 = sub_23F61B320();
    sub_23F441494(v26, &qword_256E72B70);
  }
  else
  {
    v27 = v36;
    v28 = sub_23F3C85C0();
    v29(v28);
    sub_23F384A00();
  }
  type metadata accessor for ToolRetrievalService();
  v30 = ToolRetrievalService.__allocating_init(clientApplicationIdentifier:toolbox:)(v9, v7, v27);
  v31 = sub_23F4A12E4();
  sub_23F507B6C(v31, &qword_256E72B70);
  v1[2] = v30;
  sub_23F362948();
}

_QWORD *sub_23F56C730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t inited;
  void (*v30)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t);
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;

  v45 = a2;
  v46 = a5;
  v43 = a4;
  v44 = a1;
  v41 = a9;
  v13 = sub_23F35D2E8(&qword_256E72B70);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a8 - 8);
  v18 = MEMORY[0x24BDAC7A8](v14);
  v39 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v39 - v21;
  v23 = *(_QWORD *)(a7 - 8);
  v24 = MEMORY[0x24BDAC7A8](v20);
  v26 = (char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v39 - v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))((char *)&v39 - v27, v43, a7);
  v42 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v22, v46, a8);
  type metadata accessor for QueryDecorationSignpost();
  inited = swift_initStaticObject();
  v30 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t))(a10 + 8);
  v43 = a10;
  v30(v47, inited, a8, a10);
  v46 = a3;
  v40 = v16;
  sub_23F56DE98(a3, (uint64_t)v16, &qword_256E72B70);
  type metadata accessor for ToolCandidateRanker();
  swift_allocObject();
  v31 = sub_23F5D6CF8();
  type metadata accessor for QueryDecorator();
  v32 = (_QWORD *)swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v26, v28, a7);
  v33 = v42;
  v34 = (uint64_t)v39;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v22, a8);
  v35 = sub_23F56DF60(v44, v45, (uint64_t)v40, (uint64_t)v26, (uint64_t)v31, v34, v32, a8, a7, v43, v41);
  v36 = v48;
  v37 = v49;
  sub_23F35EA9C(v47, v48);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v28, a7);
  sub_23F3D9844(v46, &qword_256E72B70);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v47);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v22, a8);
  return v35;
}

uint64_t sub_23F56C9EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F56E61C();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_23F54DBCC(v1);
  *v2 = v0;
  v2[1] = sub_23F362820;
  v3 = sub_23F56E430();
  return sub_23F56362C(v3, v4, v5);
}

uint64_t sub_23F56CA40()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F56EA40();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F56E52C(v1, (uint64_t)sub_23F56E398);
  return sub_23F567690(v2, v3, v4, v5);
}

uint64_t sub_23F56CA8C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F56E61C();
  v0 = sub_23F56E6E4();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F56E410(v1);
  return sub_23F4E4CD4(v2, v3, v4, v5);
}

uint64_t sub_23F56CAD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F56EA40();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F56E52C(v1, (uint64_t)sub_23F56E398);
  return sub_23F5676FC(v2, v3, v4, v5);
}

uint64_t sub_23F56CB1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F56E61C();
  v0 = sub_23F56E6E4();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F56E410(v1);
  return sub_23F4E4CD4(v2, v3, v4, v5);
}

uint64_t sub_23F56CB60()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F56EA40();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F56E52C(v1, (uint64_t)sub_23F56E398);
  return sub_23F567768(v2, v3, v4, v5);
}

uint64_t sub_23F56CBB0()
{
  sub_23F56EA2C();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F56CBE0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F56EA40();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F56E52C(v1, (uint64_t)sub_23F3DFCB0);
  return sub_23F5677D4(v2, v3, v4, v5);
}

uint64_t sub_23F56CC2C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F56E61C();
  v0 = sub_23F56E6E4();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F56E410(v1);
  return sub_23F4E4CD4(v2, v3, v4, v5);
}

unint64_t sub_23F56CC6C()
{
  unint64_t result;

  result = qword_256E7AF10;
  if (!qword_256E7AF10)
  {
    result = MEMORY[0x242670A44](&unk_23F62DAA4, &type metadata for QueryDecorationPrePlannerStage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7AF10);
  }
  return result;
}

unint64_t sub_23F56CCA8()
{
  unint64_t result;

  result = qword_256E7AF18;
  if (!qword_256E7AF18)
  {
    result = MEMORY[0x242670A44](&unk_23F62DA54, &type metadata for QueryDecorationPrePlannerStage.GetToolsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7AF18);
  }
  return result;
}

unint64_t sub_23F56CCE4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E7AF28;
  if (!qword_256E7AF28)
  {
    v1 = sub_23F35EB74(&qword_256E7AF20);
    sub_23F3612C0(&qword_256E7AF30, (uint64_t (*)(uint64_t))MEMORY[0x24BE56FB0], MEMORY[0x24BE56FC0]);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E7AF28);
  }
  return result;
}

unint64_t sub_23F56CD60()
{
  unint64_t result;

  result = qword_256E7AF38;
  if (!qword_256E7AF38)
  {
    result = MEMORY[0x242670A44](&unk_23F62DA04, &type metadata for QueryDecorationPrePlannerStage.SpanMatchedEntitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7AF38);
  }
  return result;
}

unint64_t sub_23F56CD9C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E7AF40;
  if (!qword_256E7AF40)
  {
    v1 = sub_23F35EB74(&qword_256E71038);
    sub_23F3612C0(&qword_256E7ADF8, (uint64_t (*)(uint64_t))MEMORY[0x24BE578B8], MEMORY[0x24BE578C8]);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E7AF40);
  }
  return result;
}

unint64_t sub_23F56CE18()
{
  unint64_t result;

  result = qword_256E7AF48;
  if (!qword_256E7AF48)
  {
    result = MEMORY[0x242670A44](&unk_23F62D9B4, &type metadata for QueryDecorationPrePlannerStage.InFocusAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7AF48);
  }
  return result;
}

unint64_t sub_23F56CE54()
{
  unint64_t result;

  result = qword_256E7AF58;
  if (!qword_256E7AF58)
  {
    result = MEMORY[0x242670A44](&unk_23F62D964, &type metadata for QueryDecorationPrePlannerStage.MentionedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7AF58);
  }
  return result;
}

unint64_t sub_23F56CE90()
{
  unint64_t result;

  result = qword_256E7AF60;
  if (!qword_256E7AF60)
  {
    result = MEMORY[0x242670A44](&unk_23F62D914, &type metadata for QueryDecorationPrePlannerStage.OnScreenAppEntitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7AF60);
  }
  return result;
}

unint64_t sub_23F56CECC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E7AF68;
  if (!qword_256E7AF68)
  {
    v1 = sub_23F35EB74(&qword_256E7AE58);
    sub_23F3612C0(&qword_256E7AF70, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A28]);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE1700], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E7AF68);
  }
  return result;
}

unint64_t sub_23F56CF48()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E7AFA8;
  if (!qword_256E7AFA8)
  {
    v1 = sub_23F35EB74(&qword_256E7AF20);
    sub_23F3612C0(&qword_256E7AFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE56FB0], MEMORY[0x24BE56FC8]);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E7AFA8);
  }
  return result;
}

unint64_t sub_23F56CFC4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E7AFB8;
  if (!qword_256E7AFB8)
  {
    v1 = sub_23F35EB74(&qword_256E71038);
    sub_23F3612C0(&qword_256E7AFC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE578B8], MEMORY[0x24BE578D8]);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E7AFB8);
  }
  return result;
}

uint64_t sub_23F56D040(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_23F35EB74(&qword_256E7AE80);
    v8 = a2;
    result = MEMORY[0x242670A44](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23F56D0A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E7AFD0;
  if (!qword_256E7AFD0)
  {
    v1 = sub_23F35EB74(&qword_256E7AE58);
    sub_23F3612C0(&qword_256E7AFD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A40]);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE1720], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E7AFD0);
  }
  return result;
}

unint64_t sub_23F56D120()
{
  unint64_t result;

  result = qword_256E7AFE0;
  if (!qword_256E7AFE0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for QueryDecorationPrePlannerStageNames, &type metadata for QueryDecorationPrePlannerStageNames);
    atomic_store(result, (unint64_t *)&qword_256E7AFE0);
  }
  return result;
}

uint64_t sub_23F56D15C()
{
  return type metadata accessor for QueryDecorator();
}

uint64_t type metadata accessor for QueryDecorator()
{
  uint64_t result;

  result = qword_256E7B010;
  if (!qword_256E7B010)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F56D19C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61C9F4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for QueryDecorator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of QueryDecorator.queryDecorationCollection(qdInput:toolbox:qdLookback:toolExecutionSession:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t);

  sub_23F56E590();
  v5 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v0 + 144) + *(_QWORD *)(*(_QWORD *)v0 + 144));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23F56E398;
  v3 = sub_23F4414B0();
  return v5(v3);
}

uint64_t dispatch thunk of QueryDecorator.runQueryDecorationPrePlannerSteps(qdInput:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v3 = (_QWORD *)sub_23F534700();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F56E398;
  return sub_23F551440(a1, v5);
}

uint64_t dispatch thunk of QueryDecorator.getMentionedApps(clientRequestId:qdContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v7 = (_QWORD *)sub_23F534700();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F56E398;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of QueryDecorator.getOnScreenAppEntities(toolContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t initializeBufferWithCopyOfBuffer for QueryDecorationPrePlannerStage(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for QueryDecorationPrePlannerStage(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for QueryDecorationPrePlannerStage(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryDecorationPrePlannerStage(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryDecorationPrePlannerStage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F56D4A0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_23F56D4A8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerStage()
{
  return &type metadata for QueryDecorationPrePlannerStage;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerStageNames()
{
  return &type metadata for QueryDecorationPrePlannerStageNames;
}

uint64_t _s30IntelligenceFlowPlannerRuntime35QueryDecorationPrePlannerStageNamesOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23F56D524 + 4 * byte_23F62D219[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23F56D558 + 4 * byte_23F62D214[v4]))();
}

uint64_t sub_23F56D558(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F56D560(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F56D568);
  return result;
}

uint64_t sub_23F56D574(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F56D57CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23F56D580(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F56D588(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerStage.CodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerStage.CodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerStage.OnScreenAppEntitiesCodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerStage.OnScreenAppEntitiesCodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerStage.MentionedAppsCodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerStage.MentionedAppsCodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerStage.InFocusAppsCodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerStage.InFocusAppsCodingKeys;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerStage.SpanMatchedEntitiesCodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerStage.SpanMatchedEntitiesCodingKeys;
}

uint64_t _s30IntelligenceFlowPlannerRuntime30QueryDecorationPrePlannerStageO29OnScreenAppEntitiesCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F56D628 + 4 * byte_23F62D21E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F56D648 + 4 * byte_23F62D223[v4]))();
}

_BYTE *sub_23F56D628(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F56D648(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F56D650(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F56D658(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F56D660(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F56D668(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for QueryDecorationPrePlannerStage.GetToolsCodingKeys()
{
  return &type metadata for QueryDecorationPrePlannerStage.GetToolsCodingKeys;
}

unint64_t sub_23F56D688()
{
  unint64_t result;

  result = qword_256E7B1C0;
  if (!qword_256E7B1C0)
  {
    result = MEMORY[0x242670A44](&unk_23F62D554, &type metadata for QueryDecorationPrePlannerStage.GetToolsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B1C0);
  }
  return result;
}

unint64_t sub_23F56D6C8()
{
  unint64_t result;

  result = qword_256E7B1C8;
  if (!qword_256E7B1C8)
  {
    result = MEMORY[0x242670A44](&unk_23F62D60C, &type metadata for QueryDecorationPrePlannerStage.SpanMatchedEntitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B1C8);
  }
  return result;
}

unint64_t sub_23F56D708()
{
  unint64_t result;

  result = qword_256E7B1D0;
  if (!qword_256E7B1D0)
  {
    result = MEMORY[0x242670A44](&unk_23F62D6C4, &type metadata for QueryDecorationPrePlannerStage.InFocusAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B1D0);
  }
  return result;
}

unint64_t sub_23F56D748()
{
  unint64_t result;

  result = qword_256E7B1D8;
  if (!qword_256E7B1D8)
  {
    result = MEMORY[0x242670A44](&unk_23F62D77C, &type metadata for QueryDecorationPrePlannerStage.MentionedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B1D8);
  }
  return result;
}

unint64_t sub_23F56D788()
{
  unint64_t result;

  result = qword_256E7B1E0;
  if (!qword_256E7B1E0)
  {
    result = MEMORY[0x242670A44](&unk_23F62D834, &type metadata for QueryDecorationPrePlannerStage.OnScreenAppEntitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B1E0);
  }
  return result;
}

unint64_t sub_23F56D7C8()
{
  unint64_t result;

  result = qword_256E7B1E8;
  if (!qword_256E7B1E8)
  {
    result = MEMORY[0x242670A44](&unk_23F62D8EC, &type metadata for QueryDecorationPrePlannerStage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B1E8);
  }
  return result;
}

unint64_t sub_23F56D808()
{
  unint64_t result;

  result = qword_256E7B1F0;
  if (!qword_256E7B1F0)
  {
    result = MEMORY[0x242670A44](&unk_23F62D7A4, &type metadata for QueryDecorationPrePlannerStage.OnScreenAppEntitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B1F0);
  }
  return result;
}

unint64_t sub_23F56D848()
{
  unint64_t result;

  result = qword_256E7B1F8;
  if (!qword_256E7B1F8)
  {
    result = MEMORY[0x242670A44](&unk_23F62D7CC, &type metadata for QueryDecorationPrePlannerStage.OnScreenAppEntitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B1F8);
  }
  return result;
}

unint64_t sub_23F56D888()
{
  unint64_t result;

  result = qword_256E7B200;
  if (!qword_256E7B200)
  {
    result = MEMORY[0x242670A44](&unk_23F62D6EC, &type metadata for QueryDecorationPrePlannerStage.MentionedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B200);
  }
  return result;
}

unint64_t sub_23F56D8C8()
{
  unint64_t result;

  result = qword_256E7B208;
  if (!qword_256E7B208)
  {
    result = MEMORY[0x242670A44](&unk_23F62D714, &type metadata for QueryDecorationPrePlannerStage.MentionedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B208);
  }
  return result;
}

unint64_t sub_23F56D908()
{
  unint64_t result;

  result = qword_256E7B210;
  if (!qword_256E7B210)
  {
    result = MEMORY[0x242670A44](&unk_23F62D634, &type metadata for QueryDecorationPrePlannerStage.InFocusAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B210);
  }
  return result;
}

unint64_t sub_23F56D948()
{
  unint64_t result;

  result = qword_256E7B218;
  if (!qword_256E7B218)
  {
    result = MEMORY[0x242670A44](&unk_23F62D65C, &type metadata for QueryDecorationPrePlannerStage.InFocusAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B218);
  }
  return result;
}

unint64_t sub_23F56D988()
{
  unint64_t result;

  result = qword_256E7B220;
  if (!qword_256E7B220)
  {
    result = MEMORY[0x242670A44](&unk_23F62D57C, &type metadata for QueryDecorationPrePlannerStage.SpanMatchedEntitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B220);
  }
  return result;
}

unint64_t sub_23F56D9C8()
{
  unint64_t result;

  result = qword_256E7B228;
  if (!qword_256E7B228)
  {
    result = MEMORY[0x242670A44](&unk_23F62D5A4, &type metadata for QueryDecorationPrePlannerStage.SpanMatchedEntitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B228);
  }
  return result;
}

unint64_t sub_23F56DA08()
{
  unint64_t result;

  result = qword_256E7B230;
  if (!qword_256E7B230)
  {
    result = MEMORY[0x242670A44](&unk_23F62D4C4, &type metadata for QueryDecorationPrePlannerStage.GetToolsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B230);
  }
  return result;
}

unint64_t sub_23F56DA48()
{
  unint64_t result;

  result = qword_256E7B238;
  if (!qword_256E7B238)
  {
    result = MEMORY[0x242670A44](&unk_23F62D4EC, &type metadata for QueryDecorationPrePlannerStage.GetToolsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B238);
  }
  return result;
}

unint64_t sub_23F56DA88()
{
  unint64_t result;

  result = qword_256E7B240;
  if (!qword_256E7B240)
  {
    result = MEMORY[0x242670A44](&unk_23F62D85C, &type metadata for QueryDecorationPrePlannerStage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B240);
  }
  return result;
}

unint64_t sub_23F56DAC8()
{
  unint64_t result;

  result = qword_256E7B248;
  if (!qword_256E7B248)
  {
    result = MEMORY[0x242670A44](&unk_23F62D884, &type metadata for QueryDecorationPrePlannerStage.CodingKeys);
    atomic_store(result, &qword_256E7B248);
  }
  return result;
}

uint64_t sub_23F56DB08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F56E770(v1, (uint64_t)sub_23F56E398);
  return sub_23F568A7C(v2, v3);
}

uint64_t sub_23F56DB4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F56E61C();
  v0 = sub_23F56E6E4();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F56E410(v1);
  return sub_23F4E4CD4(v2, v3, v4, v5);
}

uint64_t sub_23F56DB8C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F56E61C();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_23F54DBCC(v1);
  *v2 = v0;
  v2[1] = sub_23F362820;
  v3 = sub_23F56E430();
  return sub_23F568C4C(v3, v4, v5);
}

uint64_t sub_23F56DBDC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F56E590();
  sub_23F56E954();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F54DD54(v1);
  return sub_23F568428(v2, v3, v4, v5, v6);
}

uint64_t sub_23F56DC2C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F56E61C();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_23F54DBCC(v1);
  *v2 = v0;
  v2[1] = sub_23F362820;
  v3 = sub_23F56E430();
  return sub_23F568014(v3, v4, v5);
}

uint64_t sub_23F56DC7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F56E61C();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_23F54DBCC(v1);
  *v2 = v0;
  v2[1] = sub_23F362820;
  v3 = sub_23F56E430();
  return sub_23F567C44(v3, v4, v5);
}

uint64_t sub_23F56DCD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F56E770(v1, (uint64_t)sub_23F56E398);
  return sub_23F565E28(v2, v3);
}

uint64_t sub_23F56DD14()
{
  sub_23F56E99C();
  return swift_deallocObject();
}

uint64_t sub_23F56DD34()
{
  sub_23F56EA2C();
  sub_23F56E99C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F56DD68()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F56E590();
  sub_23F56E954();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F54DD54(v1);
  return sub_23F565ED4(v2, v3, v4, v5, v6);
}

uint64_t sub_23F56DDBC()
{
  sub_23F56EA2C();
  sub_23F56E99C();
  return swift_deallocObject();
}

uint64_t sub_23F56DDE0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F56E770(v1, (uint64_t)sub_23F56DE24);
  return sub_23F565F54(v2, v3);
}

uint64_t sub_23F56DE24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3629E8();
  v0 = sub_23F482A1C();
  return sub_23F56E560(v0, v1, v2);
}

uint64_t sub_23F56DE58()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23F56E61C();
  v0 = sub_23F56E6E4();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F56E410(v1);
  return sub_23F4E4CD4(v2, v3, v4, v5);
}

void sub_23F56DE98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_23F35D2E8(a3);
  v3 = sub_23F3C85C0();
  v4(v3);
  sub_23F362928();
}

uint64_t sub_23F56DED4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F56E590();
  sub_23F56E954();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  v2 = sub_23F54DD54(v1);
  return sub_23F563E3C(v2, v3, v4, v5, v6);
}

unint64_t sub_23F56DF24()
{
  unint64_t result;

  result = qword_256E7B330;
  if (!qword_256E7B330)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for QueryDecorationError, &type metadata for QueryDecorationError);
    atomic_store(result, (unint64_t *)&qword_256E7B330);
  }
  return result;
}

_QWORD *sub_23F56DF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t DecorationServiceCaller;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  ValueMetadata *v45;
  _UNKNOWN **v46;
  uint64_t v47[5];
  uint64_t v48[6];

  v40 = a5;
  v41 = a1;
  v17 = sub_23F35D2E8(&qword_256E72B70);
  MEMORY[0x24BDAC7A8](v17);
  v39 = (uint64_t)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F619E98();
  v37 = *(_QWORD *)(v19 - 8);
  v38 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48[3] = a9;
  v48[4] = a11;
  v22 = sub_23F36145C(v48);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a9 - 8) + 32))(v22, a4, a9);
  v47[3] = a8;
  v47[4] = a10;
  v23 = sub_23F36145C(v47);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(v23, a6, a8);
  sub_23F61C9E8();
  sub_23F6190E8();
  swift_bridgeObjectRetain_n();
  v24 = sub_23F619E8C();
  v25 = sub_23F61C610();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    *(_QWORD *)&v43 = v35;
    *(_DWORD *)v26 = 136315394;
    sub_23F37AE00(0xD00000000000004ELL, 0x800000023F639390, (uint64_t *)&v43);
    v42 = v27;
    v36 = a3;
    sub_23F61C790();
    *(_WORD *)(v26 + 12) = 2080;
    if (a2)
      v28 = v41;
    else
      v28 = 0x3E6C696E3CLL;
    if (!a2)
      a2 = 0xE500000000000000;
    sub_23F617BA0();
    sub_23F37AE00(v28, a2, (uint64_t *)&v43);
    v42 = v29;
    a3 = v36;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F35A000, v24, v25, "%s QueryDecorator initializer (clientApplicationIdentifier: %s)", (uint8_t *)v26, 0x16u);
    v30 = v35;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v30, -1, -1);
    MEMORY[0x242670B70](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v38);
  sub_23F56DE98(a3, v39, &qword_256E72B70);
  if (qword_256E6F090 != -1)
    swift_once();
  DecorationServiceCaller = type metadata accessor for QueryDecorationServiceCaller();
  swift_allocObject();
  swift_retain();
  sub_23F56C1C4();
  a7[11] = DecorationServiceCaller;
  a7[12] = &off_250FDC0E8;
  a7[8] = v32;
  sub_23F382FC4((uint64_t)v48, (uint64_t)(a7 + 13));
  sub_23F382FC4((uint64_t)v47, (uint64_t)a7 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime14QueryDecorator_signposter);
  sub_23F61BCBC();
  v33 = sub_23F61BCB0();
  v45 = &type metadata for QueryDecorationTupleBuilder;
  v46 = &off_250FDC448;
  *(_QWORD *)&v43 = 10;
  BYTE8(v43) = 0;
  v44 = v33;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v47);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v48);
  sub_23F3D9844(a3, &qword_256E72B70);
  sub_23F362678(&v43, (uint64_t)(a7 + 2));
  a7[7] = v40;
  return a7;
}

uint64_t sub_23F56E39C()
{
  return swift_asyncLet_finish();
}

uint64_t sub_23F56E3AC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F56E3BC()
{
  return swift_release();
}

uint64_t sub_23F56E3F8()
{
  return swift_asyncLet_finish();
}

uint64_t sub_23F56E400()
{
  return swift_asyncLet_get_throwing();
}

uint64_t sub_23F56E410(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F56E430()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F56E444()
{
  return swift_release_n();
}

uint64_t sub_23F56E468()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0);
  return swift_release_n();
}

uint64_t sub_23F56E484()
{
  uint64_t v0;

  return v0 + 16;
}

uint64_t sub_23F56E4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return QueryDecorationSELFLogging.logSubComponentExecution<A>(_:_:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_23F56E4F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  return swift_task_dealloc();
}

uint64_t sub_23F56E514()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F56E520()
{
  return swift_release();
}

uint64_t sub_23F56E52C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_23F56E548()
{
  return swift_release();
}

uint64_t sub_23F56E554()
{
  return swift_release();
}

uint64_t sub_23F56E560(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23F56E570@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

uint64_t sub_23F56E57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(v1, v0);
}

uint64_t sub_23F56E5A4()
{
  return sub_23F61CACC();
}

uint64_t sub_23F56E5BC()
{
  return swift_asyncLet_get_throwing();
}

uint64_t sub_23F56E5D8()
{
  uint64_t v0;

  return v0;
}

_QWORD *sub_23F56E5F4(double a1)
{
  return sub_23F35EA9C((_QWORD *)(*(_QWORD *)&a1 + 16), *(_QWORD *)(*(_QWORD *)&a1 + 40));
}

void sub_23F56E628()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23F56E63C()
{
  return sub_23F61CB74();
}

uint64_t sub_23F56E650()
{
  return swift_release();
}

uint64_t sub_23F56E65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F555A98(a1, a2, a3);
}

uint64_t sub_23F56E664()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  return swift_task_dealloc();
}

uint64_t sub_23F56E688()
{
  return swift_asyncLet_finish();
}

uint64_t sub_23F56E69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23F5545DC(a1, a2, a3, a4, a5);
}

uint64_t sub_23F56E6B0()
{
  return swift_task_dealloc();
}

uint64_t sub_23F56E6C0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 328);
}

uint64_t sub_23F56E6E4()
{
  return swift_task_alloc();
}

uint64_t sub_23F56E6EC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F567B04(v1, v0);
}

uint64_t sub_23F56E6F8()
{
  uint64_t v0;

  sub_23F35EA9C((_QWORD *)(*(_QWORD *)(v0 + 40) + 64), *(_QWORD *)(*(_QWORD *)(v0 + 40) + 88));
  return sub_23F618EA8();
}

int8x16_t sub_23F56E720(int8x16_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int8x16_t a9)
{
  int8x16_t result;

  result = vextq_s8(a9, a9, 8uLL);
  a1[1] = result;
  return result;
}

uint64_t sub_23F56E730@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t sub_23F56E750@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_23F56E770@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_23F56E784()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23F56E790@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_23F56E7A0()
{
  return sub_23F61C790();
}

uint64_t sub_23F56E7A8()
{
  uint64_t v0;

  sub_23F35EA9C((_QWORD *)(*(_QWORD *)(v0 + 24) + 64), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 88));
  return sub_23F618EA8();
}

uint64_t sub_23F56E7CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v0, v1);
}

uint64_t sub_23F56E7E0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
}

uint64_t sub_23F56E7F4()
{
  return sub_23F61CB44();
}

uint64_t sub_23F56E808()
{
  return sub_23F61C790();
}

uint64_t sub_23F56E810()
{
  return sub_23F61CBE0();
}

uint64_t sub_23F56E818()
{
  return sub_23F619D3C();
}

uint64_t sub_23F56E824()
{
  return swift_release();
}

uint64_t sub_23F56E82C()
{
  return swift_asyncLet_get_throwing();
}

uint64_t sub_23F56E834()
{
  return sub_23F618ED8();
}

uint64_t sub_23F56E83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(v1, v0);
}

void sub_23F56E850()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 72) = *(_QWORD *)(v0 - 112);
}

uint64_t sub_23F56E85C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F56E878()
{
  return swift_task_dealloc();
}

uint64_t sub_23F56E888()
{
  return swift_task_dealloc();
}

uint64_t sub_23F56E898()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F56E8A4()
{
  return sub_23F61C790();
}

uint64_t sub_23F56E8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a2;
  return sub_23F618EC0();
}

void sub_23F56E8BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F37AE00(a1, v3, a3);
}

uint64_t sub_23F56E8C4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F56E8D0()
{
  return sub_23F61C790();
}

uint64_t sub_23F56E8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23F56E8F0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F56E900()
{
  uint64_t v0;

  return v0 - 72;
}

void sub_23F56E90C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void sub_23F56E91C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23F56E92C(uint64_t result)
{
  return sub_23F4967B8(result);
}

uint64_t sub_23F56E934()
{
  return swift_task_dealloc();
}

uint64_t sub_23F56E944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v2, a2, v3);
}

uint64_t sub_23F56E964()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23F56E96C()
{
  uint64_t v0;

  return sub_23F35EA9C((_QWORD *)(*(_QWORD *)(v0 + 40) + 64), *(_QWORD *)(*(_QWORD *)(v0 + 40) + 88));
}

_QWORD *sub_23F56E990(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v4;
  result[3] = v3;
  result[4] = v2;
  result[5] = v1;
  return result;
}

uint64_t sub_23F56E99C()
{
  return swift_release();
}

uint64_t sub_23F56E9A4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F56E9B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F56E9D0()
{
  return sub_23F61C610();
}

void sub_23F56E9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a2;
}

unint64_t sub_23F56E9EC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 3;
  return sub_23F56CD60();
}

unint64_t sub_23F56E9F8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 2;
  return sub_23F56CE18();
}

unint64_t sub_23F56EA04()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 1;
  return sub_23F56CE54();
}

uint64_t sub_23F56EA10()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F56EA18()
{
  return 0;
}

uint64_t sub_23F56EA2C()
{
  return swift_release();
}

void sub_23F56EA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a2;
}

unint64_t sub_23F56EA60()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 4;
  return sub_23F56CCA8();
}

BOOL sub_23F56EA6C(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t sub_23F56EA74()
{
  return sub_23F619D3C();
}

uint64_t sub_23F56EA98()
{
  return swift_allocObject();
}

void sub_23F56EAA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F37AE00(a1, v3, a3);
}

uint64_t sub_23F56EAAC()
{
  return swift_willThrow();
}

uint64_t dispatch thunk of QueryExecuting.enumerate(valueSet:toolInvocation:query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23F3F3E10;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_23F56EB58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  void (*v31)(char *, uint64_t);
  int v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  char *v43;
  uint64_t v44;
  int64_t v45;
  int v46;
  uint64_t v47;

  v2 = sub_23F61B9EC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v43 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v37 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v37 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v37 - v12;
  v14 = *(_QWORD *)(a1 + 56);
  v44 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v45 = (unint64_t)(v15 + 63) >> 6;
  v46 = *MEMORY[0x24BEB9D18];
  v42 = *MEMORY[0x24BEB9CF8];
  v41 = *MEMORY[0x24BEB9CD0];
  v40 = *MEMORY[0x24BEB9CB8];
  v39 = *MEMORY[0x24BEB9CA0];
  v38 = *MEMORY[0x24BEB9C78];
  v47 = a1;
  result = sub_23F617BA0();
  v19 = 0;
  while (v17)
  {
    v20 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v21 = v20 | (v19 << 6);
LABEL_21:
    v25 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v25(v13, *(_QWORD *)(v47 + 48) + *(_QWORD *)(v3 + 72) * v21, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v13, v2);
    v25(v8, (unint64_t)v11, v2);
    v26 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v8, v2);
    if (v26 == v46)
    {
      v27 = v43;
      v25(v43, (unint64_t)v8, v2);
      (*(void (**)(char *, uint64_t))(v3 + 96))(v27, v2);
      v28 = sub_23F61B9BC();
      v29 = swift_projectBox();
      v30 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 88))(v29, v28);
      swift_release();
      v31 = *(void (**)(char *, uint64_t))(v3 + 8);
      v31(v8, v2);
      result = ((uint64_t (*)(char *, uint64_t))v31)(v11, v2);
      if (v30 == v41 || v30 == v40 || v30 == v39 || v30 == v38)
      {
LABEL_35:
        swift_release();
        return 1;
      }
    }
    else
    {
      v35 = v26;
      v36 = *(void (**)(char *, uint64_t))(v3 + 8);
      v36(v8, v2);
      result = ((uint64_t (*)(char *, uint64_t))v36)(v11, v2);
      if (v35 == v42)
        goto LABEL_35;
    }
  }
  v22 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v22 >= v45)
    goto LABEL_36;
  v23 = *(_QWORD *)(v44 + 8 * v22);
  ++v19;
  if (v23)
    goto LABEL_20;
  v19 = v22 + 1;
  if (v22 + 1 >= v45)
    goto LABEL_36;
  v23 = *(_QWORD *)(v44 + 8 * v19);
  if (v23)
    goto LABEL_20;
  v19 = v22 + 2;
  if (v22 + 2 >= v45)
    goto LABEL_36;
  v23 = *(_QWORD *)(v44 + 8 * v19);
  if (v23)
    goto LABEL_20;
  v19 = v22 + 3;
  if (v22 + 3 >= v45)
    goto LABEL_36;
  v23 = *(_QWORD *)(v44 + 8 * v19);
  if (v23)
    goto LABEL_20;
  v24 = v22 + 4;
  if (v24 >= v45)
  {
LABEL_36:
    swift_release();
    return 0;
  }
  v23 = *(_QWORD *)(v44 + 8 * v24);
  v19 = v24;
  if (v23)
  {
LABEL_20:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
    goto LABEL_21;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v45)
      goto LABEL_36;
    v23 = *(_QWORD *)(v44 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_20;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23F56EF14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t Resolver;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  void (*v56)(uint64_t *, uint64_t);
  uint64_t v57;
  NSObject *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  os_log_type_t v62;
  _DWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  uint64_t v73;
  os_log_type_t v74;
  _DWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *);
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  NSObject *v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint8_t *v93;
  char v94;
  os_log_type_t v95;
  uint64_t v96;
  _DWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  _BOOL4 v104;
  uint64_t v105;
  uint8_t *v106;
  void (*v107)(char *);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t result;
  uint64_t v116;
  os_log_type_t v117;
  _DWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t);
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  _DWORD *v126;
  os_log_type_t v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(_DWORD *);
  void (*v133)(uint64_t, uint64_t);
  _QWORD *v134;
  void (*v135)(uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  NSObject *v156;
  unint64_t v157;
  _DWORD *v158;
  _DWORD *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint8_t *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v163 = a1;
  v3 = v1;
  v144 = sub_23F61B95C();
  v143 = *(_QWORD *)(v144 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F36285C();
  v142 = v5;
  sub_23F35D2E8(&qword_256E77B10);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v156 = v7;
  sub_23F39C56C();
  v8 = sub_23F617D08();
  v152 = *(_QWORD *)(v8 - 8);
  v153 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3834D0();
  v154 = v10;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v11);
  v151 = (char *)&v137 - v12;
  sub_23F35D2E8(&qword_256E6FB18);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v149 = v14;
  sub_23F39C56C();
  v146 = sub_23F618134();
  v145 = *(_QWORD *)(v146 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F36285C();
  v148 = v16;
  sub_23F39C56C();
  sub_23F61ACA8();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F36285C();
  v150 = v18;
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F36285C();
  v147 = v20;
  sub_23F35D2E8(&qword_256E7B340);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F36285C();
  v162 = v22;
  sub_23F39C56C();
  Resolver = type metadata accessor for QueryResolver();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3834D0();
  v158 = (_DWORD *)v25;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F3838E4();
  v138 = v27;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F3838E4();
  v161 = v29;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F3838E4();
  v140 = v31;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v32);
  v157 = (unint64_t)&v137 - v33;
  sub_23F39C56C();
  v34 = sub_23F619E98();
  v165 = *(_QWORD *)(v34 - 8);
  v166 = v34;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3834D0();
  v159 = v36;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3838E4();
  v141 = v38;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F3838E4();
  v155 = v40;
  sub_23F383588();
  v42 = MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v137 - v43;
  MEMORY[0x24BDAC7A8](v42);
  sub_23F3838E4();
  v139 = v45;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v46);
  v48 = (char *)&v137 - v47;
  sub_23F35D2E8(&qword_256E77B00);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F38F964();
  v52 = v51 - v50;
  v53 = sub_23F61B410();
  v54 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  sub_23F3B1F34();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v54 + 16))(v2, v3, v53);
  v55 = (*(uint64_t (**)(uint64_t *, uint64_t))(v54 + 88))(v2, v53);
  if (v55 == *MEMORY[0x24BE56ED8])
  {
    v56 = *(void (**)(uint64_t *, uint64_t))(v54 + 96);
    v156 = v53;
    v56(v2, v53);
    swift_bridgeObjectRelease();
    ParameterDefinition.idSearchPredicateTemplate.getter(v52);
    v57 = sub_23F61BA70();
    v58 = sub_23F36195C(v52, 1, v57);
    sub_23F3CFCB0(v52, &qword_256E77B00);
    v59 = v3;
    if ((_DWORD)v58 != 1)
    {
      sub_23F619094();
      v60 = v3;
      v61 = v157;
      sub_23F56FCB0(v60, v157);
      sub_23F619E8C();
      v62 = sub_23F3B1BD4();
      if (sub_23F5708C8(v62))
      {
        v63 = (_DWORD *)sub_23F366668();
        v64 = sub_23F366668();
        v160 = v59;
        v167 = v64;
        *v63 = 136315138;
        v65 = sub_23F61BB78();
        sub_23F3ECBE4(v65, v66);
        sub_23F5708A0(v67);
        sub_23F61C790();
        sub_23F362984();
        sub_23F56FCF4(v61);
        sub_23F570894(&dword_23F35A000, v58, (os_log_type_t)Resolver, "EntityQuery supported for parameter %s");
        sub_23F3B17D4();
        sub_23F366530();
      }
      sub_23F56FCF4(v61);

      sub_23F5708E8();
      v80(v48);
      v81 = (uint64_t)v156;
      v82 = v162;
      v83 = v162;
      v84 = 1;
LABEL_11:
      sub_23F36196C((uint64_t)v83, v84, 1, v81);
      sub_23F56FD30((uint64_t)v82);
      v85 = (uint64_t)v82;
      return sub_23F3CFCB0(v85, &qword_256E7B340);
    }
    goto LABEL_29;
  }
  v68 = Resolver;
  v160 = v3;
  v3 = *MEMORY[0x24BE56EE0];
  v69 = v53;
  v70 = v54;
  v71 = v161;
  if (v55 == (_DWORD)v3)
    goto LABEL_13;
  if (v55 != *MEMORY[0x24BE56EF0])
  {
    if (v55 != *MEMORY[0x24BE56EE8])
    {
      result = sub_23F61CC58();
      __break(1u);
      return result;
    }
LABEL_13:
    sub_23F493318(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 96));
    v86 = v2[1];
    v87 = HIBYTE(v86) & 0xF;
    if ((v86 & 0x2000000000000000) == 0)
      v87 = *v2 & 0xFFFFFFFFFFFFLL;
    if (v87)
    {
      v154 = *v2;
      v157 = v86;
      v59 = v160;
      v88 = v156;
      ParameterDefinition.stringSearchPredicateTemplate.getter((uint64_t)v156);
      v89 = sub_23F61BC98();
      v90 = sub_23F36195C((uint64_t)v88, 1, v89);
      v91 = sub_23F3CFCB0((uint64_t)v88, &qword_256E77B10);
      if (v90 != 1)
      {
        v156 = v69;
        v116 = v155;
        sub_23F619094();
        sub_23F56FCB0(v59, v71);
        sub_23F619E8C();
        v117 = sub_23F3B1BD4();
        if (sub_23F5708C8(v117))
        {
          v118 = (_DWORD *)sub_23F366668();
          v167 = sub_23F366668();
          *v118 = 136315138;
          v159 = (_DWORD *)v70;
          v158 = v118 + 1;
          v119 = sub_23F61BB78();
          sub_23F3ECBE4(v119, v120);
          sub_23F3E2770(v121);
          sub_23F61C790();
          sub_23F362984();
          sub_23F56FCF4(v71);
          sub_23F570894(&dword_23F35A000, v88, (os_log_type_t)v69, "EntityStringQuery supported for parameter %s");
          sub_23F3B17D4();
          sub_23F366530();
        }
        sub_23F5708E0();

        sub_23F384A2C();
        v122(v116, v166);
        v123 = v162;
        v125 = (uint64_t)v156;
        v124 = v157;
        *v162 = v154;
        v123[1] = v124;
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v70 + 104))(v123, v3, v125);
        sub_23F36196C((uint64_t)v123, 0, 1, v125);
        sub_23F56FD30((uint64_t)v123);
        v85 = (uint64_t)v123;
        return sub_23F3CFCB0(v85, &qword_256E7B340);
      }
      v92 = v142;
      MEMORY[0x24266F0AC](v91);
      v58 = sub_23F61B938();
      (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v92, v144);
      v93 = v164;
      v94 = sub_23F56EB58((uint64_t)v58);
      swift_bridgeObjectRelease();
      if ((v94 & 1) != 0)
      {
        sub_23F384060();
        sub_23F56FCB0(v59, v138);
        sub_23F619E8C();
        v95 = sub_23F3B1BD4();
        if (sub_23F4F27F4(v95))
        {
          v96 = sub_23F366668();
          v164 = v93;
          v97 = (_DWORD *)v96;
          v98 = sub_23F366668();
          v156 = v69;
          v167 = v98;
          *v97 = 136315138;
          v159 = (_DWORD *)v70;
          v99 = sub_23F61BB78();
          sub_23F3ECBE4(v99, v100);
          sub_23F5708A0(v101);
          sub_23F61C790();
          sub_23F362984();
          sub_23F5708E0();
          sub_23F570894(&dword_23F35A000, v58, (os_log_type_t)v3, "system candidate generation supported for parameter %s");
          sub_23F3B17D4();
          sub_23F366530();
        }
        sub_23F5708E0();

        sub_23F5708E8();
        v135(v141);
        v82 = v162;
        v136 = v157;
        *v162 = v154;
        v82[1] = v136;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v70 + 104))(v82, *MEMORY[0x24BE56EE8], v69);
        v83 = v82;
        v84 = 0;
        v81 = v69;
        goto LABEL_11;
      }
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
    sub_23F384060();
    v102 = sub_23F619E8C();
    v103 = sub_23F61C610();
    v104 = os_log_type_enabled(v102, v103);
    v105 = v160;
    if (v104)
    {
      v106 = (uint8_t *)sub_23F366668();
      *(_WORD *)v106 = 0;
      _os_log_impl(&dword_23F35A000, v102, v103, "string query is empty, returning ParameterNeedsValue", v106, 2u);
      sub_23F366530();
    }

    sub_23F5708E8();
    v107(v44);
    v108 = sub_23F617000();
    sub_23F3838D8(v147, v109, v110, v108);
    sub_23F61AC18();
    sub_23F61BB78();
    v111 = v148;
    sub_23F618218();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v145 + 104))(v111, *MEMORY[0x24BE532E8], v146);
    v112 = sub_23F61811C();
    sub_23F3838D8(v149, v113, v114, v112);
    sub_23F61AC90();
    sub_23F61B134();
    sub_23F61B17C();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 16))(v154, v105 + *(int *)(v68 + 24), v153);
    sub_23F61A4BC();
    type metadata accessor for StepResolution();
    return swift_storeEnumTagMultiPayload();
  }
  v3 = v160;
  ParameterDefinition.comparisonSeachPredicateTemplates.getter();
  v58 = v72;
  swift_bridgeObjectRelease();
  if (!v58)
  {
    sub_23F493318(*(uint64_t (**)(uint64_t, uint64_t))(v70 + 8));
    v59 = v3;
LABEL_29:
    v126 = v159;
    sub_23F619094();
    sub_23F56FCB0(v59, (uint64_t)v158);
    sub_23F619E8C();
    v127 = sub_23F3B1BD4();
    if (sub_23F4F27F4(v127))
    {
      v128 = (uint8_t *)sub_23F366668();
      v167 = sub_23F366668();
      *(_DWORD *)v128 = 136315138;
      v164 = v128 + 4;
      v129 = sub_23F61BB78();
      sub_23F3ECBE4(v129, v130);
      sub_23F3E2770(v131);
      sub_23F61C790();
      sub_23F362984();
      sub_23F5708D8();
      _os_log_impl(&dword_23F35A000, v58, (os_log_type_t)v3, "no matching query found for parameter %s", v128, 0xCu);
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F5708D8();

    sub_23F5708E8();
    v132(v126);
    type metadata accessor for InterpreterError();
    sub_23F3CFCEC((unint64_t *)&qword_256E6FB48, (uint64_t (*)(uint64_t))type metadata accessor for InterpreterError, (uint64_t)&protocol conformance descriptor for InterpreterError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v73 = v139;
  sub_23F384060();
  sub_23F56FCB0(v3, v140);
  sub_23F619E8C();
  v74 = sub_23F3B1BD4();
  if (os_log_type_enabled(v58, v74))
  {
    v75 = (_DWORD *)sub_23F366668();
    v161 = sub_23F366668();
    v167 = v161;
    *v75 = 136315138;
    v159 = v75 + 1;
    v76 = v140;
    v77 = sub_23F61BB78();
    sub_23F3ECBE4(v77, v78);
    sub_23F3E2770(v79);
    sub_23F61C790();
    sub_23F362984();
    sub_23F56FCF4(v76);
    sub_23F570894(&dword_23F35A000, v58, v74, "EntityPropertyQuery supported for parameter %s");
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F5708D8();

  sub_23F384A2C();
  v133(v73, v166);
  v134 = v162;
  sub_23F36196C((uint64_t)v162, 1, 1, v69);
  sub_23F56FD30((uint64_t)v134);
  sub_23F3CFCB0((uint64_t)v134, &qword_256E7B340);
  return sub_23F493318(*(uint64_t (**)(uint64_t, uint64_t))(v70 + 8));
}

uint64_t type metadata accessor for QueryResolver()
{
  uint64_t result;

  result = qword_256E7B3A8;
  if (!qword_256E7B3A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F56FCB0(uint64_t a1, uint64_t a2)
{
  uint64_t Resolver;

  Resolver = type metadata accessor for QueryResolver();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Resolver - 8) + 16))(a2, a1, Resolver);
  return a2;
}

uint64_t sub_23F56FCF4(uint64_t a1)
{
  uint64_t Resolver;

  Resolver = type metadata accessor for QueryResolver();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(Resolver - 8) + 8))(a1, Resolver);
  return a1;
}

uint64_t sub_23F56FD30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Resolver;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  Resolver = type metadata accessor for QueryResolver();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F36285C();
  v19 = v5;
  sub_23F35D2E8(&qword_256E7B340);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F38F964();
  v9 = v8 - v7;
  v10 = sub_23F61B410();
  v18 = *(_QWORD *)(v10 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  v21 = v12;
  sub_23F39C56C();
  v13 = sub_23F61AC24();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3B1F34();
  v15 = sub_23F384040();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F38F964();
  (*(void (**)(void))(v16 + 16))();
  sub_23F35D2E8(&qword_256E7B348);
  sub_23F61A294();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_23F61E7E0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v2, v1 + *(int *)(Resolver + 20), v13);
  sub_23F56FFE8(a1, v9);
  sub_23F56FCB0(v1, v19);
  if (sub_23F36195C(v9, 1, v10) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v21, v19, v10);
    sub_23F56FCF4(v19);
    sub_23F3CFCB0(v9, &qword_256E7B340);
  }
  else
  {
    sub_23F56FCF4(v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21, v9, v10);
  }
  sub_23F61B92C();
  sub_23F3CFCEC(&qword_256E6FFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52158]);
  sub_23F61BFEC();
  sub_23F61A27C();
  sub_23F61B428();
  type metadata accessor for StepResolution();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F56FFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E7B340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_23F570030(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B410();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F61AC24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23F617D08();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_23F61BBA8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_23F61B140();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t sub_23F570164(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_23F61B410();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_23F61AC24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  v8 = sub_23F617D08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  v10 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  v12 = sub_23F61B140();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t sub_23F570234(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23F61B410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F61AC24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23F617D08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_23F61B140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t sub_23F57033C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23F61B410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F61AC24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23F617D08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_23F61B140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t sub_23F570444(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23F61B410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F61AC24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23F617D08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_23F61B140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t sub_23F57054C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23F61B410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F61AC24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23F617D08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_23F61B140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_23F570654()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F570660(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_23F5708B8();
  sub_23F3F9C58();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    sub_23F61AC24();
    sub_23F3F9C58();
    if (v9)
    {
      v7 = v10;
      v11 = a3[5];
    }
    else
    {
      sub_23F384040();
      sub_23F3F9C58();
      if (v12)
      {
        v7 = v13;
        v11 = a3[6];
      }
      else
      {
        sub_23F61BBA8();
        sub_23F3F9C58();
        if (v14)
        {
          v7 = v15;
          v11 = a3[7];
        }
        else
        {
          v7 = sub_23F61B140();
          v11 = a3[8];
        }
      }
    }
    v8 = v4 + v11;
  }
  return sub_23F36195C(v8, v3, v7);
}

uint64_t sub_23F570704()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F570710(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  sub_23F5708B8();
  sub_23F3F9C68();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    sub_23F61AC24();
    sub_23F3F9C68();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_23F384040();
      sub_23F3F9C68();
      if (v13)
      {
        v8 = v14;
        v12 = a4[6];
      }
      else
      {
        sub_23F61BBA8();
        sub_23F3F9C68();
        if (v15)
        {
          v8 = v16;
          v12 = a4[7];
        }
        else
        {
          v8 = sub_23F61B140();
          v12 = a4[8];
        }
      }
    }
    v9 = v5 + v12;
  }
  return sub_23F36196C(v9, v4, v4, v8);
}

uint64_t sub_23F5707BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = sub_23F61B410();
  if (v1 <= 0x3F)
  {
    result = sub_23F61AC24();
    if (v2 <= 0x3F)
    {
      result = sub_23F617D08();
      if (v3 <= 0x3F)
      {
        result = sub_23F61BBA8();
        if (v4 <= 0x3F)
        {
          result = sub_23F61B140();
          if (v5 <= 0x3F)
          {
            swift_initStructMetadata();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

void sub_23F570894(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_23F5708A0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_23F5708B8()
{
  return sub_23F61B410();
}

BOOL sub_23F5708C8(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F5708D8()
{
  uint64_t v0;

  return sub_23F56FCF4(v0);
}

uint64_t sub_23F5708E0()
{
  uint64_t v0;

  return sub_23F56FCF4(v0);
}

uint64_t sub_23F5708F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_23F619E98();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = sub_23F366578();
  sub_23F35D2E8(&qword_256E72FB8);
  v2[7] = sub_23F366578();
  v4 = sub_23F616D00();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = sub_23F366578();
  v5 = sub_23F38F984();
  v2[11] = v5;
  v2[12] = *(_QWORD *)(v5 - 8);
  v2[13] = sub_23F3666CC();
  v2[14] = sub_23F3666CC();
  v6 = sub_23F40EB6C();
  v2[15] = v6;
  v2[16] = *(_QWORD *)(v6 - 8);
  v2[17] = sub_23F3666CC();
  v2[18] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E6FAA0);
  v2[19] = sub_23F366578();
  v7 = sub_23F40EBD4();
  v2[20] = v7;
  v2[21] = *(_QWORD *)(v7 - 8);
  v2[22] = sub_23F3666CC();
  v2[23] = sub_23F3666CC();
  v2[24] = sub_23F3666CC();
  v8 = sub_23F61B9EC();
  v2[25] = v8;
  v2[26] = *(_QWORD *)(v8 - 8);
  v2[27] = sub_23F366578();
  v9 = sub_23F61B95C();
  v2[28] = v9;
  v2[29] = *(_QWORD *)(v9 - 8);
  v2[30] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F570A4C()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, int *);
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  void (*v14)(uint64_t *);
  char v15;
  char v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  uint64_t v36;

  sub_23F3B1D38();
  v3 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v4 = *(uint64_t **)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 208);
  v7 = (int *)type metadata accessor for RelativeDateResolver();
  *(_QWORD *)(v0 + 248) = v7;
  MEMORY[0x24266F0AC]();
  *(_QWORD *)(v0 + 256) = sub_23F61B938();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  v8 = sub_23F61B9BC();
  *(_QWORD *)(v0 + 264) = v8;
  v9 = swift_allocBox();
  v11 = v10;
  v12 = *MEMORY[0x24BEB9C98];
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104);
  *(_QWORD *)(v0 + 272) = v13;
  v13(v11, v12, v8);
  *v4 = v9;
  *(_DWORD *)(v0 + 328) = *MEMORY[0x24BEB9D18];
  v14 = *(void (**)(uint64_t *))(v6 + 104);
  *(_QWORD *)(v0 + 280) = v14;
  v14(v4);
  sub_23F3E2C5C();
  v16 = v15;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  *(_QWORD *)(v0 + 288) = v17;
  sub_23F36673C(v17);
  if ((v16 & 1) != 0)
  {
    v18 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 96);
    v23 = *(uint64_t **)(v0 + 24);
    v24 = v23[1];
    v36 = *v23;
    (*(void (**)(_QWORD, char *, _QWORD))(*(_QWORD *)(v0 + 168) + 16))(*(_QWORD *)(v0 + 184), (char *)v23 + v7[6], *(_QWORD *)(v0 + 160));
    sub_23F362D94(v18, (uint64_t)v23 + v7[7], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16));
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v20, (char *)v23 + v7[8], v21);
    sub_23F617BA0();
    v25 = (_QWORD *)sub_23F3666CC();
    *(_QWORD *)(v0 + 296) = v25;
    *v25 = v0;
    v25[1] = sub_23F570CFC;
    return sub_23F571220(*(_QWORD *)(v0 + 152), v36, v24, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 112));
  }
  else
  {
    sub_23F57362C();
    v1(v27, *MEMORY[0x24BEB9C60], v7);
    sub_23F5736F4();
    sub_23F57376C();
    sub_23F57374C();
    sub_23F48225C();
    sub_23F384060();
    sub_23F619E8C();
    v28 = sub_23F4264F8();
    if (sub_23F3F0E3C(v28))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F3F0DF0(&dword_23F35A000, v29, v30, "Not attempting to convert relative date due to non-date type");
      sub_23F366530();
    }
    sub_23F57364C();
    sub_23F3E2B1C();
    sub_23F384048();
    v31 = sub_23F5736B0();
    sub_23F36196C(v31, v32, v33, v34);
    sub_23F573538();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F3668E4();
    sub_23F3668DC();
    sub_23F3668D4();
    v35 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F366630(v35);
  }
}

uint64_t sub_23F570CFC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F570D64()
{
  char v0;
  _QWORD *v1;
  void (*v2)(uint64_t, _QWORD, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);

  sub_23F3B1D38();
  v4 = v1[19];
  v3 = v1[20];
  sub_23F3C84F4(v4);
  if (v5)
  {
    sub_23F3CFCB0(v4, &qword_256E6FAA0);
    sub_23F57362C();
    v2(v6, *MEMORY[0x24BEB9C60], v3);
    sub_23F5736F4();
    sub_23F57376C();
    sub_23F57374C();
    sub_23F48225C();
    if ((v0 & 1) != 0)
    {
      sub_23F57356C();
      sub_23F5736DC();
      sub_23F5736C4();
      sub_23F384324();
      v7 = (_QWORD *)sub_23F3666CC();
      v1[39] = v7;
      v8 = sub_23F573668(v7);
      return sub_23F573610(v8, v9, v10, v11, v12, v13);
    }
    sub_23F384060();
    sub_23F619E8C();
    v29 = sub_23F4264F8();
    if (sub_23F3F0E3C(v29))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F3F0DF0(&dword_23F35A000, v30, v31, "Not attempting to convert relative date due to non-date type");
      sub_23F366530();
    }
    sub_23F57364C();
    sub_23F3E2B1C();
    sub_23F384048();
    v25 = sub_23F5736B0();
  }
  else
  {
    v15 = v1[24];
    v16 = v1[21];
    v17 = (uint64_t *)v1[2];
    swift_bridgeObjectRelease();
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
    v18(v15, v4, v3);
    v19 = sub_23F61B8A8();
    v20 = swift_allocBox();
    v22 = v21;
    v18(v21, v15, v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v22, *MEMORY[0x24BEB9930], v19);
    *v17 = v20;
    v23 = *MEMORY[0x24BEB9A00];
    v24 = sub_23F384048();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v17, v23, v24);
    v25 = (uint64_t)v17;
    v26 = 0;
    v27 = 1;
    v28 = v24;
  }
  sub_23F36196C(v25, v26, v27, v28);
  sub_23F573538();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  v32 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F366630(v32);
}

uint64_t sub_23F570F54()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F3B1998();
  *v2 = *v1;
  *(_QWORD *)(v3 + 320) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F570FA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);

  sub_23F3B1D38();
  v1 = v0[7];
  v2 = v0[8];
  if (sub_23F36195C(v1, 1, v2) == 1)
  {
    sub_23F3CFCB0(v1, &qword_256E72FB8);
    sub_23F384060();
    sub_23F619E8C();
    v3 = sub_23F4264F8();
    if (sub_23F3F0E3C(v3))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F3F0DF0(&dword_23F35A000, v4, v5, "Not attempting to convert relative date due to non-date type");
      sub_23F366530();
    }
    sub_23F57364C();
    sub_23F3E2B1C();
    sub_23F384048();
    v6 = sub_23F5736B0();
  }
  else
  {
    v10 = v0[10];
    v11 = (uint64_t *)v0[2];
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[9] + 32);
    v12(v10, v1, v2);
    v13 = sub_23F61B8A8();
    v14 = swift_allocBox();
    v16 = v15;
    v12(v15, v10, v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v16, *MEMORY[0x24BEB9900], v13);
    *v11 = v14;
    v17 = *MEMORY[0x24BEB9A00];
    v18 = sub_23F384048();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v11, v17, v18);
    v6 = (uint64_t)v11;
    v7 = 0;
    v8 = 1;
    v9 = v18;
  }
  sub_23F36196C(v6, v7, v8, v9);
  sub_23F573538();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  v19 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F366630(v19);
}

uint64_t sub_23F571128()
{
  uint64_t v0;

  sub_23F3B14B8();
  sub_23F5735A4();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  return sub_23F3B1350(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F571188()
{
  uint64_t v0;

  sub_23F3B14B8();
  sub_23F5735A4();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  return sub_23F3B1350(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for RelativeDateResolver()
{
  uint64_t result;

  result = qword_256E7B470;
  if (!qword_256E7B470)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F571220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  v6[10] = a1;
  v6[11] = a2;
  sub_23F35D2E8(&qword_256E70A60);
  v6[16] = swift_task_alloc();
  v7 = sub_23F617150();
  v6[17] = v7;
  v6[18] = *(_QWORD *)(v7 - 8);
  v6[19] = swift_task_alloc();
  v8 = sub_23F6170CC();
  v6[20] = v8;
  v6[21] = *(_QWORD *)(v8 - 8);
  v6[22] = swift_task_alloc();
  v9 = sub_23F617198();
  v6[23] = v9;
  v6[24] = *(_QWORD *)(v9 - 8);
  v6[25] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E6FAA0);
  v6[26] = swift_task_alloc();
  v6[27] = swift_task_alloc();
  v10 = sub_23F616FC4();
  v6[28] = v10;
  v6[29] = *(_QWORD *)(v10 - 8);
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  v6[32] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E702A0);
  v6[33] = swift_task_alloc();
  v6[34] = swift_task_alloc();
  v11 = sub_23F619E98();
  v6[35] = v11;
  v6[36] = *(_QWORD *)(v11 - 8);
  v6[37] = swift_task_alloc();
  v6[38] = swift_task_alloc();
  v6[39] = swift_task_alloc();
  v6[40] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E72FB8);
  v6[41] = swift_task_alloc();
  v12 = sub_23F616D00();
  v6[42] = v12;
  v6[43] = *(_QWORD *)(v12 - 8);
  v6[44] = swift_task_alloc();
  v6[45] = swift_task_alloc();
  v13 = sub_23F61B038();
  v6[46] = v13;
  v6[47] = *(_QWORD *)(v13 - 8);
  v6[48] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F57147C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t (**v18)(uint64_t, uint64_t);
  int v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(void);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  void (*v64)(uint64_t, uint64_t, uint64_t);
  void (*v65)(uint64_t, uint64_t, uint64_t);
  _QWORD *v66;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102[3];

  v1 = v0[41];
  sub_23F617BA0();
  sub_23F61B044();
  sub_23F40D4A0(v1);
  v3 = v0[41];
  v2 = v0[42];
  sub_23F3C84F4(v3);
  if (v23)
  {
    sub_23F3CFCB0(v3, &qword_256E72FB8);
    sub_23F619094();
    sub_23F617BA0();
    v4 = sub_23F619E8C();
    v5 = sub_23F61C628();
    v6 = os_log_type_enabled(v4, v5);
    v92 = v0[48];
    v89 = v0[47];
    v95 = v0[40];
    v98 = v0[46];
    v7 = v0[35];
    v8 = v0[29];
    v9 = v0[23];
    v10 = v0[12];
    v85 = v0[28];
    v87 = v0[36];
    v83 = v0[13];
    if (v6)
    {
      v11 = v0[11];
      v12 = (uint8_t *)swift_slowAlloc();
      v102[0] = sub_23F366668();
      *(_DWORD *)v12 = 136315138;
      sub_23F384324();
      sub_23F37AE00(v11, v10, v102);
      v0[5] = v13;
      sub_23F61C790();
      sub_23F3E01D0();
      sub_23F38485C(&dword_23F35A000, v4, v5, "Unable to build duration for relative date: %s", v12);
      sub_23F3B17D4();
      sub_23F366530();
    }
    v24 = v0[24];
    v25 = v0[14];

    sub_23F384A80();
    v26 = sub_23F573760();
    v27(v26);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v9);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v83, v85);
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v95, v7);
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v92, v98);
    goto LABEL_18;
  }
  v14 = v0[34];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v0[43] + 32))(v0[45], v3, v2);
  sub_23F61B020();
  v15 = sub_23F61B02C();
  v16 = sub_23F36195C(v14, 1, v15);
  if (v16 == 1)
  {
LABEL_15:
    sub_23F3CFCB0(v0[34], &qword_256E702A0);
    sub_23F384060();
    sub_23F617BA0();
    v28 = sub_23F619E8C();
    v29 = sub_23F61C628();
    v30 = os_log_type_enabled(v28, v29);
    v96 = v0[48];
    v99 = v0[46];
    v88 = v0[43];
    v90 = v0[45];
    v93 = v0[42];
    v31 = v0[29];
    v32 = v0[14];
    v84 = v0[35];
    v86 = v0[47];
    v81 = v0[36];
    v82 = v0[39];
    v80 = v0[28];
    if (v30)
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v102[0] = sub_23F366668();
      *(_DWORD *)v33 = 136315138;
      sub_23F617BA0();
      v34 = sub_23F573760();
      sub_23F37AE00(v34, v35, v36);
      v0[6] = v37;
      sub_23F61C790();
      sub_23F3E01D0();
      sub_23F38485C(&dword_23F35A000, v28, v29, "Unexpected conjunction for relative date: %s", v33);
      sub_23F3B17D4();
      sub_23F366530();
    }
    v38 = v0[13];
    v39 = v0[24];
    v40 = v0[20];
    v41 = v28;
    v42 = v0[21];
    v43 = v0[15];

    sub_23F384A80();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v40);
    sub_23F3D98EC(v32, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
    sub_23F573758(v38, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8), v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v82, v84);
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v96, v99);
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v90, v93);
LABEL_18:
    v44 = sub_23F573778();
    sub_23F36196C(v44, v45, v46, v47);
    sub_23F57368C();
    swift_task_dealloc();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    swift_task_dealloc();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F383C6C();
    swift_task_dealloc();
    v48 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F3D05C8(v48);
  }
  v17 = v0[33];
  sub_23F572CBC(v0[34], v17);
  v18 = *(uint64_t (***)(uint64_t, uint64_t))(v15 - 8);
  v19 = v18[11](v17, v15);
  v20 = (uint64_t *)v0[33];
  if (v19 != *MEMORY[0x24BE56648])
  {
    sub_23F417108(v18[1]);
    goto LABEL_15;
  }
  sub_23F417108(v18[12]);
  v21 = *v20;
  v22 = v20[1];
  v23 = *v20 == 0x65726F666562 && v22 == 0xE600000000000000;
  if (!v23 && (sub_23F57373C() & 1) == 0)
  {
    if (v21 == 0x7265746661 && v22 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_28:
      sub_23F362984();
      sub_23F3CFCB0(v0[34], &qword_256E702A0);
      goto LABEL_20;
    }
    v68 = sub_23F57373C();
    sub_23F362984();
    if ((v68 & 1) != 0)
      goto LABEL_28;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  v50 = v0[44];
  v51 = v0[45];
  v52 = v0[43];
  v53 = v0[34];
  swift_bridgeObjectRelease();
  sub_23F3CFCB0(v53, &qword_256E702A0);
  sub_23F572B30(v51, v50);
  sub_23F362D94(v51, v50, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 40));
LABEL_20:
  v54 = v0[31];
  v55 = v0[29];
  v56 = v0[24];
  v91 = v0[25];
  v57 = v0[23];
  v100 = v0[20];
  v101 = v0[22];
  v58 = v0[14];
  v94 = v0[21];
  v97 = v0[15];
  v59 = v0[13];
  v60 = sub_23F61B014();
  v62 = v61;
  v0[49] = v60;
  v0[50] = v61;
  v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 16);
  v0[51] = v63;
  sub_23F362D94(v54, v59, v63);
  v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
  v0[52] = v64;
  v64(v91, v58, v57);
  v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16);
  v0[53] = v65;
  v65(v101, v97, v100);
  sub_23F617BA0();
  v66 = (_QWORD *)swift_task_alloc();
  v0[54] = v66;
  *v66 = v0;
  v66[1] = sub_23F571D4C;
  return sub_23F40EDF4(v0[27], v60, v62, v0[31], v0[25], v0[22]);
}

uint64_t sub_23F571D4C()
{
  sub_23F3B1998();
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F571D8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(void);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  os_log_t log;
  os_log_t loga;
  os_log_t logb;
  os_log_t logc;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t, uint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  void (*v155)(uint64_t, uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163[2];

  v2 = v0[27];
  v1 = v0[28];
  if (sub_23F36195C(v2, 1, v1) == 1)
  {
    sub_23F3CFCB0(v2, &qword_256E6FAA0);
    sub_23F619094();
    sub_23F617BA0();
    v3 = sub_23F619E8C();
    v4 = sub_23F61C628();
    v5 = os_log_type_enabled(v3, v4);
    v6 = v0[50];
    if (v5)
    {
      v7 = v0[49];
      sub_23F5735D8(v0[48]);
      v8 = (uint8_t *)sub_23F366668();
      v163[0] = sub_23F366668();
      *(_DWORD *)v8 = 136315138;
      sub_23F617BA0();
      sub_23F37AE00(v7, v6, v163);
      v0[7] = v9;
      sub_23F61C790();
      sub_23F3E01D0();
      sub_23F38485C(&dword_23F35A000, v3, v4, "Unable to create date from: %s", v8);
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F5735D8(v0[48]);
    v132 = v0[29];
    v135 = v0[28];
    v139 = v38;
    v39 = v0[24];
    v40 = v0[20];
    v41 = v0[21];
    v42 = v0[15];
    v43 = v0[13];

    sub_23F384A80();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v40);
    sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v43, v135);
    (*(void (**)())(v139 + 8))();
    (*(void (**)())(v145 + 8))();
    (*(void (**)())(v151 + 8))();
LABEL_10:
    v54 = sub_23F573778();
    goto LABEL_11;
  }
  v152 = (void (*)(uint64_t, uint64_t, uint64_t))v0[52];
  v155 = (void (*)(uint64_t, uint64_t, uint64_t))v0[53];
  v10 = v0[32];
  v11 = v0[29];
  v12 = v0[25];
  v158 = v0[26];
  v146 = v0[23];
  v13 = v0[20];
  v14 = v0[16];
  v149 = v0[15];
  v15 = v0[14];
  swift_bridgeObjectRelease();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v16(v10, v2, v1);
  sub_23F61712C();
  v152(v12, v15, v146);
  sub_23F617138();
  v155(v14, v149, v13);
  sub_23F36196C(v14, 0, 1, v13);
  sub_23F617120();
  sub_23F617108();
  if (sub_23F36195C(v158, 1, v1) == 1)
  {
    v17 = (void (*)(uint64_t, uint64_t, uint64_t))v0[51];
    v18 = v0[32];
    v19 = v0[30];
    v20 = v0[28];
    sub_23F3CFCB0(v0[26], &qword_256E6FAA0);
    sub_23F384060();
    v17(v19, v18, v20);
    v21 = sub_23F619E8C();
    v22 = sub_23F61C628();
    v23 = os_log_type_enabled(v21, v22);
    v24 = v0[48];
    v25 = v0[45];
    v156 = v0[47];
    v159 = v0[46];
    v26 = v0[42];
    v161 = v0[43];
    v142 = v0[36];
    v147 = v0[35];
    v153 = v0[32];
    v27 = v0[29];
    v28 = v0[28];
    v125 = v0[24];
    v128 = v0[23];
    v131 = v0[18];
    v134 = v0[17];
    v138 = v0[19];
    v106 = v0[15];
    v110 = v0[21];
    v114 = v0[14];
    v118 = v0[20];
    v122 = v0[13];
    if (v23)
    {
      v29 = sub_23F366668();
      v163[0] = sub_23F366668();
      *(_DWORD *)v29 = 136315394;
      sub_23F3CFCEC(&qword_256E7B408, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v30 = sub_23F61CC1C();
      sub_23F37AE00(v30, v31, v163);
      v0[8] = v32;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      v33 = *(void (**)(uint64_t))(v27 + 8);
      v34 = sub_23F573760();
      v33(v34);
      *(_WORD *)(v29 + 12) = 2080;
      swift_beginAccess();
      sub_23F3CFCEC(qword_256E7B410, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE28]);
      v35 = sub_23F61CC1C();
      sub_23F37AE00(v35, v36, v163);
      v0[9] = v37;
      sub_23F61C790();
      sub_23F362984();
      _os_log_impl(&dword_23F35A000, v21, v22, "Unable to offset date: %s by %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      sub_23F366530();
    }

    v58 = *(void (**)(uint64_t))(v27 + 8);
    v59 = sub_23F573760();
    v58(v59);
    v60 = sub_23F57365C(v106, v110, v86, v90, (uint64_t)log, v98, v102, v106, v110, v114, v118);
    sub_23F57372C(v60, v61, v62, v63, v64, v65, v66, v67, v87, v91, (uint64_t)loga, v99, v103, v107, v111, v115, v119, v122, v125,
      v128);
    v68 = ((uint64_t (*)(uint64_t, uint64_t))v58)(v123, v28);
    v76 = sub_23F573708(v68, v69, v70, v71, v72, v73, v74, v75, v88, v92, (uint64_t)logb, v100, v104, v108, v112, v116, v120, v123, v126,
            v129,
            v131,
            v134,
            v138,
            v142,
            (uint64_t)(v0 + 8),
            v147);
    sub_23F57371C(v76, v77, v78, v79, v80, v81, v82, v83, v89, v93, (uint64_t)logc, v101, v105, v109, v113, v117, v121, v124, v127,
      v130,
      v133,
      v137,
      v141);
    ((void (*)(uint64_t, uint64_t))v58)(v153, v28);
    (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v24, v159);
    (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v25, v26);
    goto LABEL_10;
  }
  v154 = v0[48];
  v148 = v0[47];
  v150 = v0[46];
  v157 = v0[43];
  v160 = v0[42];
  v162 = v0[45];
  v44 = v0[28];
  v45 = v0[29];
  v143 = v16;
  v144 = v0[26];
  v47 = v0[23];
  v46 = v0[24];
  v48 = v0[18];
  v136 = v0[19];
  v140 = v0[32];
  v49 = v0[17];
  v50 = v0[14];
  v51 = v0[13];
  v52 = v0[10];
  sub_23F384274(v0[21]);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v50, v47);
  v53 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  v53(v51, v44);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v136, v49);
  v53(v140, v44);
  (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v154, v150);
  v143(v52, v144, v44);
  (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v162, v160);
  v54 = v52;
  v55 = 0;
  v56 = 1;
  v57 = v44;
LABEL_11:
  sub_23F36196C(v54, v55, v56, v57);
  sub_23F57368C();
  swift_task_dealloc();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  swift_task_dealloc();
  swift_task_dealloc();
  v84 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3D05C8(v84);
}

uint64_t sub_23F572530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  sub_23F35D2E8(&qword_256E70A60);
  v6[8] = swift_task_alloc();
  v7 = sub_23F617150();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v8 = sub_23F6170CC();
  v6[12] = v8;
  v6[13] = *(_QWORD *)(v8 - 8);
  v6[14] = swift_task_alloc();
  v9 = sub_23F617198();
  v6[15] = v9;
  v6[16] = *(_QWORD *)(v9 - 8);
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E6FAA0);
  v6[19] = swift_task_alloc();
  v10 = sub_23F616FC4();
  v6[20] = v10;
  v6[21] = *(_QWORD *)(v10 - 8);
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F572678()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t, uint64_t);
  _QWORD *v11;

  v1 = v0[18];
  v2 = v0[15];
  v3 = v0[16];
  v5 = v0[13];
  v4 = v0[14];
  v6 = v0[12];
  v8 = v0[6];
  v7 = v0[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[21] + 16))(v0[22], v0[5], v0[20]);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[24] = (uint64_t)v9;
  v9(v1, v8, v2);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v0[25] = (uint64_t)v10;
  v10(v4, v7, v6);
  v11 = (_QWORD *)swift_task_alloc();
  v0[26] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = sub_23F572740;
  return sub_23F571220(v0[19], v0[3], v0[4], v0[22], v0[18], v0[14]);
}

uint64_t sub_23F572740()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F3B1998();
  *v2 = *v1;
  *(_QWORD *)(v3 + 216) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F572790()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = v0[19];
  v1 = v0[20];
  sub_23F3C84F4(v2);
  if (v3)
  {
    v4 = v0[21];
    v5 = v0[16];
    v6 = v0[5];
    sub_23F384274(v0[13]);
    sub_23F417108(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v1);
    sub_23F3CFCB0(v2, &qword_256E6FAA0);
    v21 = 1;
  }
  else
  {
    v7 = (void (*)(uint64_t, uint64_t, uint64_t))v0[24];
    v26 = (void (*)(uint64_t, uint64_t, uint64_t))v0[25];
    v27 = v0[23];
    v8 = v0[17];
    v9 = v0[15];
    v10 = v0[12];
    v29 = v0[13];
    v30 = v0[21];
    v11 = v0[11];
    v32 = v0[16];
    v33 = v0[10];
    v12 = v0[8];
    v34 = v0[9];
    v28 = v1;
    v14 = v0[6];
    v13 = v0[7];
    v31 = v0[5];
    (*(void (**)(void))(v30 + 32))();
    sub_23F61712C();
    v7(v8, v14, v9);
    sub_23F617138();
    v26(v12, v13, v10);
    sub_23F36196C(v12, 0, 1, v10);
    sub_23F617120();
    sub_23F35D2E8(&qword_256E75C50);
    v15 = *(_QWORD *)(sub_23F617144() - 8);
    v16 = *(_QWORD *)(v15 + 72);
    v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_23F61EC90;
    v19 = v18 + v17;
    sub_23F3B1E9C(v19, *MEMORY[0x24BDCF240]);
    sub_23F3B1E9C(v19 + v16, *MEMORY[0x24BDCF250]);
    sub_23F3B1E9C(v19 + 2 * v16, *MEMORY[0x24BDCF220]);
    sub_23F3B1E9C(v19 + 3 * v16, *MEMORY[0x24BDCF230]);
    sub_23F3B1E9C(v19 + 4 * v16, *MEMORY[0x24BDCF258]);
    sub_23F3B1E9C(v19 + 5 * v16, *MEMORY[0x24BDCF260]);
    sub_23F3E3CD4();
    sub_23F6170F0();
    swift_bridgeObjectRelease();
    sub_23F3D98EC(v13, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v14, v9);
    v20 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v20(v31, v28);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v11, v34);
    v20(v27, v28);
    v21 = 0;
  }
  v22 = v0[2];
  v23 = sub_23F616D00();
  sub_23F36196C(v22, v21, 1, v23);
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  swift_task_dealloc();
  v24 = (uint64_t (*)(void))sub_23F384760();
  return v24();
}

uint64_t sub_23F572A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F3B14B8();
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  sub_23F384274(*(_QWORD *)(v0 + 104));
  sub_23F3D98EC(v5, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v1);
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666EC();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  swift_task_dealloc();
  return sub_23F3B1350(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F572B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;

  v4 = sub_23F616D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  v5 = sub_23F616BF8();
  if ((v6 & 1) == 0)
  {
    v7 = __OFSUB__(0, v5);
    result = -v5;
    if (v7)
    {
      __break(1u);
      goto LABEL_30;
    }
    sub_23F616C04();
  }
  v9 = sub_23F616CC4();
  if ((v10 & 1) != 0)
    goto LABEL_7;
  v7 = __OFSUB__(0, v9);
  result = -v9;
  if (v7)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_23F616CD0();
LABEL_7:
  v11 = sub_23F616CAC();
  if ((v12 & 1) != 0)
    goto LABEL_10;
  v7 = __OFSUB__(0, v11);
  result = -v11;
  if (v7)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_23F616CB8();
LABEL_10:
  v13 = sub_23F616C64();
  if ((v14 & 1) != 0)
    goto LABEL_13;
  v7 = __OFSUB__(0, v13);
  result = -v13;
  if (v7)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  sub_23F616C70();
LABEL_13:
  v15 = sub_23F616C40();
  if ((v16 & 1) != 0)
    goto LABEL_16;
  v7 = __OFSUB__(0, v15);
  result = -v15;
  if (v7)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  sub_23F616C4C();
LABEL_16:
  v17 = sub_23F616C10();
  if ((v18 & 1) != 0)
    goto LABEL_19;
  v7 = __OFSUB__(0, v17);
  result = -v17;
  if (v7)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  sub_23F616C1C();
LABEL_19:
  v19 = sub_23F616C94();
  if ((v20 & 1) != 0)
    goto LABEL_22;
  v7 = __OFSUB__(0, v19);
  result = -v19;
  if (v7)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  sub_23F616CA0();
LABEL_22:
  v21 = sub_23F616C7C();
  if ((v22 & 1) != 0)
    goto LABEL_25;
  v7 = __OFSUB__(0, v21);
  result = -v21;
  if (v7)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  sub_23F616C88();
LABEL_25:
  result = sub_23F616CDC();
  if ((v23 & 1) != 0)
    return result;
  v7 = __OFSUB__(0, result);
  result = -result;
  if (v7)
  {
LABEL_37:
    __break(1u);
    return result;
  }
  return sub_23F616CE8();
}

uint64_t sub_23F572CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E702A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_23F572D04(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F61BBA8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_23F617BA0();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23F616FC4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_23F617198();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[8];
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_23F6170CC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return v4;
}

uint64_t sub_23F572E34(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_23F61BBA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_23F616FC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  v9 = sub_23F617198();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[8];
  v11 = sub_23F6170CC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

_QWORD *sub_23F572EF0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F61BBA8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_23F617BA0();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23F616FC4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_23F617198();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

_QWORD *sub_23F572FF4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F61BBA8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23F616FC4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23F617198();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

_OWORD *sub_23F5730FC(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F61BBA8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23F616FC4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23F617198();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  return a1;
}

_QWORD *sub_23F5731EC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F61BBA8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23F616FC4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23F617198();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_23F5732E4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5732F0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_23F61BBA8();
    sub_23F3F9C58();
    if (v11)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      sub_23F40EBD4();
      sub_23F3F9C58();
      if (v11)
      {
        v9 = v12;
        v10 = a3[6];
      }
      else
      {
        sub_23F40EB6C();
        sub_23F3F9C58();
        if (v13)
        {
          v9 = v14;
          v10 = a3[7];
        }
        else
        {
          v9 = sub_23F38F984();
          v10 = a3[8];
        }
      }
    }
    return sub_23F36195C(a1 + v10, a2, v9);
  }
}

uint64_t sub_23F5733AC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5733B8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_23F61BBA8();
    sub_23F3F9C68();
    if (v10)
    {
      v8 = v7;
      v9 = a4[5];
    }
    else
    {
      sub_23F40EBD4();
      sub_23F3F9C68();
      if (v10)
      {
        v8 = v11;
        v9 = a4[6];
      }
      else
      {
        sub_23F40EB6C();
        sub_23F3F9C68();
        if (v12)
        {
          v8 = v13;
          v9 = a4[7];
        }
        else
        {
          v8 = sub_23F38F984();
          v9 = a4[8];
        }
      }
    }
    return sub_23F36196C(v5 + v9, a2, a2, v8);
  }
  return result;
}

uint64_t sub_23F573470()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = sub_23F61BBA8();
  if (v1 <= 0x3F)
  {
    result = sub_23F616FC4();
    if (v2 <= 0x3F)
    {
      result = sub_23F617198();
      if (v3 <= 0x3F)
      {
        result = sub_23F6170CC();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_23F573538()
{
  return swift_task_dealloc();
}

uint64_t sub_23F57356C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[21] + 16))(v0[22], v0[3] + *(int *)(v0[31] + 24), v0[20]);
}

uint64_t sub_23F5735A4()
{
  return swift_task_dealloc();
}

void sub_23F5735D8(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 - 112) = a1;
  v3 = v1[45];
  v4 = v1[43];
  *(_QWORD *)(v2 - 128) = v1[46];
  *(_QWORD *)(v2 - 120) = v4;
  *(_QWORD *)(v2 - 104) = v1[42];
  *(_QWORD *)(v2 - 96) = v3;
}

uint64_t sub_23F573610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_23F572530(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_23F57362C()
{
  return swift_allocBox();
}

void sub_23F57364C()
{
  void *v0;

}

uint64_t sub_23F57365C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a11);
}

uint64_t sub_23F573668(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 56);
}

uint64_t sub_23F57368C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 384);
}

uint64_t sub_23F5736B0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5736C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v0, v2 + *(int *)(v3 + 32), v1);
}

uint64_t sub_23F5736DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2 + *(int *)(v3 + 28), v0);
}

uint64_t sub_23F5736F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD *, uint64_t, uint64_t);

  *v1 = v3;
  return v4(v1, v0, v2);
}

uint64_t sub_23F573708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;

  return (*(uint64_t (**)(_QWORD, uint64_t))(a24 + 8))(*(_QWORD *)(v26 - 128), a26);
}

uint64_t sub_23F57371C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a21 + 8))(a23, a22);
}

uint64_t sub_23F57372C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a19 + 8))(a16, a20);
}

uint64_t sub_23F57373C()
{
  return sub_23F61CC64();
}

uint64_t sub_23F57374C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F573758@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return a2(a1, a14);
}

uint64_t sub_23F573760()
{
  uint64_t v0;

  return v0;
}

void sub_23F57376C()
{
  sub_23F3E2C5C();
}

uint64_t sub_23F573778()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t static RenderingState.clean.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_allocObject();
  v1 = sub_23F61BFEC();
  v2 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  return v0;
}

uint64_t RenderingState.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RenderingState.__deallocating_deinit()
{
  RenderingState.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RenderingState()
{
  return objc_opt_self();
}

uint64_t method lookup function for RenderingState()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_23F573858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = sub_23F35D2E8(&qword_256E6FCD8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v30 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v30 - v12);
  v14 = sub_23F35D2E8(&qword_256E7B568);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F575478(a1, (uint64_t)v16);
  if (sub_23F36195C((uint64_t)v16, 1, v5) == 1)
  {
    v17 = sub_23F6184B8();
    v18 = a2;
    v19 = 1;
  }
  else
  {
    sub_23F5754C0((uint64_t)v16, (uint64_t)v13);
    v20 = *(int *)(v5 + 48);
    v21 = &v11[v20];
    v22 = (char *)v13 + v20;
    v23 = v13[1];
    v30 = *v13;
    v24 = sub_23F6184B8();
    v31 = a2;
    v25 = *(_QWORD *)(v24 - 8);
    v32 = v2;
    v26 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v26(v21, v22, v24);
    v27 = (char *)v8 + *(int *)(v5 + 48);
    *v8 = v30;
    v8[1] = v23;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v21, v24);
    v28 = v31;
    v26((char *)v31, v27, v24);
    sub_23F617BA0();
    sub_23F3625D8((uint64_t)v8, &qword_256E6FCD8);
    sub_23F3625D8((uint64_t)v13, &qword_256E6FCD8);
    v18 = v28;
    v19 = 0;
    v17 = v24;
  }
  return sub_23F36196C(v18, v19, 1, v17);
}

void sub_23F573A58(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, _OWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  BOOL v82;
  _OWORD *v83;
  uint64_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _OWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _OWORD v116[12];
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v109 = a8;
  v110 = a7;
  v111 = a5;
  v112 = a6;
  v107 = a9;
  v108 = a3;
  sub_23F35D2E8(&qword_256E6FD18);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v103 = v14;
  sub_23F39C56C();
  v15 = sub_23F6184B8();
  v101 = *(_QWORD *)(v15 - 8);
  v102 = v15;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  v100 = v17;
  sub_23F35D2E8(&qword_256E791B0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F36285C();
  v97 = v19;
  sub_23F39C56C();
  v20 = sub_23F619E98();
  v98 = *(_QWORD *)(v20 - 8);
  v99 = v20;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F3834D0();
  v90 = v22;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F383780();
  v96 = v24;
  sub_23F35D2E8(&qword_256E6FDB8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F3B17BC();
  sub_23F35D2E8(&qword_256E70238);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F36285C();
  v104 = v27;
  sub_23F39C56C();
  v105 = sub_23F61B5D8();
  v92 = *(_QWORD *)(v105 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F3834D0();
  v89 = v29;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F383780();
  v91 = v31;
  sub_23F35D2E8(&qword_256E70EF0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v89 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for ToolPromptMap(0);
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3834D0();
  v94 = v37;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F383780();
  v95 = v39;
  sub_23F39C56C();
  v106 = type metadata accessor for ResolvableTool();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F36285C();
  v93 = v41;
  v136 = *a4;
  v42 = v136;
  v43 = *(_QWORD *)(v136 + 16);
  v115 = a2;
  v113 = a1;
  if (v43)
  {
    sub_23F617BA0();
    v44 = sub_23F3754D4(a1, a2);
    if ((v45 & 1) != 0)
    {
      sub_23F362600(*(_QWORD *)(v42 + 56) + *(_QWORD *)(v36 + 72) * v44, (uint64_t)v34, type metadata accessor for ToolPromptMap);
      v46 = 0;
    }
    else
    {
      v46 = 1;
    }
    v47 = v114;
    v48 = v108;
    sub_23F383CD0((uint64_t)v34, v46);
    swift_bridgeObjectRelease();
    if (sub_23F36195C((uint64_t)v34, 1, v35) != 1)
    {
      sub_23F57658C();
      v135 = a4[1];
      sub_23F39B968((uint64_t)&v135);
      v134 = a4[2];
      sub_23F39B968((uint64_t)&v134);
      v133 = a4[3];
      sub_23F39B968((uint64_t)&v133);
      v132 = a4[4];
      sub_23F39B968((uint64_t)&v132);
      v131 = a4[5];
      sub_23F39B968((uint64_t)&v131);
      v51 = v95;
      sub_23F36262C((uint64_t)v34, v95, type metadata accessor for ToolPromptMap);
      v52 = v96;
      sub_23F6190D0();
      v53 = sub_23F619E8C();
      v54 = sub_23F61C610();
      if (os_log_type_enabled(v53, v54))
      {
        v55 = (uint8_t *)sub_23F3EEE70();
        *(_WORD *)v55 = 0;
        _os_log_impl(&dword_23F35A000, v53, v54, "Resolving tool using prompt mapper", v55, 2u);
        sub_23F366530();
      }

      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v52, v99);
      v56 = v94;
      sub_23F362600(v51, v94, type metadata accessor for ToolPromptMap);
      v57 = v110;
      sub_23F361418(v110, (uint64_t)v116);
      v58 = v97;
      sub_23F574498(v48, v56, v116, v109, v97);
      v59 = (uint64_t)v111;
      if (v47)
      {
        sub_23F57659C();
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v57);
        sub_23F38BB88(v59);
        sub_23F3663AC(v51, type metadata accessor for ToolPromptMap);
        return;
      }
      sub_23F57659C();
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v57);
      sub_23F38BB88(v59);
      sub_23F3663AC(v51, type metadata accessor for ToolPromptMap);
      v73 = v106;
      v74 = sub_23F36195C(v58, 1, v106);
      if ((_DWORD)v74 == 1)
      {
        sub_23F576594(v74, &qword_256E791B0);
        v71 = 1;
        v72 = v107;
        goto LABEL_35;
      }
      v78 = v93;
      sub_23F36262C(v58, v93, (uint64_t (*)(_QWORD))type metadata accessor for ResolvableTool);
      v72 = v107;
LABEL_34:
      sub_23F36262C(v78, v72, (uint64_t (*)(_QWORD))type metadata accessor for ResolvableTool);
      v71 = 0;
      goto LABEL_35;
    }
  }
  else
  {
    sub_23F383CD0((uint64_t)v34, 1);
    v47 = v114;
  }
  v49 = swift_bridgeObjectRelease();
  sub_23F576594(v49, &qword_256E70EF0);
  if (!v112)
  {
    v50 = v113;
LABEL_17:
    v114 = v47;
    v61 = sub_23F36196C(v104, 1, 1, v105);
    goto LABEL_18;
  }
  swift_retain();
  v50 = v113;
  sub_23F60CD78();
  if (v47)
  {
    sub_23F576584();
    swift_release_n();
    sub_23F57658C();
    v130 = a4[1];
    sub_23F39B968((uint64_t)&v130);
    v129 = a4[2];
    sub_23F39B968((uint64_t)&v129);
    v128 = a4[3];
    sub_23F39B968((uint64_t)&v128);
    v127 = a4[4];
    sub_23F39B968((uint64_t)&v127);
    v126 = a4[5];
    sub_23F39B968((uint64_t)&v126);
    swift_bridgeObjectRelease();
LABEL_27:
    sub_23F57656C();
    return;
  }
  sub_23F384AF8();
  v60 = sub_23F61AD38();
  if (sub_23F36195C(v9, 1, v60) == 1)
  {
    sub_23F3625D8(v9, &qword_256E6FDB8);
    goto LABEL_17;
  }
  v76 = v104;
  sub_23F574E4C(v104);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v9, v60);
  v77 = v105;
  v61 = sub_23F36195C(v76, 1, v105);
  if ((_DWORD)v61 != 1)
  {
    sub_23F57658C();
    v121 = a4[1];
    sub_23F39B968((uint64_t)&v121);
    v120 = a4[2];
    sub_23F39B968((uint64_t)&v120);
    v119 = a4[3];
    sub_23F39B968((uint64_t)&v119);
    v118 = a4[4];
    sub_23F39B968((uint64_t)&v118);
    v117 = a4[5];
    sub_23F39B968((uint64_t)&v117);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 32))(v91, v76, v77);
    v79 = v90;
    sub_23F6190D0();
    v80 = sub_23F619E8C();
    v81 = sub_23F61C610();
    v82 = os_log_type_enabled(v80, v81);
    v83 = v111;
    v84 = v109;
    if (v82)
    {
      v85 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v85 = 0;
      _os_log_impl(&dword_23F35A000, v80, v81, "Resolving tool directly from the Toolbox", v85, 2u);
      sub_23F366530();
    }

    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v79, v99);
    v87 = v91;
    v86 = v92;
    v88 = v89;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16))(v89, v91, v77);
    sub_23F38F144(v83, v116);
    v78 = v93;
    sub_23F574F68(v88, v116, v84, v93);
    sub_23F57659C();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v110);
    sub_23F38BB88((uint64_t)v83);
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v87, v77);
    v73 = v106;
    v72 = v107;
    goto LABEL_34;
  }
  v114 = 0;
LABEL_18:
  sub_23F576594(v61, &qword_256E70238);
  v62 = a4[1];
  v63 = (_QWORD *)swift_allocObject();
  v63[2] = v50;
  v64 = v115;
  v63[3] = v115;
  sub_23F617BA0();
  v65 = v102;
  v63[4] = sub_23F61BFEC();
  v66 = (uint64_t)v100;
  v67 = v101;
  *v100 = v63;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v67 + 104))(v66, *MEMORY[0x24BE54948], v65);
  v68 = v103;
  sub_23F3687C4(v66, v62);
  sub_23F57658C();
  swift_bridgeObjectRelease();
  v125 = a4[2];
  sub_23F39B968((uint64_t)&v125);
  v124 = a4[3];
  sub_23F39B968((uint64_t)&v124);
  v123 = a4[4];
  sub_23F39B968((uint64_t)&v123);
  v122 = a4[5];
  sub_23F39B968((uint64_t)&v122);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v65);
  LODWORD(v62) = sub_23F36195C(v68, 1, v65);
  sub_23F3625D8(v68, &qword_256E6FD18);
  if ((_DWORD)v62 == 1)
  {
    if (qword_256E6F0A0 != -1)
      swift_once();
    v69 = v113;
    sub_23F3E2B58(v113, v64, qword_256E7B560);
    if ((v70 & 1) == 0)
    {
      sub_23F52383C();
      swift_allocError();
      *(_QWORD *)v75 = v69;
      *(_QWORD *)(v75 + 8) = v64;
      *(_BYTE *)(v75 + 16) = 0;
      swift_willThrow();
      sub_23F576584();
      sub_23F384AF8();
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease();
  sub_23F576584();
  sub_23F384AF8();
  sub_23F57656C();
  v71 = 1;
  v73 = v106;
  v72 = v107;
LABEL_35:
  sub_23F36196C(v72, v71, 1, v73);
}

void sub_23F5743F4()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F35D2E8(&qword_256E700E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F62DB90;
  *(_QWORD *)(inited + 32) = sub_23F61A804();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = sub_23F61A810();
  *(_QWORD *)(inited + 56) = v2;
  *(_QWORD *)(inited + 64) = sub_23F61A84C();
  *(_QWORD *)(inited + 72) = v3;
  *(_QWORD *)(inited + 80) = sub_23F61A840();
  *(_QWORD *)(inited + 88) = v4;
  *(_QWORD *)(inited + 96) = sub_23F61A858();
  *(_QWORD *)(inited + 104) = v5;
  *(_QWORD *)(inited + 112) = sub_23F61A7EC();
  *(_QWORD *)(inited + 120) = v6;
  *(_QWORD *)(inited + 128) = sub_23F61A7F8();
  *(_QWORD *)(inited + 136) = v7;
  *(_QWORD *)(inited + 144) = sub_23F61A81C();
  *(_QWORD *)(inited + 152) = v8;
  *(_QWORD *)(inited + 160) = sub_23F61A834();
  *(_QWORD *)(inited + 168) = v9;
  *(_QWORD *)(inited + 176) = sub_23F61A828();
  *(_QWORD *)(inited + 184) = v10;
  sub_23F3E3708(inited);
  qword_256E7B560 = v11;
}

void sub_23F574498(uint64_t a1@<X2>, uint64_t a2@<X3>, _QWORD *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (**v32)(char *, void (*)(char *, char *, uint64_t));
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  BOOL v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  void (**v89)(char *, void (*)(char *, char *, uint64_t));
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  char v100[16];
  uint64_t v101;

  v98 = a4;
  v99 = a3;
  v97 = a5;
  v7 = sub_23F619E98();
  v89 = *(void (***)(char *, void (*)(char *, char *, uint64_t)))(v7 - 8);
  v90 = (void (*)(char *, char *, uint64_t))v7;
  MEMORY[0x24BDAC7A8](v7);
  v88 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F618BB4();
  v92 = *(_QWORD *)(v9 - 8);
  v93 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v87 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v11);
  v82 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F61B5D8();
  v14 = *(_QWORD *)(v13 - 8);
  v85 = v13;
  v86 = v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v84 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v81 = (char *)&v80 - v17;
  v18 = type metadata accessor for RenderableTool();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v83 = (uint64_t)&v80 - v22;
  v23 = sub_23F35D2E8(&qword_256E7B568);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_23F35D2E8(&qword_256E6FD18);
  v26 = MEMORY[0x24BDAC7A8](v95);
  v94 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v80 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (void (**)(char *, void (*)(char *, char *, uint64_t)))((char *)&v80 - v31);
  v96 = type metadata accessor for ResolvableTool();
  MEMORY[0x24BDAC7A8](v96);
  v91 = (char *)&v80 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRelease();
  v101 = a2;
  sub_23F617BA0();
  sub_23F5752FC((uint64_t)sub_23F5752E0, (uint64_t)v100, a1);
  swift_bridgeObjectRelease();
  sub_23F37008C();
  swift_release();
  sub_23F573858((uint64_t)v25, (uint64_t)v32);
  sub_23F3625D8((uint64_t)v25, &qword_256E7B568);
  v34 = sub_23F6184B8();
  if (sub_23F36195C((uint64_t)v32, 1, v34) == 1)
  {
    swift_bridgeObjectRelease();
    sub_23F362600(a2, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
    v35 = a2;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23F3663AC((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
      v36 = v88;
      sub_23F619088();
      v37 = sub_23F619E8C();
      v38 = sub_23F61C628();
      v39 = os_log_type_enabled(v37, v38);
      v40 = v97;
      if (v39)
      {
        v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v41 = 0;
        MEMORY[0x242670B70](v41, -1, -1);
      }

      swift_release();
      v89[1](v36, v90);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v99);
      sub_23F3663AC(v35, type metadata accessor for ToolPromptMap);
      sub_23F3625D8((uint64_t)v32, &qword_256E6FD18);
      v42 = 1;
      v43 = v96;
      goto LABEL_10;
    }
    swift_release();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v99);
    sub_23F3625D8((uint64_t)v32, &qword_256E6FD18);
    v44 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
    v45 = v87;
    v46 = v21;
    v47 = v93;
    v44(v87, v46, v93);
    v48 = (uint64_t)v91;
    v44(v91, v45, v47);
LABEL_9:
    v43 = v96;
    v40 = v97;
    v49 = type metadata accessor for ToolPromptMap(0);
    *(_QWORD *)(v48 + *(int *)(v43 + 20)) = *(_QWORD *)(v35 + *(int *)(v49 + 20));
    v50 = *(_QWORD *)(v35 + *(int *)(v49 + 24));
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F3663AC(v35, type metadata accessor for ToolPromptMap);
    *(_QWORD *)(v48 + *(int *)(v43 + 24)) = v50;
    sub_23F36262C(v48, v40, (uint64_t (*)(_QWORD))type metadata accessor for ResolvableTool);
    v42 = 0;
LABEL_10:
    sub_23F36196C(v40, v42, 1, v43);
    return;
  }
  sub_23F3687AC(7368801, 0xE300000000000000, a1);
  if (sub_23F36195C((uint64_t)v30, 1, v34) == 1)
  {
    sub_23F3625D8((uint64_t)v30, &qword_256E6FD18);
    v35 = a2;
LABEL_26:
    sub_23F3687AC(7368801, 0xE300000000000000, a1);
    swift_bridgeObjectRelease();
    v71 = sub_23F61C16C();
    v73 = v72;
    sub_23F52383C();
    swift_allocError();
    *(_QWORD *)v74 = v71;
    v75 = 2;
    goto LABEL_27;
  }
  v51 = *(_QWORD *)(v34 - 8);
  v35 = a2;
  if ((*(unsigned int (**)(char *, uint64_t))(v51 + 88))(v30, v34) != *MEMORY[0x24BE549A0])
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v30, v34);
    goto LABEL_26;
  }
  (*(void (**)(char *, uint64_t))(v51 + 96))(v30, v34);
  v52 = *(_QWORD *)v30;
  if (*(_BYTE *)(*(_QWORD *)v30 + 32) != 3)
  {
    swift_release();
    goto LABEL_26;
  }
  v89 = v32;
  v53 = *(_QWORD *)(v52 + 16);
  v54 = *(_QWORD *)(v52 + 24);
  sub_23F617BA0();
  swift_release();
  v55 = v83;
  sub_23F362600(a2, v83, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_23F3D7A48(v53, v54, 3);
    sub_23F3663AC(v55, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
    v32 = v89;
    goto LABEL_26;
  }
  v56 = *(char **)(v55 + *(int *)(sub_23F35D2E8(&qword_256E708E0) + 48));
  v57 = sub_23F61B4F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v55, v57);
  v58 = *((_QWORD *)v56 + 2);
  v80 = a1;
  if (v58)
  {
    v59 = &v56[(*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80)];
    v60 = *(_QWORD *)(v86 + 72);
    v90 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
    v88 = v56;
    v61 = v60;
    sub_23F617BA0();
    v62 = v84;
    v63 = v85;
    while (1)
    {
      v90(v62, v59, v63);
      sub_23F35EA9C(v99, v99[3]);
      sub_23F3A2750();
      if (v65 == v53 && v54 == v64)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      v67 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      if ((v67 & 1) != 0)
        break;
      v63 = v85;
      v62 = v84;
      (*(void (**)(char *, uint64_t))(v86 + 8))(v84, v85);
      v59 += v61;
      if (!--v58)
      {
        swift_bridgeObjectRelease();
        v68 = 1;
        v69 = v63;
        v35 = a2;
        v70 = (uint64_t)v82;
        goto LABEL_32;
      }
    }
    v63 = v85;
LABEL_31:
    swift_bridgeObjectRelease();
    v70 = (uint64_t)v82;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v82, v84, v63);
    v68 = 0;
    v69 = v63;
    v35 = a2;
  }
  else
  {
    v68 = 1;
    v70 = (uint64_t)v82;
    v69 = v85;
  }
LABEL_32:
  sub_23F36196C(v70, v68, 1, v69);
  sub_23F3D7A48(v53, v54, 3);
  swift_bridgeObjectRelease();
  if (sub_23F36195C(v70, 1, v69) != 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v99);
    sub_23F3625D8((uint64_t)v89, &qword_256E6FD18);
    v78 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 32);
    v79 = v81;
    v78(v81, v70, v69);
    v48 = (uint64_t)v91;
    v78(v91, (uint64_t)v79, v69);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v92 + 104))(v48, *MEMORY[0x24BE57550], v93);
    goto LABEL_9;
  }
  sub_23F3625D8(v70, &qword_256E70238);
  sub_23F3687AC(7368801, 0xE300000000000000, v80);
  swift_bridgeObjectRelease();
  v76 = sub_23F61C16C();
  v73 = v77;
  sub_23F52383C();
  swift_allocError();
  *(_QWORD *)v74 = v76;
  v75 = 1;
  v32 = v89;
LABEL_27:
  *(_QWORD *)(v74 + 8) = v73;
  *(_BYTE *)(v74 + 16) = v75;
  swift_willThrow();
  swift_release();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v99);
  sub_23F3663AC(v35, type metadata accessor for ToolPromptMap);
  sub_23F3625D8((uint64_t)v32, &qword_256E6FD18);
}

uint64_t sub_23F574E4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = sub_23F61AD38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == *MEMORY[0x24BE56040])
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    v8 = sub_23F61B5D8();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, v7, v8);
    return sub_23F36196C(a1, 0, 1, v8);
  }
  else
  {
    v10 = sub_23F61B5D8();
    sub_23F36196C(a1, 1, 1, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_23F574F68@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  void (*v42)(uint64_t, _QWORD, uint64_t);
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[3];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;

  type metadata accessor for RenderableTool();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3B17BC();
  v9 = a2[8];
  v10 = a2[9];
  sub_23F35EA9C(a2 + 5, v9);
  v11 = sub_23F61B5D8();
  v45 = *(_QWORD *)(v11 - 8);
  v47 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v4, a1, v11);
  v12 = *MEMORY[0x24BE57550];
  v13 = sub_23F55D9C0();
  HIDWORD(v43) = v12;
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104);
  v41(v4, v12, v13);
  swift_storeEnumTagMultiPayload();
  sub_23F510924();
  sub_23F5156E0(v14, v15, v16, v17, v18, v19, v20, v21, v32, v33, v35, v37, v39, (uint64_t)v41, v43, v45, v47, a4, v51,
    v52[0]);
  v23 = v22;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(v52, v4, v23, a3, v9, v10);
  swift_release();
  swift_release();
  sub_23F3663AC(v4, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
  v38 = v52[1];
  v40 = v52[0];
  v24 = v53;
  v25 = v55;
  v34 = v54;
  v36 = v52[2];
  v26 = v56;
  v27 = v57;
  v28 = v58;
  v29 = v59;
  if ((v58 & 1) != 0 || !v53)
  {
    swift_bridgeObjectRelease();
    v30 = MEMORY[0x24BEE4B00];
  }
  else
  {
    sub_23F617BA0();
    v30 = v24;
  }
  sub_23F38BB88((uint64_t)a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v50, v48, v11);
  v42(v50, v44, v13);
  sub_23F617BA0();
  sub_23F39BA98(v40, v38, v36, v24, v34, v25, v26, v27, v28);
  swift_bridgeObjectRelease();
  result = type metadata accessor for ResolvableTool();
  *(_QWORD *)(v50 + *(int *)(result + 20)) = v29;
  *(_QWORD *)(v50 + *(int *)(result + 24)) = v30;
  return result;
}

uint64_t sub_23F575188(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v6 = sub_23F35D2E8(&qword_256E6FCD8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *a1;
  v10 = a1[1];
  *v9 = v11;
  v9[1] = v10;
  v12 = (char *)v9 + *(int *)(v7 + 48);
  v13 = sub_23F6184B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, a2, v13);
  type metadata accessor for ToolPromptMap(0);
  sub_23F617BA0();
  LOBYTE(a3) = sub_23F5C3444(v11, v10, a3);
  sub_23F3625D8((uint64_t)v9, &qword_256E6FCD8);
  return a3 & 1;
}

uint64_t type metadata accessor for ResolvableTool()
{
  uint64_t result;

  result = qword_256E7B5C8;
  if (!qword_256E7B5C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F5752B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F5752E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F575188(a1, a2, *(_QWORD *)(v2 + 16)) & 1;
}

uint64_t sub_23F5752FC(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(_QWORD *, char *);
  char v7;
  unint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  unint64_t *v11;
  _QWORD v13[2];

  v6 = (uint64_t (*)(_QWORD *, char *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a3 + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v13 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_23F51394C(0, v8, v9);
    v10 = sub_23F575508(v9, v8, a3, v6);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (unint64_t *)swift_slowAlloc();
    sub_23F51394C(0, v8, v11);
    a2 = sub_23F575508(v11, v8, a3, v6);
    MEMORY[0x242670B70](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_23F575478(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E7B568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5754C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FCD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F575508(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, char *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t (*v31)(_QWORD *, char *);
  _QWORD v32[2];
  _QWORD *v33;

  v31 = a4;
  v26 = a2;
  v27 = a1;
  v6 = sub_23F6184B8();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v33 = (_QWORD *)a3;
  v12 = *(_QWORD *)(a3 + 64);
  v28 = 0;
  v29 = a3 + 64;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v30 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    v16 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v17 = v16 | (v11 << 6);
LABEL_17:
    v21 = v33[7];
    v22 = (_QWORD *)(v33[6] + 16 * v17);
    v23 = v22[1];
    v32[0] = *v22;
    v32[1] = v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v10, v21 + *(_QWORD *)(v7 + 72) * v17, v6);
    sub_23F617BA0();
    v24 = v31(v32, v10);
    if (v4)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      return swift_bridgeObjectRelease();
    }
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    result = swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
    {
      *(unint64_t *)((char *)v27 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = __OFADD__(v28++, 1);
      if (v18)
        goto LABEL_30;
    }
  }
  v18 = __OFADD__(v11++, 1);
  if (v18)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v30)
    return sub_23F575B0C(v27, v26, v28, v33);
  v19 = *(_QWORD *)(v29 + 8 * v11);
  if (v19)
  {
LABEL_16:
    v15 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v11 << 6);
    goto LABEL_17;
  }
  v20 = v11 + 1;
  if (v11 + 1 >= v30)
    return sub_23F575B0C(v27, v26, v28, v33);
  v19 = *(_QWORD *)(v29 + 8 * v20);
  if (v19)
    goto LABEL_15;
  v20 = v11 + 2;
  if (v11 + 2 >= v30)
    return sub_23F575B0C(v27, v26, v28, v33);
  v19 = *(_QWORD *)(v29 + 8 * v20);
  if (v19)
    goto LABEL_15;
  v20 = v11 + 3;
  if (v11 + 3 >= v30)
    return sub_23F575B0C(v27, v26, v28, v33);
  v19 = *(_QWORD *)(v29 + 8 * v20);
  if (v19)
  {
LABEL_15:
    v11 = v20;
    goto LABEL_16;
  }
  while (1)
  {
    v11 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v11 >= v30)
      return sub_23F575B0C(v27, v26, v28, v33);
    v19 = *(_QWORD *)(v29 + 8 * v11);
    ++v20;
    if (v19)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_23F575780(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  void (*v30)(uint64_t, uint64_t, uint64_t);
  unint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v51 = sub_23F61B404();
  v45 = *(_QWORD *)(v51 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3834D0();
  v50 = v9;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383780();
  v44 = v11;
  sub_23F39C56C();
  v12 = sub_23F61A1D4();
  v43 = *(_QWORD *)(v12 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3834D0();
  v49 = v14;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F383780();
  v42 = v16;
  if (!a3)
    return;
  if (a4[2] == a3)
  {
    swift_retain();
    return;
  }
  sub_23F35D2E8(&qword_256E78FB0);
  v17 = sub_23F61CA90();
  v38 = a1;
  v39 = a2;
  if (a2 < 1)
    v18 = 0;
  else
    v18 = *a1;
  v19 = 0;
  v20 = v17 + 64;
  v40 = a4;
  v41 = v17;
  while (1)
  {
    v48 = a3;
    if (v18)
    {
      v46 = (v18 - 1) & v18;
      v47 = v19;
      v21 = __clz(__rbit64(v18)) | (v19 << 6);
      goto LABEL_25;
    }
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
      goto LABEL_39;
    if (v22 >= v39)
      return;
    v23 = v38[v22];
    v24 = v19 + 1;
    if (!v23)
    {
      v24 = v19 + 2;
      if (v19 + 2 >= v39)
        return;
      v23 = v38[v24];
      if (!v23)
      {
        v24 = v19 + 3;
        if (v19 + 3 >= v39)
          return;
        v23 = v38[v24];
        if (!v23)
          break;
      }
    }
LABEL_24:
    v46 = (v23 - 1) & v23;
    v47 = v24;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_25:
    v26 = *(_QWORD *)(v43 + 72);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v43 + 16))(v42, a4[6] + v26 * v21, v12);
    v27 = a4[7];
    v28 = *(_QWORD *)(v45 + 72);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v45 + 16))(v44, v27 + v28 * v21, v51);
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32);
    v29(v49, v42, v12);
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32);
    v30(v50, v44, v51);
    sub_23F5760F8();
    v31 = sub_23F61C040() & ~(-1 << *(_BYTE *)(v41 + 32));
    if (((-1 << v31) & ~*(_QWORD *)(v20 + 8 * (v31 >> 6))) == 0)
    {
      sub_23F482220();
      while (++v34 != v35 || (v33 & 1) == 0)
      {
        v36 = v34 == v35;
        if (v34 == v35)
          v34 = 0;
        v33 |= v36;
        v37 = *(_QWORD *)(v20 + 8 * v34);
        if (v37 != -1)
        {
          v32 = __clz(__rbit64(~v37)) + (v34 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v32 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v20 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v20 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    v29(*(_QWORD *)(v41 + 48) + v32 * v26, v49, v12);
    v30(*(_QWORD *)(v41 + 56) + v32 * v28, v50, v51);
    ++*(_QWORD *)(v41 + 16);
    --a3;
    if (__OFSUB__(v48, 1))
      goto LABEL_38;
    a4 = v40;
    v18 = v46;
    v19 = v47;
    if (v48 == 1)
      return;
  }
  v25 = v19 + 4;
  if (v19 + 4 >= v39)
    return;
  v23 = v38[v25];
  if (v23)
  {
    v24 = v19 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v39)
      return;
    v23 = v38[v24];
    ++v25;
    if (v23)
      goto LABEL_24;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_23F575B0C(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;

  v8 = sub_23F6184B8();
  v49 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v43 - v12;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  v47 = v11;
  sub_23F35D2E8(&qword_256E78F90);
  result = sub_23F61CA90();
  v14 = result;
  v44 = a1;
  v45 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  v18 = v47;
  v19 = v48;
  v46 = a4;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v50 = v16;
      v21 = v20 | (v16 << 6);
    }
    else
    {
      v22 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v22 >= v45)
        return v14;
      v23 = v44[v22];
      v24 = v16 + 1;
      if (!v23)
      {
        v24 = v16 + 2;
        if (v16 + 2 >= v45)
          return v14;
        v23 = v44[v24];
        if (!v23)
        {
          v24 = v16 + 3;
          if (v16 + 3 >= v45)
            return v14;
          v23 = v44[v24];
          if (!v23)
          {
            v25 = v16 + 4;
            if (v16 + 4 >= v45)
              return v14;
            v23 = v44[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v24 >= v45)
                  return v14;
                v23 = v44[v24];
                ++v25;
                if (v23)
                  goto LABEL_24;
              }
            }
            v24 = v16 + 4;
          }
        }
      }
LABEL_24:
      v15 = (v23 - 1) & v23;
      v50 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = a4[7];
    v27 = (uint64_t *)(a4[6] + 16 * v21);
    v28 = *v27;
    v29 = v27[1];
    v30 = v49;
    v31 = *(_QWORD *)(v49 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v19, v26 + v31 * v21, v18);
    v32 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v32(v51, v19, v18);
    sub_23F61CD30();
    sub_23F617BA0();
    sub_23F61C22C();
    result = sub_23F61CD60();
    v33 = -1 << *(_BYTE *)(v14 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) == 0)
      break;
    v36 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    v18 = v47;
LABEL_34:
    *(_QWORD *)(v17 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    v41 = (_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v36);
    *v41 = v28;
    v41[1] = v29;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v32)(*(_QWORD *)(v14 + 56) + v36 * v31, v51, v18);
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      goto LABEL_39;
    a4 = v46;
    v16 = v50;
    if (!a3)
      return v14;
  }
  v37 = 0;
  v38 = (unint64_t)(63 - v33) >> 6;
  v18 = v47;
  while (++v35 != v38 || (v37 & 1) == 0)
  {
    v39 = v35 == v38;
    if (v35 == v38)
      v35 = 0;
    v37 |= v39;
    v40 = *(_QWORD *)(v17 + 8 * v35);
    if (v40 != -1)
    {
      v36 = __clz(__rbit64(~v40)) + (v35 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_23F575E4C(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  _OWORD v31[2];
  _OWORD v32[2];

  if (!a3)
    return;
  v5 = a3;
  if (a4[2] == a3)
  {
    swift_retain();
    return;
  }
  sub_23F35D2E8(&qword_256E78F88);
  v7 = sub_23F61CA90();
  v8 = v7;
  v29 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = v7 + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_25;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v29)
      return;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v29)
        return;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v29)
          return;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_24:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_25:
    v17 = (uint64_t *)(a4[6] + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    sub_23F382B64(a4[7] + 32 * v13, (uint64_t)v32);
    sub_23F382A70(v32, v31);
    sub_23F61CD30();
    sub_23F617BA0();
    sub_23F61C22C();
    v20 = sub_23F61CD60() & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) == 0)
    {
      sub_23F482220();
      while (++v23 != v24 || (v22 & 1) == 0)
      {
        v25 = v23 == v24;
        if (v23 == v24)
          v23 = 0;
        v22 |= v25;
        v26 = *(_QWORD *)(v11 + 8 * v23);
        if (v26 != -1)
        {
          v21 = __clz(__rbit64(~v26)) + (v23 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v21 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v27 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    *v27 = v19;
    v27[1] = v18;
    sub_23F382A70(v31, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v21));
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_38;
    if (!v5)
      return;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
    return;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v29)
      return;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_24;
  }
LABEL_40:
  __break(1u);
}

unint64_t sub_23F5760F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E6FA98;
  if (!qword_256E6FA98)
  {
    v1 = sub_23F61A1D4();
    result = MEMORY[0x242670A44](MEMORY[0x24BE55080], v1);
    atomic_store(result, (unint64_t *)&qword_256E6FA98);
  }
  return result;
}

uint64_t *sub_23F576138(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F618BB4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    sub_23F617BA0();
    sub_23F617BA0();
  }
  return a1;
}

uint64_t sub_23F5761D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F618BB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F576224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23F618BB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F576294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F618BB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F57631C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23F618BB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_23F576380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F618BB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F5763F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F576404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F55D9C0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F576478()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F576484(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23F55D9C0();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23F5764F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F618BB4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F57656C()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(*(_QWORD *)(v0 + 168));
  return sub_23F38BB88(*(_QWORD *)(v0 + 176));
}

uint64_t sub_23F576584()
{
  return swift_release();
}

uint64_t sub_23F57658C()
{
  uint64_t v0;

  return sub_23F39B968(v0 - 72);
}

void sub_23F576594(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F3625D8(v2, a2);
}

uint64_t sub_23F57659C()
{
  return swift_release();
}

void defaultFilePath.getter()
{
  sub_23F3B1450();
  sub_23F617BA0();
  sub_23F38A084();
}

void defaultFilePath.setter(uint64_t a1, uint64_t a2)
{
  sub_23F3B1450();
  qword_256E7B608 = a1;
  qword_256E7B610 = a2;
  swift_bridgeObjectRelease();
  sub_23F383F28();
}

void defaultFilePath.modify()
{
  sub_23F3B1450();
  sub_23F362928();
}

void __swiftcall ResponseCatalogIdentifiers.init(appBundleID:intentID:actionType:)(IntelligenceFlowPlannerRuntime::ResponseCatalogIdentifiers_optional *__return_ptr retstr, Swift::String_optional appBundleID, Swift::String_optional intentID, Swift::String_optional actionType)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  os_log_type_t v23;
  _WORD *v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  _WORD *v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  _WORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  object = actionType.value._object;
  countAndFlagsBits = actionType.value._countAndFlagsBits;
  v6 = intentID.value._object;
  v7 = intentID.value._countAndFlagsBits;
  v8 = appBundleID.value._object;
  v9 = appBundleID.value._countAndFlagsBits;
  v11 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F362AAC();
  v14 = v12 - v13;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v35 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v35 - v20;
  if (!v8)
  {
    v7 = v19;
    sub_23F38432C();
    sub_23F362984();
    sub_23F619124();
    v22 = v21;
    sub_23F619E8C();
    v23 = sub_23F3F0EEC();
    if (sub_23F384458(v23))
    {
      v24 = (_WORD *)sub_23F3EEE70();
      sub_23F57B9B0(v24);
      sub_23F57B838(&dword_23F35A000, v25, v26, "ResponseCatalog identifier missing: appBundleID");
      goto LABEL_12;
    }
    v14 = (uint64_t)v21;
    goto LABEL_14;
  }
  if (!v6)
  {
    sub_23F57B944();
    sub_23F362984();
    sub_23F619124();
    v22 = v18;
    sub_23F619E8C();
    v27 = sub_23F3F0EEC();
    if (sub_23F384458(v27))
    {
      v28 = (_WORD *)sub_23F3EEE70();
      sub_23F57B9B0(v28);
      sub_23F57B838(&dword_23F35A000, v29, v30, "ResponseCatalog identifier missing: intentID");
      goto LABEL_12;
    }
    v14 = (uint64_t)v18;
LABEL_14:

    sub_23F3B1CC8(v14, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    retstr->value.intentID = 0u;
    retstr->value.actionType = 0u;
    retstr->value.appBundleID = 0u;
    goto LABEL_15;
  }
  if (!object)
  {
    sub_23F57B944();
    sub_23F38432C();
    sub_23F619124();
    v22 = (void *)v14;
    sub_23F619E8C();
    v31 = sub_23F3F0EEC();
    if (sub_23F384458(v31))
    {
      v32 = (_WORD *)sub_23F3EEE70();
      sub_23F57B9B0(v32);
      sub_23F57B838(&dword_23F35A000, v33, v34, "ResponseCatalog identifier missing: actionType");
LABEL_12:
      sub_23F366530();
    }
    goto LABEL_14;
  }
  retstr->value.appBundleID._countAndFlagsBits = v9;
  retstr->value.appBundleID._object = v8;
  retstr->value.intentID._countAndFlagsBits = v7;
  retstr->value.intentID._object = v6;
  retstr->value.actionType._countAndFlagsBits = countAndFlagsBits;
  retstr->value.actionType._object = object;
LABEL_15:
  sub_23F362948();
}

uint64_t sub_23F576838()
{
  unint64_t v0;

  v0 = sub_23F61CAB4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_23F576884(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F5768B8 + 4 * byte_23F62DBC0[a1]))(0x4449656C646E7562, 0xE800000000000000);
}

uint64_t sub_23F5768B8()
{
  return 0x4449746E65746E69;
}

uint64_t sub_23F5768CC()
{
  return 0x65736E6F70736572;
}

uint64_t sub_23F57690C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F576940 + 4 * byte_23F62DBC5[a1]))(0x4449656C646E7562, 0xE800000000000000);
}

uint64_t sub_23F576940()
{
  return 0x4449746E65746E69;
}

uint64_t sub_23F576954()
{
  return 0x65736E6F70736572;
}

void sub_23F576994(char *a1)
{
  sub_23F4898CC(*a1);
}

void sub_23F5769A0()
{
  unsigned __int8 *v0;

  sub_23F3F61B8(*v0);
}

void sub_23F5769A8(uint64_t a1)
{
  char *v1;

  sub_23F4E6EE0(a1, *v1);
}

void sub_23F5769B0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_23F3F65D4(a1, *v1);
}

uint64_t sub_23F5769B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F576838();
  *a1 = result;
  return result;
}

void sub_23F5769E4(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_23F576884(*v1);
  a1[1] = v3;
  sub_23F362928();
}

uint64_t sub_23F576A08()
{
  unsigned __int8 *v0;

  return sub_23F57690C(*v0);
}

uint64_t sub_23F576A10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F576880();
  *a1 = result;
  return result;
}

uint64_t sub_23F576A34()
{
  sub_23F57A4F0();
  return sub_23F61CDC0();
}

uint64_t sub_23F576A5C()
{
  sub_23F57A4F0();
  return sub_23F61CDCC();
}

void sub_23F576A84()
{
  sub_23F3B1450();
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F38A084();
}

void sub_23F576AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F57B974();
  sub_23F3B1450();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  swift_bridgeObjectRelease();
  sub_23F383F28();
}

void sub_23F576AF4()
{
  sub_23F3B1450();
  sub_23F362928();
}

void sub_23F576B28()
{
  sub_23F3B1450();
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F38A084();
}

void sub_23F576B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F57B974();
  sub_23F3B1450();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  swift_bridgeObjectRelease();
  sub_23F383F28();
}

void sub_23F576B98()
{
  sub_23F3B1450();
  sub_23F362928();
}

void sub_23F576BCC()
{
  sub_23F57B8D4();
  sub_23F57BA24();
  sub_23F362B80();
}

void sub_23F576BEC()
{
  sub_23F3B1450();
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F38A084();
}

void sub_23F576C20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F57B974();
  sub_23F3B1450();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  swift_bridgeObjectRelease();
  sub_23F383F28();
}

void sub_23F576C5C()
{
  sub_23F3B1450();
  sub_23F362928();
}

void sub_23F576C90()
{
  sub_23F3B1450();
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F38A084();
}

void sub_23F576CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F57B974();
  sub_23F3B1450();
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 72) = v0;
  swift_bridgeObjectRelease();
  sub_23F383F28();
}

void sub_23F576D00()
{
  sub_23F3B1450();
  sub_23F362928();
}

void sub_23F576D34()
{
  sub_23F3B1450();
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F38A084();
}

void sub_23F576D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F57B974();
  sub_23F3B1450();
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v0;
  swift_bridgeObjectRelease();
  sub_23F383F28();
}

void sub_23F576DA4()
{
  sub_23F3B1450();
  sub_23F362928();
}

uint64_t CatalogEntry.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  CatalogEntry.init(from:)(a1);
  return v2;
}

void CatalogEntry.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v3 = v1;
  v5 = sub_23F35D2E8(&qword_256E7B620);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B17A4();
  v17 = v3;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  v16 = a1;
  sub_23F35EA9C(a1, a1[3]);
  sub_23F57A4F0();
  sub_23F61CD84();
  if (v2)
  {
    v12 = (uint64_t)a1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for CatalogEntry();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v3 + 16) = sub_23F57B8F4();
    *(_QWORD *)(v3 + 24) = v6;
    sub_23F57B964(1);
    *(_QWORD *)(v3 + 32) = sub_23F57B8F4();
    *(_QWORD *)(v3 + 40) = v7;
    sub_23F57B964(2);
    *(_QWORD *)(v3 + 48) = sub_23F61CB14();
    *(_QWORD *)(v3 + 56) = v8;
    sub_23F57B964(3);
    v9 = sub_23F57B8F4();
    v11 = v10;
    sub_23F3B1450();
    *(_QWORD *)(v3 + 64) = v9;
    *(_QWORD *)(v3 + 72) = v11;
    swift_bridgeObjectRelease();
    v12 = (uint64_t)v16;
    v13 = sub_23F57B8F4();
    v15 = v14;
    sub_23F57B954();
    sub_23F3B1450();
    *(_QWORD *)(v17 + 80) = v13;
    *(_QWORD *)(v17 + 88) = v15;
    swift_bridgeObjectRelease();
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v12);
  sub_23F362870();
}

uint64_t sub_23F5770A4(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = sub_23F35D2E8(&qword_256E7B630);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B17A4();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F57A4F0();
  sub_23F61CD90();
  sub_23F3B1450();
  v5 = v2[2];
  sub_23F384324();
  sub_23F57B7F8();
  if (v5)
    goto LABEL_4;
  sub_23F38432C();
  sub_23F3B1450();
  v6 = v2[4];
  sub_23F384324();
  sub_23F57B7F8();
  if (v6 || (sub_23F38432C(), sub_23F3B1450(), v7 = v2[6], sub_23F384324(), sub_23F57B7F8(), v7))
  {
LABEL_4:
    sub_23F57B90C();
    return sub_23F38432C();
  }
  else
  {
    sub_23F38432C();
    sub_23F3B1450();
    sub_23F35D2E8(&qword_256E70FD8);
    sub_23F57A54C();
    sub_23F57B89C();
    sub_23F3B1450();
    sub_23F57B89C();
    return sub_23F57B90C();
  }
}

uint64_t CatalogEntry.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CatalogEntry.__deallocating_deinit()
{
  CatalogEntry.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23F5772CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = CatalogEntry.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23F5772F4(_QWORD *a1)
{
  return sub_23F5770A4(a1);
}

uint64_t sub_23F577314()
{
  MEMORY[0x242670A44](&protocol conformance descriptor for CatalogEntry);
  return sub_23F61739C();
}

uint64_t sub_23F577384()
{
  return sub_23F6173FC();
}

uint64_t sub_23F577398()
{
  return sub_23F617408();
}

uint64_t sub_23F5773AC()
{
  return sub_23F6173D8();
}

uint64_t sub_23F5773C0()
{
  return sub_23F6173E4() & 1;
}

uint64_t sub_23F5773D8()
{
  return sub_23F6173F0() & 1;
}

uint64_t sub_23F5773F0()
{
  MEMORY[0x242670A44](&protocol conformance descriptor for CatalogEntry);
  return sub_23F617354();
}

void sub_23F577454()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  swift_beginAccess();
  v1 = qword_256E7B608;
  v0 = qword_256E7B610;
  objc_allocWithZone((Class)type metadata accessor for ResponseCatalog(0));
  sub_23F617BA0();
  v2 = sub_23F57BA30(v1, v0);
  sub_23F57BE28();

  qword_256E7B618 = (uint64_t)v2;
}

id static ResponseCatalog.current.getter()
{
  if (qword_256E6F0A8 != -1)
    swift_once();
  return (id)qword_256E7B618;
}

uint64_t sub_23F57751C()
{
  uint64_t v0;

  sub_23F35D2E8(&qword_256E700E8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23F61EBC0;
  *(_QWORD *)(v0 + 32) = 0xD0000000000000BFLL;
  *(_QWORD *)(v0 + 40) = 0x800000023F639F50;
  *(_QWORD *)(v0 + 48) = 0xD00000000000006FLL;
  *(_QWORD *)(v0 + 56) = 0x800000023F63A010;
  sub_23F61C8E0();
  swift_bridgeObjectRelease();
  sub_23F61CC1C();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 64) = 0xD000000000000014;
  *(_QWORD *)(v0 + 72) = 0x800000023F63A080;
  return v0;
}

uint64_t sub_23F577618(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_databaseQueue))
  {
    v4 = MEMORY[0x24BDAC7A8](result);
    v5 = v2;
    MEMORY[0x24BDAC7A8](v4);
    sub_23F57B9D8((uint64_t)&v3);
    swift_retain();
    sub_23F35D2E8(&qword_256E7B648);
    sub_23F61730C();
    return sub_23F57B9C4();
  }
  return result;
}

uint64_t sub_23F5776F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v5;
  unint64_t v6;

  v0 = sub_23F6173B4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = 0xD000000000000055;
  v6 = 0x800000023F63A380;
  sub_23F61C280();
  v5 = 0x20545245534E49;
  v6 = 0xE700000000000000;
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F6173A8();
  sub_23F617420();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_bridgeObjectRelease();
}

void sub_23F577810(void (*a1)(void)@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  a1();
  if (!v2)
    *a2 = 0;
  sub_23F362928();
}

void sub_23F577838(void (**a1)(NSObject *, uint64_t))
{
  uint64_t v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(NSObject *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  void (*v26)(char *, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  NSObject *v29;
  id v30;
  id v31;
  os_log_type_t v32;
  uint8_t *v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  _QWORD v37[2];
  NSObject *v38;
  uint64_t v39;
  void (*v40)(NSObject *, uint64_t);
  void (*v41)(NSObject *, uint64_t);
  void (*v42)(NSObject *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = sub_23F619E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F362AAC();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = ((char *)v37 - v8);
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v37 - v11;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_databaseQueue);
  if (v13)
  {
    v38 = v10;
    v39 = v5;
    v43 = v13;
    v44 = v4;
    v14 = *a1;
    v15 = (uint64_t)a1[1];
    v16 = (uint64_t)a1[3];
    v41 = a1[2];
    v42 = v14;
    v17 = (uint64_t)a1[5];
    v40 = a1[4];
    swift_retain();
    sub_23F617BA0();
    sub_23F3B1EA4();
    sub_23F384324();
    sub_23F619124();
    sub_23F3E0254();
    sub_23F3E0254();
    sub_23F3E0254();
    v18 = sub_23F619E8C();
    v19 = sub_23F61C61C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = sub_23F366668();
      v37[0] = sub_23F366668();
      v46 = v37[0];
      *(_DWORD *)v20 = 136315650;
      sub_23F617BA0();
      sub_23F37AE00((uint64_t)v42, v15, &v46);
      v45 = v21;
      v37[1] = v2;
      sub_23F57B8FC();
      sub_23F3E01D0();
      *(_WORD *)(v20 + 12) = 2080;
      sub_23F3B1EA4();
      sub_23F37AE00((uint64_t)v41, v16, &v46);
      v45 = v22;
      sub_23F57B8FC();
      sub_23F3E01D0();
      *(_WORD *)(v20 + 22) = 2080;
      sub_23F384324();
      sub_23F37AE00((uint64_t)v40, v17, &v46);
      v45 = v23;
      sub_23F61C790();
      sub_23F3E01D0();
      _os_log_impl(&dword_23F35A000, v18, v19, "ResponseCatalog: Querying for: appBundleID=%s, intentID=%s, actionType=%s", (uint8_t *)v20, 0x20u);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F384A80();
    sub_23F384A80();
    sub_23F384A80();
    v26 = *(void (**)(char *, uint64_t))(v39 + 8);
    v26(v12, v44);
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = v42;
    v27[3] = v15;
    v27[4] = v41;
    v27[5] = v16;
    v27[6] = v40;
    v27[7] = v17;
    v28 = MEMORY[0x24BDAC7A8](v27);
    v37[-2] = sub_23F57A5DC;
    v37[-1] = v28;
    sub_23F35D2E8(&qword_256E7B640);
    sub_23F6172E8();
    if (v2)
    {
      v42 = (void (*)(NSObject *, uint64_t))v26;
      v29 = v38;
      sub_23F619124();
      v30 = v2;
      v31 = v2;
      sub_23F619E8C();
      v32 = sub_23F3F0EEC();
      if (sub_23F366874(v32))
      {
        v33 = (uint8_t *)sub_23F366668();
        v34 = (_QWORD *)sub_23F366668();
        *(_DWORD *)v33 = 138412290;
        v35 = v2;
        v36 = _swift_stdlib_bridgeErrorToNSError();
        v46 = v36;
        sub_23F61C790();
        *v34 = v36;
        sub_23F57B9BC();
        sub_23F57B9BC();
        _os_log_impl(&dword_23F35A000, v29, (os_log_type_t)v26, "Siri response cache read failed with: %@", v33, 0xCu);
        sub_23F35D2E8(&qword_256E6FAB0);
        swift_arrayDestroy();
        sub_23F366530();
      }
      swift_release();
      sub_23F41C618();
      sub_23F41C618();
      sub_23F41C618();

      v42(v29, v44);
      swift_release();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  else
  {
    sub_23F619124();
    sub_23F619E8C();
    v24 = sub_23F3F0EEC();
    if (sub_23F366874(v24))
    {
      v25 = (uint8_t *)sub_23F366668();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_23F35A000, v9, (os_log_type_t)a1, "ResponseCatalog: Unable to access database", v25, 2u);
      sub_23F366530();
    }

    (*(void (**)(NSObject *, uint64_t))(v5 + 8))(v9, v4);
  }
  sub_23F362870();
}

uint64_t sub_23F577D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[2];
  uint64_t v48;
  uint64_t v49;

  v44 = a1;
  v42 = sub_23F619E98();
  v39 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v41 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_23F6173B4();
  v43 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v47[0] = 0;
  *((_QWORD *)&v47[0] + 1) = 0xE000000000000000;
  sub_23F61C8E0();
  sub_23F61C280();
  v36 = a2;
  v40 = a3;
  sub_23F61C280();
  sub_23F61C280();
  v37 = a4;
  v38 = a5;
  sub_23F61C280();
  sub_23F61C280();
  v16 = a6;
  sub_23F61C280();
  sub_23F61C280();
  type metadata accessor for CatalogEntry();
  v48 = 0;
  memset(v47, 0, sizeof(v47));
  sub_23F6173A8();
  sub_23F57B794(&qword_256E7B8C8, v17, (uint64_t (*)(uint64_t))type metadata accessor for CatalogEntry, (uint64_t)&protocol conformance descriptor for CatalogEntry);
  v18 = v46;
  sub_23F617390();
  if (v18)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v45);
    sub_23F3625D8((uint64_t)v47, &qword_256E7B8D0);
  }
  else
  {
    v19 = v40;
    v20 = v41;
    v44 = a6;
    v46 = a7;
    v21 = v42;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v45);
    sub_23F3625D8((uint64_t)v47, &qword_256E7B8D0);
    v16 = v49;
    if (!v49)
    {
      v22 = v20;
      sub_23F619124();
      swift_bridgeObjectRetain_n();
      v23 = v38;
      swift_bridgeObjectRetain_n();
      v24 = v46;
      swift_bridgeObjectRetain_n();
      v25 = sub_23F619E8C();
      v26 = sub_23F61C610();
      v27 = v26;
      if (os_log_type_enabled(v25, v26))
      {
        v28 = v23;
        v29 = swift_slowAlloc();
        v45 = swift_slowAlloc();
        *(_QWORD *)&v47[0] = v45;
        *(_DWORD *)v29 = 136315650;
        sub_23F617BA0();
        sub_23F37AE00(v36, v19, (uint64_t *)v47);
        v49 = v30;
        LODWORD(v43) = v27;
        sub_23F61C790();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v29 + 12) = 2080;
        sub_23F617BA0();
        sub_23F37AE00(v37, v28, (uint64_t *)v47);
        v49 = v31;
        sub_23F61C790();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v29 + 22) = 2080;
        sub_23F617BA0();
        sub_23F37AE00(v44, v24, (uint64_t *)v47);
        v49 = v32;
        sub_23F61C790();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23F35A000, v25, (os_log_type_t)v43, "ResponseCatalog: No cache entry found for %s:%s:%s", (uint8_t *)v29, 0x20u);
        v33 = v45;
        swift_arrayDestroy();
        MEMORY[0x242670B70](v33, -1, -1);
        MEMORY[0x242670B70](v29, -1, -1);

        (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v42);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v21);
      }
    }
  }
  return v16;
}

void sub_23F5781BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F57B810();
  sub_23F617BA0();
  sub_23F384324();
  sub_23F57BA18();
  swift_bridgeObjectRelease();
  sub_23F57B880();
  sub_23F362C60();
  sub_23F57B7E4();
  sub_23F57B980();
  swift_bridgeObjectRelease();
  sub_23F57B7E4();
  sub_23F57B8B4();
  sub_23F38432C();
  sub_23F57BA04();
  sub_23F61C280();
  sub_23F57B8E8();
  v0 = sub_23F61C280();
  sub_23F57B8C0(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_23F57B9A4();
  sub_23F383F58();
}

void sub_23F578264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F57B810();
  sub_23F617BA0();
  sub_23F384324();
  sub_23F57BA18();
  swift_bridgeObjectRelease();
  sub_23F57B880();
  sub_23F362C60();
  sub_23F57B7E4();
  sub_23F57B980();
  swift_bridgeObjectRelease();
  sub_23F57B7E4();
  sub_23F57B8B4();
  sub_23F38432C();
  sub_23F57B7E4();
  sub_23F617BA0();
  sub_23F57B8E8();
  sub_23F3837B0();
  sub_23F57BA04();
  v0 = sub_23F61C280();
  sub_23F57B8C0(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_23F57B9A4();
  sub_23F383F58();
}

uint64_t sub_23F578308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[8];

  v4[4] = 0;
  v4[5] = 0xE000000000000000;
  sub_23F3B1EA4();
  sub_23F384324();
  sub_23F617BA0();
  sub_23F61C8E0();
  sub_23F57B9F8();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F57B9E4();
  sub_23F61C280();
  sub_23F57B8B4();
  sub_23F38432C();
  sub_23F57B9F8();
  sub_23F57B8E8();
  sub_23F3837B0();
  v0 = sub_23F61C280();
  if (!*(_QWORD *)(v4[7] + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_databaseQueue))
    return sub_23F3837B0();
  v1 = MEMORY[0x24BDAC7A8](v0);
  v4[2] = v2;
  v4[3] = 0xE000000000000000;
  MEMORY[0x24BDAC7A8](v1);
  sub_23F57B9D8((uint64_t)v4);
  swift_retain();
  sub_23F35D2E8(&qword_256E7B648);
  sub_23F61730C();
  sub_23F57B9C4();
  return sub_23F3837B0();
}

uint64_t sub_23F5784B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_23F6173B4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6173A8();
  sub_23F617420();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

id ResponseCatalog.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ResponseCatalog(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23F5785A0(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  Swift::String_optional v89;
  Swift::String_optional v90;
  Swift::String_optional v91;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  Swift::String intentID;
  Swift::String appBundleID;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  IntelligenceFlowPlannerRuntime::ResponseCatalogIdentifiers_optional v133;
  uint64_t v134;
  uint64_t v135;

  v128 = a2;
  v132 = a1;
  v4 = sub_23F617054();
  v122 = *(_QWORD *)(v4 - 8);
  v123 = v4;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v121 = v6;
  sub_23F39C56C();
  v7 = sub_23F6170CC();
  v119 = *(_QWORD *)(v7 - 8);
  v120 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v118 = v9;
  sub_23F39C56C();
  v10 = sub_23F619F04();
  v130 = *(_QWORD *)(v10 - 8);
  v131 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  v127 = v12;
  sub_23F39C56C();
  v13 = sub_23F61A15C();
  v125 = *(_QWORD *)(v13 - 8);
  v126 = v13;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  v117 = v15;
  sub_23F35D2E8(&qword_256E730C8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  v124 = v17;
  sub_23F39C56C();
  v18 = sub_23F618134();
  sub_23F383E7C(v18, (uint64_t)&v135);
  intentID._countAndFlagsBits = v19;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F36285C();
  v111 = v21;
  sub_23F39C56C();
  v22 = sub_23F61ACA8();
  sub_23F383E7C(v22, (uint64_t)&v134);
  v110 = v23;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F36285C();
  v109 = v25;
  sub_23F39C56C();
  v26 = sub_23F61A504();
  sub_23F383E7C(v26, (uint64_t)&v133.value.actionType);
  v108 = v27;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F36285C();
  v107 = v29;
  sub_23F39C56C();
  v30 = sub_23F61BB3C();
  sub_23F383E7C(v30, (uint64_t)&v133.value.appBundleID._object);
  v105 = v31;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F38F964();
  v35 = v34 - v33;
  sub_23F35D2E8(&qword_256E70238);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F362AAC();
  v39 = v37 - v38;
  v41 = MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&v104 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v104 - v44;
  sub_23F35D2E8(&qword_256E73CF8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F362AAC();
  v49 = v47 - v48;
  v51 = MEMORY[0x24BDAC7A8](v50);
  v53 = (char *)&v104 - v52;
  MEMORY[0x24BDAC7A8](v51);
  v55 = (char *)&v104 - v54;
  v56 = type metadata accessor for ResponseCatalogMatcher(0);
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  v114 = v56;
  v57 = a3 + *(int *)(v56 + 24);
  v58 = sub_23F61B38C();
  v115 = v57;
  sub_23F3838D8(v57, v59, v60, v58);
  v61 = sub_23F61AD98();
  sub_23F36FF2C(v61, (uint64_t)v55);
  sub_23F362984();
  v116 = v55;
  sub_23F3D96EC((uint64_t)v55, (uint64_t)v53, &qword_256E73CF8);
  v62 = sub_23F61AB94();
  if (sub_23F36195C((uint64_t)v53, 1, v62) == 1)
  {
    sub_23F3625D8((uint64_t)v53, &qword_256E73CF8);
    v63 = sub_23F61B5D8();
    sub_23F3838D8((uint64_t)v45, v64, v65, v63);
  }
  else
  {
    sub_23F61AB70();
    sub_23F3B1CC8((uint64_t)v53, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8));
  }
  sub_23F3D96EC((uint64_t)v45, (uint64_t)v43, &qword_256E70238);
  sub_23F61B5D8();
  v66 = sub_23F57B990();
  v69 = sub_23F36195C(v66, v67, v68);
  v129 = v45;
  if (v69 == 1)
  {
    sub_23F3625D8((uint64_t)v43, &qword_256E70238);
    v70 = 0;
    v71 = 0;
  }
  else
  {
    sub_23F61B548();
    sub_23F3D98EC((uint64_t)v43, *(uint64_t (**)(uint64_t, uint64_t))(*((_QWORD *)v53 - 1) + 8));
    v72 = sub_23F61BB18();
    v45 = v129;
    v70 = v72;
    v71 = v73;
    sub_23F3841CC(v35, *(uint64_t (**)(uint64_t, _QWORD))(v105 + 8));
  }
  sub_23F3D96EC((uint64_t)v45, v39, &qword_256E70238);
  if (sub_23F36195C(v39, 1, (uint64_t)v53) == 1)
  {
    sub_23F3625D8(v39, &qword_256E70238);
    v74 = 0;
    v75 = 0;
  }
  else
  {
    v74 = sub_23F61B5A8();
    v75 = v76;
    sub_23F3D98EC(v39, *(uint64_t (**)(uint64_t, uint64_t))(*((_QWORD *)v53 - 1) + 8));
  }
  v77 = v132;
  v78 = sub_23F61AD98();
  sub_23F36FF2C(v78, v49);
  sub_23F362984();
  if (sub_23F36195C(v49, 1, v62) == 1)
  {
    sub_23F3625D8(v49, &qword_256E73CF8);
    v79 = 0;
    v80 = 0;
  }
  else
  {
    v106 = v75;
    v81 = v74;
    v82 = v71;
    v83 = v70;
    v84 = v107;
    sub_23F61AB4C();
    sub_23F3B1CC8(v49, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8));
    v85 = v109;
    sub_23F61A4F8();
    sub_23F3841CC(v84, *(uint64_t (**)(uint64_t, _QWORD))(v108 + 8));
    v86 = v111;
    sub_23F61AC78();
    sub_23F3841CC(v85, *(uint64_t (**)(uint64_t, _QWORD))(v110 + 8));
    v79 = sub_23F578D30();
    v80 = v87;
    v88 = v86;
    v70 = v83;
    v71 = v82;
    v74 = v81;
    v75 = v106;
    sub_23F3841CC(v88, *(uint64_t (**)(uint64_t, _QWORD))(intentID._countAndFlagsBits + 8));
  }
  v89.value._countAndFlagsBits = v70;
  v89.value._object = v71;
  v90.value._countAndFlagsBits = v74;
  v90.value._object = v75;
  v91.value._countAndFlagsBits = v79;
  v91.value._object = v80;
  ResponseCatalogIdentifiers.init(appBundleID:intentID:actionType:)(&v133, v89, v90, v91);
  appBundleID = v133.value.appBundleID;
  intentID = v133.value.intentID;
  countAndFlagsBits = v133.value.actionType._countAndFlagsBits;
  object = v133.value.actionType._object;
  sub_23F57B6D0(*(_QWORD *)a3, *(_QWORD *)(a3 + 8));
  v94 = intentID;
  *(Swift::String *)a3 = appBundleID;
  *(Swift::String *)(a3 + 16) = v94;
  *(_QWORD *)(a3 + 32) = countAndFlagsBits;
  *(_QWORD *)(a3 + 40) = object;
  v95 = a3 + *(int *)(v114 + 20);
  v96 = sub_23F57B9D0();
  v114 = *(_QWORD *)(v96 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v114 + 16))(v95, v77, v96);
  v97 = v117;
  sub_23F61A150();
  v98 = v127;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v130 + 104))(v127, *MEMORY[0x24BE54B60], v131);
  v99 = v118;
  sub_23F61AD74();
  v101 = v121;
  v100 = v122;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v122 + 104))(v121, *MEMORY[0x24BDCEBA8], v123);
  sub_23F617018();
  v103 = v102;
  sub_23F617024();
  swift_bridgeObjectRelease();
  sub_23F3D98EC(v101, *(uint64_t (**)(uint64_t, uint64_t))(v100 + 8));
  (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v99, v120);
  sub_23F57B92C();
  sub_23F61A144();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v132, v96);
  (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v98, v131);
  (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v97, v126);
  sub_23F3625D8((uint64_t)v129, &qword_256E70238);
  sub_23F3625D8((uint64_t)v116, &qword_256E73CF8);
  sub_23F57B70C(v103, v115);
  sub_23F362948();
}

uint64_t sub_23F578D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  int v11;

  v1 = v0;
  v2 = sub_23F618134();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  v6 = v5 - v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5 - v4, v1, v2);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x24BE53328])
  {
    sub_23F57B7D4();
    return 0x73736563637573;
  }
  else
  {
    v9 = v7;
    v8 = 0xD000000000000013;
    if (v7 == *MEMORY[0x24BE532D8] || v7 == *MEMORY[0x24BE532E0])
    {
      sub_23F57B7D4();
      return 0xD000000000000012;
    }
    else
    {
      if (v7 == *MEMORY[0x24BE532E8] || v7 == *MEMORY[0x24BE53300])
        goto LABEL_8;
      if (v7 == *MEMORY[0x24BE53308])
      {
        sub_23F57B7D4();
        return 0xD000000000000017;
      }
      if (v7 == *MEMORY[0x24BE532F0])
        goto LABEL_8;
      if (v7 == *MEMORY[0x24BE53310])
      {
        sub_23F57B7D4();
        return 0xD00000000000001BLL;
      }
      if (v7 == *MEMORY[0x24BE532D0])
      {
        sub_23F57B7D4();
        return 0xD000000000000011;
      }
      if (v7 == *MEMORY[0x24BE532F8])
      {
LABEL_8:
        sub_23F57B7D4();
      }
      else
      {
        v11 = *MEMORY[0x24BE53320];
        sub_23F57B7D4();
        if (v9 == v11)
          return 0x6572756C696166;
      }
    }
  }
  return v8;
}

uint64_t sub_23F578F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  _WORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v0;
  v3 = sub_23F619E98();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F38F964();
  v7 = (v6 - v5);
  sub_23F35D2E8(&qword_256E730C8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F38F964();
  v11 = v10 - v9;
  sub_23F35D2E8(&qword_256E70760);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F38F964();
  v15 = (uint8_t *)(v14 - v13);
  v16 = type metadata accessor for ResponseCatalogMatcher(0);
  sub_23F3D96EC(v2 + *(int *)(v16 + 24), v11, &qword_256E730C8);
  v17 = sub_23F61B38C();
  if (sub_23F36195C(v11, 1, v17) == 1)
  {
    v18 = &qword_256E730C8;
    v19 = v11;
LABEL_5:
    sub_23F3625D8(v19, v18);
    sub_23F619124();
    sub_23F619E8C();
    v23 = sub_23F3F0EEC();
    if (os_log_type_enabled(v7, v23))
    {
      v24 = (_WORD *)sub_23F366668();
      sub_23F57B9B0(v24);
      _os_log_impl(&dword_23F35A000, v7, v23, "Could not get path for Catalog DB", v15, 2u);
      sub_23F366530();
    }

    (*(void (**)(NSObject *, uint64_t))(v4 + 8))(v7, v3);
    return 0;
  }
  sub_23F61B380();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v11, v17);
  sub_23F616E68();
  v20 = sub_23F57B990();
  if (sub_23F36195C(v20, v21, v22) == 1)
  {
    v18 = &qword_256E70760;
    v19 = (uint64_t)v15;
    goto LABEL_5;
  }
  sub_23F616E20();
  (*(void (**)(uint8_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  sub_23F57B9E4();
  v27 = sub_23F5791DC();
  v29 = v28;
  sub_23F3837B0();
  v30 = v27;
  v25 = v2;
  v31 = sub_23F579258(v30, v29);
  if (!v1)
    v25 = v31;
  sub_23F362C60();
  return v25;
}

uint64_t sub_23F5791DC()
{
  uint64_t v1;

  sub_23F617BA0();
  v1 = sub_23F61C340();
  sub_23F61C268();
  return v1;
}

uint64_t sub_23F579258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  void (*v7)(NSObject *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  void (*v14[2])(NSObject *, uint64_t);
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  objc_allocWithZone((Class)type metadata accessor for ResponseCatalog(0));
  sub_23F383738();
  v6 = sub_23F57BA30(a1, a2);
  sub_23F57BE28();
  v7 = *(void (**)(NSObject *, uint64_t))(v3 + 8);
  if (v7)
  {
    v9 = *(_QWORD *)(v3 + 32);
    v8 = *(_QWORD *)(v3 + 40);
    v10 = *(_OWORD *)(v3 + 16);
    v14[0] = *(void (**)(NSObject *, uint64_t))v3;
    v14[1] = v7;
    v15 = v10;
    v16 = v9;
    v17 = v8;
    sub_23F577838(v14);
    v12 = v11;

  }
  else
  {

    return 0;
  }
  return v12;
}

uint64_t sub_23F579308(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  v3[17] = type metadata accessor for ResponseCatalogMatcher(0);
  v3[18] = sub_23F366578();
  v4 = sub_23F619E98();
  v3[19] = v4;
  v3[20] = *(_QWORD *)(v4 - 8);
  v3[21] = sub_23F366654();
  v3[22] = swift_task_alloc();
  v5 = sub_23F61A0D8();
  v3[23] = v5;
  v3[24] = *(_QWORD *)(v5 - 8);
  v3[25] = sub_23F366578();
  v6 = sub_23F6170CC();
  v3[26] = v6;
  v3[27] = *(_QWORD *)(v6 - 8);
  v3[28] = sub_23F366578();
  sub_23F35D2E8(&qword_256E730C8);
  v3[29] = sub_23F366578();
  sub_23F35D2E8(&qword_256E70760);
  v3[30] = sub_23F366654();
  v3[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F5793F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;

  v2 = *(_QWORD *)(v0 + 120);
  sub_23F3B1450();
  v4 = *(_QWORD *)(v2 + 64);
  v3 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(v0 + 256) = v3;
  if (!v3)
  {
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 128);
    sub_23F619124();
    sub_23F38F530(v6, v5, type metadata accessor for ResponseCatalogMatcher);
    v7 = sub_23F619E8C();
    v8 = sub_23F61C610();
    v9 = os_log_type_enabled(v7, v8);
    v11 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 168);
    v13 = *(uint64_t **)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 152);
    if (v9)
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v51 = swift_slowAlloc();
      *(_DWORD *)v14 = 136315138;
      v15 = *v13;
      v16 = v13[1];
      v17 = v13[2];
      v18 = v13[3];
      v19 = v13[4];
      v20 = v13[5];
      *(_QWORD *)(v0 + 16) = *v13;
      *(_QWORD *)(v0 + 24) = v16;
      *(_QWORD *)(v0 + 32) = v17;
      *(_QWORD *)(v0 + 40) = v18;
      *(_QWORD *)(v0 + 48) = v19;
      *(_QWORD *)(v0 + 56) = v20;
      sub_23F57B588(v15, v16);
      sub_23F35D2E8(&qword_256E7B898);
      v21 = sub_23F61C16C();
      sub_23F37AE00(v21, v22, &v51);
      *(_QWORD *)(v0 + 104) = v23;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      sub_23F3663AC((uint64_t)v13, type metadata accessor for ResponseCatalogMatcher);
      _os_log_impl(&dword_23F35A000, v7, v8, "ResponseValidator did not find a CAT ID for %s", v14, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }
    sub_23F3663AC(*(_QWORD *)(v0 + 144), type metadata accessor for ResponseCatalogMatcher);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    goto LABEL_13;
  }
  sub_23F617BA0();
  sub_23F579AE8();
  v25 = v24;
  v26 = *(_QWORD *)(v0 + 232);
  sub_23F3D96EC(*(_QWORD *)(v0 + 128) + *(int *)(*(_QWORD *)(v0 + 136) + 24), v26, &qword_256E730C8);
  v27 = sub_23F61B38C();
  v28 = sub_23F41C5E8(v26);
  if (v28 == 1)
  {
    v29 = *(_QWORD *)(v0 + 232);
    sub_23F362D18();
    sub_23F384120();
    v30 = &qword_256E730C8;
    v31 = v29;
LABEL_10:
    sub_23F3625D8(v31, v30);
    v37 = *(NSObject **)(v0 + 176);
    sub_23F619124();
    sub_23F619E8C();
    v38 = sub_23F3F0EEC();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_23F35A000, v37, v38, "Could not get path for Catalog DB", v39, 2u);
      sub_23F366530();
    }
    v40 = *(_QWORD *)(v0 + 176);
    v41 = *(_QWORD *)(v0 + 152);
    v42 = *(_QWORD *)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
LABEL_13:
    v43 = sub_23F57B860();
    sub_23F3838D8(v1, v44, v45, v43);
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v32 = *(_QWORD *)(v0 + 248);
  v33 = *(_QWORD *)(v0 + 232);
  sub_23F61B380();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v33, v27);
  v34 = sub_23F616E68();
  v35 = sub_23F41C5E8(v32);
  v36 = *(_QWORD *)(v0 + 248);
  if (v35 == 1)
  {
    sub_23F362D18();
    sub_23F384120();
    v30 = &qword_256E70760;
    v31 = v36;
    goto LABEL_10;
  }
  sub_23F616E20();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v36, v34);
  type metadata accessor for DefaultCATResponseDialogGenerator();
  *(_QWORD *)(v0 + 264) = swift_initStackObject();
  if (!v25)
    sub_23F61BFEC();
  v47 = *(_QWORD *)(v0 + 240);
  sub_23F586054();
  v49 = v48;
  *(_QWORD *)(v0 + 272) = v48;
  sub_23F384120();
  sub_23F5791DC();
  sub_23F362984();
  sub_23F616DE4();
  sub_23F38432C();
  sub_23F36196C(v47, 0, 1, v34);
  sub_23F61AD74();
  sub_23F61AD68();
  v50 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v50;
  *v50 = v0;
  v50[1] = sub_23F579918;
  return sub_23F3E4588(*(_QWORD *)(v0 + 112), v4, v3, v49, *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 200));
}

uint64_t sub_23F579918()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  v9 = v2[30];
  v4 = v2[27];
  v3 = v2[28];
  v6 = v2[25];
  v5 = v2[26];
  v7 = v2[24];
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23F3B1CC8(v6, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_23F3625D8(v9, &qword_256E70760);
  return swift_task_switch();
}

uint64_t sub_23F5799F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F57B860();
  sub_23F36196C(v1, 0, 1, v2);
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F579A7C()
{
  uint64_t v0;

  sub_23F57B91C();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23F579AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void *v66;
  void *v67;
  id v68;
  id v69;
  void *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  _OWORD v92[2];
  __int128 v93;
  uint64_t v94;

  v94 = *MEMORY[0x24BDAC8D0];
  v79 = sub_23F61C148();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v77 = (char *)&v71 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_23F35D2E8(&qword_256E70230);
  MEMORY[0x24BDAC7A8](v1);
  v80 = (char *)&v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_23F6170CC();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v74 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F61ACA8();
  v85 = *(_QWORD *)(v4 - 8);
  v86 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v84 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61A504();
  v82 = *(_QWORD *)(v6 - 8);
  v83 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v81 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E6FB18);
  MEMORY[0x24BDAC7A8](v8);
  v87 = (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_23F61811C();
  v73 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v72 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F35D2E8(&qword_256E73CF8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v71 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v71 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v71 - v24;
  v26 = type metadata accessor for TypedValueFormatter(0);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v71 = (uint64_t)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v71 - v29;
  type metadata accessor for ResponseCatalogMatcher(0);
  sub_23F61AD74();
  v31 = *(int *)(v26 + 20);
  v90 = v30;
  v32 = &v30[v31];
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  v33 = sub_23F61AD98();
  sub_23F36FF2C(v33, (uint64_t)v25);
  swift_bridgeObjectRelease();
  v89 = v25;
  sub_23F3D96EC((uint64_t)v25, (uint64_t)v23, &qword_256E73CF8);
  v34 = sub_23F61AB94();
  if (sub_23F36195C((uint64_t)v23, 1, v34) == 1)
  {
    v35 = &qword_256E73CF8;
    v36 = (uint64_t)v23;
LABEL_5:
    sub_23F3625D8(v36, v35);
    goto LABEL_7;
  }
  sub_23F61AB70();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v23, v34);
  v37 = sub_23F61B5D8();
  if (sub_23F36195C((uint64_t)v13, 1, v37) == 1)
  {
    v35 = &qword_256E70238;
    v36 = (uint64_t)v13;
    goto LABEL_5;
  }
  sub_23F61B530();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v13, v37);
LABEL_7:
  v38 = v88;
  v39 = sub_23F61AD98();
  sub_23F36FF2C(v39, (uint64_t)v20);
  swift_bridgeObjectRelease();
  if (sub_23F36195C((uint64_t)v20, 1, v34) == 1)
  {
    sub_23F3625D8((uint64_t)v20, &qword_256E73CF8);
    v40 = v87;
    sub_23F36196C(v87, 1, 1, v38);
    goto LABEL_10;
  }
  v41 = v81;
  sub_23F61AB4C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v20, v34);
  v42 = v84;
  sub_23F61A4F8();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v41, v83);
  v40 = v87;
  sub_23F61AC9C();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v42, v86);
  if (sub_23F36195C(v40, 1, v38) == 1)
  {
LABEL_10:
    sub_23F3625D8(v40, &qword_256E6FB18);
    v43 = sub_23F61AD98();
    sub_23F36FF2C(v43, (uint64_t)v17);
    swift_bridgeObjectRelease();
    v44 = sub_23F36195C((uint64_t)v17, 1, v34);
    v45 = (uint64_t)v90;
    if (v44 == 1)
    {
      swift_bridgeObjectRelease();
      sub_23F3625D8((uint64_t)v17, &qword_256E73CF8);
      v46 = 0;
      v47 = v91;
    }
    else
    {
      v48 = (uint64_t)v80;
      sub_23F61AB88();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v17, v34);
      v49 = sub_23F61B0BC();
      v50 = sub_23F36195C(v48, 1, v49);
      v47 = v91;
      if (v50 == 1)
      {
        swift_bridgeObjectRelease();
        sub_23F3625D8(v48, &qword_256E70230);
        v46 = 0;
      }
      else
      {
        sub_23F61B7C4();
        v56 = (uint64_t (*)(uint64_t))MEMORY[0x24BEB97F0];
        sub_23F61B92C();
        sub_23F57B794(&qword_256E6FE18, 255, v56, MEMORY[0x24BEB9808]);
        v57 = sub_23F61BFEC();
        v58 = v71;
        sub_23F38F530(v45, v71, type metadata accessor for TypedValueFormatter);
        type metadata accessor for DialogValues(0);
        swift_allocObject();
        sub_23F417CE8(v57, v58);
        sub_23F5DE3F8();
        if (v47)
        {
          swift_bridgeObjectRelease();
          swift_release();
          sub_23F3625D8((uint64_t)v89, &qword_256E73CF8);
          sub_23F3663AC(v45, type metadata accessor for TypedValueFormatter);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
          return;
        }
        v46 = v59;
        swift_bridgeObjectRelease();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
      }
    }
    goto LABEL_20;
  }
  v51 = v73;
  v52 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v72, v40, v38);
  v53 = v74;
  sub_23F61AD74();
  sub_23F617018();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v53, v76);
  v54 = v91;
  sub_23F5DDDA8();
  v47 = v54;
  v45 = (uint64_t)v90;
  if (v54)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v38);
LABEL_22:
    sub_23F3625D8((uint64_t)v89, &qword_256E73CF8);
    sub_23F3663AC(v45, type metadata accessor for TypedValueFormatter);
    return;
  }
  v46 = v55;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_20:
  *(_QWORD *)&v92[0] = v46;
  sub_23F35D2E8(&qword_256E7B8A0);
  sub_23F57B5C4();
  sub_23F61C028();
  if (v47)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  v60 = v77;
  sub_23F61C13C();
  v61 = sub_23F61C118();
  v63 = v62;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v60, v79);
  if (v63 >> 60 == 15)
    v64 = 0;
  else
    v64 = v61;
  if (v63 >> 60 == 15)
    v65 = 0xC000000000000000;
  else
    v65 = v63;
  v66 = (void *)objc_opt_self();
  v67 = (void *)sub_23F616EE0();
  sub_23F3F3D0C(v64, v65);
  *(_QWORD *)&v92[0] = 0;
  v68 = objc_msgSend(v66, sel_JSONObjectWithData_options_error_, v67, 0, v92);

  v69 = *(id *)&v92[0];
  if (!v68)
  {
    v70 = v69;
    sub_23F616D9C();

    swift_willThrow();
    goto LABEL_22;
  }
  sub_23F61C82C();
  swift_unknownObjectRelease();
  sub_23F3625D8((uint64_t)v89, &qword_256E73CF8);
  sub_23F3663AC(v45, type metadata accessor for TypedValueFormatter);
  sub_23F382A70(&v93, v92);
  sub_23F35D2E8(&qword_256E74F78);
  swift_dynamicCast();
}

unint64_t sub_23F57A4F0()
{
  unint64_t result;

  result = qword_256E7B628;
  if (!qword_256E7B628)
  {
    result = MEMORY[0x242670A44](&unk_23F62DF1C, &type metadata for CatalogEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B628);
  }
  return result;
}

uint64_t type metadata accessor for CatalogEntry()
{
  return objc_opt_self();
}

unint64_t sub_23F57A54C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256E7B638;
  if (!qword_256E7B638)
  {
    v1 = sub_23F35EB74(&qword_256E70FD8);
    v2 = MEMORY[0x24BEE0D08];
    result = MEMORY[0x242670A44](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256E7B638);
  }
  return result;
}

uint64_t sub_23F57A5A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F57A5DC(uint64_t a1)
{
  uint64_t *v1;

  return sub_23F577D2C(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

void sub_23F57A5FC(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
    *a1 = v4;
  sub_23F362928();
}

uint64_t sub_23F57A624()
{
  return sub_23F5784B4();
}

void sub_23F57A63C(_BYTE *a1@<X8>)
{
  sub_23F57B76C(a1);
}

uint64_t type metadata accessor for ResponseCatalog(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E7B7C8);
}

void sub_23F57A664(uint64_t a1, uint64_t a2)
{
  sub_23F57B794(&qword_256E7B650, a2, (uint64_t (*)(uint64_t))type metadata accessor for CatalogEntry, (uint64_t)&protocol conformance descriptor for CatalogEntry);
}

void sub_23F57A690(uint64_t a1, uint64_t a2)
{
  sub_23F57B794(&qword_256E7B658, a2, (uint64_t (*)(uint64_t))type metadata accessor for CatalogEntry, (uint64_t)&protocol conformance descriptor for CatalogEntry);
}

void sub_23F57A6BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F43A3E8();
  sub_23F576A84();
  *v0 = v1;
  v0[1] = v2;
  sub_23F362928();
}

void sub_23F57A6DC()
{
  sub_23F576BCC();
}

void sub_23F57A6F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F43A3E8();
  sub_23F576B28();
  *v0 = v1;
  v0[1] = v2;
  sub_23F362928();
}

void sub_23F57A718()
{
  sub_23F576BCC();
}

void sub_23F57A734()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F43A3E8();
  sub_23F576BEC();
  *v0 = v1;
  v0[1] = v2;
  sub_23F362928();
}

void sub_23F57A754()
{
  sub_23F576BCC();
}

void sub_23F57A770()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F43A3E8();
  sub_23F576C90();
  *v0 = v1;
  v0[1] = v2;
  sub_23F362928();
}

void sub_23F57A790()
{
  sub_23F576BCC();
}

void sub_23F57A7AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F43A3E8();
  sub_23F576D34();
  *v0 = v1;
  v0[1] = v2;
  sub_23F362928();
}

void sub_23F57A7CC()
{
  sub_23F576BCC();
}

ValueMetadata *type metadata accessor for ResponseCatalogIdentifiers()
{
  return &type metadata for ResponseCatalogIdentifiers;
}

uint64_t method lookup function for CatalogEntry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CatalogEntry.bundleID.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of CatalogEntry.bundleID.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of CatalogEntry.bundleID.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of CatalogEntry.intentID.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of CatalogEntry.intentID.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of CatalogEntry.intentID.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of CatalogEntry.responseType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CatalogEntry.responseType.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CatalogEntry.responseType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of CatalogEntry.responseID.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of CatalogEntry.responseID.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of CatalogEntry.responseID.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of CatalogEntry.responseString.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of CatalogEntry.responseString.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of CatalogEntry.responseString.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of CatalogEntry.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of CatalogEntry.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t sub_23F57A8EC()
{
  return type metadata accessor for ResponseCatalog(0);
}

uint64_t sub_23F57A8F4()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for ResponseCatalog()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResponseCatalog.readCatalogEntry(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ResponseCatalog.updateCatalogEntry(identifiers:resultString:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ResponseCatalog.updateCatalogEntry(identifiers:resultCatID:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ResponseCatalog.deleteCatalogEntry(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

_QWORD *initializeBufferWithCopyOfBuffer for ResponseCatalogMatcher(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    if (v7)
    {
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      v9 = a2[5];
      a1[4] = a2[4];
      a1[5] = v9;
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F617BA0();
    }
    else
    {
      v11 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v11;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    }
    v12 = *(int *)(a3 + 20);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23F61ADB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = *(int *)(a3 + 24);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_23F61B38C();
    if (sub_23F36195C((uint64_t)v18, 1, v19))
    {
      v20 = sub_23F35D2E8(&qword_256E730C8);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      sub_23F36196C((uint64_t)v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t destroy for ResponseCatalogMatcher(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23F61ADB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_23F61B38C();
  result = sub_23F36195C(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return result;
}

_QWORD *initializeWithCopy for ResponseCatalogMatcher(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = a2[1];
  if (v6)
  {
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
  }
  else
  {
    v9 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v9;
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23F61ADB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23F61B38C();
  if (sub_23F36195C((uint64_t)v16, 1, v17))
  {
    v18 = sub_23F35D2E8(&qword_256E730C8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    sub_23F36196C((uint64_t)v15, 0, 1, v17);
  }
  return a1;
}

_QWORD *assignWithCopy for ResponseCatalogMatcher(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  if (a1[1])
  {
    if (v6)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      sub_23F617BA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F57AF20((uint64_t)a1);
      v8 = *((_OWORD *)a2 + 1);
      v7 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v8;
      *((_OWORD *)a1 + 2) = v7;
    }
  }
  else if (v6)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
  }
  else
  {
    v9 = *(_OWORD *)a2;
    v10 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v10;
    *(_OWORD *)a1 = v9;
  }
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23F61ADB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23F61B38C();
  LODWORD(v13) = sub_23F36195C((uint64_t)v16, 1, v18);
  v19 = sub_23F36195C((uint64_t)v17, 1, v18);
  if (!(_DWORD)v13)
  {
    v20 = *(_QWORD *)(v18 - 8);
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v18);
    goto LABEL_13;
  }
  if (v19)
  {
LABEL_13:
    v21 = sub_23F35D2E8(&qword_256E730C8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  sub_23F36196C((uint64_t)v16, 0, 1, v18);
  return a1;
}

uint64_t sub_23F57AF20(uint64_t a1)
{
  destroy for TrialEnrollment();
  return a1;
}

_OWORD *initializeWithTake for ResponseCatalogMatcher(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F61ADB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23F61B38C();
  if (sub_23F36195C((uint64_t)v13, 1, v14))
  {
    v15 = sub_23F35D2E8(&qword_256E730C8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    sub_23F36196C((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *assignWithTake for ResponseCatalogMatcher(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  if (a1[1])
  {
    v6 = a2[1];
    if (v6)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      swift_bridgeObjectRelease();
      v8 = a2[5];
      a1[4] = a2[4];
      a1[5] = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23F57AF20((uint64_t)a1);
  }
  v9 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_6:
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23F61ADB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23F61B38C();
  LODWORD(v12) = sub_23F36195C((uint64_t)v15, 1, v17);
  v18 = sub_23F36195C((uint64_t)v16, 1, v17);
  if (!(_DWORD)v12)
  {
    v19 = *(_QWORD *)(v17 - 8);
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v15, v16, v17);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v17);
    goto LABEL_11;
  }
  if (v18)
  {
LABEL_11:
    v20 = sub_23F35D2E8(&qword_256E730C8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  sub_23F36196C((uint64_t)v15, 0, 1, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseCatalogMatcher()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F57B1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_23F57B9D0();
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
    {
      v10 = v9;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_23F35D2E8(&qword_256E730C8);
      v11 = *(int *)(a3 + 24);
    }
    return sub_23F36195C(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ResponseCatalogMatcher()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F57B278(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a3 == 2147483646)
  {
    *(_QWORD *)(a1 + 8) = a2;
    sub_23F362B80();
  }
  else
  {
    v8 = sub_23F57B9D0();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_23F35D2E8(&qword_256E730C8);
      v10 = *(int *)(a4 + 24);
    }
    sub_23F36196C(a1 + v10, a2, a2, v9);
  }
}

uint64_t type metadata accessor for ResponseCatalogMatcher(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E7B830);
}

void sub_23F57B318()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F61ADB0();
  if (v0 <= 0x3F)
  {
    sub_23F57B3A8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23F57B3A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E7B840)
  {
    sub_23F61B38C();
    v0 = sub_23F61C730();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256E7B840);
  }
}

uint64_t storeEnumTagSinglePayload for CatalogEntry.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23F57B448 + 4 * byte_23F62DBCF[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23F57B47C + 4 * byte_23F62DBCA[v4]))();
}

uint64_t sub_23F57B47C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F57B484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F57B48CLL);
  return result;
}

uint64_t sub_23F57B498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F57B4A0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23F57B4A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F57B4AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CatalogEntry.CodingKeys()
{
  return &type metadata for CatalogEntry.CodingKeys;
}

unint64_t sub_23F57B4CC()
{
  unint64_t result;

  result = qword_256E7B878;
  if (!qword_256E7B878)
  {
    result = MEMORY[0x242670A44](&unk_23F62DEF4, &type metadata for CatalogEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B878);
  }
  return result;
}

unint64_t sub_23F57B50C()
{
  unint64_t result;

  result = qword_256E7B880;
  if (!qword_256E7B880)
  {
    result = MEMORY[0x242670A44](&unk_23F62DE2C, &type metadata for CatalogEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7B880);
  }
  return result;
}

unint64_t sub_23F57B54C()
{
  unint64_t result;

  result = qword_256E7B888;
  if (!qword_256E7B888)
  {
    result = MEMORY[0x242670A44](&unk_23F62DE54, &type metadata for CatalogEntry.CodingKeys);
    atomic_store(result, &qword_256E7B888);
  }
  return result;
}

uint64_t sub_23F57B588(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_23F617BA0();
    sub_23F617BA0();
    return sub_23F617BA0();
  }
  return result;
}

unint64_t sub_23F57B5C4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256E7B8A8;
  if (!qword_256E7B8A8)
  {
    v1 = sub_23F35EB74(&qword_256E7B8A0);
    v2 = sub_23F57B628();
    result = MEMORY[0x242670A44](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256E7B8A8);
  }
  return result;
}

unint64_t sub_23F57B628()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256E7B8B0;
  if (!qword_256E7B8B0)
  {
    v1 = sub_23F35EB74(&qword_256E7B8B8);
    v2 = sub_23F57B694();
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256E7B8B0);
  }
  return result;
}

unint64_t sub_23F57B694()
{
  unint64_t result;

  result = qword_256E7B8C0;
  if (!qword_256E7B8C0)
  {
    result = MEMORY[0x242670A44](&unk_23F63112C, &unk_250FDFCC0);
    atomic_store(result, (unint64_t *)&qword_256E7B8C0);
  }
  return result;
}

uint64_t sub_23F57B6D0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F57B70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E730C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F57B754()
{
  return sub_23F5776F4();
}

void sub_23F57B76C(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(void))(v1 + 16))();
  if (!v2)
    *a1 = 0;
  sub_23F362928();
}

void sub_23F57B794(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    v6 = a3(a2);
    atomic_store(MEMORY[0x242670A44](a4, v6), a1);
  }
  sub_23F362928();
}

uint64_t sub_23F57B7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F57B7E4()
{
  return sub_23F61C280();
}

uint64_t sub_23F57B7F8()
{
  return sub_23F61CBB0();
}

uint64_t sub_23F57B810()
{
  return sub_23F617BA0();
}

void sub_23F57B838(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_23F57B84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v0, v1);
}

uint64_t sub_23F57B860()
{
  return sub_23F617F0C();
}

uint64_t sub_23F57B880()
{
  return sub_23F61C280();
}

uint64_t sub_23F57B89C()
{
  return sub_23F61CBE0();
}

uint64_t sub_23F57B8B4()
{
  return sub_23F61C280();
}

uint64_t sub_23F57B8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_23F577618(a11);
}

uint64_t sub_23F57B8D4()
{
  return sub_23F617BA0();
}

uint64_t sub_23F57B8E8()
{
  return sub_23F61C280();
}

uint64_t sub_23F57B8F4()
{
  return sub_23F61CB14();
}

uint64_t sub_23F57B8FC()
{
  return sub_23F61C790();
}

uint64_t sub_23F57B90C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F57B91C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F57B92C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F57B944()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F57B954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F57B964@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_23F57B980()
{
  return sub_23F61C280();
}

uint64_t sub_23F57B990()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F57B9A4()
{
  return swift_bridgeObjectRelease();
}

_WORD *sub_23F57B9B0(_WORD *result)
{
  *result = 0;
  return result;
}

void sub_23F57B9BC()
{
  void *v0;

}

uint64_t sub_23F57B9C4()
{
  return swift_release();
}

uint64_t sub_23F57B9D0()
{
  return sub_23F61ADB0();
}

uint64_t sub_23F57B9D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 - 16) = v1;
  *(_QWORD *)(a1 - 8) = v2;
  return sub_23F617300();
}

unint64_t sub_23F57B9E4()
{
  return 0xD000000000000012;
}

uint64_t sub_23F57B9F8()
{
  return sub_23F61C280();
}

uint64_t sub_23F57BA04()
{
  return 0x4C554E202C27;
}

uint64_t sub_23F57BA18()
{
  return sub_23F61C8E0();
}

uint64_t sub_23F57BA24()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

id sub_23F57BA30(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  id v22;
  id v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  objc_super v31;
  uint64_t v32;

  v6 = sub_23F61742C();
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v28 = (_QWORD *)(v9 - v8);
  v10 = sub_23F57D86C();
  v26 = *(_QWORD *)(v10 - 8);
  v27 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F383EC4();
  sub_23F61C658();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F38F964();
  v13 = sub_23F61C664();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F38F964();
  v17 = v16 - v15;
  sub_23F61BD88();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F38F964();
  *(_QWORD *)&v2[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_databaseQueue] = 0;
  v19 = &v2[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_filePath];
  *(_QWORD *)v19 = a1;
  *((_QWORD *)v19 + 1) = a2;
  v20 = &v2[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_componentName];
  *(_QWORD *)v20 = 0xD000000000000032;
  *((_QWORD *)v20 + 1) = 0x800000023F63A530;
  sub_23F57D660();
  v25 = v2;
  sub_23F61BD7C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v17, *MEMORY[0x24BEE5750], v13);
  v32 = MEMORY[0x24BEE4AF8];
  sub_23F57D69C();
  sub_23F35D2E8(&qword_256E7B940);
  sub_23F57D6DC();
  sub_23F61C850();
  v21 = (void *)sub_23F61C670();
  sub_23F6172C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(&v25[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_config], v3, v27);
  sub_23F57D7F0();
  sub_23F6172A0();
  swift_endAccess();
  sub_23F61BD7C();
  sub_23F57D7F0();
  sub_23F617294();
  sub_23F617288();
  *v28 = 0x3FB999999999999ALL;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v29 + 104))(v28, *MEMORY[0x24BE39FB8], v30);
  sub_23F6172AC();
  sub_23F6172B8();
  v22 = v21;
  sub_23F61727C();
  swift_endAccess();

  v31.receiver = v25;
  v31.super_class = (Class)type metadata accessor for ResponseCatalogDatabase();
  v23 = objc_msgSendSuper2(&v31, sel_init);

  return v23;
}

uint64_t sub_23F57BD24(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_databaseQueue) = a1;
  return swift_release();
}

uint64_t sub_23F57BD3C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_databaseQueue))
  {
    v2 = MEMORY[0x24BDAC7A8](result);
    MEMORY[0x24BDAC7A8](v2);
    sub_23F617300();
    swift_retain();
    sub_23F35D2E8(&qword_256E7B648);
    sub_23F61730C();
    return swift_release();
  }
  return result;
}

void sub_23F57BE28()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  unsigned __int8 v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  char *v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42[3];

  v1 = sub_23F57D86C();
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  sub_23F362850();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)v34 - v6;
  v7 = sub_23F619E98();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v34 - v11;
  sub_23F619124();
  v13 = v0;
  v14 = sub_23F619E8C();
  v15 = sub_23F61C61C();
  v16 = os_log_type_enabled(v14, v15);
  v35 = v5;
  if (v16)
  {
    v17 = sub_23F366668();
    v34[1] = v7;
    v18 = v17;
    v42[0] = sub_23F366668();
    *(_DWORD *)v18 = 136315394;
    v19 = *(_QWORD *)&v13[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_componentName];
    v20 = *(_QWORD *)&v13[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_componentName + 8];
    sub_23F617BA0();
    sub_23F37AE00(v19, v20, v42);
    v41 = v21;
    sub_23F57D834();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v36 = (void (*)(char *, uint64_t))v8;
    v23 = *(_QWORD *)&v13[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_filePath];
    v22 = *(_QWORD *)&v13[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_filePath + 8];
    sub_23F617BA0();
    sub_23F37AE00(v23, v22, v42);
    v41 = v24;
    sub_23F57D834();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F35A000, v14, v15, "Initializing %s DB queue at path: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    sub_23F366530();
  }

  v36 = *(void (**)(char *, uint64_t))(v8 + 8);
  v36(v12, v7);
  v25 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_23F617BA0();
  v26 = (void *)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v25, sel_fileExistsAtPath_, v26);

  v28 = &v13[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_config];
  swift_beginAccess();
  v29 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v29(v37, v28, v39);
  sub_23F617300();
  swift_allocObject();
  sub_23F617BA0();
  v30 = sub_23F6172DC();
  sub_23F57BD24(v30);
  if ((v27 & 1) == 0)
  {
    v31 = ((uint64_t (*)(char *, char *, uint64_t))v29)(v35, v28, v39);
    sub_23F57BD3C(v31);
    sub_23F57D810();
LABEL_4:
    sub_23F362948();
    return;
  }
  if (*(_QWORD *)&v13[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_databaseQueue])
  {
    swift_retain();
    sub_23F57C3A0();
    v33 = v32;
    swift_release();
    if (v33 != 1)
    {
      sub_23F3668F4();
      sub_23F57C9E0();
      swift_bridgeObjectRelease();
    }
    goto LABEL_4;
  }
  __break(1u);
}

void sub_23F57C3A0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16[4];

  sub_23F3B1728();
  sub_23F57D7DC();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F383EC4();
  sub_23F6172E8();
  if (v1)
  {
    sub_23F619124();
    v6 = v0;
    v7 = (void *)sub_23F619E8C();
    v8 = sub_23F61C628();
    if (sub_23F52E788(v8))
    {
      sub_23F366668();
      v9 = sub_23F57D7CC();
      *(_DWORD *)v4 = 136315138;
      v16[0] = v9;
      v10 = sub_23F57D7B0();
      sub_23F57D804(v10, v11, v16);
      v16[3] = v12;
      sub_23F57D864();

      sub_23F362C60();
      sub_23F57D79C(&dword_23F35A000, v13, v14, "Database version cannot be read for %s");
      sub_23F57D7BC();
      sub_23F366530();
    }

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    sub_23F61C8E0();
    swift_bridgeObjectRelease();
    sub_23F57D7B0();
    sub_23F61C280();
    sub_23F362C60();
    sub_23F57D27C();
    sub_23F362D64();
    *v15 = 0xD000000000000024;
    v15[1] = 0x800000023F63A430;
    sub_23F57D874((uint64_t)v15, 1);

  }
}

void sub_23F57C5BC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = v0;
  sub_23F3B1728();
  sub_23F57D7DC();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F362930();
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_databaseQueue]
    || (swift_retain(), sub_23F6172F4(), swift_release(), !v1))
  {
    sub_23F619124();
    v7 = v0;
    v8 = (void *)sub_23F57D880();
    v9 = sub_23F61C610();
    if (sub_23F52E788(v9))
    {
      sub_23F366668();
      v15 = sub_23F57D7CC();
      *(_DWORD *)v4 = 136315138;
      v10 = sub_23F57D7B0();
      sub_23F57D804(v10, v11, &v15);
      sub_23F4F2980(v12);
      sub_23F57D864();

      sub_23F362C60();
      sub_23F57D79C(&dword_23F35A000, v13, v14, "Database closed: %s");
      sub_23F57D7BC();
      sub_23F366530();
    }

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  }
  sub_23F362870();
}

void sub_23F57C71C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_23F3B1728();
  sub_23F57D7DC();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F362930();
  sub_23F57BE28();
  sub_23F619124();
  v6 = v0;
  v7 = (void *)sub_23F57D880();
  v8 = sub_23F61C610();
  if (sub_23F52E788(v8))
  {
    sub_23F366668();
    v14 = sub_23F57D7CC();
    *(_DWORD *)v4 = 136315138;
    v9 = sub_23F57D7B0();
    sub_23F57D804(v9, v10, &v14);
    sub_23F4F2980(v11);
    sub_23F57D864();

    sub_23F362C60();
    sub_23F57D79C(&dword_23F35A000, v12, v13, "Database reopened: %s");
    sub_23F57D7BC();
    sub_23F366530();
  }

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v1);
  sub_23F362870();
}

void sub_23F57C850()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = sub_23F619E98();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F38F964();
  v5 = v4 - v3;
  sub_23F619124();
  v6 = v0;
  v7 = sub_23F619E8C();
  v8 = sub_23F61C610();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)sub_23F366668();
    v12 = sub_23F366668();
    *(_DWORD *)v9 = 136315138;
    v11 = *(_QWORD *)&v6[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_componentName];
    v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_componentName + 8];
    sub_23F3668F4();
    sub_23F37AE00(v11, v10, &v12);
    sub_23F61C790();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F35A000, v7, v8, "Database queue destroyed: %s", v9, 0xCu);
    sub_23F57D854();
    sub_23F366530();
  }

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
  sub_23F57BD24(0);
  sub_23F362948();
}

uint64_t sub_23F57C9E0()
{
  _QWORD *v0;

  sub_23F61C8E0();
  swift_bridgeObjectRelease();
  sub_23F57D824();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  sub_23F57D824();
  sub_23F61C280();
  sub_23F362C60();
  sub_23F61C280();
  sub_23F3668F4();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F57D27C();
  sub_23F362D64();
  *v0 = 0xD000000000000018;
  v0[1] = 0x800000023F63A460;
  return sub_23F57D874((uint64_t)v0, 3);
}

unint64_t static SiriResponseDatabaseError.errorDomain.getter()
{
  return 0xD000000000000019;
}

uint64_t SiriResponseDatabaseError.errorCode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_23F57CB4C()
{
  sub_23F57D720();
  return sub_23F61CCAC();
}

uint64_t sub_23F57CB74()
{
  sub_23F57D720();
  return sub_23F61CCA0();
}

unint64_t sub_23F57CB9C()
{
  static SiriResponseDatabaseError.errorDomain.getter();
  return 0xD000000000000019;
}

uint64_t sub_23F57CBBC()
{
  uint64_t v0;

  sub_23F35D2E8(&qword_256E700E8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23F61E7E0;
  sub_23F61C8E0();
  swift_bridgeObjectRelease();
  sub_23F61CC1C();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 32) = 0xD000000000000014;
  *(_QWORD *)(v0 + 40) = 0x800000023F63A080;
  return v0;
}

void sub_23F57CC84(uint64_t a1, _QWORD *a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;

  v4 = sub_23F619E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v31 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F6173B4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *a2) + 0xD0))(v9);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v28 = v5;
    v29 = v4;
    v30 = v12;
    v14 = v12 + 40;
    while (1)
    {
      sub_23F617BA0();
      sub_23F6173A8();
      sub_23F617420();
      if (v2)
        break;
      v14 += 16;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      swift_bridgeObjectRelease();
      if (!--v13)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    swift_bridgeObjectRelease();
    sub_23F619124();
    v15 = v2;
    v16 = v2;
    v17 = sub_23F619E8C();
    v18 = sub_23F61C628();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138412290;
      v21 = v2;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      v32 = v22;
      sub_23F61C790();
      *v20 = v22;

      _os_log_impl(&dword_23F35A000, v17, v18, "ResponseCatalog: Error preparing uninitialized database: %@", v19, 0xCu);
      sub_23F35D2E8(&qword_256E6FAB0);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v20, -1, -1);
      MEMORY[0x242670B70](v19, -1, -1);
    }
    else
    {

    }
    v24 = v28;
    v23 = v29;

    (*(void (**)(char *, uint64_t))(v24 + 8))(v31, v23);
    v32 = 0;
    v33 = 0xE000000000000000;
    sub_23F61C8E0();
    sub_23F61C280();
    v34 = v2;
    sub_23F35D2E8(&qword_256E70370);
    sub_23F61CA00();
    v25 = v32;
    v26 = v33;
    sub_23F57D27C();
    swift_allocError();
    *(_QWORD *)v27 = v25;
    *(_QWORD *)(v27 + 8) = v26;
    *(_BYTE *)(v27 + 16) = 4;
    swift_willThrow();

  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
  }
}

void sub_23F57CFEC(uint64_t a1)
{
  uint64_t v1;

  sub_23F57CC84(a1, *(_QWORD **)(v1 + 16));
}

void sub_23F57D004(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_23F577810(*(void (**)(void))(v1 + 16), a1);
}

id ResponseCatalogDatabase.__deallocating_deinit()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_databaseQueue] = 0;
  swift_release();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ResponseCatalogDatabase();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23F57D0FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = sub_23F6173B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  memset(v9, 0, sizeof(v9));
  sub_23F6173A8();
  sub_23F6173C0();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_23F57D75C((uint64_t)v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    result = sub_23F57D75C((uint64_t)v9);
    if (v12)
      v8 = -1;
    else
      v8 = v11;
    *a1 = v8;
  }
  return result;
}

id ResponseCatalogDatabase.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ResponseCatalogDatabase.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

unint64_t sub_23F57D27C()
{
  unint64_t result;

  result = qword_256E7B8E0;
  if (!qword_256E7B8E0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for SiriResponseDatabaseError, &type metadata for SiriResponseDatabaseError);
    atomic_store(result, (unint64_t *)&qword_256E7B8E0);
  }
  return result;
}

uint64_t type metadata accessor for ResponseCatalogDatabase()
{
  uint64_t result;

  result = qword_256E7B920;
  if (!qword_256E7B920)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F57D2F8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 8u)
    return sub_23F617BA0();
  return result;
}

uint64_t destroy for SiriResponseDatabaseError(uint64_t a1)
{
  return sub_23F57D320(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_23F57D320(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 8u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s30IntelligenceFlowPlannerRuntime25SiriResponseDatabaseErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F57D2F8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SiriResponseDatabaseError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23F57D2F8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23F57D320(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SiriResponseDatabaseError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23F57D320(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriResponseDatabaseError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xF8 && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 247;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 8)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriResponseDatabaseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 248;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23F57D49C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SiriResponseDatabaseError()
{
  return &type metadata for SiriResponseDatabaseError;
}

uint64_t sub_23F57D4B4()
{
  return type metadata accessor for ResponseCatalogDatabase();
}

uint64_t sub_23F57D4BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F6172D0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ResponseCatalogDatabase()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResponseCatalogDatabase.schema()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ResponseCatalogDatabase.prepareEmptyDB(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ResponseCatalogDatabase.databaseVersion(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ResponseCatalogDatabase.close()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ResponseCatalogDatabase.reopen()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ResponseCatalogDatabase.destroyDatabaseQueue()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ResponseCatalogDatabase.migrateDB(_:destinationPath:fromVersion:toNewVersion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

unint64_t sub_23F57D660()
{
  unint64_t result;

  result = qword_256E7B930;
  if (!qword_256E7B930)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E7B930);
  }
  return result;
}

unint64_t sub_23F57D69C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E7B938;
  if (!qword_256E7B938)
  {
    v1 = sub_23F61C658();
    result = MEMORY[0x242670A44](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_256E7B938);
  }
  return result;
}

unint64_t sub_23F57D6DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E7B948;
  if (!qword_256E7B948)
  {
    v1 = sub_23F35EB74(&qword_256E7B940);
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256E7B948);
  }
  return result;
}

unint64_t sub_23F57D720()
{
  unint64_t result;

  result = qword_256E7B950;
  if (!qword_256E7B950)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for SiriResponseDatabaseError, &type metadata for SiriResponseDatabaseError);
    atomic_store(result, (unint64_t *)&qword_256E7B950);
  }
  return result;
}

uint64_t sub_23F57D75C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E7B8D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23F57D79C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_23F57D7B0()
{
  return sub_23F617BA0();
}

uint64_t sub_23F57D7BC()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F57D7CC()
{
  return swift_slowAlloc();
}

uint64_t sub_23F57D7F0()
{
  return swift_beginAccess();
}

void sub_23F57D804(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F37AE00(v3, v4, a3);
}

uint64_t sub_23F57D810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8))(v1, v0);
}

uint64_t sub_23F57D824()
{
  return sub_23F61CC1C();
}

uint64_t sub_23F57D834()
{
  return sub_23F61C790();
}

uint64_t sub_23F57D844()
{
  return sub_23F61C790();
}

uint64_t sub_23F57D854()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F57D864()
{
  return sub_23F61C790();
}

uint64_t sub_23F57D86C()
{
  return sub_23F6172D0();
}

uint64_t sub_23F57D874@<X0>(uint64_t a1@<X1>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 16) = a2;
  return swift_willThrow();
}

uint64_t sub_23F57D880()
{
  return sub_23F619E8C();
}

uint64_t _s30IntelligenceFlowPlannerRuntime24ResponseValidationAssetsCfD_0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResponseGenerationPlistSet()
{
  return objc_opt_self();
}

uint64_t *sub_23F57D8D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B32C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F6170CC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_23F57D978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23F6170CC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_23F57D9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F57DA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F57DACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F57DB48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_23F57DBC4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F57DBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F39E554();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v7 = sub_23F6170CC();
    v8 = v4 + *(int *)(a3 + 20);
  }
  return sub_23F36195C(v8, v3, v7);
}

uint64_t sub_23F57DC2C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F57DC38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_23F39E554();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v9 = sub_23F6170CC();
    v10 = v5 + *(int *)(a4 + 20);
  }
  return sub_23F36196C(v10, v4, v4, v9);
}

uint64_t type metadata accessor for DefaultResponseGenerationInputBuilder()
{
  uint64_t result;

  result = qword_256E7BA88;
  if (!qword_256E7BA88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F57DCD4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    result = sub_23F6170CC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23F57DD58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F35D2E8(&qword_256E70238);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F61B5D8();
  v31 = *(_QWORD *)(v10 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3834D0();
  v30 = v12;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F383780();
  v28 = v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    sub_23F61B2E4();
    sub_23F383D14();
    v17 = a1 + v16;
    v29 = *(_QWORD *)(v18 + 72);
    v25 = a1;
    sub_23F617BA0();
    v19 = MEMORY[0x24BEE4AF8];
    v26 = a2;
    v27 = a3;
    while (1)
    {
      sub_23F5F4F90(v17, a2, a3, (uint64_t)v9);
      if (v3)
        break;
      if (sub_23F36195C((uint64_t)v9, 1, v10) == 1)
      {
        sub_23F3CFCB0((uint64_t)v9, &qword_256E70238);
      }
      else
      {
        v20 = v28;
        sub_23F580688(v28, (uint64_t)v9);
        sub_23F580688(v30, v20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F4F2888();
          v19 = v22;
        }
        v21 = *(_QWORD *)(v19 + 16);
        if (v21 >= *(_QWORD *)(v19 + 24) >> 1)
        {
          sub_23F4F2888();
          v19 = v23;
        }
        *(_QWORD *)(v19 + 16) = v21 + 1;
        sub_23F580688(v19+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v21, v30);
        a2 = v26;
        a3 = v27;
      }
      v17 += v29;
      if (!--v15)
      {
        sub_23F3837B0();
        swift_bridgeObjectRelease();
        return v19;
      }
    }
    sub_23F3837B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F3837B0();
    return MEMORY[0x24BEE4AF8];
  }
  return v19;
}

uint64_t sub_23F57DF94()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F61A0D8();
  sub_23F3F3F64(v0, qword_256E7BA08);
  v1 = sub_23F361498(v0, (uint64_t)qword_256E7BA08);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x24BE54EF0], v0);
}

uint64_t sub_23F57DFEC@<X0>(void (*a1)(_QWORD, _QWORD)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (**v24)(uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (**v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t (**v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  void *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  void (*v67)(uint64_t (**)(uint64_t, uint64_t), uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  os_log_type_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  _QWORD v89[2];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (**v93)(uint64_t, uint64_t);
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t (**v100)(uint64_t, uint64_t);
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(_QWORD, _QWORD);
  uint64_t (**v120)(uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  int v125;
  uint64_t v126;

  v109 = a3;
  v117 = a2;
  v111 = a4;
  sub_23F61A0D8();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v108 = v6;
  sub_23F39C56C();
  v106 = sub_23F6170CC();
  v110 = *(_QWORD *)(v106 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v107 = v8;
  sub_23F39C56C();
  v104 = sub_23F619E98();
  v103 = *(_QWORD *)(v104 - 8);
  sub_23F362850();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383780();
  v92 = v13;
  sub_23F39C56C();
  v115 = sub_23F617D08();
  v113 = *(_QWORD *)(v115 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3834D0();
  v112 = v15;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F383780();
  v114 = v17;
  sub_23F39C56C();
  v18 = sub_23F61A21C();
  v121 = *(_QWORD *)(v18 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3834D0();
  v123 = v20;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F383780();
  v122 = v22;
  sub_23F39C56C();
  v23 = sub_23F61B2C0();
  v24 = *(uint64_t (***)(uint64_t, uint64_t))(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23F61A564();
  v126 = *(_QWORD *)(v27 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F36285C();
  v120 = v29;
  sub_23F35D2E8(&qword_256E7BAC0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F3834D0();
  v102 = v31;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)v89 - v33;
  v116 = sub_23F61A504();
  v105 = *(_QWORD *)(v116 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3834D0();
  v93 = v36;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F383780();
  v118 = v38;
  sub_23F5F44D4();
  if (!v40)
  {
    sub_23F619124();
    v48 = (void *)sub_23F619E8C();
    v49 = sub_23F61C628();
    if (sub_23F40B304(v49))
    {
      *(_WORD *)sub_23F3EEE70() = 0;
      sub_23F40B33C(&dword_23F35A000, v50, v51, "Could not find client request ID in transcript");
      sub_23F40EBA8();
    }

    sub_23F580690((uint64_t)v12, *(uint64_t (**)(uint64_t, _QWORD))(v103 + 8));
    sub_23F57E7E4();
    swift_allocError();
    *v52 = 1;
    return swift_willThrow();
  }
  v97 = v39;
  v96 = v40;
  sub_23F5F4D90();
  if (v42)
    v43 = v41;
  else
    v43 = 0;
  v95 = v43;
  v44 = 0xE000000000000000;
  if (v42)
    v44 = v42;
  v94 = v44;
  v45 = v116;
  v46 = v117;
  v47 = *(_QWORD *)(v117 + 16);
  v119 = a1;
  if (v47 != 2)
  {
LABEL_23:
    if (v47 < 2)
      goto LABEL_26;
    goto LABEL_24;
  }
  v90 = 2;
  sub_23F3702BC(v117, (uint64_t)v34);
  if (sub_23F36195C((uint64_t)v34, 1, v45) == 1)
  {
    sub_23F3CFCB0((uint64_t)v34, &qword_256E7BAC0);
LABEL_24:
    v23 = v102;
    sub_23F3F1554(v46, v102);
    if (sub_23F36195C(v23, 1, v45) != 1)
    {
      v66 = v105;
      v67 = *(void (**)(uint64_t (**)(uint64_t, uint64_t), uint64_t, uint64_t))(v105 + 32);
      v24 = v93;
      v67(v93, v23, v45);
      sub_23F35D2E8(&qword_256E70108);
      v68 = *(unsigned __int8 *)(v66 + 80);
      v69 = v45;
      v70 = (v68 + 32) & ~v68;
      v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = xmmword_23F61E7E0;
      v67((uint64_t (**)(uint64_t, uint64_t))(v71 + v70), (uint64_t)v24, v69);
      a1 = v119;
      goto LABEL_28;
    }
    sub_23F3CFCB0(v23, &qword_256E7BAC0);
LABEL_26:
    sub_23F617BA0();
LABEL_28:
    sub_23F580638();
    goto LABEL_29;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v105 + 32))(v118, v34, v45);
  v54 = sub_23F61B14C();
  v55 = *(_QWORD *)(v54 + 16);
  if (!v55)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    v45 = v116;
    v46 = v117;
    v64 = sub_23F580668();
    v65(v64, v45);
    v47 = v90;
    goto LABEL_23;
  }
  sub_23F61B2E4();
  sub_23F383D14();
  v89[1] = v54;
  v34 = (char *)(v54 + v56);
  v125 = *MEMORY[0x24BE56B50];
  v101 = *MEMORY[0x24BE551B8];
  v124 = *(_QWORD *)(v57 + 72);
  v91 = v18;
  v100 = v24;
  v99 = v26;
  v98 = v23;
  while (1)
  {
    sub_23F61B2CC();
    v58 = v24[11]((uint64_t)v26, v23);
    if (v58 != v125)
    {
      sub_23F58067C(v24[1]);
      goto LABEL_21;
    }
    sub_23F58067C(v24[12]);
    v24 = v120;
    (*(void (**)(uint64_t (**)(uint64_t, uint64_t), char *, uint64_t))(v126 + 32))(v120, v26, v27);
    v23 = v122;
    sub_23F61A558();
    v59 = v121;
    v26 = v123;
    (*(void (**)(char *, _QWORD, uint64_t))(v121 + 104))(v123, v101, v18);
    v60 = MEMORY[0x24266D720](v23, v26);
    a1 = *(void (**)(_QWORD, _QWORD))(v59 + 8);
    a1(v26, v18);
    a1(v23, v18);
    if ((v60 & 1) == 0)
    {
      sub_23F580654();
      sub_23F580618();
      goto LABEL_21;
    }
    v61 = v114;
    sub_23F61A534();
    v23 = v112;
    sub_23F61A480();
    v62 = sub_23F617CD8();
    a1 = *(void (**)(_QWORD, _QWORD))(v113 + 8);
    v26 = (char *)v115;
    a1(v23, v115);
    v63 = v61;
    v18 = v91;
    a1(v63, v26);
    sub_23F580654();
    sub_23F580618();
    if ((v62 & 1) != 0)
      break;
LABEL_21:
    v34 += v124;
    if (!--v55)
      goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  v74 = v92;
  sub_23F619124();
  v75 = (void *)sub_23F619E8C();
  v76 = sub_23F61C61C();
  if (sub_23F40B304(v76))
  {
    *(_WORD *)sub_23F3EEE70() = 0;
    sub_23F40B33C(&dword_23F35A000, v78, v79, "Correction, dropping undo statement result");
    sub_23F40EBA8();
  }

  sub_23F580690(v74, *(uint64_t (**)(uint64_t, _QWORD))(v103 + 8));
  v24 = (uint64_t (**)(uint64_t, uint64_t))v117;
  v80 = sub_23F510E00(1, v117);
  v82 = v81;
  v84 = v83;
  v86 = v85;
  sub_23F617BA0();
  sub_23F51069C(v80, v82, v84, v86);
  v87 = sub_23F580668();
  v88(v87, v116);
  sub_23F580638();
  a1 = v119;
LABEL_29:
  MEMORY[0x24BDAC7A8](v72);
  v89[-2] = a1;
  v89[-1] = v23;
  sub_23F3682BC();
  swift_bridgeObjectRelease();
  v73 = type metadata accessor for DefaultResponseGenerationInputBuilder();
  (*(void (**)(char *, uint64_t, char *))(v110 + 16))(v34, v23 + *(int *)(v73 + 20), v26);
  sub_23F580118((uint64_t)v24, v27);
  return sub_23F61AD80();
}

unint64_t sub_23F57E7E4()
{
  unint64_t result;

  result = qword_256E7BAC8;
  if (!qword_256E7BAC8)
  {
    result = MEMORY[0x242670A44](&unk_23F62E240, &type metadata for DefaultResponseGenerationInputBuilder.ResponseGenerationInputBuilderError);
    atomic_store(result, (unint64_t *)&qword_256E7BAC8);
  }
  return result;
}

uint64_t sub_23F57E820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (**v61)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  BOOL v68;
  unsigned int (**v69)(char *, uint64_t);
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint8_t *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  NSObject *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  char *v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  os_log_t v99;
  NSObject *v100;
  NSObject *v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  _QWORD *v105;
  NSObject *v106;
  uint64_t v107;
  os_log_t v108;
  uint64_t v109;
  unsigned int (*v110)(char *, uint64_t);
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  int v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, uint64_t);
  char *v134;
  char *v135;
  char v136;
  void (*v137)(char *, uint64_t);
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint8_t *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  void (*v162)(char *, uint64_t);
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  os_log_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unsigned int (**v180)(char *, uint64_t);
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193[8];

  v166 = a3;
  v160 = a4;
  v6 = sub_23F617D08();
  v177 = *(_QWORD *)(v6 - 8);
  v178 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v176 = (char *)&v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v175 = (char *)&v147 - v9;
  v190 = sub_23F61A21C();
  v186 = *(_QWORD *)(v190 - 8);
  v10 = MEMORY[0x24BDAC7A8](v190);
  v185 = (char *)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v184 = (char *)&v147 - v12;
  v13 = sub_23F61B2C0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v189 = (char *)&v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F61A564();
  v187 = *(_QWORD *)(v16 - 8);
  v188 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v154 = (char *)&v147 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F35D2E8(&qword_256E73D28);
  MEMORY[0x24BDAC7A8](v18);
  v159 = (char *)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_23F61A504();
  v165 = *(_QWORD *)(v157 - 8);
  MEMORY[0x24BDAC7A8](v157);
  v173 = (char *)&v147 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F35D2E8(&qword_256E7BAD8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v158 = (char *)&v147 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v172 = (uint64_t)&v147 - v24;
  v156 = sub_23F619E98();
  v155 = *(_QWORD *)(v156 - 8);
  v25 = MEMORY[0x24BDAC7A8](v156);
  v149 = (char *)&v147 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v150 = (char *)&v147 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v153 = (uint64_t)&v147 - v29;
  v192 = sub_23F618134();
  v180 = *(unsigned int (***)(char *, uint64_t))(v192 - 8);
  v30 = MEMORY[0x24BDAC7A8](v192);
  v164 = (char *)&v147 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v183 = (char *)&v147 - v32;
  v191 = sub_23F61ACA8();
  v162 = *(void (**)(char *, uint64_t))(v191 - 8);
  v33 = MEMORY[0x24BDAC7A8](v191);
  v163 = (char *)&v147 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v161 = (char *)&v147 - v35;
  v36 = sub_23F35D2E8(&qword_256E70238);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v171 = (uint64_t)&v147 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v148 = (char *)&v147 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v152 = (uint8_t *)&v147 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v151 = (uint64_t)&v147 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v174 = (uint64_t)&v147 - v45;
  v46 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v46);
  v48 = (char *)&v147 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_23F617000();
  v50 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v52 = (char *)&v147 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_23F35D2E8(&qword_256E70230);
  v54 = MEMORY[0x24BDAC7A8](v53);
  v170 = (uint64_t)&v147 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v54);
  v57 = (char *)&v147 - v56;
  v179 = a1;
  sub_23F61A4C8();
  v58 = sub_23F36195C((uint64_t)v48, 1, v49);
  v168 = v57;
  v167 = a2;
  if (v58 == 1)
  {
    sub_23F3CFCB0((uint64_t)v48, &qword_256E6FB20);
    v59 = sub_23F61B0BC();
    sub_23F36196C((uint64_t)v57, 1, 1, v59);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v52, v48, v49);
    sub_23F428830((uint64_t)v57);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v49);
  }
  v60 = v179;
  v61 = v180;
  v62 = v174;
  v63 = v183;
  v64 = v162;
  v65 = sub_23F61B5D8();
  sub_23F36196C(v62, 1, 1, v65);
  v66 = v161;
  sub_23F61A4F8();
  sub_23F61AC78();
  v67 = (void (*)(char *, uint64_t))*((_QWORD *)v64 + 1);
  v67(v66, v191);
  v68 = v61[11](v63, v192) == *MEMORY[0x24BE532E0];
  v162 = v67;
  if (v68)
  {
    v69 = v61;
    v70 = v153;
    sub_23F619124();
    v71 = sub_23F619E8C();
    v72 = sub_23F61C61C();
    v73 = v60;
    if (os_log_type_enabled(v71, v72))
    {
      v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v74 = 0;
      _os_log_impl(&dword_23F35A000, v71, v72, "No tool definition for a tool disambiguation", v74, 2u);
      v73 = v179;
      MEMORY[0x242670B70](v74, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v70, v156);
    v75 = v157;
    goto LABEL_14;
  }
  v76 = v63;
  v77 = sub_23F61A4E0();
  v161 = v78;
  v73 = v60;
  if (!v78)
    goto LABEL_20;
  v79 = v77;
  v80 = sub_23F61B14C();
  v81 = v161;
  sub_23F617BA0();
  v82 = (uint64_t)v81;
  v83 = v169;
  v84 = sub_23F57DD58(v80, v79, v82);
  v153 = v65;
  v85 = v84;
  swift_bridgeObjectRelease();
  v86 = v151;
  sub_23F3F1334(v85, v151);
  swift_bridgeObjectRelease();
  v87 = v174;
  sub_23F3CFCB0(v174, &qword_256E70238);
  sub_23F58047C(v86, v87);
  v88 = v87;
  v89 = (uint64_t)v152;
  sub_23F4AB408(v88, (uint64_t)v152, &qword_256E70238);
  v90 = sub_23F36195C(v89, 1, v153);
  v169 = v83;
  if (v90 != 1)
  {
    swift_bridgeObjectRelease();
    sub_23F3CFCB0(v89, &qword_256E70238);
    v75 = v157;
    v69 = v180;
LABEL_14:
    v76 = v183;
    goto LABEL_24;
  }
  v151 = v79;
  sub_23F3CFCB0(v89, &qword_256E70238);
  v91 = v150;
  sub_23F619124();
  swift_bridgeObjectRetain_n();
  v92 = sub_23F619E8C();
  v93 = sub_23F61C61C();
  if (os_log_type_enabled(v92, v93))
  {
    v94 = (uint8_t *)swift_slowAlloc();
    v95 = swift_slowAlloc();
    v193[0] = v95;
    *(_DWORD *)v94 = 136315138;
    v152 = v94 + 4;
    v96 = (uint64_t)v161;
    sub_23F617BA0();
    sub_23F37AE00(v151, v96, v193);
    v193[7] = v97;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23F35A000, v92, v93, "Could not find tool definition for %s in transcript", v94, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v95, -1, -1);
    MEMORY[0x242670B70](v94, -1, -1);

    v155 = *(_QWORD *)(v155 + 8);
    ((void (*)(char *, uint64_t))v155)(v150, v156);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v155 = *(_QWORD *)(v155 + 8);
    ((void (*)(char *, uint64_t))v155)(v91, v156);
  }
  v98 = (uint64_t)v148;
  v76 = v183;
  sub_23F61B2FC();
  sub_23F35EA9C(v193, v193[3]);
  v99 = v169;
  sub_23F61A024();
  if (v99)
  {
    swift_bridgeObjectRelease();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v193);
    sub_23F619124();
    v100 = v99;
    v101 = v99;
    v102 = sub_23F619E8C();
    v103 = sub_23F61C628();
    if (os_log_type_enabled(v102, v103))
    {
      v104 = (uint8_t *)swift_slowAlloc();
      v105 = (_QWORD *)swift_slowAlloc();
      v169 = v102;
      *(_DWORD *)v104 = 138412290;
      v161 = (char *)(v104 + 4);
      v106 = v99;
      v107 = _swift_stdlib_bridgeErrorToNSError();
      v193[0] = v107;
      sub_23F61C790();
      *v105 = v107;

      v108 = v169;
      _os_log_impl(&dword_23F35A000, v169, v103, "Error querying tool database: %@", v104, 0xCu);
      sub_23F35D2E8(&qword_256E6FAB0);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v105, -1, -1);
      MEMORY[0x242670B70](v104, -1, -1);

    }
    else
    {

    }
    v73 = v179;
    v75 = v157;
    ((void (*)(char *, uint64_t))v155)(v149, v156);
    v169 = 0;
    goto LABEL_23;
  }
  v169 = 0;
  v109 = v174;
  sub_23F3CFCB0(v174, &qword_256E70238);
  swift_bridgeObjectRelease();
  sub_23F36196C(v98, 0, 1, v153);
  sub_23F58047C(v98, v109);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v193);
  v73 = v179;
LABEL_20:
  v75 = v157;
LABEL_23:
  v69 = v180;
LABEL_24:
  v110 = v69[1];
  v111 = v76;
  v112 = v192;
  v110(v111, v192);
  v113 = v163;
  sub_23F61A4F8();
  v114 = (uint64_t)v164;
  sub_23F61AC78();
  v162(v113, v191);
  sub_23F57F8EC(v114, v172);
  v110((char *)v114, v112);
  v115 = v174;
  sub_23F4AB408(v174, v171, &qword_256E70238);
  v116 = (uint64_t)v168;
  sub_23F4AB408((uint64_t)v168, v170, &qword_256E70230);
  (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v173, v73, v75);
  v117 = sub_23F61B14C();
  v118 = *(_QWORD *)(v117 + 16);
  if (v118)
  {
    v119 = *(_QWORD *)(sub_23F61B2E4() - 8);
    v120 = (*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
    v167 = v117;
    v121 = v117 + v120;
    LODWORD(v192) = *MEMORY[0x24BE56B50];
    LODWORD(v183) = *MEMORY[0x24BE551B8];
    v191 = *(_QWORD *)(v119 + 72);
    v123 = v188;
    v122 = v189;
    v124 = v187;
    v125 = v154;
    v181 = v14;
    v182 = v13;
    do
    {
      sub_23F61B2CC();
      v126 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v122, v13);
      if (v126 == (_DWORD)v192)
      {
        (*(void (**)(char *, uint64_t))(v14 + 96))(v122, v13);
        (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v125, v122, v123);
        v127 = v125;
        v128 = v184;
        v129 = v127;
        sub_23F61A558();
        v130 = v185;
        v131 = v186;
        v132 = v190;
        v180 = *(unsigned int (***)(char *, uint64_t))(v186 + 104);
        ((void (*)(char *, _QWORD, uint64_t))v180)(v185, v183, v190);
        LOBYTE(v127) = MEMORY[0x24266D720](v128, v130);
        v133 = *(void (**)(char *, uint64_t))(v131 + 8);
        v133(v130, v132);
        v133(v128, v132);
        if ((v127 & 1) != 0)
        {
          v134 = v175;
          v125 = v129;
          sub_23F61A534();
          v135 = v176;
          sub_23F61A480();
          v136 = sub_23F617CD8();
          v137 = *(void (**)(char *, uint64_t))(v177 + 8);
          v138 = v135;
          v139 = v178;
          v137(v138, v178);
          v137(v134, v139);
          v124 = v187;
          v140 = v129;
          v123 = v188;
          (*(void (**)(char *, uint64_t))(v187 + 8))(v140, v188);
          v14 = v181;
          v13 = v182;
          v122 = v189;
          if ((v136 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v145 = (uint64_t)v159;
            ((void (*)(char *, _QWORD, uint64_t))v180)(v159, v183, v190);
            v146 = 0;
            goto LABEL_34;
          }
        }
        else
        {
          v124 = v187;
          v125 = v129;
          v141 = v129;
          v123 = v188;
          (*(void (**)(char *, uint64_t))(v187 + 8))(v141, v188);
          v14 = v181;
          v13 = v182;
          v122 = v189;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v14 + 8))(v122, v13);
      }
      v121 += v191;
      --v118;
    }
    while (v118);
    swift_bridgeObjectRelease();
    v146 = 1;
    v145 = (uint64_t)v159;
LABEL_34:
    v142 = (uint64_t)v158;
    v115 = v174;
    v116 = (uint64_t)v168;
  }
  else
  {
    swift_bridgeObjectRelease();
    v146 = 1;
    v145 = (uint64_t)v159;
    v142 = (uint64_t)v158;
  }
  sub_23F36196C(v145, v146, 1, v190);
  v143 = v172;
  sub_23F4AB408(v172, v142, &qword_256E7BAD8);
  sub_23F61AB64();
  sub_23F3CFCB0(v143, &qword_256E7BAD8);
  sub_23F3CFCB0(v115, &qword_256E70238);
  return sub_23F3CFCB0(v116, &qword_256E70230);
}

uint64_t sub_23F57F8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v52[5];
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  uint64_t v74;

  v70 = a2;
  v71 = a1;
  v56 = sub_23F619E98();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v57 = (char *)v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F35D2E8(&qword_256E70A68);
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v61 = (_QWORD *)((char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = sub_23F61BBD8();
  v60 = *(_QWORD *)(v69 - 8);
  v5 = MEMORY[0x24BDAC7A8](v69);
  v59 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v68 = (char *)v52 - v7;
  v8 = sub_23F35D2E8(&qword_256E70A70);
  MEMORY[0x24BDAC7A8](v8);
  v64 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F61B92C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F61B9EC();
  v15 = *(_QWORD *)(v14 - 8);
  v65 = v14;
  v66 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F618134();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23F617DD4();
  v67 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)v52 - v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v71, v18);
  if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v21, v18) == *MEMORY[0x24BE53328])
  {
    v52[3] = v25;
    (*(void (**)(char *, uint64_t))(v19 + 96))(v21, v18);
    v28 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
    v53 = v22;
    v28(v27, v21, v22);
    sub_23F617DA4();
    v29 = v17;
    v54 = v17;
    sub_23F61B8CC();
    v30 = *(void (**)(char *, uint64_t))(v11 + 8);
    v52[1] = v13;
    v52[2] = v10;
    v30(v13, v10);
    sub_23F61B2FC();
    v58 = v73;
    v71 = v74;
    v52[4] = sub_23F35EA9C(v72, v73);
    v31 = v59;
    sub_23F61BBB4();
    swift_getKeyPath();
    v32 = v65;
    v33 = swift_allocBox();
    v34 = v66;
    (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v35, v29, v32);
    v36 = v61;
    v37 = v62;
    *v61 = v33;
    v38 = v63;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v37 + 104))(v36, *MEMORY[0x24BEB8F00], v63);
    sub_23F424268();
    sub_23F4242A8();
    sub_23F61B6A4();
    swift_release();
    (*(void (**)(uint64_t *, uint64_t))(v37 + 8))(v36, v38);
    v39 = *(void (**)(char *, uint64_t))(v60 + 8);
    v39(v31, v69);
    v40 = (uint64_t)v64;
    sub_23F61A018();
    v41 = v32;
    v42 = v53;
    v45 = v27;
    v46 = v54;
    v39(v68, v69);
    v47 = sub_23F61B998();
    v48 = sub_23F36195C(v40, 1, v47);
    v49 = v70;
    v50 = v67;
    if (v48 != 1)
    {
      sub_23F61B98C();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v46, v41);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v45, v42);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v40, v47);
      return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v72);
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v46, v41);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v45, v42);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v72);
    sub_23F3CFCB0(v40, &qword_256E70A70);
    v43 = sub_23F61BD28();
    v44 = v49;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v43 = sub_23F61BD28();
    v44 = v70;
  }
  return sub_23F36196C(v44, 1, 1, v43);
}

uint64_t sub_23F580118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _QWORD *v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_23F619E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E7BAD0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F4AB408(a1, (uint64_t)v10, &qword_256E7BAD0);
  v11 = sub_23F61A0D8();
  if (sub_23F36195C((uint64_t)v10, 1, v11) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a2, v10, v11);
  sub_23F3CFCB0((uint64_t)v10, &qword_256E7BAD0);
  sub_23F619124();
  v12 = sub_23F619E8C();
  v13 = sub_23F61C628();
  v14 = &qword_256E6F000;
  if (os_log_type_enabled(v12, v13))
  {
    v23 = a2;
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v25 = v16;
    *(_DWORD *)v15 = 136315138;
    if (qword_256E6F0B0 != -1)
      swift_once();
    sub_23F361498(v11, (uint64_t)qword_256E7BA08);
    v17 = sub_23F61A0C0();
    sub_23F37AE00(v17, v18, &v25);
    v24 = v19;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F35A000, v12, v13, "No response mode, defaulting to %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242670B70](v16, -1, -1);
    MEMORY[0x242670B70](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    a2 = v23;
    v14 = &qword_256E6F000;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (v14[22] != -1)
    swift_once();
  v21 = sub_23F361498(v11, (uint64_t)qword_256E7BA08);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a2, v21, v11);
}

uint64_t sub_23F5803DC()
{
  sub_23F5805DC();
  return sub_23F61CCAC();
}

uint64_t sub_23F580404()
{
  sub_23F5805DC();
  return sub_23F61CCA0();
}

uint64_t sub_23F58042C()
{
  uint64_t v0;

  v0 = qword_256E7BA20;
  sub_23F617BA0();
  return v0;
}

uint64_t sub_23F580460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23F57E820(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23F58047C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70238);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for DefaultResponseGenerationInputBuilder.ResponseGenerationInputBuilderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F580518 + 4 * byte_23F62E0D5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F58054C + 4 * asc_23F62E0D0[v4]))();
}

uint64_t sub_23F58054C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F580554(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F58055CLL);
  return result;
}

uint64_t sub_23F580568(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F580570);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23F580574(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F58057C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DefaultResponseGenerationInputBuilder.ResponseGenerationInputBuilderError()
{
  return &type metadata for DefaultResponseGenerationInputBuilder.ResponseGenerationInputBuilderError;
}

unint64_t sub_23F5805A0()
{
  unint64_t result;

  result = qword_256E7BAE0;
  if (!qword_256E7BAE0)
  {
    result = MEMORY[0x242670A44](&unk_23F62E218, &type metadata for DefaultResponseGenerationInputBuilder.ResponseGenerationInputBuilderError);
    atomic_store(result, (unint64_t *)&qword_256E7BAE0);
  }
  return result;
}

unint64_t sub_23F5805DC()
{
  unint64_t result;

  result = qword_256E7BAE8;
  if (!qword_256E7BAE8)
  {
    result = MEMORY[0x242670A44](&unk_23F62E198, &type metadata for DefaultResponseGenerationInputBuilder.ResponseGenerationInputBuilderError);
    atomic_store(result, (unint64_t *)&qword_256E7BAE8);
  }
  return result;
}

uint64_t sub_23F580654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v0, v1);
}

uint64_t sub_23F580668()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 160);
}

uint64_t sub_23F58067C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F580688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F580690@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 288));
}

void sub_23F58069C()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 16))
  {
    type metadata accessor for ResponseGenerationBiomeRoot.Generation(0);
    sub_23F3668A0();
    sub_23F5855C0();
    *(_QWORD *)(v0 + 16) = sub_23F581CA8();
    swift_retain();
    sub_23F3D9AF4();
  }
  swift_retain();
  sub_23F362B80();
}

void sub_23F5806F8()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + 32))
  {
    type metadata accessor for ResponseGenerationBiomeRoot.Fallback(0);
    swift_retain();
    sub_23F580758();
    *(_QWORD *)(v0 + 32) = v1;
    swift_retain();
    sub_23F366748();
  }
  swift_retain();
  sub_23F362B80();
}

void sub_23F580758()
{
  uint64_t v0;

  *(_QWORD *)(swift_allocObject()
            + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot8Fallback_reason) = 0;
  v0 = sub_23F5855B0();
  sub_23F585554(v0);
  sub_23F581220();
  sub_23F362B80();
}

void sub_23F5807B4()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 40))
  {
    type metadata accessor for ResponseGenerationBiomeRoot.Override(0);
    sub_23F3668A0();
    sub_23F5855C0();
    *(_QWORD *)(v0 + 40) = sub_23F582594();
    swift_retain();
    sub_23F3D9AF4();
  }
  swift_retain();
  sub_23F362B80();
}

void sub_23F580810()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 56))
  {
    type metadata accessor for ResponseGenerationBiomeRoot.ModelInference(0);
    sub_23F3668A0();
    sub_23F5855C0();
    *(_QWORD *)(v0 + 56) = sub_23F5829E0();
    swift_retain();
    sub_23F3D9AF4();
  }
  swift_retain();
  sub_23F362B80();
}

void sub_23F58086C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (!*(_QWORD *)(v0 + 64))
  {
    type metadata accessor for ResponseGenerationBiomeRoot.HallucinationDetection(0);
    v1 = sub_23F3668A0()
       + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot22HallucinationDetection_telemetryContext;
    v2 = sub_23F61ADBC();
    sub_23F585554(v2);
    v3 = v1 + *(int *)(type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext(0) + 20);
    v4 = sub_23F617000();
    sub_23F3838D8(v3, v5, v6, v4);
    swift_retain();
    *(_QWORD *)(v0 + 64) = sub_23F581220();
    swift_retain();
    sub_23F3D9AF4();
  }
  swift_retain();
  sub_23F362B80();
}

uint64_t sub_23F580918@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v3 = v1 + 80;
  result = sub_23F3C08CC();
  if (*(_QWORD *)(v1 + 104) > 1uLL)
  {
    result = sub_23F361418(v1 + 80, (uint64_t)&v11);
  }
  else
  {
    v5 = *(_OWORD *)(v1 + 96);
    v11 = *(_OWORD *)v3;
    v12 = v5;
    v13 = *(_QWORD *)(v1 + 112);
  }
  if (!*((_QWORD *)&v12 + 1))
  {
    v6 = (unint64_t)v12;
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = v13;
    return result;
  }
  if (*((_QWORD *)&v12 + 1) != 1)
    return sub_23F362678(&v11, a1);
  sub_23F580A68();
  if (*(_QWORD *)(a1 + 24))
  {
    sub_23F361418(a1, (uint64_t)&v11);
  }
  else
  {
    v7 = *(_OWORD *)(a1 + 16);
    v11 = *(_OWORD *)a1;
    v12 = v7;
    v13 = *(_QWORD *)(a1 + 32);
  }
  sub_23F3B1450();
  v8 = *(_QWORD *)(v1 + 104);
  v9 = *((_QWORD *)&v12 + 1);
  if (v8 != 1)
  {
    if (*((_QWORD *)&v12 + 1) == 1)
    {
      if (v8)
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v3);
    }
    else
    {
      if (v8)
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v3);
      if (v9)
        goto LABEL_20;
    }
LABEL_21:
    v10 = v12;
    *(_OWORD *)v3 = v11;
    *(_OWORD *)(v3 + 16) = v10;
    *(_QWORD *)(v3 + 32) = v13;
    return swift_endAccess();
  }
  if (*((_QWORD *)&v12 + 1) < 2uLL)
    goto LABEL_21;
LABEL_20:
  sub_23F362678(&v11, v3);
  return swift_endAccess();
}

uint64_t sub_23F580A68()
{
  uint64_t v0;

  v0 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F619D00();
  sub_23F3612C0(&qword_256E7C7C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE597F0], MEMORY[0x24BE597E8]);
  return sub_23F619D30();
}

uint64_t sub_23F580C94()
{
  uint64_t result;
  _QWORD v1[4];
  _BYTE v2[24];
  uint64_t v3;

  result = sub_23F580918((uint64_t)v2);
  if (v3)
  {
    sub_23F361418((uint64_t)v2, (uint64_t)v1);
    if (v3)
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v2);
    sub_23F35EA9C(v1, v1[3]);
    sub_23F619DB4();
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v1);
  }
  return result;
}

uint64_t sub_23F580D18()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 104) >= 2uLL)
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 80);
  return v0;
}

uint64_t sub_23F580D80()
{
  sub_23F580D18();
  return swift_deallocClassInstance();
}

double sub_23F580DA0()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 96) = 0;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v0 + 104) = xmmword_23F62E280;
  return result;
}

void sub_23F580DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  _QWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t *v57;

  sub_23F362ABC();
  v2 = v1;
  sub_23F35D2E8(&qword_256E7C7A0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v57 = (uint64_t *)v4;
  sub_23F39C56C();
  v5 = sub_23F6193B8();
  v56 = *(_QWORD *)(v5 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3834D0();
  v54 = v7;
  MEMORY[0x24BDAC7A8](v8);
  v55 = (char *)&v51 - v9;
  sub_23F39C56C();
  v10 = sub_23F619340();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383A54();
  v12 = sub_23F61ADB0();
  sub_23F36196C(v2, 1, 1, v12);
  v13 = (int *)sub_23F58556C();
  v15 = (uint64_t *)(v2 + v14);
  *v15 = 0;
  v15[1] = 0;
  v16 = (uint64_t *)(v2 + v13[6]);
  *v16 = 0;
  v16[1] = 0;
  v53 = v16;
  v17 = (_QWORD *)(v2 + v13[7]);
  *v17 = 0;
  v17[1] = 0;
  v51 = v17;
  v18 = (_OWORD *)(v2 + v13[8]);
  *v18 = 0u;
  v18[1] = 0u;
  v52 = v18;
  sub_23F58069C();
  v20 = v19 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_input;
  sub_23F3B1450();
  sub_23F3625D8(v2, &qword_256E7BAF0);
  sub_23F382EF8(v20, v2, &qword_256E7BAF0);
  swift_endAccess();
  swift_release();
  sub_23F58069C();
  v22 = v21 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_source;
  sub_23F3C08CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v0, v22, v10);
  sub_23F366748();
  v23 = sub_23F619334();
  v25 = v24;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v10);
  swift_bridgeObjectRelease();
  *v15 = v23;
  v15[1] = v25;
  sub_23F5806F8();
  sub_23F3C08CC();
  v26 = v56;
  v27 = *(void (**)(void))(v56 + 16);
  v28 = v55;
  v27();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v26 + 88))(v28, v5) != *MEMORY[0x24BE58E10])
  {
    v29 = *(void (**)(char *, uint64_t))(v26 + 8);
    v29(v28, v5);
    sub_23F5806F8();
    v31 = v30 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot8Fallback_reason;
    sub_23F3C08CC();
    v32 = v54;
    ((void (*)(char *, uint64_t, uint64_t))v27)(v54, v31, v5);
    sub_23F366748();
    v33 = sub_23F6193AC();
    v35 = v34;
    v29(v32, v5);
    v36 = v53;
    swift_bridgeObjectRelease();
    *v36 = v33;
    v36[1] = v35;
  }
  sub_23F5807B4();
  v38 = v37 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot8Override_override;
  sub_23F3C08CC();
  v39 = v57;
  sub_23F382EF8(v38, (uint64_t)v57, &qword_256E7C7A0);
  sub_23F366748();
  v40 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  if (sub_23F36195C((uint64_t)v39, 1, v40))
  {
    sub_23F3625D8((uint64_t)v39, &qword_256E7C7A0);
  }
  else
  {
    v41 = *v39;
    v42 = v39[1];
    sub_23F383738();
    sub_23F3625D8((uint64_t)v39, &qword_256E7C7A0);
    v43 = v51;
    swift_bridgeObjectRelease();
    *v43 = v41;
    v43[1] = v42;
  }
  sub_23F580810();
  v46 = *(_QWORD *)(v44
                  + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot14ModelInference_prompt);
  v45 = *(_QWORD *)(v44
                  + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot14ModelInference_prompt
                  + 8);
  sub_23F617BA0();
  sub_23F366748();
  if (v45)
  {
    sub_23F580810();
    v49 = *(_QWORD *)(v47
                    + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot14ModelInference_promptVersion);
    v48 = *(_QWORD *)(v47
                    + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot14ModelInference_promptVersion
                    + 8);
    sub_23F617BA0();
    sub_23F366748();
    if (v48)
    {
      v50 = v52;
      sub_23F585618();
      *v50 = v46;
      v50[1] = v45;
      v50[2] = v49;
      v50[3] = v48;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_23F362948();
}

double ResponseGenerationTriageReport.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _OWORD *v8;
  double result;

  v2 = sub_23F61ADB0();
  sub_23F36196C(a1, 1, 1, v2);
  v3 = (int *)sub_23F58556C();
  v5 = (_QWORD *)(a1 + v4);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(a1 + v3[6]);
  *v6 = 0;
  v6[1] = 0;
  v7 = (_QWORD *)(a1 + v3[7]);
  *v7 = 0;
  v7[1] = 0;
  v8 = (_OWORD *)(a1 + v3[8]);
  result = 0.0;
  *v8 = 0u;
  v8[1] = 0u;
  return result;
}

uint64_t type metadata accessor for ResponseGenerationTriageReport(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7C688);
}

IntelligenceFlowPlannerRuntime::ResponseGenerationTriageReport::ModelInference __swiftcall ResponseGenerationTriageReport.ModelInference.init(prompt:promptVersion:)(Swift::String prompt, Swift::String promptVersion)
{
  Swift::String *v2;
  IntelligenceFlowPlannerRuntime::ResponseGenerationTriageReport::ModelInference result;

  *v2 = prompt;
  v2[1] = promptVersion;
  result.promptVersion = promptVersion;
  result.prompt = prompt;
  return result;
}

uint64_t sub_23F581218()
{
  return swift_weakLoadStrong();
}

uint64_t sub_23F581220()
{
  uint64_t v0;

  swift_weakInit();
  swift_weakAssign();
  swift_release();
  return v0;
}

uint64_t sub_23F58125C()
{
  sub_23F58554C();
  return swift_deallocClassInstance();
}

uint64_t sub_23F58127C()
{
  uint64_t result;

  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23F580C94();
    return swift_release();
  }
  return result;
}

void sub_23F5812C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  sub_23F362ABC();
  v50 = v0;
  v5 = v4;
  v6 = sub_23F619E98();
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3E2718();
  sub_23F35D2E8(&qword_256E73E10);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3834D0();
  v49 = v9;
  MEMORY[0x24BDAC7A8](v10);
  v48 = (uint64_t)&v42 - v11;
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v47 = v13;
  sub_23F39C56C();
  sub_23F617000();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  v44 = v15;
  sub_23F39C56C();
  v16 = sub_23F619310();
  v45 = *(_QWORD *)(v16 - 8);
  v46 = v16;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F3B1F34();
  sub_23F35D2E8(&qword_256E7C7B8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F362AAC();
  v21 = v19 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v42 - v23;
  sub_23F35D2E8(&qword_256E702E0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F38F964();
  v28 = v27 - v26;
  v29 = sub_23F61B2E4();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  sub_23F3B1590();
  v31 = sub_23F61B14C();
  sub_23F3F1328(v31, v28);
  swift_bridgeObjectRelease();
  if (sub_23F36195C(v28, 1, v29) == 1)
  {
    v33 = v42;
    v32 = v43;
    sub_23F3625D8(v28, &qword_256E702E0);
    sub_23F619124();
    v34 = sub_23F619E8C();
    v35 = sub_23F61C628();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_23F35A000, v34, v35, "Transcript has no event.", v36, 2u);
      MEMORY[0x242670B70](v36, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v3, v32);
  }
  else
  {
    sub_23F38426C(v1, v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 32));
    v37 = sub_23F61B164();
    sub_23F384918((uint64_t)v24, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16));
    sub_23F585510((uint64_t)v24);
    sub_23F383004((uint64_t)v24, v21, &qword_256E7C7B8);
    v38 = v50 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_transcript;
    sub_23F3B1450();
    sub_23F3E2674(v21, v38, &qword_256E7C7B8);
    swift_endAccess();
    sub_23F619304();
    sub_23F61A7D4();
    sub_23F5854C4((uint64_t)&v51);
    sub_23F6192EC();
    sub_23F61B2D8();
    sub_23F6192F8();
    sub_23F61B224();
    sub_23F6192BC();
    sub_23F61B200();
    sub_23F6192C8();
    sub_23F61B254();
    sub_23F6192D4();
    sub_23F61B218();
    sub_23F6192E0();
    sub_23F61B1F4();
    sub_23F6192B0();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v1, v29);
    v39 = v46;
    v40 = v48;
    sub_23F38426C(v48, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 32));
    sub_23F36196C(v40, 0, 1, v39);
    v41 = v49;
    sub_23F383004(v40, v49, &qword_256E73E10);
    sub_23F3B1450();
    sub_23F585654(v41);
    swift_endAccess();
  }
  sub_23F362948();
}

void sub_23F5816DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_23F362ABC();
  v39 = v6;
  sub_23F35D2E8(&qword_256E7C798);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B1590();
  sub_23F35D2E8(&qword_256E73E10);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  v41 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v10 = sub_23F619448();
  v42 = *(_QWORD *)(v10 - 8);
  v43 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F4A0F08();
  v12 = sub_23F616BA4();
  v37 = *(_QWORD *)(v12 - 8);
  v38 = v12;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v36 = v14;
  sub_23F35D2E8(&qword_256E72CB8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F362838();
  sub_23F35D2E8(&qword_256E72CC0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3E2718();
  sub_23F35D2E8(&qword_256E7C7C8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F3B1C68();
  v40 = sub_23F619370();
  v18 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  sub_23F3845CC();
  sub_23F619364();
  v44 = v1;
  v19 = v1 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_source;
  sub_23F3C08CC();
  v20 = sub_23F5855B8();
  sub_23F384918(v3, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16));
  sub_23F585510(v3);
  MEMORY[0x24266C85C](v3);
  sub_23F618098();
  v21 = sub_23F617F9C();
  if (sub_23F36195C(v0, 1, v21) == 1)
  {
    v22 = &qword_256E72CB8;
    v23 = v0;
LABEL_5:
    sub_23F3625D8(v23, v22);
LABEL_10:
    sub_23F5855DC();
    v32 = v44 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_identifiers;
    sub_23F3C08CC();
    sub_23F382EF8(v32, v41, &qword_256E73E10);
    sub_23F5855D4();
    v33 = v40;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v2, v4, v40);
    v34 = sub_23F5855E4();
    sub_23F58566C(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104));
    sub_23F5855FC(v2);
    sub_23F5855CC();
    sub_23F58127C();
    sub_23F40B4F8(v42);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v4, v33);
    sub_23F362948();
    return;
  }
  sub_23F617F18();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v0, v21);
  v24 = sub_23F617F90();
  if (sub_23F36195C(v5, 1, v24) == 1)
  {
    v22 = &qword_256E72CC0;
    v23 = v5;
    goto LABEL_5;
  }
  v25 = sub_23F617F84();
  v27 = v26;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v5, v24);
  v28 = sub_23F61C238();
  if ((v28 & 0x8000000000000000) == 0 && !HIDWORD(v28))
  {
    LOBYTE(v45) = 0;
    sub_23F619328();
    v45 = v25;
    v46 = v27;
    v29 = v36;
    sub_23F616B8C();
    sub_23F38813C();
    v30 = sub_23F61C7A8();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v29, v38);
    swift_bridgeObjectRelease();
    v31 = *(_QWORD *)(v30 + 16);
    swift_bridgeObjectRelease();
    if (!HIDWORD(v31))
    {
      LOBYTE(v45) = 0;
      sub_23F619358();
      goto LABEL_10;
    }
  }
  sub_23F3833BC();
  sub_23F61CA54();
  __break(1u);
}

void sub_23F581AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_23F5855B8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3B17A4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x24BE58D98], v2);
  v4 = v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_source;
  sub_23F3B1450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v4, v1, v2);
  swift_endAccess();
  if (swift_weakLoadStrong())
  {
    sub_23F5806F8();
    sub_23F366748();
    sub_23F581F0C();
    sub_23F3D9AF4();
  }
  sub_23F383488();
}

void sub_23F581BC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F35D2E8(&qword_256E7BAF0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F362AAC();
  v5 = v3 - v4;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - v7;
  v9 = sub_23F61ADB0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a1, v9);
  sub_23F36196C((uint64_t)v8, 0, 1, v9);
  sub_23F383004((uint64_t)v8, v5, &qword_256E7BAF0);
  sub_23F3B1450();
  sub_23F585654(v5);
  swift_endAccess();
  sub_23F383488();
}

uint64_t sub_23F581CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_identifiers;
  v2 = sub_23F619310();
  sub_23F36196C(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_transcript;
  v4 = sub_23F61B164();
  sub_23F36196C(v3, 1, 1, v4);
  v5 = v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_source;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_source) = 0;
  v6 = *MEMORY[0x24BE58D90];
  v7 = sub_23F619340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_input;
  v9 = sub_23F61ADB0();
  sub_23F36196C(v8, 1, 1, v9);
  return sub_23F581220();
}

void sub_23F581D84()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3625D8(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_identifiers, &qword_256E73E10);
  sub_23F3625D8(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_transcript, &qword_256E7C7B8);
  v1 = sub_23F5855B8();
  sub_23F362B6C(v1);
  sub_23F3625D8(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_input, &qword_256E7BAF0);
}

void sub_23F581DF8()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F58554C();
  sub_23F3625D8(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_identifiers, &qword_256E73E10);
  sub_23F3625D8(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_transcript, &qword_256E7C7B8);
  v1 = sub_23F5855B8();
  sub_23F362B6C(v1);
  sub_23F3625D8(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_input, &qword_256E7BAF0);
  sub_23F362928();
}

uint64_t sub_23F581E70()
{
  sub_23F581DF8();
  sub_23F3F9B6C();
  return swift_deallocClassInstance();
}

void sub_23F581E88()
{
  uint64_t v0;

  sub_23F3663AC(v0+ OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot17RequestValidation_telemetryContext, type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext);
}

uint64_t sub_23F581EB0()
{
  return sub_23F582C44(&OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot17RequestValidation_telemetryContext);
}

void sub_23F581EBC(uint64_t a1@<X8>)
{
  sub_23F582C84(&OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot17RequestValidation_telemetryContext, a1);
}

uint64_t (*sub_23F581EC8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

void sub_23F581F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F362ABC();
  v6 = v5;
  sub_23F35D2E8(&qword_256E7C798);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B1590();
  sub_23F35D2E8(&qword_256E73E10);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3B1C68();
  v26 = *(_QWORD *)(sub_23F619448() - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F35D2E8(&qword_256E7C7B0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383A54();
  v11 = sub_23F6193DC();
  v24 = *(_QWORD *)(v11 - 8);
  v25 = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3845CC();
  v13 = v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot8Fallback_reason;
  sub_23F3B1450();
  v14 = *(_QWORD *)(sub_23F5855B0() - 8);
  sub_23F384918(v13, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 24));
  v15 = swift_endAccess();
  MEMORY[0x24266C8E0](v15);
  sub_23F384918(v4, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  sub_23F585510(v4);
  MEMORY[0x24266C8D4](v4);
  sub_23F5855DC();
  if (swift_weakLoadStrong())
  {
    sub_23F58564C();
    v17 = v16;
    sub_23F366748();
    v18 = v17 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_identifiers;
    sub_23F3C08CC();
    sub_23F382EF8(v18, v2, &qword_256E73E10);
    swift_release();
  }
  else
  {
    v19 = sub_23F619310();
    sub_23F3838D8(v2, v20, v21, v19);
  }
  sub_23F5855D4();
  sub_23F38426C(v1, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
  v22 = *MEMORY[0x24BE58E90];
  v23 = sub_23F5855E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v1, v22, v23);
  sub_23F585510(v1);
  sub_23F5855CC();
  sub_23F58560C();
  sub_23F40B4F8(v26);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v3, v25);
  sub_23F362948();
}

uint64_t sub_23F58212C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot8Fallback_reason;
  v2 = sub_23F5855B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_23F582164()
{
  uint64_t v0;

  sub_23F58554C();
  v0 = sub_23F5855B0();
  sub_23F362B6C(v0);
  sub_23F3F9B6C();
  return sub_23F585590();
}

void sub_23F582194()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  sub_23F362ABC();
  v47 = v0;
  v5 = v4;
  sub_23F35D2E8(&qword_256E73E10);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v51 = v7;
  sub_23F35D2E8(&qword_256E7C798);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F585530();
  v49 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  v46[1] = v11;
  v12 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_OverrideDialog(v12);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F38F964();
  v16 = v15 - v14;
  sub_23F35D2E8(&qword_256E7C7A8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F3B17A4();
  v18 = sub_23F619418();
  v48 = *(_QWORD *)(v18 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3B1F34();
  sub_23F35D2E8(&qword_256E7C7A0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F362AAC();
  v23 = v21 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)v46 - v25;
  sub_23F3EC924(v5, (uint64_t)v46 - v25, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
  v27 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  sub_23F40B3E8((uint64_t)v26, v28, v29, v27);
  sub_23F383004((uint64_t)v26, v23, &qword_256E7C7A0);
  v30 = v47 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot8Override_override;
  sub_23F3B1450();
  v31 = v30;
  v32 = v18;
  sub_23F3E2674(v23, v31, &qword_256E7C7A0);
  swift_endAccess();
  sub_23F61940C();
  sub_23F383738();
  v33 = sub_23F3C85C0();
  MEMORY[0x24266C904](v33);
  sub_23F4B1844(v16);
  sub_23F582490(v1);
  sub_23F3663AC(v16, type metadata accessor for ResponseGenerationOverrides_OverrideDialog);
  v34 = sub_23F585644();
  sub_23F40B3E8((uint64_t)v1, v35, v36, v34);
  v37 = v1;
  v38 = v48;
  MEMORY[0x24266C910](v37);
  sub_23F5855DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v3, v2, v18);
  v39 = sub_23F5855E4();
  sub_23F58566C(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104));
  sub_23F5855FC(v3);
  sub_23F5855CC();
  if (swift_weakLoadStrong())
  {
    sub_23F58564C();
    v41 = v40;
    sub_23F366748();
    v42 = v41 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_identifiers;
    sub_23F3C08CC();
    sub_23F382EF8(v42, v51, &qword_256E73E10);
    swift_release();
  }
  else
  {
    v43 = sub_23F619310();
    sub_23F3838D8(v51, v44, v45, v43);
  }
  sub_23F5855D4();
  sub_23F58560C();
  sub_23F40B4F8(v49);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v2, v32);
  sub_23F362948();
}

void sub_23F582490(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  v2 = v1;
  sub_23F35D2E8(&qword_256E75DF0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v7 = v6 - v5;
  sub_23F382EF8(v2, v6 - v5, &qword_256E75DF0);
  v8 = type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog(0);
  if (sub_23F36195C(v7, 1, v8) == 1)
  {
    *a1 = 0;
    v9 = *MEMORY[0x24BE58E50];
    sub_23F585644();
    v10 = sub_23F585624();
    v11(v10, v9);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
        v13 = (unsigned int *)MEMORY[0x24BE58E40];
      else
        v13 = (unsigned int *)MEMORY[0x24BE58E58];
    }
    else
    {
      v13 = (unsigned int *)MEMORY[0x24BE58E48];
    }
    v14 = *v13;
    sub_23F585644();
    v15 = sub_23F585624();
    v16(v15, v14);
    sub_23F3663AC(v7, type metadata accessor for ResponseGenerationOverrides_OverrideDialog.OneOf_OverrideDialog);
  }
  sub_23F362B80();
}

uint64_t sub_23F582594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot8Override_telemetryContext;
  v2 = *MEMORY[0x24BE56138];
  v3 = sub_23F61ADBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v1, v2, v3);
  v4 = v1 + *(int *)(type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext(0) + 20);
  v5 = sub_23F617000();
  sub_23F36196C(v4, 1, 1, v5);
  v6 = v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot8Override_override;
  v7 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  sub_23F36196C(v6, 1, 1, v7);
  return sub_23F581220();
}

void sub_23F582648()
{
  uint64_t v0;

  sub_23F3663AC(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot8Override_telemetryContext, type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext);
  sub_23F3625D8(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot8Override_override, &qword_256E7C7A0);
}

uint64_t sub_23F582688()
{
  uint64_t v0;

  sub_23F58554C();
  sub_23F3663AC(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot8Override_telemetryContext, type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext);
  sub_23F3625D8(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot8Override_override, &qword_256E7C7A0);
  return v0;
}

uint64_t sub_23F5826D0()
{
  return sub_23F582B24((void (*)(void))sub_23F582688);
}

void sub_23F5826DC(uint64_t a1@<X8>)
{
  sub_23F582C84(&OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot8Override_telemetryContext, a1);
}

uint64_t (*sub_23F5826E8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

void sub_23F58272C()
{
  uint64_t v0;

  sub_23F3663AC(v0+ OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot15ResponseCatalog_telemetryContext, type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext);
}

uint64_t sub_23F582754()
{
  return sub_23F582C44(&OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot15ResponseCatalog_telemetryContext);
}

void sub_23F582760(uint64_t a1@<X8>)
{
  sub_23F582C84(&OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot15ResponseCatalog_telemetryContext, a1);
}

uint64_t (*sub_23F58276C())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

void sub_23F5827B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F362ABC();
  v5 = v4;
  sub_23F35D2E8(&qword_256E73E10);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3B1590();
  sub_23F35D2E8(&qword_256E7C798);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  v22 = *(_QWORD *)(sub_23F585530() - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F4A0F08();
  v9 = sub_23F6193A0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3B1F34();
  if (*v5)
    v11 = 3157558;
  else
    v11 = 3157557;
  v12 = (uint64_t *)(v0
                  + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot14ModelInference_promptVersion);
  *v12 = v11;
  v12[1] = 0xE300000000000000;
  v13 = swift_bridgeObjectRelease();
  MEMORY[0x24266C8A4](v13);
  sub_23F383738();
  sub_23F61937C();
  MEMORY[0x24266C898](v11, 0xE300000000000000);
  sub_23F5855DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v3, v2, v9);
  v14 = *MEMORY[0x24BE58DF8];
  v15 = sub_23F5855E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v3, v14, v15);
  sub_23F36196C(v3, 0, 1, v15);
  sub_23F5855CC();
  if (swift_weakLoadStrong())
  {
    sub_23F58564C();
    v17 = v16;
    sub_23F366748();
    v18 = v17 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot10Generation_identifiers;
    sub_23F3C08CC();
    sub_23F382EF8(v18, v1, &qword_256E73E10);
    swift_release();
  }
  else
  {
    v19 = sub_23F619310();
    sub_23F3838D8(v1, v20, v21, v19);
  }
  sub_23F5855D4();
  sub_23F58127C();
  sub_23F40B4F8(v22);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v9);
  sub_23F362948();
}

uint64_t sub_23F5829A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2
                + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot14ModelInference_prompt);
  *v3 = a1;
  v3[1] = a2;
  sub_23F617BA0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5829E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v1 = v0
     + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot14ModelInference_telemetryContext;
  v2 = *MEMORY[0x24BE56128];
  v3 = sub_23F61ADBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v1, v2, v3);
  v4 = v1 + *(int *)(type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext(0) + 20);
  v5 = sub_23F617000();
  sub_23F36196C(v4, 1, 1, v5);
  v6 = (_QWORD *)(v0
                + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot14ModelInference_prompt);
  *v6 = 0;
  v6[1] = 0;
  v7 = (_QWORD *)(v0
                + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot14ModelInference_promptVersion);
  *v7 = 0;
  v7[1] = 0;
  return sub_23F581220();
}

uint64_t sub_23F582A8C()
{
  uint64_t v0;

  sub_23F3663AC(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot14ModelInference_telemetryContext, type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext);
  sub_23F5855A4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F582AD0()
{
  uint64_t v0;

  sub_23F58554C();
  sub_23F3663AC(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot14ModelInference_telemetryContext, type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext);
  sub_23F5855A4();
  sub_23F5855A4();
  return v0;
}

uint64_t sub_23F582B18()
{
  return sub_23F582B24((void (*)(void))sub_23F582AD0);
}

uint64_t sub_23F582B24(void (*a1)(void))
{
  a1();
  sub_23F3F9B6C();
  return swift_deallocClassInstance();
}

void sub_23F582B3C(uint64_t a1@<X8>)
{
  sub_23F582C84(&OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot14ModelInference_telemetryContext, a1);
}

uint64_t (*sub_23F582B48())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

void sub_23F582B8C()
{
  uint64_t v0;

  sub_23F3663AC(v0+ OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot22HallucinationDetection_telemetryContext, type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext);
}

uint64_t sub_23F582BB4()
{
  return sub_23F582C44(&OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot22HallucinationDetection_telemetryContext);
}

void sub_23F582BC0(uint64_t a1@<X8>)
{
  sub_23F582C84(&OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot22HallucinationDetection_telemetryContext, a1);
}

uint64_t (*sub_23F582BCC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

void sub_23F582C10()
{
  uint64_t v0;

  sub_23F3663AC(v0 + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot11SafetyCheck_telemetryContext, type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext);
}

uint64_t sub_23F582C38()
{
  return sub_23F582C44(&OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot11SafetyCheck_telemetryContext);
}

uint64_t sub_23F582C44(_QWORD *a1)
{
  uint64_t v1;

  sub_23F58554C();
  sub_23F3663AC(v1 + *a1, type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext);
  sub_23F3F9B6C();
  return sub_23F585590();
}

void sub_23F582C78(uint64_t a1@<X8>)
{
  sub_23F582C84(&OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime27ResponseGenerationBiomeRoot11SafetyCheck_telemetryContext, a1);
}

void sub_23F582C84(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a1;
  sub_23F3C08CC();
  sub_23F3EC924(v4, a2, type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext);
}

uint64_t (*sub_23F582CD0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

void ResponseGenerationTriageReport.input.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F382EF8(v1, a1, &qword_256E7BAF0);
}

void ResponseGenerationTriageReport.input.setter(uint64_t a1)
{
  uint64_t v1;

  sub_23F3E2674(a1, v1, &qword_256E7BAF0);
}

uint64_t (*ResponseGenerationTriageReport.input.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void ResponseGenerationTriageReport.source.getter()
{
  sub_23F58556C();
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void ResponseGenerationTriageReport.source.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F585520();
  sub_23F585598();
  *v1 = v2;
  v1[1] = v0;
  sub_23F362B80();
}

uint64_t (*ResponseGenerationTriageReport.source.modify())(_QWORD, _QWORD)
{
  sub_23F58556C();
  return nullsub_1;
}

void ResponseGenerationTriageReport.fallbackReason.getter()
{
  type metadata accessor for ResponseGenerationTriageReport(0);
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void ResponseGenerationTriageReport.fallbackReason.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F585520();
  sub_23F585598();
  *v1 = v2;
  v1[1] = v0;
  sub_23F362B80();
}

uint64_t (*ResponseGenerationTriageReport.fallbackReason.modify())(_QWORD, _QWORD)
{
  type metadata accessor for ResponseGenerationTriageReport(0);
  return nullsub_1;
}

void ResponseGenerationTriageReport.overrideRuleId.getter()
{
  type metadata accessor for ResponseGenerationTriageReport(0);
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void ResponseGenerationTriageReport.overrideRuleId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_23F585520();
  sub_23F585598();
  *v1 = v2;
  v1[1] = v0;
  sub_23F362B80();
}

uint64_t (*ResponseGenerationTriageReport.overrideRuleId.modify())(_QWORD, _QWORD)
{
  type metadata accessor for ResponseGenerationTriageReport(0);
  return nullsub_1;
}

void ResponseGenerationTriageReport.ModelInference.prompt.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void ResponseGenerationTriageReport.ModelInference.promptVersion.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

uint64_t sub_23F582F18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x655674706D6F7270 && a2 == 0xED00006E6F697372)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F583020(char a1)
{
  if ((a1 & 1) != 0)
    return 0x655674706D6F7270;
  else
    return 0x74706D6F7270;
}

uint64_t sub_23F583060()
{
  char *v0;

  return sub_23F583020(*v0);
}

uint64_t sub_23F583068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F582F18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F58308C()
{
  sub_23F5831C8();
  return sub_23F61CDC0();
}

uint64_t sub_23F5830B4()
{
  sub_23F5831C8();
  return sub_23F61CDCC();
}

void ResponseGenerationTriageReport.ModelInference.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(sub_23F35D2E8(&qword_256E7BAF8) - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3B17A4();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5831C8();
  sub_23F61CD90();
  sub_23F49336C();
  if (!v1)
    sub_23F49336C();
  sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F362870();
}

unint64_t sub_23F5831C8()
{
  unint64_t result;

  result = qword_256E7BB00;
  if (!qword_256E7BB00)
  {
    result = MEMORY[0x242670A44](&unk_23F62E760, &type metadata for ResponseGenerationTriageReport.ModelInference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7BB00);
  }
  return result;
}

void ResponseGenerationTriageReport.ModelInference.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  v5 = sub_23F35D2E8(&qword_256E7BB08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B1F34();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5831C8();
  sub_23F61CD84();
  if (v2)
  {
    sub_23F44D4A0();
  }
  else
  {
    v7 = sub_23F4933E0();
    v9 = v8;
    sub_23F617BA0();
    v10 = sub_23F4933E0();
    v12 = v11;
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v14 = v10;
    sub_23F493318(v13);
    *a2 = v7;
    a2[1] = v9;
    a2[2] = v14;
    a2[3] = v12;
    sub_23F383738();
    sub_23F44D4A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23F362870();
}

void sub_23F583340(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  ResponseGenerationTriageReport.ModelInference.init(from:)(a1, a2);
}

void sub_23F583354(_QWORD *a1)
{
  ResponseGenerationTriageReport.ModelInference.encode(to:)(a1);
}

uint64_t ResponseGenerationTriageReport.modelInference.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ResponseGenerationTriageReport(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_23F5571C0(v4, v5);
}

__n128 ResponseGenerationTriageReport.modelInference.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for ResponseGenerationTriageReport(0) + 32));
  sub_23F585618();
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*ResponseGenerationTriageReport.modelInference.modify())(_QWORD, _QWORD)
{
  type metadata accessor for ResponseGenerationTriageReport(0);
  return nullsub_1;
}

uint64_t sub_23F583420(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x7475706E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F61CC64() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6B6361626C6C6166 && a2 == 0xEE006E6F73616552;
      if (v7 || (sub_23F61CC64() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x656469727265766FLL && a2 == 0xEE006449656C7552;
        if (v8 || (sub_23F61CC64() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x666E496C65646F6DLL && a2 == 0xEE0065636E657265)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_23F61CC64();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_23F583688(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F5836B8 + 4 * byte_23F62E290[a1]))(0x7475706E69, 0xE500000000000000);
}

uint64_t sub_23F5836B8()
{
  return 0x656372756F73;
}

uint64_t sub_23F5836CC()
{
  return 0x6B6361626C6C6166;
}

uint64_t sub_23F5836F0()
{
  return 0x656469727265766FLL;
}

uint64_t sub_23F583714()
{
  return 0x666E496C65646F6DLL;
}

uint64_t sub_23F583738()
{
  unsigned __int8 *v0;

  return sub_23F583688(*v0);
}

uint64_t sub_23F583740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F583420(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F583764()
{
  sub_23F583950();
  return sub_23F61CDC0();
}

uint64_t sub_23F58378C()
{
  sub_23F583950();
  return sub_23F61CDCC();
}

uint64_t ResponseGenerationTriageReport.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23F35D2E8(&qword_256E7BB10);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3B17A4();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F583950();
  sub_23F61CD90();
  sub_23F61ADB0();
  sub_23F3612C0(&qword_256E7BB20, (uint64_t (*)(uint64_t))MEMORY[0x24BE560E0], MEMORY[0x24BE560F0]);
  sub_23F585660();
  if (!v1)
  {
    type metadata accessor for ResponseGenerationTriageReport(0);
    sub_23F5854F8(1);
    sub_23F5854F8(2);
    sub_23F5854F8(3);
    sub_23F58398C();
    sub_23F585660();
  }
  return sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

unint64_t sub_23F583950()
{
  unint64_t result;

  result = qword_256E7BB18;
  if (!qword_256E7BB18)
  {
    result = MEMORY[0x242670A44](&unk_23F62E710, &type metadata for ResponseGenerationTriageReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7BB18);
  }
  return result;
}

unint64_t sub_23F58398C()
{
  unint64_t result;

  result = qword_256E7BB28;
  if (!qword_256E7BB28)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for ResponseGenerationTriageReport.ModelInference, &type metadata for ResponseGenerationTriageReport.ModelInference);
    atomic_store(result, (unint64_t *)&qword_256E7BB28);
  }
  return result;
}

void ResponseGenerationTriageReport.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  v37 = a2;
  sub_23F35D2E8(&qword_256E7BAF0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_23F35D2E8(&qword_256E7BB30);
  v39 = *(_QWORD *)(v41 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F362838();
  v7 = (int *)type metadata accessor for ResponseGenerationTriageReport(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F4A0F08();
  v38 = sub_23F61ADB0();
  sub_23F36196C(v2, 1, 1, v38);
  v9 = (_QWORD *)(v2 + v7[5]);
  *v9 = 0;
  v9[1] = 0;
  v10 = (uint64_t *)(v2 + v7[6]);
  *v10 = 0;
  v10[1] = 0;
  v11 = (uint64_t *)(v2 + v7[7]);
  *v11 = 0;
  v11[1] = 0;
  v12 = v7[8];
  v42 = a1;
  v43 = v2;
  v13 = (uint64_t *)(v2 + v12);
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  sub_23F35EA9C(a1, a1[3]);
  sub_23F583950();
  v14 = v44;
  sub_23F61CD84();
  if (v14)
  {
    v17 = v43;
  }
  else
  {
    *(_QWORD *)&v44 = v9;
    v35 = v11;
    v36 = v10;
    v34 = v13;
    v15 = v39;
    LOBYTE(v45) = 0;
    sub_23F3612C0(&qword_256E7BB38, (uint64_t (*)(uint64_t))MEMORY[0x24BE560E0], MEMORY[0x24BE560F8]);
    v16 = (uint64_t)v40;
    sub_23F61CAFC();
    v17 = v43;
    sub_23F3E2674(v16, v43, &qword_256E7BAF0);
    LOBYTE(v45) = 1;
    v18 = v15;
    v19 = sub_23F585584();
    v21 = v20;
    v22 = (uint64_t *)v44;
    swift_bridgeObjectRelease();
    *v22 = v19;
    v22[1] = v21;
    LOBYTE(v45) = 2;
    v23 = sub_23F585584();
    v25 = v24;
    v26 = v36;
    swift_bridgeObjectRelease();
    *v26 = v23;
    v26[1] = v25;
    LOBYTE(v45) = 3;
    v27 = sub_23F585584();
    v29 = v28;
    v30 = v35;
    swift_bridgeObjectRelease();
    *v30 = v27;
    v30[1] = v29;
    v48 = 4;
    sub_23F583D0C();
    sub_23F61CAFC();
    sub_23F585638(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    v44 = v45;
    v31 = v46;
    v32 = v47;
    v33 = v34;
    sub_23F4EF330(*v34, v34[1]);
    *(_OWORD *)v33 = v44;
    v33[2] = v31;
    v33[3] = v32;
    sub_23F3EC924(v17, v37, type metadata accessor for ResponseGenerationTriageReport);
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v42);
  sub_23F3663AC(v17, type metadata accessor for ResponseGenerationTriageReport);
  sub_23F362870();
}

unint64_t sub_23F583D0C()
{
  unint64_t result;

  result = qword_256E7BB40;
  if (!qword_256E7BB40)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for ResponseGenerationTriageReport.ModelInference, &type metadata for ResponseGenerationTriageReport.ModelInference);
    atomic_store(result, (unint64_t *)&qword_256E7BB40);
  }
  return result;
}

void sub_23F583D48(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ResponseGenerationTriageReport.init(from:)(a1, a2);
}

uint64_t sub_23F583D5C(_QWORD *a1)
{
  return ResponseGenerationTriageReport.encode(to:)(a1);
}

uint64_t type metadata accessor for ResponseGenerationBiomeRoot()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ResponseGenerationBiomeRoot.Donator()
{
  return objc_opt_self();
}

uint64_t sub_23F583DB0()
{
  return type metadata accessor for ResponseGenerationBiomeRoot.Generation(0);
}

uint64_t type metadata accessor for ResponseGenerationBiomeRoot.Generation(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E7BDF8);
}

void sub_23F583DCC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23F585164(319, &qword_256E7BE08, (void (*)(uint64_t))MEMORY[0x24BE58818]);
  if (v0 <= 0x3F)
  {
    sub_23F585164(319, &qword_256E7BE10, (void (*)(uint64_t))MEMORY[0x24BE56878]);
    if (v1 <= 0x3F)
    {
      sub_23F619340();
      if (v2 <= 0x3F)
      {
        sub_23F585164(319, qword_256E7BE18, (void (*)(uint64_t))MEMORY[0x24BE560E0]);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_23F583EB8()
{
  return type metadata accessor for ResponseGenerationBiomeRoot.RequestValidation(0);
}

uint64_t type metadata accessor for ResponseGenerationBiomeRoot.RequestValidation(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7BF78);
}

uint64_t sub_23F583ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F583F1C(a1, a2, a3, type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext);
}

uint64_t type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E7C728);
}

uint64_t sub_23F583EF4()
{
  return type metadata accessor for ResponseGenerationBiomeRoot.Fallback(0);
}

uint64_t type metadata accessor for ResponseGenerationBiomeRoot.Fallback(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7C060);
}

uint64_t sub_23F583F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F583F1C(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE58E18]);
}

uint64_t sub_23F583F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23F583F88()
{
  return type metadata accessor for ResponseGenerationBiomeRoot.Override(0);
}

uint64_t type metadata accessor for ResponseGenerationBiomeRoot.Override(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E7C150);
}

void sub_23F583FA4()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext(319);
  if (v0 <= 0x3F)
  {
    sub_23F585164(319, qword_256E7C160, (void (*)(uint64_t))type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_23F58403C()
{
  return type metadata accessor for ResponseGenerationBiomeRoot.ResponseCatalog(0);
}

uint64_t type metadata accessor for ResponseGenerationBiomeRoot.ResponseCatalog(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7C268);
}

uint64_t sub_23F584058()
{
  return type metadata accessor for ResponseGenerationBiomeRoot.ModelInference(0);
}

uint64_t type metadata accessor for ResponseGenerationBiomeRoot.ModelInference(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7C350);
}

uint64_t sub_23F584074()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ResponseGenerationBiomeRoot.TelemetryPnRContext(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23F5840EC()
{
  return type metadata accessor for ResponseGenerationBiomeRoot.HallucinationDetection(0);
}

uint64_t type metadata accessor for ResponseGenerationBiomeRoot.HallucinationDetection(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7C488);
}

uint64_t sub_23F584108()
{
  return type metadata accessor for ResponseGenerationBiomeRoot.SafetyCheck(0);
}

uint64_t type metadata accessor for ResponseGenerationBiomeRoot.SafetyCheck(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7C570);
}

uint64_t *initializeBufferWithCopyOfBuffer for ResponseGenerationTriageReport(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61ADB0();
    if (sub_23F36195C((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F35D2E8(&qword_256E7BAF0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      sub_23F36196C((uint64_t)a1, 0, 1, v7);
    }
    v10 = a3[5];
    v11 = a3[6];
    v12 = (uint64_t *)((char *)a1 + v10);
    v13 = (uint64_t *)((char *)a2 + v10);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (uint64_t *)((char *)a1 + v11);
    v16 = (uint64_t *)((char *)a2 + v11);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = a3[7];
    v19 = a3[8];
    v20 = (uint64_t *)((char *)a1 + v18);
    v21 = (uint64_t *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (uint64_t *)((char *)a1 + v19);
    v24 = (uint64_t *)((char *)a2 + v19);
    v25 = *(uint64_t *)((char *)a2 + v19 + 8);
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    if (v25)
    {
      *v23 = *v24;
      v23[1] = v25;
      v26 = v24[3];
      v23[2] = v24[2];
      v23[3] = v26;
      sub_23F617BA0();
      sub_23F617BA0();
    }
    else
    {
      v27 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v27;
    }
  }
  return a1;
}

uint64_t destroy for ResponseGenerationTriageReport(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_23F61ADB0();
  if (!sub_23F36195C(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 32) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for ResponseGenerationTriageReport(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  v6 = sub_23F61ADB0();
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F35D2E8(&qword_256E7BAF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = &a1[v9];
  v14 = &a2[v9];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  v16 = a3[7];
  v17 = a3[8];
  v18 = &a1[v16];
  v19 = &a2[v16];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v21 = &a1[v17];
  v22 = &a2[v17];
  v23 = *(_QWORD *)&a2[v17 + 8];
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  if (v23)
  {
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v24 = *((_QWORD *)v22 + 3);
    *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    *((_QWORD *)v21 + 3) = v24;
    sub_23F617BA0();
    sub_23F617BA0();
  }
  else
  {
    v25 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v25;
  }
  return a1;
}

char *assignWithCopy for ResponseGenerationTriageReport(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;

  v6 = sub_23F61ADB0();
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      sub_23F36196C((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F35D2E8(&qword_256E7BAF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)&a1[v20 + 8];
  v24 = *((_QWORD *)v22 + 1);
  if (v23)
  {
    if (v24)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
      *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
      sub_23F617BA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F584684((uint64_t)v21);
      v25 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v25;
    }
  }
  else if (v24)
  {
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
    *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
    sub_23F617BA0();
    sub_23F617BA0();
  }
  else
  {
    v26 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v26;
  }
  return a1;
}

uint64_t sub_23F584684(uint64_t a1)
{
  destroy for JointResolverLocationSignal();
  return a1;
}

char *initializeWithTake for ResponseGenerationTriageReport(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;

  v6 = sub_23F61ADB0();
  if (sub_23F36195C((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F35D2E8(&qword_256E7BAF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    sub_23F36196C((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  v9 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  return a1;
}

char *assignWithTake for ResponseGenerationTriageReport(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  v6 = sub_23F61ADB0();
  v7 = sub_23F36195C((uint64_t)a1, 1, v6);
  v8 = sub_23F36195C((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      sub_23F36196C((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F35D2E8(&qword_256E7BAF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = a3[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = a3[8];
  v27 = (uint64_t)&a1[v26];
  v28 = &a2[v26];
  if (!*(_QWORD *)&a1[v26 + 8])
  {
LABEL_11:
    v31 = *((_OWORD *)v28 + 1);
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v31;
    return a1;
  }
  v29 = *((_QWORD *)v28 + 1);
  if (!v29)
  {
    sub_23F584684(v27);
    goto LABEL_11;
  }
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_QWORD *)(v27 + 8) = v29;
  swift_bridgeObjectRelease();
  v30 = *((_QWORD *)v28 + 3);
  *(_QWORD *)(v27 + 16) = *((_QWORD *)v28 + 2);
  *(_QWORD *)(v27 + 24) = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseGenerationTriageReport()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F58491C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = sub_23F35D2E8(&qword_256E7BAF0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F3B1A44(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseGenerationTriageReport()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F5849AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_23F35D2E8(&qword_256E7BAF0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23F38370C(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
    sub_23F362B80();
  }
}

void sub_23F584A18()
{
  unint64_t v0;

  sub_23F585164(319, qword_256E7BE18, (void (*)(uint64_t))MEMORY[0x24BE560E0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for ResponseGenerationTriageReport.ModelInference()
{
  return &type metadata for ResponseGenerationTriageReport.ModelInference;
}

uint64_t *sub_23F584AB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61ADBC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F617000();
    if (sub_23F36195C((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F35D2E8(&qword_256E6FB20);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      sub_23F36196C((uint64_t)v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_23F584BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_23F61ADBC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23F617000();
  result = sub_23F36195C(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return result;
}

uint64_t sub_23F584C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23F61ADBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23F617000();
  if (sub_23F36195C((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F35D2E8(&qword_256E6FB20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    sub_23F36196C((uint64_t)v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_23F584CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23F61ADBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23F617000();
  v11 = sub_23F36195C((uint64_t)v8, 1, v10);
  v12 = sub_23F36195C((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_23F35D2E8(&qword_256E6FB20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  sub_23F36196C((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t sub_23F584E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23F61ADBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23F617000();
  if (sub_23F36195C((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F35D2E8(&qword_256E6FB20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    sub_23F36196C((uint64_t)v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_23F584EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23F61ADBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23F617000();
  v11 = sub_23F36195C((uint64_t)v8, 1, v10);
  v12 = sub_23F36195C((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_23F35D2E8(&qword_256E6FB20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  sub_23F36196C((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t sub_23F585000()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F58500C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23F5855EC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v7 = sub_23F35D2E8(&qword_256E6FB20);
    v8 = v4 + *(int *)(a3 + 20);
  }
  return sub_23F3B1A44(v8, v3, v7);
}

uint64_t sub_23F585064()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F585070(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_23F5855EC();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v9 = sub_23F35D2E8(&qword_256E6FB20);
    v10 = v5 + *(int *)(a4 + 20);
  }
  return sub_23F38370C(v10, v4, v4, v9);
}

void sub_23F5850D0()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F61ADBC();
  if (v0 <= 0x3F)
  {
    sub_23F585164(319, qword_256E7C738, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23F585164(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23F61C730();
    if (!v5)
      atomic_store(v4, a2);
  }
  sub_23F362928();
}

uint64_t storeEnumTagSinglePayload for ResponseGenerationTriageReport.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23F5851F8 + 4 * byte_23F62E29A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23F58522C + 4 * byte_23F62E295[v4]))();
}

uint64_t sub_23F58522C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F585234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F58523CLL);
  return result;
}

uint64_t sub_23F585248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F585250);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23F585254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F58525C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseGenerationTriageReport.CodingKeys()
{
  return &type metadata for ResponseGenerationTriageReport.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ResponseGenerationTriageReport.ModelInference.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F5852C4 + 4 * byte_23F62E2A4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F5852F8 + 4 * byte_23F62E29F[v4]))();
}

uint64_t sub_23F5852F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F585300(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F585308);
  return result;
}

uint64_t sub_23F585314(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F58531CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F585320(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F585328(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseGenerationTriageReport.ModelInference.CodingKeys()
{
  return &type metadata for ResponseGenerationTriageReport.ModelInference.CodingKeys;
}

unint64_t sub_23F585348()
{
  unint64_t result;

  result = qword_256E7C768;
  if (!qword_256E7C768)
  {
    result = MEMORY[0x242670A44](&unk_23F62E5C0, &type metadata for ResponseGenerationTriageReport.ModelInference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7C768);
  }
  return result;
}

unint64_t sub_23F585388()
{
  unint64_t result;

  result = qword_256E7C770;
  if (!qword_256E7C770)
  {
    result = MEMORY[0x242670A44](&unk_23F62E678, &type metadata for ResponseGenerationTriageReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7C770);
  }
  return result;
}

unint64_t sub_23F5853C8()
{
  unint64_t result;

  result = qword_256E7C778;
  if (!qword_256E7C778)
  {
    result = MEMORY[0x242670A44](&unk_23F62E5E8, &type metadata for ResponseGenerationTriageReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7C778);
  }
  return result;
}

unint64_t sub_23F585408()
{
  unint64_t result;

  result = qword_256E7C780;
  if (!qword_256E7C780)
  {
    result = MEMORY[0x242670A44](&unk_23F62E610, &type metadata for ResponseGenerationTriageReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7C780);
  }
  return result;
}

unint64_t sub_23F585448()
{
  unint64_t result;

  result = qword_256E7C788;
  if (!qword_256E7C788)
  {
    result = MEMORY[0x242670A44](&unk_23F62E530, &type metadata for ResponseGenerationTriageReport.ModelInference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7C788);
  }
  return result;
}

unint64_t sub_23F585488()
{
  unint64_t result;

  result = qword_256E7C790;
  if (!qword_256E7C790)
  {
    result = MEMORY[0x242670A44](&unk_23F62E558, &type metadata for ResponseGenerationTriageReport.ModelInference.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7C790);
  }
  return result;
}

uint64_t sub_23F5854C4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BE55988] - 8) + 8))();
  return a1;
}

uint64_t sub_23F5854F8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
  return sub_23F61CB80();
}

uint64_t sub_23F585510(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(a1, 0, 1, v1);
}

uint64_t sub_23F585520()
{
  return type metadata accessor for ResponseGenerationTriageReport(0);
}

uint64_t sub_23F585530()
{
  return sub_23F619448();
}

uint64_t sub_23F58554C()
{
  return swift_weakDestroy();
}

uint64_t sub_23F585554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v1, v2, a1);
}

uint64_t sub_23F58556C()
{
  return type metadata accessor for ResponseGenerationTriageReport(0);
}

uint64_t sub_23F585584()
{
  return sub_23F61CAE4();
}

uint64_t sub_23F585590()
{
  return swift_deallocClassInstance();
}

uint64_t sub_23F585598()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5855A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5855B0()
{
  return sub_23F6193B8();
}

uint64_t sub_23F5855B8()
{
  return sub_23F619340();
}

uint64_t sub_23F5855C0()
{
  return swift_retain();
}

uint64_t sub_23F5855CC()
{
  return sub_23F619430();
}

uint64_t sub_23F5855D4()
{
  return sub_23F61931C();
}

uint64_t sub_23F5855DC()
{
  return sub_23F61943C();
}

uint64_t sub_23F5855E4()
{
  return sub_23F619424();
}

uint64_t sub_23F5855EC()
{
  return sub_23F61ADBC();
}

uint64_t sub_23F5855FC(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(a1, 0, 1, v1);
}

uint64_t sub_23F58560C()
{
  return sub_23F58127C();
}

uint64_t sub_23F585618()
{
  uint64_t *v0;

  return sub_23F4EF330(*v0, v0[1]);
}

uint64_t sub_23F585624()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F585638@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F585644()
{
  return sub_23F6193E8();
}

void sub_23F58564C()
{
  sub_23F58069C();
}

void sub_23F585654(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_23F3E2674(a1, v2, v1);
}

uint64_t sub_23F585660()
{
  return sub_23F61CB98();
}

uint64_t sub_23F58566C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

void sub_23F585678()
{
  uint64_t v0;
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[3];
  _OWORD v30[2];

  sub_23F58E210();
  if (v0)
  {
    sub_23F35D2E8(&qword_256E78F88);
    v3 = sub_23F58DD74();
  }
  else
  {
    v3 = MEMORY[0x24BEE4B00];
  }
  sub_23F58DE28();
  v6 = v5 & v4;
  sub_23F58DD84();
  v7 = (_QWORD *)(MEMORY[0x24BEE4AD8] + 8);
  v8 = (_QWORD *)MEMORY[0x24BEE0D00];
  while (v6)
  {
    sub_23F3629D4();
    v26 = v6;
LABEL_27:
    v17 = sub_23F58E298();
    v27 = v18;
    v28 = v17;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F5247E0();
    sub_23F382A70(v1, v2);
    sub_23F382A70(v2, v30);
    sub_23F382A70(v30, v29);
    sub_23F58E118();
    if ((v19 & 1) != 0)
    {
      sub_23F58DEC8();
      *v7 = v27;
      v7[1] = v28;
      v7 = v8;
      sub_23F58E0FC();
      sub_23F58E26C(v20);
      sub_23F58E25C(v29);
      v6 = v26;
    }
    else
    {
      if (*(_QWORD *)(v3 + 16) >= *(_QWORD *)(v3 + 24))
      {
        __break(1u);
LABEL_34:
        __break(1u);
        __break(1u);
        goto LABEL_35;
      }
      sub_23F58E240();
      sub_23F58DF64(v21);
      sub_23F382A70(v29, v22);
      v23 = *(_QWORD *)(v3 + 16);
      v10 = __OFADD__(v23, 1);
      v24 = v23 + 1;
      if (v10)
        goto LABEL_34;
      *(_QWORD *)(v3 + 16) = v24;
      v6 = v26;
    }
  }
  sub_23F496C60();
  if (v9 == v10)
    goto LABEL_32;
  sub_23F58E1A4();
  if (v11)
    goto LABEL_26;
  sub_23F58DFA4();
  if (v9 == v10)
    goto LABEL_32;
  sub_23F58E124();
  if (v12)
    goto LABEL_26;
  sub_23F58DFA4();
  if (v9 == v10)
    goto LABEL_32;
  sub_23F58E124();
  if (v13)
    goto LABEL_26;
  sub_23F58DFA4();
  if (v9 == v10)
    goto LABEL_32;
  sub_23F58E124();
  if (v14)
    goto LABEL_26;
  sub_23F496C60();
  if (v9 == v10)
  {
LABEL_32:
    sub_23F58E0A8();
    sub_23F58DF48();
    return;
  }
  if (*(_QWORD *)(v25 + 8 * v15))
  {
LABEL_26:
    sub_23F58E05C();
    goto LABEL_27;
  }
  while (!__OFADD__(v15, 1))
  {
    sub_23F58DFA4();
    if (v9 == v10)
      goto LABEL_32;
    sub_23F58E188();
    if (v16)
      goto LABEL_26;
  }
LABEL_35:
  __break(1u);
}

void sub_23F585874()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  int64_t v18;
  uint64_t *v19;
  char v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];

  sub_23F58E210();
  if (v1)
  {
    sub_23F35D2E8(&qword_256E78F88);
    v2 = (_QWORD *)sub_23F58DD74();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v26 = v0 + 8;
  v3 = -1 << *((_BYTE *)v0 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & v0[8];
  v25 = (unint64_t)(63 - v3) >> 6;
  v6 = &v30;
  v7 = &v32;
  sub_23F3668F4();
  v8 = 0;
  v9 = (uint64_t *)(MEMORY[0x24BEE4AD8] + 8);
  v10 = (uint64_t *)MEMORY[0x24BEE1328];
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        sub_23F3629D4();
        v27 = v5;
        v12 = v11 | (v8 << 6);
      }
      else
      {
        if (__OFADD__(v8, 1))
          goto LABEL_38;
        if (v8 + 1 >= v25)
        {
LABEL_35:
          sub_23F382E18();
          return;
        }
        sub_23F58E1A4();
        if (!v14)
        {
          sub_23F58E228();
          if (v15 == v16)
            goto LABEL_35;
          v14 = *((_QWORD *)v26 + v13);
          if (!v14)
          {
            sub_23F58E228();
            if (v15 == v16)
              goto LABEL_35;
            v14 = *((_QWORD *)v26 + v13);
            if (!v14)
            {
              sub_23F58E228();
              if (v15 == v16)
                goto LABEL_35;
              v14 = *((_QWORD *)v26 + v13);
              if (!v14)
              {
                v18 = v17 + 4;
                if (v18 >= v25)
                  goto LABEL_35;
                v14 = *((_QWORD *)v26 + v18);
                if (!v14)
                {
                  while (!__OFADD__(v18, 1))
                  {
                    sub_23F58E228();
                    if (v15 == v16)
                      goto LABEL_35;
                    sub_23F58E188();
                    if (v14)
                      goto LABEL_29;
                  }
                  goto LABEL_39;
                }
                v13 = v18;
              }
            }
          }
        }
LABEL_29:
        v27 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v13 << 6);
        v8 = v13;
      }
      v19 = (uint64_t *)(v0[6] + 16 * v12);
      v28 = *v19;
      v29 = v19[1];
      sub_23F617BA0();
      sub_23F5247E0();
      sub_23F382A70(v6, v7);
      sub_23F382A70(v7, v33);
      sub_23F382A70(v33, &v31);
      sub_23F58E118();
      if ((v20 & 1) == 0)
        break;
      sub_23F58DEC8();
      *v9 = v28;
      v9[1] = v29;
      v9 = v10;
      v10 = v0;
      v0 = v6;
      v6 = v7;
      v7 = (uint64_t *)v8;
      sub_23F58E26C(v2[7]);
      sub_23F58E25C(&v31);
      v5 = v27;
    }
    if (v2[2] >= v2[3])
      break;
    sub_23F58E240();
    sub_23F58DF64(v21);
    sub_23F382A70(&v31, v22);
    v23 = v2[2];
    v16 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v16)
      goto LABEL_37;
    v2[2] = v24;
    v5 = v27;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_23F585B30()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  _OWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  _OWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[3];
  _OWORD v37[2];

  sub_23F58E210();
  if (v1)
  {
    sub_23F35D2E8(&qword_256E78F88);
    v4 = (_QWORD *)sub_23F58DD74();
  }
  else
  {
    v4 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  sub_23F58DE28();
  v7 = v6 & v5;
  sub_23F58DD84();
  v8 = 0;
  v9 = &qword_256E70FD8;
  v10 = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    while (1)
    {
      if (v7)
      {
        v34 = (v7 - 1) & v7;
        v11 = __clz(__rbit64(v7)) | ((_QWORD)v8 << 6);
      }
      else
      {
        if (__OFADD__(v8, 1))
          goto LABEL_36;
        sub_23F496C60();
        if (v12 == v13)
        {
LABEL_33:
          sub_23F58E0A8();
          sub_23F58DF48();
          return;
        }
        sub_23F58E1A4();
        if (!v14)
        {
          sub_23F58DFA4();
          if (v12 == v13)
            goto LABEL_33;
          sub_23F58E124();
          if (!v15)
          {
            sub_23F58DFA4();
            if (v12 == v13)
              goto LABEL_33;
            sub_23F58E124();
            if (!v16)
            {
              sub_23F58DFA4();
              if (v12 == v13)
                goto LABEL_33;
              sub_23F58E124();
              if (!v17)
              {
                sub_23F496C60();
                if (v12 == v13)
                  goto LABEL_33;
                if (!*(_QWORD *)(v33 + 8 * v18))
                {
                  while (!__OFADD__(v18, 1))
                  {
                    sub_23F58DFA4();
                    if (v12 == v13)
                      goto LABEL_33;
                    sub_23F58E188();
                    if (v19)
                      goto LABEL_27;
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_23F58E05C();
      }
      v20 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v11);
      v21 = v20[1];
      v35 = *v20;
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F35D2E8(v9);
      sub_23F5247E0();
      v22 = v21;
      sub_23F382A70(v2, v3);
      sub_23F382A70(v3, v37);
      sub_23F382A70(v37, v36);
      v23 = sub_23F58E118();
      v24 = v23;
      if ((v25 & 1) == 0)
        break;
      v8 = v3;
      v3 = v2;
      v2 = (_OWORD *)v0;
      v0 = v10;
      v10 = (uint64_t)v9;
      v26 = (_QWORD *)(v4[6] + 16 * v23);
      swift_bridgeObjectRelease();
      *v26 = v35;
      v26[1] = v22;
      v9 = (uint64_t *)v10;
      sub_23F58E0FC();
      v28 = (_OWORD *)(v27 + 32 * v24);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v28);
      sub_23F382A70(v36, v28);
      v7 = v34;
    }
    if (v4[2] >= v4[3])
      break;
    *(_QWORD *)(v32 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v29 = (_QWORD *)(v4[6] + 16 * v23);
    *v29 = v35;
    v29[1] = v22;
    sub_23F382A70(v36, (_OWORD *)(v4[7] + 32 * v23));
    v30 = v4[2];
    v13 = __OFADD__(v30, 1);
    v31 = v30 + 1;
    if (v13)
      goto LABEL_35;
    v4[2] = v31;
    v7 = v34;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_23F585D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  _OWORD v34[3];
  _OWORD v35[2];
  __int128 v36;
  _OWORD v37[2];

  sub_23F58E210();
  if (v1)
  {
    sub_23F35D2E8(&qword_256E7C9E0);
    v2 = sub_23F58DD74();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  sub_23F58DE54();
  v5 = v4 & v3;
  sub_23F58E2E8();
  sub_23F3668F4();
  sub_23F482D50();
  v6 = 0;
  if (!v5)
    goto LABEL_6;
LABEL_5:
  v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v8 = v7 | (v6 << 6);
  while (1)
  {
    v14 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v8);
    v16 = *v14;
    v15 = v14[1];
    sub_23F382B64(*(_QWORD *)(v0 + 56) + 32 * v8, (uint64_t)v37);
    *(_QWORD *)&v36 = v16;
    *((_QWORD *)&v36 + 1) = v15;
    v34[2] = v36;
    v35[0] = v37[0];
    v35[1] = v37[1];
    *(_QWORD *)&v34[0] = v16;
    *((_QWORD *)&v34[0] + 1) = v15;
    sub_23F383738();
    sub_23F5247E0();
    sub_23F58E25C(v35);
    v30 = v26;
    v31 = v27;
    v32 = v28;
    sub_23F382A70(&v29, v33);
    v26 = v30;
    v27 = v31;
    v28 = v32;
    sub_23F382A70(v33, v34);
    sub_23F382A70(v34, &v30);
    sub_23F61C880();
    sub_23F58DFB0();
    if (v17)
    {
      sub_23F482220();
      while (++v20 != v21 || (v19 & 1) == 0)
      {
        v22 = v20 == v21;
        if (v20 == v21)
          v20 = 0;
        v19 |= v22;
        if (*(_QWORD *)(v2 + 64 + 8 * v20) != -1)
        {
          sub_23F48220C();
          goto LABEL_37;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    sub_23F482234();
LABEL_37:
    sub_23F58DDE8(v18);
    *(_OWORD *)v23 = v26;
    *(_OWORD *)(v23 + 16) = v27;
    *(_QWORD *)(v23 + 32) = v28;
    sub_23F382A70(&v30, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v24));
    ++*(_QWORD *)(v2 + 16);
    if (v5)
      goto LABEL_5;
LABEL_6:
    if (__OFADD__(v6, 1))
      goto LABEL_41;
    sub_23F58E234();
    if (v9 == v10)
      goto LABEL_39;
    sub_23F58E1A4();
    if (!v12)
    {
      sub_23F58DFF0();
      if (v9 == v10)
        goto LABEL_39;
      sub_23F58E094();
      if (!v12)
      {
        sub_23F58DFF0();
        if (v9 == v10)
          goto LABEL_39;
        sub_23F58E094();
        if (!v12)
        {
          sub_23F58DFF0();
          if (v9 == v10)
            goto LABEL_39;
          sub_23F58E094();
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v12 - 1) & v12;
    v8 = __clz(__rbit64(v12)) + (v11 << 6);
    v6 = v11;
  }
  sub_23F58E234();
  if (v9 == v10)
  {
LABEL_39:
    sub_23F58E130();
    sub_23F58E1C0();
    return;
  }
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
  {
    v11 = v13;
    goto LABEL_27;
  }
  while (!__OFADD__(v13, 1))
  {
    sub_23F58DFF0();
    if (v9 == v10)
      goto LABEL_39;
    sub_23F58E188();
    if (v12)
      goto LABEL_27;
  }
LABEL_42:
  __break(1u);
}

void sub_23F586054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[2];
  _OWORD v30[2];

  sub_23F58E210();
  if (v0)
  {
    sub_23F35D2E8(&qword_256E7C9E0);
    v1 = sub_23F58DD74();
  }
  else
  {
    v1 = MEMORY[0x24BEE4B00];
  }
  sub_23F58DE54();
  v4 = v3 & v2;
  sub_23F58E2E8();
  sub_23F3668F4();
  sub_23F482D50();
  v5 = 0;
  if (!v4)
    goto LABEL_6;
LABEL_5:
  v4 &= v4 - 1;
  while (1)
  {
    v11 = sub_23F58E298();
    *(_QWORD *)&v30[0] = v12;
    *((_QWORD *)&v30[0] + 1) = v11;
    sub_23F617BA0();
    sub_23F383738();
    sub_23F5247E0();
    sub_23F5247E0();
    v26 = v22;
    v27 = v23;
    v28 = v24;
    sub_23F382A70(&v25, v29);
    v22 = v26;
    v23 = v27;
    v24 = v28;
    sub_23F382A70(v29, v30);
    sub_23F382A70(v30, &v26);
    sub_23F61C880();
    sub_23F58DFB0();
    if (v13)
    {
      sub_23F482220();
      while (++v16 != v17 || (v15 & 1) == 0)
      {
        v18 = v16 == v17;
        if (v16 == v17)
          v16 = 0;
        v15 |= v18;
        if (*(_QWORD *)(v1 + 64 + 8 * v16) != -1)
        {
          sub_23F48220C();
          goto LABEL_37;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    sub_23F482234();
LABEL_37:
    sub_23F58DDE8(v14);
    *(_OWORD *)v19 = v22;
    *(_OWORD *)(v19 + 16) = v23;
    *(_QWORD *)(v19 + 32) = v24;
    sub_23F382A70(&v26, (_OWORD *)(*(_QWORD *)(v1 + 56) + 32 * v20));
    ++*(_QWORD *)(v1 + 16);
    if (v4)
      goto LABEL_5;
LABEL_6:
    if (__OFADD__(v5, 1))
      goto LABEL_41;
    sub_23F58E234();
    if (v6 == v7)
      goto LABEL_39;
    sub_23F58E1A4();
    if (!v9)
    {
      sub_23F58DFF0();
      if (v6 == v7)
        goto LABEL_39;
      sub_23F58E094();
      if (!v9)
      {
        sub_23F58DFF0();
        if (v6 == v7)
          goto LABEL_39;
        sub_23F58E094();
        if (!v9)
        {
          sub_23F58DFF0();
          if (v6 == v7)
            goto LABEL_39;
          sub_23F58E094();
          if (!v9)
            break;
        }
      }
    }
LABEL_27:
    v4 = (v9 - 1) & v9;
    v5 = v8;
  }
  sub_23F58E234();
  if (v6 == v7)
  {
LABEL_39:
    sub_23F58E130();
    sub_23F58E1C0();
    return;
  }
  v9 = *(_QWORD *)(v21 + 8 * v10);
  if (v9)
  {
    v8 = v10;
    goto LABEL_27;
  }
  while (!__OFADD__(v10, 1))
  {
    sub_23F58DFF0();
    if (v6 == v7)
      goto LABEL_39;
    sub_23F58E188();
    if (v9)
      goto LABEL_27;
  }
LABEL_42:
  __break(1u);
}

unint64_t sub_23F5862F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __int128 *v6;
  __int128 *v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  __int128 v40;
  uint64_t v41;
  __int128 v42[3];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F35D2E8(&qword_256E7C9D8);
    v2 = (_QWORD *)sub_23F61CA90();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v36 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v35 = (unint64_t)(63 - v3) >> 6;
  v6 = (__int128 *)v39;
  v7 = (__int128 *)&v41;
  result = sub_23F617BA0();
  v37 = 0;
  v9 = MEMORY[0x24BEE0D00];
  v10 = MEMORY[0x24BE7AD80];
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        v38 = (v5 - 1) & v5;
        v11 = __clz(__rbit64(v5)) | (v37 << 6);
      }
      else
      {
        v12 = v37 + 1;
        if (__OFADD__(v37, 1))
          goto LABEL_34;
        if (v12 >= v35)
        {
LABEL_31:
          sub_23F382E18();
          return (unint64_t)v2;
        }
        v13 = *(_QWORD *)(v36 + 8 * v12);
        v14 = v37 + 1;
        if (!v13)
        {
          v14 = v37 + 2;
          if (v37 + 2 >= v35)
            goto LABEL_31;
          v13 = *(_QWORD *)(v36 + 8 * v14);
          if (!v13)
          {
            v14 = v37 + 3;
            if (v37 + 3 >= v35)
              goto LABEL_31;
            v13 = *(_QWORD *)(v36 + 8 * v14);
            if (!v13)
            {
              v14 = v37 + 4;
              if (v37 + 4 >= v35)
                goto LABEL_31;
              v13 = *(_QWORD *)(v36 + 8 * v14);
              if (!v13)
              {
                v15 = v37 + 5;
                if (v37 + 5 >= v35)
                  goto LABEL_31;
                v13 = *(_QWORD *)(v36 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      goto LABEL_35;
                    if (v14 >= v35)
                      goto LABEL_31;
                    v13 = *(_QWORD *)(v36 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_25;
                  }
                }
                v14 = v37 + 5;
              }
            }
          }
        }
LABEL_25:
        v37 = v14;
        v38 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
      }
      v16 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      v19 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v11);
      v20 = *v19;
      v21 = v19[1];
      v39[3] = v9;
      v39[4] = v10;
      v39[0] = v20;
      v39[1] = v21;
      sub_23F362678(v6, (uint64_t)v7);
      sub_23F362678(v7, (uint64_t)v42);
      sub_23F362678(v42, (uint64_t)&v40);
      sub_23F617BA0();
      sub_23F617BA0();
      result = sub_23F3754D4(v18, v17);
      v22 = result;
      if ((v23 & 1) == 0)
        break;
      v24 = v7;
      v25 = v1;
      v26 = v10;
      v27 = v9;
      v28 = v6;
      v29 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v29 = v18;
      v29[1] = v17;
      v6 = v28;
      v9 = v27;
      v10 = v26;
      v1 = v25;
      v7 = v24;
      v30 = v2[7] + 40 * v22;
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v30);
      result = sub_23F362678(&v40, v30);
      v5 = v38;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v31 = (uint64_t *)(v2[6] + 16 * result);
    *v31 = v18;
    v31[1] = v17;
    result = sub_23F362678(&v40, v2[7] + 40 * result);
    v32 = v2[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_33;
    v2[2] = v34;
    v5 = v38;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

void sub_23F586634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;

  v6 = sub_23F61C490();
  sub_23F383740(a1, 1, v6);
  if (v7)
  {
    sub_23F39E4B8(a1, &qword_256E717A8);
  }
  else
  {
    sub_23F61C484();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23F61C43C();
    swift_unknownObjectRelease();
  }
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_task_create();
  sub_23F507EB4();
}

uint64_t ResponseGenerationPromptVersion.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 3157558;
  else
    return 3157557;
}

void ResponseGenerationModelProvider.init(sessionIdentityToken:)(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint8_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  void *v31;
  os_log_t v32;
  os_log_type_t v33;
  const char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];

  v6 = sub_23F619E98();
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  sub_23F362850();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v36 - v11;
  v13 = type metadata accessor for ResponseGenerationPreferences();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3B17A4();
  v15 = (uint64_t)&a2[*(int *)(type metadata accessor for ResponseGenerationModelProvider(0) + 20)];
  v40 = a1;
  sub_23F56DE98(a1, v15, &qword_256E705E0);
  if (qword_256E6F0B8 != -1)
    swift_once();
  v16 = sub_23F361498(v13, (uint64_t)qword_256E803F8);
  swift_beginAccess();
  sub_23F58C090(v16, v3);
  sub_23F35D2E8(&qword_256E7C800);
  sub_23F617C48();
  v17 = v41[0];
  v18 = v41[1];
  sub_23F58C0D4(v3);
  sub_23F3B1EA4();
  v19 = sub_23F61CAB4();
  swift_bridgeObjectRelease();
  if (!v19)
  {
    v37 = v2;
    v20 = 0;
    goto LABEL_7;
  }
  if (v19 == 1)
  {
    v37 = v2;
    v20 = 1;
LABEL_7:
    swift_bridgeObjectRelease();
    sub_23F619124();
    v21 = sub_23F619E8C();
    v22 = sub_23F61C61C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)sub_23F366668();
      v24 = sub_23F366668();
      *(_DWORD *)v23 = 136315138;
      v41[0] = v24;
      if (v20)
        v25 = 3157558;
      else
        v25 = 3157557;
      sub_23F37AE00(v25, 0xE300000000000000, v41);
      sub_23F58E2C0(v26);
      sub_23F61C790();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F35A000, v21, v22, "Using prompt version %s", v23, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F39E4B8(v40, &qword_256E705E0);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v39);
    *a2 = v20;
    return;
  }
  sub_23F619124();
  sub_23F3B1EA4();
  v27 = sub_23F619E8C();
  v28 = sub_23F61C628();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)sub_23F366668();
    v41[0] = sub_23F366668();
    *(_DWORD *)v29 = 136315138;
    v37 = v29 + 4;
    sub_23F3B1EA4();
    sub_23F37AE00(v17, v18, v41);
    sub_23F58E2C0(v30);
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    sub_23F58E2AC();
    _os_log_impl(v31, v32, v33, v34, v29, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }

  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v39);
  sub_23F58C110();
  swift_allocError();
  *v35 = 0;
  v35[1] = 0;
  swift_willThrow();
  sub_23F39E4B8(v40, &qword_256E705E0);
  sub_23F39E4B8(v15, &qword_256E705E0);
}

IntelligenceFlowPlannerRuntime::ResponseGenerationPromptVersion_optional __swiftcall ResponseGenerationPromptVersion.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  char v4;
  IntelligenceFlowPlannerRuntime::ResponseGenerationPromptVersion_optional result;

  v2 = v1;
  v3 = sub_23F61CAB4();
  sub_23F362D18();
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v3)
    v4 = 0;
  *v2 = v4;
  sub_23F362B80();
  return result;
}

uint64_t ResponseGenerationModelProvider.getModelClient()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[32] = a1;
  v2[33] = v1;
  sub_23F35D2E8(&qword_256E705E0);
  v2[34] = sub_23F366578();
  v3 = sub_23F61BE60();
  v2[35] = v3;
  v2[36] = *(_QWORD *)(v3 - 8);
  v2[37] = sub_23F366578();
  v4 = sub_23F616DCC();
  v2[38] = v4;
  v2[39] = *(_QWORD *)(v4 - 8);
  v2[40] = sub_23F366578();
  v5 = sub_23F616E68();
  v2[41] = v5;
  v2[42] = *(_QWORD *)(v5 - 8);
  v2[43] = sub_23F3666CC();
  v2[44] = sub_23F3666CC();
  v2[45] = sub_23F3666CC();
  v2[46] = sub_23F3666CC();
  v6 = sub_23F3B1728();
  v2[47] = v6;
  v2[48] = *(_QWORD *)(v6 - 8);
  v2[49] = sub_23F3666CC();
  v2[50] = sub_23F3666CC();
  v2[51] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F586CEC()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  _QWORD *v13;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F3D9A84();
  sub_23F3F0F00();
  v1 = sub_23F619E8C();
  v2 = sub_23F61C61C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)sub_23F366668();
    *(_WORD *)v3 = 0;
    sub_23F4114BC(&dword_23F35A000, v1, v2, "Configuring GMS client", v3);
    sub_23F366530();
  }
  v4 = v0[48];
  v5 = v0[45];
  v6 = v0[44];
  v21 = v0[43];
  v22 = v0[42];
  v7 = v0[40];
  v16 = v0[41];
  v17 = v0[46];
  v9 = v0[38];
  v8 = v0[39];
  v18 = v0[36];
  v19 = v0[35];
  v20 = v0[37];

  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  v0[52] = v10;
  sub_23F4062C8(v10);
  sub_23F619070();
  v0[29] = 0x65686361434D4C4CLL;
  v0[30] = 0xE800000000000000;
  v11 = *MEMORY[0x24BDCD7A0];
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104);
  v15(v7, v11, v9);
  sub_23F38813C();
  sub_23F616E44();
  sub_23F58E278();
  swift_bridgeObjectRelease();
  v12 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v0[53] = v12;
  v12(v6, v16);
  v0[27] = 0xD000000000000012;
  v0[28] = 0x800000023F63AB30;
  v15(v7, v11, v9);
  sub_23F616E44();
  sub_23F58E278();
  swift_bridgeObjectRelease();
  v12(v5, v16);
  v0[54] = sub_23F61BDC4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x24BE5EAD0], v19);
  sub_23F362D94(v21, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
  v13 = (_QWORD *)swift_task_alloc();
  v0[55] = v13;
  *v13 = v0;
  v13[1] = sub_23F586F48;
  return sub_23F61BDB8();
}

uint64_t sub_23F586F48(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v7)(void);
  _QWORD *v8;

  v8 = (_QWORD *)*v2;
  v4 = v8;
  sub_23F3B2010(&v8);
  v4[56] = a1;
  v4[57] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23F36679C();
    return sub_23F3B183C();
  }
  else
  {
    v7 = (uint64_t (*)(void))((int)*MEMORY[0x24BE5EA08] + MEMORY[0x24BE5EA08]);
    v6 = (_QWORD *)swift_task_alloc();
    v4[58] = v6;
    *v6 = v2;
    v6[1] = sub_23F586FE4;
    return v7();
  }
}

uint64_t sub_23F586FE4()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1998();
  sub_23F3B201C();
  *(_QWORD *)(v1 + 472) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F587030()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  os_log_type_t v11;
  _BOOL8 v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  sub_23F3B15E8();
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 448);
  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = MEMORY[0x24BE5EA20];
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 432);
  *(_QWORD *)(v0 + 88) = v4;
  v1(v2, v3);
  v5 = sub_23F3840BC();
  sub_23F58C160(v5, v6);
  v7 = *(void **)(v0 + 400);
  sub_23F3F0F00();
  v24 = v0 + 16;
  v8 = sub_23F384AB4();
  sub_23F56DE98(v8, v9, v10);
  sub_23F619E8C();
  v11 = sub_23F3B1A04();
  v12 = sub_23F366874(v11);
  if (v12)
  {
    *(_DWORD *)sub_23F366668() = 67109120;
    sub_23F56DE98(v0 + 136, v0 + 96, &qword_256E7C818);
    v13 = *(_QWORD *)(v0 + 120) != 0;
    sub_23F58E034(v0 + 96);
    sub_23F58E034(v0 + 136);
    *(_DWORD *)(v0 + 480) = v13;
    sub_23F61C790();
    sub_23F58DE14(&dword_23F35A000, v14, v15, "Configuring GMS client, llmCache: %{BOOL}d");
    sub_23F366530();
  }
  sub_23F58E1F8(v12, &qword_256E7C818);

  v16 = *(_QWORD *)(v0 + 264);
  v17 = *(_QWORD *)(v0 + 272);
  v18 = *(uint64_t **)(v0 + 256);
  (*(void (**)(_QWORD, _QWORD))(v0 + 416))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 376));
  sub_23F56DE98(v24, v0 + 176, &qword_256E7C818);
  v19 = type metadata accessor for ResponseGenerationModelProvider(0);
  sub_23F58E2B8(v16 + *(int *)(v19 + 20), v20, &qword_256E705E0);
  v18[3] = sub_23F58E0A0();
  v18[4] = (uint64_t)&off_250FDD7A8;
  sub_23F3D96B4(v18);
  sub_23F587680(v0 + 176, v17, v21);
  sub_23F39E4B8(v24, &qword_256E7C818);
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F3666A0();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F362CC8();
  v22 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3B13B0(v22);
}

#error "23F5873E8: call analysis failed (funcsize=119)"

#error "23F587610: call analysis failed (funcsize=121)"

uint64_t sub_23F587680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  char v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  NSObject *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v64 = sub_23F3B1728();
  v60 = *(_QWORD *)(v64 - 8);
  sub_23F362850();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v56 = ((char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v55 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v55 - v13;
  sub_23F35D2E8(&qword_256E74168);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F383EC4();
  v16 = sub_23F6179E4();
  v59 = *(_QWORD *)(v16 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  v57 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ResponseGenerationPreferences();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F58E0A0();
  v61 = *(int *)(v23 + 28);
  *(_QWORD *)(a3 + v61) = 0;
  v63 = a1;
  sub_23F56DE98(a1, a3, &qword_256E7C818);
  v58 = v23;
  v24 = a3 + *(int *)(v23 + 20);
  v62 = a2;
  sub_23F56DE98(a2, v24, &qword_256E705E0);
  if (qword_256E6F0B8 != -1)
    v25 = swift_once();
  v26 = sub_23F58E308(v25, (uint64_t)qword_256E803F8);
  sub_23F3C08CC();
  sub_23F58C090(v26, (uint64_t)v22);
  v27 = &v22[*(int *)(v19 + 24)];
  sub_23F35D2E8(&qword_256E7C800);
  sub_23F617C48();
  v28 = v65;
  sub_23F58C0D4((uint64_t)v22);
  sub_23F362CDC();
  sub_23F6179D8();
  sub_23F383740(v3, 1, v16);
  if (v29)
  {
    sub_23F39E4B8(v3, &qword_256E74168);
    sub_23F619124();
    sub_23F362CDC();
    v30 = sub_23F619E8C();
    v31 = sub_23F61C628();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)sub_23F366668();
      v65 = sub_23F366668();
      *(_DWORD *)v32 = 136315138;
      sub_23F362CDC();
      sub_23F58E194();
      sub_23F58E330(v33);
      sub_23F61C790();
      sub_23F3E01D0();
      sub_23F38485C(&dword_23F35A000, v30, v31, "Unknown model bundle %s", v32);
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F384A80();

    sub_23F39E4B8(v62, &qword_256E705E0);
    sub_23F39E4B8(v63, &qword_256E7C818);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v14, v64);
    v41 = sub_23F35D2E8(&qword_256E74340);
    sub_23F58E1B0(v41, v42, v43, v41);
    v44 = v61;
    result = swift_release();
    *(_QWORD *)(a3 + v44) = 0;
  }
  else
  {
    v34 = v16;
    v35 = *(void (**)(char *, uint64_t))(v59 + 32);
    v36 = (uint64_t)v57;
    v55 = v34;
    v35(v57, v3);
    sub_23F58E328();
    sub_23F3E0254();
    sub_23F496C44();
    v37 = sub_23F507D60();
    if (os_log_type_enabled(v27, v37))
    {
      v39 = (uint8_t *)sub_23F366668();
      v65 = sub_23F366668();
      *(_DWORD *)v39 = 136315138;
      sub_23F362CDC();
      sub_23F58E194();
      sub_23F58E330(v40);
      sub_23F507D1C();
      sub_23F3E01D0();
      sub_23F38485C(&dword_23F35A000, v27, v37, "Using model bundle %s", v39);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F384A80();
    v46 = *(void (**)(char *, uint64_t))(v60 + 8);
    v46(v12, v64);
    v47 = a3 + *(int *)(v58 + 24);
    sub_23F61745C();
    sub_23F3612C0(&qword_256E74360, (uint64_t (*)(uint64_t))MEMORY[0x24BE68860], MEMORY[0x24BE68858]);
    sub_23F617444();
    v48 = sub_23F35D2E8(&qword_256E74340);
    sub_23F40B3E8(v47, v49, v50, v48);
    v51 = sub_23F588284(v36);
    *(_QWORD *)(a3 + v61) = v51;
    swift_retain();
    sub_23F366748();
    if (v51)
    {
      v52 = v56;
      sub_23F619124();
      sub_23F619E8C();
      v53 = sub_23F3B1A04();
      if (sub_23F384458(v53))
      {
        v54 = (uint8_t *)sub_23F366668();
        *(_WORD *)v54 = 0;
        sub_23F4114BC(&dword_23F35A000, v52, v28, "Prewarming model", v54);
        sub_23F366530();
      }

      v46((char *)v52, v64);
      sub_23F6179A8();
      swift_release();
    }
    sub_23F39E4B8(v62, &qword_256E705E0);
    sub_23F39E4B8(v63, &qword_256E7C818);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8))(v36, v55);
  }
  return result;
}

void ResponseGenerationModelProvider.getPromptBuilder()(uint64_t a1@<X8>)
{
  char *v1;
  char v2;

  v2 = *v1;
  *(_QWORD *)(a1 + 24) = &type metadata for DefaultResponseGenerationPromptBuilder;
  *(_QWORD *)(a1 + 32) = &off_250FDDE30;
  *(_BYTE *)a1 = v2;
}

BOOL sub_23F587C68(uint64_t a1, uint64_t a2)
{
  return a2 == 0;
}

uint64_t sub_23F587C74()
{
  sub_23F58D410();
  return sub_23F61CCAC();
}

uint64_t sub_23F587C9C()
{
  sub_23F58D410();
  return sub_23F61CCA0();
}

uint64_t sub_23F587CC4()
{
  uint64_t v0;

  v0 = qword_256E7C7D0;
  sub_23F617BA0();
  return v0;
}

BOOL sub_23F587CF8(uint64_t a1)
{
  uint64_t v1;

  return sub_23F587C68(a1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_23F587D00(char *a1, char *a2)
{
  return sub_23F489468(*a1, *a2);
}

void sub_23F587D0C()
{
  sub_23F3F620C();
}

uint64_t sub_23F587D14()
{
  return sub_23F4E6C14();
}

void sub_23F587D1C()
{
  sub_23F3F638C();
}

IntelligenceFlowPlannerRuntime::ResponseGenerationPromptVersion_optional sub_23F587D24(Swift::String *a1)
{
  return ResponseGenerationPromptVersion.init(rawValue:)(*a1);
}

void sub_23F587D30(uint64_t *a1@<X8>)
{
  *a1 = ResponseGenerationPromptVersion.rawValue.getter();
  a1[1] = 0xE300000000000000;
  sub_23F362928();
}

void sub_23F587D54()
{
  sub_23F61CD3C();
  sub_23F362928();
}

void sub_23F587D74()
{
  sub_23F362CB0();
  sub_23F61CD3C();
  sub_23F61CD60();
  sub_23F507EB4();
}

uint64_t sub_23F587DA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23F587E8C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65726F6373;
  else
    return 0x65736E6F70736572;
}

uint64_t sub_23F587EC0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23F35D2E8(&qword_256E7CA18);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B17A4();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F58D948();
  sub_23F61CD90();
  sub_23F61CBB0();
  if (!v1)
    sub_23F61CBC8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

double sub_23F587FE0(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  double v6;

  v4 = sub_23F35D2E8(&qword_256E7CA08);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F383EC4();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F58D948();
  sub_23F61CD84();
  if (v1)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_23F61CB14();
    sub_23F617BA0();
    sub_23F61CB2C();
    v2 = v6;
    sub_23F40EBB8();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
    sub_23F38432C();
  }
  return v2;
}

uint64_t sub_23F58813C()
{
  sub_23F58D90C();
  return sub_23F61CCAC();
}

uint64_t sub_23F588164()
{
  sub_23F58D90C();
  return sub_23F61CCA0();
}

uint64_t sub_23F58818C()
{
  uint64_t v0;

  v0 = qword_256E7C7E0;
  sub_23F617BA0();
  return v0;
}

uint64_t sub_23F5881C0()
{
  char *v0;

  return sub_23F587E8C(*v0);
}

uint64_t sub_23F5881C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F587DA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F5881EC()
{
  sub_23F58D948();
  return sub_23F61CDC0();
}

uint64_t sub_23F588214()
{
  sub_23F58D948();
  return sub_23F61CDCC();
}

void sub_23F58823C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;

  v6 = sub_23F587FE0(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v6;
  }
}

uint64_t sub_23F588268(_QWORD *a1)
{
  return sub_23F587EC0(a1);
}

uint64_t sub_23F588284(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v24 = a1;
  v2 = sub_23F6179CC();
  MEMORY[0x24BDAC7A8](v2);
  v25 = sub_23F617AEC();
  v3 = *(_QWORD *)(v25 - 8);
  v4 = MEMORY[0x24BDAC7A8](v25);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - v7;
  v9 = sub_23F61B104();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F35D2E8(&qword_256E705E0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ResponseGenerationGenerativeModelsClient(0);
  sub_23F56DE98(v1 + *(int *)(v16 + 20), (uint64_t)v15, &qword_256E705E0);
  if (sub_23F36195C((uint64_t)v15, 1, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    sub_23F445604();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_23F35D2E8(&qword_256E74178);
  v17 = sub_23F6179E4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_23F61E7E0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 16))(v20 + v19, v24, v17);
  sub_23F6179C0();
  sub_23F617AE0();
  v21 = v25;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v25);
  sub_23F6179B4();
  swift_allocObject();
  v22 = sub_23F617990();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v21);
  return v22;
}

uint64_t sub_23F588554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4[59] = a3;
  v4[60] = v3;
  v4[57] = a1;
  v4[58] = a2;
  sub_23F35D2E8(&qword_256E717A8);
  v4[61] = sub_23F366578();
  v5 = sub_23F61C148();
  v4[62] = v5;
  v4[63] = *(_QWORD *)(v5 - 8);
  v4[64] = sub_23F366578();
  v6 = sub_23F617A20();
  v4[65] = v6;
  v4[66] = *(_QWORD *)(v6 - 8);
  v4[67] = sub_23F366578();
  v7 = sub_23F617A38();
  v4[68] = v7;
  v4[69] = *(_QWORD *)(v7 - 8);
  v4[70] = sub_23F3666CC();
  v4[71] = sub_23F3666CC();
  v8 = sub_23F6179FC();
  v4[72] = v8;
  v4[73] = *(_QWORD *)(v8 - 8);
  v4[74] = sub_23F366578();
  sub_23F35D2E8(&qword_256E74288);
  v4[75] = sub_23F366578();
  v9 = sub_23F617984();
  v4[76] = v9;
  v4[77] = *(_QWORD *)(v9 - 8);
  v4[78] = sub_23F366578();
  v10 = sub_23F617A74();
  v4[79] = v10;
  v4[80] = *(_QWORD *)(v10 - 8);
  v4[81] = sub_23F366578();
  v11 = sub_23F617BD0();
  v4[82] = v11;
  v4[83] = *(_QWORD *)(v11 - 8);
  v4[84] = sub_23F366578();
  v12 = sub_23F6192A4();
  v4[85] = v12;
  v4[86] = *(_QWORD *)(v12 - 8);
  v4[87] = sub_23F366578();
  sub_23F35D2E8(&qword_256E7C8C0);
  v4[88] = sub_23F366578();
  v13 = sub_23F35D2E8(&qword_256E74340);
  v4[89] = v13;
  v4[90] = *(_QWORD *)(v13 - 8);
  v4[91] = sub_23F3666CC();
  v4[92] = sub_23F3666CC();
  v4[93] = type metadata accessor for ResponseGenerationPreferences();
  v4[94] = sub_23F366578();
  v14 = sub_23F61BE00();
  v4[95] = v14;
  v4[96] = *(_QWORD *)(v14 - 8);
  v4[97] = sub_23F366578();
  v15 = sub_23F61BE3C();
  v4[98] = v15;
  v4[99] = *(_QWORD *)(v15 - 8);
  v4[100] = sub_23F366578();
  v16 = sub_23F61BE6C();
  v4[101] = v16;
  v4[102] = *(_QWORD *)(v16 - 8);
  v4[103] = sub_23F366578();
  v17 = sub_23F61BE24();
  v4[104] = v17;
  v4[105] = *(_QWORD *)(v17 - 8);
  v4[106] = sub_23F366578();
  v18 = sub_23F3B1728();
  v4[107] = v18;
  v4[108] = *(_QWORD *)(v18 - 8);
  v4[109] = sub_23F3666CC();
  v4[110] = sub_23F3666CC();
  v4[111] = sub_23F3666CC();
  v4[112] = sub_23F3666CC();
  v4[113] = sub_23F3666CC();
  v4[114] = sub_23F3666CC();
  v4[115] = sub_23F3666CC();
  v4[116] = sub_23F3666CC();
  v4[117] = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5887E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  os_log_type_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  _BYTE *v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  float *v37;
  char v38;
  uint64_t v39;
  _BYTE *v40;
  os_log_type_t v41;
  uint8_t *v43;
  uint64_t v44;
  __n128 *inited;
  _QWORD *v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  sub_23F58E014();
  v55 = v1;
  v56 = v2;
  v54 = v0;
  v3 = *(void **)(v0 + 936);
  sub_23F3F0F00();
  sub_23F3E0254();
  sub_23F619E8C();
  v4 = sub_23F507D60();
  if (sub_23F366874(v4))
  {
    v5 = (uint8_t *)sub_23F366668();
    v53 = sub_23F366668();
    *(_DWORD *)v5 = 136380675;
    v6 = sub_23F384B00();
    sub_23F496C00(v6, v7, &v53);
    *(_QWORD *)(v0 + 408) = v8;
    sub_23F507D1C();
    sub_23F3E01D0();
    sub_23F58E2AC();
    sub_23F38485C(v9, v10, v11, v12, v5);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v13 = *(_QWORD *)(v0 + 936);
  v14 = *(_QWORD *)(v0 + 864);
  sub_23F384A80();

  v15 = *(void (**)(uint64_t))(v14 + 8);
  v16 = sub_23F384AB4();
  v15(v16);
  *(_QWORD *)(v0 + 944) = v15;
  v17 = *(_QWORD *)(v0 + 480);
  v18 = sub_23F58E0A0();
  *(_QWORD *)(v0 + 952) = v18;
  v19 = *(_QWORD *)(v17 + *(int *)(v18 + 28));
  *(_QWORD *)(v0 + 960) = v19;
  if (!v19)
  {
    sub_23F3F0F00();
    v27 = sub_23F619E8C();
    v28 = sub_23F61C628();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)sub_23F366668();
      *(_WORD *)v29 = 0;
      sub_23F4114BC(&dword_23F35A000, v27, v28, "TokenGenerator is not available", v29);
      sub_23F366530();
    }

    v30 = sub_23F384AB4();
    v15(v30);
    sub_23F58D44C();
    sub_23F362D64();
    *v31 = 0;
    sub_23F488E9C();
    goto LABEL_16;
  }
  sub_23F56DE98(v17, v0 + 80, &qword_256E7C818);
  if (*(_QWORD *)(v0 + 104))
  {
    v20 = *(_QWORD *)(v0 + 824);
    v21 = *(_QWORD *)(v0 + 816);
    v22 = *(_QWORD *)(v0 + 808);
    sub_23F362678((__int128 *)(v0 + 80), v0 + 120);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 104))(v20, *MEMORY[0x24BE5EAF8], v22);
    sub_23F384B00();
    sub_23F482D50();
    sub_23F61BE18();
    v23 = (_QWORD *)sub_23F3840BC();
    sub_23F35EA9C(v23, v24);
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 968) = v25;
    *v25 = v0;
    v25[1] = sub_23F588ECC;
    return sub_23F61BDD0();
  }
  sub_23F482D50();
  sub_23F39E4B8(v0 + 80, &qword_256E7C818);
  *(_QWORD *)(v0 + 984) = MEMORY[0x24BEE4AF8];
  if (qword_256E6F0B8 != -1)
    swift_once();
  v32 = *(NSObject **)(v0 + 920);
  v33 = *(_QWORD *)(v0 + 752);
  v34 = *(_QWORD *)(v0 + 744);
  v35 = sub_23F361498(v34, (uint64_t)qword_256E803F8);
  *(_QWORD *)(v0 + 992) = v35;
  sub_23F3C08CC();
  sub_23F58C090(v35, v33);
  sub_23F35D2E8(&qword_256E7C988);
  sub_23F58E284();
  sub_23F58C0D4(v33);
  sub_23F619124();
  sub_23F619E8C();
  v36 = sub_23F3B1A04();
  if (sub_23F384458(v36))
  {
    v37 = (float *)sub_23F366668();
    sub_23F58DFD4(v37, 3.852e-34);
    sub_23F38485C(&dword_23F35A000, v32, (os_log_type_t)v32, "Calling complete with timeout %f seconds", (uint8_t *)v37);
    sub_23F366530();
  }
  sub_23F58DF08();
  sub_23F58E310();
  sub_23F56DE98(v0 + 392 + *(int *)(v13 + 24), v34, &qword_256E7C8C0);
  sub_23F383740(v34, 1, v33);
  if (v38)
  {
    v39 = *(_QWORD *)(v0 + 704);
    swift_bridgeObjectRelease();
    sub_23F39E4B8(v39, &qword_256E7C8C0);
    sub_23F58D44C();
    sub_23F362D64();
    *v40 = 0;
    sub_23F488E9C();
    sub_23F366748();
LABEL_16:
    swift_task_dealloc();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F362CC8();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F3666DC();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383AD4();
    swift_task_dealloc();
    return sub_23F58DCA4(*(uint64_t (**)(void))(v0 + 8));
  }
  sub_23F58DD58();
  sub_23F3F0F00();
  sub_23F619E8C();
  v41 = sub_23F507D60();
  if (sub_23F3B1E8C(v41))
  {
    v43 = (uint8_t *)sub_23F366668();
    v53 = sub_23F366668();
    sub_23F58E160(4.8149e-34);
    sub_23F58DDB4((uint64_t)"com.apple.intelligenceflow.responseGeneration.genericChat");
    sub_23F58DFFC(v44);
    sub_23F38485C(&dword_23F35A000, v32, (os_log_type_t)v33, "Prompt template identifier: %s", v43);
    sub_23F3B17D4();
    sub_23F366530();
  }

  sub_23F3D9EAC();
  sub_23F58DEA0();
  sub_23F61BFEC();
  sub_23F58E07C();
  sub_23F58DF28();
  sub_23F35D2E8(&qword_256E6FC58);
  inited = (__n128 *)swift_initStackObject();
  sub_23F58DD24(inited, (__n128)xmmword_23F61E7E0);
  *(_QWORD *)(v0 + 1000) = sub_23F61BFEC();
  v46 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1008) = v46;
  sub_23F58E1E8(v46);
  v47 = sub_23F58E2D4();
  return sub_23F58DCC4(v48, v49, v50, v51, v52, v47);
}

uint64_t sub_23F588ECC()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1998();
  sub_23F3B201C();
  *(_QWORD *)(v1 + 976) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F588F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,_QWORD *a40,uint64_t a41,uint64_t a42)
{
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(_QWORD, unint64_t, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  _BOOL4 v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  _BYTE *v85;
  os_log_type_t v87;
  _BOOL4 v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t inited;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;

  sub_23F58E014();
  a41 = v43;
  a42 = v44;
  a40 = v42;
  v45 = (uint64_t)(v42 + 15);
  v46 = v42[99];
  v47 = sub_23F61BE30();
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
  v48 = *(_QWORD *)(v47 + 16);
  v110 = v42;
  v106 = (uint64_t)(v42 + 15);
  if (v48)
  {
    v49 = v42[96];
    a28 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v50 = v47 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
    v107 = *(_QWORD *)(v49 + 72);
    v51 = v49;
    v52 = *(void (**)(_QWORD, unint64_t, _QWORD))(v49 + 16);
    do
    {
      v52(v110[97], v50, v110[95]);
      v53 = sub_23F61BDF4();
      v55 = v54;
      sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
      v56 = a28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B47C();
        v56 = a28;
      }
      v57 = *(_QWORD *)(v56 + 16);
      if (v57 >= *(_QWORD *)(v56 + 24) >> 1)
      {
        sub_23F37B47C();
        v56 = a28;
      }
      *(_QWORD *)(v56 + 16) = v57 + 1;
      v58 = v56 + 16 * v57;
      *(_QWORD *)(v58 + 32) = v53;
      *(_QWORD *)(v58 + 40) = v55;
      v50 += v107;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
    v42 = v110;
    v45 = v106;
  }
  else
  {
    swift_bridgeObjectRelease();
    v56 = MEMORY[0x24BEE4AF8];
  }
  if (*(_QWORD *)(v56 + 16))
  {
    sub_23F3F0F00();
    sub_23F3E0254();
    v59 = sub_23F619E8C();
    v60 = sub_23F61C61C();
    v61 = os_log_type_enabled(v59, v60);
    v62 = (void (*)(uint64_t, uint64_t))v42[118];
    v104 = v42[107];
    v105 = v42[116];
    v63 = v42[106];
    v108 = v42[105];
    v64 = v42[104];
    if (v61)
    {
      v65 = (uint8_t *)sub_23F366668();
      a28 = sub_23F366668();
      *(_DWORD *)v65 = 136315138;
      v66 = sub_23F3668F4();
      v67 = MEMORY[0x24266F8F8](v66, MEMORY[0x24BEE0D00]);
      v69 = v68;
      sub_23F362D18();
      sub_23F37AE00(v67, v69, &a28);
      v110[56] = v70;
      sub_23F61C790();
      sub_23F362984();
      sub_23F384A80();
      sub_23F38485C(&dword_23F35A000, v59, v60, "Using draft cache: %s", v65);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F384A80();
    v62(v105, v104);
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v63, v64);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v42[105] + 8))(v42[106], v42[104]);
  }
  v71 = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v45);
  v42[123] = v56;
  if (qword_256E6F0B8 != -1)
    v71 = swift_once();
  v72 = v42[115];
  v73 = v42[94];
  v74 = sub_23F58E308(v71, (uint64_t)qword_256E803F8);
  v42[124] = v74;
  sub_23F3C08CC();
  sub_23F58C090(v74, v73);
  sub_23F35D2E8(&qword_256E7C988);
  sub_23F617C48();
  v75 = *((double *)v42 + 49);
  sub_23F58C0D4(v73);
  sub_23F619124();
  v76 = v72;
  sub_23F619E8C();
  v77 = sub_23F3B1A04();
  if (sub_23F384458(v77))
  {
    v78 = (uint8_t *)sub_23F366668();
    *(_DWORD *)v78 = 134217984;
    *((double *)v42 + 54) = v75;
    sub_23F61C790();
    sub_23F38485C(&dword_23F35A000, v72, (os_log_type_t)v72, "Calling complete with timeout %f seconds", v78);
    sub_23F366530();
  }
  v79 = v42[119];
  v80 = v42[89];
  v81 = v42[88];
  v82 = v42[60];

  sub_23F58E31C();
  sub_23F56DE98(v82 + *(int *)(v79 + 24), v81, &qword_256E7C8C0);
  sub_23F383740(v81, 1, v80);
  if (v83)
  {
    v84 = sub_23F362D18();
    sub_23F58E1F8(v84, &qword_256E7C8C0);
    sub_23F58D44C();
    sub_23F362D64();
    *v85 = 0;
    sub_23F488E9C();
    sub_23F366748();
    sub_23F58DBB4();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F362CC8();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F3666DC();
    sub_23F3668E4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383AD4();
    return sub_23F58DCA4((uint64_t (*)(void))v42[1]);
  }
  else
  {
    sub_23F58DD58();
    sub_23F3F0F00();
    sub_23F619E8C();
    v87 = sub_23F507D60();
    v88 = sub_23F482920(v87);
    v89 = (void (*)(uint64_t, uint64_t))v42[118];
    v90 = v42[114];
    v91 = v42[107];
    if (v88)
    {
      v92 = (uint8_t *)sub_23F366668();
      a28 = sub_23F366668();
      *(_DWORD *)v92 = 136315138;
      sub_23F58DDB4((uint64_t)"com.apple.intelligenceflow.responseGeneration.genericChat");
      v42[53] = v93;
      sub_23F61C790();
      sub_23F38485C(&dword_23F35A000, v76, (os_log_type_t)v80, "Prompt template identifier: %s", v92);
      sub_23F3B17D4();
      sub_23F366530();
    }

    v89(v90, v91);
    v94 = v42[92];
    v95 = v42[91];
    v96 = v42[90];
    v97 = v42[89];
    v98 = v42[59];
    v109 = v42[58];
    v111 = (_QWORD *)v42[120];
    sub_23F61BFEC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v95, v94, v97);
    sub_23F619298();
    sub_23F35D2E8(&qword_256E6FC58);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
    *(_QWORD *)(inited + 32) = 0x6E72755472657375;
    *(_QWORD *)(inited + 40) = 0xEF746E65746E6F43;
    *(_QWORD *)(inited + 48) = v109;
    *(_QWORD *)(inited + 56) = v98;
    sub_23F384A00();
    v100 = sub_23F61BFEC();
    v42[125] = v100;
    v101 = (_QWORD *)swift_task_alloc();
    v42[126] = v101;
    v102 = sub_23F58E1E8(v101);
    return sub_23F58DCC4(v102, v103, v100, v56, v111, v75);
  }
}

uint64_t sub_23F589670()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  sub_23F3B2010(&v4);
  *(_QWORD *)(v2 + 1016) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23F362D18();
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F5896D8()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F3612C0(&qword_256E7C998, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8648], MEMORY[0x24BEB8640]);
  sub_23F617BDC();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1024) = v1;
  *v1 = v0;
  v1[1] = sub_23F58976C;
  return sub_23F617978();
}

uint64_t sub_23F58976C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  sub_23F3B2010(&v4);
  *(_QWORD *)(v2 + 1032) = v0;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v2 + 616));
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F5897D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 720);
  v2 = *(_QWORD *)(v0 + 696);
  v3 = *(_QWORD *)(v0 + 688);
  swift_release();
  sub_23F383CA8(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F58DB14(*(_QWORD *)(v0 + 1016));
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383FDC();
  sub_23F38409C();
  swift_task_dealloc();
  return sub_23F58DDCC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5898B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD, uint64_t);
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  BOOL v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  void *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  void *v45;
  NSObject *v46;
  os_log_type_t v47;
  const char *v48;
  uint64_t v49;
  int v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t);
  uint64_t (*v62)(void);
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(_QWORD);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115[4];

  v1 = v0[75];
  v2 = sub_23F617A08();
  sub_23F36FF38(v2, v1);
  sub_23F362984();
  v3 = sub_23F617A68();
  v4 = sub_23F383740(v1, 1, v3);
  if (v5)
  {
    sub_23F39E4B8(v0[75], &qword_256E74288);
    v98 = v0[129];
    v8 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v0[129];
    v7 = MEMORY[0x24266AF6C](v4);
    sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
    v8 = sub_23F43A75C(v7);
    v98 = v6;
    swift_bridgeObjectRelease();
  }
  v9 = *(_QWORD *)(v8 + 16);
  v114 = v0;
  if (v9)
  {
    v10 = v0[69];
    v104 = v0[66];
    v11 = v8 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v12 = *(_QWORD *)(v10 + 72);
    v110 = *(void (**)(_QWORD))(v10 + 16);
    v107 = *MEMORY[0x24BEB8230];
    sub_23F383738();
    v112 = 0;
    v13 = 0xE000000000000000;
    v101 = v12;
    do
    {
      v14 = v0[70];
      v15 = v0[68];
      ((void (*)(_QWORD, unint64_t, uint64_t))v110)(v0[71], v11, v15);
      v16 = sub_23F3C85C0();
      v110(v16);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88))(v14, v15);
      v18 = v0[70];
      v19 = v0[68];
      if (v17 == v107)
      {
        v20 = v0[67];
        v21 = v114[65];
        (*(void (**)(_QWORD, uint64_t))(v10 + 96))(v0[70], v19);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 32))(v20, v18, v21);
        sub_23F617A14();
        v115[0] = 0;
        v115[1] = v13;
        sub_23F384A00();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v22 = v13;
        v23 = v21;
        v12 = v101;
        v0 = v114;
        (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v20, v23);
        (*(void (**)(_QWORD, _QWORD))(v10 + 8))(v0[71], v0[68]);
      }
      else
      {
        v24 = *(void (**)(_QWORD, uint64_t))(v10 + 8);
        v24(v0[70], v19);
        sub_23F384A00();
        v22 = v13;
        v24(v0[71], v0[68]);
      }
      swift_bridgeObjectRelease();
      v11 += v12;
      v13 = v22;
      --v9;
    }
    while (v9);
    sub_23F384A80();
  }
  else
  {
    sub_23F362984();
    v112 = 0;
    v22 = 0xE000000000000000;
  }
  v25 = v0[113];
  v26 = v0[73];
  sub_23F617A2C();
  v27 = sub_23F6179F0();
  v29 = v28;
  sub_23F4062C8(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  sub_23F619124();
  sub_23F3E0254();
  sub_23F619E8C();
  v30 = sub_23F507D60();
  v31 = sub_23F366874(v30);
  v32 = (void (*)(uint64_t, uint64_t))v0[118];
  v33 = v0[113];
  v34 = v0[107];
  v108 = v27;
  v111 = v29;
  if (v31)
  {
    v35 = (uint8_t *)sub_23F366668();
    v115[0] = sub_23F366668();
    *(_DWORD *)v35 = 136315138;
    sub_23F384A00();
    sub_23F37AE00(v27, v29, v115);
    v114[47] = v36;
    sub_23F58E2FC();
    sub_23F61C790();
    sub_23F3E01D0();
    sub_23F38485C(&dword_23F35A000, v25, (os_log_type_t)v25, "Model identifier:\n%s", v35);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F384A80();

  v32(v33, v34);
  v37 = (void *)v0[112];
  sub_23F3F0F00();
  sub_23F3E0254();
  sub_23F619E8C();
  v38 = sub_23F507D60();
  v39 = sub_23F366874(v38);
  v40 = (void (*)(uint64_t, uint64_t))v0[118];
  v41 = v0[112];
  v42 = v0[107];
  if (v39)
  {
    v43 = (uint8_t *)sub_23F366668();
    v115[0] = sub_23F366668();
    *(_DWORD *)v43 = 136380675;
    sub_23F3668F4();
    sub_23F37AE00(0, v22, v115);
    v114[50] = v44;
    sub_23F507D1C();
    sub_23F3E01D0();
    sub_23F58E2AC();
    sub_23F38485C(v45, v46, v47, v48, v43);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F384A80();

  v40(v41, v42);
  v49 = v0[94];
  sub_23F58C090(v0[124], v49);
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F58E284();
  v50 = *((unsigned __int8 *)v0 + 1040);
  sub_23F58C0D4(v49);
  v51 = 1.0;
  if (v50 == 1)
  {
    v53 = v0[63];
    v52 = v0[64];
    v54 = v0[62];
    v0[45] = 0;
    v0[46] = v22;
    v0[41] = 11763938;
    v0[42] = 0xA300000000000000;
    v0[43] = 34;
    v0[44] = 0xE100000000000000;
    sub_23F38813C();
    sub_23F61C7CC();
    sub_23F61C13C();
    sub_23F61C118();
    v56 = v55;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
    if (v56 >> 60 == 15)
    {
      sub_23F58D564();
      sub_23F362D64();
      sub_23F488E9C();
      sub_23F366748();
      sub_23F362D18();
LABEL_21:
      swift_bridgeObjectRelease();
      v57 = v0[87];
      v58 = v0[86];
      v59 = v0[83];
      sub_23F384274(v0[80]);
      sub_23F4062C8(*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8));
      sub_23F383CA8(v57, *(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
      v60 = sub_23F3840BC();
      v61(v60);
LABEL_22:
      swift_task_dealloc();
      sub_23F3666DC();
      sub_23F3666C4();
      sub_23F3666EC();
      sub_23F366708();
      sub_23F3666E4();
      sub_23F366698();
      sub_23F3666D4();
      sub_23F3666A0();
      sub_23F362CC8();
      sub_23F383890();
      sub_23F383888();
      sub_23F383880();
      sub_23F383878();
      sub_23F383870();
      sub_23F383868();
      sub_23F383C4C();
      sub_23F383C44();
      sub_23F383C3C();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_23F383AF4();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_23F383ADC();
      sub_23F383AD4();
      v62 = (uint64_t (*)(void))v0[1];
      return v62();
    }
    sub_23F616ACC();
    swift_allocObject();
    sub_23F616AC0();
    sub_23F58D5A0();
    sub_23F616AB4();
    if (v98)
    {
      sub_23F366748();
      sub_23F58E28C();
      swift_release();
      sub_23F362D18();
      goto LABEL_21;
    }
    sub_23F366748();
    sub_23F58E28C();
    sub_23F362D18();
    v22 = v0[39];
    v51 = *((double *)v0 + 40);
    if (v51 < 0.75)
    {
      v63 = v0[111];
      swift_bridgeObjectRelease();
      sub_23F3F0F00();
      sub_23F3668F4();
      sub_23F619E8C();
      v64 = sub_23F507D60();
      if (sub_23F384458(v64))
      {
        v65 = (uint8_t *)sub_23F366668();
        *(_DWORD *)v65 = 134217984;
        *((double *)v0 + 48) = v51;
        sub_23F61C790();
        sub_23F384A80();
        sub_23F38485C(&dword_23F35A000, v63, OS_LOG_TYPE_DEFAULT, "Reflection score %f < 0.75, rejecting model response.", v65);
        sub_23F366530();
      }
      sub_23F384A80();

      v113 = v0[92];
      v106 = v0[87];
      v109 = v0[90];
      v85 = v0[86];
      v103 = v0[85];
      v86 = v0[84];
      v87 = v0[83];
      v88 = v0[82];
      v89 = v114[79];
      ((void (*)(_QWORD, _QWORD))v0[118])(v0[111], v0[107]);
      sub_23F58D44C();
      sub_23F362D64();
      *v90 = 2;
      sub_23F488E9C();
      swift_release();
      v91 = sub_23F58E2FC();
      v92(v91, v89);
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v86, v88);
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v106, v103);
      (*(void (**)(uint64_t))(v109 + 8))(v113);
      goto LABEL_22;
    }
    v112 = v0[38];
  }
  sub_23F56DE98(v0[60], (uint64_t)(v0 + 30), &qword_256E7C818);
  v105 = v0[92];
  v66 = v0[90];
  v67 = v0[89];
  v68 = v0[87];
  v69 = v0[85];
  v70 = v0[84];
  v71 = v0[82];
  v100 = v0[83];
  v102 = v0[86];
  if (v0[33])
  {
    v97 = v0[85];
    v72 = v114[61];
    v73 = v114[59];
    v95 = v0[79];
    v96 = v0[87];
    v74 = v114[58];
    v93 = v0[80];
    v94 = v0[81];
    sub_23F362678((__int128 *)v0 + 15, (uint64_t)(v0 + 25));
    sub_23F61C478();
    v75 = sub_23F61C490();
    sub_23F40B3E8(v72, v76, v77, v75);
    sub_23F361418((uint64_t)(v0 + 25), (uint64_t)(v0 + 20));
    v78 = swift_allocObject();
    *(_QWORD *)(v78 + 16) = 0;
    *(_QWORD *)(v78 + 24) = 0;
    sub_23F362678((__int128 *)v0 + 10, v78 + 32);
    *(_QWORD *)(v78 + 72) = v74;
    *(_QWORD *)(v78 + 80) = v73;
    *(_QWORD *)(v78 + 88) = v112;
    *(_QWORD *)(v78 + 96) = v22;
    *(double *)(v78 + 104) = v51;
    sub_23F383738();
    sub_23F3668F4();
    v79 = sub_23F58E2FC();
    sub_23F586634(v79, v80, v78);
    swift_release();
    sub_23F366748();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v0 + 25));
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v94, v95);
    sub_23F383E64(v70, *(uint64_t (**)(uint64_t, uint64_t))(v100 + 8));
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v96, v97);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v105, v67);
  }
  else
  {
    v99 = v0[84];
    v81 = v0[81];
    v82 = v0[80];
    swift_release();
    sub_23F383E64(v81, *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8));
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v99, v71);
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v68, v69);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v105, v67);
    sub_23F39E4B8((uint64_t)(v0 + 30), &qword_256E7C818);
  }
  v83 = (_QWORD *)v0[57];
  *v83 = v112;
  v83[1] = v22;
  v83[2] = v108;
  v83[3] = v111;
  swift_task_dealloc();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3666EC();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F383AF4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F366698();
  v62 = (uint64_t (*)(void))sub_23F384760();
  return v62();
}

uint64_t sub_23F58A55C()
{
  uint64_t v0;
  os_log_type_t v1;
  NSObject *v2;
  os_log_type_t v3;
  void *v4;
  uint8_t *v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  float *v16;
  char v17;
  uint64_t v18;
  _BYTE *v19;
  os_log_type_t v21;
  uint8_t *v23;
  uint64_t v24;
  __n128 *inited;
  _QWORD *v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;

  sub_23F58E014();
  v2 = *(NSObject **)(v0 + 976);
  sub_23F384274(*(_QWORD *)(v0 + 840));
  sub_23F58E328();
  sub_23F366808();
  sub_23F366808();
  sub_23F496C44();
  v3 = sub_23F3B1A04();
  if (sub_23F482920(v3))
  {
    v4 = *(void **)(v0 + 976);
    v5 = (uint8_t *)sub_23F366668();
    v6 = (_QWORD *)sub_23F366668();
    *(_DWORD *)v5 = 138412290;
    v7 = v4;
    v8 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 440) = v8;
    sub_23F61C790();
    *v6 = v8;

    sub_23F38485C(&dword_23F35A000, v2, v1, "Cache search failed: %@", v5);
    sub_23F35D2E8(&qword_256E6FAB0);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F3665E8();
  sub_23F3665E8();
  v9 = *(_QWORD *)(v0 + 976);
  v10 = *(_QWORD *)(v0 + 872);

  sub_23F58E31C();
  sub_23F3665E8();
  v11 = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 120);
  *(_QWORD *)(v0 + 984) = MEMORY[0x24BEE4AF8];
  if (qword_256E6F0B8 != -1)
    v11 = swift_once();
  v12 = *(NSObject **)(v0 + 920);
  v13 = *(_QWORD *)(v0 + 752);
  v14 = sub_23F58E308(v11, (uint64_t)qword_256E803F8);
  *(_QWORD *)(v0 + 992) = v14;
  sub_23F3C08CC();
  sub_23F58C090(v14, v13);
  sub_23F35D2E8(&qword_256E7C988);
  sub_23F58E284();
  sub_23F58C0D4(v13);
  sub_23F619124();
  sub_23F619E8C();
  v15 = sub_23F3B1A04();
  if (sub_23F384458(v15))
  {
    v16 = (float *)sub_23F366668();
    sub_23F58DFD4(v16, 3.852e-34);
    sub_23F38485C(&dword_23F35A000, v12, (os_log_type_t)v10, "Calling complete with timeout %f seconds", (uint8_t *)v16);
    sub_23F366530();
  }
  sub_23F58DF08();
  sub_23F58E310();
  sub_23F56DE98(v0 + 392 + *(int *)(v9 + 24), v13, &qword_256E7C8C0);
  sub_23F383740(v13, 1, (uint64_t)v12);
  if (v17)
  {
    v18 = *(_QWORD *)(v0 + 704);
    swift_bridgeObjectRelease();
    sub_23F39E4B8(v18, &qword_256E7C8C0);
    sub_23F58D44C();
    sub_23F362D64();
    *v19 = 0;
    sub_23F488E9C();
    sub_23F366748();
    sub_23F58DBB4();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F362CC8();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F3666DC();
    sub_23F3668E4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383AD4();
    return sub_23F58DCA4(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    sub_23F58DD58();
    sub_23F3F0F00();
    sub_23F619E8C();
    v21 = sub_23F507D60();
    if (sub_23F3B1E8C(v21))
    {
      v23 = (uint8_t *)sub_23F366668();
      sub_23F366668();
      sub_23F58E160(4.8149e-34);
      sub_23F58DDB4((uint64_t)"com.apple.intelligenceflow.responseGeneration.genericChat");
      sub_23F58DFFC(v24);
      sub_23F38485C(&dword_23F35A000, v12, (os_log_type_t)v12, "Prompt template identifier: %s", v23);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F3D9EAC();
    sub_23F58DEA0();
    sub_23F61BFEC();
    sub_23F58E07C();
    sub_23F58DF28();
    sub_23F35D2E8(&qword_256E6FC58);
    inited = (__n128 *)swift_initStackObject();
    sub_23F58DD24(inited, (__n128)xmmword_23F61E7E0);
    *(_QWORD *)(v0 + 1000) = sub_23F61BFEC();
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1008) = v26;
    sub_23F58E1E8(v26);
    v27 = sub_23F58E2D4();
    return sub_23F58DCC4(v28, v29, v30, v31, v32, v27);
  }
}

uint64_t sub_23F58AA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 720);
  v2 = *(_QWORD *)(v0 + 696);
  v3 = *(_QWORD *)(v0 + 688);
  v4 = *(_QWORD *)(v0 + 664);
  swift_release();
  sub_23F4062C8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F383CA8(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F58DB14(*(_QWORD *)(v0 + 1032));
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383FDC();
  sub_23F38409C();
  swift_task_dealloc();
  return sub_23F58DDCC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F58AB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  v9 = sub_23F619E98();
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F58AB8C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23F35EA9C(*(_QWORD **)(v0 + 40), *(_QWORD *)(*(_QWORD *)(v0 + 40) + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_23F58AC04;
  return sub_23F61BDE8();
}

uint64_t sub_23F58AC04()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1998();
  sub_23F3B201C();
  *(_QWORD *)(v1 + 120) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F58AC50()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  os_log_t v11;
  os_log_type_t v12;
  const char *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v17;

  v1 = *(void **)(v0 + 104);
  sub_23F3F0F00();
  sub_23F3E0254();
  sub_23F3E0254();
  sub_23F619E8C();
  v2 = sub_23F3B1A04();
  if (sub_23F366874(v2))
  {
    v3 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 48);
    v5 = sub_23F366668();
    v17 = sub_23F366668();
    *(_DWORD *)v5 = 136380931;
    sub_23F3B1EA4();
    sub_23F37AE00(v4, v3, &v17);
    *(_QWORD *)(v0 + 24) = v6;
    sub_23F384AB4();
    sub_23F61C790();
    sub_23F3E01D0();
    *(_WORD *)(v5 + 12) = 2081;
    v7 = sub_23F384B00();
    sub_23F496C00(v7, v8, &v17);
    *(_QWORD *)(v0 + 32) = v9;
    sub_23F61C790();
    sub_23F3E01D0();
    sub_23F58E2AC();
    _os_log_impl(v10, v11, v12, v13, (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    sub_23F366530();
  }
  sub_23F384A80();
  sub_23F384A80();

  v14 = sub_23F384AB4();
  v15(v14);
  swift_task_dealloc();
  sub_23F362CC8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F58AE10()
{
  uint64_t v0;
  os_log_type_t v1;
  NSObject *v2;
  os_log_type_t v3;
  void *v4;
  uint8_t *v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;

  v2 = *(NSObject **)(v0 + 120);
  sub_23F58E328();
  sub_23F366808();
  sub_23F366808();
  sub_23F496C44();
  v3 = sub_23F3B1A04();
  if (sub_23F366874(v3))
  {
    v4 = *(void **)(v0 + 120);
    v5 = (uint8_t *)sub_23F366668();
    v6 = (_QWORD *)sub_23F366668();
    *(_DWORD *)v5 = 138412290;
    v7 = v4;
    v8 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v8;
    sub_23F61C790();
    *v6 = v8;
    sub_23F3665E8();
    sub_23F3665E8();
    sub_23F38485C(&dword_23F35A000, v2, v1, "Cache insertion failed: %@", v5);
    sub_23F35D2E8(&qword_256E6FAB0);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F3665E8();
  sub_23F3665E8();
  sub_23F3665E8();

  sub_23F384274(*(_QWORD *)(v0 + 88));
  swift_task_dealloc();
  sub_23F362CC8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F58AF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v6 + 272) = a4;
  *(_QWORD *)(v6 + 280) = a5;
  *(double *)(v6 + 264) = a6;
  *(_QWORD *)(v6 + 248) = a2;
  *(_QWORD *)(v6 + 256) = a3;
  *(_QWORD *)(v6 + 240) = a1;
  *(_QWORD *)(v6 + 288) = *a5;
  v7 = sub_23F35D2E8(&qword_256E74290);
  *(_QWORD *)(v6 + 296) = v7;
  *(_QWORD *)(v6 + 304) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 312) = swift_task_alloc();
  sub_23F35D2E8(&qword_256E74298);
  *(_QWORD *)(v6 + 320) = swift_task_alloc();
  *(_QWORD *)(v6 + 328) = sub_23F35D2E8(&qword_256E742A0);
  *(_QWORD *)(v6 + 336) = swift_task_alloc();
  v8 = sub_23F6187C4();
  *(_QWORD *)(v6 + 344) = v8;
  *(_QWORD *)(v6 + 352) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 360) = swift_task_alloc();
  v9 = sub_23F6187D0();
  *(_QWORD *)(v6 + 368) = v9;
  *(_QWORD *)(v6 + 376) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 384) = swift_task_alloc();
  sub_23F35D2E8(&qword_256E742A8);
  *(_QWORD *)(v6 + 392) = swift_task_alloc();
  v10 = sub_23F619DF0();
  *(_QWORD *)(v6 + 400) = v10;
  *(_QWORD *)(v6 + 408) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 416) = swift_task_alloc();
  *(_QWORD *)(v6 + 424) = swift_task_alloc();
  sub_23F35D2E8(&qword_256E70798);
  *(_QWORD *)(v6 + 432) = swift_task_alloc();
  *(_QWORD *)(v6 + 440) = swift_task_alloc();
  v11 = sub_23F617AD4();
  *(_QWORD *)(v6 + 448) = v11;
  *(_QWORD *)(v6 + 456) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 464) = swift_task_alloc();
  v12 = sub_23F61BEFC();
  *(_QWORD *)(v6 + 472) = v12;
  *(_QWORD *)(v6 + 480) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 488) = swift_task_alloc();
  *(_QWORD *)(v6 + 496) = swift_task_alloc();
  *(_QWORD *)(v6 + 504) = swift_task_alloc();
  *(_QWORD *)(v6 + 512) = swift_task_alloc();
  *(_QWORD *)(v6 + 520) = swift_task_alloc();
  *(_QWORD *)(v6 + 528) = swift_task_alloc();
  *(_QWORD *)(v6 + 536) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F58B1A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0[65];
  v2 = v0[64];
  v18 = v0[60];
  v3 = v0[58];
  v19 = v0[66];
  v20 = v0[57];
  v4 = v0[55];
  v21 = v0[56];
  v5 = v0[54];
  v6 = v0[32];
  v7 = v0[31];
  *(_QWORD *)(swift_task_alloc() + 16) = v7;
  sub_23F61BF08();
  sub_23F366708();
  sub_23F5862F4(v6);
  sub_23F3612C0(&qword_256E74268, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A7E0], MEMORY[0x24BE7A7D8]);
  v0[68] = v8;
  sub_23F61BF98();
  sub_23F362D18();
  v0[69] = *(_QWORD *)(v18 + 8);
  sub_23F58E264(v2);
  sub_23F617A8C();
  v9 = sub_23F617A98();
  v0[70] = v9;
  sub_23F40B3E8(v4, v10, v11, v9);
  sub_23F56DE98(v4, v5, &qword_256E70798);
  sub_23F58DE80();
  sub_23F617ABC();
  sub_23F617AA4();
  sub_23F617AB0();
  sub_23F39E4B8(v4, &qword_256E70798);
  sub_23F61BF68();
  v12 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v0[71] = v12;
  v12(v3, v21);
  sub_23F58E264(v1);
  sub_23F61BF5C();
  sub_23F58E264(v19);
  v13 = sub_23F619DE4();
  sub_23F58E1B0(v13, v14, v15, v13);
  sub_23F619DD8();
  v16 = (_QWORD *)swift_task_alloc();
  v0[72] = v16;
  *v16 = v0;
  v16[1] = sub_23F58B414;
  return sub_23F617AF8();
}

uint64_t sub_23F58B414()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1998();
  sub_23F3B201C();
  *(_QWORD *)(v1 + 584) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F58B460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = sub_23F35D2E8(&qword_256E742B0);
  sub_23F383740(v1, 1, v2);
  if (v3)
  {
    sub_23F39E4B8(v1, &qword_256E74298);
  }
  else
  {
    v45 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    v42 = *(_QWORD *)(v0 + 560);
    v47 = *(_QWORD *)(v0 + 504);
    v48 = *(_QWORD *)(v0 + 536);
    v50 = *(_QWORD *)(v0 + 480);
    v51 = *(void (**)(uint64_t, uint64_t))(v0 + 552);
    v49 = *(_QWORD *)(v0 + 472);
    v43 = *(_QWORD *)(v0 + 464);
    v44 = *(_QWORD *)(v0 + 448);
    v40 = *(_QWORD *)(v0 + 440);
    v41 = *(_QWORD *)(v0 + 432);
    v37 = *(_QWORD *)(v0 + 408);
    v38 = *(_QWORD *)(v0 + 424);
    v35 = *(_QWORD *)(v0 + 384);
    v46 = *(_QWORD *)(v0 + 376);
    v4 = *(_QWORD *)(v0 + 368);
    v36 = *(_QWORD *)(v0 + 360);
    v5 = *(_QWORD *)(v0 + 352);
    v52 = *(_QWORD *)(v0 + 344);
    v7 = *(_QWORD *)(v0 + 328);
    v6 = *(_QWORD *)(v0 + 336);
    v39 = *(_QWORD *)(v0 + 248);
    v8 = v1 + *(int *)(v2 + 48);
    v9 = v6 + *(int *)(v7 + 48);
    v10 = *(void (**)(uint64_t))(v46 + 32);
    v11 = sub_23F3C85C0();
    v10(v11);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    v12(v9, v8, v52);
    v13 = v6 + *(int *)(v7 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v10)(v35, v6, v4);
    v12(v36, v13, v52);
    sub_23F6187B8();
    sub_23F383E64(v38, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
    v14 = sub_23F3840BC();
    sub_23F362D94(v14, v15, v16);
    sub_23F35D2E8(&qword_256E742C0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
    strcpy((char *)(inited + 32), "promptTemplate");
    *(_BYTE *)(inited + 47) = -18;
    v18 = sub_23F6192A4();
    v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3C680];
    *(_QWORD *)(inited + 72) = v18;
    sub_23F3612C0(&qword_256E74338, v19, MEMORY[0x24BE3C630]);
    *(_QWORD *)(inited + 80) = v20;
    sub_23F3D96B4((uint64_t *)(inited + 48));
    sub_23F362D94(v21, v39, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16));
    sub_23F35D2E8(&qword_256E742C8);
    sub_23F61BFEC();
    sub_23F35D2E8(qword_256E71B18);
    v22 = swift_initStackObject();
    *(_OWORD *)(v22 + 16) = xmmword_23F61E980;
    *(_QWORD *)(v22 + 32) = 0xD000000000000033;
    *(_QWORD *)(v22 + 40) = 0x800000023F63AB70;
    v23 = sub_23F617BA0();
    v24 = sub_23F35D2E8(&qword_256E70580);
    *(_QWORD *)(v22 + 48) = v23;
    *(_QWORD *)(v22 + 72) = v24;
    *(_QWORD *)(v22 + 80) = 0xD000000000000084;
    *(_QWORD *)(v22 + 88) = 0x800000023F63ABB0;
    sub_23F617A8C();
    sub_23F36196C(v40, 0, 1, v42);
    sub_23F56DE98(v40, v41, &qword_256E70798);
    sub_23F58DE80();
    sub_23F617ABC();
    sub_23F617AA4();
    sub_23F617AB0();
    sub_23F58E254(v40);
    *(_QWORD *)(v22 + 120) = v44;
    sub_23F3D96B4((uint64_t *)(v22 + 96));
    sub_23F617BAC();
    v45(v43, v44);
    sub_23F61BFEC();
    sub_23F6187AC();
    sub_23F362D18();
    sub_23F362984();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v36, v52);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v35, v4);
    v51(v48, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v48, v47, v49);
  }
  v25 = *(_QWORD *)(v0 + 584);
  sub_23F61BF44();
  sub_23F61BF38();
  v26 = *(void (**)(_QWORD))(v0 + 552);
  if (v25)
  {
    v27 = *(_QWORD *)(v0 + 424);
    v28 = *(_QWORD *)(v0 + 400);
    v29 = *(_QWORD *)(v0 + 408);
    ((void (*)(_QWORD, _QWORD))v26)(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 472));
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    v30 = sub_23F3840BC();
    v26(v30);
    swift_task_dealloc();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666EC();
    sub_23F366708();
    swift_task_dealloc();
    sub_23F383AF4();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23F383ADC();
    sub_23F383AD4();
    swift_task_dealloc();
    sub_23F383FDC();
    sub_23F38409C();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v32 = *(_QWORD *)(v0 + 280);
    ((void (*)(_QWORD, _QWORD))v26)(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 472));
    *(_QWORD *)(v0 + 232) = v32;
    sub_23F61BF8C();
    v33 = sub_23F384AB4();
    v26(v33);
    sub_23F617BD0();
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 592) = v34;
    sub_23F3612C0(&qword_256E7C9D0, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8040], MEMORY[0x24BEB8020]);
    *v34 = v0;
    v34[1] = sub_23F58BABC;
    return sub_23F6187E8();
  }
}

uint64_t sub_23F58BABC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  sub_23F3B2010(&v4);
  *(_QWORD *)(v2 + 600) = v0;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v2 + 304));
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F58BB1C()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (void (*)(uint64_t, uint64_t))v0[69];
  v2 = v0[67];
  v3 = v0[59];
  (*(void (**)(_QWORD, _QWORD))(v0[51] + 8))(v0[53], v0[50]);
  v1(v2, v3);
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3666D4();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  v4 = (uint64_t (*)(void))sub_23F384760();
  return v4();
}

uint64_t sub_23F58BC20()
{
  uint64_t v0;

  sub_23F3D9A84();
  sub_23F384274(*(_QWORD *)(v0 + 408));
  sub_23F41C5F4();
  sub_23F58DC50();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  return sub_23F3D995C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F58BCB0()
{
  uint64_t v0;

  sub_23F3D9A84();
  sub_23F384274(*(_QWORD *)(v0 + 408));
  sub_23F41C5F4();
  sub_23F58DC50();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  return sub_23F3D995C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F58BD40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v11[5];

  v0 = sub_23F61BF2C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F6192A4();
  v11[3] = v4;
  sub_23F3612C0(&qword_256E74338, (uint64_t (*)(uint64_t))MEMORY[0x24BE3C680], MEMORY[0x24BE3C630]);
  v11[4] = v5;
  sub_23F3D96B4(v11);
  (*(void (**)(void))(*(_QWORD *)(v4 - 8) + 16))();
  v6 = MEMORY[0x24BE7AB78];
  sub_23F61BF20();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v11);
  sub_23F35D2E8(&qword_256E742D0);
  v7 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23F61E7E0;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v8 + v7, v3, v0);
  MEMORY[0x24266F424](v8, v0, v6);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_23F58BEA8()
{
  sub_23F362CB0();
  sub_23F61CD3C();
  sub_23F61CD60();
  sub_23F507EB4();
}

void sub_23F58BEE0()
{
  sub_23F58BEA8();
}

uint64_t sub_23F58BEE8()
{
  sub_23F58D8D0();
  return sub_23F61CCAC();
}

uint64_t sub_23F58BF10()
{
  sub_23F58D8D0();
  return sub_23F61CCA0();
}

uint64_t sub_23F58BF38()
{
  uint64_t v0;

  v0 = qword_256E7C7F0;
  sub_23F617BA0();
  return v0;
}

uint64_t sub_23F58BF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F3609AC;
  return sub_23F588554(a1, a2, a3);
}

uint64_t ResponseGenerationModelCompletionResponse.modelIdentifier.getter()
{
  sub_23F383738();
  return sub_23F3C85C0();
}

uint64_t sub_23F58BFF8(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)sub_23F54DBCC(v4);
  *v5 = v2;
  v5[1] = sub_23F58C058;
  return v7(a1);
}

uint64_t sub_23F58C058()
{
  uint64_t (*v0)(void);

  sub_23F3629E8();
  v0 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F362888(v0);
}

uint64_t type metadata accessor for ResponseGenerationModelProvider(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7C880);
}

uint64_t sub_23F58C090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ResponseGenerationPreferences();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F58C0D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ResponseGenerationPreferences();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23F58C110()
{
  unint64_t result;

  result = qword_256E7C808;
  if (!qword_256E7C808)
  {
    result = MEMORY[0x242670A44](&unk_23F62EA70, &unk_250FDD798);
    atomic_store(result, (unint64_t *)&qword_256E7C808);
  }
  return result;
}

uint64_t type metadata accessor for ResponseGenerationGenerativeModelsClient(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E7C920);
}

uint64_t sub_23F58C160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E7C818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F58C1AC()
{
  unint64_t result;

  result = qword_256E7C820;
  if (!qword_256E7C820)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for ResponseGenerationPromptVersion, &type metadata for ResponseGenerationPromptVersion);
    atomic_store(result, (unint64_t *)&qword_256E7C820);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ResponseGenerationModelProvider(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23F61B104();
    if (sub_23F36195C((uint64_t)v7, 1, v8))
    {
      v9 = sub_23F35D2E8(&qword_256E705E0);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
      sub_23F36196C((uint64_t)v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for ResponseGenerationModelProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_23F61B104();
  result = sub_23F36195C(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return result;
}

_BYTE *initializeWithCopy for ResponseGenerationModelProvider(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23F61B104();
  if (sub_23F36195C((uint64_t)v6, 1, v7))
  {
    v8 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    sub_23F36196C((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_BYTE *assignWithCopy for ResponseGenerationModelProvider(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23F61B104();
  v8 = sub_23F36195C((uint64_t)v5, 1, v7);
  v9 = sub_23F36195C((uint64_t)v6, 1, v7);
  if (!v8)
  {
    v10 = *(_QWORD *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  sub_23F36196C((uint64_t)v5, 0, 1, v7);
  return a1;
}

_BYTE *initializeWithTake for ResponseGenerationModelProvider(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23F61B104();
  if (sub_23F36195C((uint64_t)v6, 1, v7))
  {
    v8 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    sub_23F36196C((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_BYTE *assignWithTake for ResponseGenerationModelProvider(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23F61B104();
  v8 = sub_23F36195C((uint64_t)v5, 1, v7);
  v9 = sub_23F36195C((uint64_t)v6, 1, v7);
  if (!v8)
  {
    v10 = *(_QWORD *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  sub_23F36196C((uint64_t)v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseGenerationModelProvider()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F58C678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 254)
  {
    sub_23F362B80();
  }
  else
  {
    v6 = sub_23F35D2E8(&qword_256E705E0);
    sub_23F3B1A44(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ResponseGenerationModelProvider()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F58C6E4(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 254)
  {
    *a1 = a2 + 1;
    sub_23F362B80();
  }
  else
  {
    v7 = sub_23F35D2E8(&qword_256E705E0);
    sub_23F38370C((uint64_t)&a1[*(int *)(a4 + 20)], a2, a2, v7);
  }
}

void sub_23F58C740()
{
  unint64_t v0;

  sub_23F38C624();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for ResponseGenerationPromptVersion()
{
  sub_23F362C18();
}

uint64_t dispatch thunk of ResponseGenerationModelClient.generate(using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = swift_task_alloc();
  v12 = (_QWORD *)sub_23F54DBCC(v11);
  *v12 = v5;
  v12[1] = sub_23F3609AC;
  return v14(a1, a2, a3, a4, a5);
}

void type metadata accessor for ResponseGenerationModelCompletionResponse()
{
  sub_23F362C18();
}

uint64_t *sub_23F58C860(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = (uint64_t *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[3];
    if (v7)
    {
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 32) = a2[4];
    }
    v11 = a3[5];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23F61B104();
    if (sub_23F36195C((uint64_t)v13, 1, v14))
    {
      v15 = sub_23F35D2E8(&qword_256E705E0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      sub_23F36196C((uint64_t)v12, 0, 1, v14);
    }
    v16 = a3[6];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_23F35D2E8(&qword_256E74340);
    if (sub_23F36195C((uint64_t)v18, 1, v19))
    {
      v20 = sub_23F35D2E8(&qword_256E7C8C0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      sub_23F36196C((uint64_t)v17, 0, 1, v19);
    }
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  swift_retain();
  return v4;
}

uint64_t sub_23F58CA04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_QWORD *)(a1 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23F61B104();
  if (!sub_23F36195C(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_23F35D2E8(&qword_256E74340);
  if (!sub_23F36195C(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_release();
}

uint64_t sub_23F58CAC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_23F61B104();
  if (sub_23F36195C((uint64_t)v11, 1, v12))
  {
    v13 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    sub_23F36196C((uint64_t)v10, 0, 1, v12);
  }
  v14 = a3[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = sub_23F35D2E8(&qword_256E74340);
  if (sub_23F36195C((uint64_t)v16, 1, v17))
  {
    v18 = sub_23F35D2E8(&qword_256E7C8C0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    sub_23F36196C((uint64_t)v15, 0, 1, v17);
  }
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  return a1;
}

uint64_t sub_23F58CC3C(uint64_t a1, __int128 *a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      sub_23F361AD0((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  v7 = *a2;
  v8 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = sub_23F61B104();
  v13 = sub_23F36195C((uint64_t)v10, 1, v12);
  v14 = sub_23F36195C((uint64_t)v11, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      sub_23F36196C((uint64_t)v10, 0, 1, v12);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v15 = *(_QWORD *)(v12 - 8);
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v10, v12);
LABEL_13:
    v16 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, char *, uint64_t))(v15 + 24))(v10, v11, v12);
LABEL_14:
  v17 = a3[6];
  v18 = (void *)(a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = sub_23F35D2E8(&qword_256E74340);
  v21 = sub_23F36195C((uint64_t)v18, 1, v20);
  v22 = sub_23F36195C((uint64_t)v19, 1, v20);
  if (!v21)
  {
    v23 = *(_QWORD *)(v20 - 8);
    if (!v22)
    {
      (*(void (**)(void *, char *, uint64_t))(v23 + 24))(v18, v19, v20);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v18, v20);
    goto LABEL_19;
  }
  if (v22)
  {
LABEL_19:
    v24 = sub_23F35D2E8(&qword_256E7C8C0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  sub_23F36196C((uint64_t)v18, 0, 1, v20);
LABEL_20:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23F58CE80(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23F61B104();
  if (sub_23F36195C((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    sub_23F36196C((uint64_t)v8, 0, 1, v10);
  }
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_23F35D2E8(&qword_256E74340);
  if (sub_23F36195C((uint64_t)v14, 1, v15))
  {
    v16 = sub_23F35D2E8(&qword_256E7C8C0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    sub_23F36196C((uint64_t)v13, 0, 1, v15);
  }
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_23F58CFD0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  if (*(_QWORD *)(a1 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23F61B104();
  v11 = sub_23F36195C((uint64_t)v8, 1, v10);
  v12 = sub_23F36195C((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      sub_23F36196C((uint64_t)v8, 0, 1, v10);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_8:
    v14 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_9:
  v15 = a3[6];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_23F35D2E8(&qword_256E74340);
  v19 = sub_23F36195C((uint64_t)v16, 1, v18);
  v20 = sub_23F36195C((uint64_t)v17, 1, v18);
  if (!v19)
  {
    v21 = *(_QWORD *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 40))(v16, v17, v18);
      goto LABEL_15;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_14;
  }
  if (v20)
  {
LABEL_14:
    v22 = sub_23F35D2E8(&qword_256E7C8C0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  sub_23F36196C((uint64_t)v16, 0, 1, v18);
LABEL_15:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_23F58D1D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F58D1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a2 == 2147483646)
  {
    sub_23F362B80();
  }
  else
  {
    v6 = sub_23F35D2E8(&qword_256E705E0);
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v6;
      v8 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = sub_23F35D2E8(&qword_256E7C8C0);
      v8 = *(int *)(a3 + 24);
    }
    sub_23F3B1A44(a1 + v8, a2, v7);
  }
}

uint64_t sub_23F58D278()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F58D284(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a3 == 2147483646)
  {
    *(_QWORD *)(a1 + 24) = a2;
    sub_23F362B80();
  }
  else
  {
    v8 = sub_23F35D2E8(&qword_256E705E0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_23F35D2E8(&qword_256E7C8C0);
      v10 = *(int *)(a4 + 24);
    }
    sub_23F38370C(a1 + v10, a2, a2, v9);
  }
}

void sub_23F58D310()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F38C624();
  if (v0 <= 0x3F)
  {
    sub_23F58D3A8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23F58D3A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E7C930)
  {
    sub_23F35EB74(&qword_256E74340);
    v0 = sub_23F61C730();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256E7C930);
  }
}

void type metadata accessor for ResponseGenerationModelProvider.ResponseGenerationModelClientProviderError()
{
  sub_23F362C18();
}

unint64_t sub_23F58D410()
{
  unint64_t result;

  result = qword_256E7C970;
  if (!qword_256E7C970)
  {
    result = MEMORY[0x242670A44](&unk_23F62EA20, &unk_250FDD798);
    atomic_store(result, &qword_256E7C970);
  }
  return result;
}

unint64_t sub_23F58D44C()
{
  unint64_t result;

  result = qword_256E7C980;
  if (!qword_256E7C980)
  {
    result = MEMORY[0x242670A44](&unk_23F62ECBC, &unk_250FDD998);
    atomic_store(result, (unint64_t *)&qword_256E7C980);
  }
  return result;
}

uint64_t sub_23F58D488()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F58D4C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[9];
  v7 = v1[10];
  v8 = v1[11];
  v9 = v1[12];
  v10 = swift_task_alloc();
  v11 = (_QWORD *)sub_23F54DBCC(v10);
  *v11 = v2;
  v11[1] = sub_23F3E013C;
  return sub_23F58AB14(a1, v4, v5, (uint64_t)(v1 + 4), v6, v7, v8, v9);
}

unint64_t sub_23F58D564()
{
  unint64_t result;

  result = qword_256E7C9B8;
  if (!qword_256E7C9B8)
  {
    result = MEMORY[0x242670A44](&unk_23F62EC7C, &unk_250FDD908);
    atomic_store(result, (unint64_t *)&qword_256E7C9B8);
  }
  return result;
}

unint64_t sub_23F58D5A0()
{
  unint64_t result;

  result = qword_256E7C9C0;
  if (!qword_256E7C9C0)
  {
    result = MEMORY[0x242670A44](&unk_23F62EC54, &unk_250FDD870);
    atomic_store(result, (unint64_t *)&qword_256E7C9C0);
  }
  return result;
}

uint64_t sub_23F58D5DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F58D600()
{
  return sub_23F58BD40();
}

void sub_23F58D61C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_23F617BA0();
  sub_23F362928();
}

_QWORD *sub_23F58D64C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *sub_23F58D6A0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void type metadata accessor for ResponseGenerationStructuredModelCompletion()
{
  sub_23F362C18();
}

uint64_t sub_23F58D6E8(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F58D728 + 4 * byte_23F62E7C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F58D748 + 4 * byte_23F62E7C5[v4]))();
}

_BYTE *sub_23F58D728(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F58D748(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F58D750(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F58D758(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F58D760(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F58D768(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for ResponseGenerationStructuredModelCompletion.ResponseGenerationModelResponseError()
{
  sub_23F362C18();
}

uint64_t sub_23F58D780(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F58D7CC + 4 * byte_23F62E7CF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F58D800 + 4 * byte_23F62E7CA[v4]))();
}

uint64_t sub_23F58D800(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F58D808(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F58D810);
  return result;
}

uint64_t sub_23F58D81C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F58D824);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F58D828(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F58D830(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ResponseGenerationGenerativeModelsClient.ModelClientError()
{
  sub_23F362C18();
}

unint64_t sub_23F58D850()
{
  unint64_t result;

  result = qword_256E7C9E8;
  if (!qword_256E7C9E8)
  {
    result = MEMORY[0x242670A44](&unk_23F62EB5C, &unk_250FDD998);
    atomic_store(result, (unint64_t *)&qword_256E7C9E8);
  }
  return result;
}

unint64_t sub_23F58D894()
{
  unint64_t result;

  result = qword_256E7C9F0;
  if (!qword_256E7C9F0)
  {
    result = MEMORY[0x242670A44](&unk_23F62EC04, &unk_250FDD908);
    atomic_store(result, (unint64_t *)&qword_256E7C9F0);
  }
  return result;
}

unint64_t sub_23F58D8D0()
{
  unint64_t result;

  result = qword_256E7C9F8;
  if (!qword_256E7C9F8)
  {
    result = MEMORY[0x242670A44](&unk_23F62EADC, &unk_250FDD998);
    atomic_store(result, (unint64_t *)&qword_256E7C9F8);
  }
  return result;
}

unint64_t sub_23F58D90C()
{
  unint64_t result;

  result = qword_256E7CA00;
  if (!qword_256E7CA00)
  {
    result = MEMORY[0x242670A44](&unk_23F62EB84, &unk_250FDD908);
    atomic_store(result, (unint64_t *)&qword_256E7CA00);
  }
  return result;
}

unint64_t sub_23F58D948()
{
  unint64_t result;

  result = qword_256E7CA10;
  if (!qword_256E7CA10)
  {
    result = MEMORY[0x242670A44](&unk_23F62EDC0, &type metadata for ResponseGenerationStructuredModelCompletion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7CA10);
  }
  return result;
}

uint64_t _s30IntelligenceFlowPlannerRuntime31ResponseGenerationPromptVersionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F58D9D0 + 4 * byte_23F62E7D9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F58DA04 + 4 * byte_23F62E7D4[v4]))();
}

uint64_t sub_23F58DA04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F58DA0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F58DA14);
  return result;
}

uint64_t sub_23F58DA20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F58DA28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F58DA2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F58DA34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseGenerationStructuredModelCompletion.CodingKeys()
{
  return &type metadata for ResponseGenerationStructuredModelCompletion.CodingKeys;
}

unint64_t sub_23F58DA54()
{
  unint64_t result;

  result = qword_256E7CA20;
  if (!qword_256E7CA20)
  {
    result = MEMORY[0x242670A44](&unk_23F62ED98, &type metadata for ResponseGenerationStructuredModelCompletion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7CA20);
  }
  return result;
}

unint64_t sub_23F58DA94()
{
  unint64_t result;

  result = qword_256E7CA28;
  if (!qword_256E7CA28)
  {
    result = MEMORY[0x242670A44](&unk_23F62ED08, &type metadata for ResponseGenerationStructuredModelCompletion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7CA28);
  }
  return result;
}

unint64_t sub_23F58DAD4()
{
  unint64_t result;

  result = qword_256E7CA30;
  if (!qword_256E7CA30)
  {
    result = MEMORY[0x242670A44](&unk_23F62ED30, &type metadata for ResponseGenerationStructuredModelCompletion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7CA30);
  }
  return result;
}

uint64_t sub_23F58DB14@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 - 80) = a1;
  v3 = v1[64];
  *(_QWORD *)(v2 - 104) = v1[67];
  *(_QWORD *)(v2 - 96) = v3;
  *(_QWORD *)(v2 - 88) = v1[61];
  return swift_task_dealloc();
}

uint64_t sub_23F58DBB4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = *(_QWORD *)(v0 + 488);
  return swift_task_dealloc();
}

uint64_t sub_23F58DC50()
{
  return swift_task_dealloc();
}

uint64_t sub_23F58DCA4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F58DCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, double a6)
{
  return sub_23F58AF60(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_23F58DCE4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 416))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 376));
}

uint64_t sub_23F58DD24(__n128 *a1, __n128 a2)
{
  unint64_t v2;
  unint64_t v3;

  a1[1] = a2;
  a1[2].n128_u64[0] = 0x6E72755472657375;
  a1[2].n128_u64[1] = 0xEF746E65746E6F43;
  a1[3].n128_u64[0] = v3;
  a1[3].n128_u64[1] = v2;
  return sub_23F617BA0();
}

uint64_t sub_23F58DD58()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[90] + 32))(v0[92], v0[88], v0[89]);
}

uint64_t sub_23F58DD74()
{
  return sub_23F61CA90();
}

uint64_t sub_23F58DD84()
{
  return sub_23F617BA0();
}

void sub_23F58DDB4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F37AE00(0xD000000000000039, (a1 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 104));
}

uint64_t sub_23F58DDCC(uint64_t (*a1)(void))
{
  return a1();
}

void sub_23F58DDE8(unint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

void sub_23F58DE14(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 8u);
}

uint64_t sub_23F58DE80()
{
  return sub_23F617AC8();
}

void sub_23F58DEA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = *(_QWORD *)(v0 + 960);
}

uint64_t sub_23F58DEC8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F58DEE8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 248) = a1;
  return sub_23F61C790();
}

void sub_23F58DF08()
{
  void *v0;

}

uint64_t sub_23F58DF28()
{
  return sub_23F619298();
}

void sub_23F58DF64(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)(v2 + a1) |= v1;
  v7 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v4);
  *v7 = v5;
  v7[1] = v6;
}

void sub_23F58DF88()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23F39E4B8(v0, v1);
}

uint64_t sub_23F58DFD4(float *a1, float a2)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = a2;
  *(_QWORD *)(v2 + 432) = v3;
  return sub_23F61C790();
}

uint64_t sub_23F58DFFC(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_23F61C790();
}

void sub_23F58E034(uint64_t a1)
{
  uint64_t *v1;

  sub_23F39E4B8(a1, v1);
}

id sub_23F58E03C()
{
  void *v0;

  return v0;
}

uint64_t sub_23F58E044()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 480) = v0;
  return sub_23F61C790();
}

uint64_t sub_23F58E07C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v0, v2);
}

uint64_t sub_23F58E0A0()
{
  return type metadata accessor for ResponseGenerationGenerativeModelsClient(0);
}

uint64_t sub_23F58E0A8()
{
  uint64_t v0;

  sub_23F382E18();
  return v0;
}

uint64_t sub_23F58E0D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 424))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 328));
}

void sub_23F58E0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t *v16;

  sub_23F56DE98(a15, v15, v16);
}

uint64_t sub_23F58E118()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3754D4(v0, v1);
}

uint64_t sub_23F58E130()
{
  return swift_release();
}

void sub_23F58E140(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F56DE98(v4, v3, a3);
}

uint64_t sub_23F58E150()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 416))(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 376));
}

void sub_23F58E160(float a1)
{
  uint64_t v1;
  float *v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 120) = v1;
  *v2 = a1;
}

uint64_t sub_23F58E178(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_23F587680(v1, v2, a1);
}

void sub_23F58E194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v0, v1, (uint64_t *)(v2 - 120));
}

uint64_t sub_23F58E1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23F36196C(v4, 1, 1, a4);
}

uint64_t sub_23F58E1C0()
{
  uint64_t v0;

  sub_23F382E18();
  return v0;
}

uint64_t sub_23F58E1E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 672);
}

void sub_23F58E1F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F39E4B8(v2, a2);
}

void sub_23F58E200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_23F56DE98(v0, v1, v2);
}

void sub_23F58E21C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  v2[3] = a1;
  v2[4] = a2;
  sub_23F3D96B4(v2);
}

void sub_23F58E254(uint64_t a1)
{
  uint64_t *v1;

  sub_23F39E4B8(a1, v1);
}

_OWORD *sub_23F58E25C(_OWORD *a1)
{
  _OWORD *v1;

  return sub_23F382A70(a1, v1);
}

uint64_t sub_23F58E264(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F58E26C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 32 * v1);
}

uint64_t sub_23F58E278()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23F58E284()
{
  return sub_23F617C48();
}

uint64_t sub_23F58E28C()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F4F2360(v1, v0);
}

uint64_t sub_23F58E298()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v0 + 8);
}

void sub_23F58E2B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F56DE98(a1, v3, a3);
}

uint64_t sub_23F58E2C0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return v1 - 72;
}

double sub_23F58E2D4()
{
  double v0;

  return v0;
}

uint64_t sub_23F58E2FC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F58E308(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F361498(v2, a2);
}

uint64_t sub_23F58E310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F58E31C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F58E328()
{
  return sub_23F619124();
}

uint64_t sub_23F58E330(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = a1;
  return v1 - 128;
}

uint64_t sub_23F58E344(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_23F37BAF8();
    v4 = v16;
    sub_23F61B92C();
    sub_23F383D14();
    v6 = a1 + v5;
    v15 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      v8 = sub_23F417D48(v6);
      if (v1)
        break;
      v10 = v8;
      v11 = v9;
      v12 = *(_QWORD *)(v16 + 16);
      if (v12 >= *(_QWORD *)(v16 + 24) >> 1)
        sub_23F37BAF8();
      *(_QWORD *)(v16 + 16) = v12 + 1;
      v13 = v16 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v10;
      *(_QWORD *)(v13 + 40) = v11;
      v6 += v15;
      if (!--v2)
      {
        sub_23F38496C();
        return v4;
      }
    }
    sub_23F38496C();
    swift_release();
  }
  else
  {
    sub_23F38496C();
    return MEMORY[0x24BEE4AF8];
  }
  return v4;
}

void sub_23F58E474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  _BOOL4 v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t);
  uint64_t v94[2];
  NSObject *v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  sub_23F362ABC();
  v109 = v3;
  v110 = v0;
  v115 = v4;
  v108 = v5;
  v113 = v6;
  v102 = v7;
  v9 = v8;
  v105 = v10;
  sub_23F35D2E8(&qword_256E73CF8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3B13F0((uint64_t)v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v101 = sub_23F61AB94();
  v99 = *(_QWORD *)(v101 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  sub_23F384990(v14);
  sub_23F35D2E8(&qword_256E75DE8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F4DC4C4(v16, v94[0]);
  sub_23F35D2E8(&qword_256E7C7A0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v17);
  v19 = sub_23F5943FC(v18, v94[0]);
  v20 = type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(v19);
  v118 = *(_QWORD *)(v20 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F3834D0();
  v114 = v22;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v23);
  v117 = (uint64_t)v94 - v24;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v94 - v26;
  v28 = sub_23F61ADB0();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F362AAC();
  v32 = v30 - v31;
  MEMORY[0x24BDAC7A8](v33);
  sub_23F543724();
  v34 = sub_23F3B1728();
  v106 = *(_QWORD *)(v34 - 8);
  v107 = v34;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  v103 = (char *)v94 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)v94 - v38;
  sub_23F619124();
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v111 = v9;
  v40(v1, v9, v28);
  v41 = sub_23F619E8C();
  v42 = sub_23F61C610();
  v43 = v42;
  v44 = os_log_type_enabled(v41, v42);
  v112 = v20;
  if (v44)
  {
    v45 = sub_23F366668();
    v96 = v43;
    v46 = (uint8_t *)v45;
    v97 = sub_23F366668();
    v120 = v97;
    v95 = v41;
    *(_DWORD *)v46 = 136315138;
    v94[1] = (uint64_t)(v46 + 4);
    v40(v32, v1, v28);
    v47 = sub_23F61C16C();
    sub_23F37AE00(v47, v48, &v120);
    v119 = v49;
    sub_23F61C790();
    sub_23F362C60();
    sub_23F5942C0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_23F38485C(&dword_23F35A000, v95, (os_log_type_t)v96, "OTAOverrideInputMatcher: searching matches for %s", v46);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F5942C0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));

  v50 = v107;
  v51 = *(void (**)(char *, uint64_t))(v106 + 8);
  v51(v39, v107);
  v52 = v108;
  v53 = *(_QWORD *)(v110 + 16);
  v54 = MEMORY[0x24BDAC7A8](v109);
  v94[-6] = v55;
  v94[-5] = v56;
  v94[-4] = v54;
  v94[-3] = v57;
  v94[-2] = v52;
  v94[-1] = v58;
  sub_23F383738();
  sub_23F3DE2EC((uint64_t (*)(char *))sub_23F59415C, (uint64_t)&v94[-8], v53);
  v60 = v59;
  v115 = *(_QWORD *)(v59 + 16);
  if (v115)
  {
    v61 = 0;
    v113 = MEMORY[0x24BEE4AF8];
    v120 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      if (v61 >= *(_QWORD *)(v60 + 16))
      {
        __break(1u);
        return;
      }
      v62 = (*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80);
      v63 = *(_QWORD *)(v118 + 72);
      sub_23F4C8990(v60 + v62 + v63 * v61, (uint64_t)v27, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      v64 = v20;
      v65 = (uint64_t)&v27[*(int *)(v20 + 36)];
      v66 = v116;
      sub_23F3D96EC(v65, v116, &qword_256E75DE8);
      v67 = type metadata accessor for ResponseGenerationOverrides_ContextPredicate(0);
      v68 = sub_23F36195C(v66, 1, v67);
      sub_23F3625D8(v66, &qword_256E75DE8);
      v69 = v117;
      sub_23F4C8990((uint64_t)v27, v117, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      if (v68 == 1)
      {
        sub_23F4DC910(v69);
      }
      else
      {
        v70 = *(_QWORD *)(*(_QWORD *)(v69 + 24) + 16);
        sub_23F4DC910(v69);
        if (!v70)
        {
          sub_23F52E528((uint64_t)v27, v114, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_23F37C1C8();
          v71 = v120;
          v73 = *(_QWORD *)(v120 + 16);
          v72 = *(_QWORD *)(v120 + 24);
          if (v73 >= v72 >> 1)
          {
            sub_23F3B1A80(v72);
            sub_23F37C1C8();
            v71 = v120;
          }
          *(_QWORD *)(v71 + 16) = v73 + 1;
          v113 = v71;
          sub_23F52E528(v114, v71 + v62 + v73 * v63, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
          v20 = v112;
          goto LABEL_10;
        }
      }
      sub_23F4DC910((uint64_t)v27);
      v20 = v64;
LABEL_10:
      if (v115 == ++v61)
      {
        v74 = v120;
        v75 = v104;
        sub_23F370014();
        swift_release();
        v77 = sub_23F383740(v75, 1, v20);
        if (!v76)
        {
          sub_23F362D08();
          v86 = v105;
          sub_23F594550(v75, v87, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
          v88 = v86;
          v89 = 0;
          goto LABEL_28;
        }
        sub_23F594470(v77, &qword_256E7C7A0);
        sub_23F61AD98();
        sub_23F5945A4();
        if (v74 == 1)
        {
          v78 = sub_23F61AD98();
          v79 = v100;
          sub_23F36FF2C(v78, v100);
          sub_23F362D18();
          v80 = sub_23F5074D4();
          v74 = v101;
          sub_23F383740(v80, v81, v101);
          if (!v76)
          {
            v90 = v99;
            v91 = v98;
            v92 = sub_23F4414B0();
            v93(v92);
            sub_23F58F52C();
            sub_23F362D08();
            sub_23F383E88(v91, *(uint64_t (**)(uint64_t, uint64_t))(v90 + 8));
            goto LABEL_31;
          }
          sub_23F3625D8(v79, &qword_256E73CF8);
        }
        sub_23F61AD98();
        sub_23F5945A4();
        if (v74 < 2)
        {
          sub_23F507358(v105, 1);
        }
        else
        {
          sub_23F61AD98();
          sub_23F58F690();
          sub_23F362D08();
        }
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
    }
  }
  sub_23F362D08();
  v82 = v103;
  sub_23F619124();
  v83 = sub_23F619E8C();
  v84 = sub_23F61C61C();
  if (os_log_type_enabled(v83, v84))
  {
    v85 = (uint8_t *)sub_23F366668();
    *(_WORD *)v85 = 0;
    _os_log_impl(&dword_23F35A000, v83, v84, "OTAOverrideInputMatcher: No overrides to match.", v85, 2u);
    sub_23F366530();
  }

  v51(v82, v50);
  v88 = v105;
  v89 = 1;
LABEL_28:
  sub_23F507358(v88, v89);
LABEL_31:
  sub_23F362948();
}

uint64_t sub_23F58EB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int *v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  unint64_t v83;
  int v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  char v92;
  int v93;
  uint64_t *v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v99;
  char *v100;
  char *v101;
  int v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  int *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;

  v112 = a7;
  v105 = a6;
  v106 = a3;
  v121 = a5;
  v107 = a2;
  v108 = a4;
  v116 = type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  MEMORY[0x24BDAC7A8](v116);
  v119 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(&qword_256E75DE0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v118 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v117 = (uint64_t)&v99 - v12;
  v13 = type metadata accessor for ResponseGenerationOverrides_ContextPredicate(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v111 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v114 = (char *)&v99 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v110 = (uint64_t)&v99 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v120 = (char *)&v99 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v123 = (uint64_t)&v99 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v113 = (char *)&v99 - v24;
  v25 = sub_23F35D2E8(&qword_256E75DE8);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v104 = (uint64_t)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v122 = (char *)&v99 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v99 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30);
  v35 = (char *)&v99 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)&v99 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (char *)&v99 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v99 - v42;
  v44 = *(unsigned __int8 *)(a1 + 16);
  v45 = a1 + *(int *)(type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0) + 36);
  sub_23F3D96EC(v45, (uint64_t)v43, &qword_256E75DE8);
  v115 = (int *)v13;
  LODWORD(v13) = sub_23F36195C((uint64_t)v43, 1, v13);
  sub_23F3625D8((uint64_t)v43, &qword_256E75DE8);
  if ((_DWORD)v13 == 1)
  {
    if (v44)
      goto LABEL_57;
LABEL_43:
    v92 = 1;
    return v92 & 1;
  }
  v46 = (uint64_t)v113;
  v100 = v38;
  v103 = v35;
  v101 = v32;
  v47 = v114;
  v102 = v44;
  v48 = v116;
  v109 = v45;
  sub_23F3D96EC(v45, (uint64_t)v41, &qword_256E75DE8);
  v49 = v115;
  if (sub_23F36195C((uint64_t)v41, 1, (uint64_t)v115) == 1)
  {
    sub_23F618968();
    sub_23F36196C(v46 + v49[5], 1, 1, v48);
    v50 = (_QWORD *)(v46 + v49[6]);
    *v50 = 0;
    v50[1] = 0;
    v51 = (_QWORD *)(v46 + v49[7]);
    *v51 = 0;
    v51[1] = 0;
    sub_23F3625D8((uint64_t)v41, &qword_256E75DE8);
  }
  else
  {
    sub_23F52E528((uint64_t)v41, v46, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
  }
  v52 = (uint64_t)v47;
  v53 = (uint64_t)v119;
  v54 = v123;
  v55 = v117;
  sub_23F3D96EC(v46 + v49[5], v117, &qword_256E75DE0);
  v56 = sub_23F36195C(v55, 1, v48);
  v57 = v55;
  LODWORD(v55) = v56;
  sub_23F3625D8(v57, &qword_256E75DE0);
  sub_23F3663AC(v46, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
  v58 = (uint64_t)v120;
  v59 = (uint64_t)v118;
  if ((_DWORD)v55 == 1)
  {
    v60 = 0;
  }
  else
  {
    v61 = (uint64_t)v100;
    sub_23F3D96EC(v109, (uint64_t)v100, &qword_256E75DE8);
    if (sub_23F36195C(v61, 1, (uint64_t)v49) == 1)
    {
      sub_23F618968();
      sub_23F36196C(v54 + v49[5], 1, 1, v48);
      v62 = (_QWORD *)(v54 + v49[6]);
      *v62 = 0;
      v62[1] = 0;
      v63 = (_QWORD *)(v54 + v49[7]);
      *v63 = 0;
      v63[1] = 0;
      sub_23F3625D8(v61, &qword_256E75DE8);
    }
    else
    {
      sub_23F52E528(v61, v54, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
    }
    sub_23F3D96EC(v54 + v49[5], v59, &qword_256E75DE0);
    if (sub_23F36195C(v59, 1, v48) == 1)
    {
      *(_QWORD *)v53 = 0;
      *(_BYTE *)(v53 + 8) = 1;
      *(_QWORD *)(v53 + 16) = 0;
      *(_QWORD *)(v53 + 24) = 0xE000000000000000;
      sub_23F618968();
      sub_23F3625D8(v59, &qword_256E75DE0);
    }
    else
    {
      sub_23F52E528(v59, v53, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    }
    sub_23F3663AC(v123, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
    sub_23F61ADA4();
    sub_23F59068C();
    v65 = v64;
    swift_bridgeObjectRelease();
    sub_23F3663AC(v53, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    v60 = v65 ^ 1;
  }
  v66 = v109;
  v67 = (uint64_t)v103;
  sub_23F3D96EC(v109, (uint64_t)v103, &qword_256E75DE8);
  if (sub_23F36195C(v67, 1, (uint64_t)v49) == 1)
  {
    sub_23F618968();
    sub_23F36196C(v58 + v49[5], 1, 1, v48);
    v68 = (_QWORD *)(v58 + v49[6]);
    *v68 = 0;
    v68[1] = 0;
    v69 = (_QWORD *)(v58 + v49[7]);
    *v69 = 0;
    v69[1] = 0;
    sub_23F3625D8(v67, &qword_256E75DE8);
  }
  else
  {
    sub_23F52E528(v67, v58, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
  }
  v70 = *(_QWORD *)(v58 + v49[7] + 8);
  sub_23F3663AC(v58, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
  v71 = 0;
  if (v70)
  {
    v73 = (uint64_t)v111;
    v72 = v112;
    v74 = (uint64_t)v122;
    if (v121)
    {
      v75 = v66;
      v76 = (uint64_t)v101;
      sub_23F3D96EC(v75, (uint64_t)v101, &qword_256E75DE8);
      if (sub_23F36195C(v76, 1, (uint64_t)v49) == 1)
      {
        v77 = v110;
        sub_23F618968();
        sub_23F36196C(v77 + v49[5], 1, 1, v48);
        v78 = (_QWORD *)(v77 + v49[6]);
        *v78 = 0;
        v78[1] = 0;
        v79 = (_QWORD *)(v77 + v49[7]);
        *v79 = 0;
        v79[1] = 0;
        sub_23F3625D8(v76, &qword_256E75DE8);
      }
      else
      {
        v77 = v110;
        sub_23F52E528(v76, v110, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
      }
      v80 = v108;
      v81 = (uint64_t *)(v77 + v49[7]);
      if (v81[1])
      {
        v82 = *v81;
        v83 = v81[1];
      }
      else
      {
        v82 = 0;
        v83 = 0xE000000000000000;
      }
      sub_23F617BA0();
      sub_23F3663AC(v110, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
      if (v82 == v80 && v83 == v121)
      {
        swift_bridgeObjectRelease();
        v71 = 0;
      }
      else
      {
        v85 = sub_23F61CC64();
        swift_bridgeObjectRelease();
        v71 = v85 ^ 1;
      }
      v74 = (uint64_t)v122;
      v66 = v109;
    }
  }
  else
  {
    v73 = (uint64_t)v111;
    v72 = v112;
    v74 = (uint64_t)v122;
  }
  sub_23F3D96EC(v66, v74, &qword_256E75DE8);
  if (sub_23F36195C(v74, 1, (uint64_t)v49) == 1)
  {
    sub_23F618968();
    sub_23F36196C(v52 + v49[5], 1, 1, v48);
    v86 = (_QWORD *)(v52 + v49[6]);
    *v86 = 0;
    v86[1] = 0;
    v87 = (_QWORD *)(v52 + v49[7]);
    *v87 = 0;
    v87[1] = 0;
    sub_23F3625D8(v74, &qword_256E75DE8);
  }
  else
  {
    sub_23F52E528(v74, v52, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
  }
  v88 = *(_QWORD *)(v52 + v49[6] + 8);
  sub_23F3663AC(v52, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
  if (!v88)
  {
    if (((v102 | v71 | v60) & 1) != 0)
    {
LABEL_57:
      v92 = 0;
      return v92 & 1;
    }
    goto LABEL_43;
  }
  if (v72)
  {
    v89 = v104;
    sub_23F3D96EC(v66, v104, &qword_256E75DE8);
    if (sub_23F36195C(v89, 1, (uint64_t)v49) == 1)
    {
      sub_23F618968();
      sub_23F36196C(v73 + v49[5], 1, 1, v48);
      v90 = (_QWORD *)(v73 + v49[6]);
      *v90 = 0;
      v90[1] = 0;
      v91 = (_QWORD *)(v73 + v49[7]);
      *v91 = 0;
      v91[1] = 0;
      sub_23F3625D8(v89, &qword_256E75DE8);
    }
    else
    {
      sub_23F52E528(v89, v73, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
    }
    v94 = (uint64_t *)(v73 + v49[6]);
    if (v94[1])
    {
      v95 = *v94;
      v96 = v94[1];
    }
    else
    {
      v95 = 0;
      v96 = 0xE000000000000000;
    }
    sub_23F617BA0();
    sub_23F3663AC(v73, type metadata accessor for ResponseGenerationOverrides_ContextPredicate);
    if (v95 == v105 && v96 == v72)
      v92 = 1;
    else
      v92 = sub_23F61CC64();
    v93 = v102;
    swift_bridgeObjectRelease();
  }
  else
  {
    v92 = 1;
    v93 = v102;
  }
  if (((v93 | v71 | v60) & 1) != 0)
    goto LABEL_57;
  return v92 & 1;
}

void sub_23F58F52C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F362ABC();
  v25 = v2;
  v26 = v3;
  v5 = v4;
  v7 = v6;
  type metadata accessor for ResponseGenerationOverrides_Rule(0);
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (_QWORD *)((char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  sub_23F3C85D4();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3845CC();
  v13 = *(_QWORD *)(v5 + 16);
  if (v13)
  {
    v23 = v12;
    v24 = v7;
    sub_23F383EB8();
    v15 = v5 + v14;
    v17 = *(_QWORD *)(v16 + 72);
    v22[1] = v5;
    sub_23F389CDC();
    while (1)
    {
      sub_23F4C8990(v15, v1, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      v18 = *(_QWORD *)(v1 + 24);
      if (*(_QWORD *)(v18 + 16) == 1)
      {
        sub_23F4C8990(v18 + ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80)), (uint64_t)v10, type metadata accessor for ResponseGenerationOverrides_Rule);
        v19 = sub_23F58F970(v25, v10);
        sub_23F3C8574((uint64_t)v10);
        if ((v19 & 1) != 0)
          break;
      }
      sub_23F3663AC(v1, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      v15 += v17;
      if (!--v13)
      {
        sub_23F3D9D90();
        v20 = 1;
        v7 = v24;
        goto LABEL_9;
      }
    }
    sub_23F3D9D90();
    v7 = v24;
    sub_23F594550(v1, v21, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
    v20 = 0;
LABEL_9:
    v12 = v23;
  }
  else
  {
    v20 = 1;
  }
  sub_23F36196C(v7, v20, 1, v12);
  sub_23F362948();
}

void sub_23F58F690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  sub_23F362ABC();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_23F61AB94();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3834D0();
  v48 = v10;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F543724();
  v47 = sub_23F35D2E8(&qword_256E7CBC8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v46 = v13;
  type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride(0);
  sub_23F3C85D4();
  MEMORY[0x24BDAC7A8](v14);
  v16 = *(_QWORD *)(v3 + 16);
  if (v16)
  {
    v39 = v15;
    v40 = v7;
    v17 = *(_QWORD *)(v5 + 16);
    sub_23F383EB8();
    v19 = v3 + v18;
    v42 = *(_QWORD *)(v20 + 72);
    v22 = v21;
    sub_23F389CDC();
    v23 = 0;
    v41 = v22;
    v44 = v0;
    v45 = v5;
    v37 = v16;
    v43 = v17;
    while (1)
    {
      sub_23F4C8990(v19 + v42 * v23, v22, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
      if (*(_QWORD *)(*(_QWORD *)(v22 + 24) + 16) == v17)
        break;
LABEL_10:
      ++v23;
      sub_23F5945E4();
      if (v23 == v16)
      {
        swift_bridgeObjectRelease();
        v35 = 1;
        v7 = v40;
LABEL_15:
        v15 = v39;
        goto LABEL_16;
      }
    }
    v38 = v23;
    v24 = *(_QWORD *)(v22 + 24);
    sub_23F617BA0();
    sub_23F617BA0();
    v25 = 0;
    while (1)
    {
      if (v17 == v25)
        goto LABEL_14;
      sub_23F383EB8();
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 16))(v0, v5 + v26 + *(_QWORD *)(v1 + 72) * v25, v8);
      v27 = *(_QWORD *)(v24 + 16);
      if (v25 == v27)
      {
        sub_23F383F80(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
LABEL_14:
        sub_23F362D18();
        sub_23F362C60();
        swift_bridgeObjectRelease();
        v7 = v40;
        sub_23F594550(v41, v36, type metadata accessor for ResponseGenerationOverrides_DialogGenerationOverride);
        v35 = 0;
        goto LABEL_15;
      }
      if (v25 >= v27)
        break;
      type metadata accessor for ResponseGenerationOverrides_Rule(0);
      sub_23F383D14();
      v30 = v24 + v28 + *(_QWORD *)(v29 + 72) * v25;
      v31 = (_QWORD *)(v46 + *(int *)(v47 + 48));
      v32 = v1;
      v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
      v33(v46, v0, v8);
      sub_23F4C8990(v30, (uint64_t)v31, type metadata accessor for ResponseGenerationOverrides_Rule);
      v33(v48, v46, v8);
      v1 = v32;
      v17 = v43;
      LOBYTE(v30) = sub_23F58F970(v48, v31);
      v34 = (uint64_t)v31;
      v5 = v45;
      sub_23F3663AC(v34, type metadata accessor for ResponseGenerationOverrides_Rule);
      v0 = v44;
      sub_23F383F80(v48, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      ++v25;
      if ((v30 & 1) == 0)
      {
        sub_23F362D18();
        sub_23F362C60();
        v22 = v41;
        v16 = v37;
        v23 = v38;
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
    v35 = 1;
LABEL_16:
    sub_23F36196C(v7, v35, 1, v15);
    sub_23F362948();
  }
}

uint64_t sub_23F58F970(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v5 = *(_QWORD *)(*a2 + 16);
  if (v5)
  {
    sub_23F5944E0();
    sub_23F594200();
    while (1)
    {
      sub_23F5943C8();
      if ((v6 & 1) == 0)
        break;
      v2 += v3;
      if (!--v5)
      {
        sub_23F362D18();
        goto LABEL_6;
      }
    }
LABEL_16:
    v11 = 0;
  }
  else
  {
LABEL_6:
    v7 = *(_QWORD *)(a2[1] + 16);
    if (v7)
    {
      sub_23F5944E0();
      sub_23F594200();
      while (1)
      {
        sub_23F5943C8();
        if ((v8 & 1) != 0)
          break;
        v2 += v3;
        if (!--v7)
          goto LABEL_16;
      }
      sub_23F362D18();
    }
    v9 = *(_QWORD *)(a2[2] + 16);
    if (v9)
    {
      sub_23F5944E0();
      sub_23F594200();
      while (1)
      {
        sub_23F5943C8();
        if ((v10 & 1) == 0)
          break;
        v2 += v3;
        if (!--v9)
          goto LABEL_16;
      }
      sub_23F362D18();
    }
    v12 = a2[3];
    v13 = *(_QWORD *)(v12 + 16);
    if (!v13)
    {
      v11 = 1;
      return v11 & 1;
    }
    sub_23F5944E0();
    sub_23F383D14();
    v15 = v12 + v14;
    v17 = *(_QWORD *)(v16 + 72);
    sub_23F3668F4();
    v18 = v13 - 1;
    do
    {
      v19 = v18;
      sub_23F58FA98();
      if ((v20 & 1) != 0)
        break;
      v18 = v19 - 1;
      v15 += v17;
    }
    while (v19);
    v11 = v20 ^ 1;
  }
  sub_23F362D18();
  return v11 & 1;
}

void sub_23F58FA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char v77;
  char *v78;
  _QWORD v79[16];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  sub_23F362ABC();
  v96 = v1;
  v97 = v0;
  v98 = v2;
  v99 = v3;
  v4 = sub_23F3B1728();
  v94 = *(_QWORD *)(v4 - 8);
  v95 = v4;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v93 = v6;
  v7 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_FailureOutcomePredicate(v7);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v10 = sub_23F3B13F0(v9);
  type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate(v10);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  v89 = v12;
  v13 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ActionRequirementOutcomePredicate(v13);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  v88 = v15;
  v16 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate(v16);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v17);
  v19 = sub_23F3B13F0((uint64_t)v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate(v19);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v20);
  v87 = (char *)v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate(v22);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v23);
  v25 = sub_23F3B13F0((uint64_t)v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate(v25);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v26);
  v86 = (char *)v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23F39C56C();
  type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate(v28);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F36285C();
  v31 = sub_23F3B13F0(v30);
  type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate(v31);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F36285C();
  sub_23F3B13F0(v33);
  v34 = sub_23F618134();
  v84 = *(_QWORD *)(v34 - 8);
  v85 = v34;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F36285C();
  v83 = v36;
  sub_23F39C56C();
  v37 = sub_23F61ACA8();
  v81 = *(_QWORD *)(v37 - 8);
  v82 = v37;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F3B13F0((uint64_t)v79 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = sub_23F61A504();
  v79[15] = *(_QWORD *)(v80 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F36285C();
  v42 = sub_23F3B13F0(v41);
  type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate(v42);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F36285C();
  v45 = sub_23F3B13F0(v44);
  type metadata accessor for ResponseGenerationOverrides_ActionPredicate(v45);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v46);
  v47 = sub_23F3B1630();
  v79[2] = type metadata accessor for ResponseGenerationOverrides_ToolPredicate(v47);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F36285C();
  sub_23F384990(v49);
  sub_23F35D2E8(&qword_256E75DE0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F3834D0();
  v79[3] = v51;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F383780();
  v79[0] = v53;
  v79[5] = sub_23F4DCEA0();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F3834D0();
  v79[4] = v55;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F383780();
  sub_23F384990(v57);
  sub_23F35D2E8(&qword_256E70238);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F362AAC();
  MEMORY[0x24BDAC7A8](v59);
  sub_23F543724();
  sub_23F35D2E8(&qword_256E6FAD8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v60);
  v61 = sub_23F3D9B88();
  type metadata accessor for ResponseGenerationOverrides_AppPredicate(v61);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F36285C();
  sub_23F384990(v63);
  sub_23F35D2E8(&qword_256E71158);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F3D9CCC();
  v65 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F3834D0();
  v91 = v67;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v68);
  v92 = (char *)v79 - v69;
  sub_23F383588();
  v71 = MEMORY[0x24BDAC7A8](v70);
  v73 = (char *)v79 - v72;
  MEMORY[0x24BDAC7A8](v71);
  v75 = (char *)v79 - v74;
  sub_23F4DC2E4(v99, v0);
  v76 = sub_23F383740(v0, 1, v65);
  if (!v77)
  {
    sub_23F52E528(v0, (uint64_t)v75, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v90 = v75;
    sub_23F4C8990((uint64_t)v75, (uint64_t)v73, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
    v78 = (char *)&loc_23F58FF50 + 4 * byte_23F62EE20[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23F594470(v76, &qword_256E71158);
  sub_23F362948();
}

uint64_t sub_23F590624(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8) == 1)
    return ((uint64_t (*)(_QWORD))((char *)&loc_23F590654 + 4 * byte_23F62EE2E[*(_QWORD *)a1]))(0);
  else
    return 0;
}

BOOL sub_23F59066C@<W0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return *(unsigned int *)(a2 + 12) == a1;
}

BOOL sub_23F59067C@<W0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return *(unsigned int *)(a2 + 12) >= a1;
}

void sub_23F59068C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  void *v29;
  id v30;

  sub_23F362ABC();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_23F3B1728();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3B17A4();
  if (*(_BYTE *)(v8 + 8) == 1 && *(_QWORD *)v8)
  {
    if (*(_QWORD *)v8 == 1)
    {
      if (*(_QWORD *)(v8 + 16) != v6 || *(_QWORD *)(v8 + 24) != v4)
      {
        sub_23F61CC64();
        return;
      }
    }
    else
    {
      v12 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v8 + 24);
      v13 = (uint64_t *)(v0
                      + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime38ResponseGenerationOverrideInputMatcher_regexCache);
      swift_beginAccess();
      v14 = *v13;
      sub_23F3E0254();
      sub_23F389CDC();
      v15 = sub_23F4414B0();
      sub_23F368750(v15, v16, v14);
      v18 = v17;
      sub_23F3837B0();
      sub_23F362D08();
      if (v18)
      {
        sub_23F3837B0();
        sub_23F5945F0();

      }
      else
      {
        v19 = objc_allocWithZone(MEMORY[0x24BDD1798]);
        sub_23F383E5C();
        v20 = sub_23F4414B0();
        v22 = sub_23F593C74(v20, v21, 0);
        v29 = v22;
        if (v22)
        {
          swift_beginAccess();
          v30 = v29;
          sub_23F37E31C((uint64_t)v30, v12, v11);
          swift_endAccess();
          sub_23F3837B0();
          sub_23F5945F0();

        }
        else
        {
          sub_23F619124();
          sub_23F383E5C();
          v23 = sub_23F619E8C();
          v24 = sub_23F61C628();
          if (os_log_type_enabled(v23, v24))
          {
            v25 = (uint8_t *)sub_23F366668();
            sub_23F366668();
            *(_DWORD *)v25 = 136315138;
            sub_23F383E5C();
            v26 = sub_23F4414B0();
            sub_23F37AE00(v26, v27, v28);
            sub_23F61C790();
            swift_bridgeObjectRelease_n();
            sub_23F38485C(&dword_23F35A000, v23, v24, "OTAOverrideInputMatcher: cannot compile regex pattern: \"%s\"", v25);
            sub_23F3B17D4();
            sub_23F366530();
          }

          sub_23F384A80();
          sub_23F383E88(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
        }
      }
    }
  }
  sub_23F362948();
}

void sub_23F590928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  os_log_type_t v20;
  uint64_t v21;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = sub_23F3B1728();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3D9CCC();
  v9 = (void *)sub_23F61C0E8();
  v10 = objc_msgSend(v6, sel_matchesInString_options_range_, v9, 0, 0, sub_23F61C238());

  sub_23F594120();
  v11 = sub_23F61C3DC();

  if (v11 >> 62)
  {
    sub_23F3668F4();
    v12 = sub_23F61CA6C();
    sub_23F362D18();
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_23F362D18();
  if (v12 != 1)
  {
    sub_23F619124();
    v13 = v6;
    sub_23F3E0254();
    v14 = v13;
    v15 = sub_23F619E8C();
    v16 = sub_23F61C628();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = sub_23F366668();
      v19 = (_QWORD *)sub_23F366668();
      v21 = sub_23F366668();
      *(_DWORD *)v17 = 138412546;
      v20 = v16;
      v18 = v14;
      sub_23F61C790();
      *v19 = v14;

      *(_WORD *)(v17 + 12) = 2080;
      sub_23F389CDC();
      sub_23F37AE00(v4, v2, &v21);
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23F35A000, v15, v20, "OTAOverrideInputMatcher: regex matched the input more than once for regex: \"%@\" and value: \"%s\"", (uint8_t *)v17, 0x16u);
      sub_23F35D2E8(&qword_256E6FAB0);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F384A80();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v7);
  }
  sub_23F362948();
}

void sub_23F590BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char v44;
  _QWORD *v45;
  char v46;
  _QWORD v47[3];
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v5 = sub_23F4DCEA8();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v48 = v7;
  sub_23F35D2E8(&qword_256E76708);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3834D0();
  v49 = v9;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383780();
  v50 = v11;
  v51 = v5;
  v12 = *(_QWORD *)(v2 + 16);
  v47[2] = v12;
  if (v12)
  {
    sub_23F389CDC();
    v13 = (uint64_t *)(v2 + 40);
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v15 = *v13;
      if (*v13)
      {
        v16 = *(v13 - 1);
        sub_23F3668F4();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F543650();
          v14 = v20;
        }
        v18 = v14[2];
        v17 = v14[3];
        if (v18 >= v17 >> 1)
        {
          sub_23F3B1A80(v17);
          sub_23F543650();
          v14 = v21;
        }
        v14[2] = v18 + 1;
        v19 = &v14[2 * v18];
        v19[4] = v16;
        v19[5] = v15;
      }
      v13 += 2;
      --v12;
    }
    while (v12);
    sub_23F362D08();
    v5 = v51;
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v22 = *v4;
  v23 = *(_QWORD *)(*v4 + 16);
  if (v23)
  {
    v47[0] = v4;
    sub_23F4DCEA0();
    sub_23F383D14();
    v25 = v22 + v24;
    v27 = *(_QWORD *)(v26 + 72);
    v47[1] = v22;
    v28 = sub_23F3668F4();
    while (1)
    {
      MEMORY[0x24BDAC7A8](v28);
      v47[-2] = v0;
      v47[-1] = v25;
      sub_23F383E5C();
      sub_23F3DE180((uint64_t (*)(_QWORD *))sub_23F594104, (uint64_t)&v47[-4], (uint64_t)v14);
      if (!v29[2])
      {
        sub_23F3837B0();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      v31 = v29[4];
      v30 = v29[5];
      sub_23F617BA0();
      sub_23F38432C();
      sub_23F485600(v31, v30, v14);
      v33 = v32;
      LOBYTE(v31) = v34;
      sub_23F362C60();
      if ((v31 & 1) != 0)
      {
        sub_23F3837B0();
        goto LABEL_29;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F492528();
        v14 = v37;
      }
      v35 = v14[2];
      if (v33 >= v35)
        break;
      v36 = v35 - 1;
      sub_23F37A280((char *)&v14[2 * v33 + 6], v35 - 1 - v33, (char *)&v14[2 * v33 + 4]);
      v14[2] = v36;
      v28 = sub_23F362C60();
      v25 += v27;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        v4 = (uint64_t *)v47[0];
        v5 = v51;
        goto LABEL_23;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_23:
    v38 = (uint64_t)v4 + *(int *)(type metadata accessor for ResponseGenerationOverrides_ListPredicate(0) + 28);
    v39 = v50;
    sub_23F4DCEB0(v38, v50);
    v40 = sub_23F594574();
    v42 = sub_23F36195C(v40, v41, v5);
    sub_23F4DC508(v39);
    if (v42 == 1)
      goto LABEL_28;
    v43 = v49;
    sub_23F3D96EC(v38, v49, &qword_256E76708);
    sub_23F383740(v43, 1, v5);
    v45 = v48;
    if (v44)
    {
      *v48 = 0;
      *((_BYTE *)v45 + 8) = 1;
      *((_DWORD *)v45 + 3) = 0;
      sub_23F618968();
      sub_23F3625D8(v43, &qword_256E76708);
    }
    else
    {
      sub_23F52E528(v43, (uint64_t)v48, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
    }
    v46 = sub_23F590624((uint64_t)v45);
    sub_23F3663AC((uint64_t)v45, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
    if ((v46 & 1) != 0)
LABEL_28:
      sub_23F3837B0();
    else
LABEL_29:
      swift_bridgeObjectRelease();
    sub_23F362948();
  }
}

uint64_t sub_23F590F64()
{
  char v0;

  sub_23F59068C();
  return v0 & 1;
}

void sub_23F590F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t EnumCaseMultiPayload;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  int64_t v106;
  unint64_t v107;
  int64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  int64_t v112;
  unint64_t v113;
  int64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t (*v153)(uint64_t);
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD v201[6];

  sub_23F362ABC();
  a19 = v24;
  a20 = v25;
  v184 = v20;
  v27 = v26;
  v29 = v28;
  v30 = sub_23F4DCEA8();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F36285C();
  sub_23F384990(v32);
  sub_23F35D2E8(&qword_256E76708);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F3834D0();
  v162 = v34;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F383780();
  v37 = sub_23F3B13F0(v36);
  type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate(v37);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F3834D0();
  v167 = v39;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F383780();
  v163 = v41;
  sub_23F4DCEA0();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F3834D0();
  v166 = v43;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F383780();
  sub_23F384990(v45);
  v170 = sub_23F35D2E8(&qword_256E7CBC0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F36285C();
  sub_23F384990(v47);
  sub_23F35D2E8(&qword_256E76750);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F36285C();
  sub_23F384990(v49);
  sub_23F35D2E8(&qword_256E76718);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F36285C();
  v52 = sub_23F3B13F0(v51);
  v53 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate(v52);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v54);
  v55 = sub_23F3B1630();
  v175 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate(v55);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F36285C();
  sub_23F384990(v57);
  sub_23F35D2E8(&qword_256E76738);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F362930();
  sub_23F35D2E8(&qword_256E76728);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v59);
  v61 = sub_23F3B13F0((uint64_t)&v158 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate(v61);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v63);
  v65 = sub_23F3B13F0((uint64_t)&v158 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate(v65);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F36285C();
  v69 = sub_23F3B13F0(v68);
  v189 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate(v69);
  sub_23F3C85D4();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F3845CC();
  v165 = v29;
  EnumCaseMultiPayload = *v29;
  v180 = *(_QWORD *)(EnumCaseMultiPayload + 16);
  if (!v180)
    goto LABEL_69;
  v169 = v27;
  v159 = v30;
  v179 = v71;
  sub_23F383EB8();
  v178 = EnumCaseMultiPayload + v73;
  sub_23F383738();
  v74 = 0;
  v172 = v22;
  v160 = MEMORY[0x24BEE4AD8] + 8;
  v181 = v62;
  v190 = v66;
  v168 = EnumCaseMultiPayload;
  v171 = v21;
  do
  {
    if (v74 >= *(_QWORD *)(EnumCaseMultiPayload + 16))
    {
LABEL_85:
      __break(1u);
      return;
    }
    sub_23F4C8990(v178 + *(_QWORD *)(v179 + 72) * v74, v23, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate);
    v75 = v62;
    v76 = v183;
    sub_23F3D96EC(v23 + *(int *)(v189 + 20), v183, &qword_256E76728);
    sub_23F383740(v76, 1, v75);
    if (v88)
    {
      v77 = sub_23F5945D0((uint64_t)&a11);
      sub_23F36196C(v77, v78, v79, v190);
      sub_23F618968();
      v80 = v76;
      v82 = v66;
      v66 = v190;
      sub_23F3625D8(v80, &qword_256E76728);
    }
    else
    {
      v81 = v76;
      v82 = v182;
      sub_23F52E528(v81, v182, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate);
    }
    sub_23F4DCEB8(v82, v21);
    sub_23F5945E4();
    v83 = sub_23F5074D4();
    sub_23F383740(v83, v84, v66);
    if (v88)
    {
      sub_23F3663AC(v23, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate);
      sub_23F3625D8(v21, &qword_256E76738);
      v62 = v181;
      goto LABEL_16;
    }
    sub_23F52E528(v21, v188, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    v85 = v176;
    sub_23F4DCEB8(v23 + *(int *)(v189 + 24), v176);
    v86 = sub_23F594574();
    sub_23F383740(v86, v87, v53);
    v62 = v181;
    if (v88)
    {
      v89 = sub_23F5945D0((uint64_t)&v199);
      v21 = v175;
      sub_23F36196C(v89, v90, v91, v175);
      v92 = v53;
      sub_23F618968();
      sub_23F594568();
    }
    else
    {
      v92 = v53;
      v66 = v172;
      sub_23F52E528(v85, v172, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate);
      v21 = v175;
    }
    v93 = v177;
    sub_23F4DCEB8(v66, v177);
    sub_23F3663AC(v66, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate);
    sub_23F383740(v93, 1, v21);
    if (v88)
    {
      v94 = sub_23F59441C();
      sub_23F3663AC(v94, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
      sub_23F3663AC(v23, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate);
      sub_23F594568();
      v21 = v171;
      v66 = v190;
      v53 = v92;
      goto LABEL_16;
    }
    v95 = v173;
    sub_23F52E528(v93, (uint64_t)v173, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    v96 = v174;
    v97 = v174 + *(int *)(v170 + 48);
    v98 = sub_23F59441C();
    sub_23F4C8990(v98, v96, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
    sub_23F4C8990((uint64_t)v95, v97, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    v66 = v190;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v191 = v97;
    v99 = swift_getEnumCaseMultiPayload();
    v53 = v92;
    if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      if (v99 != 1)
      {
        sub_23F594498(v174, (uint64_t)&v193);
        sub_23F5944C8();
        if (v128)
        {
          v129 = *v95;
          v130 = v95[1];
          sub_23F383738();
          sub_23F617BA0();
          sub_23F3754D4(v129, v130);
          LOBYTE(v129) = v131;
          sub_23F362984();
          swift_bridgeObjectRelease();
          sub_23F3663AC((uint64_t)v95, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate);
          v132 = sub_23F594598();
          sub_23F4DC910(v132);
          v133 = sub_23F59441C();
          sub_23F3663AC(v133, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
          sub_23F3663AC(v23, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate);
          if ((v129 & 1) != 0)
          {
            sub_23F4DC910(v191);
            sub_23F5945AC();
            goto LABEL_63;
          }
        }
        else
        {
          sub_23F594478(v127, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate);
          sub_23F5942A0(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate, (uint64_t)&v200);
          sub_23F5942A0(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate, (uint64_t)&a17);
          sub_23F5943F4(v156, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate);
        }
        sub_23F5943D8();
        v153 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate;
        v152 = v191;
LABEL_74:
        sub_23F3663AC(v152, v153);
        goto LABEL_83;
      }
      sub_23F594498(v174, (uint64_t)&v196 + 8);
      sub_23F52E528(v191, v166, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
      sub_23F5944C8();
      if (v100)
      {
        v101 = *v95;
        v102 = v95[1];
        sub_23F617BA0();
        v103 = sub_23F3754D4(v101, v102);
        if ((v104 & 1) != 0)
        {
          sub_23F382B64(*(_QWORD *)(EnumCaseMultiPayload + 56) + 32 * v103, (uint64_t)&v196);
        }
        else
        {
          v196 = 0u;
          v197 = 0u;
        }
        sub_23F38432C();
        if (*((_QWORD *)&v197 + 1))
        {
          sub_23F382A70(&v196, &v198);
          sub_23F382B64((uint64_t)&v198, (uint64_t)&v196);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v141 = v166;
            sub_23F5945C4();
            EnumCaseMultiPayload = v142;
            sub_23F38432C();
            _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v198);
            sub_23F3663AC(v141, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
            sub_23F3663AC(v167, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate);
            v143 = sub_23F594598();
            sub_23F3663AC(v143, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
            v144 = sub_23F59441C();
            sub_23F3663AC(v144, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
            sub_23F3663AC(v23, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate);
            if ((EnumCaseMultiPayload & 1) != 0)
            {
              sub_23F5945AC();
              goto LABEL_16;
            }
          }
          else
          {
            _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v198);
            sub_23F5942A0(type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&v196);
            sub_23F5942A0(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate, (uint64_t)&v196 + 8);
            sub_23F5942A0(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate, (uint64_t)&v200);
            sub_23F5942A0(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate, (uint64_t)&a17);
            sub_23F5943F4(v157, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate);
          }
          sub_23F5943D8();
          goto LABEL_83;
        }
      }
      else
      {
        v196 = 0u;
        v197 = 0u;
      }
      sub_23F5942A0(type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&v196);
      sub_23F5942A0(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.ExactValuePredicate, (uint64_t)&v196 + 8);
      sub_23F5942A0(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate, (uint64_t)&v200);
      sub_23F5942A0(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate, (uint64_t)&a17);
      sub_23F5943F4(v155, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate);
      sub_23F5943D8();
      sub_23F3625D8((uint64_t)&v196, &qword_256E6FC98);
      goto LABEL_83;
    }
    if (v99 != 1)
    {
      v134 = sub_23F594598();
      sub_23F4DC910(v134);
      v135 = sub_23F59441C();
      EnumCaseMultiPayload = (uint64_t)type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate;
      sub_23F3663AC(v135, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
      sub_23F3663AC(v23, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate);
      sub_23F4DC910(v191);
      sub_23F3663AC(v174, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate);
      sub_23F5945AC();
      v21 = v171;
      goto LABEL_16;
    }
    v186 = v92;
    v187 = v23;
    sub_23F52E528(v191, v185, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    sub_23F38231C(v169, v201);
    v105 = v201[0];
    v191 = v201[1];
    v106 = v201[3];
    v107 = v201[4];
    v108 = (unint64_t)(v201[2] + 64) >> 6;
    sub_23F3E0254();
    v109 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      if (v107)
      {
        v110 = __clz(__rbit64(v107));
        v107 &= v107 - 1;
        v111 = v110 | (v106 << 6);
        goto LABEL_45;
      }
      v112 = v106 + 1;
      if (__OFADD__(v106, 1))
      {
        __break(1u);
        goto LABEL_85;
      }
      v23 = v187;
      v53 = v186;
      if (v112 >= v108)
        goto LABEL_57;
      v113 = *(_QWORD *)(v191 + 8 * v112);
      v114 = v106 + 1;
      if (!v113)
      {
        if (v106 + 2 >= v108)
          goto LABEL_57;
        sub_23F594528();
        if (!v113)
        {
          if (v115 + 2 >= v108)
            goto LABEL_57;
          sub_23F594528();
          if (!v113)
          {
            if (v116 + 3 >= v108)
              goto LABEL_57;
            sub_23F594528();
            if (!v113)
            {
              if (v117 + 4 >= v108)
                goto LABEL_57;
              sub_23F594528();
              if (!v113)
              {
                v114 = v118 + 5;
                if (v118 + 5 >= v108)
                  goto LABEL_57;
                v113 = *(_QWORD *)(v191 + 8 * v114);
                if (!v113)
                  break;
              }
            }
          }
        }
      }
LABEL_44:
      v107 = (v113 - 1) & v113;
      v111 = __clz(__rbit64(v113)) + (v114 << 6);
      v106 = v114;
LABEL_45:
      sub_23F382B64(*(_QWORD *)(v105 + 56) + 32 * v111, (uint64_t)&v198);
      sub_23F382A70(&v198, &v196);
      sub_23F382B64((uint64_t)&v196, (uint64_t)&v192);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v194 = 0;
        v195 = 0;
      }
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v196);
      v120 = v195;
      if (v195)
      {
        v121 = v194;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F594580();
          v109 = v125;
        }
        v123 = *(_QWORD *)(v109 + 16);
        v122 = *(_QWORD *)(v109 + 24);
        if (v123 >= v122 >> 1)
        {
          sub_23F3B1A80(v122);
          sub_23F594580();
          v109 = v126;
        }
        *(_QWORD *)(v109 + 16) = v123 + 1;
        v124 = v109 + 16 * v123;
        *(_QWORD *)(v124 + 32) = v121;
        *(_QWORD *)(v124 + 40) = v120;
      }
    }
    v119 = v106 + 7;
    while (v119 < v108)
    {
      v113 = *(_QWORD *)(v191 + 8 * v119++);
      if (v113)
      {
        v114 = v119 - 1;
        goto LABEL_44;
      }
    }
LABEL_57:
    swift_bridgeObjectRelease();
    swift_release();
    v136 = *(_QWORD *)(v109 + 16);
    if (!v136)
    {
LABEL_73:
      sub_23F38432C();
      sub_23F5942A0(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate, (uint64_t)&v200);
      v150 = sub_23F59441C();
      sub_23F3C8574(v150);
      sub_23F5943F4(v151, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate);
      sub_23F5943D8();
      sub_23F5942A0(type metadata accessor for ResponseGenerationOverrides_StringPredicate, (uint64_t)&a14);
      v152 = v174;
      v153 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.KeyPredicate.OneOf_Predicate;
      goto LABEL_74;
    }
    sub_23F617BA0();
    v137 = v109 + 40;
    v21 = v171;
    while (1)
    {
      sub_23F617BA0();
      sub_23F5945C4();
      EnumCaseMultiPayload = v138;
      swift_bridgeObjectRelease();
      if ((EnumCaseMultiPayload & 1) != 0)
        break;
      v137 += 16;
      if (!--v136)
      {
        sub_23F38432C();
        goto LABEL_73;
      }
    }
    sub_23F384A80();
    v139 = sub_23F594598();
    sub_23F3663AC(v139, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ValuePredicate.OneOf_Predicate);
    v140 = sub_23F59441C();
    sub_23F3C8574(v140);
    sub_23F3663AC(v23, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate.ItemPredicate);
    sub_23F3663AC(v185, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
    sub_23F3C8574(v174);
    sub_23F5945AC();
    v62 = v181;
LABEL_63:
    v66 = v190;
LABEL_16:
    ++v74;
  }
  while (v74 != v180);
  sub_23F362984();
  v30 = v159;
LABEL_69:
  v145 = (uint64_t)v165 + *(int *)(type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(0) + 28);
  v146 = v164;
  sub_23F4DCEB0(v145, v164);
  v147 = v30;
  v148 = sub_23F36195C(v146, 1, v30);
  sub_23F4DC508(v146);
  if (v148 != 1)
  {
    v149 = v162;
    sub_23F3D96EC(v145, v162, &qword_256E76708);
    sub_23F383740(v149, 1, v147);
    v154 = v161;
    if (v88)
    {
      *v161 = 0;
      *((_BYTE *)v154 + 8) = 1;
      *((_DWORD *)v154 + 3) = 0;
      sub_23F618968();
      sub_23F3625D8(v149, &qword_256E76708);
    }
    else
    {
      sub_23F52E528(v149, (uint64_t)v161, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
    }
    sub_23F590624((uint64_t)v154);
    sub_23F3663AC((uint64_t)v154, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
  }
LABEL_83:
  sub_23F362948();
}

#error "23F591F98: call analysis failed (funcsize=127)"

void sub_23F591FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  sub_23F362ABC();
  v104 = v0;
  v105 = v8;
  v102 = v9;
  v11 = v10;
  v96 = sub_23F4DCEA8();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F5943FC(v13, v85);
  v14 = sub_23F61B92C();
  v94 = *(_QWORD *)(v14 - 8);
  v95 = v14;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  v93 = (uint64_t)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v88 = sub_23F61B6E0();
  v86 = *(_QWORD *)(v88 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F36285C();
  v87 = v18;
  sub_23F35D2E8(&qword_256E76708);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v19);
  v89 = (uint64_t)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F383780();
  v97 = v22;
  v23 = sub_23F39C56C();
  v101 = type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate(v23);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v24);
  v92 = (uint64_t *)((char *)&v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F35D2E8(&qword_256E766F8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F3834D0();
  v91 = v27;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F383780();
  v100 = v29;
  v106 = sub_23F5941D4();
  sub_23F3B1748();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F3842E4();
  v31 = sub_23F61ACA8();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F3D9B88();
  v33 = sub_23F61A504();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F4A0F08();
  v35 = sub_23F617DD4();
  v98 = *(_QWORD *)(v35 - 8);
  v99 = v35;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F3845CC();
  v103 = v11;
  sub_23F61AB4C();
  sub_23F594558();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v33);
  sub_23F61AC78();
  v37 = v31;
  v38 = v106;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v37);
  if (sub_23F383E88(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 88)) != *MEMORY[0x24BE53328])
  {
    v44 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
LABEL_4:
    v45 = v2;
    v46 = v38;
LABEL_15:
    v44(v45, v46);
    goto LABEL_16;
  }
  v39 = v100;
  v40 = v101;
  sub_23F383E88(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
  v42 = v98;
  v41 = v99;
  sub_23F383C64(v5, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 32));
  v43 = sub_23F5C8F10(v102, v104 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime38ResponseGenerationOverrideInputMatcher_responseLocale);
  v85 = v5;
  v47 = sub_23F593D4C(v43);
  sub_23F362D18();
  v48 = v105;
  v49 = type metadata accessor for ResponseGenerationOverrides_ActionSuccessOutcomePredicate(0);
  v50 = v48 + *(int *)(v49 + 20);
  sub_23F4DCEB0(v50, v39);
  v51 = sub_23F36195C(v39, 1, v40);
  sub_23F4DC508(v39);
  if (v51 == 1)
  {
    sub_23F384364();
    v53 = v97;
  }
  else
  {
    v53 = v97;
    if (!v47)
      goto LABEL_14;
    v54 = v91;
    sub_23F594560(v50, v52, &qword_256E766F8);
    sub_23F383740(v54, 1, v40);
    v57 = v92;
    if (v55)
    {
      *v92 = MEMORY[0x24BEE4AF8];
      *((_BYTE *)v57 + 8) = 0;
      sub_23F618968();
      v56 = sub_23F36196C((uint64_t)v57 + *(int *)(v40 + 28), 1, 1, v96);
      sub_23F594470(v56, &qword_256E766F8);
    }
    else
    {
      sub_23F52E528(v54, (uint64_t)v92, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate);
    }
    sub_23F590F9C((uint64_t)v57, v47, v58, v59, v60, v61, v62, v63, v85, v86, v87, v88, v89, (uint64_t)v90, v91, (uint64_t)v92, v93, v94, v95,
      v96);
    v65 = v64;
    sub_23F384364();
    sub_23F3663AC((uint64_t)v57, type metadata accessor for ResponseGenerationOverrides_KeyValuePredicate);
    if ((v65 & 1) == 0)
    {
LABEL_14:
      v44 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      v45 = v85;
      v46 = v41;
      goto LABEL_15;
    }
  }
  v66 = v105 + *(int *)(v49 + 24);
  v67 = sub_23F59448C();
  sub_23F4DC2E4(v67, v68);
  v69 = v96;
  v70 = sub_23F36195C(v53, 1, v96);
  sub_23F3625D8(v53, &qword_256E76708);
  if (v70 == 1)
  {
    sub_23F383CA8(v85, *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8));
    goto LABEL_16;
  }
  v2 = v93;
  v71 = v85;
  sub_23F617DA4();
  v72 = v94;
  v38 = v95;
  if (sub_23F383E88(v2, *(uint64_t (**)(uint64_t, uint64_t))(v94 + 88)) != *MEMORY[0x24BEB9988])
  {
    sub_23F383CA8(v71, *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8));
    v44 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
    goto LABEL_4;
  }
  sub_23F383E88(v2, *(uint64_t (**)(uint64_t, uint64_t))(v72 + 96));
  v73 = swift_projectBox();
  v74 = v86;
  v75 = v87;
  v76 = v88;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16))(v87, v73, v88);
  swift_release();
  v77 = v89;
  sub_23F594540(v66, v78, &qword_256E76708);
  v79 = sub_23F594574();
  sub_23F383740(v79, v80, v69);
  v81 = v90;
  if (v55)
  {
    *v90 = 0;
    *((_BYTE *)v81 + 8) = 1;
    *((_DWORD *)v81 + 3) = 0;
    v82 = sub_23F618968();
    sub_23F4DC280(v82, &qword_256E76708);
  }
  else
  {
    sub_23F52E528(v77, (uint64_t)v90, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
  }
  sub_23F61B6D4();
  sub_23F5945A4();
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v76);
  sub_23F383CA8(v71, *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8));
  v83 = sub_23F482A1C();
  v84 = sub_23F590624(v83);
  sub_23F3B1960(v84, type metadata accessor for ResponseGenerationOverrides_IntPredicate);
LABEL_16:
  sub_23F362948();
}

void sub_23F592550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (**v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (**v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (**v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (**v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  sub_23F362ABC();
  v59 = v0;
  v61 = v6;
  v62 = type metadata accessor for ResponseGenerationOverrides_ListPredicate(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  v58 = (uint64_t *)((char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F39C56C();
  v9 = sub_23F61B5D8();
  v10 = *(_QWORD *)(v9 - 8);
  v67 = v9;
  v68 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E76768);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3834D0();
  v57 = v15;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F383780();
  v60 = v17;
  v18 = sub_23F5941D4();
  v19 = *(uint64_t (***)(uint64_t, uint64_t))(v18 - 8);
  v65 = v18;
  v66 = v19;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F594308();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3842E4();
  v25 = sub_23F61A504();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F3B164C();
  v27 = sub_23F61820C();
  v63 = *(_QWORD *)(v27 - 8);
  v64 = v27;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v28);
  sub_23F362930();
  sub_23F61AB4C();
  sub_23F61A4F8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v25);
  sub_23F61AC78();
  v29 = v23;
  v30 = v66;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v29);
  if (sub_23F3B1DF8((uint64_t)v22, v30[11]) == *MEMORY[0x24BE532E0])
  {
    sub_23F3B1DF8((uint64_t)v22, v30[12]);
    v31 = (*(uint64_t (**)(uint64_t (**)(uint64_t, uint64_t), char *, uint64_t))(v63 + 32))(v2, v22, v64);
    v32 = MEMORY[0x24266B710](v31);
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
    {
      v66 = v2;
      v69 = MEMORY[0x24BEE4AF8];
      sub_23F37B47C();
      sub_23F383EB8();
      v65 = v32;
      v35 = v32 + v34;
      v37 = *(_QWORD *)(v36 + 72);
      v38 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
      do
      {
        v38(v13, v35, v67);
        v39 = sub_23F61B5A8();
        v41 = v40;
        sub_23F3D98EC((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v68 + 8));
        v42 = v69;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37B47C();
          v42 = v69;
        }
        v44 = *(_QWORD *)(v42 + 16);
        v43 = *(_QWORD *)(v42 + 24);
        if (v44 >= v43 >> 1)
        {
          sub_23F3B1A80(v43);
          sub_23F37B47C();
          v42 = v69;
        }
        *(_QWORD *)(v42 + 16) = v44 + 1;
        v45 = v42 + 16 * v44;
        *(_QWORD *)(v45 + 32) = v39;
        *(_QWORD *)(v45 + 40) = v41;
        v35 += v37;
        --v33;
      }
      while (v33);
      sub_23F3D9D90();
    }
    else
    {
      sub_23F362C60();
      v42 = MEMORY[0x24BEE4AF8];
    }
    v46 = type metadata accessor for ResponseGenerationOverrides_ToolDisambiguationOutcomePredicate(0);
    v47 = v60;
    v48 = v61 + *(int *)(v46 + 20);
    sub_23F3D96EC(v48, v60, &qword_256E76768);
    v49 = v62;
    v50 = sub_23F36195C(v47, 1, v62);
    sub_23F3625D8(v47, &qword_256E76768);
    if (v50 == 1)
    {
      sub_23F5942CC();
      sub_23F362984();
    }
    else
    {
      v51 = v57;
      sub_23F3D96EC(v48, v57, &qword_256E76768);
      sub_23F383740(v51, 1, v49);
      v54 = v58;
      if (v52)
      {
        *v58 = MEMORY[0x24BEE4AF8];
        *((_BYTE *)v54 + 8) = 0;
        sub_23F618968();
        v53 = sub_23F4DCEA8();
        sub_23F594310(v53);
        sub_23F3625D8(v51, &qword_256E76768);
      }
      else
      {
        sub_23F52E528(v51, (uint64_t)v58, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
      }
      sub_23F51C094(v42);
      sub_23F362984();
      sub_23F482A1C();
      sub_23F594548();
      v55 = sub_23F362D18();
      sub_23F3B1960(v55, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
      sub_23F5942CC();
    }
  }
  else
  {
    sub_23F3B1DF8((uint64_t)v22, v30[1]);
  }
  sub_23F362948();
}

void sub_23F592988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (**v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F362ABC();
  v20 = v5;
  v21 = sub_23F618134();
  v6 = *(uint64_t (***)(uint64_t, uint64_t))(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  sub_23F59419C();
  sub_23F3B1748();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B164C();
  v8 = sub_23F61A504();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3D9B88();
  v10 = sub_23F618230();
  v18 = *(_QWORD *)(v10 - 8);
  v19 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3B17A4();
  sub_23F61AB4C();
  sub_23F61A4F8();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v8);
  sub_23F61AC78();
  sub_23F383F80(v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  if (sub_23F3B1DF8(v2, v6[11]) != *MEMORY[0x24BE532E8])
  {
    sub_23F3B1DF8(v2, v6[1]);
    goto LABEL_11;
  }
  sub_23F3B1DF8(v2, v6[12]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v1, v2, v19);
  v12 = (uint64_t *)(v20
                  + *(int *)(type metadata accessor for ResponseGenerationOverrides_ParameterNeedsValueOutcomePredicate(0)
                           + 20));
  v13 = v12[1];
  v14 = v1;
  if (!v13)
  {
LABEL_10:
    sub_23F383E64(v14, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    goto LABEL_11;
  }
  v15 = *v12;
  if (sub_23F618224() == v15 && v13 == v16)
  {
    sub_23F362984();
    goto LABEL_10;
  }
  sub_23F3C8510();
  sub_23F362984();
  sub_23F383E64(v14, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
LABEL_11:
  sub_23F362948();
}

void sub_23F592B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  char v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[11];
  uint64_t v43;
  uint64_t v44;

  sub_23F362ABC();
  v42[9] = sub_23F5942A8(v6, v7, v8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = sub_23F5941E0(v10, v42[0]);
  v42[3] = *(_QWORD *)(v11 - 8);
  v42[4] = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F5942DC(v13, v42[0]);
  sub_23F35D2E8(&qword_256E75DE0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  v42[0] = (uint64_t)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v16);
  v42[8] = (uint64_t)v42 - v17;
  v18 = sub_23F5941D4();
  v43 = *(_QWORD *)(v18 - 8);
  v44 = v18;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F59419C();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F594180();
  sub_23F3B1748();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3D9B88();
  v42[7] = sub_23F6182F0();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F59424C();
  sub_23F594464();
  sub_23F594388();
  sub_23F594428();
  v24 = v43;
  sub_23F383CA8(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if (sub_23F594378() != *MEMORY[0x24BE53300])
  {
    v30 = sub_23F594518();
LABEL_17:
    v31(v30, v32);
    goto LABEL_18;
  }
  sub_23F59434C();
  sub_23F594284();
  type metadata accessor for ResponseGenerationOverrides_ParameterConfirmationOutcomePredicate(0);
  sub_23F594360();
  if (v20)
  {
    v2 = *v25;
    v26 = sub_23F618224();
    v24 = v27;
    v28 = v26 == v2 && v20 == v27;
    if (v28)
    {
      sub_23F362984();
    }
    else
    {
      v29 = sub_23F594324();
      sub_23F362984();
      if ((v29 & 1) == 0)
      {
        v30 = sub_23F5944A8();
LABEL_16:
        v32 = v5;
        goto LABEL_17;
      }
    }
  }
  sub_23F594508();
  sub_23F5943B8();
  sub_23F594220();
  if (v24 == 1)
  {
    sub_23F594338();
    goto LABEL_18;
  }
  sub_23F5944F8();
  sub_23F6182E4();
  sub_23F5943E4();
  if (v1)
  {
    sub_23F3B2230();
    sub_23F5941C4();
LABEL_15:
    v30 = sub_23F5944B8();
    goto LABEL_16;
  }
  v34 = v33;
  v35 = sub_23F5941C4();
  if (!v34)
    goto LABEL_15;
  sub_23F594398(v35, v36, &qword_256E75DE0);
  v37 = sub_23F383740(v3, 1, v2);
  v39 = v44;
  if (v28)
  {
    v40 = sub_23F594268();
    sub_23F576594(v40, &qword_256E75DE0);
  }
  else
  {
    sub_23F594480(v37, v38, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  }
  sub_23F5943A8();
  v41 = sub_23F362D18();
  sub_23F594478(v41, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  sub_23F5942C0(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
LABEL_18:
  sub_23F362948();
}

void sub_23F592DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48[2];
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  sub_23F362ABC();
  v52 = sub_23F594430(v5, v6, v7);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F594448(v9, v48[0]);
  sub_23F35D2E8(&qword_256E76768);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v10);
  v49 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F383780();
  v51 = v13;
  v56 = sub_23F5941D4();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F594308();
  sub_23F54DD74();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F383A54();
  sub_23F61A504();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F4A0F08();
  v20 = sub_23F618350();
  v53 = *(_QWORD *)(v20 - 8);
  v54 = v20;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61AB4C();
  sub_23F594558();
  sub_23F3D98EC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F61AC78();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v17);
  if (sub_23F383E88((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 88)) != *MEMORY[0x24BE53308])
  {
    v34 = sub_23F482A1C();
    v46(v34, v45);
    goto LABEL_17;
  }
  sub_23F383E88((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 96));
  v25 = v53;
  v24 = v54;
  sub_23F383C64((uint64_t)v23, (uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 32));
  v26 = type metadata accessor for ResponseGenerationOverrides_ParameterDisambiguationOutcomePredicate(0);
  v27 = v55;
  v28 = (uint64_t *)(v55 + *(int *)(v26 + 20));
  v29 = v28[1];
  if (v29)
  {
    v30 = *v28;
    v32 = sub_23F61832C() == v30 && v29 == v31;
    if (v32)
    {
      sub_23F362984();
    }
    else
    {
      v33 = sub_23F3C8510();
      sub_23F362984();
      if ((v33 & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
        goto LABEL_17;
      }
    }
  }
  v35 = v27 + *(int *)(v26 + 24);
  v36 = v51;
  sub_23F4DCEB0(v35, v51);
  v37 = v52;
  v38 = sub_23F36195C(v36, 1, v52);
  sub_23F4DC508(v36);
  if (v38 == 1)
  {
    sub_23F383CA8((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
  }
  else
  {
    v40 = (uint64_t)v49;
    sub_23F594560(v35, v39, &qword_256E76768);
    sub_23F383740(v40, 1, v37);
    if (v32)
    {
      v41 = v50;
      *v50 = MEMORY[0x24BEE4AF8];
      *((_BYTE *)v41 + 8) = 0;
      sub_23F618968();
      v42 = sub_23F4DCEA8();
      v43 = sub_23F594310(v42);
      sub_23F594470(v43, &qword_256E76768);
    }
    else
    {
      sub_23F52E528(v40, (uint64_t)v50, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
    }
    v44 = MEMORY[0x24266B854]();
    swift_retain();
    sub_23F58E344(v44);
    sub_23F362D18();
    sub_23F59448C();
    sub_23F594548();
    v47 = sub_23F362C60();
    sub_23F3B1960(v47, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
    sub_23F383CA8((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
  }
LABEL_17:
  sub_23F362948();
}

void sub_23F59313C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  char v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[11];
  uint64_t v43;
  uint64_t v44;

  sub_23F362ABC();
  v42[9] = sub_23F5942A8(v6, v7, v8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = sub_23F5941E0(v10, v42[0]);
  v42[3] = *(_QWORD *)(v11 - 8);
  v42[4] = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F5942DC(v13, v42[0]);
  sub_23F35D2E8(&qword_256E75DE0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  v42[0] = (uint64_t)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v16);
  v42[8] = (uint64_t)v42 - v17;
  v18 = sub_23F5941D4();
  v43 = *(_QWORD *)(v18 - 8);
  v44 = v18;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F59419C();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F594180();
  sub_23F3B1748();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3D9B88();
  v42[7] = sub_23F618254();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F59424C();
  sub_23F594464();
  sub_23F594388();
  sub_23F594428();
  v24 = v43;
  sub_23F383CA8(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if (sub_23F594378() != *MEMORY[0x24BE532F0])
  {
    v30 = sub_23F594518();
LABEL_17:
    v31(v30, v32);
    goto LABEL_18;
  }
  sub_23F59434C();
  sub_23F594284();
  type metadata accessor for ResponseGenerationOverrides_ParameterNotAllowedOutcomePredicate(0);
  sub_23F594360();
  if (v20)
  {
    v2 = *v25;
    v26 = sub_23F618224();
    v24 = v27;
    v28 = v26 == v2 && v20 == v27;
    if (v28)
    {
      sub_23F362984();
    }
    else
    {
      v29 = sub_23F594324();
      sub_23F362984();
      if ((v29 & 1) == 0)
      {
        v30 = sub_23F5944A8();
LABEL_16:
        v32 = v5;
        goto LABEL_17;
      }
    }
  }
  sub_23F594508();
  sub_23F5943B8();
  sub_23F594220();
  if (v24 == 1)
  {
    sub_23F594338();
    goto LABEL_18;
  }
  sub_23F5944F8();
  sub_23F618248();
  sub_23F5943E4();
  if (v1)
  {
    sub_23F3B2230();
    sub_23F5941C4();
LABEL_15:
    v30 = sub_23F5944B8();
    goto LABEL_16;
  }
  v34 = v33;
  v35 = sub_23F5941C4();
  if (!v34)
    goto LABEL_15;
  sub_23F594398(v35, v36, &qword_256E75DE0);
  v37 = sub_23F383740(v3, 1, v2);
  v39 = v44;
  if (v28)
  {
    v40 = sub_23F594268();
    sub_23F576594(v40, &qword_256E75DE0);
  }
  else
  {
    sub_23F594480(v37, v38, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  }
  sub_23F5943A8();
  v41 = sub_23F362D18();
  sub_23F594478(v41, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  sub_23F5942C0(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
LABEL_18:
  sub_23F362948();
}

void sub_23F5933B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  char v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[11];
  uint64_t v43;
  uint64_t v44;

  sub_23F362ABC();
  v42[9] = sub_23F5942A8(v6, v7, v8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = sub_23F5941E0(v10, v42[0]);
  v42[3] = *(_QWORD *)(v11 - 8);
  v42[4] = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F5942DC(v13, v42[0]);
  sub_23F35D2E8(&qword_256E75DE0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  v42[0] = (uint64_t)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v16);
  v42[8] = (uint64_t)v42 - v17;
  v18 = sub_23F5941D4();
  v43 = *(_QWORD *)(v18 - 8);
  v44 = v18;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23F59419C();
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F594180();
  sub_23F3B1748();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3D9B88();
  v42[7] = sub_23F618428();
  sub_23F3D9CA0();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F59424C();
  sub_23F594464();
  sub_23F594388();
  sub_23F594428();
  v24 = v43;
  sub_23F383CA8(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if (sub_23F594378() != *MEMORY[0x24BE53310])
  {
    v30 = sub_23F594518();
LABEL_17:
    v31(v30, v32);
    goto LABEL_18;
  }
  sub_23F59434C();
  sub_23F594284();
  type metadata accessor for ResponseGenerationOverrides_ParameterCandidatesNotFoundOutcomePredicate(0);
  sub_23F594360();
  if (v20)
  {
    v2 = *v25;
    v26 = sub_23F618224();
    v24 = v27;
    v28 = v26 == v2 && v20 == v27;
    if (v28)
    {
      sub_23F362984();
    }
    else
    {
      v29 = sub_23F594324();
      sub_23F362984();
      if ((v29 & 1) == 0)
      {
        v30 = sub_23F5944A8();
LABEL_16:
        v32 = v5;
        goto LABEL_17;
      }
    }
  }
  sub_23F594508();
  sub_23F5943B8();
  sub_23F594220();
  if (v24 == 1)
  {
    sub_23F594338();
    goto LABEL_18;
  }
  sub_23F5944F8();
  sub_23F61841C();
  sub_23F5943E4();
  if (v1)
  {
    sub_23F3B2230();
    sub_23F5941C4();
LABEL_15:
    v30 = sub_23F5944B8();
    goto LABEL_16;
  }
  v34 = v33;
  v35 = sub_23F5941C4();
  if (!v34)
    goto LABEL_15;
  sub_23F594398(v35, v36, &qword_256E75DE0);
  v37 = sub_23F383740(v3, 1, v2);
  v39 = v44;
  if (v28)
  {
    v40 = sub_23F594268();
    sub_23F576594(v40, &qword_256E75DE0);
  }
  else
  {
    sub_23F594480(v37, v38, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  }
  sub_23F5943A8();
  v41 = sub_23F362D18();
  sub_23F594478(v41, type metadata accessor for ResponseGenerationOverrides_StringPredicate);
  sub_23F5942C0(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
LABEL_18:
  sub_23F362948();
}

void sub_23F593634()
{
  sub_23F593968();
}

void sub_23F593658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t);
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45[2];
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  sub_23F362ABC();
  v53 = sub_23F594430(v4, v5, v6);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F594448(v8, v45[0]);
  sub_23F35D2E8(&qword_256E76768);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v9);
  v46 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F383780();
  v51 = v12;
  sub_23F5941D4();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F594308();
  sub_23F54DD74();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F594180();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F4A0F08();
  v19 = sub_23F618284();
  v49 = *(_QWORD *)(v19 - 8);
  v50 = v19;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F4DC4C4(v21, v45[0]);
  sub_23F61AB4C();
  sub_23F594558();
  sub_23F3D98EC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F594428();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v16);
  v22 = sub_23F59448C();
  if (v23(v22) == *MEMORY[0x24BE532F8])
  {
    v24 = sub_23F59448C();
    v25(v24);
    (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v48, v15, v50);
    v26 = type metadata accessor for ResponseGenerationOverrides_ValueDisambiguationOutcomePredicate(0);
    v27 = v51;
    v28 = v52 + *(int *)(v26 + 20);
    sub_23F4DC2E4(v28, v51);
    v29 = sub_23F5074D4();
    v30 = v53;
    v32 = sub_23F36195C(v29, v31, v53);
    sub_23F3625D8(v27, &qword_256E76768);
    if (v32 == 1)
    {
      sub_23F5942CC();
    }
    else
    {
      v35 = v28;
      v36 = (uint64_t)v46;
      sub_23F594560(v35, v33, &qword_256E76768);
      sub_23F383740(v36, 1, v30);
      v40 = v47;
      if (v37)
      {
        *v47 = MEMORY[0x24BEE4AF8];
        *((_BYTE *)v40 + 8) = 0;
        sub_23F5945B8();
        v38 = sub_23F4DCEA8();
        v39 = sub_23F594310(v38);
        sub_23F594470(v39, &qword_256E76768);
      }
      else
      {
        sub_23F52E528(v36, (uint64_t)v47, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
      }
      v41 = MEMORY[0x24266B788]();
      swift_retain();
      sub_23F58E344(v41);
      sub_23F362984();
      sub_23F594548();
      v44 = sub_23F362C60();
      sub_23F3668C0(v44, type metadata accessor for ResponseGenerationOverrides_ListPredicate);
      sub_23F5942CC();
    }
  }
  else
  {
    v34 = sub_23F59448C();
    v43(v34, v42);
  }
  sub_23F362948();
}

void sub_23F593944()
{
  sub_23F593968();
}

void sub_23F593968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t (*v6)(void);
  _DWORD *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  uint64_t (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _DWORD *v39;

  sub_23F362ABC();
  v34 = v6;
  v35 = v5;
  v39 = v7;
  v9 = v8;
  v36 = v10;
  v37 = v11;
  v38 = sub_23F618134();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3B164C();
  v13 = sub_23F61ACA8();
  sub_23F54DD74();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_23F594180();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = sub_23F3842E4();
  v18 = v9(v17);
  v32 = *(_QWORD *)(v18 - 8);
  v33 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v32 - v19;
  sub_23F61AB4C();
  sub_23F594534();
  sub_23F383E64(v1, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  sub_23F594428();
  v21 = v38;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v13);
  v22 = sub_23F3B1DF8(v4, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 88));
  if (v22 != *v39)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v21);
    goto LABEL_14;
  }
  v23 = v34;
  sub_23F3B1DF8(v4, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 96));
  v25 = v32;
  v24 = v33;
  sub_23F383C64((uint64_t)v20, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 32));
  v26 = (uint64_t *)(v36 + *(int *)(v35(0) + 20));
  v27 = v26[1];
  if (!v27)
    goto LABEL_13;
  v28 = *v26;
  v29 = v23();
  if (!v30)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v24);
    goto LABEL_14;
  }
  if (v29 == v28 && v30 == v27)
  {
    sub_23F362D18();
LABEL_13:
    sub_23F383CA8((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    goto LABEL_14;
  }
  sub_23F3C8510();
  sub_23F362D18();
  sub_23F383CA8((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
LABEL_14:
  sub_23F362948();
}

void sub_23F593B4C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  v0 = sub_23F6170CC();
  sub_23F362B6C(v0);
  swift_bridgeObjectRelease();
  sub_23F362928();
}

uint64_t sub_23F593B94()
{
  sub_23F593B4C();
  return swift_deallocClassInstance();
}

uint64_t sub_23F593BB8()
{
  return type metadata accessor for ResponseGenerationOverrideInputMatcher();
}

uint64_t type metadata accessor for ResponseGenerationOverrideInputMatcher()
{
  uint64_t result;

  result = qword_256E7CA68;
  if (!qword_256E7CA68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F593BF8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F6170CC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id sub_23F593C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = (void *)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_23F616D9C();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_23F593D4C(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v5 = (_QWORD *)((char *)v10 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_23F51394C(0, v4, v5);
    sub_23F593EA8(v5, v4, v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (unint64_t *)swift_slowAlloc();
    sub_23F51394C(0, v4, v7);
    sub_23F593EA8(v7, v4, v2);
    v2 = v8;
    MEMORY[0x242670B70](v7, -1, -1);
  }
  return v2;
}

void sub_23F593EA8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  _QWORD v22[2];
  uint64_t v23;
  _BYTE v24[32];
  uint64_t v25;

  v25 = 0;
  v4 = 0;
  v5 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_17:
    v15 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v11);
    v17 = *v15;
    v16 = v15[1];
    sub_23F382B64(*(_QWORD *)(a3 + 56) + 32 * v11, (uint64_t)v24);
    v22[0] = v17;
    v22[1] = v16;
    sub_23F382B64((uint64_t)v24, (uint64_t)&v23);
    if (v17 == 0x656D6F6374756FLL && v16 == 0xE700000000000000)
    {
      swift_bridgeObjectRetain_n();
      sub_23F3625D8((uint64_t)v22, &qword_256E73D48);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v24);
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = sub_23F61CC64();
      swift_bridgeObjectRetain_n();
      sub_23F3625D8((uint64_t)v22, &qword_256E73D48);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v24);
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        v12 = __OFADD__(v25++, 1);
        if (v12)
          goto LABEL_33;
      }
    }
  }
  v12 = __OFADD__(v4++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v4 >= v9)
    goto LABEL_30;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_16:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_17;
  }
  v14 = v4 + 1;
  if (v4 + 1 >= v9)
    goto LABEL_30;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
    goto LABEL_15;
  v14 = v4 + 2;
  if (v4 + 2 >= v9)
    goto LABEL_30;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
    goto LABEL_15;
  v14 = v4 + 3;
  if (v4 + 3 >= v9)
  {
LABEL_30:
    sub_23F575E4C(a1, a2, v25, (_QWORD *)a3);
    return;
  }
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
LABEL_15:
    v4 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      goto LABEL_30;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t sub_23F594104()
{
  return sub_23F590F64() & 1;
}

unint64_t sub_23F594120()
{
  unint64_t result;

  result = qword_256E78AE0;
  if (!qword_256E78AE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E78AE0);
  }
  return result;
}

uint64_t sub_23F59415C(uint64_t a1)
{
  uint64_t *v1;

  return sub_23F58EB8C(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]) & 1;
}

uint64_t sub_23F594180()
{
  return sub_23F61A504();
}

uint64_t sub_23F59419C()
{
  return sub_23F61ACA8();
}

void sub_23F5941B8(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F52E528(a1, v2, v1);
}

uint64_t sub_23F5941C4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 168) + 8))(v0, *(_QWORD *)(v1 - 160));
}

uint64_t sub_23F5941D4()
{
  return sub_23F618134();
}

uint64_t sub_23F5941E0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_23F61B92C();
}

uint64_t sub_23F594200()
{
  return sub_23F617BA0();
}

void sub_23F594220()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F36195C(v2, 1, v1);
  sub_23F3625D8(v2, v0);
}

uint64_t sub_23F59424C()
{
  return sub_23F61AB4C();
}

uint64_t sub_23F594268()
{
  uint64_t v0;
  char v1;

  *(_QWORD *)v0 = 0;
  *(_BYTE *)(v0 + 8) = v1;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  return sub_23F618968();
}

uint64_t sub_23F594284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 96) = v0;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0 + 32))(v2, v1, *(_QWORD *)(v3 - 136));
}

void sub_23F5942A0(uint64_t (*a1)(_QWORD)@<X1>, uint64_t a2@<X8>)
{
  sub_23F3663AC(*(_QWORD *)(a2 - 256), a1);
}

uint64_t sub_23F5942A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 184) = v3;
  *(_QWORD *)(v4 - 144) = a3;
  *(_QWORD *)(v4 - 112) = a1;
  return type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
}

uint64_t sub_23F5942C0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F5942CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void sub_23F5942DC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F5942F8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F594308()
{
  return sub_23F61ACA8();
}

uint64_t sub_23F594310(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(v1, 1, 1, a1);
}

uint64_t sub_23F594324()
{
  return sub_23F61CC64();
}

uint64_t sub_23F594338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v0, v1);
}

uint64_t sub_23F59434C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v2, v0);
}

uint64_t sub_23F594378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v0);
}

uint64_t sub_23F594388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void sub_23F594398(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F3D96EC(v3, *(_QWORD *)(v4 - 192), a3);
}

void sub_23F5943A8()
{
  sub_23F59068C();
}

void sub_23F5943B8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F3D96EC(v1, v2, v0);
}

void sub_23F5943C8()
{
  sub_23F58FA98();
}

uint64_t sub_23F5943D8()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23F5943E4()
{
  uint64_t v0;

  return sub_23F417D48(v0);
}

void sub_23F5943F4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F3663AC(v2, a2);
}

uint64_t sub_23F5943FC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23F59441C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 272);
}

uint64_t sub_23F594428()
{
  return sub_23F61AC78();
}

uint64_t sub_23F594430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 168) = v3;
  *(_QWORD *)(v4 - 152) = a3;
  *(_QWORD *)(v4 - 104) = a1;
  return type metadata accessor for ResponseGenerationOverrides_ListPredicate(0);
}

void sub_23F594448(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F594464()
{
  return sub_23F61A4F8();
}

void sub_23F594470(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F3625D8(v2, a2);
}

void sub_23F594478(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F3663AC(v2, a2);
}

void sub_23F594480(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F52E528(v4, v3, a3);
}

uint64_t sub_23F59448C()
{
  uint64_t v0;

  return v0;
}

void sub_23F594498(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(_QWORD);

  sub_23F52E528(a1, *(_QWORD *)(a2 - 256), v2);
}

uint64_t sub_23F5944A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5944B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5944E0()
{
  return type metadata accessor for ResponseGenerationOverrides_Rule.Predicate(0);
}

uint64_t sub_23F5944E8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 152) + 8))(v0, *(_QWORD *)(v1 - 144));
}

uint64_t sub_23F594518()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F594534()
{
  return sub_23F61A4F8();
}

void sub_23F594540(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F3D96EC(a1, v3, a3);
}

void sub_23F594548()
{
  sub_23F590BDC();
}

void sub_23F594550(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23F52E528(a1, v3, a3);
}

uint64_t sub_23F594558()
{
  return sub_23F61A4F8();
}

void sub_23F594560(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23F3D96EC(a1, v3, a3);
}

void sub_23F594568()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23F3625D8(v1, v0);
}

uint64_t sub_23F594574()
{
  uint64_t v0;

  return v0;
}

void sub_23F594580()
{
  sub_23F376C88();
}

void sub_23F59458C(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_23F52E528(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t sub_23F594598()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 392);
}

uint64_t sub_23F5945A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5945B8()
{
  return sub_23F618968();
}

void sub_23F5945C4()
{
  sub_23F59068C();
}

uint64_t sub_23F5945D0@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

void sub_23F5945E4()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_23F3663AC(v0, v1);
}

void sub_23F5945F0()
{
  sub_23F590928();
}

void ResponseGenerationPreferences.responseGenerationSideLoadPrebuiltOverrides.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A3A8();
  sub_23F43A384();
}

uint64_t type metadata accessor for ResponseGenerationPreferences()
{
  uint64_t result;

  result = qword_256E7CC68;
  if (!qword_256E7CC68)
    return swift_getSingletonMetadata();
  return result;
}

void ResponseGenerationPreferences.responseGenerationEnableOverrides.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A3A8();
  sub_23F43A384();
}

void ResponseGenerationPreferences.responseGenerationPromptVersion.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C800);
  sub_23F43A3B0();
  sub_23F43A384();
}

void ResponseGenerationPreferences.responseGenerationStructuredResponses.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A3A8();
  sub_23F43A384();
}

void ResponseGenerationPreferences.responseGenerationModelBundleIdentifier.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C800);
  sub_23F43A3B0();
  sub_23F43A384();
}

double ResponseGenerationPreferences.responseGenerationModelTimeout.getter()
{
  double v1;

  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C988);
  sub_23F598B2C();
  return v1;
}

uint64_t ResponseGenerationPreferences.responseValidationRules.getter()
{
  unsigned __int8 v1;

  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F617C48();
  return v1;
}

uint64_t ResponseGenerationPreferences.$responseValidationRules.getter()
{
  sub_23F35D2E8(&qword_256E7C9A0);
  return sub_23F617C54();
}

void ResponseGenerationPreferences.$responseValidationRules.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F617C60();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$responseValidationRules.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = malloc(0x30uLL);
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7C9A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  sub_23F617C54();
  sub_23F362B80();
}

void sub_23F594974()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  void *v3;
  void *v4;

  sub_23F362ABC();
  sub_23F43A3B8(v2);
  v3 = (void *)v0[4];
  v4 = (void *)v0[5];
  if ((v1 & 1) != 0)
  {
    sub_23F43A400();
    sub_23F43A410();
    sub_23F598AF4();
  }
  else
  {
    sub_23F43A410();
  }
  sub_23F4E4DC8();
  free(v4);
  free(v3);
  sub_23F43A418();
  sub_23F43A390(v0);
}

void ResponseGenerationPreferences.requestValidationDatabase.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A3A8();
  sub_23F43A384();
}

void ResponseGenerationPreferences.$requestValidationDatabase.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A37C();
  sub_23F362928();
}

void ResponseGenerationPreferences.$requestValidationDatabase.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F598A5C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$requestValidationDatabase.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7C9A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F598A5C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 20));
  sub_23F362B80();
}

void ResponseGenerationPreferences.$responseGenerationModelBundleIdentifier.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C800);
  sub_23F43A37C();
  sub_23F362928();
}

void ResponseGenerationPreferences.$responseGenerationModelBundleIdentifier.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7C800);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F598A5C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$responseGenerationModelBundleIdentifier.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7C800);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F598A5C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 24));
  sub_23F362B80();
}

void ResponseGenerationPreferences.$responseGenerationModelTimeout.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C988);
  sub_23F43A37C();
  sub_23F362928();
}

void ResponseGenerationPreferences.$responseGenerationModelTimeout.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7C988);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F598A5C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$responseGenerationModelTimeout.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7C988);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F598A5C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 28));
  sub_23F362B80();
}

void ResponseGenerationPreferences.$responseGenerationPromptVersion.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C800);
  sub_23F43A37C();
  sub_23F362928();
}

void ResponseGenerationPreferences.$responseGenerationPromptVersion.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7C800);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F598A5C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$responseGenerationPromptVersion.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7C800);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F598A5C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 32));
  sub_23F362B80();
}

void ResponseGenerationPreferences.$responseGenerationStructuredResponses.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A37C();
  sub_23F362928();
}

void ResponseGenerationPreferences.$responseGenerationStructuredResponses.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F598A5C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$responseGenerationStructuredResponses.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7C9A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F598A5C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 36));
  sub_23F362B80();
}

void ResponseGenerationPreferences.responseGenerationDialogPolicy.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7CBE8);
  sub_23F43A3B0();
  sub_23F43A384();
}

void ResponseGenerationPreferences.$responseGenerationDialogPolicy.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7CBE8);
  sub_23F43A37C();
  sub_23F362928();
}

void ResponseGenerationPreferences.$responseGenerationDialogPolicy.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7CBE8);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F598A5C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$responseGenerationDialogPolicy.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7CBE8);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F598A5C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 40));
  sub_23F362B80();
}

void ResponseGenerationPreferences.responseGenerationChatCompletionAPI.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A3A8();
  sub_23F43A384();
}

void ResponseGenerationPreferences.$responseGenerationChatCompletionAPI.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A37C();
  sub_23F362928();
}

void ResponseGenerationPreferences.$responseGenerationChatCompletionAPI.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F598A5C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$responseGenerationChatCompletionAPI.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7C9A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F598A5C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 44));
  sub_23F362B80();
}

void ResponseGenerationPreferences.$responseGenerationEnableOverrides.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A37C();
  sub_23F362928();
}

void ResponseGenerationPreferences.$responseGenerationEnableOverrides.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F598A5C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$responseGenerationEnableOverrides.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7C9A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F598A5C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 48));
  sub_23F362B80();
}

void ResponseGenerationPreferences.$responseGenerationSideLoadPrebuiltOverrides.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A37C();
  sub_23F362928();
}

void ResponseGenerationPreferences.$responseGenerationSideLoadPrebuiltOverrides.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F598A5C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$responseGenerationSideLoadPrebuiltOverrides.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7C9A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F598A5C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 52));
  sub_23F362B80();
}

void ResponseGenerationPreferences.responseValidationRulesEnabled.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7CBF0);
  sub_23F598B2C();
  sub_23F43A384();
}

void ResponseGenerationPreferences.$responseValidationRulesEnabled.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7CBF0);
  sub_23F43A37C();
  sub_23F362928();
}

void ResponseGenerationPreferences.$responseValidationRulesEnabled.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7CBF0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F598A5C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$responseValidationRulesEnabled.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7CBF0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F598A5C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 56));
  sub_23F362B80();
}

void ResponseGenerationPreferences.responseValidationRulesDisabled.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7CBF0);
  sub_23F598B2C();
  sub_23F43A384();
}

void ResponseGenerationPreferences.$responseValidationRulesDisabled.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7CBF0);
  sub_23F43A37C();
  sub_23F362928();
}

void ResponseGenerationPreferences.$responseValidationRulesDisabled.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7CBF0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F598A5C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$responseValidationRulesDisabled.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7CBF0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F598A5C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 60));
  sub_23F362B80();
}

void ResponseGenerationPreferences.responseGenerationUserQueryMirroring.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7CBF8);
  sub_23F43A3A8();
  sub_23F43A384();
}

void ResponseGenerationPreferences.$responseGenerationUserQueryMirroring.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7CBF8);
  sub_23F43A37C();
  sub_23F362928();
}

void ResponseGenerationPreferences.$responseGenerationUserQueryMirroring.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7CBF8);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F598A5C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$responseGenerationUserQueryMirroring.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7CBF8);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F598A5C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 64));
  sub_23F362B80();
}

void ResponseGenerationPreferences.responseGenerationPromptReasoning.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A3A8();
  sub_23F43A384();
}

void ResponseGenerationPreferences.$responseGenerationPromptReasoning.getter()
{
  sub_23F598A5C();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A37C();
  sub_23F362928();
}

void sub_23F595680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_23F35D2E8(a5);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v10, a1);
  a6(v10);
  sub_23F362B80();
}

void ResponseGenerationPreferences.$responseGenerationPromptReasoning.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F43A31C();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F43A2AC(v1, v2);
  sub_23F598A5C();
  sub_23F43A330();
  sub_23F43A30C();
  sub_23F383488();
}

void ResponseGenerationPreferences.$responseGenerationPromptReasoning.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_23F43A350();
  sub_23F43A340(v1);
  v2 = sub_23F35D2E8(&qword_256E7C9A0);
  v0[3] = sub_23F43A2D4(v2);
  v0[4] = sub_23F43A304();
  v0[5] = sub_23F43A304();
  v3 = sub_23F598A5C();
  sub_23F43A2F0(*(_DWORD *)(v3 + 68));
  sub_23F362B80();
}

void sub_23F5957AC()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  void *v3;
  void *v4;

  sub_23F362ABC();
  sub_23F43A3B8(v2);
  v3 = (void *)v0[4];
  v4 = (void *)v0[5];
  if ((v1 & 1) != 0)
  {
    sub_23F43A400();
    sub_23F43A410();
    sub_23F598AF4();
  }
  else
  {
    sub_23F43A410();
  }
  sub_23F4E4DC8();
  free(v4);
  free(v3);
  sub_23F43A418();
  sub_23F43A390(v0);
}

uint64_t sub_23F595820()
{
  swift_getKeyPath();
  sub_23F598604();
  sub_23F56E86C();
  sub_23F598A64();
  sub_23F598A5C();
  swift_getKeyPath();
  sub_23F598B04();
  sub_23F598A64();
  swift_getKeyPath();
  sub_23F56E86C();
  sub_23F598A74();
  sub_23F598A74();
  swift_getKeyPath();
  sub_23F598A74();
  swift_getKeyPath();
  sub_23F598B18();
  sub_23F598A64();
  sub_23F35D2E8(&qword_256E70FD8);
  sub_23F598B18();
  sub_23F598A74();
  sub_23F598A64();
  sub_23F598A64();
  sub_23F598A64();
  sub_23F35D2E8(&qword_256E70580);
  sub_23F56E86C();
  sub_23F598AE0();
  sub_23F598AE0();
  sub_23F35D2E8(qword_256E7CCB0);
  sub_23F598B04();
  sub_23F598A74();
  return sub_23F598A74();
}

void sub_23F595BC8()
{
  uint64_t v0;

  v0 = sub_23F598A5C();
  sub_23F3F3F64(v0, qword_256E803F8);
  sub_23F361498(v0, (uint64_t)qword_256E803F8);
  sub_23F595820();
  sub_23F362928();
}

void sub_23F595E80(uint64_t ***a1, char a2)
{
  uint64_t **v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t *v8;

  v2 = *a1;
  v3 = (*a1)[3];
  if ((a2 & 1) != 0)
  {
    v4 = *v2;
    ((void (*)(uint64_t *, uint64_t *, uint64_t *))v2[2][2])((*a1)[3], (*a1)[4], v2[1]);
    swift_retain();
    static Preferences.subscript.setter((uint64_t)v3, v4);
    v5 = sub_23F59448C();
    v6(v5);
  }
  else
  {
    swift_retain();
    v7 = sub_23F59448C();
    static Preferences.subscript.setter(v7, v8);
  }
  sub_23F43A418();
  free(v3);
  free(v2);
}

uint64_t sub_23F595F18()
{
  uint64_t result;

  sub_23F43A17C();
  result = sub_23F61C64C();
  qword_256E7CBD0 = result;
  return result;
}

uint64_t static ResponseGenerationPreferencesDomain.userDefaultsContainer.getter()
{
  uint64_t v0;
  id v1;

  if (qword_256E6F0C0 != -1)
    swift_once();
  v0 = qword_256E7CBD0;
  v1 = (id)qword_256E7CBD0;
  return v0;
}

void sub_23F595F98()
{
  uint64_t v0;

  sub_23F595FB4();
  qword_256E7CBD8 = v0;
}

void sub_23F595FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  void (*v46)(uint64_t, uint64_t);
  id v47;
  void *v48;
  unsigned int v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  unint64_t v55;
  void (*v56)(uint64_t, _QWORD, uint64_t);
  unsigned int v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;

  sub_23F362ABC();
  v2 = sub_23F619E98();
  v68 = *(_QWORD *)(v2 - 8);
  v69 = v2;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v67 = v4;
  v64 = sub_23F616DCC();
  v59 = *(_QWORD *)(v64 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v63 = v6;
  sub_23F35D2E8(&qword_256E70760);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v65 = v8;
  v66 = sub_23F616E68();
  v62 = *(_QWORD *)(v66 - 8);
  sub_23F362850();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v58 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v60 = (char *)&v55 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v61 = (char *)&v55 - v14;
  v15 = sub_23F619F04();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3B1F34();
  v17 = sub_23F61A15C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  sub_23F3D9CCC();
  sub_23F35D2E8(&qword_256E730C8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F38F964();
  v22 = v21 - v20;
  v23 = sub_23F61B38C();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  sub_23F38F964();
  v27 = v26 - v25;
  sub_23F61A150();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v1, *MEMORY[0x24BE54B68], v15);
  sub_23F61A144();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v15);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v0, v17);
  if (sub_23F36195C(v22, 1, v23) == 1)
  {
    v28 = &qword_256E730C8;
    v29 = v22;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v27, v22, v23);
    v30 = v65;
    sub_23F61B380();
    v31 = v66;
    if (sub_23F36195C(v30, 1, v66) != 1)
    {
      v67 = v23;
      v68 = v27;
      v69 = v24;
      v39 = v62;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v61, v30, v31);
      v70 = 0xD000000000000023;
      v71 = 0x800000023F63AEA0;
      v65 = 0x800000023F63AEA0;
      v40 = v59;
      v41 = *(void (**)(_QWORD))(v59 + 104);
      v42 = v63;
      v43 = v64;
      v57 = *MEMORY[0x24BDCD7A0];
      v56 = (void (*)(uint64_t, _QWORD, uint64_t))v41;
      v41(v63);
      v44 = sub_23F38813C();
      v45 = v60;
      v55 = v44;
      sub_23F616E44();
      v46 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v46(v42, v43);
      swift_bridgeObjectRelease();
      v47 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      sub_23F616E2C();
      v48 = (void *)sub_23F61C0E8();
      swift_bridgeObjectRelease();
      v49 = objc_msgSend(v47, sel_fileExistsAtPath_, v48);

      if (v49)
      {
        v70 = 0xD000000000000023;
        v71 = v65;
        v56(v42, v57, v43);
        v50 = v58;
        sub_23F616E44();
        v46(v42, v43);
        swift_bridgeObjectRelease();
        sub_23F59687C();
        v51 = *(void (**)(char *, uint64_t))(v39 + 8);
        v51(v50, v31);
        v51(v45, v31);
        v52 = sub_23F59448C();
        ((void (*)(uint64_t))v51)(v52);
      }
      else
      {
        v53 = *(void (**)(char *, uint64_t))(v39 + 8);
        v53(v45, v31);
        v54 = sub_23F59448C();
        ((void (*)(uint64_t))v53)(v54);
      }
      (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v67);
      goto LABEL_8;
    }
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v27, v23);
    v28 = &qword_256E70760;
    v29 = v30;
  }
  sub_23F3CFCB0(v29, v28);
  v32 = v67;
  sub_23F619124();
  v33 = sub_23F619E8C();
  v34 = sub_23F61C610();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)sub_23F366668();
    v70 = sub_23F366668();
    *(_DWORD *)v35 = 136315138;
    sub_23F56E86C();
    sub_23F37AE00(v36, v37, &v70);
    v72 = v38;
    sub_23F61C790();
    _os_log_impl(&dword_23F35A000, v33, v34, "%s MobileAssets not available", v35, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }

  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v32, v69);
LABEL_8:
  sub_23F362948();
}

uint64_t static ResponseGenerationPreferencesDomain.otaResource.getter()
{
  return sub_23F436C20(&qword_256E6F0C8);
}

void sub_23F596580()
{
  uint64_t v0;

  sub_23F59659C();
  qword_256E7CBE0 = v0;
}

void sub_23F59659C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t ObjCClassFromMetadata;
  id v14;
  id v15;
  void (*v16)(uint64_t, char *, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23F362ABC();
  v22 = sub_23F619E98();
  v1 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  sub_23F3D9CCC();
  sub_23F35D2E8(&qword_256E70760);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  v5 = v4 - v3;
  v6 = sub_23F616E68();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - v11;
  type metadata accessor for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v15 = sub_23F5988D8(0xD00000000000001DLL, 0x800000023F62EF00, 0x7473696C70, 0xE500000000000000, v14);

  if (v15)
  {
    sub_23F616E14();

    v16 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
    v16(v5, v10, v6);
    sub_23F598B34(v5, 0);
    if (sub_23F36195C(v5, 1, v6) != 1)
    {
      v16((uint64_t)v12, (char *)v5, v6);
      sub_23F59687C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_8;
    }
  }
  else
  {
    sub_23F598B34(v5, 1);
  }
  sub_23F3CFCB0(v5, &qword_256E70760);
  sub_23F619124();
  v17 = sub_23F619E8C();
  v18 = sub_23F61C628();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)sub_23F366668();
    v24 = sub_23F366668();
    *(_DWORD *)v19 = 136315138;
    sub_23F37AE00(0xD00000000000001DLL, 0x800000023F62EF00, &v24);
    v23 = v20;
    sub_23F61C790();
    _os_log_impl(&dword_23F35A000, v17, v18, "Error loading %s from bundle", v19, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v22);
LABEL_8:
  sub_23F362948();
}

uint64_t static ResponseGenerationPreferencesDomain.bundleResource.getter()
{
  return sub_23F436C20(&qword_256E6F0D0);
}

uint64_t sub_23F59687C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;

  v0 = sub_23F619E98();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23F616E98();
  v3 = v2;
  sub_23F616D84();
  swift_allocObject();
  sub_23F616D78();
  type metadata accessor for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences();
  sub_23F598954();
  sub_23F616D6C();
  swift_release();
  sub_23F3F3D0C(v1, v3);
  return v5;
}

uint64_t sub_23F596AFC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_23F596B04(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t sub_23F596B0C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t sub_23F596B14(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

unint64_t sub_23F596B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;

  v1 = *(_QWORD *)(v0 + 24);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v0 + 16);
  v3 = 0xD00000000000003FLL;
  v4 = v2 == 13686 && v1 == 0xE200000000000000;
  if (!v4 && (sub_23F598ACC() & 1) == 0)
  {
    v5 = v2 == 13942 && v1 == 0xE200000000000000;
    if (v5 || (sub_23F598ACC() & 1) != 0)
      return 0xD00000000000003CLL;
    return 0;
  }
  return v3;
}

void sub_23F596BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    v3 = v2 == 13686 && v1 == 0xE200000000000000;
    if (!v3 && (sub_23F598AB8() & 1) == 0 && (v2 != 13942 || v1 != 0xE200000000000000))
      sub_23F598AB8();
  }
  sub_23F362B80();
}

uint64_t sub_23F596C54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F436C65646F6DLL && a2 == 0xEB00000000676966;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023F63AE20 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023F63AE40 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023F63AE60 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023F63AE80)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23F596E64(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F596EA0 + 4 * byte_23F62EEA0[a1]))(0x6E6F436C65646F6DLL, 0xEB00000000676966);
}

unint64_t sub_23F596EA0()
{
  return 0xD000000000000019;
}

uint64_t sub_23F596F0C()
{
  unsigned __int8 *v0;

  return sub_23F596E64(*v0);
}

uint64_t sub_23F596F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F596C54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F596F38()
{
  sub_23F5971E8();
  return sub_23F61CDC0();
}

uint64_t sub_23F596F60()
{
  sub_23F5971E8();
  return sub_23F61CDCC();
}

uint64_t ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.__deallocating_deinit()
{
  ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.deinit();
  return swift_deallocClassInstance();
}

uint64_t ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.init(from:)(a1);
  return v2;
}

uint64_t ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = sub_23F35D2E8(&qword_256E7CC00);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B1F34();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_WORD *)(v1 + 32) = 514;
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5971E8();
  sub_23F61CD84();
  if (v2)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v7) = 0;
    *(_QWORD *)(v1 + 16) = sub_23F61CAE4();
    *(_QWORD *)(v1 + 24) = v5;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v1 + 32) = sub_23F598AA0(1);
    *(_BYTE *)(v1 + 33) = sub_23F598AA0(2);
    sub_23F35D2E8(&qword_256E70580);
    sub_23F597244();
    sub_23F598A7C();
    *(_QWORD *)(v1 + 40) = v7;
    sub_23F598A7C();
    sub_23F4F2424();
    *(_QWORD *)(v1 + 48) = v7;
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
  return v1;
}

unint64_t sub_23F5971E8()
{
  unint64_t result;

  result = qword_256E7CC08;
  if (!qword_256E7CC08)
  {
    result = MEMORY[0x242670A44](&unk_23F62F064, &type metadata for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7CC08);
  }
  return result;
}

uint64_t type metadata accessor for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences()
{
  return objc_opt_self();
}

unint64_t sub_23F597244()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256E781B0;
  if (!qword_256E781B0)
  {
    v1 = sub_23F35EB74(&qword_256E70580);
    v2 = MEMORY[0x24BEE0D38];
    result = MEMORY[0x242670A44](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256E781B0);
  }
  return result;
}

uint64_t sub_23F5972A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23F5972CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static ResponseGenerationPreferencesDomain.otaResource.getter();
  *a1 = result;
  return result;
}

uint64_t sub_23F5972F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static ResponseGenerationPreferencesDomain.bundleResource.getter();
  *a1 = result;
  return result;
}

void sub_23F597314()
{
  ResponseGenerationPreferences.$responseValidationRules.getter();
  sub_23F362928();
}

void sub_23F597330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7C9A0, (void (*)(char *))ResponseGenerationPreferences.$responseValidationRules.setter);
}

void sub_23F597354()
{
  ResponseGenerationPreferences.$requestValidationDatabase.getter();
  sub_23F362928();
}

void sub_23F597370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7C9A0, (void (*)(char *))ResponseGenerationPreferences.$requestValidationDatabase.setter);
}

void sub_23F597394()
{
  ResponseGenerationPreferences.$responseGenerationModelBundleIdentifier.getter();
  sub_23F362928();
}

void sub_23F5973B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7C800, (void (*)(char *))ResponseGenerationPreferences.$responseGenerationModelBundleIdentifier.setter);
}

void sub_23F5973D4()
{
  ResponseGenerationPreferences.$responseGenerationModelTimeout.getter();
  sub_23F362928();
}

void sub_23F5973F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7C988, (void (*)(char *))ResponseGenerationPreferences.$responseGenerationModelTimeout.setter);
}

void sub_23F597414()
{
  ResponseGenerationPreferences.$responseGenerationPromptVersion.getter();
  sub_23F362928();
}

void sub_23F597430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7C800, (void (*)(char *))ResponseGenerationPreferences.$responseGenerationPromptVersion.setter);
}

void sub_23F597454()
{
  ResponseGenerationPreferences.$responseGenerationStructuredResponses.getter();
  sub_23F362928();
}

void sub_23F597470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7C9A0, (void (*)(char *))ResponseGenerationPreferences.$responseGenerationStructuredResponses.setter);
}

void sub_23F597494()
{
  ResponseGenerationPreferences.$responseGenerationDialogPolicy.getter();
  sub_23F362928();
}

void sub_23F5974B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7CBE8, (void (*)(char *))ResponseGenerationPreferences.$responseGenerationDialogPolicy.setter);
}

void sub_23F5974D4()
{
  ResponseGenerationPreferences.$responseGenerationChatCompletionAPI.getter();
  sub_23F362928();
}

void sub_23F5974F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7C9A0, (void (*)(char *))ResponseGenerationPreferences.$responseGenerationChatCompletionAPI.setter);
}

void sub_23F597514()
{
  ResponseGenerationPreferences.$responseGenerationEnableOverrides.getter();
  sub_23F362928();
}

void sub_23F597530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7C9A0, (void (*)(char *))ResponseGenerationPreferences.$responseGenerationEnableOverrides.setter);
}

void sub_23F597554()
{
  ResponseGenerationPreferences.$responseGenerationSideLoadPrebuiltOverrides.getter();
  sub_23F362928();
}

void sub_23F597570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7C9A0, (void (*)(char *))ResponseGenerationPreferences.$responseGenerationSideLoadPrebuiltOverrides.setter);
}

void sub_23F597594()
{
  ResponseGenerationPreferences.$responseValidationRulesEnabled.getter();
  sub_23F362928();
}

void sub_23F5975B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7CBF0, (void (*)(char *))ResponseGenerationPreferences.$responseValidationRulesEnabled.setter);
}

void sub_23F5975D4()
{
  ResponseGenerationPreferences.$responseValidationRulesDisabled.getter();
  sub_23F362928();
}

void sub_23F5975F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7CBF0, (void (*)(char *))ResponseGenerationPreferences.$responseValidationRulesDisabled.setter);
}

void sub_23F597614()
{
  ResponseGenerationPreferences.$responseGenerationUserQueryMirroring.getter();
  sub_23F362928();
}

void sub_23F597630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7CBF8, (void (*)(char *))ResponseGenerationPreferences.$responseGenerationUserQueryMirroring.setter);
}

void sub_23F597654()
{
  ResponseGenerationPreferences.$responseGenerationPromptReasoning.getter();
  sub_23F362928();
}

void sub_23F597670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F595680(a1, a2, a3, a4, &qword_256E7C9A0, (void (*)(char *))ResponseGenerationPreferences.$responseGenerationPromptReasoning.setter);
}

char *initializeBufferWithCopyOfBuffer for ResponseGenerationPreferences(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F35D2E8(&qword_256E7C9A0);
    v8 = *(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8(&a1[a3[5]], (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[6];
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    v12 = sub_23F35D2E8(&qword_256E7C800);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v14 = a3[7];
    v15 = &a1[v14];
    v16 = (char *)a2 + v14;
    v17 = sub_23F35D2E8(&qword_256E7C988);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v13(&a1[a3[8]], (char *)a2 + a3[8], v12);
    v8(&a1[a3[9]], (uint64_t *)((char *)a2 + a3[9]), v7);
    v18 = a3[10];
    v19 = &a1[v18];
    v20 = (char *)a2 + v18;
    v21 = sub_23F35D2E8(&qword_256E7CBE8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v8(&a1[a3[11]], (uint64_t *)((char *)a2 + a3[11]), v7);
    v8(&a1[a3[12]], (uint64_t *)((char *)a2 + a3[12]), v7);
    v8(&a1[a3[13]], (uint64_t *)((char *)a2 + a3[13]), v7);
    v22 = a3[14];
    v23 = &a1[v22];
    v24 = (char *)a2 + v22;
    v25 = sub_23F35D2E8(&qword_256E7CBF0);
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v26(v23, v24, v25);
    v26(&a1[a3[15]], (char *)a2 + a3[15], v25);
    v27 = a3[16];
    v28 = &a1[v27];
    v29 = (char *)a2 + v27;
    v30 = sub_23F35D2E8(&qword_256E7CBF8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    v8(&a1[a3[17]], (uint64_t *)((char *)a2 + a3[17]), v7);
  }
  return a1;
}

uint64_t destroy for ResponseGenerationPreferences(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v18)(uint64_t, uint64_t);

  v4 = sub_23F35D2E8(&qword_256E7C9A0);
  v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v18(a1, v4);
  v18(a1 + a2[5], v4);
  v5 = a1 + a2[6];
  v6 = sub_23F35D2E8(&qword_256E7C800);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = a1 + a2[7];
  v9 = sub_23F35D2E8(&qword_256E7C988);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v7(a1 + a2[8], v6);
  v18(a1 + a2[9], v4);
  v10 = a1 + a2[10];
  v11 = sub_23F35D2E8(&qword_256E7CBE8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v18(a1 + a2[11], v4);
  v18(a1 + a2[12], v4);
  v18(a1 + a2[13], v4);
  v12 = a1 + a2[14];
  v13 = sub_23F35D2E8(&qword_256E7CBF0);
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v14(v12, v13);
  v14(a1 + a2[15], v13);
  v15 = a1 + a2[16];
  v16 = sub_23F35D2E8(&qword_256E7CBF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  return ((uint64_t (*)(uint64_t, uint64_t))v18)(a1 + a2[17], v4);
}

uint64_t initializeWithCopy for ResponseGenerationPreferences(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_23F35D2E8(&qword_256E7C9A0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23F35D2E8(&qword_256E7C800);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23F35D2E8(&qword_256E7C988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v12(a1 + a3[8], a2 + a3[8], v11);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v17 = a3[10];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_23F35D2E8(&qword_256E7CBE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  v7(a1 + a3[13], a2 + a3[13], v6);
  v21 = a3[14];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_23F35D2E8(&qword_256E7CBF0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v25(v22, v23, v24);
  v25(a1 + a3[15], a2 + a3[15], v24);
  v26 = a3[16];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = sub_23F35D2E8(&qword_256E7CBF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  v7(a1 + a3[17], a2 + a3[17], v6);
  return a1;
}

uint64_t assignWithCopy for ResponseGenerationPreferences(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_23F35D2E8(&qword_256E7C9A0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23F35D2E8(&qword_256E7C800);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23F35D2E8(&qword_256E7C988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v12(a1 + a3[8], a2 + a3[8], v11);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v17 = a3[10];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_23F35D2E8(&qword_256E7CBE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  v7(a1 + a3[13], a2 + a3[13], v6);
  v21 = a3[14];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_23F35D2E8(&qword_256E7CBF0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24);
  v25(v22, v23, v24);
  v25(a1 + a3[15], a2 + a3[15], v24);
  v26 = a3[16];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = sub_23F35D2E8(&qword_256E7CBF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  v7(a1 + a3[17], a2 + a3[17], v6);
  return a1;
}

uint64_t initializeWithTake for ResponseGenerationPreferences(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_23F35D2E8(&qword_256E7C9A0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23F35D2E8(&qword_256E7C800);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23F35D2E8(&qword_256E7C988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v12(a1 + a3[8], a2 + a3[8], v11);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v17 = a3[10];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_23F35D2E8(&qword_256E7CBE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  v7(a1 + a3[13], a2 + a3[13], v6);
  v21 = a3[14];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_23F35D2E8(&qword_256E7CBF0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  v25(a1 + a3[15], a2 + a3[15], v24);
  v26 = a3[16];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = sub_23F35D2E8(&qword_256E7CBF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  v7(a1 + a3[17], a2 + a3[17], v6);
  return a1;
}

uint64_t assignWithTake for ResponseGenerationPreferences(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_23F35D2E8(&qword_256E7C9A0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23F35D2E8(&qword_256E7C800);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23F35D2E8(&qword_256E7C988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v12(a1 + a3[8], a2 + a3[8], v11);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v17 = a3[10];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_23F35D2E8(&qword_256E7CBE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  v7(a1 + a3[13], a2 + a3[13], v6);
  v21 = a3[14];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_23F35D2E8(&qword_256E7CBF0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40);
  v25(v22, v23, v24);
  v25(a1 + a3[15], a2 + a3[15], v24);
  v26 = a3[16];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = sub_23F35D2E8(&qword_256E7CBF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  v7(a1 + a3[17], a2 + a3[17], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseGenerationPreferences()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5982BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F3F9C58();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    sub_23F35D2E8(&qword_256E7C800);
    sub_23F3F9C58();
    if (v9)
    {
      v7 = v10;
      v11 = a3[6];
    }
    else
    {
      sub_23F35D2E8(&qword_256E7C988);
      sub_23F3F9C58();
      if (v12)
      {
        v7 = v13;
        v11 = a3[7];
      }
      else
      {
        sub_23F35D2E8(&qword_256E7CBE8);
        sub_23F3F9C58();
        if (v14)
        {
          v7 = v15;
          v11 = a3[10];
        }
        else
        {
          sub_23F35D2E8(&qword_256E7CBF0);
          sub_23F3F9C58();
          if (v16)
          {
            v7 = v17;
            v11 = a3[14];
          }
          else
          {
            v7 = sub_23F35D2E8(&qword_256E7CBF8);
            v11 = a3[16];
          }
        }
      }
    }
    v8 = a1 + v11;
  }
  return sub_23F36195C(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for ResponseGenerationPreferences()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5983B0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F3F9C68();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    sub_23F35D2E8(&qword_256E7C800);
    sub_23F3F9C68();
    if (v10)
    {
      v8 = v11;
      v12 = a4[6];
    }
    else
    {
      sub_23F35D2E8(&qword_256E7C988);
      sub_23F3F9C68();
      if (v13)
      {
        v8 = v14;
        v12 = a4[7];
      }
      else
      {
        sub_23F35D2E8(&qword_256E7CBE8);
        sub_23F3F9C68();
        if (v15)
        {
          v8 = v16;
          v12 = a4[10];
        }
        else
        {
          sub_23F35D2E8(&qword_256E7CBF0);
          sub_23F3F9C68();
          if (v17)
          {
            v8 = v18;
            v12 = a4[14];
          }
          else
          {
            v8 = sub_23F35D2E8(&qword_256E7CBF8);
            v12 = a4[16];
          }
        }
      }
    }
    v9 = a1 + v12;
  }
  return sub_23F36196C(v9, a2, a2, v8);
}

void sub_23F5984A0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_23F598640(319, &qword_256E7CC78);
  if (v0 <= 0x3F)
  {
    sub_23F598640(319, &qword_256E7CC88);
    if (v1 <= 0x3F)
    {
      sub_23F598640(319, &qword_256E7CC90);
      if (v2 <= 0x3F)
      {
        sub_23F598698(319, &qword_256E7CC98, &qword_256E70FD8);
        if (v3 <= 0x3F)
        {
          sub_23F598698(319, &qword_256E7CCA0, &qword_256E70580);
          if (v4 <= 0x3F)
          {
            sub_23F598698(319, &qword_256E7CCA8, qword_256E7CCB0);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

unint64_t sub_23F598604()
{
  unint64_t result;

  result = qword_256E7CC80;
  if (!qword_256E7CC80)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for ResponseGenerationPreferencesDomain, &type metadata for ResponseGenerationPreferencesDomain);
    atomic_store(result, (unint64_t *)&qword_256E7CC80);
  }
  return result;
}

void sub_23F598640(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    sub_23F598604();
    v3 = sub_23F617C90();
    if (!v4)
      atomic_store(v3, a2);
  }
  sub_23F362B80();
}

void sub_23F598698(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_23F35EB74(a3);
    sub_23F598604();
    v4 = sub_23F617C90();
    if (!v5)
      atomic_store(v4, a2);
  }
  sub_23F362B80();
}

ValueMetadata *type metadata accessor for ResponseGenerationPreferencesDomain()
{
  return &type metadata for ResponseGenerationPreferencesDomain;
}

uint64_t method lookup function for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t storeEnumTagSinglePayload for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23F598778 + 4 * byte_23F62EEAA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23F5987AC + 4 * byte_23F62EEA5[v4]))();
}

uint64_t sub_23F5987AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5987B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5987BCLL);
  return result;
}

uint64_t sub_23F5987C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5987D0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23F5987D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5987DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.CodingKeys()
{
  return &type metadata for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.CodingKeys;
}

unint64_t sub_23F5987FC()
{
  unint64_t result;

  result = qword_256E7CE60;
  if (!qword_256E7CE60)
  {
    result = MEMORY[0x242670A44](&unk_23F62F03C, &type metadata for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7CE60);
  }
  return result;
}

unint64_t sub_23F59883C()
{
  unint64_t result;

  result = qword_256E7CE68;
  if (!qword_256E7CE68)
  {
    result = MEMORY[0x242670A44](&unk_23F62EFAC, &type metadata for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7CE68);
  }
  return result;
}

unint64_t sub_23F59887C()
{
  unint64_t result;

  result = qword_256E7CE70;
  if (!qword_256E7CE70)
  {
    result = MEMORY[0x242670A44](&unk_23F62EFD4, &type metadata for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7CE70);
  }
  return result;
}

uint64_t sub_23F5988B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  return sub_23F617BA0();
}

uint64_t sub_23F5988C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  return sub_23F617BA0();
}

id sub_23F5988D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)sub_23F61C0E8();
  v7 = (void *)sub_23F61C0E8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(a5, sel_URLForResource_withExtension_, v6, v7);

  return v8;
}

unint64_t sub_23F598954()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E7CE78;
  if (!qword_256E7CE78)
  {
    v1 = type metadata accessor for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences();
    result = MEMORY[0x242670A44](&protocol conformance descriptor for ResponseGenerationPreferencesDomain.ResponseGenerationPreferences, v1);
    atomic_store(result, (unint64_t *)&qword_256E7CE78);
  }
  return result;
}

void sub_23F598990()
{
  _BYTE *v0;

  sub_23F43A3E8();
  *v0 = sub_23F596B0C();
  sub_23F362928();
}

void sub_23F5989B0(unsigned __int8 *a1)
{
  sub_23F596B14(*a1);
  sub_23F362928();
}

void sub_23F5989D0()
{
  _BYTE *v0;

  sub_23F43A3E8();
  *v0 = sub_23F596AFC();
  sub_23F362928();
}

void sub_23F5989F0(unsigned __int8 *a1)
{
  sub_23F596B04(*a1);
  sub_23F362928();
}

void sub_23F598A10()
{
  unint64_t *v0;
  unint64_t v1;

  sub_23F43A3E8();
  *v0 = sub_23F596B1C();
  v0[1] = v1;
  sub_23F362928();
}

void sub_23F598A30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F43A3E8();
  sub_23F596BD0();
  *v0 = v1;
  v0[1] = v2;
  sub_23F362928();
}

void sub_23F598A50(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23F598A5C()
{
  return type metadata accessor for ResponseGenerationPreferences();
}

uint64_t sub_23F598A64()
{
  return sub_23F617C78();
}

uint64_t sub_23F598A74()
{
  return sub_23F617C78();
}

uint64_t sub_23F598A7C()
{
  return sub_23F61CB44();
}

uint64_t sub_23F598AA0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return sub_23F61CAF0();
}

uint64_t sub_23F598AB8()
{
  return sub_23F61CC64();
}

uint64_t sub_23F598ACC()
{
  return sub_23F61CC64();
}

uint64_t sub_23F598AE0()
{
  return sub_23F617C6C();
}

uint64_t sub_23F598AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23F598B2C()
{
  return sub_23F617C48();
}

uint64_t sub_23F598B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F36196C(a1, a2, 1, v2);
}

uint64_t dispatch thunk of ResponseGenerationPromptBuilder.promptVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ResponseGenerationPromptBuilder.buildPrompt(modelInput:dialogValues:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t storeEnumTagSinglePayload for DefaultResponseGenerationPromptBuilder(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F598BAC + 4 * byte_23F62F185[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F598BE0 + 4 * byte_23F62F180[v4]))();
}

uint64_t sub_23F598BE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F598BE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F598BF0);
  return result;
}

uint64_t sub_23F598BFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F598C04);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F598C08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F598C10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DefaultResponseGenerationPromptBuilder()
{
  return &type metadata for DefaultResponseGenerationPromptBuilder;
}

uint64_t sub_23F598C2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F35D2E8(&qword_256E78F78);
    v3 = sub_23F61CA90();
  }
  else
  {
    v3 = MEMORY[0x24BEE4B00];
  }
  v6 = v3;
  sub_23F59E79C(a1, 1, &v6);
  v4 = v6;
  if (v1)
    swift_release();
  return v4;
}

void sub_23F598CB8(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;

  if ((*v2 & 1) != 0)
    sub_23F59A2B4(a1, a2);
  else
    sub_23F598D00(a1, a2);
}

void sub_23F598D00(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(void);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(char *, uint64_t, uint64_t);
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  char *v149;
  const char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  void (*v165)(void);
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  unint64_t v180;
  _QWORD v181[2];
  uint64_t v182;

  v3 = v2;
  v166 = a2;
  v134 = type metadata accessor for ResponseGenerationPreferences();
  MEMORY[0x24BDAC7A8](v134);
  v135 = (uint64_t)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E70238);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v161 = (char *)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v160 = (char *)&v129 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v159 = (char *)&v129 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v129 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v163 = (char *)&v129 - v16;
  v153 = sub_23F61AB94();
  v164 = *(_QWORD *)(v153 - 8);
  v17 = MEMORY[0x24BDAC7A8](v153);
  v131 = (char *)&v129 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v182 = (uint64_t)&v129 - v19;
  v20 = sub_23F35D2E8(&qword_256E6FAD8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v151 = (char *)&v129 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v169 = (char *)&v129 - v23;
  v24 = sub_23F61B5D8();
  v173 = *(_QWORD *)(v24 - 8);
  v174 = v24;
  v25 = MEMORY[0x24BDAC7A8](v24);
  v149 = (char *)&v129 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v170 = (char *)&v129 - v27;
  v138 = sub_23F61820C();
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138);
  v136 = (char *)&v129 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_23F61ACA8();
  v144 = *(_QWORD *)(v145 - 8);
  MEMORY[0x24BDAC7A8](v145);
  v143 = (char *)&v129 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_23F61A504();
  v140 = *(_QWORD *)(v141 - 8);
  MEMORY[0x24BDAC7A8](v141);
  v139 = (char *)&v129 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23F35D2E8(&qword_256E73CF8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v132 = (uint64_t)&v129 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v168 = (uint64_t)&v129 - v34;
  v35 = sub_23F35D2E8(&qword_256E6FB10);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v142 = (uint64_t)&v129 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v147 = (uint64_t)&v129 - v38;
  v167 = sub_23F61AA50();
  v155 = *(_QWORD *)(v167 - 8);
  MEMORY[0x24BDAC7A8](v167);
  v40 = (char *)&v129 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = (const char *)sub_23F61A0D8();
  v148 = *((_QWORD *)v150 - 1);
  MEMORY[0x24BDAC7A8](v150);
  v42 = (char *)&v129 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_23F6170CC();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v162 = (char *)&v129 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v45);
  v154 = (char *)&v129 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v50 = (char *)&v129 - v49;
  v51 = *v3;
  v52 = (void (*)(uint64_t, uint64_t))a1;
  v53 = sub_23F61AD98();
  v158 = *(char **)(v53 + 16);
  if (v158)
  {
    v152 = v15;
    LODWORD(v172) = v51;
    LOBYTE(v175) = v51;
    v54 = v53;
    sub_23F61AD74();
    v55 = sub_23F59B920((uint64_t)v50);
    v56 = v50;
    v58 = v57;
    v59 = *(void (**)(void))(v44 + 8);
    v130 = (uint64_t)v56;
    v156 = v43;
    v165 = v59;
    v59();
    sub_23F59BC64(a1, v54);
    v175 = 0;
    v176 = 0xE000000000000000;
    sub_23F61C8E0();
    swift_bridgeObjectRelease();
    v175 = 0x28207972657571;
    v176 = 0xE700000000000000;
    v129 = v55;
    v133 = v58;
    sub_23F61C280();
    sub_23F61C280();
    sub_23F61C280();
    swift_bridgeObjectRelease();
    sub_23F61C280();
    v157 = a1;
    sub_23F61AD68();
    sub_23F61A0CC();
    (*(void (**)(char *, const char *))(v148 + 8))(v42, v150);
    sub_23F61AA44();
    (*(void (**)(char *, uint64_t))(v155 + 8))(v40, v167);
    sub_23F61C280();
    swift_bridgeObjectRelease();
    sub_23F61C280();
    v181[0] = v175;
    v181[1] = v176;
    v60 = v168;
    v146 = v54;
    sub_23F36FF2C(v54, v168);
    v61 = v153;
    if (sub_23F36195C(v60, 1, v153) == 1)
    {
      sub_23F3625D8(v60, &qword_256E73CF8);
      v62 = sub_23F618134();
      sub_23F36196C(v147, 1, 1, v62);
      v63 = v171;
      v64 = v164;
      v65 = v174;
LABEL_15:
      v89 = v181;
      sub_23F61C280();
      v155 = v146 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
      sub_23F617BA0();
      v90 = 0;
      v150 = "ToolResolver.run";
      v148 = 0x800000023F636800;
      while (1)
      {
        if (__OFADD__(v90, 1))
        {
          __break(1u);
          goto LABEL_61;
        }
        v169 = (char *)(v90 + 1);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v182, v155 + *(_QWORD *)(v64 + 72) * v90, v61);
        v91 = (uint64_t)v163;
        sub_23F61AB70();
        if (sub_23F36195C(v91, 1, v65) == 1)
        {
          sub_23F3625D8(v91, &qword_256E70238);
          v92 = v173;
        }
        else
        {
          v95 = sub_23F61B5A8();
          v97 = v96;
          v92 = v173;
          (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v91, v65);
          if (v95 == 0xD000000000000033 && v97 == v148)
          {
            v94 = v61;
            swift_bridgeObjectRelease();
LABEL_30:
            v167 = 32123;
            v168 = 32123;
            v170 = (char *)0xE200000000000000;
            v171 = 0xE200000000000000;
            v105 = v156;
            goto LABEL_31;
          }
          v108 = sub_23F61CC64();
          swift_bridgeObjectRelease();
          if ((v108 & 1) != 0)
          {
            v94 = v61;
            goto LABEL_30;
          }
        }
        v93 = (uint64_t)v152;
        sub_23F61AB70();
        if (sub_23F36195C(v93, 1, v65) == 1)
        {
          v94 = v61;
          sub_23F3625D8(v93, &qword_256E70238);
          v171 = 0xE200000000000000;
          v168 = 32123;
        }
        else
        {
          v98 = v149;
          (*(void (**)(void))(v92 + 32))();
          LOBYTE(v175) = v172;
          v99 = sub_23F59BF10();
          if (v63)
          {
            (*(void (**)(char *, uint64_t))(v92 + 8))(v98, v65);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v182, v61);
            goto LABEL_48;
          }
          v168 = v99;
          v171 = v100;
          v94 = v61;
          (*(void (**)(char *, uint64_t))(v92 + 8))(v98, v65);
        }
        LOBYTE(v175) = v172;
        v101 = v154;
        sub_23F61AD74();
        v102 = sub_23F617018();
        v104 = v103;
        v105 = v156;
        ((void (*)(char *, uint64_t))v165)(v101, v156);
        v106 = sub_23F59BFC4(v182, v102, v104, v166);
        if (v63)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v182, v94);
          goto LABEL_48;
        }
        v167 = v106;
        v170 = v107;
        swift_bridgeObjectRelease();
LABEL_31:
        LOBYTE(v175) = v172;
        v109 = v162;
        sub_23F61AD74();
        v110 = sub_23F617018();
        v112 = v111;
        ((void (*)(char *, uint64_t))v165)(v109, v105);
        v113 = v182;
        v114 = v63;
        sub_23F59C200(v182, v110, v112, v166);
        if (v63)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v113, v94);
LABEL_48:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23F3625D8(v147, &qword_256E6FB10);
          return;
        }
        swift_bridgeObjectRelease();
        v175 = 0;
        v176 = 0xE000000000000000;
        sub_23F61C8E0();
        swift_bridgeObjectRelease();
        v175 = 10;
        v176 = 0xE100000000000000;
        v115 = (uint64_t)v159;
        sub_23F61AB70();
        v116 = v174;
        v61 = v94;
        if (sub_23F36195C(v115, 1, v174) == 1)
        {
          sub_23F3625D8(v115, &qword_256E70238);
        }
        else
        {
          sub_23F61B5B4();
          (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v115, v116);
        }
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v117 = (uint64_t)v160;
        sub_23F61AB70();
        if (sub_23F36195C(v117, 1, v116) == 1)
        {
          sub_23F3625D8(v117, &qword_256E70238);
        }
        else
        {
          v118 = (uint64_t)v151;
          sub_23F61B578();
          (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v117, v116);
          v119 = sub_23F61B980();
          if (sub_23F36195C(v118, 1, v119) == 1)
          {
            sub_23F3625D8(v118, &qword_256E6FAD8);
          }
          else
          {
            sub_23F61B968();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 8))(v118, v119);
          }
          v63 = v114;
          v61 = v153;
        }
        v120 = v182;
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v121 = (uint64_t)v161;
        sub_23F61AB70();
        v122 = v174;
        if (sub_23F36195C(v121, 1, v174) == 1)
        {
          sub_23F3625D8(v121, &qword_256E70238);
        }
        else
        {
          sub_23F61B584();
          (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v121, v122);
        }
        v64 = v164;
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v89 = v181;
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v52 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
        v52(v120, v61);
        ++v90;
        v65 = v174;
        if (v169 == v158)
        {
          swift_bridgeObjectRelease();
          goto LABEL_51;
        }
      }
    }
    v69 = v139;
    sub_23F61AB4C();
    v64 = v164;
    v52 = *(void (**)(uint64_t, uint64_t))(v164 + 8);
    v52(v60, v61);
    v70 = v143;
    sub_23F61A4F8();
    (*(void (**)(char *, uint64_t))(v140 + 8))(v69, v141);
    v71 = v147;
    sub_23F61AC78();
    (*(void (**)(char *, uint64_t))(v144 + 8))(v70, v145);
    v72 = sub_23F618134();
    sub_23F36196C(v71, 0, 1, v72);
    v73 = v71;
    v74 = v142;
    sub_23F59E684(v73, v142);
    v75 = *(_QWORD *)(v72 - 8);
    v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 88))(v74, v72);
    v65 = v174;
    if (v76 != *MEMORY[0x24BE532E0])
    {
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v72);
      v63 = v171;
      goto LABEL_15;
    }
    (*(void (**)(uint64_t, uint64_t))(v75 + 96))(v74, v72);
    (*(void (**)(char *, uint64_t, uint64_t))(v137 + 32))(v136, v74, v138);
    v77 = sub_23F61C280();
    v78 = MEMORY[0x24266B710](v77);
    v79 = *(_QWORD *)(v78 + 16);
    if (v79)
    {
      v80 = *(unsigned __int8 *)(v173 + 80);
      v172 = v78;
      v81 = v78 + ((v80 + 32) & ~v80);
      v182 = *(_QWORD *)(v173 + 72);
      v82 = *(void (**)(char *, uint64_t, uint64_t))(v173 + 16);
      v83 = v170;
      while (1)
      {
        v82(v83, v81, v65);
        v175 = 0;
        v176 = 0xE000000000000000;
        sub_23F61C8E0();
        v179 = v175;
        v180 = v176;
        sub_23F61C280();
        sub_23F61B5B4();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v84 = (uint64_t)v169;
        sub_23F61B578();
        v85 = sub_23F61B980();
        if (sub_23F36195C(v84, 1, v85) == 1)
        {
          sub_23F3625D8(v84, &qword_256E6FAD8);
        }
        else
        {
          sub_23F61B968();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 8))(v84, v85);
        }
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v83 = v170;
        sub_23F61B584();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F61B530();
        v86 = sub_23F5DE110();
        swift_bridgeObjectRelease();
        v87 = v171;
        v88 = sub_23F598C2C(v86);
        v177 = sub_23F35D2E8(&qword_256E74F78);
        v178 = sub_23F59E6CC();
        v175 = v88;
        sub_23F617BA0();
        sub_23F59E4B4(&v175);
        v171 = v87;
        if (v87)
          break;
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v175);
        swift_bridgeObjectRelease();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v65 = v174;
        (*(void (**)(char *, uint64_t))(v173 + 8))(v83, v174);
        v81 += v182;
        if (!--v79)
        {
          swift_bridgeObjectRelease();
          v64 = v164;
          goto LABEL_50;
        }
      }
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v175);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v173 + 8))(v83, v174);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v136, v138);
      swift_bridgeObjectRelease();
      sub_23F3625D8(v147, &qword_256E6FB10);
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_50:
      (*(void (**)(char *, uint64_t))(v137 + 8))(v136, v138);
      v61 = v153;
LABEL_51:
      v89 = (_QWORD *)v134;
      sub_23F3625D8(v147, &qword_256E6FB10);
      if (qword_256E6F0B8 != -1)
LABEL_61:
        swift_once();
      v123 = sub_23F361498((uint64_t)v89, (uint64_t)qword_256E803F8);
      swift_beginAccess();
      v124 = v135;
      sub_23F3663D4(v123, v135, (uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationPreferences);
      sub_23F35D2E8(&qword_256E7C9A0);
      sub_23F617C48();
      LODWORD(v123) = v179;
      sub_23F3663AC(v124, (uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationPreferences);
      if ((_DWORD)v123 == 1 && *(_QWORD *)(v146 + 16) == 1)
      {
        v125 = v132;
        sub_23F3F14DC(v146, v132);
        swift_bridgeObjectRelease();
        if (sub_23F36195C(v125, 1, v61) == 1)
        {
          swift_bridgeObjectRelease();
          sub_23F3625D8(v125, &qword_256E73CF8);
        }
        else
        {
          v126 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 32);
          v127 = v131;
          v126(v131, v125, v61);
          v128 = v130;
          sub_23F61700C();
          sub_23F5CDA54(v128, v166);
          ((void (*)(uint64_t, uint64_t))v165)(v128, v156);
          v179 = 2570;
          v180 = 0xE200000000000000;
          sub_23F61C280();
          swift_bridgeObjectRelease();
          sub_23F61C280();
          swift_bridgeObjectRelease();
          v52((uint64_t)v127, v61);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    type metadata accessor for ResponseGenerationPromptBuilderError();
    sub_23F59F330(&qword_256E7CEA0, (uint64_t)&unk_23F62F3B4);
    swift_allocError();
    v67 = v66;
    v68 = sub_23F35D2E8(&qword_256E7CEA8);
    sub_23F36196C(v67, 1, 2, v68);
    swift_willThrow();
  }
}

void sub_23F59A2B4(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(void);
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t, uint64_t);
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  const char *v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  unint64_t v165;
  void (*v166)(void);
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  unint64_t v182;
  _QWORD v183[2];
  uint64_t *v184;

  v167 = a2;
  v137 = type metadata accessor for ResponseGenerationPreferences();
  MEMORY[0x24BDAC7A8](v137);
  v138 = (char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F35D2E8(&qword_256E70238);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v162 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v161 = (char *)&v131 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v160 = (char *)&v131 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v152 = (char *)&v131 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v164 = (char *)&v131 - v14;
  v169 = sub_23F61AB94();
  v165 = *(_QWORD *)(v169 - 8);
  v15 = MEMORY[0x24BDAC7A8](v169);
  v133 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v184 = (uint64_t *)((char *)&v131 - v17);
  v18 = sub_23F35D2E8(&qword_256E6FAD8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v150 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v171 = (uint64_t)&v131 - v21;
  v22 = sub_23F61B5D8();
  v175 = *(_QWORD *)(v22 - 8);
  v176 = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v148 = (char *)&v131 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v172 = (char *)&v131 - v25;
  v141 = sub_23F61820C();
  v140 = *(_QWORD *)(v141 - 8);
  MEMORY[0x24BDAC7A8](v141);
  v139 = (char *)&v131 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_23F61ACA8();
  v149 = *(const char **)(v153 - 8);
  MEMORY[0x24BDAC7A8](v153);
  v147 = (char *)&v131 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_23F61A504();
  v143 = *(_QWORD *)(v144 - 8);
  MEMORY[0x24BDAC7A8](v144);
  v142 = (char *)&v131 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23F35D2E8(&qword_256E73CF8);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v134 = (uint64_t)&v131 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v170 = (uint64_t)&v131 - v32;
  v33 = sub_23F35D2E8(&qword_256E6FB10);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v145 = (uint64_t)&v131 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v146 = (uint64_t)&v131 - v36;
  v168 = sub_23F61AA50();
  v156 = *(_QWORD *)(v168 - 8);
  MEMORY[0x24BDAC7A8](v168);
  v38 = (char *)&v131 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_23F61A0D8();
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v40 = (char *)&v131 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_23F6170CC();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v163 = (char *)&v131 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v151 = (char *)&v131 - v46;
  MEMORY[0x24BDAC7A8](v45);
  v48 = (char *)&v131 - v47;
  v49 = *v2;
  v50 = a1;
  v51 = sub_23F61AD98();
  v159 = *(char **)(v51 + 16);
  if (v159)
  {
    LODWORD(v174) = v49;
    LOBYTE(v177) = v49;
    sub_23F61AD74();
    v52 = sub_23F59B920((uint64_t)v48);
    v53 = v48;
    v55 = v54;
    v56 = *(void (**)(void))(v42 + 8);
    v132 = (uint64_t)v53;
    v157 = v41;
    v166 = v56;
    v56();
    sub_23F59BC64(v50, v51);
    v177 = 0;
    v178 = 0xE000000000000000;
    sub_23F61C8E0();
    swift_bridgeObjectRelease();
    v177 = 0x28207972657571;
    v178 = 0xE700000000000000;
    v131 = v52;
    v136 = v55;
    sub_23F61C280();
    sub_23F61C280();
    sub_23F61C280();
    swift_bridgeObjectRelease();
    sub_23F61C280();
    v158 = v50;
    sub_23F61AD68();
    sub_23F61A0CC();
    (*(void (**)(char *, uint64_t))(v154 + 8))(v40, v155);
    sub_23F61AA44();
    (*(void (**)(char *, uint64_t))(v156 + 8))(v38, v168);
    sub_23F61C280();
    swift_bridgeObjectRelease();
    sub_23F61C280();
    v183[0] = v177;
    v183[1] = v178;
    v57 = v170;
    sub_23F36FF2C(v51, v170);
    v58 = v169;
    v59 = sub_23F36195C(v57, 1, v169);
    v60 = v51;
    v135 = v51;
    if (v59 == 1)
    {
      sub_23F3625D8(v57, &qword_256E73CF8);
      v61 = sub_23F618134();
      sub_23F36196C(v146, 1, 1, v61);
      v62 = v165;
      v63 = v176;
LABEL_15:
      v68 = 0xD000000000000014;
      v87 = v183;
      sub_23F61C280();
      v156 = v60 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
      sub_23F617BA0();
      v88 = 0;
      v155 = 0x800000023F63B0E0;
      v154 = 0x800000023F63B100;
      v153 = 0x800000023F63B120;
      v149 = "ToolResolver.run";
      v147 = (char *)0x800000023F636800;
      v89 = v173;
      v90 = v169;
      v91 = v184;
      v92 = v62;
      while (1)
      {
        if (__OFADD__(v88, 1))
        {
          __break(1u);
          goto LABEL_60;
        }
        v172 = (char *)(v88 + 1);
        (*(void (**)(uint64_t *, unint64_t, uint64_t))(v92 + 16))(v91, v156 + *(_QWORD *)(v92 + 72) * v88, v90);
        v93 = (uint64_t)v164;
        sub_23F61AB70();
        if (sub_23F36195C(v93, 1, v63) == 1)
        {
          sub_23F3625D8(v93, &qword_256E70238);
          v94 = v175;
        }
        else
        {
          v97 = sub_23F61B5A8();
          v99 = v98;
          v94 = v175;
          (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v93, v63);
          if (v97 == 0xD000000000000033 && v99 == v147)
          {
            swift_bridgeObjectRelease();
LABEL_29:
            v173 = 0xE200000000000000;
            v170 = 32123;
            v171 = 32123;
            v96 = 0xE200000000000000;
            v107 = v157;
            goto LABEL_30;
          }
          v110 = sub_23F61CC64();
          swift_bridgeObjectRelease();
          v91 = v184;
          if ((v110 & 1) != 0)
            goto LABEL_29;
        }
        v95 = (uint64_t)v152;
        sub_23F61AB70();
        if (sub_23F36195C(v95, 1, v63) == 1)
        {
          sub_23F3625D8(v95, &qword_256E70238);
          v96 = 0xE200000000000000;
          v171 = 32123;
        }
        else
        {
          v100 = v148;
          (*(void (**)(void))(v94 + 32))();
          LOBYTE(v177) = v174;
          v101 = sub_23F59BF10();
          if (v89)
          {
            (*(void (**)(char *, uint64_t))(v94 + 8))(v100, v63);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t *, uint64_t))(v165 + 8))(v91, v169);
            goto LABEL_47;
          }
          v96 = v102;
          v171 = v101;
          (*(void (**)(char *, uint64_t))(v94 + 8))(v100, v63);
        }
        LOBYTE(v177) = v174;
        v103 = v151;
        sub_23F61AD74();
        v104 = sub_23F617018();
        v106 = v105;
        v107 = v157;
        ((void (*)(char *, uint64_t))v166)(v103, v157);
        v108 = sub_23F59BFC4((uint64_t)v184, v104, v106, v167);
        if (v89)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t *, uint64_t))(v165 + 8))(v184, v169);
          goto LABEL_47;
        }
        v170 = v108;
        v173 = v109;
        swift_bridgeObjectRelease();
LABEL_30:
        LOBYTE(v177) = v174;
        v111 = v163;
        sub_23F61AD74();
        v112 = sub_23F617018();
        v114 = v113;
        ((void (*)(char *, uint64_t))v166)(v111, v107);
        v115 = v184;
        v116 = v89;
        sub_23F59C200((uint64_t)v184, v112, v114, v167);
        if (v89)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t *, uint64_t))(v165 + 8))(v115, v169);
LABEL_47:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23F3625D8(v146, &qword_256E6FB10);
          return;
        }
        v168 = v96;
        swift_bridgeObjectRelease();
        v177 = 0;
        v178 = 0xE000000000000000;
        sub_23F61C8E0();
        sub_23F61C280();
        v117 = (uint64_t)v160;
        sub_23F61AB70();
        v118 = v176;
        v119 = sub_23F36195C(v117, 1, v176);
        v90 = v169;
        if (v119 == 1)
        {
          sub_23F3625D8(v117, &qword_256E70238);
        }
        else
        {
          sub_23F61B5B4();
          (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v117, v118);
        }
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v120 = (uint64_t)v161;
        sub_23F61AB70();
        if (sub_23F36195C(v120, 1, v118) == 1)
        {
          sub_23F3625D8(v120, &qword_256E70238);
        }
        else
        {
          v121 = (uint64_t)v150;
          sub_23F61B578();
          (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v120, v118);
          v122 = sub_23F61B980();
          if (sub_23F36195C(v121, 1, v122) == 1)
          {
            sub_23F3625D8(v121, &qword_256E6FAD8);
          }
          else
          {
            sub_23F61B968();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 8))(v121, v122);
          }
          v89 = v116;
          v90 = v169;
        }
        v123 = v175;
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v124 = (uint64_t)v162;
        sub_23F61AB70();
        v125 = v176;
        if (sub_23F36195C(v124, 1, v176) == 1)
        {
          sub_23F3625D8(v124, &qword_256E70238);
        }
        else
        {
          sub_23F61B584();
          (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v124, v125);
        }
        v92 = v165;
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v68 = 0xD000000000000014;
        sub_23F61C280();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v87 = v183;
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v62 = *(_QWORD *)(v92 + 8);
        v91 = v184;
        ((void (*)(uint64_t *, uint64_t))v62)(v184, v90);
        ++v88;
        v63 = v176;
        if (v172 == v159)
        {
          v68 = v92;
          v88 = v135;
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
      }
    }
    v67 = v142;
    sub_23F61AB4C();
    v68 = v165;
    v62 = *(_QWORD *)(v165 + 8);
    ((void (*)(uint64_t, uint64_t))v62)(v57, v58);
    v69 = v147;
    sub_23F61A4F8();
    (*(void (**)(char *, uint64_t))(v143 + 8))(v67, v144);
    v70 = v146;
    sub_23F61AC78();
    (*((void (**)(char *, uint64_t))v149 + 1))(v69, v153);
    v71 = sub_23F618134();
    sub_23F36196C(v70, 0, 1, v71);
    v72 = v70;
    v73 = v145;
    sub_23F59E684(v72, v145);
    v74 = *(_QWORD *)(v71 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v74 + 88))(v73, v71) != *MEMORY[0x24BE532E0])
    {
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v71);
      v63 = v176;
      v62 = v68;
      goto LABEL_15;
    }
    (*(void (**)(uint64_t, uint64_t))(v74 + 96))(v73, v71);
    (*(void (**)(char *, uint64_t, uint64_t))(v140 + 32))(v139, v73, v141);
    v75 = sub_23F61C280();
    v76 = MEMORY[0x24266B710](v75);
    v77 = *(_QWORD *)(v76 + 16);
    v78 = v176;
    if (v77)
    {
      v79 = (*(unsigned __int8 *)(v175 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80);
      v164 = (char *)v76;
      v80 = v76 + v79;
      v170 = *(_QWORD *)(v175 + 72);
      v184 = *(uint64_t **)(v175 + 16);
      v174 = 0x800000023F63B0E0;
      v168 = 0x800000023F63B140;
      v81 = v172;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v184)(v81, v80, v78);
        v177 = 0;
        v178 = 0xE000000000000000;
        sub_23F61C8E0();
        v181 = v177;
        v182 = v178;
        sub_23F61C280();
        sub_23F61B5B4();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v82 = v171;
        sub_23F61B578();
        v83 = sub_23F61B980();
        if (sub_23F36195C(v82, 1, v83) == 1)
        {
          sub_23F3625D8(v82, &qword_256E6FAD8);
        }
        else
        {
          sub_23F61B968();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 8))(v82, v83);
        }
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v81 = v172;
        sub_23F61B584();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F61B530();
        v84 = sub_23F5DE110();
        swift_bridgeObjectRelease();
        v85 = v173;
        v86 = sub_23F598C2C(v84);
        v179 = sub_23F35D2E8(&qword_256E74F78);
        v180 = sub_23F59E6CC();
        v177 = v86;
        sub_23F617BA0();
        sub_23F59E4B4(&v177);
        v173 = v85;
        if (v85)
          break;
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v177);
        swift_bridgeObjectRelease();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v78 = v176;
        (*(void (**)(char *, uint64_t))(v175 + 8))(v81, v176);
        v80 += v170;
        if (!--v77)
        {
          swift_bridgeObjectRelease();
          v68 = v165;
          goto LABEL_49;
        }
      }
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v177);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v175 + 8))(v81, v176);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v139, v141);
      swift_bridgeObjectRelease();
      sub_23F3625D8(v146, &qword_256E6FB10);
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_49:
      v88 = v135;
      (*(void (**)(char *, uint64_t))(v140 + 8))(v139, v141);
      v90 = v169;
LABEL_50:
      v92 = (uint64_t)v138;
      v87 = (_QWORD *)v137;
      sub_23F3625D8(v146, &qword_256E6FB10);
      if (qword_256E6F0B8 != -1)
LABEL_60:
        swift_once();
      v126 = sub_23F361498((uint64_t)v87, (uint64_t)qword_256E803F8);
      swift_beginAccess();
      sub_23F3663D4(v126, v92, (uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationPreferences);
      sub_23F35D2E8(&qword_256E7C9A0);
      sub_23F617C48();
      LODWORD(v126) = v181;
      sub_23F3663AC(v92, (uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationPreferences);
      if ((_DWORD)v126 == 1 && *(_QWORD *)(v88 + 16) == 1)
      {
        v127 = v134;
        sub_23F36FF2C(v88, v134);
        swift_bridgeObjectRelease();
        if (sub_23F36195C(v127, 1, v90) == 1)
        {
          swift_bridgeObjectRelease();
          sub_23F3625D8(v127, &qword_256E73CF8);
        }
        else
        {
          v128 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 32);
          v129 = v133;
          v128(v133, v127, v90);
          v130 = v132;
          sub_23F61700C();
          sub_23F5CDA54(v130, v167);
          ((void (*)(uint64_t, uint64_t))v166)(v130, v157);
          v181 = 2570;
          v182 = 0xE200000000000000;
          sub_23F61C280();
          swift_bridgeObjectRelease();
          sub_23F61C280();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v62)(v129, v90);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    type metadata accessor for ResponseGenerationPromptBuilderError();
    sub_23F59F330(&qword_256E7CEA0, (uint64_t)&unk_23F62F3B4);
    swift_allocError();
    v65 = v64;
    v66 = sub_23F35D2E8(&qword_256E7CEA8);
    sub_23F36196C(v65, 1, 2, v66);
    swift_willThrow();
  }
}

uint64_t sub_23F59B920(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;

  v2 = sub_23F35D2E8(&qword_256E7CF50);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F6170CC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F6170B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F35D2E8(&qword_256E71D18);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F6170C0();
  sub_23F6170A8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v16 = sub_23F617048();
  if (sub_23F36195C((uint64_t)v15, 1, v16) == 1)
  {
    sub_23F3625D8((uint64_t)v15, &qword_256E71D18);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
LABEL_3:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return sub_23F617018();
  }
  v18 = sub_23F61703C();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  if (v18 == 28261 && v20 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  }
  else
  {
    v22 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    if ((v22 & 1) == 0)
      goto LABEL_3;
  }
  sub_23F617090();
  v23 = sub_23F617084();
  if (sub_23F36195C((uint64_t)v4, 1, v23) == 1)
  {
    v17 = 0x42475F6E65;
    sub_23F3625D8((uint64_t)v4, &qword_256E7CF50);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v17;
  }
  v25 = sub_23F61703C();
  v27 = v26;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v4, v23);
  if (v25 == 21333 && v27 == 0xE200000000000000)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = sub_23F61CC64();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
      return 0x42475F6E65;
  }
  return sub_23F617018();
}

uint64_t sub_23F59BC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD v23[2];
  unsigned __int8 v24;

  v4 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ResponseGenerationPreferences();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256E6F0B8 != -1)
    swift_once();
  v10 = sub_23F361498(v7, (uint64_t)qword_256E803F8);
  swift_beginAccess();
  sub_23F3663D4(v10, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationPreferences);
  sub_23F35D2E8(&qword_256E7CBF8);
  sub_23F617C48();
  v11 = v24;
  sub_23F3663AC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationPreferences);
  if (v11 != 2)
  {
    if ((v11 & 1) == 0)
      return 4271950;
    return sub_23F61ADA4();
  }
  v12 = *(_QWORD *)(a2 + 16);
  if (!v12)
    return sub_23F61ADA4();
  v23[0] = a1;
  v13 = *(_QWORD *)(sub_23F61AB94() - 8);
  v14 = a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v15 = *(_QWORD *)(v13 + 72);
  v23[1] = a2;
  sub_23F617BA0();
  while (1)
  {
    sub_23F61AB70();
    v16 = sub_23F61B5D8();
    if (sub_23F36195C((uint64_t)v6, 1, v16) == 1)
    {
      v21 = 4271950;
      sub_23F3625D8((uint64_t)v6, &qword_256E70238);
      goto LABEL_18;
    }
    v17 = sub_23F61B5A8();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v6, v16);
    if (v17 != 0xD000000000000033 || v19 != 0x800000023F636800)
      break;
    swift_bridgeObjectRelease();
LABEL_11:
    v14 += v15;
    if (!--v12)
    {
      swift_bridgeObjectRelease();
      return sub_23F61ADA4();
    }
  }
  v20 = sub_23F61CC64();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    goto LABEL_11;
  v21 = 4271950;
LABEL_18:
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_23F59BF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[5];

  sub_23F61B530();
  v0 = sub_23F5DE110();
  swift_bridgeObjectRelease();
  v1 = sub_23F598C2C(v0);
  v4[3] = sub_23F35D2E8(&qword_256E74F78);
  v4[4] = sub_23F59E6CC();
  v4[0] = v1;
  sub_23F617BA0();
  v2 = sub_23F59E4B4(v4);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v4);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_23F59BFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[5];

  v6 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(&qword_256E70230);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61AB88();
  v12 = sub_23F61B0BC();
  if (sub_23F36195C((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F3625D8((uint64_t)v11, &qword_256E70230);
    v13 = sub_23F61BFEC();
LABEL_9:
    v18[3] = sub_23F35D2E8(&qword_256E7B8B8);
    v18[4] = sub_23F57B628();
    v18[0] = v13;
    sub_23F617BA0();
    a4 = sub_23F59E4B4(v18);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v18);
    swift_bridgeObjectRelease();
    return a4;
  }
  sub_23F61AB70();
  v14 = sub_23F61B5D8();
  if (sub_23F36195C((uint64_t)v8, 1, v14) == 1)
  {
    sub_23F3625D8((uint64_t)v8, &qword_256E70238);
  }
  else
  {
    sub_23F61B530();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v8, v14);
  }
  sub_23F5DE3F8();
  if (!v4)
  {
    v13 = v15;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return a4;
}

uint64_t sub_23F59C200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  void (*v99)(char *, char *, uint64_t);
  char *v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t);
  char *v111;
  uint64_t v112;
  char *v113;
  int v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t *v154;
  void (*v155)(char *, uint64_t);
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char **v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  unsigned __int8 v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t *v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  char *v285;
  char *v286;
  uint64_t v287;
  uint64_t v288;
  char *v289;
  char *v290;
  uint64_t v291;
  char *v292;
  uint64_t v293;
  char *v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  char *v304;
  char *v305;
  char *v306;
  char *v307;
  char *v308;
  char *v309;
  char *v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  void (*v318)(char *, uint64_t);
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  void *v324;
  unint64_t v325;
  uint64_t v326;

  v301 = a4;
  v288 = a3;
  v287 = a2;
  v262 = sub_23F618428();
  v263 = *(_QWORD *)(v262 - 8);
  MEMORY[0x24BDAC7A8](v262);
  v264 = (char *)&v251 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v252 = sub_23F617D50();
  v254 = *(_QWORD *)(v252 - 8);
  MEMORY[0x24BDAC7A8](v252);
  v253 = (uint64_t)&v251 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = sub_23F61814C();
  v260 = *(_QWORD *)(v258 - 8);
  MEMORY[0x24BDAC7A8](v258);
  v311 = (char *)&v251 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E7BAD8);
  MEMORY[0x24BDAC7A8](v8);
  v277 = (char *)&v251 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v298 = sub_23F61AB94();
  v300 = *(_QWORD *)(v298 - 8);
  MEMORY[0x24BDAC7A8](v298);
  v286 = (char *)&v251 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v297 = sub_23F61B92C();
  v296 = *(_QWORD *)(v297 - 8);
  MEMORY[0x24BDAC7A8](v297);
  v295 = (char *)&v251 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v284 = sub_23F61B8A8();
  v281 = *(_QWORD *)(v284 - 8);
  v12 = MEMORY[0x24BDAC7A8](v284);
  v282 = (char *)&v251 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v283 = (char *)&v251 - v14;
  v299 = sub_23F617DD4();
  v303 = *(_QWORD *)(v299 - 8);
  MEMORY[0x24BDAC7A8](v299);
  v302 = (char *)&v251 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = sub_23F618284();
  v257 = *(_QWORD *)(v256 - 8);
  MEMORY[0x24BDAC7A8](v256);
  v259 = (uint64_t)&v251 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v268 = sub_23F618350();
  v267 = *(_QWORD *)(v268 - 8);
  MEMORY[0x24BDAC7A8](v268);
  v266 = (char *)&v251 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v275 = sub_23F618230();
  v274 = *(_QWORD *)(v275 - 8);
  MEMORY[0x24BDAC7A8](v275);
  v276 = (char *)&v251 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v270 = sub_23F6182F0();
  v271 = *(_QWORD *)(v270 - 8);
  MEMORY[0x24BDAC7A8](v270);
  v272 = (char *)&v251 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F35D2E8(&qword_256E70230);
  MEMORY[0x24BDAC7A8](v20);
  v279 = (char *)&v251 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v280 = sub_23F6181E8();
  v293 = *(_QWORD *)(v280 - 8);
  MEMORY[0x24BDAC7A8](v280);
  v294 = (char *)&v251 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v320 = sub_23F618134();
  v316 = *(_QWORD *)(v320 - 8);
  v23 = MEMORY[0x24BDAC7A8](v320);
  v306 = (char *)&v251 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v317 = (char *)&v251 - v25;
  v314 = sub_23F61811C();
  v312 = *(_QWORD *)(v314 - 8);
  MEMORY[0x24BDAC7A8](v314);
  v307 = (char *)&v251 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23F35D2E8(&qword_256E70238);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v261 = (uint64_t)&v251 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v285 = (char *)&v251 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v255 = (uint64_t)&v251 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v265 = (char *)&v251 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v273 = (char *)&v251 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v269 = (char *)&v251 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v278 = (char *)&v251 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v289 = (char *)&v251 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v292 = (char *)&v251 - v44;
  v45 = sub_23F61ACA8();
  v313 = *(_QWORD *)(v45 - 8);
  v46 = MEMORY[0x24BDAC7A8](v45);
  v305 = (char *)&v251 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v46);
  v310 = (char *)&v251 - v49;
  MEMORY[0x24BDAC7A8](v48);
  v51 = (char *)&v251 - v50;
  v52 = sub_23F61A504();
  v53 = *(_QWORD *)(v52 - 8);
  v54 = MEMORY[0x24BDAC7A8](v52);
  v304 = (char *)&v251 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x24BDAC7A8](v54);
  v308 = (char *)&v251 - v57;
  MEMORY[0x24BDAC7A8](v56);
  v59 = (char *)&v251 - v58;
  v60 = sub_23F35D2E8(&qword_256E6FB18);
  v61 = MEMORY[0x24BDAC7A8](v60);
  v309 = (char *)&v251 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v61);
  v64 = (char *)&v251 - v63;
  v65 = sub_23F35D2E8(&qword_256E71CF8);
  MEMORY[0x24BDAC7A8](v65);
  v67 = (char *)&v251 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_23F617F0C();
  v291 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v290 = (char *)&v251 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v315 = a1;
  sub_23F61AB4C();
  sub_23F61A4F8();
  v318 = *(void (**)(_QWORD, _QWORD))(v53 + 8);
  v319 = v52;
  v318(v59, v52);
  sub_23F61AC9C();
  v70 = v314;
  v71 = *(void (**)(_QWORD, _QWORD))(v313 + 8);
  v72 = v45;
  v71(v51, v45);
  if (sub_23F36195C((uint64_t)v64, 1, v70) == 1)
  {
    sub_23F3625D8((uint64_t)v64, &qword_256E6FB18);
    sub_23F36196C((uint64_t)v67, 1, 1, v68);
    v73 = v312;
  }
  else
  {
    sub_23F618104();
    v73 = v312;
    (*(void (**)(char *, uint64_t))(v312 + 8))(v64, v70);
    if (sub_23F36195C((uint64_t)v67, 1, v68) != 1)
    {
      v93 = v291;
      v94 = v290;
      (*(void (**)(char *, char *, uint64_t))(v291 + 32))(v290, v67, v68);
      v95 = (uint64_t)v292;
      sub_23F61AB70();
      v96 = sub_23F61B5D8();
      if (sub_23F36195C(v95, 1, v96) == 1)
      {
        sub_23F3625D8(v95, &qword_256E70238);
      }
      else
      {
        sub_23F61B530();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 8))(v95, v96);
      }
      v126 = v326;
      v92 = (uint64_t *)sub_23F617ED0();
      v128 = v127;
      swift_bridgeObjectRelease();
      v324 = &unk_250FDF9A0;
      v325 = sub_23F59EC28();
      v321 = (uint64_t)v92;
      v322 = v128;
      sub_23F617BA0();
      v129 = sub_23F59E4B4(&v321);
      v326 = v126;
      if (!v126)
        v92 = (uint64_t *)v129;
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v68);
      return (uint64_t)v92;
    }
  }
  sub_23F3625D8((uint64_t)v67, &qword_256E71CF8);
  v74 = v308;
  v75 = v315;
  sub_23F61AB4C();
  v76 = v310;
  sub_23F61A4F8();
  v318(v74, v319);
  v77 = (uint64_t)v309;
  sub_23F61AC9C();
  v71(v76, v45);
  if (sub_23F36195C(v77, 1, v70) == 1)
  {
    sub_23F3625D8(v77, &qword_256E6FB18);
    v78 = v316;
    v79 = v317;
    v80 = (uint64_t)v311;
    goto LABEL_12;
  }
  v81 = v307;
  v82 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 32))(v307, v77, v70);
  v83 = MEMORY[0x24266B5F0](v82);
  swift_bridgeObjectRelease();
  v84 = v73;
  v78 = v316;
  v85 = v317;
  v80 = (uint64_t)v311;
  if (!v83)
  {
    (*(void (**)(char *, uint64_t))(v84 + 8))(v81, v70);
    v79 = v85;
LABEL_12:
    v97 = v304;
    sub_23F61AB4C();
    v98 = v305;
    sub_23F61A4F8();
    v318(v97, v319);
    sub_23F61AC78();
    v71(v98, v72);
    v99 = *(void (**)(_QWORD, _QWORD, _QWORD))(v78 + 16);
    v100 = v306;
    v101 = v320;
    v99(v306, v79, v320);
    v102 = (*(uint64_t (**)(char *, uint64_t))(v78 + 88))(v100, v101);
    v103 = v78;
    if (v102 == *MEMORY[0x24BE53328])
    {
      (*(void (**)(char *, uint64_t))(v78 + 96))(v100, v320);
      v104 = v299;
      (*(void (**)(char *, char *, uint64_t))(v303 + 32))(v302, v100, v299);
      v105 = v295;
      sub_23F617DA4();
      v106 = v296;
      v107 = v297;
      if ((*(unsigned int (**)(char *, uint64_t))(v296 + 88))(v105, v297) == *MEMORY[0x24BEB9A00])
      {
        (*(void (**)(char *, uint64_t))(v106 + 96))(v105, v107);
        v108 = swift_projectBox();
        v109 = v281;
        v110 = *(void (**)(_QWORD, _QWORD, _QWORD))(v281 + 16);
        v111 = v283;
        v112 = v284;
        v110(v283, v108, v284);
        swift_release();
        v113 = v282;
        v110(v282, v111, v112);
        v114 = (*(uint64_t (**)(char *, uint64_t))(v109 + 88))(v113, v112);
        v115 = *(void (**)(_QWORD, _QWORD))(v109 + 8);
        v116 = v298;
        if (v114 == *MEMORY[0x24BEB9940])
        {
          v117 = v317;
          v115(v113, v112);
          v92 = (uint64_t *)sub_23F61BFEC();
          sub_23F5DFC90((uint64_t)v92);
          v119 = v118;
          swift_bridgeObjectRelease();
          v115(v111, v112);
          v120 = v302;
          goto LABEL_56;
        }
        v115(v111, v112);
        v115(v113, v112);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v107);
        v116 = v298;
      }
      v135 = (uint64_t)v285;
      sub_23F61AB70();
      v136 = sub_23F61B5D8();
      if (sub_23F36195C(v135, 1, v136) == 1)
      {
        sub_23F3625D8(v135, &qword_256E70238);
        v92 = 0;
      }
      else
      {
        sub_23F61B560();
        v92 = v137;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 8))(v135, v136);
      }
      v138 = v300;
      v139 = v286;
      (*(void (**)(char *, uint64_t, uint64_t))(v300 + 16))(v286, v75, v116);
      if (v92)
      {
        (*(void (**)(char *, uint64_t))(v138 + 8))(v139, v116);
        v120 = v302;
      }
      else
      {
        v140 = (uint64_t)v277;
        sub_23F61AB7C();
        v141 = sub_23F61BD28();
        v142 = sub_23F36195C(v140, 1, v141);
        v120 = v302;
        if (v142 == 1)
        {
          (*(void (**)(char *, uint64_t))(v300 + 8))(v139, v116);
          sub_23F3625D8(v140, &qword_256E7BAD8);
          v92 = (uint64_t *)0xEB0000000065756CLL;
        }
        else
        {
          sub_23F61BD1C();
          v158 = v116;
          v159 = v104;
          v160 = v140;
          v92 = v161;
          (*(void (**)(char *, uint64_t))(v300 + 8))(v139, v158);
          v162 = v160;
          v104 = v159;
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 8))(v162, v141);
        }
      }
      v117 = v317;
      v163 = v326;
      sub_23F5DF24C();
      v326 = v163;
      if (v163)
      {
LABEL_58:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v303 + 8))(v120, v104);
        (*(void (**)(char *, uint64_t))(v316 + 8))(v117, v320);
        return (uint64_t)v92;
      }
      v119 = v164;
      swift_bridgeObjectRelease();
      if (!v119)
      {
        v92 = (uint64_t *)sub_23F61BFEC();
        sub_23F5DFC90((uint64_t)v92);
        v119 = v165;
        swift_bridgeObjectRelease();
      }
LABEL_56:
      v324 = &unk_250FDFB40;
      v325 = sub_23F59E9FC();
      v321 = v119;
      sub_23F617BA0();
      v166 = v326;
      v167 = sub_23F59E4B4(&v321);
      v326 = v166;
      if (!v166)
      {
        v92 = (uint64_t *)v167;
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v303 + 8))(v120, v104);
        (*(void (**)(char *, uint64_t))(v316 + 8))(v117, v320);
        return (uint64_t)v92;
      }
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
      goto LABEL_58;
    }
    if (v102 == *MEMORY[0x24BE532D8])
    {
      (*(void (**)(char *, uint64_t))(v78 + 96))(v100, v320);
      v121 = v280;
      (*(void (**)(char *, char *, uint64_t))(v293 + 32))(v294, v100, v280);
      v122 = (uint64_t)v278;
      sub_23F61AB70();
      v123 = sub_23F61B5D8();
      if (sub_23F36195C(v122, 1, v123) == 1)
      {
        sub_23F3625D8(v122, &qword_256E70238);
        v92 = (uint64_t *)MEMORY[0x24BEE4AF8];
      }
      else
      {
        v143 = sub_23F61B530();
        v144 = v122;
        v92 = (uint64_t *)v143;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 8))(v144, v123);
      }
      v145 = (uint64_t)v279;
      sub_23F61AB88();
      v146 = (uint64_t)v294;
      v147 = v326;
      v148 = sub_23F5DE644(v145, (uint64_t)v92, v301);
      v326 = v147;
      if (v147)
      {
        swift_bridgeObjectRelease();
        sub_23F3625D8(v145, &qword_256E70230);
LABEL_49:
        v154 = &v325;
LABEL_50:
        v155 = *(void (**)(_QWORD, _QWORD))(*(v154 - 32) + 8);
        v156 = (char *)v146;
        v157 = v121;
LABEL_51:
        v155(v156, v157);
        (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v320);
        return (uint64_t)v92;
      }
      v151 = v148;
      sub_23F3625D8(v145, &qword_256E70230);
      swift_bridgeObjectRelease();
      v324 = &unk_250FDF9C8;
      v325 = sub_23F59EBEC();
      v321 = v151;
      sub_23F617BA0();
      v152 = v326;
      v153 = sub_23F59E4B4(&v321);
      v326 = v152;
      if (v152)
      {
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
        swift_bridgeObjectRelease();
        goto LABEL_49;
      }
      v92 = (uint64_t *)v153;
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
      swift_bridgeObjectRelease();
      v176 = &v325;
      goto LABEL_64;
    }
    if (v102 == *MEMORY[0x24BE532E0])
    {
      v124 = *(void (**)(_QWORD, _QWORD))(v78 + 8);
      v125 = v320;
      v124(v79, v320);
      v124(v100, v125);
      return 32123;
    }
    if (v102 == *MEMORY[0x24BE532E8])
    {
      (*(void (**)(char *, uint64_t))(v78 + 96))(v100, v320);
      (*(void (**)(char *, char *, uint64_t))(v274 + 32))(v276, v100, v275);
      v149 = (uint64_t)v273;
      sub_23F61AB70();
      v150 = sub_23F61B5D8();
      if (sub_23F36195C(v149, 1, v150) == 1)
      {
        sub_23F3625D8(v149, &qword_256E70238);
      }
      else
      {
        sub_23F61B530();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 8))(v149, v150);
      }
      v177 = v276;
      v178 = sub_23F5DED10();
      v180 = v179;
      swift_bridgeObjectRelease();
      v92 = &qword_256E7CF10;
      v324 = (void *)sub_23F35D2E8(&qword_256E7CF10);
      v325 = sub_23F59EB4C(&qword_256E7CF18, &qword_256E7CF10, (uint64_t (*)(void))sub_23F59EB10);
      v321 = v178;
      v322 = v180;
      sub_23F617BA0();
      v181 = v326;
      v182 = sub_23F59E4B4(&v321);
      v326 = v181;
      if (!v181)
      {
        v92 = (uint64_t *)v182;
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v274 + 8))(v177, v275);
        goto LABEL_72;
      }
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
      swift_bridgeObjectRelease();
      v155 = *(void (**)(_QWORD, _QWORD))(v274 + 8);
      v156 = v177;
      v183 = &v307;
LABEL_91:
      v157 = (uint64_t)*(v183 - 32);
      goto LABEL_51;
    }
    if (v102 == *MEMORY[0x24BE53300])
    {
      (*(void (**)(char *, uint64_t))(v78 + 96))(v100, v320);
      v121 = v270;
      (*(void (**)(char *, char *, uint64_t))(v271 + 32))(v272, v100, v270);
      v168 = (uint64_t)v269;
      sub_23F61AB70();
      v169 = sub_23F61B5D8();
      if (sub_23F36195C(v168, 1, v169) == 1)
      {
        sub_23F3625D8(v168, &qword_256E70238);
        v92 = (uint64_t *)MEMORY[0x24BEE4AF8];
      }
      else
      {
        v188 = sub_23F61B530();
        v189 = v168;
        v92 = (uint64_t *)v188;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 8))(v189, v169);
      }
      v146 = (uint64_t)v272;
      v190 = v326;
      sub_23F5DE74C((uint64_t)v92, v301, v170, v171, v172, v173, v174, v175, v251, v252, v253, v254, v255, v256, v257, v258, v259, v260, v261,
        v262);
      v326 = v190;
      if (v190)
        goto LABEL_81;
      v197 = v191;
      swift_bridgeObjectRelease();
      v92 = &qword_256E7CF28;
      v324 = (void *)sub_23F35D2E8(&qword_256E7CF28);
      v325 = sub_23F59EB4C(&qword_256E7CF30, &qword_256E7CF28, (uint64_t (*)(void))sub_23F59EBB0);
      v321 = v197;
      sub_23F617BA0();
      v198 = v326;
      v199 = sub_23F59E4B4(&v321);
      v326 = v198;
      if (v198)
      {
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
LABEL_81:
        swift_bridgeObjectRelease();
        v154 = (unint64_t *)&v303;
        goto LABEL_50;
      }
      v92 = (uint64_t *)v199;
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
      swift_bridgeObjectRelease();
      v176 = (unint64_t *)&v303;
LABEL_64:
      (*(void (**)(uint64_t, uint64_t))(*(v176 - 32) + 8))(v146, v121);
LABEL_72:
      (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v320);
      return (uint64_t)v92;
    }
    if (v102 == *MEMORY[0x24BE53308])
    {
      (*(void (**)(char *, uint64_t))(v78 + 96))(v100, v320);
      v184 = v266;
      (*(void (**)(char *, char *, uint64_t))(v267 + 32))(v266, v100, v268);
      v185 = (uint64_t)v265;
      sub_23F61AB70();
      v186 = sub_23F61B5D8();
      if (sub_23F36195C(v185, 1, v186) == 1)
      {
        sub_23F3625D8(v185, &qword_256E70238);
        v92 = (uint64_t *)MEMORY[0x24BEE4AF8];
      }
      else
      {
        v200 = sub_23F61B530();
        v201 = v185;
        v92 = (uint64_t *)v200;
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v186 - 8) + 8))(v201, v186);
      }
      v202 = v326;
      v203 = sub_23F5DED24();
      v326 = v202;
      if (v202)
      {
        swift_bridgeObjectRelease();
        v155 = *(void (**)(_QWORD, _QWORD))(v267 + 8);
        v156 = v184;
      }
      else
      {
        v208 = v203;
        v209 = v204;
        v210 = v205;
        swift_bridgeObjectRelease();
        v92 = &qword_256E7CEF8;
        v324 = (void *)sub_23F35D2E8(&qword_256E7CEF8);
        v211 = sub_23F59EB4C(&qword_256E7CF00, &qword_256E7CEF8, (uint64_t (*)(void))sub_23F59EA74);
        v321 = v208;
        v322 = v209;
        v325 = v211;
        v323 = v210;
        sub_23F59EAB0(v208, v209);
        v212 = v326;
        v213 = sub_23F59E4B4(&v321);
        v326 = v212;
        if (!v212)
        {
          v92 = (uint64_t *)v213;
          _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
          sub_23F59EAE0(v208, v209);
          (*(void (**)(char *, uint64_t))(v267 + 8))(v266, v268);
          goto LABEL_72;
        }
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
        sub_23F59EAE0(v208, v209);
        v155 = *(void (**)(_QWORD, _QWORD))(v267 + 8);
        v156 = v266;
      }
      v183 = (char **)&v300;
      goto LABEL_91;
    }
    if (v102 == *MEMORY[0x24BE532F0])
    {
LABEL_78:
      type metadata accessor for ResponseGenerationPromptBuilderError();
      sub_23F59F330(&qword_256E7CEA0, (uint64_t)&unk_23F62F3B4);
      v192 = swift_allocError();
      v194 = v193;
      v195 = v320;
      v99(v193, v79, v320);
      v196 = sub_23F35D2E8(&qword_256E7CEA8);
      sub_23F36196C(v194, 0, 2, v196);
      v326 = v192;
      swift_willThrow();
      v92 = *(uint64_t **)(v78 + 8);
      ((void (*)(char *, uint64_t))v92)(v79, v195);
      ((void (*)(char *, uint64_t))v92)(v100, v195);
      return (uint64_t)v92;
    }
    if (v102 == *MEMORY[0x24BE53310])
    {
      (*(void (**)(char *, uint64_t))(v78 + 96))(v100, v320);
      v121 = v262;
      (*(void (**)(char *, char *, uint64_t))(v263 + 32))(v264, v100, v262);
      v206 = v261;
      sub_23F61AB70();
      v207 = sub_23F61B5D8();
      if (sub_23F36195C(v206, 1, v207) == 1)
      {
        sub_23F3625D8(v206, &qword_256E70238);
      }
      else
      {
        sub_23F61B530();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v207 - 8) + 8))(v206, v207);
      }
      v146 = (uint64_t)v264;
      v225 = sub_23F5DF544();
      v227 = v226;
      swift_bridgeObjectRelease();
      v92 = &qword_256E7CEB8;
      v324 = (void *)sub_23F35D2E8(&qword_256E7CEB8);
      v325 = sub_23F59EB4C(&qword_256E7CEC0, &qword_256E7CEB8, (uint64_t (*)(void))sub_23F59E984);
      v321 = v225;
      v322 = v227;
      sub_23F617BA0();
      v228 = v326;
      v229 = sub_23F59E4B4(&v321);
      v326 = v228;
      if (v228)
      {
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
        swift_bridgeObjectRelease();
        v154 = (unint64_t *)&v295;
        goto LABEL_50;
      }
      v92 = (uint64_t *)v229;
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
      swift_bridgeObjectRelease();
      v176 = (unint64_t *)&v295;
      goto LABEL_64;
    }
    if (v102 == *MEMORY[0x24BE532D0])
    {
      (*(void (**)(char *, uint64_t))(v78 + 96))(v100, v320);
      v214 = v100;
      v215 = v260;
      v216 = v258;
      (*(void (**)(uint64_t, char *, uint64_t))(v260 + 32))(v80, v214, v258);
      v217 = sub_23F4161F0(v80);
      if (v217 == 24)
      {
        type metadata accessor for ResponseGenerationPromptBuilderError();
        sub_23F59F330(&qword_256E7CEA0, (uint64_t)&unk_23F62F3B4);
        v218 = swift_allocError();
        v92 = v219;
        v220 = v219;
        v221 = v79;
        v222 = v79;
        v223 = v320;
        v99(v220, v221, v320);
        v224 = sub_23F35D2E8(&qword_256E7CEA8);
        sub_23F36196C((uint64_t)v92, 0, 2, v224);
        v326 = v218;
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v80, v216);
        (*(void (**)(char *, uint64_t))(v103 + 8))(v222, v223);
        return (uint64_t)v92;
      }
      v92 = (uint64_t *)sub_23F41674C(v217);
      v233 = v232;
      v324 = &unk_250FDFBC0;
      v325 = sub_23F59E9C0();
      v321 = (uint64_t)v92;
      v322 = v233;
      sub_23F617BA0();
      v234 = v326;
      v235 = sub_23F59E4B4(&v321);
      v326 = v234;
      if (v234)
      {
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
        (*(void (**)(char *, uint64_t))(v260 + 8))(v311, v216);
LABEL_110:
        (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v320);
        goto LABEL_29;
      }
      v92 = (uint64_t *)v235;
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
      (*(void (**)(char *, uint64_t))(v260 + 8))(v311, v216);
    }
    else
    {
      if (v102 == *MEMORY[0x24BE532F8])
      {
        (*(void (**)(char *, uint64_t))(v78 + 96))(v100, v320);
        v121 = v256;
        (*(void (**)(uint64_t, char *, uint64_t))(v257 + 32))(v259, v100, v256);
        v230 = v255;
        sub_23F61AB70();
        v231 = sub_23F61B5D8();
        if (sub_23F36195C(v230, 1, v231) == 1)
        {
          sub_23F3625D8(v230, &qword_256E70238);
          v92 = (uint64_t *)MEMORY[0x24BEE4AF8];
        }
        else
        {
          v92 = (uint64_t *)sub_23F61B530();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v231 - 8) + 8))(v230, v231);
        }
        v146 = v259;
        v242 = v326;
        sub_23F5DF124();
        v326 = v242;
        if (!v242)
        {
          v244 = v243;
          swift_bridgeObjectRelease();
          v92 = &qword_256E7CEE0;
          v324 = (void *)sub_23F35D2E8(&qword_256E7CEE0);
          v325 = sub_23F59EB4C(&qword_256E7CEE8, &qword_256E7CEE0, (uint64_t (*)(void))sub_23F59EA38);
          v321 = v244;
          sub_23F617BA0();
          v245 = v326;
          v246 = sub_23F59E4B4(&v321);
          v326 = v245;
          if (!v245)
          {
            v92 = (uint64_t *)v246;
            _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
            swift_bridgeObjectRelease();
            v176 = (unint64_t *)&v289;
            goto LABEL_64;
          }
          _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
        }
        swift_bridgeObjectRelease();
        v154 = (unint64_t *)&v289;
        goto LABEL_50;
      }
      if (v102 != *MEMORY[0x24BE53320])
        goto LABEL_78;
      (*(void (**)(char *, uint64_t))(v78 + 96))(v100, v320);
      v236 = v252;
      (*(void (**)(uint64_t, char *, uint64_t))(v254 + 32))(v253, v100, v252);
      v237 = sub_23F5DF4B8();
      if (!v238)
      {
        type metadata accessor for ResponseGenerationPromptBuilderError();
        sub_23F59F330(&qword_256E7CEA0, (uint64_t)&unk_23F62F3B4);
        v247 = swift_allocError();
        v92 = v248;
        v249 = v320;
        v99(v248, v79, v320);
        v250 = sub_23F35D2E8(&qword_256E7CEA8);
        sub_23F36196C((uint64_t)v92, 0, 2, v250);
        v326 = v247;
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v254 + 8))(v253, v236);
        (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v249);
        return (uint64_t)v92;
      }
      v92 = (uint64_t *)v237;
      v239 = v238;
      v324 = &unk_250FDFBC0;
      v325 = sub_23F59E9C0();
      v321 = (uint64_t)v92;
      v322 = v239;
      sub_23F617BA0();
      v240 = v326;
      v241 = sub_23F59E4B4(&v321);
      v326 = v240;
      if (v240)
      {
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
        (*(void (**)(uint64_t, uint64_t))(v254 + 8))(v253, v236);
        goto LABEL_110;
      }
      v92 = (uint64_t *)v241;
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
      (*(void (**)(uint64_t, uint64_t))(v254 + 8))(v253, v236);
    }
    (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v320);
    swift_bridgeObjectRelease();
    return (uint64_t)v92;
  }
  v86 = v84;
  v87 = v70;
  v88 = (uint64_t)v289;
  sub_23F61AB70();
  v89 = sub_23F61B5D8();
  v90 = sub_23F36195C(v88, 1, v89);
  v91 = v326;
  if (v90 == 1)
  {
    sub_23F3625D8(v88, &qword_256E70238);
    v92 = (uint64_t *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    v92 = (uint64_t *)sub_23F61B530();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 8))(v88, v89);
  }
  v130 = v307;
  sub_23F5DDDA8();
  v326 = v91;
  if (v91)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v130, v87);
LABEL_29:
    swift_bridgeObjectRelease();
    return (uint64_t)v92;
  }
  v132 = v131;
  swift_bridgeObjectRelease();
  v324 = &unk_250FDFB40;
  v325 = sub_23F59E9FC();
  v321 = v132;
  sub_23F617BA0();
  v133 = v326;
  v134 = sub_23F59E4B4(&v321);
  v326 = v133;
  if (!v133)
    v92 = (uint64_t *)v134;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v321);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v130, v87);
  return (uint64_t)v92;
}

void sub_23F59E174(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void sub_23F59E180(uint64_t a1, uint64_t a2)
{
  sub_23F598CB8(a1, a2);
}

void sub_23F59E194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for ResponseGenerationPromptBuilderError();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F362838();
  sub_23F3663D4(v1, v0, v3);
  v4 = sub_23F35D2E8(&qword_256E7CEA8);
  if (!sub_23F36195C(v0, 2, v4))
  {
    v5 = sub_23F618134();
    sub_23F362B6C(v5);
  }
  sub_23F362928();
}

uint64_t sub_23F59E224(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  void (*v20)(uint64_t, uint64_t);

  v5 = sub_23F618134();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  v9 = v8 - v7;
  type metadata accessor for ResponseGenerationPromptBuilderError();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F38F964();
  v13 = v12 - v11;
  sub_23F35D2E8(&qword_256E7CFF0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F362838();
  v16 = v2 + *(int *)(v15 + 48);
  sub_23F3663D4(a1, v2, (uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationPromptBuilderError);
  sub_23F3663D4(a2, v16, (uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationPromptBuilderError);
  v17 = sub_23F35D2E8(&qword_256E7CEA8);
  v18 = sub_23F36195C(v2, 2, v17);
  if (!v18)
  {
    sub_23F3663D4(v2, v13, (uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationPromptBuilderError);
    if (!sub_23F59F3A8())
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v9, v16, v5);
      v19 = sub_23F618128();
      v20 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v20(v9, v5);
      v20(v13, v5);
      sub_23F3663AC(v2, (uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationPromptBuilderError);
      return v19 & 1;
    }
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
    goto LABEL_9;
  }
  if (v18 == 1)
  {
    if (sub_23F59F3A8() != 1)
      goto LABEL_9;
  }
  else if (sub_23F59F3A8() != 2)
  {
LABEL_9:
    sub_23F3625D8(v2, &qword_256E7CFF0);
    v19 = 0;
    return v19 & 1;
  }
  sub_23F3663AC(v2, (uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationPromptBuilderError);
  v19 = 1;
  return v19 & 1;
}

uint64_t sub_23F59E408()
{
  sub_23F59F330(&qword_256E7CFE0, (uint64_t)&unk_23F62F28C);
  return sub_23F61CCAC();
}

uint64_t sub_23F59E440()
{
  sub_23F59F330(&qword_256E7CFE0, (uint64_t)&unk_23F62F28C);
  return sub_23F61CCA0();
}

uint64_t sub_23F59E478()
{
  uint64_t v0;

  v0 = qword_256E7CE80;
  sub_23F617BA0();
  return v0;
}

uint64_t sub_23F59E4B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F61C148();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F362838();
  sub_23F616AE4();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  sub_23F616B2C();
  swift_allocObject();
  sub_23F616B20();
  sub_23F616AD8();
  sub_23F616AF0();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F616B14();
  if (!v2)
  {
    sub_23F61C13C();
    v6 = sub_23F61C124();
    if (v7)
    {
      v1 = v6;
      sub_23F59F3B8();
      swift_release();
      return v1;
    }
    sub_23F59E760();
    swift_allocError();
    swift_willThrow();
    sub_23F59F3B8();
  }
  swift_release();
  return v1;
}

uint64_t sub_23F59E600()
{
  sub_23F59F36C();
  return sub_23F61CCAC();
}

uint64_t sub_23F59E628()
{
  sub_23F59F36C();
  return sub_23F61CCA0();
}

uint64_t sub_23F59E650()
{
  uint64_t v0;

  v0 = qword_256E7CE90;
  sub_23F617BA0();
  return v0;
}

uint64_t sub_23F59E684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F59E6CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256E74F80;
  if (!qword_256E74F80)
  {
    v1 = sub_23F35EB74(&qword_256E74F78);
    v2[0] = MEMORY[0x24BEE0D08];
    v2[1] = MEMORY[0x24BEE0D08];
    result = MEMORY[0x242670A44](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256E74F80);
  }
  return result;
}

uint64_t type metadata accessor for ResponseGenerationPromptBuilderError()
{
  uint64_t result;

  result = qword_256E7CFC8;
  if (!qword_256E7CFC8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23F59E760()
{
  unint64_t result;

  result = qword_256E7CEB0;
  if (!qword_256E7CEB0)
  {
    result = MEMORY[0x242670A44](&unk_23F62F374, &type metadata for JSONStringEncoder.JSONStringEncoderError);
    atomic_store(result, (unint64_t *)&qword_256E7CEB0);
  }
  return result;
}

uint64_t sub_23F59E79C(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  char v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return swift_bridgeObjectRelease();
  sub_23F617BA0();
  for (i = (uint64_t *)(a1 + 56); ; i += 4)
  {
    v8 = *(i - 3);
    v7 = *(i - 2);
    v9 = *i;
    v29 = *(i - 1);
    v10 = (_QWORD *)*a3;
    sub_23F617BA0();
    sub_23F617BA0();
    v12 = sub_23F3754D4(v8, v7);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    if (__OFADD__(v13, v14))
      break;
    v15 = v11;
    if (v10[3] >= v13 + v14)
    {
      if ((a2 & 1) == 0)
      {
        sub_23F35D2E8(&qword_256E6FCB0);
        sub_23F61CA24();
      }
    }
    else
    {
      sub_23F514C04();
      v16 = sub_23F3754D4(v8, v7);
      if ((v15 & 1) != (v17 & 1))
        goto LABEL_18;
      v12 = v16;
    }
    v18 = (_QWORD *)*a3;
    if ((v15 & 1) != 0)
    {
      v19 = (uint64_t *)(v18[7] + 16 * v12);
      v21 = *v19;
      v20 = v19[1];
      sub_23F617BA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = (_QWORD *)(v18[7] + 16 * v12);
      swift_bridgeObjectRelease();
      *v22 = v21;
      v22[1] = v20;
    }
    else
    {
      v18[(v12 >> 6) + 8] |= 1 << v12;
      v23 = (uint64_t *)(v18[6] + 16 * v12);
      *v23 = v8;
      v23[1] = v7;
      v24 = (_QWORD *)(v18[7] + 16 * v12);
      *v24 = v29;
      v24[1] = v9;
      v25 = v18[2];
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        goto LABEL_17;
      v18[2] = v27;
    }
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

unint64_t sub_23F59E984()
{
  unint64_t result;

  result = qword_256E7CEC8;
  if (!qword_256E7CEC8)
  {
    result = MEMORY[0x242670A44](&unk_23F6312D4, &unk_250FDFC40);
    atomic_store(result, (unint64_t *)&qword_256E7CEC8);
  }
  return result;
}

unint64_t sub_23F59E9C0()
{
  unint64_t result;

  result = qword_256E7CED0;
  if (!qword_256E7CED0)
  {
    result = MEMORY[0x242670A44](&unk_23F6312AC, &unk_250FDFBC0);
    atomic_store(result, (unint64_t *)&qword_256E7CED0);
  }
  return result;
}

unint64_t sub_23F59E9FC()
{
  unint64_t result;

  result = qword_256E7CED8;
  if (!qword_256E7CED8)
  {
    result = MEMORY[0x242670A44](&unk_23F631284, &unk_250FDFB40);
    atomic_store(result, (unint64_t *)&qword_256E7CED8);
  }
  return result;
}

unint64_t sub_23F59EA38()
{
  unint64_t result;

  result = qword_256E7CEF0;
  if (!qword_256E7CEF0)
  {
    result = MEMORY[0x242670A44](&unk_23F63125C, &unk_250FDFB18);
    atomic_store(result, (unint64_t *)&qword_256E7CEF0);
  }
  return result;
}

unint64_t sub_23F59EA74()
{
  unint64_t result;

  result = qword_256E7CF08;
  if (!qword_256E7CF08)
  {
    result = MEMORY[0x242670A44](&unk_23F631234, &unk_250FDFAF0);
    atomic_store(result, (unint64_t *)&qword_256E7CF08);
  }
  return result;
}

uint64_t sub_23F59EAB0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_23F617BA0();
    return sub_23F617BA0();
  }
  return result;
}

uint64_t sub_23F59EAE0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23F59EB10()
{
  unint64_t result;

  result = qword_256E7CF20;
  if (!qword_256E7CF20)
  {
    result = MEMORY[0x242670A44](&unk_23F63120C, &unk_250FDFA70);
    atomic_store(result, (unint64_t *)&qword_256E7CF20);
  }
  return result;
}

uint64_t sub_23F59EB4C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = sub_23F35EB74(a2);
    v7 = a3();
    result = MEMORY[0x242670A44](MEMORY[0x24BEE4AA8], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23F59EBB0()
{
  unint64_t result;

  result = qword_256E7CF38;
  if (!qword_256E7CF38)
  {
    result = MEMORY[0x242670A44](&unk_23F6311E4, &unk_250FDF9F0);
    atomic_store(result, (unint64_t *)&qword_256E7CF38);
  }
  return result;
}

unint64_t sub_23F59EBEC()
{
  unint64_t result;

  result = qword_256E7CF40;
  if (!qword_256E7CF40)
  {
    result = MEMORY[0x242670A44](&unk_23F6311BC, &unk_250FDF9C8);
    atomic_store(result, (unint64_t *)&qword_256E7CF40);
  }
  return result;
}

unint64_t sub_23F59EC28()
{
  unint64_t result;

  result = qword_256E7CF48;
  if (!qword_256E7CF48)
  {
    result = MEMORY[0x242670A44](&unk_23F631194, &unk_250FDF9A0);
    atomic_store(result, (unint64_t *)&qword_256E7CF48);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JSONStringEncoder.JSONStringEncoderError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F59ECA4 + 4 * byte_23F62F18A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F59ECC4 + 4 * byte_23F62F18F[v4]))();
}

_BYTE *sub_23F59ECA4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F59ECC4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F59ECCC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F59ECD4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F59ECDC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F59ECE4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for JSONStringEncoder.JSONStringEncoderError()
{
  return &type metadata for JSONStringEncoder.JSONStringEncoderError;
}

uint64_t *sub_23F59ED00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_23F35D2E8(&qword_256E7CEA8);
    if (sub_23F36195C((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_23F618134();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      sub_23F36196C((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_23F59EDC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_23F35D2E8(&qword_256E7CEA8);
  result = sub_23F36195C(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_23F618134();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_23F59EE24(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23F35D2E8(&qword_256E7CEA8);
  if (sub_23F36195C((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_23F618134();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    sub_23F36196C((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

void *sub_23F59EEC4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = sub_23F35D2E8(&qword_256E7CEA8);
  v7 = sub_23F36195C((uint64_t)a1, 2, v6);
  v8 = sub_23F36195C((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      v11 = sub_23F618134();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(a1, a2, v11);
      return a1;
    }
    sub_23F3625D8((uint64_t)a1, &qword_256E7CEA8);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_23F618134();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  sub_23F36196C((uint64_t)a1, 0, 2, v6);
  return a1;
}

void *sub_23F59EFBC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23F35D2E8(&qword_256E7CEA8);
  if (sub_23F36195C((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_23F618134();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    sub_23F36196C((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

void *sub_23F59F05C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = sub_23F35D2E8(&qword_256E7CEA8);
  v7 = sub_23F36195C((uint64_t)a1, 2, v6);
  v8 = sub_23F36195C((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      v11 = sub_23F618134();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(a1, a2, v11);
      return a1;
    }
    sub_23F3625D8((uint64_t)a1, &qword_256E7CEA8);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_23F618134();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  sub_23F36196C((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t sub_23F59F154()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F59F160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_23F35D2E8(&qword_256E7CEA8);
  v5 = sub_23F36195C(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_23F59F1A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F59F1B4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_23F35D2E8(&qword_256E7CEA8);
  return sub_23F36196C(a1, v5, a3, v6);
}

uint64_t sub_23F59F204(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E7CEA8);
  return sub_23F36195C(a1, 2, v2);
}

uint64_t sub_23F59F238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E7CEA8);
  return sub_23F36196C(a1, a2, 2, v4);
}

uint64_t sub_23F59F274()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F618134();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_23F59F2C8()
{
  sub_23F59F330(&qword_256E7CEA0, (uint64_t)&unk_23F62F3B4);
}

unint64_t sub_23F59F2F4()
{
  unint64_t result;

  result = qword_256E7CFD8;
  if (!qword_256E7CFD8)
  {
    result = MEMORY[0x242670A44](&unk_23F62F34C, &type metadata for JSONStringEncoder.JSONStringEncoderError);
    atomic_store(result, (unint64_t *)&qword_256E7CFD8);
  }
  return result;
}

void sub_23F59F330(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for ResponseGenerationPromptBuilderError();
    atomic_store(MEMORY[0x242670A44](a2, v4), a1);
  }
  sub_23F362928();
}

unint64_t sub_23F59F36C()
{
  unint64_t result;

  result = qword_256E7CFE8;
  if (!qword_256E7CFE8)
  {
    result = MEMORY[0x242670A44](&unk_23F62F2CC, &type metadata for JSONStringEncoder.JSONStringEncoderError);
    atomic_store(result, (unint64_t *)&qword_256E7CFE8);
  }
  return result;
}

uint64_t sub_23F59F3A8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36195C(v0, 2, v1);
}

uint64_t sub_23F59F3B8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23F3F3D0C(v1, v0);
}

unint64_t sub_23F59F3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  unint64_t v7;
  uint64_t v9;

  v1 = v0;
  v2 = sub_23F618134();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x24BE53328])
  {
    v7 = 0x73736563637573;
  }
  else
  {
    v7 = 0xD000000000000013;
    if (v6 == *MEMORY[0x24BE532D8] || v6 == *MEMORY[0x24BE532E0])
    {
      v7 = 0xD000000000000012;
    }
    else if (v6 != *MEMORY[0x24BE532E8])
    {
      if (v6 == *MEMORY[0x24BE53300])
      {
        v7 = 0xD000000000000015;
      }
      else if (v6 == *MEMORY[0x24BE53308])
      {
        v7 = 0xD000000000000017;
      }
      else if (v6 != *MEMORY[0x24BE532F0])
      {
        if (v6 == *MEMORY[0x24BE53310])
        {
          v7 = 0xD00000000000001BLL;
        }
        else if (v6 == *MEMORY[0x24BE532D0])
        {
          v7 = 0xD000000000000011;
        }
        else if (v6 != *MEMORY[0x24BE532F8])
        {
          if (v6 == *MEMORY[0x24BE53320])
            v7 = 0x6572756C696166;
          else
            v7 = 0;
        }
      }
    }
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_23F59F614()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[0] = sub_23F618134();
  v0 = *(_QWORD *)(v17[0] - 8);
  MEMORY[0x24BDAC7A8](v17[0]);
  v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F61ACA8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F61A504();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E700E8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23F61E7E0;
  sub_23F61AB4C();
  sub_23F61A4F8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_23F61AC78();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v12 = sub_23F59F3C4();
  v14 = v13;
  (*(void (**)(char *, _QWORD))(v0 + 8))(v2, v17[0]);
  *(_QWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 40) = v14;
  v17[1] = v11;
  sub_23F35D2E8(&qword_256E70580);
  sub_23F3EC7C8();
  v15 = sub_23F61C088();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_23F59F7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void (*v7)(char *, unint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  void (*v19)(char *, unint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v0 = sub_23F61AB94();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F61AD98();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v20 = *(_QWORD *)(v1 + 72);
    v7 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    v18[1] = v4;
    v19 = v7;
    v8 = MEMORY[0x24BEE4AF8];
    do
    {
      v19(v3, v6, v0);
      v9 = sub_23F59F614();
      v11 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F376C88();
        v8 = v14;
      }
      v12 = *(_QWORD *)(v8 + 16);
      if (v12 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_23F376C88();
        v8 = v15;
      }
      *(_QWORD *)(v8 + 16) = v12 + 1;
      v13 = v8 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v11;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      v6 += v20;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    v21 = v8;
    sub_23F35D2E8(&qword_256E70580);
    sub_23F3EC7C8();
    v16 = sub_23F61C088();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v16;
}

uint64_t sub_23F59F99C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, _QWORD);
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, _QWORD);
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  void (*v98)(char *, unint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102[2];
  uint64_t v103;
  _QWORD v104[4];
  uint64_t v105;

  v2 = v1;
  v94 = sub_23F61ACA8();
  v93 = *(_QWORD *)(v94 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F36285C();
  v92 = v5;
  sub_23F35D2E8(&qword_256E6FB18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  sub_23F3B13F0(v7);
  v81 = sub_23F61ADB0();
  v83 = *(_QWORD *)(v81 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  sub_23F3B13F0(v9);
  v10 = sub_23F619E98();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3834D0();
  sub_23F39E564();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v76 - v14;
  MEMORY[0x24BDAC7A8](v13);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3B13F0((uint64_t)&v76 - v17);
  v18 = sub_23F61A504();
  v100 = *(_QWORD *)(v18 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F3B13F0((uint64_t)&v76 - v21);
  v22 = sub_23F61AB94();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = a1;
  v26 = sub_23F61AD98();
  v27 = *(_QWORD *)(v26 + 16);
  if (!v27)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return 1;
  }
  v77 = v15;
  v79 = v11;
  v78 = v10;
  v88 = v2;
  v87 = (_QWORD *)(v2 + 16);
  v28 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v85 = v26;
  v29 = v26 + v28;
  v30 = *(_QWORD *)(v23 + 72);
  v98 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
  v31 = v95;
  v96 = v22;
  v97 = v25;
  v99 = v23;
  while (1)
  {
    v98(v25, v29, v22);
    sub_23F61AB4C();
    v32 = v22;
    v22 = sub_23F61A4E0();
    v34 = v33;
    v35 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
    v35(v31, v18);
    if (!v34)
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v25, v32);
      v22 = v32;
      goto LABEL_12;
    }
    if ((sub_23F5A0220() & 1) != 0)
      break;
    v43 = v90;
    sub_23F61AB4C();
    v44 = v92;
    sub_23F61A4F8();
    v35(v43, v18);
    v45 = v91;
    sub_23F61AC9C();
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v44, v94);
    v25 = (char *)sub_23F61811C();
    if (sub_23F36195C(v45, 1, (uint64_t)v25) == 1)
    {
      sub_23F3CFCB0(v45, &qword_256E6FB18);
      v47 = v99;
LABEL_17:
      sub_23F5A0384();
      v53 = v86;
      sub_23F619124();
      sub_23F617BA0();
      v54 = sub_23F619E8C();
      v55 = sub_23F61C640();
      if (sub_23F3B1E8C(v55))
      {
        sub_23F366668();
        v105 = sub_23F5A0320();
        sub_23F5A039C(4.8149e-34);
        sub_23F5A03B0();
        sub_23F5A0330(v56);
        sub_23F5A03C0();
        sub_23F5A0378(&dword_23F35A000, v54, (os_log_type_t)v25, "'%s' does not adopt NLG API.");
        sub_23F57D854();
        sub_23F366530();
      }
      sub_23F4F2958();

      sub_23F424480();
      sub_23F5A0390(v53, v57);
      v58 = *(void (**)(char *, uint64_t))(v47 + 8);
LABEL_24:
      v69 = v97;
      goto LABEL_30;
    }
    v46 = MEMORY[0x24266B5F0]();
    (*(void (**)(uint64_t, char *))(*((_QWORD *)v25 - 1) + 8))(v45, v25);
    v47 = v99;
    if (!v46)
      goto LABEL_17;
    swift_bridgeObjectRelease();
    sub_23F5A0364();
    sub_23F362D18();
    v31 = v95;
LABEL_12:
    v29 += v30;
    if (!--v27)
      goto LABEL_13;
  }
  v36 = v88;
  sub_23F3E2B58(v22, v34, *(_QWORD *)(*(_QWORD *)(v88 + 56) + 16));
  if ((v37 & 1) != 0)
  {
    sub_23F5A0384();
    v49 = v84;
    sub_23F619124();
    sub_23F617BA0();
    v50 = sub_23F619E8C();
    v51 = sub_23F61C640();
    if (sub_23F3B1E8C(v51))
    {
      sub_23F366668();
      v105 = sub_23F5A0320();
      sub_23F5A039C(4.8149e-34);
      sub_23F5A03B0();
      sub_23F5A0330(v52);
      sub_23F5A03C0();
      sub_23F5A0378(&dword_23F35A000, v50, (os_log_type_t)v25, "'%s' is in the NLG denylist.");
      sub_23F57D854();
      sub_23F366530();
    }
    sub_23F4F2958();

    sub_23F424480();
    sub_23F5A0390(v49, v68);
    v58 = *(void (**)(char *, uint64_t))(v99 + 8);
    goto LABEL_24;
  }
  sub_23F362D18();
  v38 = *sub_23F35EA9C(v87, *(_QWORD *)(v36 + 40));
  v39 = sub_23F59F7D4();
  sub_23F3E2B58(v39, v40, *(_QWORD *)(v38 + 16));
  LOBYTE(v38) = v41;
  sub_23F362D18();
  v42 = v99;
  if ((v38 & 1) != 0)
  {
    sub_23F5A0364();
    goto LABEL_12;
  }
  sub_23F5A0384();
  sub_23F361418((uint64_t)v87, (uint64_t)v104);
  sub_23F35D2E8(&qword_256E7D0B0);
  sub_23F35D2E8(&qword_256E7D0B8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23F362678(v102, (uint64_t)&v105);
    v59 = v82;
    sub_23F619124();
    sub_23F361418((uint64_t)&v105, (uint64_t)v104);
    v60 = v83;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v80, v89, v81);
    v61 = sub_23F619E8C();
    v62 = sub_23F61C640();
    v63 = os_log_type_enabled(v61, v62);
    v64 = v78;
    if (v63)
    {
      sub_23F366668();
      v100 = sub_23F5A0320();
      *(_QWORD *)&v102[0] = v100;
      *(_DWORD *)v60 = 136315138;
      sub_23F35EA9C(v104, v104[3]);
      v65 = sub_23F59F7D4();
      sub_23F37AE00(v65, v66, (uint64_t *)v102);
      v101 = v67;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v104);
      sub_23F4270D0(*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8));
      sub_23F5A0378(&dword_23F35A000, v61, v62, "Request fingerprint: %s");
      swift_arrayDestroy();
      sub_23F366530();
    }

    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v104);
    sub_23F4270D0(*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8));
    v70 = v79;
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v59, v64);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v105);
  }
  else
  {
    v103 = 0;
    memset(v102, 0, sizeof(v102));
    sub_23F3CFCB0((uint64_t)v102, &qword_256E7D0C0);
    v64 = v78;
    v70 = v79;
  }
  v71 = v97;
  v72 = v77;
  sub_23F619124();
  v73 = sub_23F619E8C();
  v74 = sub_23F61C640();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = (uint8_t *)sub_23F366668();
    *(_WORD *)v75 = 0;
    _os_log_impl(&dword_23F35A000, v73, v74, "Invalid request to ResponseGeneration", v75, 2u);
    sub_23F366530();
  }

  (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v64);
  v58 = *(void (**)(char *, uint64_t))(v42 + 8);
  v69 = v71;
LABEL_30:
  v58(v69, v96);
  return 0;
}

uint64_t sub_23F5A0220()
{
  char v0;

  sub_23F440EE8();
  sub_23F440F24();
  if ((sub_23F5A034C() & 1) != 0)
    v0 = 1;
  else
    v0 = sub_23F5A034C();
  return v0 & 1;
}

uint64_t sub_23F5A02D4()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResponseGenerationInputValidator()
{
  return objc_opt_self();
}

uint64_t sub_23F5A0320()
{
  return swift_slowAlloc();
}

uint64_t sub_23F5A0330(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  return sub_23F61C790();
}

uint64_t sub_23F5A034C()
{
  return sub_23F61C070();
}

uint64_t sub_23F5A0364()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 248), *(_QWORD *)(v1 - 256));
}

void sub_23F5A0378(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_23F5A0384()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5A0390@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 400));
}

uint64_t sub_23F5A039C(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_23F617BA0();
}

void sub_23F5A03B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F37AE00(v1, v0, (uint64_t *)(v2 - 128));
}

uint64_t sub_23F5A03C0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F5A03CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_23F37BFC0();
    v3 = v15;
    v4 = a1 + 40;
    do
    {
      v5 = sub_23F61C34C();
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v12 = *(_QWORD *)(v15 + 16);
      if (v12 >= *(_QWORD *)(v15 + 24) >> 1)
        sub_23F37BFC0();
      v4 += 16;
      *(_QWORD *)(v15 + 16) = v12 + 1;
      v13 = (_QWORD *)(v15 + 32 * v12);
      v13[4] = v5;
      v13[5] = v7;
      v13[6] = v9;
      v13[7] = v11;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_23F5A04F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;
  _QWORD *v10;
  uint64_t i;
  uint64_t v12;
  BOOL v13;

  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return 0;
  sub_23F51BBD4();
  if (*(_QWORD *)(v7 + 32) == v4 && *(_QWORD *)(v7 + 40) == v3)
    return 1;
  result = sub_23F3C8510();
  if ((result & 1) != 0)
    return 1;
  if (v5 == 1)
    return 0;
  v10 = (_QWORD *)(a3 + 56);
  for (i = 1; ; ++i)
  {
    v12 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v13 = *(v10 - 1) == v4 && *v10 == v3;
    if (v13 || (sub_23F3C8510() & 1) != 0)
      return 1;
    result = 0;
    v10 += 2;
    if (v12 == v5)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_23F5A05A8()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F362ABC();
  if (*(_QWORD *)(v0 + 16))
  {
    v1 = v0;
    sub_23F617BA0();
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_23F5A07D8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 v3;
  uint64_t i;
  uint64_t v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v5 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v3 = v6;
    v6 = v6 || v5 == v2;
    if (v6)
      return v3;
  }
  __break(1u);
  return result;
}

uint64_t ResponseGenerationResponseValidator.__allocating_init(_:)(uint64_t a1)
{
  return sub_23F5A3C58(a1, (void (*)(uint64_t))ResponseGenerationResponseValidator.init(_:));
}

uint64_t ResponseValidationContext.init(input:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23F57B9D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_23F5A088C(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t result;
  BOOL v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = a1[2];
  if ((uint64_t)(v2 - v3) < 0)
    return 0;
  if (!v3)
    return 1;
  if (!v2)
  {
LABEL_34:
    __break(1u);
    return 1;
  }
  v4 = 0;
  v5 = a2 + 32;
  v6 = a1[6];
  v7 = a1[7];
  v8 = a1[4] >> 16;
  v9 = a1[5] >> 16;
  v10 = v2 == v3;
  v11 = (_QWORD *)(a2 + 88);
  v25 = a1 + 11;
  v26 = a2 + 32;
  v27 = v7;
  v28 = v6;
  while (1)
  {
    v12 = (_QWORD *)(v5 + 32 * v4);
    result = v12[2];
    v14 = result == v6 && v12[3] == v7;
    v15 = v8;
    v16 = v14 && *v12 >> 16 == v8;
    v17 = v9;
    if (v16 && v12[1] >> 16 == v9)
      break;
    result = sub_23F61CC10();
    if ((result & 1) != 0)
      break;
LABEL_32:
    if (v10)
      return 0;
    ++v4;
    v5 = v26;
    v10 = v4 == v2 - v3;
    v11 += 4;
    v7 = v27;
    v6 = v28;
    v8 = v15;
    v9 = v17;
    if (v4 == v2)
      goto LABEL_34;
  }
  if (v3 == 1)
    return 1;
  v19 = v25;
  v20 = v11;
  v21 = 1;
  while (v4 + v21 < v2)
  {
    result = *(v20 - 1);
    if (result != *(v19 - 1)
      || *v20 != *v19
      || *(v20 - 3) >> 16 != *(v19 - 3) >> 16
      || *(v20 - 2) >> 16 != *(v19 - 2) >> 16)
    {
      result = sub_23F61CC10();
      if ((result & 1) == 0)
        goto LABEL_32;
    }
    ++v21;
    v20 += 4;
    v19 += 4;
    if (v3 == v21)
      return 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_23F5A0A18()
{
  sub_23F5AB410();
  return sub_23F61CCAC();
}

uint64_t sub_23F5A0A40()
{
  sub_23F5AB410();
  return sub_23F61CCA0();
}

uint64_t sub_23F5A0A68()
{
  uint64_t v0;

  v0 = qword_256E7D0C8;
  sub_23F617BA0();
  return v0;
}

uint64_t ResponseValidationRuleResult.valid.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void ResponseValidationRuleResult.name.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void ResponseValidationRuleResult.message.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

uint64_t ResponseValidationResult.ruleResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  *(_BYTE *)a1 = *(_BYTE *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  sub_23F617BA0();
  return sub_23F617BA0();
}

uint64_t ResponseValidationResult.elapsedNanoseconds.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t Unsafe.name.getter()
{
  return sub_23F5A1A20();
}

void Unsafe.__allocating_init(_:)(uint64_t a1)
{
  sub_23F3F9C48();
  Unsafe.init(_:)(a1);
  sub_23F5AB984();
}

uint64_t Unsafe.init(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = sub_23F38F984();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = sub_23F4412AC();
  v7(v6);
  v8 = sub_23F61BFEC();
  type metadata accessor for Unsafe._ClientInfo(0);
  swift_allocObject();
  v9 = sub_23F5A1578(0xD000000000000019, 0x800000023F63B200, 0, 1, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime6Unsafe__clientInfo) = v9;
  return v2;
}

uint64_t Unsafe.validate(text:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v5 = sub_23F3B1728();
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 - 8);
  v4[11] = sub_23F366578();
  v4[12] = sub_23F598A5C();
  v4[13] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5A0CB4()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(void);

  if (qword_256E6F0B8 != -1)
    swift_once();
  v1 = sub_23F361498(v0[12], (uint64_t)qword_256E803F8);
  sub_23F3C08CC();
  sub_23F5ABB24();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F5ABC0C();
  sub_23F5ABB04();
  if ((_DWORD)v0 == -119)
  {
    v2 = (_QWORD *)swift_task_alloc();
    v0[14] = (uint64_t)v2;
    *v2 = v0;
    v2[1] = sub_23F5A0E00;
    return sub_23F5A0F20(v0[6], v0[7]);
  }
  else
  {
    sub_23F3F0F00();
    sub_23F619E8C();
    v4 = sub_23F507D60();
    if (sub_23F3F0E3C(v4))
    {
      v5 = (_WORD *)sub_23F366668();
      sub_23F3F0EF4(v5);
      sub_23F3F0DF0(&dword_23F35A000, v6, v7, "Rules based response validation skipped via default ResponseGenerationRules being set to false");
      sub_23F366530();
    }
    sub_23F5ABBE4();
    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_23F5ABBBC();
    v9[1] = v8 & 0xFFFF00000000FFFFLL | 0x656661730000;
    v9[2] = 0xE600000000000000;
    v9[3] = 0;
    v9[4] = 0;
    sub_23F5AB9C4();
    sub_23F362CC8();
    v10 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F435B58(v10);
  }
}

uint64_t sub_23F5A0E00(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *v2;
  v7 = *v2;
  v5 = *v2;
  sub_23F50746C(&v7);
  if (v1)
  {
    swift_task_dealloc();
    sub_23F3666DC();
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_BYTE *)(v4 + 121) = a1 & 1;
    sub_23F36679C();
    return swift_task_switch();
  }
}

uint64_t sub_23F5A0E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  if (*(_BYTE *)(v0 + 121) == 1)
  {
    v1 = *(_QWORD *)(v0 + 40);
    sub_23F5ABAA4();
    v6 = v2 & 0xFFFFFFFFFFFFLL | 0x203A000000000000;
    sub_23F61C280();
    *(_BYTE *)v1 = 0;
    *(_QWORD *)(v1 + 8) = 0x656661736E55;
    *(_QWORD *)(v1 + 16) = 0xE600000000000000;
    *(_QWORD *)(v1 + 24) = v6;
    *(_QWORD *)(v1 + 32) = 0xE800000000000000;
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 40);
    *(_BYTE *)v3 = 1;
    *(_QWORD *)(v3 + 8) = 0x656661736E55;
    *(_QWORD *)(v3 + 16) = 0xE600000000000000;
    *(_QWORD *)(v3 + 24) = 0;
    *(_QWORD *)(v3 + 32) = 0;
  }
  sub_23F5AB9C4();
  sub_23F362CC8();
  v4 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F496B4C(v4);
}

uint64_t sub_23F5A0F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v4 = sub_23F619E98();
  v3[11] = v4;
  v3[12] = *(_QWORD *)(v4 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v5 = sub_23F619DCC();
  v3[15] = v5;
  v3[16] = *(_QWORD *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v6 = sub_23F6170CC();
  v3[18] = v6;
  v3[19] = *(_QWORD *)(v6 - 8);
  v3[20] = swift_task_alloc();
  sub_23F617B94();
  v3[21] = swift_task_alloc();
  sub_23F617B28();
  v3[22] = swift_task_alloc();
  v7 = sub_23F617B4C();
  v3[23] = v7;
  v3[24] = *(_QWORD *)(v7 - 8);
  v3[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F5A104C()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_23F432AC4();
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[19] + 16))(v0[20], v0[10] + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime6Unsafe_locale, v0[18]);
  sub_23F35D2E8(&qword_256E7D870);
  sub_23F617B88();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_23F61EBC0;
  sub_23F617B64();
  sub_23F617B70();
  sub_23F617B7C();
  sub_23F617B58();
  sub_23F617B1C();
  sub_23F617B34();
  v1 = (_QWORD *)swift_task_alloc();
  v0[26] = v1;
  *v1 = v0;
  v1[1] = sub_23F5A1168;
  sub_23F5ABA6C();
  return sub_23F617B40();
}

uint64_t sub_23F5A1168(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[27] = a1;
  v4[28] = a2;
  v4[29] = v2;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5A11CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F432AC4();
  if (v10[27] != v10[8] || v10[28] != v10[9])
    sub_23F3C8510();
  sub_23F362984();
  (*(void (**)(_QWORD, _QWORD))(v10[24] + 8))(v10[25], v10[23]);
  sub_23F5AB934();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  swift_task_dealloc();
  sub_23F5ABA6C();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t sub_23F5A1268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  os_log_type_t v34;
  _WORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  sub_23F3D9A84();
  a27 = v29;
  a28 = v30;
  a26 = v28;
  v31 = *(void **)(v28 + 232);
  *(_QWORD *)(v28 + 40) = v31;
  v32 = v31;
  sub_23F35D2E8(&qword_256E70370);
  if ((swift_dynamicCast() & 1) != 0)
  {
    if ((*(unsigned int (**)(_QWORD, _QWORD))(*(_QWORD *)(v28 + 128) + 88))(*(_QWORD *)(v28 + 136), *(_QWORD *)(v28 + 120)) == *MEMORY[0x24BE3B488])
    {
      v33 = *(void **)(v28 + 112);

      sub_23F3F0F00();
      sub_23F619E8C();
      v34 = sub_23F3F0EEC();
      if (sub_23F3F0E3C(v34))
      {
        v35 = (_WORD *)sub_23F366668();
        sub_23F3F0EF4(v35);
        sub_23F3F0DF0(&dword_23F35A000, v36, v37, "Sanitizer threw GenerativeErrors.SanitizerError.sanitizerRejected");
        sub_23F366530();
      }
      v38 = *(_QWORD *)(v28 + 192);
      v39 = *(_QWORD *)(v28 + 128);
      a16 = *(_QWORD *)(v28 + 136);
      v40 = *(_QWORD *)(v28 + 112);
      v41 = *(_QWORD *)(v28 + 96);

      sub_23F3D98EC(v40, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
      sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
      sub_23F383D74(a16, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));

      goto LABEL_10;
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v28 + 128) + 8))(*(_QWORD *)(v28 + 136), *(_QWORD *)(v28 + 120));
  }

  sub_23F58E328();
  sub_23F366808();
  sub_23F366808();
  v42 = sub_23F496C44();
  v43 = sub_23F61C628();
  v44 = os_log_type_enabled(v42, v43);
  v46 = *(_QWORD *)(v28 + 192);
  v45 = *(_QWORD *)(v28 + 200);
  v47 = *(_QWORD *)(v28 + 184);
  v48 = *(_QWORD *)(v28 + 104);
  v49 = *(_QWORD *)(v28 + 88);
  if (v44)
  {
    v50 = (uint8_t *)swift_slowAlloc();
    a17 = sub_23F366668();
    *(_DWORD *)v50 = 136315138;
    swift_getErrorValue();
    v51 = sub_23F61CCB8();
    sub_23F37AE00(v51, v52, &a17);
    *(_QWORD *)(v28 + 56) = v53;
    sub_23F61C790();
    sub_23F362984();
    sub_23F41C618();
    sub_23F41C618();
    sub_23F38485C(&dword_23F35A000, v42, v43, "Sanitizer failed: %s", v50);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v54 = *(_QWORD *)(v28 + 96);

  sub_23F41C618();
  sub_23F41C618();
  sub_23F41C618();
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v48, v49);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
LABEL_10:
  sub_23F5AB934();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  swift_task_dealloc();
  sub_23F3D9BE4();
  return v56(v55, v56, v57, v58, v59, v60, v61, v62, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t Unsafe.model.getter()
{
  return swift_retain();
}

uint64_t sub_23F5A1578(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD v22[3];
  int v23;
  uint64_t v24;
  uint64_t v25;

  v6 = v5;
  v22[1] = a5;
  v24 = a3;
  v25 = a2;
  v23 = a4 & 1;
  v8 = sub_23F6179CC();
  MEMORY[0x24BDAC7A8](v8);
  v22[2] = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F617B10();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F35D2E8(&qword_256E7D878);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F35D2E8(&qword_256E74340);
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_23F617BC4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v25;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v20;
  sub_23F617BA0();
  sub_23F61BFEC();
  sub_23F617BB8();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v6+ OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime6UnsafeP33_A90434656D6BFE77F87FBA93378A99E611_ClientInfo_trackingConfig, v19, v16);
  sub_23F6179B4();
  sub_23F617438();
  sub_23F617450();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_23F61745C();
  sub_23F3612C0(&qword_256E74360, (uint64_t (*)(uint64_t))MEMORY[0x24BE68860], MEMORY[0x24BE68858]);
  sub_23F617444();
  sub_23F6179C0();
  sub_23F617B04();
  *(_QWORD *)(v6
            + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime6UnsafeP33_A90434656D6BFE77F87FBA93378A99E611_ClientInfo__model) = sub_23F61799C();
  return v6;
}

uint64_t sub_23F5A1818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0
     + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime6UnsafeP33_A90434656D6BFE77F87FBA93378A99E611_ClientInfo_trackingConfig;
  v2 = sub_23F617BC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t sub_23F5A1874()
{
  sub_23F5A1818();
  return swift_deallocClassInstance();
}

uint64_t sub_23F5A1894()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  sub_23F617BA0();
  return v1;
}

uint64_t sub_23F5A18C4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1
     + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime6UnsafeP33_A90434656D6BFE77F87FBA93378A99E611_ClientInfo_trackingConfig;
  swift_beginAccess();
  v4 = sub_23F617BC4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23F5A192C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1
     + OBJC_IVAR____TtCC30IntelligenceFlowPlannerRuntime6UnsafeP33_A90434656D6BFE77F87FBA93378A99E611_ClientInfo_trackingConfig;
  swift_beginAccess();
  v4 = sub_23F617BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_23F5A199C())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t sub_23F5A19E4()
{
  return swift_retain();
}

void Unsafe.deinit()
{
  sub_23F5A7B48();
}

uint64_t Unsafe.__deallocating_deinit()
{
  return sub_23F5A7B98();
}

uint64_t sub_23F5A1A20()
{
  return 0x656661736E55;
}

void sub_23F5A1A34(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  Unsafe.__allocating_init(_:)(a1);
  if (!v2)
    *a2 = v4;
}

uint64_t sub_23F5A1A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F362820;
  return Unsafe.validate(text:context:)(a1, a2, a3);
}

uint64_t Ungrounded.name.getter()
{
  return sub_23F5A3B50();
}

uint64_t Ungrounded.__allocating_init(_:)(uint64_t a1)
{
  return sub_23F5A3C58(a1, (void (*)(uint64_t))Ungrounded.init(_:));
}

void Ungrounded.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, uint64_t, uint64_t), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  BOOL v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  _BYTE *v58;
  _QWORD v59[3];
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  sub_23F362C98();
  a19 = v24;
  a20 = v25;
  v64 = v21;
  v26 = v20;
  v73 = v27;
  v62 = *v20;
  v28 = sub_23F38F984();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v71 = (uint64_t)v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v31 = sub_23F619E98();
  v32 = *(_QWORD *)(v31 - 8);
  v66 = v31;
  v67 = v32;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F36285C();
  v72 = v34;
  sub_23F39C56C();
  v69 = sub_23F6170B4();
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F362930();
  sub_23F35D2E8(&qword_256E71D18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F38F964();
  v39 = v38 - v37;
  v40 = (_QWORD *)((char *)v26 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_errorMessage);
  *v40 = 0;
  v40[1] = 0;
  v65 = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_stopWords;
  *(_QWORD *)((char *)v26 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_stopWords) = &unk_250FD1128;
  v41 = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_disambiguationAllowlist;
  *(_QWORD *)((char *)v26 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_disambiguationAllowlist) = &unk_250FD1158;
  v63 = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_binaryWords;
  *(_QWORD *)((char *)v26 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_binaryWords) = &unk_250FD1198;
  v42 = (char *)v26 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_locale;
  v70 = v29;
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  v68 = v28;
  v61 = v43;
  v43((uint64_t)v26 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_locale, v73, v28);
  sub_23F6170C0();
  sub_23F6170A8();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v69);
  v44 = sub_23F617048();
  if (sub_23F36195C(v39, 1, v44) == 1)
  {
    v59[2] = v26;
    v60 = (uint64_t)v42;
    v64 = v40;
    v69 = v41;
    sub_23F3625D8(v39, &qword_256E71D18);
    sub_23F619124();
    v45 = v73;
    v61(v71, v73, v68);
    v46 = sub_23F619E8C();
    v47 = sub_23F61C628();
    v48 = os_log_type_enabled(v46, v47);
    v49 = v67;
    if (v48)
    {
      v50 = (uint8_t *)sub_23F5AB8D4();
      v61 = (void (*)(uint64_t, uint64_t, uint64_t))sub_23F366668();
      a10 = v61;
      *(_DWORD *)v50 = 136315138;
      v59[1] = v50 + 4;
      sub_23F3612C0(qword_256E730D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEF0]);
      v51 = v71;
      v52 = sub_23F61CC1C();
      sub_23F37AE00(v52, v53, (uint64_t *)&a10);
      v74 = v54;
      sub_23F61C790();
      sub_23F362984();
      sub_23F510624(v51);
      sub_23F38485C(&dword_23F35A000, v46, v47, "Cannot extract language code from %s", v50);
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F510624(v71);

    sub_23F5ABB34(v72, *(uint64_t (**)(uint64_t, _QWORD))(v49 + 8));
    v57 = v60;
    sub_23F5AA140();
    sub_23F362D64();
    sub_23F5AB928(v58, 1);
    sub_23F510624(v45);
    sub_23F510624(v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_23F61703C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v39, v44);
    v55 = (void *)sub_23F61C0E8();
    swift_bridgeObjectRelease();
    v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDFD70]), sel_initWithUnit_, 0);
    *(_QWORD *)((char *)v26 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_tokenizer) = v56;
    objc_msgSend(v56, sel_setLanguage_, v55);

    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v73, v68);
  }
  sub_23F362870();
}

uint64_t Ungrounded.validate(text:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  v6 = sub_23F3B1728();
  v5[10] = v6;
  v5[11] = *(_QWORD *)(v6 - 8);
  v5[12] = sub_23F366578();
  v5[13] = sub_23F598A5C();
  v5[14] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5A1FA8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int16 v12;
  _QWORD *v13;
  uint64_t (*v14)(void);
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];

  v1 = (_QWORD *)(v0[9] + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_errorMessage);
  *v1 = 0;
  v1[1] = 0;
  swift_bridgeObjectRelease();
  if (qword_256E6F0B8 != -1)
    swift_once();
  sub_23F361498(v0[13], (uint64_t)qword_256E803F8);
  sub_23F3C08CC();
  sub_23F5ABB24();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F5ABC0C();
  sub_23F5ABB04();
  if ((_DWORD)v0 == -119)
  {
    v2 = *(_QWORD *)(sub_23F61AD98() + 16);
    swift_bridgeObjectRelease();
    if (v2)
    {
      v4 = v0[6];
      v3 = v0[7];
      v5 = sub_23F61AD98();
      v16 = sub_23F5A21E4(v4, v3, v5);
      sub_23F362D18();
      if ((v16 & 1) != 0)
      {
        v17 = v0[5];
        sub_23F61C8E0();
        swift_bridgeObjectRelease();
        strcpy((char *)v20, "Ungrounded: \"");
        HIWORD(v20[1]) = -4864;
        sub_23F61C280();
        sub_23F61C280();
        v18 = v20[0];
        v19 = v20[1];
        *(_BYTE *)v17 = 0;
        *(_QWORD *)(v17 + 8) = 0x646E756F72676E55;
        *(_QWORD *)(v17 + 16) = 0xEA00000000006465;
        *(_QWORD *)(v17 + 24) = v18;
        *(_QWORD *)(v17 + 32) = v19;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v6 = (void *)v0[12];
    sub_23F3F0F00();
    sub_23F619E8C();
    v7 = sub_23F507D60();
    if (sub_23F3F0E3C(v7))
    {
      v8 = (_WORD *)sub_23F366668();
      sub_23F3F0EF4(v8);
      sub_23F3F0DF0(&dword_23F35A000, v9, v10, "Validation skipped via default ResponseGenerationRules being set to false");
      sub_23F366530();
    }
    v11 = v0[11];

    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  }
  sub_23F5ABBBC();
  v13[1] = v12 | 0x646E756F72670000;
  v13[2] = 0xEA00000000006465;
  v13[3] = 0;
  v13[4] = 0;
LABEL_10:
  swift_task_dealloc();
  sub_23F362CC8();
  v14 = (uint64_t (*)(void))sub_23F384760();
  return v14();
}

uint64_t sub_23F5A21E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  int v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  _QWORD v61[2];
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  uint64_t *v73;
  int v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;

  v8 = sub_23F617DD4();
  v76 = *(_QWORD *)(v8 - 8);
  v77 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v75 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F61B92C();
  v81 = *(_QWORD *)(v10 - 8);
  v82 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v73 = (_QWORD *)((char *)v61 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v69 = (char *)v61 - v16;
  v68 = sub_23F6182F0();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v18 = (char *)v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_23F618350();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v62 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F618134();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v93 = (char *)v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F61ACA8();
  v91 = *(_QWORD *)(v23 - 8);
  v92 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v90 = (char *)v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23F61A504();
  v88 = *(_QWORD *)(v25 - 8);
  v89 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v87 = (char *)v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = v3;
  sub_23F5AA7FC(a1, a2, *(void **)(v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_tokenizer));
  v27 = sub_23F61C5F8();
  sub_23F617BA0();
  v28 = sub_23F5A03CC(v27);
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(a3 + 16);
  if (!v29)
  {
    LOBYTE(v39) = 0;
    goto LABEL_30;
  }
  v86 = v28;
  v30 = *(_QWORD *)(sub_23F61AB94() - 8);
  v31 = a3 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  v85 = *MEMORY[0x24BE53328];
  v74 = *MEMORY[0x24BE532D8];
  v72 = *MEMORY[0x24BE53300];
  v65 = *MEMORY[0x24BE53308];
  v71 = *MEMORY[0x24BEB9958];
  v70 = *MEMORY[0x24BEB9A00];
  v83 = *(_QWORD *)(v30 + 72);
  v61[1] = a3;
  sub_23F617BA0();
  v79 = v13;
  v66 = v18;
  v32 = v13;
  v33 = v20;
  v78 = v20;
  v80 = v21;
  while (1)
  {
    v34 = v87;
    sub_23F61AB4C();
    v35 = v90;
    sub_23F61A4F8();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v34, v89);
    v36 = v93;
    sub_23F61AC78();
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v35, v92);
    v38 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v36, v33);
    if (v38 == v85)
    {
      (*(void (**)(char *, uint64_t))(v21 + 96))(v36, v33);
      v40 = v75;
      v39 = v76;
      v41 = (uint64_t)v32;
      v42 = v77;
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v75, v37, v77);
      sub_23F617DA4();
      v43 = sub_23F5A2C48(v86, v41);
      if (v4)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v41, v82);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v42);
        goto LABEL_30;
      }
      v44 = v43;
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v41, v82);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v42);
      if ((v44 & 1) != 0)
        goto LABEL_23;
      v32 = v79;
      v21 = v80;
      goto LABEL_20;
    }
    if (v38 != v74)
      break;
    v45 = sub_23F61B8A8();
    v46 = swift_allocBox();
    *v47 = 0;
    v47[1] = 0xE000000000000000;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v47, v71, v45);
    v48 = (uint64_t)v73;
    *v73 = v46;
    v39 = v81;
    v49 = v82;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v81 + 104))(v48, v70, v82);
    v50 = sub_23F5A2C48(v86, v48);
    if (v4)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v48, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v93, v78);
      return v39 & 1;
    }
    v51 = v50;
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v48, v49);
    v21 = v80;
    (*(void (**)(char *, uint64_t))(v80 + 8))(v93, v78);
    if ((v51 & 1) != 0)
      goto LABEL_23;
    v33 = v78;
    v32 = v79;
LABEL_20:
    v31 += v83;
    if (!--v29)
    {
      LOBYTE(v39) = 0;
LABEL_24:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
  }
  if (v38 == v72)
  {
    (*(void (**)(char *, uint64_t))(v21 + 96))(v36, v33);
    v52 = v66;
    v39 = v67;
    v53 = v68;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v66, v37, v68);
    v54 = (uint64_t)v69;
    sub_23F6182E4();
    v55 = sub_23F5A2C48(v86, v54);
    if (v4)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v54, v82);
      goto LABEL_29;
    }
    v56 = v55;
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v54, v82);
    goto LABEL_17;
  }
  if (v38 != v65)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v36, v33);
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t))(v21 + 96))(v36, v33);
  v39 = v63;
  v52 = v62;
  v53 = v64;
  v57 = (*(uint64_t (**)(char *, char *, uint64_t))(v63 + 32))(v62, v37, v64);
  v58 = MEMORY[0x24266B854](v57);
  v59 = sub_23F5A2970(v86, v58);
  if (!v4)
  {
    v56 = v59;
    swift_bridgeObjectRelease();
LABEL_17:
    (*(void (**)(char *, uint64_t))(v39 + 8))(v52, v53);
    if ((v56 & 1) != 0)
    {
LABEL_23:
      LOBYTE(v39) = 1;
      goto LABEL_24;
    }
    v33 = v78;
    v21 = v80;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_29:
  (*(void (**)(char *, uint64_t))(v39 + 8))(v52, v53);
LABEL_30:
  swift_bridgeObjectRelease();
  return v39 & 1;
}

uint64_t sub_23F5A2970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  _QWORD *v16;
  char v17;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v5 = v2;
    v28 = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_disambiguationAllowlist;
    v25 = (_QWORD *)(v5 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_errorMessage);
    v7 = *(_QWORD *)(sub_23F61B92C() - 8);
    v30 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v29 = *(_QWORD *)(v7 + 72);
    sub_23F617BA0();
    v8 = 0;
    v26 = 0;
    while (1)
    {
      v9 = sub_23F5A2FF4(v30 + v29 * v8);
      if (v3)
      {
LABEL_32:
        swift_bridgeObjectRelease();
        v23 = v26;
        return v23 & 1;
      }
      v11 = v10;
      ++v8;
      if (v10)
        break;
LABEL_15:
      if (v8 == v4)
        goto LABEL_32;
    }
    v12 = v9;
    v13 = *(_QWORD **)(v5 + v28);
    v14 = v13[2];
    if (!v14)
      goto LABEL_12;
    v15 = v13[4] == v9 && v10 == v13[5];
    if (!v15 && (sub_23F61CC64() & 1) == 0)
    {
      if (v14 == 1)
        goto LABEL_12;
      if (v13[6] != v12 || v11 != v13[7])
      {
        result = sub_23F61CC64();
        if ((result & 1) == 0)
        {
          if (v14 != 2)
          {
            v20 = v13 + 9;
            v21 = 2;
            while (!__OFADD__(v21, 1))
            {
              if (*(v20 - 1) == v12 && v11 == *v20)
                goto LABEL_13;
              v24 = v21 + 1;
              result = sub_23F61CC64();
              if ((result & 1) != 0)
                goto LABEL_13;
              v20 += 2;
              ++v21;
              if (v24 == v14)
                goto LABEL_12;
            }
            __break(1u);
            return result;
          }
LABEL_12:
          sub_23F38813C();
          v16 = (_QWORD *)sub_23F61C808();
          v17 = sub_23F5A088C(v16, a1);
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
          {
            sub_23F61C8E0();
            sub_23F61C280();
            sub_23F61C280();
            swift_bridgeObjectRelease();
            sub_23F61C280();
            MEMORY[0x24266F8F8](a1, MEMORY[0x24BEE1E08]);
            sub_23F61C280();
            swift_bridgeObjectRelease();
            *v25 = 0;
            v25[1] = 0xE000000000000000;
            swift_bridgeObjectRelease();
            v26 = 1;
            goto LABEL_15;
          }
        }
      }
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v23 = 0;
  return v23 & 1;
}

uint64_t sub_23F5A2C48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  BOOL v29;
  _QWORD *v30;
  uint64_t v31;
  char v33;
  _QWORD v34[2];
  uint64_t *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v6 = sub_23F61B92C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F5A3948(a2);
  v11 = v10;
  v47 = *(_QWORD *)(v10 + 16);
  if (!v47)
  {
    swift_bridgeObjectRelease();
    v33 = 0;
    return v33 & 1;
  }
  v37 = a1;
  v12 = 0;
  v36 = 0;
  v35 = (uint64_t *)(v2 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_errorMessage);
  v44 = v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v43 = *(_QWORD *)(v7 + 72);
  v13 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
  v41 = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_binaryWords;
  v42 = v13;
  v34[1] = 0x800000023F63B6E0;
  v14 = v7;
  v38 = v2;
  v39 = v10;
  v40 = v7;
  while (1)
  {
    v42(v9, v44 + v43 * v12, v6);
    v15 = sub_23F5A2FF4((uint64_t)v9);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      return v33 & 1;
    }
    v17 = v16;
    ++v12;
    if (v16)
      break;
    result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v9, v6);
LABEL_15:
    if (v12 == v47)
    {
      swift_bridgeObjectRelease();
      v33 = v36;
      return v33 & 1;
    }
LABEL_16:
    if (v12 >= *(_QWORD *)(v11 + 16))
    {
      __break(1u);
      goto LABEL_40;
    }
  }
  v18 = v15;
  v19 = *(_QWORD **)(v2 + v41);
  v20 = v19[2];
  if (!v20)
    goto LABEL_12;
  v21 = v19[4] == v15 && v16 == v19[5];
  if (v21 || (sub_23F61CC64() & 1) != 0)
    goto LABEL_13;
  if (v20 == 1)
    goto LABEL_12;
  v29 = v19[6] == v18 && v17 == v19[7];
  if (v29 || (result = sub_23F61CC64(), (result & 1) != 0))
  {
LABEL_13:
    v14 = v40;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v6);
    result = swift_bridgeObjectRelease();
    v2 = v38;
    v11 = v39;
    goto LABEL_15;
  }
  if (v20 == 2)
  {
LABEL_12:
    v45 = v18;
    v46 = v17;
    sub_23F38813C();
    v22 = (_QWORD *)sub_23F61C808();
    v23 = v37;
    v24 = sub_23F5A088C(v22, v37);
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      v45 = 0;
      v46 = 0xE000000000000000;
      sub_23F61C8E0();
      swift_bridgeObjectRelease();
      v45 = 0x222065756C6156;
      v46 = 0xE700000000000000;
      sub_23F61C280();
      swift_bridgeObjectRelease();
      sub_23F61C280();
      MEMORY[0x24266F8F8](v23, MEMORY[0x24BEE1E08]);
      sub_23F61C280();
      swift_bridgeObjectRelease();
      v26 = v45;
      v27 = v46;
      v14 = v40;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v6);
      v28 = v35;
      *v35 = v26;
      v28[1] = v27;
      result = swift_bridgeObjectRelease();
      if (v12 == v47)
      {
        swift_bridgeObjectRelease();
        v33 = 1;
        return v33 & 1;
      }
      v36 = 1;
      v2 = v38;
      v11 = v39;
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  v30 = v19 + 9;
  v31 = 2;
  while (!__OFADD__(v31, 1))
  {
    if (*(v30 - 1) == v18 && v17 == *v30)
      goto LABEL_13;
    v34[0] = v31 + 1;
    result = sub_23F61CC64();
    if ((result & 1) != 0)
      goto LABEL_13;
    v30 += 2;
    ++v31;
    if (v34[0] == v20)
      goto LABEL_12;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23F5A2FF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;

  v74 = a1;
  v2 = sub_23F619E98();
  v63 = *(_QWORD *)(v2 - 8);
  v64 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v70 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_23F616BA4();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v59 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F35D2E8(&qword_256E74740);
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v65 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_23F35D2E8(&qword_256E7D860);
  v75 = *(_QWORD *)(v84 - 8);
  v7 = MEMORY[0x24BDAC7A8](v84);
  v68 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v59 - v9;
  v71 = type metadata accessor for TypedValueFormatter(0);
  MEMORY[0x24BDAC7A8](v71);
  v73 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F61B92C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v69 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v59 - v16;
  v18 = sub_23F61B8A8();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v59 - v23;
  v62 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v62(v17, v74, v12);
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v17, v12) == *MEMORY[0x24BEB9A00])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v17, v12);
    v25 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v24, v25, v18);
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v24, v18);
    v26 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v22, v18);
    if (v26 != *MEMORY[0x24BEB9918])
    {
      v27 = v26;
      if (v26 == *MEMORY[0x24BEB9958])
      {
        (*(void (**)(char *, uint64_t))(v19 + 96))(v22, v18);
        swift_bridgeObjectRelease();
      }
      else
      {
        v52 = *MEMORY[0x24BEB9920];
        (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
        if (v27 != v52)
          return 0;
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  }
  v28 = v72;
  v29 = v72 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_locale;
  v30 = sub_23F6170CC();
  v31 = v73;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v73, v29, v30);
  v32 = (_QWORD *)(v31 + *(int *)(v71 + 20));
  *v32 = 0;
  v32[1] = 0;
  v33 = v74;
  v34 = v31;
  v35 = sub_23F600510(v74);
  if (v1)
  {
    sub_23F3663AC(v31, type metadata accessor for TypedValueFormatter);
    return v34;
  }
  if (!v36)
  {
    v43 = v70;
    sub_23F619124();
    v44 = v69;
    v62(v69, v33, v12);
    v45 = sub_23F619E8C();
    v46 = sub_23F61C628();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      v82 = v48;
      *(_DWORD *)v47 = 136315138;
      v84 = (uint64_t)(v47 + 4);
      v49 = sub_23F61B8F0();
      sub_23F37AE00(v49, v50, &v82);
      v80 = v51;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v69, v12);
      _os_log_impl(&dword_23F35A000, v45, v46, "Failed to get formatForDialog(%s)", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v48, -1, -1);
      MEMORY[0x242670B70](v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v70, v64);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v43, v64);
    }
    sub_23F3663AC(v73, type metadata accessor for TypedValueFormatter);
    return 0;
  }
  v82 = (uint64_t)v35;
  v83 = v36;
  v37 = *(_QWORD *)(*(_QWORD *)(v28 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_stopWords) + 16);
  if (v37)
  {
    v74 = sub_23F617BA0();
    v38 = v74 + 40;
    v39 = v84;
    do
    {
      v80 = 25180;
      v81 = 0xE200000000000000;
      sub_23F617BA0();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      sub_23F61C280();
      sub_23F618734();
      v38 += 16;
      v80 = 32;
      v81 = 0xE100000000000000;
      sub_23F3C75A4();
      sub_23F3C75E0();
      sub_23F5AB6E4(&qword_256E7D868, &qword_256E7D860);
      sub_23F61C5C8();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v10, v39);
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
    v31 = v73;
  }
  sub_23F35D2E8(&qword_256E74778);
  v40 = v65;
  sub_23F6186B0();
  sub_23F3C75A4();
  sub_23F3C75E0();
  sub_23F5AB6E4(&qword_256E74788, &qword_256E74740);
  v41 = v67;
  sub_23F61C5BC();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v41);
  v78 = v82;
  v79 = v83;
  v42 = v68;
  sub_23F618734();
  v76 = 32;
  v77 = 0xE100000000000000;
  sub_23F5AB6E4(&qword_256E7D868, &qword_256E7D860);
  v54 = v84;
  sub_23F61C5E0();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v42, v54);
  swift_bridgeObjectRelease();
  v78 = v80;
  v79 = v81;
  v55 = v59;
  sub_23F616B8C();
  sub_23F38813C();
  v34 = sub_23F61C7C0();
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v55, v61);
  swift_bridgeObjectRelease();
  if ((v57 & 0x2000000000000000) != 0)
    v58 = HIBYTE(v57) & 0xF;
  else
    v58 = v34 & 0xFFFFFFFFFFFFLL;
  sub_23F3663AC(v31, type metadata accessor for TypedValueFormatter);
  if (!v58)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v34;
}

uint64_t sub_23F5A38AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_23F35D2E8(&qword_256E7D858);
  sub_23F61871C();
  swift_bridgeObjectRelease();
  MEMORY[0x24266F6AC]();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a1 = 32;
  a1[1] = v3;
  return result;
}

uint64_t sub_23F5A3948(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v2 = sub_23F61B92C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B6E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v5, a1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x24BEB9988])
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    v11 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
    swift_release();
    v12 = sub_23F61B6D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_23F35D2E8(&qword_256E6FC28);
    v13 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_23F61E7E0;
    v10((char *)(v12 + v13), a1, v2);
  }
  return v12;
}

void Ungrounded.deinit()
{
  uint64_t v0;

  v0 = sub_23F38F984();
  sub_23F362B6C(v0);
  sub_23F5ABBF0(OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10Ungrounded_tokenizer);
  sub_23F5855A4();
  sub_23F5ABBF8();
  sub_23F5ABBF8();
  sub_23F5ABBF8();
  sub_23F362928();
}

uint64_t Ungrounded.__deallocating_deinit()
{
  return sub_23F582B24(Ungrounded.deinit);
}

uint64_t sub_23F5A3B50()
{
  return 0x646E756F72676E55;
}

uint64_t sub_23F5A3B6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = Ungrounded.__allocating_init(_:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23F5A3B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23F3609AC;
  return Ungrounded.validate(text:context:)(a1, a2, a3, a4);
}

uint64_t BadGrammar.name.getter()
{
  return 0x6D61724720646142;
}

id sub_23F5A3C30(uint64_t a1)
{
  return sub_23F5A936C(a1, &qword_256E80410);
}

uint64_t BadGrammar.__allocating_init(_:)(uint64_t a1)
{
  return sub_23F5A3C58(a1, (void (*)(uint64_t))BadGrammar.init(_:));
}

uint64_t sub_23F5A3C58(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;

  v4 = sub_23F3F9C48();
  a2(a1);
  return v4;
}

void BadGrammar.init(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  BOOL v20;
  id v21;
  uint64_t v22;
  _BYTE *v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  sub_23F362C98();
  v4 = v0;
  v6 = v5;
  v7 = sub_23F6170B4();
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E71D18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3E2718();
  v10 = (_QWORD *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10BadGrammar_errorMessage);
  *v10 = 0;
  v10[1] = 0;
  v11 = v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10BadGrammar_locale;
  v12 = sub_23F38F984();
  v13 = *(_QWORD *)(v12 - 8);
  v25 = v11;
  v14 = sub_23F4412AC();
  v15(v14);
  sub_23F6170C0();
  sub_23F6170A8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v7);
  v16 = sub_23F617048();
  if (sub_23F36195C(v3, 1, v16) == 1)
  {
    sub_23F3625D8(v3, &qword_256E71D18);
  }
  else
  {
    sub_23F61703C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v3, v16);
  }
  v17 = (void *)sub_23F61C0E8();
  sub_23F362984();
  v18 = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10BadGrammar_language;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10BadGrammar_language) = v17;
  if (qword_256E6F0E8 != -1)
  {
    swift_once();
    v17 = *(void **)(v4 + v18);
  }
  v19 = v17;
  v20 = sub_23F5A9410(v19);

  if (v20)
  {
    sub_23F5AA17C();
    if (qword_256E6F0D8 != -1)
      swift_once();
    sub_23F617BA0();
    v21 = sub_23F5A3F20();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v6, v12);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10BadGrammar_tagger) = v21;
  }
  else
  {
    sub_23F5AA140();
    v22 = sub_23F362D64();
    sub_23F5ABA2C(v22, v23);
    v24 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v24(v6, v12);
    v24(v25, v12);

    swift_bridgeObjectRelease();
    sub_23F5ABB74();
    swift_deallocPartialClassInstance();
  }
  sub_23F362870();
}

id sub_23F5A3F20()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  type metadata accessor for NLTagScheme(0);
  v1 = (void *)sub_23F61C3D0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithTagSchemes_, v1);

  return v2;
}

uint64_t BadGrammar.validate(text:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v5 = sub_23F3B1728();
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 - 8);
  v4[11] = sub_23F366578();
  v4[12] = sub_23F598A5C();
  v4[13] = sub_23F366578();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5A3FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  void *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  _WORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10BadGrammar_errorMessage);
  *v4 = 0;
  v4[1] = 0;
  swift_bridgeObjectRelease();
  v5 = *(void **)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10BadGrammar_tagger);
  sub_23F5AA7FC(v3, v2, v5);
  v6 = sub_23F61C6AC();
  if (qword_256E6F0B8 != -1)
    swift_once();
  sub_23F361498(*(_QWORD *)(v0 + 96), (uint64_t)qword_256E803F8);
  sub_23F3C08CC();
  sub_23F5AB4E0();
  sub_23F35D2E8(&qword_256E7C9A0);
  sub_23F617C48();
  v7 = *(unsigned __int8 *)(v0 + 112);
  v8 = sub_23F4412AC();
  sub_23F3663AC(v8, v9);
  if (v7 != 1)
  {
    swift_bridgeObjectRelease();
    sub_23F3F0F00();
    sub_23F619E8C();
    v15 = sub_23F507D60();
    if (sub_23F3F0E3C(v15))
    {
      v16 = (_WORD *)sub_23F366668();
      sub_23F3F0EF4(v16);
      sub_23F3F0DF0(&dword_23F35A000, v17, v18, "Rules based response validation skipped via default ResponseGenerationRules being set to false");
      sub_23F366530();
    }
    sub_23F5ABBE4();
    sub_23F366764(loc_23F59463C);
    goto LABEL_9;
  }
  sub_23F5A421C(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), (uint64_t)v5, v6);
  v11 = v10;
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
LABEL_9:
    v19 = *(_QWORD *)(v0 + 40);
    *(_BYTE *)v19 = 1;
    *(_QWORD *)(v19 + 8) = 0x6D61724720646142;
    *(_QWORD *)(v19 + 16) = 0xEB0000000072616DLL;
    *(_QWORD *)(v19 + 24) = 0;
    *(_QWORD *)(v19 + 32) = 0;
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(v0 + 40);
  v14 = *v4;
  v13 = v4[1];
  *(_BYTE *)v12 = 0;
  *(_QWORD *)(v12 + 8) = 0x6D61724720646142;
  *(_QWORD *)(v12 + 16) = 0xEB0000000072616DLL;
  *(_QWORD *)(v12 + 24) = v14;
  *(_QWORD *)(v12 + 32) = v13;
  sub_23F617BA0();
LABEL_10:
  sub_23F5AB9C4();
  sub_23F362CC8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23F5A421C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  BOOL v42;
  char v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  _QWORD *v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v106;
  id v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v126;
  id v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v134;
  id v135;
  id v136;
  void *v137;
  void *v138;
  id v139;
  id v140;
  id v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v148;
  id v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v156;
  id v157;
  id v158;
  id v159;
  uint64_t v160;
  id v162;
  id v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v171;
  id v172;
  id v173;
  id v174;
  id v175;
  id v176;
  id v177;
  id v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  unint64_t v182;
  char v183;
  unint64_t v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v192;
  id v193;
  id v194;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  void *v200;
  void *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void *v210;
  void *v211;
  void *v212;
  int64_t v213;
  int64_t v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  int64_t v223;
  _QWORD *v224;
  unint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  id v229;
  _QWORD v230[2];

  sub_23F5B9EC8(1, a4);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_23F510D3C(1, a4);
  if (v9 == v11 >> 1)
  {
LABEL_4:
    swift_bridgeObjectRetain_n();
LABEL_5:
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return;
  }
  v214 = v11 >> 1;
  if (v9 < (uint64_t)(v11 >> 1))
  {
    v15 = v13;
    if (v13 == v14 >> 1)
      goto LABEL_4;
    v16 = v12;
    v17 = *(void **)(v7 + 24 * v9);
    v18 = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10BadGrammar_errorMessage;
    v202 = a4;
    v213 = v14 >> 1;
    swift_bridgeObjectRetain_n();
    v19 = v17;
    if (v15 < v213)
    {
      v20 = 0;
      v215 = (_QWORD *)(v4 + v18);
      v219 = v7 + 24 * v9 + 32;
      v212 = (void *)*MEMORY[0x24BDDFCA0];
      v209 = ~v9 + v214;
      v211 = (void *)*MEMORY[0x24BDDFCD0];
      v207 = v9 + 1;
      v21 = a4 + 96;
      v210 = (void *)*MEMORY[0x24BDDFCE8];
      v22 = (_QWORD *)(v16 + 24 * v15 + 16);
      v201 = (void *)*MEMORY[0x24BDDFCD8];
      v203 = v15 + 1;
      v200 = (void *)*MEMORY[0x24BDDFCB8];
      v206 = ~v15 + v213;
      v208 = v9;
      v204 = v15;
      while (1)
      {
        if (__OFADD__(v20, 1))
          goto LABEL_157;
        v223 = v20;
        v224 = v22;
        v220 = v21;
        v23 = *v22;
        v222 = (void *)*(v22 - 2);
        v229 = v222;
        v216 = sub_23F61C34C();
        v217 = v24;
        v218 = v25;
        v221 = v26;
        v225 = sub_23F61C34C();
        v226 = v27;
        v227 = v28;
        v228 = v29;
        v30 = sub_23F61C34C();
        v32 = v31;
        v34 = v33;
        v36 = v35;
        v205 = v23;
        v37 = sub_23F61C34C();
        v41 = v34 == v40 && v36 == v39;
        v42 = v41 && v30 >> 16 == v37 >> 16;
        if (v42 && v32 >> 16 == v38 >> 16)
          break;
        v44 = sub_23F61CC10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v46 = v211;
        v45 = v212;
        v47 = v210;
        if ((v44 & 1) != 0)
          goto LABEL_22;
LABEL_23:
        if (!v17)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v57 = 0;
          v58 = v229;
          goto LABEL_32;
        }
        v48 = sub_23F61C10C();
        v50 = v49;
        if (v48 == sub_23F61C10C() && v50 == v51)
        {
          v60 = v45;
          v61 = v17;
          v62 = v229;

          swift_bridgeObjectRelease_n();
          if (!v222)
            goto LABEL_41;
        }
        else
        {
          v53 = sub_23F61CC64();
          v54 = v45;
          v55 = v17;
          v56 = v229;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v53 & 1) == 0 || !v222)
            goto LABEL_41;
        }
        v63 = sub_23F61C10C();
        v65 = v64;
        if (v63 == sub_23F61C10C() && v65 == v66)
        {
          v97 = v46;
          v98 = v229;

          swift_bridgeObjectRelease_n();
LABEL_62:
          sub_23F61C8E0();
          swift_bridgeObjectRelease();
          strcpy((char *)v230, "determiner (");
          BYTE5(v230[1]) = 0;
          HIWORD(v230[1]) = -5120;
          MEMORY[0x24266F6AC](v216, v217, v218, v221);
          sub_23F61C280();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_107;
        }
        v68 = sub_23F61CC64();
        v69 = v46;
        v70 = v229;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v68 & 1) != 0)
          goto LABEL_62;
LABEL_41:
        v71 = sub_23F61C10C();
        v73 = v72;
        if (v71 == sub_23F61C10C() && v73 == v74)
        {
          v79 = v45;
          v80 = v17;

          swift_bridgeObjectRelease_n();
          if (!v222)
            goto LABEL_54;
        }
        else
        {
          v76 = sub_23F61CC64();
          v77 = v45;
          v78 = v17;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v76 & 1) == 0 || !v222)
            goto LABEL_54;
        }
        v81 = sub_23F61C10C();
        v83 = v82;
        if (v81 == sub_23F61C10C() && v83 == v84)
        {
          v117 = v45;
          v118 = v229;

          swift_bridgeObjectRelease_n();
LABEL_77:
          sub_23F61C8E0();
          swift_bridgeObjectRelease();
          v230[0] = 0xD00000000000001DLL;
          v230[1] = 0x800000023F63B670;
          MEMORY[0x24266F6AC](v216, v217, v218, v221);
          sub_23F61C280();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_107:
          sub_23F61C280();
          MEMORY[0x24266F6AC](v225, v226, v227, v228);
          sub_23F61C280();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23F61C280();

LABEL_108:
          v160 = v230[1];
          *v215 = v230[0];
          v215[1] = v160;
          swift_bridgeObjectRelease();
          v59 = v224;
          if (v209 == v20)
            goto LABEL_5;
          goto LABEL_109;
        }
        v86 = sub_23F61CC64();
        v87 = v45;
        v88 = v229;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v86 & 1) != 0)
          goto LABEL_77;
LABEL_54:
        v89 = sub_23F61C10C();
        v91 = v90;
        if (v89 == sub_23F61C10C() && v91 == v92)
        {
          v99 = v47;
          v100 = v17;

          swift_bridgeObjectRelease_n();
          if (!v222)
            goto LABEL_69;
        }
        else
        {
          v94 = sub_23F61CC64();
          v95 = v47;
          v96 = v17;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v94 & 1) == 0 || !v222)
            goto LABEL_69;
        }
        v101 = sub_23F61C10C();
        v103 = v102;
        if (v101 == sub_23F61C10C() && v103 == v104)
        {
          v139 = v45;
          v140 = v229;

          swift_bridgeObjectRelease_n();
          goto LABEL_106;
        }
        v106 = sub_23F61CC64();
        v107 = v45;
        v108 = v229;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v106 & 1) != 0)
          goto LABEL_106;
LABEL_69:
        v109 = sub_23F61C10C();
        v111 = v110;
        if (v109 == sub_23F61C10C() && v111 == v112)
        {
          v119 = v45;
          v120 = v17;

          swift_bridgeObjectRelease_n();
          if (!v222)
            goto LABEL_84;
        }
        else
        {
          v114 = sub_23F61CC64();
          v115 = v45;
          v116 = v17;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v114 & 1) == 0 || !v222)
            goto LABEL_84;
        }
        v121 = sub_23F61C10C();
        v123 = v122;
        if (v121 == sub_23F61C10C() && v123 == v124)
        {
          v158 = v47;
          v159 = v229;

          swift_bridgeObjectRelease_n();
LABEL_106:
          v230[0] = 0;
          v230[1] = 0xE000000000000000;
          sub_23F61C8E0();
          sub_23F61C280();
          MEMORY[0x24266F6AC](v216, v217, v218, v221);
          sub_23F61C280();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_107;
        }
        v126 = sub_23F61CC64();
        v127 = v47;
        v128 = v229;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v126 & 1) != 0)
          goto LABEL_106;
LABEL_84:
        v129 = sub_23F61C10C();
        v131 = v130;
        if (v129 == sub_23F61C10C() && v131 == v132)
        {
          v141 = v45;
          v142 = v17;

          swift_bridgeObjectRelease_n();
          v138 = v200;
          v137 = v201;
          if (!v222)
            goto LABEL_99;
        }
        else
        {
          v134 = sub_23F61CC64();
          v135 = v45;
          v136 = v17;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v138 = v200;
          v137 = v201;
          if ((v134 & 1) == 0 || !v222)
            goto LABEL_99;
        }
        v143 = sub_23F61C10C();
        v145 = v144;
        if (v143 == sub_23F61C10C() && v145 == v146)
        {
          v174 = v137;
          v175 = v229;

          swift_bridgeObjectRelease_n();
LABEL_129:

          goto LABEL_132;
        }
        v148 = sub_23F61CC64();
        v149 = v137;
        v150 = v229;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v148 & 1) != 0)
          goto LABEL_129;
LABEL_99:
        v151 = sub_23F61C10C();
        v153 = v152;
        if (v151 == sub_23F61C10C() && v153 == v154)
        {
          v164 = v45;
          v165 = v17;

          swift_bridgeObjectRelease_n();
        }
        else
        {
          v156 = sub_23F61CC64();
          v157 = v45;
          v57 = v17;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v156 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v58 = v229;

            goto LABEL_32;
          }
        }
        if (!v222)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v58 = v17;
          goto LABEL_147;
        }
        v166 = sub_23F61C10C();
        v168 = v167;
        if (v166 == sub_23F61C10C() && v168 == v169)
        {
          v176 = v229;
          v177 = v138;
          v178 = v176;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v171 = sub_23F61CC64();
          v172 = v229;
          v173 = v138;
          v58 = v172;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v171 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_147;
          }
        }
LABEL_132:
        v179 = sub_23F61C6A0();
        if (!v179)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_146;
        }
        v180 = (void *)v179;
        v181 = sub_23F61C10C();
        v183 = sub_23F50686C(v181, v182, v225, v226, v227, v228);
        v58 = v180;
        swift_bridgeObjectRelease();
        if ((v183 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_145;
        }
        v184 = *(_QWORD *)(v202 + 16);
        v59 = v224;
        if (v20 >= (uint64_t)(v184 - 2))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v58 = v229;
          v57 = v17;
        }
        else
        {
          if (v20 + 2 >= v184)
            goto LABEL_160;
          v185 = *(void **)(v220 - 16);
          if (v185)
          {
            v186 = *(_QWORD *)(v220 - 8);
            v187 = sub_23F61C10C();
            v189 = v188;
            if (v187 == sub_23F61C10C() && v189 == v190)
            {
              v194 = v185;
              swift_bridgeObjectRelease_n();
LABEL_152:
              if (!((v186 ^ v205) >> 14))
              {
                v195 = sub_23F61C34C();
                v199 = sub_23F5AA228(v195, v196, v197, v198, 29479, 0xE200000000000000);
                swift_bridgeObjectRelease();
                if ((v199 & 1) != 0)
                {
                  v230[0] = 0;
                  v230[1] = 0xE000000000000000;
                  sub_23F61C8E0();
                  sub_23F61C280();
                  MEMORY[0x24266F6AC](v216, v217, v218, v221);
                  sub_23F61C280();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_23F61C280();
                  MEMORY[0x24266F6AC](v225, v226, v227, v228);
                  sub_23F61C280();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_23F61C280();

                  goto LABEL_108;
                }
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

LABEL_145:
LABEL_146:
              v58 = v229;
LABEL_147:
              v57 = v17;
LABEL_32:
              v59 = v224;
              goto LABEL_33;
            }
            v192 = sub_23F61CC64();
            v193 = v185;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v192 & 1) != 0)
              goto LABEL_152;
            v59 = v224;
          }
          else
          {
            v193 = 0;
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v57 = v58;
        }
LABEL_33:

        if (v209 == v20)
          goto LABEL_5;
LABEL_109:
        if (v207 + v20 < v208 || v207 + v20 >= v214)
          goto LABEL_158;
        if (v206 == v20)
          goto LABEL_5;
        v22 = v59 + 3;
        v17 = *(void **)(v219 - 8);
        v162 = v17;
        v219 += 24;
        ++v20;
        v21 = v220 + 24;
        if (v203 + v223 < v204 || v203 + v223 >= v213)
          goto LABEL_156;
      }
      swift_bridgeObjectRelease_n();
      v46 = v211;
      v45 = v212;
      v47 = v210;
LABEL_22:
      sub_23F61C8E0();
      swift_bridgeObjectRelease();
      v230[0] = 0x6465746165706572;
      v230[1] = 0xEF206E656B6F7420;
      MEMORY[0x24266F6AC](v225, v226, v227, v228);
      sub_23F61C280();
      swift_bridgeObjectRelease();
      *v215 = 0x6465746165706572;
      v215[1] = v230[1];
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
  }
  __break(1u);
LABEL_160:
  __break(1u);
}

void BadGrammar.deinit()
{
  uint64_t v0;

  v0 = sub_23F38F984();
  sub_23F362B6C(v0);
  sub_23F5ABBF0(OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10BadGrammar_language);
  sub_23F5ABBF0(OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime10BadGrammar_tagger);
  sub_23F5855A4();
  sub_23F362928();
}

uint64_t BadGrammar.__deallocating_deinit()
{
  return sub_23F582B24(BadGrammar.deinit);
}

uint64_t sub_23F5A5420()
{
  return 0x6D61724720646142;
}

uint64_t sub_23F5A5440@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = BadGrammar.__allocating_init(_:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23F5A5468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F58C058;
  return BadGrammar.validate(text:context:)(a1, a2, a3);
}

void sub_23F5A54D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  BOOL v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  sub_23F362ABC();
  v44 = v1;
  v47 = v2;
  v3 = sub_23F35D2E8(&qword_256E7D858);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F38F964();
  v7 = v6 - v5;
  v8 = sub_23F35D2E8(&qword_256E74740);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F362838();
  sub_23F35D2E8(&qword_256E74778);
  sub_23F6186B0();
  sub_23F440EE8();
  sub_23F5AB6E4(&qword_256E74788, &qword_256E74740);
  v43 = v0;
  v10 = sub_23F61C07C();
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  v40 = v9;
  v12 = 0;
  v46 = v10 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v39 = v11 - 1;
  v42 = MEMORY[0x24BEE4AF8];
  v45 = v10;
LABEL_3:
  v13 = 0;
  v9 = v12;
  while (2)
  {
    v41 = v13;
    v14 = 0;
    while (1)
    {
      if (v9 >= *(_QWORD *)(v10 + 16))
      {
        __break(1u);
LABEL_46:
        swift_bridgeObjectRelease();
        v9 = v40;
        goto LABEL_44;
      }
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(v7, v46 + *(_QWORD *)(v4 + 72) * v9, v3);
      sub_23F618710();
      v15 = sub_23F61C34C();
      MEMORY[0x24266F6AC](v15);
      sub_23F362984();
      v16 = sub_23F61C178();
      v18 = v17;
      v19 = v47;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v47 + 16))
      {
        sub_23F617BA0();
        v20 = sub_23F5ABB88();
        if ((v21 & 1) != 0)
        {
          v19 = *(_QWORD *)(*(_QWORD *)(v47 + 56) + 8 * v20);
          sub_23F362D08();
          sub_23F5AB8C4();
          sub_23F362D08();
          v22 = __OFADD__(v14, v19);
          v14 += v19;
          if (v22)
            goto LABEL_47;
          goto LABEL_23;
        }
        sub_23F362D08();
      }
      v23 = v16 == 0x646572646E7568 && v18 == 0xE700000000000000;
      if (v23 || (sub_23F3C8510() & 1) != 0)
      {
        sub_23F5AB8C4();
        sub_23F362D08();
        v24 = (unsigned __int128)(v14 * (__int128)100) >> 64;
        v14 *= 100;
        if (v24 != v14 >> 63)
        {
          __break(1u);
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
        goto LABEL_23;
      }
      if (*(_QWORD *)(v44 + 16))
      {
        v25 = sub_23F5ABB88();
        if ((v26 & 1) != 0)
          break;
      }
      sub_23F362D08();
      if (v14 >= 1)
      {
        v22 = __OFADD__(v41, v14);
        v29 = v41 + v14;
        if (!v22)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F5AB9EC();
            v42 = v32;
          }
          v31 = *(_QWORD *)(v42 + 16);
          v30 = *(_QWORD *)(v42 + 24);
          if (v31 >= v30 >> 1)
          {
            sub_23F389FB0(v30);
            sub_23F377218();
            v42 = v33;
          }
          v12 = v9 + 1;
          *(_QWORD *)(v42 + 16) = v31 + 1;
          *(_QWORD *)(v42 + 8 * v31 + 32) = v29;
          sub_23F5AB8C4();
          v10 = v45;
          if (v39 == v9)
            goto LABEL_46;
          goto LABEL_3;
        }
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      sub_23F5AB8C4();
LABEL_23:
      ++v9;
      v10 = v45;
      if (v11 == v9)
      {
        swift_bridgeObjectRelease();
        v9 = v40;
        v34 = v42;
        if (v14 >= 1)
        {
          v19 = v41 + v14;
          if (!__OFADD__(v41, v14))
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            {
LABEL_40:
              v36 = *(_QWORD *)(v34 + 16);
              v35 = *(_QWORD *)(v34 + 24);
              if (v36 >= v35 >> 1)
              {
                sub_23F493460(v35);
                sub_23F377218();
                v34 = v38;
              }
              *(_QWORD *)(v34 + 16) = v36 + 1;
              *(_QWORD *)(v34 + 8 * v36 + 32) = v19;
              goto LABEL_44;
            }
LABEL_49:
            sub_23F3C0670();
            sub_23F377218();
            v34 = v37;
            goto LABEL_40;
          }
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
LABEL_44:
        sub_23F362A28(v43, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
        sub_23F362948();
        return;
      }
    }
    v27 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v25);
    sub_23F362D08();
    sub_23F5AB8C4();
    v28 = v14 * v27;
    if ((unsigned __int128)(v14 * (__int128)v27) >> 64 != (v14 * v27) >> 63)
      goto LABEL_51;
    v13 = v41 + v28;
    v10 = v45;
    if (!__OFADD__(v41, v28))
    {
      v23 = v39 == v9++;
      if (!v23)
        continue;
      goto LABEL_46;
    }
    break;
  }
LABEL_52:
  __break(1u);
}

uint64_t sub_23F5A5904()
{
  uint64_t v0;

  v0 = sub_23F5ABA84();
  sub_23F5ABA84();
  return v0;
}

void SearchCountsMismatchRule.name.getter()
{
  sub_23F383738();
  sub_23F3C85C0();
  sub_23F362928();
}

void SearchCountsMismatchRule.__allocating_init(_:)()
{
  uint64_t v0;
  uint64_t v1;

  swift_allocObject();
  v0 = sub_23F38F984();
  sub_23F5AB8A0(v0);
  sub_23F5247A8();
  sub_23F5ABAB4(v1);
  sub_23F5AB984();
}

uint64_t SearchCountsMismatchRule.init(_:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F38F984();
  sub_23F5AB8A0(v0);
  sub_23F5247A8();
  return sub_23F5ABAB4(v1);
}

uint64_t SearchCountsMismatchRule.validate(text:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return sub_23F362A4C();
}

uint64_t sub_23F5A5A1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v11)(void);

  sub_23F5A5AB0();
  v2 = v1;
  if (!*(_QWORD *)(v1 + 16) || (v3 = sub_23F5A64B0(), (v4 & 1) != 0))
    v5 = 1;
  else
    v5 = sub_23F5A07D8(v3, v2);
  v6 = v0[6];
  v7 = v0[2];
  sub_23F362984();
  v9 = *(_QWORD *)(v6 + 16);
  v8 = *(_QWORD *)(v6 + 24);
  *(_BYTE *)v7 = v5 & 1;
  *(_QWORD *)(v7 + 8) = v9;
  *(_QWORD *)(v7 + 16) = v8;
  *(_QWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 32) = 0;
  v11 = (uint64_t (*)(void))v0[1];
  sub_23F617BA0();
  return v11();
}

void sub_23F5A5AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  BOOL v52;
  char v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 *v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  unsigned __int8 v66;
  unsigned __int8 v67;
  char v68;
  unsigned __int8 v69;
  uint64_t v70;
  unsigned __int8 v71;
  uint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unsigned __int8 v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82[2];
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;

  sub_23F362ABC();
  sub_23F61C148();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  v105 = (char *)v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v5 = sub_23F6181AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F362930();
  sub_23F35D2E8(&qword_256E6FB18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B17A4();
  v8 = sub_23F61ACA8();
  v95 = *(_QWORD *)(v8 - 8);
  v96 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v94 = v10;
  sub_23F39C56C();
  v93 = sub_23F61A504();
  v92 = *(_QWORD *)(v93 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  v91 = v12;
  sub_23F39C56C();
  v13 = sub_23F61811C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F5AB9A8(v15, v82[0]);
  v90 = sub_23F35D2E8(&qword_256E70C90);
  v89 = *(_QWORD *)(v90 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F36285C();
  v88 = v17;
  sub_23F35D2E8(&qword_256E70238);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F36285C();
  v109 = v19;
  sub_23F39C56C();
  v104 = sub_23F61AB94();
  sub_23F3B19A8();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F61AD98();
  v100 = *(_QWORD *)(v23 + 16);
  if (!v100)
  {
LABEL_109:
    swift_bridgeObjectRelease();
    sub_23F362948();
    return;
  }
  v101 = v22;
  v87 = v14;
  v97 = v13;
  v24 = 0;
  v84 = 0;
  v99 = v23 + ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80));
  v82[0] = (uint64_t)&v112 + 2;
  v82[1] = (uint64_t)&v112 + 3;
  v86 = MEMORY[0x24BEE4AF8];
  v25 = v109;
  v26 = v104;
  v27 = v0;
  v103 = v0;
  v83 = v1;
  v98 = v23;
  while (1)
  {
    if (v24 >= *(_QWORD *)(v23 + 16))
      goto LABEL_111;
    v28 = *(_QWORD *)(v27 + 72);
    v107 = v24;
    v29 = v101;
    (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v101, v99 + v28 * v24, v26);
    sub_23F61AB70();
    v30 = sub_23F61B5D8();
    if (sub_23F36195C(v25, 1, v30) != 1)
      break;
    sub_23F3625D8(v25, &qword_256E70238);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
LABEL_108:
    v24 = v107 + 1;
    v27 = v103;
    v26 = v104;
    v23 = v98;
    if (v107 + 1 == v100)
      goto LABEL_109;
  }
  v31 = sub_23F61B5B4();
  v32 = v25;
  v34 = v33;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v32, v30);
  v112 = v31;
  v113 = v34;
  v35 = v88;
  sub_23F6186B0();
  sub_23F440EE8();
  sub_23F5AB6E4(&qword_256E70CA8, &qword_256E70C90);
  sub_23F61C064();
  sub_23F383D74(v35, *(uint64_t (**)(uint64_t, uint64_t))(v89 + 8));
  sub_23F362D18();
  sub_23F362984();
  v36 = v91;
  sub_23F61AB4C();
  v37 = v94;
  sub_23F61A4F8();
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v36, v93);
  sub_23F61AC9C();
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v37, v96);
  v38 = v97;
  if (sub_23F36195C(v1, 1, v97) == 1)
  {
    sub_23F54DC38(v103);
    sub_23F3625D8(v1, &qword_256E6FB18);
LABEL_105:
    v25 = v109;
    goto LABEL_108;
  }
  v25 = v87;
  v39 = v102;
  v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 32))(v102, v1, v38);
  v41 = MEMORY[0x24266B5F0](v40);
  if (!v41)
  {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v39, v38);
    sub_23F54DC38(v103);
    goto LABEL_105;
  }
  v42 = v41;
  v111 = *(_QWORD *)(v41 + 16);
  if (!v111)
  {
    sub_23F5ABB3C();
LABEL_107:
    sub_23F362D18();
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v1, v97);
    sub_23F54DC38(v103);
    v1 = v83;
    goto LABEL_108;
  }
  v43 = 0;
  v110 = v41 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  sub_23F5ABB3C();
  v106 = v42;
  while (2)
  {
    if (v43 < *(_QWORD *)(v42 + 16))
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16))(v2, v110 + *(_QWORD *)(v6 + 72) * v43, v5);
      v44 = sub_23F618194();
      if (v45 >> 60 == 15)
      {
        sub_23F3D98EC(v2, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
        goto LABEL_31;
      }
      v46 = v44;
      v25 = v6;
      sub_23F61C13C();
      v47 = sub_23F61C124();
      if (!v48)
      {
        sub_23F3D98EC(v2, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
        sub_23F5ABADC(v46);
        goto LABEL_29;
      }
      v49 = v47;
      v50 = v48;
      v108 = v46;
      v1 = v5;
      v52 = sub_23F61817C() == 0x726577736E61 && v51 == 0xE600000000000000;
      if (v52)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v53 = sub_23F3C8510();
        sub_23F362984();
        if ((v53 & 1) == 0)
          goto LABEL_28;
      }
      v54 = v49 == 6647407 && v50 == 0xE300000000000000;
      if (v54 || (sub_23F3C8510() & 1) != 0)
      {
LABEL_28:
        sub_23F5ABADC(v108);
        sub_23F362D18();
        v6 = v25;
        v5 = v1;
        sub_23F362A28(v2, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
        v1 = v102;
LABEL_29:
        v25 = v109;
LABEL_30:
        v42 = v106;
LABEL_31:
        if (++v43 == v111)
          goto LABEL_107;
        continue;
      }
      v55 = HIBYTE(v50) & 0xF;
      v56 = v49 & 0xFFFFFFFFFFFFLL;
      if ((v50 & 0x2000000000000000) != 0)
        v57 = HIBYTE(v50) & 0xF;
      else
        v57 = v49 & 0xFFFFFFFFFFFFLL;
      v58 = v108;
      if (!v57)
      {
        sub_23F362D18();
        v5 = v1;
        v6 = v25;
        sub_23F5ABB3C();
        v42 = v106;
        goto LABEL_91;
      }
      if ((v50 & 0x1000000000000000) != 0)
      {
        v85 = sub_23F5064AC(v49, v50, 10);
        LOBYTE(v58) = v79;
        sub_23F362D18();
        v5 = v1;
        v6 = v25;
        sub_23F5ABB3C();
        goto LABEL_84;
      }
      if ((v50 & 0x2000000000000000) == 0)
      {
        if ((v49 & 0x1000000000000000) != 0)
          v59 = (unsigned __int8 *)((v50 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v59 = (unsigned __int8 *)sub_23F61C934();
        v5 = v1;
        v6 = v25;
        v60 = v84;
        v85 = sub_23F506498(v59, v56, 10);
        v84 = v60;
        LOBYTE(v58) = v61 & 1;
        v1 = v102;
        v25 = v109;
LABEL_83:
        sub_23F362D18();
LABEL_84:
        v42 = v106;
        if ((v58 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          {
            v74 = v86;
          }
          else
          {
            sub_23F5AB9EC();
            v74 = v80;
          }
          v76 = *(_QWORD *)(v74 + 16);
          v75 = *(_QWORD *)(v74 + 24);
          if (v76 >= v75 >> 1)
          {
            sub_23F493460(v75);
            sub_23F377218();
            v74 = v81;
          }
          *(_QWORD *)(v74 + 16) = v76 + 1;
          v86 = v74;
          *(_QWORD *)(v74 + 8 * v76 + 32) = v85;
          sub_23F5ABADC(v108);
          sub_23F3D98EC(v2, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
          goto LABEL_30;
        }
        v58 = v108;
LABEL_91:
        sub_23F3D98EC(v2, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
        sub_23F5ABADC(v58);
        goto LABEL_31;
      }
      v112 = v49;
      v113 = v50 & 0xFFFFFFFFFFFFFFLL;
      v62 = v49 >> 8;
      v63 = v49 >> 16;
      if (v49 == 43)
      {
        if (!v55)
          goto LABEL_113;
        v5 = v1;
        if (v55 == 1)
        {
          v65 = 0;
          LOBYTE(v58) = 1;
          v6 = v25;
          v1 = v102;
        }
        else
        {
          v66 = BYTE1(v49) - 48;
          v6 = v25;
          v1 = v102;
          if (v66 <= 9u)
          {
            v65 = v66;
            v25 = v109;
            if (v55 != 2)
            {
              v67 = v63 - 48;
              if (v67 > 9u)
                goto LABEL_79;
              v65 = 10 * v66 + v67;
              if (v55 != 3)
              {
                while (1)
                {
                  sub_23F5ABAE4();
                  if (!v52 & v68)
                    goto LABEL_79;
                  sub_23F5AB8E4();
                  if (!v52 || __OFADD__(v70, v69))
                    goto LABEL_79;
                  sub_23F5ABAF4();
                  if (v52)
                    goto LABEL_82;
                }
              }
            }
LABEL_81:
            LOBYTE(v58) = 0;
            goto LABEL_82;
          }
LABEL_52:
          v65 = 0;
          LOBYTE(v58) = 1;
        }
      }
      else
      {
        v5 = v1;
        if (v49 == 45)
        {
          v1 = v102;
          if (!v55)
            goto LABEL_112;
          if (v55 != 1)
          {
            v64 = BYTE1(v49) - 48;
            v6 = v25;
            if (v64 <= 9u)
            {
              v25 = v109;
              if (v55 == 2)
              {
                LOBYTE(v58) = 0;
                v65 = -(uint64_t)v64;
LABEL_82:
                v85 = (unsigned __int8 *)v65;
                goto LABEL_83;
              }
              v73 = v63 - 48;
              if (v73 > 9u)
              {
LABEL_79:
                v65 = 0;
                LOBYTE(v58) = 1;
                goto LABEL_82;
              }
              v65 = -10 * v64 - v73;
              if (v55 != 3)
              {
                while (1)
                {
                  sub_23F5ABAE4();
                  if (!v52 & v68)
                    goto LABEL_79;
                  sub_23F5AB8E4();
                  if (!v52 || __OFSUB__(v78, v77))
                    goto LABEL_79;
                  sub_23F5ABAF4();
                  if (v52)
                    goto LABEL_82;
                }
              }
              goto LABEL_81;
            }
            goto LABEL_52;
          }
LABEL_55:
          v65 = 0;
          LOBYTE(v58) = 1;
          v6 = v25;
        }
        else
        {
          v1 = v102;
          if (!v55 || (v49 - 48) > 9u)
            goto LABEL_55;
          v65 = (v49 - 48);
          v6 = v25;
          if (v55 != 1)
          {
            v25 = v109;
            if ((v62 - 48) > 9u)
              goto LABEL_79;
            v65 = 10 * v65 + (v62 - 48);
            if (v55 != 2)
            {
              while (1)
              {
                sub_23F5ABAE4();
                if (!v52 & v68)
                  goto LABEL_79;
                sub_23F5AB8E4();
                if (!v52 || __OFADD__(v72, v71))
                  goto LABEL_79;
                sub_23F5ABAF4();
                if (v52)
                  goto LABEL_82;
              }
            }
            goto LABEL_81;
          }
          LOBYTE(v58) = 0;
        }
      }
      v25 = v109;
      goto LABEL_82;
    }
    break;
  }
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
}

uint64_t sub_23F5A64B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F51BBD4();
  sub_23F5A5904();
  sub_23F5A54D4();
  v1 = v0;
  sub_23F362C60();
  sub_23F362D08();
  if (*(_QWORD *)(v1 + 16))
    v2 = *(_QWORD *)(v1 + 32);
  else
    v2 = 0;
  sub_23F362D18();
  return v2;
}

uint64_t SearchCountsMismatchRule.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SearchCountsMismatchRule.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_23F5A6568()
{
  SearchCountsMismatchRule.name.getter();
}

void sub_23F5A6588(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  SearchCountsMismatchRule.__allocating_init(_:)();
  if (!v1)
    *a1 = v3;
}

uint64_t sub_23F5A65B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23F5AB880;
  return SearchCountsMismatchRule.validate(text:context:)(a1, a2, a3, a4);
}

void ResponseGenerationResponseValidator.init(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  sub_23F362C98();
  v3 = v2;
  v4 = sub_23F38F984();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3D9CCC();
  v6 = v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime35ResponseGenerationResponseValidator_locale;
  sub_23F5ABC24(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime35ResponseGenerationResponseValidator_locale);
  sub_23F5ABC24(v0);
  type metadata accessor for ResponseValidationAssets();
  v7 = swift_allocObject();
  sub_23F5A7BDC();
  if (v1)
  {
    v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v8(v3, v4);
    v8(v6, v4);
    sub_23F5ABB74();
    swift_deallocPartialClassInstance();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime35ResponseGenerationResponseValidator_assets) = v7;
  }
  sub_23F362870();
}

uint64_t type metadata accessor for Unsafe._ClientInfo(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7D2F0);
}

void ResponseGenerationResponseValidator.__allocating_init()()
{
  uint64_t v0;

  sub_23F38F984();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F3B17A4();
  sub_23F61700C();
  sub_23F3F9C48();
  ResponseGenerationResponseValidator.init(_:)();
  sub_23F5AB984();
}

void ResponseGenerationResponseValidator.__allocating_init(locale:assets:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F57B974();
  v1 = swift_allocObject();
  v2 = sub_23F38F984();
  sub_23F5AB94C(v2);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime35ResponseGenerationResponseValidator_assets) = v0;
  sub_23F362B80();
}

void ResponseGenerationResponseValidator.init(locale:assets:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F57B974();
  v2 = sub_23F38F984();
  sub_23F5AB94C(v2);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime35ResponseGenerationResponseValidator_assets) = v0;
  sub_23F362B80();
}

uint64_t ResponseGenerationResponseValidator.ruleNames()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(*(_QWORD *)(v0
                             + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime35ResponseGenerationResponseValidator_assets)
                 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_23F3668F4();
    sub_23F37B47C();
    v4 = v1 + 32;
    v3 = v16;
    do
    {
      sub_23F361418(v4, (uint64_t)v13);
      v5 = v14;
      v6 = v15;
      sub_23F35EA9C(v13, v14);
      v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      v9 = v8;
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B47C();
        v3 = v16;
      }
      v10 = *(_QWORD *)(v3 + 16);
      if (v10 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_23F37B47C();
        v3 = v16;
      }
      *(_QWORD *)(v3 + 16) = v10 + 1;
      v11 = v3 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v9;
      v4 += 40;
      --v2;
    }
    while (v2);
    sub_23F362D18();
  }
  return v3;
}

void static ResponseGenerationResponseValidator.loadRules(locale:ruleNames:)()
{
  NSObject *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _UNKNOWN **v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  NSObject *v70;
  NSObject *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  __int128 v77;
  NSObject *v78;
  _UNKNOWN **v79;
  uint64_t v80;
  unint64_t v81;

  sub_23F362ABC();
  v4 = v3;
  v6 = v5;
  v7 = sub_23F3B1728();
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F507858();
  MEMORY[0x24BDAC7A8](v9);
  v11 = ((char *)&v59 - v10);
  v12 = sub_23F38F984();
  v72 = *(_QWORD *)(v12 - 8);
  v73 = v12;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3834D0();
  v62 = v14;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3838E4();
  v63 = v16;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F383780();
  v69 = v18;
  v19 = *(_QWORD *)(v4 + 16);
  if (v19)
  {
    sub_23F3668F4();
    v76 = 0;
    v61 = v4;
    v20 = (uint64_t *)(v4 + 40);
    v74 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)&v21 = 136315138;
    v65 = v21;
    v60 = (void (*)(uint64_t, uint64_t, uint64_t))(MEMORY[0x24BEE4AD8] + 8);
    v68 = xmmword_23F61E7E0;
    v67 = 0x800000023F63B240;
    v70 = v0;
    v71 = v11;
    v64 = v2;
    while (1)
    {
      v23 = *(v20 - 1);
      v22 = *v20;
      sub_23F5AB964();
      v26 = v23 == v25 && v22 == v24;
      if (v26 || (sub_23F5ABBD0(), (sub_23F5AB884() & 1) != 0))
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16))(v69, v6, v73);
        type metadata accessor for BadGrammar(0);
        v27 = sub_23F5AB890();
        sub_23F384A00();
        v28 = v76;
        BadGrammar.init(_:)();
        if (!v28)
        {
          v76 = 0;
          sub_23F38458C();
          v36 = &protocol witness table for BadGrammar;
LABEL_27:
          v78 = v11;
          v79 = v36;
          *(_QWORD *)&v77 = v27;
          sub_23F362678(&v77, (uint64_t)&v80);
          v11 = v71;
          sub_23F361418((uint64_t)&v80, (uint64_t)&v77);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          {
            v50 = v74;
          }
          else
          {
            sub_23F5ABA00();
            v50 = v57;
          }
          v1 = *(_QWORD *)(v50 + 16);
          v51 = *(_QWORD *)(v50 + 24);
          if (v1 >= v51 >> 1)
          {
            sub_23F389FB0(v51);
            sub_23F377D18();
            v50 = v58;
          }
          *(_QWORD *)(v50 + 16) = v1 + 1;
          v74 = v50;
          sub_23F362678(&v77, v50 + 40 * v1 + 32);
          _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v80);
          goto LABEL_32;
        }
      }
      else
      {
        sub_23F5ABAA4();
        v38 = v23 == v37 && v22 == 0xE600000000000000;
        if (v38 || (sub_23F5A1A20(), (sub_23F5AB884() & 1) != 0))
        {
          sub_23F5AB8B4(*(uint64_t (**)(_QWORD, uint64_t))(v72 + 16));
          type metadata accessor for Unsafe(0);
          v27 = sub_23F5AB890();
          sub_23F384A00();
          v39 = v1;
          v28 = v76;
          Unsafe.init(_:)(v39);
          if (!v28)
          {
            v76 = 0;
            sub_23F38458C();
            v36 = &protocol witness table for Unsafe;
            goto LABEL_27;
          }
        }
        else
        {
          sub_23F5ABBA8();
          if (v23 != v40 || v22 != 0xEA00000000006465)
          {
            sub_23F5A3B50();
            if ((sub_23F5AB884() & 1) == 0)
            {
              sub_23F384A00();
              sub_23F619124();
              sub_23F384A00();
              v52 = v11;
              sub_23F619E8C();
              v53 = sub_23F3F0EEC();
              if (sub_23F384458(v53))
              {
                v54 = sub_23F366668();
                v75 = (id)sub_23F366668();
                *(_QWORD *)&v77 = v75;
                *(_DWORD *)v54 = v65;
                sub_23F384A00();
                sub_23F56E8BC(v23, v55, (uint64_t *)&v77);
                *(_QWORD *)(v54 + 4) = v56;
                sub_23F5AB91C();
                sub_23F38485C(&dword_23F35A000, v52, (os_log_type_t)v1, "Unknown rule: %s", (uint8_t *)v54);
                swift_arrayDestroy();
                sub_23F366530();
              }

              sub_23F384A80();
              (*(void (**)(NSObject *, uint64_t))(v2 + 8))(v11, v7);
              goto LABEL_32;
            }
          }
          sub_23F5AB8B4(*(uint64_t (**)(_QWORD, uint64_t))(v72 + 16));
          type metadata accessor for Ungrounded(0);
          v27 = sub_23F5AB890();
          sub_23F384A00();
          v42 = v1;
          v28 = v76;
          Ungrounded.init(_:)(v42, v43, v44, v45, v46, v47, v48, v49, v59, v60, v61, v62, v63, v64, v65, *((uint64_t *)&v65 + 1), v66, v67, v68,
            *((uint64_t *)&v68 + 1));
          if (!v28)
          {
            v76 = 0;
            sub_23F38458C();
            v36 = &protocol witness table for Ungrounded;
            goto LABEL_27;
          }
        }
      }
      v75 = v28;
      v76 = 0;
      v1 = (unint64_t)v70;
      sub_23F35D2E8(&qword_256E6FC80);
      v29 = sub_23F36682C();
      v30 = v29;
      *(_OWORD *)(v29 + 16) = v68;
      v80 = 0;
      v81 = 0xE000000000000000;
      sub_23F61C8E0();
      swift_bridgeObjectRelease();
      sub_23F5247A8();
      v80 = v31;
      v81 = v67;
      sub_23F61C280();
      sub_23F5AB8FC(v80);
      sub_23F362C60();
      sub_23F619124();
      sub_23F384A00();
      sub_23F619E8C();
      v32 = sub_23F3F0EEC();
      if (sub_23F49BA04(v32))
      {
        v33 = sub_23F366668();
        v80 = sub_23F366668();
        *(_DWORD *)v33 = v65;
        sub_23F384A00();
        sub_23F56E8BC(v23, v34, &v80);
        *(_QWORD *)(v33 + 4) = v35;
        sub_23F5AB91C();
        sub_23F38485C(&dword_23F35A000, v1, v30, "Failed to create rule %s", (uint8_t *)v33);
        sub_23F3B17D4();
        sub_23F366530();
      }
      sub_23F384A80();

      (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v1, v7);
      v11 = v71;
LABEL_32:
      v20 += 2;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_23F362948();
}

uint64_t ResponseGenerationResponseValidator.validation(text:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return sub_23F362A4C();
}

uint64_t sub_23F5A6F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int8x16_t *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  sub_23F35D2E8(&qword_256E7D138);
  v3 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v3[1] = vextq_s8(*(int8x16_t *)(v0 + 40), *(int8x16_t *)(v0 + 40), 8uLL);
  v3[2].i64[0] = v2;
  v3[2].i64[1] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_23F5A6FCC;
  return sub_23F61CAC0();
}

uint64_t sub_23F5A6FCC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23F406D20();
  *v3 = *v2;
  *(_QWORD *)(v0 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F5A7024()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23F5A7030()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F5A7064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[30] = a5;
  v6[31] = a6;
  v6[28] = a3;
  v6[29] = a4;
  v6[26] = a1;
  v6[27] = a2;
  v7 = sub_23F35D2E8(&qword_256E7D830);
  v6[32] = v7;
  v6[33] = *(_QWORD *)(v7 - 8);
  v6[34] = swift_task_alloc();
  v8 = *(_QWORD *)(type metadata accessor for ResponseValidationContext(0) - 8);
  v6[35] = v8;
  v6[36] = *(_QWORD *)(v8 + 64);
  v6[37] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E717A8);
  v6[38] = swift_task_alloc();
  v6[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F5A712C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;

  sub_23F3D9A84();
  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 224)
                             + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime35ResponseGenerationResponseValidator_assets)
                 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v21 = (__int128 *)(v0 + 64);
    v20 = *(_QWORD *)(v0 + 280);
    v3 = v1 + 32;
    v4 = sub_23F61C490();
    sub_23F383738();
    do
    {
      v22 = v2;
      v5 = *(_QWORD *)(v0 + 304);
      v6 = *(_QWORD *)(v0 + 296);
      v7 = *(_QWORD *)(v0 + 248);
      v23 = *(_QWORD *)(v0 + 240);
      sub_23F36196C(*(_QWORD *)(v0 + 312), 1, 1, v4);
      sub_23F361418(v3, (uint64_t)v21);
      sub_23F5AB4E0();
      v8 = v4;
      v9 = (*(unsigned __int8 *)(v20 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v10 = (_QWORD *)swift_allocObject();
      v10[2] = 0;
      v10[3] = 0;
      sub_23F362678(v21, (uint64_t)(v10 + 4));
      v10[9] = v23;
      v10[10] = v7;
      v11 = (uint64_t)v10 + v9;
      v4 = v8;
      sub_23F5AB58C(v6, v11);
      sub_23F5AB6BC();
      LODWORD(v5) = sub_23F36195C(v5, 1, v8);
      sub_23F383738();
      v12 = *(_QWORD *)(v0 + 304);
      if ((_DWORD)v5 == 1)
      {
        sub_23F5ABB94();
      }
      else
      {
        sub_23F61C484();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v12, v8);
      }
      if (v10[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v13 = sub_23F61C43C();
        v15 = v14;
        swift_unknownObjectRelease();
      }
      else
      {
        v13 = 0;
        v15 = 0;
      }
      v16 = **(_QWORD **)(v0 + 216);
      v17 = v15 | v13;
      if (v15 | v13)
      {
        v17 = v0 + 144;
        *(_QWORD *)(v0 + 144) = 0;
        *(_QWORD *)(v0 + 152) = 0;
        *(_QWORD *)(v0 + 160) = v13;
        *(_QWORD *)(v0 + 168) = v15;
      }
      *(_QWORD *)(v0 + 176) = 1;
      *(_QWORD *)(v0 + 184) = v17;
      *(_QWORD *)(v0 + 192) = v16;
      swift_task_create();
      swift_release();
      sub_23F5ABB94();
      v3 += 40;
      v2 = v22 - 1;
    }
    while (v22 != 1);
    swift_bridgeObjectRelease();
  }
  sub_23F35D2E8(&qword_256E70370);
  sub_23F61C4CC();
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v18;
  *v18 = v0;
  v18[1] = sub_23F5A73FC;
  sub_23F36679C();
  sub_23F3D9BE4();
  return sub_23F61C4D8();
}

uint64_t sub_23F5A73FC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F50746C(v2);
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v0 + 328) = MEMORY[0x24BEE4AF8];
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F5A745C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 24);
    v4 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 48);
    *(_BYTE *)(v0 + 104) = v1 & 1;
    v6 = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 112) = v3;
    *(_QWORD *)(v0 + 120) = v2;
    *(_QWORD *)(v0 + 128) = v4;
    *(_QWORD *)(v0 + 136) = v5;
    sub_23F617BA0();
    sub_23F3668F4();
    sub_23F5A7944();
    sub_23F5AB650(v1, v3, v2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *(_QWORD *)(v0 + 328);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23F3C0670();
      sub_23F377FEC();
      v8 = v16;
    }
    v9 = *(_QWORD *)(v8 + 16);
    if (v9 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_23F377FEC();
      v8 = v17;
    }
    *(_QWORD *)(v0 + 336) = v8;
    *(_QWORD *)(v8 + 16) = v9 + 1;
    v10 = v8 + 48 * v9;
    *(_BYTE *)(v10 + 32) = v1 & 1;
    *(_QWORD *)(v10 + 40) = v3;
    *(_QWORD *)(v10 + 48) = v2;
    *(_QWORD *)(v10 + 56) = v4;
    *(_QWORD *)(v10 + 64) = v5;
    *(_QWORD *)(v10 + 72) = v6;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v11;
    *v11 = v0;
    v11[1] = sub_23F5A7618;
    sub_23F36679C();
    return sub_23F61C4D8();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 328);
    v14 = *(_QWORD **)(v0 + 208);
    sub_23F40B4F8(*(_QWORD *)(v0 + 264));
    *v14 = v13;
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    v15 = (uint64_t (*)(void))sub_23F384760();
    return v15();
  }
}

uint64_t sub_23F5A7618()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F50746C(v2);
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v0 + 328) = *(_QWORD *)(v0 + 336);
  sub_23F36679C();
  return sub_23F362AA0();
}

uint64_t sub_23F5A7670()
{
  uint64_t v0;

  sub_23F40B4F8(*(_QWORD *)(v0 + 264));
  sub_23F366708();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return sub_23F496B4C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5A76C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  v7[7] = a1;
  v8 = sub_23F61BDAC();
  v7[12] = v8;
  v7[13] = *(_QWORD *)(v8 - 8);
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F5A7740()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[8];
  sub_23F61BDA0();
  v2 = v1[3];
  v3 = v1[4];
  sub_23F35EA9C(v1, v2);
  v6 = (uint64_t (*)(_QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 24)
                                                                                  + *(_QWORD *)(v3 + 24));
  v4 = (_QWORD *)swift_task_alloc();
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_23F5A77E0;
  return v6(v0 + 2, v0[9], v0[10], v0[11], v2, v3);
}

uint64_t sub_23F5A77E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5A7838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t (*v14)(void);
  char v15;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v15 = *(_BYTE *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  sub_23F61BDA0();
  v9 = sub_23F61BD94();
  v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(v2, v3);
  v11 = sub_23F61BD94();
  result = ((uint64_t (*)(uint64_t, uint64_t))v10)(v1, v3);
  if (v9 < v11)
  {
    __break(1u);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 56);
    *(_BYTE *)v13 = v15;
    *(_QWORD *)(v13 + 8) = v5;
    *(_QWORD *)(v13 + 16) = v6;
    *(_QWORD *)(v13 + 24) = v7;
    *(_QWORD *)(v13 + 32) = v8;
    *(_QWORD *)(v13 + 40) = v9 - v11;
    swift_task_dealloc();
    sub_23F362CC8();
    v14 = (uint64_t (*)(void))sub_23F384760();
    return v14();
  }
  return result;
}

uint64_t sub_23F5A7900()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  sub_23F362CC8();
  sub_23F3666DC();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F5A7944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;

  sub_23F362ABC();
  v3 = v2;
  v4 = sub_23F3B1728();
  sub_23F3B19A8();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3D9CCC();
  if ((*(_BYTE *)v3 & 1) == 0)
  {
    v7 = *(_QWORD *)(v3 + 8);
    v6 = *(_QWORD *)(v3 + 16);
    v9 = *(_QWORD *)(v3 + 24);
    v8 = *(_QWORD *)(v3 + 32);
    sub_23F3F0F00();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v10 = sub_23F619E8C();
    v11 = sub_23F61C628();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = sub_23F366668();
      v16 = sub_23F366668();
      *(_DWORD *)v12 = 136315394;
      sub_23F617BA0();
      sub_23F37AE00(v7, v6, &v16);
      sub_23F61C790();
      sub_23F362C60();
      *(_WORD *)(v12 + 12) = 2080;
      if (v8)
        v13 = v9;
      else
        v13 = 6369134;
      v15 = v11;
      if (v8)
        v14 = v8;
      else
        v14 = 0xE300000000000000;
      sub_23F617BA0();
      sub_23F37AE00(v13, v14, &v16);
      sub_23F61C790();
      sub_23F384A80();
      sub_23F384A80();
      sub_23F384364();
      _os_log_impl(&dword_23F35A000, v10, v15, "%s error: %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F384A80();
    sub_23F384A80();
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v4);
  }
  sub_23F362948();
}

void ResponseGenerationResponseValidator.deinit()
{
  sub_23F5A7B48();
}

void sub_23F5A7B48()
{
  uint64_t v0;

  v0 = sub_23F38F984();
  sub_23F54DC38(*(_QWORD *)(v0 - 8));
  sub_23F5ABB68();
  sub_23F362B80();
}

uint64_t ResponseGenerationResponseValidator.__deallocating_deinit()
{
  return sub_23F5A7B98();
}

uint64_t sub_23F5A7B98()
{
  uint64_t v0;

  v0 = sub_23F38F984();
  sub_23F54DC38(*(_QWORD *)(v0 - 8));
  sub_23F5ABB68();
  sub_23F3F9B6C();
  return swift_deallocClassInstance();
}

uint64_t sub_23F5A7BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for ResponseValidationAssets();
  sub_23F5A7C68();
  if (v1)
  {
    v3 = sub_23F38F984();
    sub_23F5AB8A0(v3);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v4 = v2;
    v5 = sub_23F38F984();
    sub_23F5AB8A0(v5);
    *(_QWORD *)(v0 + 16) = v4;
  }
  return v0;
}

void sub_23F5A7C68()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  id v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  _BYTE *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  _BYTE *v81;
  void (*v82)(uint64_t, uint64_t);
  _BYTE *v83;
  _QWORD v84[3];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint8_t *v92;
  char *v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;

  sub_23F362C98();
  v92 = (uint8_t *)v2;
  v4 = v3;
  v97 = *MEMORY[0x24BDAC8D0];
  v5 = sub_23F619E98();
  v90 = *(_QWORD *)(v5 - 8);
  v91 = v5;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3834D0();
  v89 = v7;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3838E4();
  v88 = v9;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383780();
  v86 = v11;
  sub_23F39C56C();
  v12 = sub_23F6170CC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F38F964();
  v16 = v15 - v14;
  sub_23F35D2E8(&qword_256E70760);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F507858();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v84 - v19;
  v21 = sub_23F616E68();
  sub_23F3B19A8();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3838E4();
  v87 = v26;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F3838E4();
  v85 = v28;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F383780();
  v93 = (char *)v30;
  sub_23F5A8CFC();
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v84[2] = v4;
  v31(v16, v4, v12);
  sub_23F3E4510(v1);
  if (v34)
  {
    v32 = v0;
    sub_23F5A9144();
    sub_23F5ABACC();
    sub_23F3625D8(v1, &qword_256E70760);
    sub_23F3E4510((uint64_t)v20);
    if (!v34)
    {
      v33 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 32);
      goto LABEL_8;
    }
LABEL_7:
    sub_23F3625D8((uint64_t)v20, &qword_256E70760);
    sub_23F5AB680();
    v35 = sub_23F362D64();
    sub_23F5ABA2C(v35, v36);
    goto LABEL_21;
  }
  sub_23F5ABACC();
  v32 = v0;
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 32);
  v33(v20, v1, v21);
  sub_23F36196C((uint64_t)v20, 0, 1, v21);
  sub_23F3E4510((uint64_t)v20);
  if (v34)
    goto LABEL_7;
LABEL_8:
  v37 = (uint64_t)v93;
  v33(v93, (uint64_t)v20, v21);
  v38 = v92;
  v39 = sub_23F616E98();
  v92 = (uint8_t *)v40;
  if (v38)
  {

    v41 = v89;
    sub_23F619124();
    sub_23F5ABA20((uint64_t)v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16));
    v42 = v21;
    v43 = sub_23F619E8C();
    v44 = sub_23F61C628();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)sub_23F5AB8D4();
      *(_QWORD *)&v95 = sub_23F366668();
      *(_DWORD *)v45 = 136315138;
      v92 = v45 + 4;
      sub_23F3612C0((unint64_t *)&qword_256E730D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v46 = sub_23F61CC1C();
      sub_23F5ABA14(v46, v47);
      sub_23F58E330(v48);
      sub_23F61C790();
      sub_23F362984();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v42);
      sub_23F38485C(&dword_23F35A000, v43, v44, "Cannot load %s", v45);
      sub_23F3B17D4();
      sub_23F366530();
    }
    v66 = *(void (**)(char *, uint64_t))(v32 + 8);
    v66(v25, v42);

    sub_23F5ABB34(v41, *(uint64_t (**)(uint64_t, _QWORD))(v90 + 8));
    sub_23F5AB680();
    sub_23F362D64();
    sub_23F5AB928(v67, 1);
    v66((char *)v37, v42);
  }
  else
  {
    v49 = v39;
    v50 = (void *)objc_opt_self();
    v51 = (void *)sub_23F616EE0();
    *(_QWORD *)&v95 = 0;
    v52 = objc_msgSend(v50, sel_propertyListWithData_options_format_error_, v51, 0, 0, &v95);

    v53 = v32;
    if (v52)
    {
      v54 = (id)v95;
      sub_23F61C82C();
      swift_unknownObjectRelease();
      sub_23F35D2E8(&qword_256E7D850);
      v55 = sub_23F5ABB14();
      v56 = v87;
      if ((v55 & 1) != 0)
      {
        v88 = v94;
        v89 = v49;
        v57 = v86;
        sub_23F619124();
        v58 = v85;
        sub_23F5ABA20(v85, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 16));
        v59 = sub_23F619E8C();
        v60 = sub_23F61C610();
        if (os_log_type_enabled(v59, v60))
        {
          v61 = sub_23F5AB8D4();
          v87 = v53;
          v62 = (uint8_t *)v61;
          *(_QWORD *)&v95 = sub_23F366668();
          *(_DWORD *)v62 = 136315138;
          v84[1] = v62 + 4;
          sub_23F3612C0((unint64_t *)&qword_256E730D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
          v63 = sub_23F61CC1C();
          sub_23F5ABA14(v63, v64);
          sub_23F58E330(v65);
          sub_23F61C790();
          sub_23F362984();
          sub_23F5ABB60(v58);
          sub_23F38485C(&dword_23F35A000, v59, v60, "Loading response validation rules from %s", v62);
          sub_23F3B17D4();
          sub_23F366530();
        }
        v82 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
        sub_23F5ABB60(v58);

        (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v57, v91);
        sub_23F3686F8(0x73656C7572, 0xE500000000000000, v88, &v95);
        sub_23F362984();
        if (v96)
        {
          sub_23F35D2E8(&qword_256E70580);
          if ((sub_23F5ABB14() & 1) != 0)
          {
            sub_23F5A8574();
            sub_23F5ABB48();
            swift_bridgeObjectRelease();
            v82((uint64_t)v93, v21);
            goto LABEL_21;
          }
        }
        else
        {
          sub_23F3625D8((uint64_t)&v95, &qword_256E6FC98);
        }
        sub_23F5AB680();
        sub_23F362D64();
        sub_23F5AB928(v83, 3);
        sub_23F5ABB48();
        sub_23F5ABB60((uint64_t)v93);
        goto LABEL_21;
      }
    }
    else
    {
      v68 = (id)v95;
      v69 = v21;
      v70 = sub_23F616D9C();

      swift_willThrow();
      v71 = (void *)v70;
      v21 = v69;

      v56 = v87;
    }
    v72 = v88;
    sub_23F619124();
    sub_23F5ABA20(v56, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 16));
    v73 = v21;
    v74 = sub_23F619E8C();
    v75 = sub_23F61C628();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)sub_23F5AB8D4();
      *(_QWORD *)&v95 = sub_23F366668();
      v87 = v53;
      v89 = v49;
      *(_DWORD *)v76 = 136315138;
      sub_23F3612C0((unint64_t *)&qword_256E730D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v77 = sub_23F61CC1C();
      sub_23F5ABA14(v77, v78);
      sub_23F58E330(v79);
      sub_23F61C790();
      sub_23F362984();
      sub_23F5ABC30();
      sub_23F38485C(&dword_23F35A000, v74, v75, "Cannot read propery list from %s", v76);
      sub_23F3B17D4();
      sub_23F366530();
    }
    v80 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    sub_23F5ABC30();

    sub_23F5ABB34(v72, *(uint64_t (**)(uint64_t, _QWORD))(v90 + 8));
    sub_23F5AB680();
    sub_23F362D64();
    sub_23F5AB928(v81, 2);
    sub_23F3F3D0C(v49, (unint64_t)v92);
    v80(v37, v73);
  }
LABEL_21:
  sub_23F362870();
}

void ResponseValidationAssets.__allocating_init(locale:ruleNames:)()
{
  sub_23F57B974();
  sub_23F36682C();
  ResponseValidationAssets.init(locale:ruleNames:)();
  sub_23F362B80();
}

void ResponseValidationAssets.init(locale:ruleNames:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F57B974();
  type metadata accessor for ResponseValidationAssets();
  sub_23F5A8574();
  v2 = v1;
  sub_23F362D18();
  v3 = sub_23F38F984();
  sub_23F54DC38(*(_QWORD *)(v3 - 8));
  *(_QWORD *)(v0 + 16) = v2;
  sub_23F362B80();
}

void sub_23F5A8574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  __int128 v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  char v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _UNKNOWN **v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _UNKNOWN **v77;
  _BYTE v78[64];
  uint64_t v79;

  sub_23F362ABC();
  v1 = sub_23F3B1728();
  v71 = *(_QWORD *)(v1 - 8);
  v72 = v1;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3834D0();
  v67 = v3;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F383780();
  v68 = v5;
  sub_23F39C56C();
  v73 = *(_QWORD *)(sub_23F6170CC() - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3834D0();
  v63 = v7;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3838E4();
  v65 = v9;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F383780();
  sub_23F39C56C();
  v11 = type metadata accessor for ResponseGenerationPreferences();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F362838();
  v13 = sub_23F383738();
  sub_23F368E14(v13);
  v79 = v14;
  if (qword_256E6F0B8 == -1)
    goto LABEL_2;
LABEL_56:
  swift_once();
LABEL_2:
  v15 = sub_23F361498(v11, (uint64_t)qword_256E803F8);
  sub_23F3C08CC();
  sub_23F5ABA4C();
  v16 = v0 + *(int *)(v11 + 56);
  sub_23F35D2E8(&qword_256E7CBF0);
  sub_23F617C48();
  sub_23F5ABA3C();
  sub_23F368E14(v16);
  sub_23F3602F4(v17);
  sub_23F5ABA4C();
  v18 = v0 + *(int *)(v11 + 60);
  sub_23F617C48();
  sub_23F5ABA3C();
  sub_23F368E14(v18);
  v19 = &v79;
  sub_23F5AA298(v20);
  sub_23F362D18();
  v22 = 0;
  v69 = v79 + 56;
  v74 = v79;
  v23 = 1 << *(_BYTE *)(v79 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & *(_QWORD *)(v79 + 56);
  v70 = (unint64_t)(v23 + 63) >> 6;
  v64 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v21 = 136315138;
  v66 = v21;
  v62 = MEMORY[0x24BEE4AD8] + 8;
LABEL_5:
  v0 = v68;
  if (v25)
  {
LABEL_6:
    v26 = __clz(__rbit64(v25));
    v25 &= v25 - 1;
    v27 = v26 | (v22 << 6);
    goto LABEL_21;
  }
  while (1)
  {
    v28 = __OFADD__(v22++, 1);
    if (v28)
    {
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    if (v22 >= v70)
      goto LABEL_53;
    v29 = *(_QWORD *)(v69 + 8 * v22);
    if (!v29)
      break;
LABEL_20:
    v25 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v22 << 6);
LABEL_21:
    v32 = (uint64_t *)(*(_QWORD *)(v74 + 48) + 16 * v27);
    v33 = *v32;
    v34 = v32[1];
    sub_23F5AB964();
    v37 = v33 == v36 && v34 == v35;
    if (v37 || (sub_23F5ABBD0(), (sub_23F5AB884() & 1) != 0))
    {
      sub_23F5AB8B4(*(uint64_t (**)(_QWORD, uint64_t))(v73 + 16));
      type metadata accessor for BadGrammar(0);
      v38 = sub_23F5AB890();
      sub_23F384A00();
      v11 = 0;
      BadGrammar.init(_:)();
      sub_23F38458C();
      v56 = &protocol witness table for BadGrammar;
      goto LABEL_48;
    }
    sub_23F5ABAA4();
    v40 = v33 == v39 && v34 == 0xE600000000000000;
    if (v40 || (sub_23F5A1A20(), (sub_23F5AB884() & 1) != 0))
    {
      sub_23F5AB8B4(*(uint64_t (**)(_QWORD, uint64_t))(v73 + 16));
      type metadata accessor for Unsafe(0);
      v38 = sub_23F5AB890();
      sub_23F384A00();
      v41 = v11;
      v11 = 0;
      Unsafe.init(_:)(v41);
      sub_23F38458C();
      v56 = &protocol witness table for Unsafe;
      goto LABEL_48;
    }
    sub_23F5ABBA8();
    v43 = v33 == v42 && v34 == 0xEA00000000006465;
    if (v43 || (sub_23F5A3B50(), (sub_23F5AB884() & 1) != 0))
    {
      sub_23F5AB8B4(*(uint64_t (**)(_QWORD, uint64_t))(v73 + 16));
      type metadata accessor for Ungrounded(0);
      v38 = sub_23F5AB890();
      sub_23F384A00();
      v44 = v11;
      v11 = 0;
      Ungrounded.init(_:)(v44, v45, v46, v47, v48, v49, v50, v51, v60, v61, v62, v63, v64, v65, v66, *((uint64_t *)&v66 + 1), v67, v68, v69,
        v70);
      sub_23F38458C();
      v56 = &protocol witness table for Ungrounded;
LABEL_48:
      v76 = v15;
      v77 = v56;
      *(_QWORD *)&v75 = v38;
      sub_23F362678(&v75, (uint64_t)v78);
      sub_23F361418((uint64_t)v78, (uint64_t)&v75);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F5ABA00();
        v64 = v58;
      }
      v19 = *(NSObject **)(v64 + 16);
      v57 = *(_QWORD *)(v64 + 24);
      if ((unint64_t)v19 >= v57 >> 1)
      {
        sub_23F493460(v57);
        sub_23F377D18();
        v64 = v59;
      }
      *(_QWORD *)(v64 + 16) = (char *)&v19->isa + 1;
      sub_23F362678(&v75, v64 + 40 * (_QWORD)v19 + 32);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v78);
      goto LABEL_5;
    }
    sub_23F384A00();
    sub_23F58E328();
    sub_23F384A00();
    sub_23F496C44();
    v52 = sub_23F3F0EEC();
    if (sub_23F384458(v52))
    {
      v53 = sub_23F366668();
      *(_QWORD *)&v75 = sub_23F366668();
      *(_DWORD *)v53 = v66;
      sub_23F384A00();
      sub_23F56E8BC(v33, v54, (uint64_t *)&v75);
      *(_QWORD *)(v53 + 4) = v55;
      sub_23F5AB91C();
      sub_23F38485C(&dword_23F35A000, v19, (os_log_type_t)v11, "Unknown rule: %s", (uint8_t *)v53);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F384A80();
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v68, v72);
    if (v25)
      goto LABEL_6;
  }
  sub_23F5ABA94();
  if (v30 == v28)
    goto LABEL_53;
  sub_23F5ABA5C();
  if (v29)
    goto LABEL_19;
  sub_23F5ABA94();
  if (v30 == v28)
    goto LABEL_53;
  sub_23F5ABA5C();
  if (v29)
  {
LABEL_19:
    v22 = v31;
    goto LABEL_20;
  }
  sub_23F5ABA94();
  if (v30 != v28)
  {
    sub_23F5ABA5C();
    if (!v29)
    {
      while (1)
      {
        v22 = v31 + 1;
        if (__OFADD__(v31, 1))
          goto LABEL_55;
        if (v22 >= v70)
          goto LABEL_53;
        v29 = *(_QWORD *)(v69 + 8 * v22);
        ++v31;
        if (v29)
          goto LABEL_20;
      }
    }
    goto LABEL_19;
  }
LABEL_53:
  swift_release();
  sub_23F362948();
}

void sub_23F5A8CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _WORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;

  sub_23F362ABC();
  v55 = v2;
  v3 = sub_23F3B1728();
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v6 = sub_23F616DCC();
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F5AB9A8(v8, v40);
  sub_23F35D2E8(&qword_256E70760);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  v54 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v53 = sub_23F616E68();
  v42 = *(_QWORD *)(v53 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  v41 = v12;
  sub_23F39C56C();
  v13 = sub_23F617054();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F362B98();
  v15 = sub_23F619F04();
  v16 = *(_QWORD *)(v15 - 8);
  v49 = v15;
  v50 = v16;
  v17 = v16;
  MEMORY[0x24BDAC7A8](v15);
  sub_23F3E2718();
  v18 = sub_23F61A15C();
  v51 = *(_QWORD *)(v18 - 8);
  v52 = v18;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F362930();
  sub_23F35D2E8(&qword_256E730C8);
  sub_23F362850();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v40 - v24;
  sub_23F61A150();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v1, *MEMORY[0x24BE54B68], v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v0, *MEMORY[0x24BDCEBA8], v13);
  sub_23F617018();
  sub_23F617024();
  sub_23F362984();
  sub_23F383D74(v0, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  sub_23F61A144();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v1, v49);
  sub_23F40B4F8(v51);
  sub_23F5AB6BC();
  v26 = (uint8_t *)sub_23F61B38C();
  if (sub_23F36195C((uint64_t)v23, 1, (uint64_t)v26) == 1)
  {
    sub_23F3625D8((uint64_t)v23, &qword_256E730C8);
    v27 = v54;
    sub_23F598B34(v54, 1);
  }
  else
  {
    v27 = v54;
    sub_23F61B380();
    sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(*((_QWORD *)v26 - 1) + 8));
    if (sub_23F36195C(v27, 1, v53) != 1)
    {
      v33 = v41;
      v34 = v42;
      v35 = sub_23F4412AC();
      v36(v35);
      v56 = 0xD00000000000002ALL;
      v57 = 0x800000023F63B5A0;
      v38 = v43;
      v37 = v44;
      v39 = v45;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v44 + 104))(v43, *MEMORY[0x24BDCD7A0], v45);
      sub_23F38813C();
      v32 = v55;
      sub_23F616E44();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
      swift_bridgeObjectRelease();
      sub_23F362A28(v33, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
      sub_23F3625D8((uint64_t)v25, &qword_256E730C8);
      v31 = 0;
      goto LABEL_8;
    }
  }
  sub_23F3625D8(v27, &qword_256E70760);
  sub_23F619124();
  v28 = sub_23F619E8C();
  v29 = sub_23F61C610();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (_WORD *)sub_23F366668();
    sub_23F3F0EF4(v30);
    _os_log_impl(&dword_23F35A000, v28, v29, "ResponseValidation OTA assets not available, will use built in asset.", v26, 2u);
    sub_23F366530();
  }

  sub_23F40B4F8(v47);
  sub_23F3625D8((uint64_t)v25, &qword_256E730C8);
  v31 = 1;
  v32 = v55;
LABEL_8:
  sub_23F598B34(v32, v31);
  sub_23F362948();
}

void sub_23F5A9144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  id v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;

  sub_23F362ABC();
  v4 = v3;
  v5 = sub_23F3B1728();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3D9CCC();
  v7 = sub_23F616E68();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F383EC4();
  sub_23F35D2E8(&qword_256E70760);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F362930();
  type metadata accessor for ResponseValidationAssets();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = sub_23F5AA774(0xD000000000000024, 0x800000023F63B570, 0x7473696C70, 0xE500000000000000, v11);

  if (v12)
  {
    sub_23F616E14();

    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
    v13(v1, v2, v7);
    sub_23F41C5B8(v1, 0);
    if (sub_23F36195C(v1, 1, v7) != 1)
    {
      v13(v4, v1, v7);
      v14 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    sub_23F41C5B8(v1, 1);
  }
  sub_23F3625D8(v1, &qword_256E70760);
  sub_23F3F0F00();
  v15 = sub_23F619E8C();
  v16 = sub_23F61C628();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)sub_23F366668();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_23F35A000, v15, v16, "Failed to load built in ResponseGenerationResponseValidation.plist", v17, 2u);
    sub_23F366530();
  }

  sub_23F362A28(v0, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v14 = 1;
LABEL_8:
  sub_23F41C5B8(v4, v14);
  sub_23F362948();
}

uint64_t ResponseValidationAssets.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

id sub_23F5A9360(uint64_t a1)
{
  return sub_23F5A936C(a1, &qword_256E80418);
}

id sub_23F5A936C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v8;

  sub_23F35D2E8(&qword_256E70130);
  v3 = sub_23F36682C();
  *(_OWORD *)(v3 + 16) = xmmword_23F61E980;
  v4 = (void *)*MEMORY[0x24BDDFD10];
  v8 = (id)*MEMORY[0x24BDDFCF8];
  v5 = *MEMORY[0x24BDDFCF8];
  *(_QWORD *)(v3 + 32) = *MEMORY[0x24BDDFD10];
  *(_QWORD *)(v3 + 40) = v5;
  *a2 = v3;
  v6 = v4;
  return v8;
}

uint64_t sub_23F5A93DC()
{
  uint64_t result;

  type metadata accessor for NLTaggerAssets();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x24BEE4B08];
  qword_256E80420 = result;
  return result;
}

BOOL sub_23F5A9410(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  id v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;

  v2 = a1;
  v3 = objc_msgSend((id)objc_opt_self(), sel_availableTagSchemesForUnit_language_, 0, a1);
  type metadata accessor for NLTagScheme(0);
  v4 = sub_23F61C3DC();

  if (qword_256E6F0E0 != -1)
    goto LABEL_53;
  while (1)
  {
    v5 = qword_256E80418;
    v6 = *(_QWORD *)(qword_256E80418 + 16);
    if (!v6)
      break;
    v41 = v2;
    v2 = *(void **)(v4 + 16);
    v44 = qword_256E80418 + 32;
    sub_23F617BA0();
    v7 = 0;
    v8 = MEMORY[0x24BEE4AF8];
    v42 = v5;
    v43 = v6;
    while (v7 < *(_QWORD *)(v5 + 16))
    {
      v9 = *(void **)(v44 + 8 * v7);
      if (!v2)
      {
        v15 = v9;
        goto LABEL_14;
      }
      v10 = sub_23F61C10C();
      if (v10 == sub_23F5AB990() && v1 == v11)
      {
        sub_23F384A80();
        goto LABEL_21;
      }
      v13 = sub_23F5AB884();
      v14 = v9;
      sub_23F617BA0();
      sub_23F384364();
      sub_23F38458C();
      if ((v13 & 1) == 0)
      {
        if (v2 == (void *)1)
          goto LABEL_24;
        v18 = sub_23F61C10C();
        if (v18 == sub_23F5AB990() && v1 == v19)
        {

          sub_23F362C60();
          sub_23F384A80();
          goto LABEL_12;
        }
        v21 = sub_23F5AB884();
        sub_23F384364();
        sub_23F38458C();
        if ((v21 & 1) == 0)
        {
          if (v2 != (void *)2)
          {
            v40 = v14;
            v22 = 6;
            while (1)
            {
              v23 = (void *)(v22 - 3);
              if (__OFADD__(v22 - 4, 1))
                goto LABEL_52;
              v24 = sub_23F61C10C();
              if (v24 == sub_23F5AB990() && v1 == v25)
                break;
              v27 = sub_23F5AB884();
              sub_23F384364();
              sub_23F38458C();
              if ((v27 & 1) != 0)
              {

                sub_23F362C60();
                goto LABEL_43;
              }
              ++v22;
              if (v23 == v2)
                goto LABEL_24;
            }

            sub_23F362C60();
            sub_23F384A80();
LABEL_43:
            v5 = v42;
            goto LABEL_19;
          }
LABEL_24:
          sub_23F362C60();
          v5 = v42;
LABEL_14:
          v16 = v9;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F3C0670();
            sub_23F377CFC();
            v8 = v28;
          }
          v17 = *(_QWORD *)(v8 + 16);
          if (v17 >= *(_QWORD *)(v8 + 24) >> 1)
          {
            sub_23F377CFC();
            v8 = v29;
          }
          *(_QWORD *)(v8 + 16) = v17 + 1;
          *(_QWORD *)(v8 + 8 * v17 + 32) = v16;

LABEL_19:
          v6 = v43;
          goto LABEL_21;
        }
      }

      sub_23F362C60();
LABEL_12:
      v5 = v42;
LABEL_21:
      if (++v7 == v6)
      {
        sub_23F362C60();
        v2 = v41;
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    swift_once();
  }
  v8 = MEMORY[0x24BEE4AF8];
LABEL_45:
  sub_23F362C60();
  v30 = *(_QWORD *)(v8 + 16);
  if (v30)
  {
    sub_23F3C08CC();
    sub_23F383738();
    v31 = sub_23F3C85C0();
    v33 = sub_23F3E30C8(v31, v32);
    sub_23F362984();
    if ((v33 & 1) == 0)
    {
      swift_beginAccess();
      v34 = v2;
      sub_23F472900();
      swift_endAccess();

      v35 = *(_QWORD *)(v8 + 16);
      if (v35)
      {
        v36 = 0;
        do
        {
          v37 = *(void **)(v8 + 8 * v36++ + 32);
          v38 = v37;
          sub_23F3C85C0();
          sub_23F5A97D8();

        }
        while (v35 != v36);
      }
    }
  }
  sub_23F362D08();
  return v30 == 0;
}

uint64_t sub_23F5A97D8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  id v7;

  sub_23F51BBD4();
  sub_23F35D2E8(&qword_256E717A8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F362B98();
  v4 = sub_23F61C490();
  sub_23F36196C(v2, 1, 1, v4);
  v5 = (_QWORD *)sub_23F36682C();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v1;
  v5[5] = v0;
  v6 = v1;
  v7 = v0;
  sub_23F586634(v2, (uint64_t)&unk_256E7D828, (uint64_t)v5);
  return swift_release();
}

uint64_t sub_23F5A9878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[24] = a4;
  v5[25] = a5;
  v6 = sub_23F619E98();
  v5[26] = v6;
  v5[27] = *(_QWORD *)(v6 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F5A98F4()
{
  _QWORD *v0;
  os_log_type_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;

  v2 = (void *)v0[24];
  v3 = (void *)v0[25];
  sub_23F3F0F00();
  v4 = v2;
  v5 = v3;
  v6 = v4;
  v7 = v5;
  v8 = sub_23F619E8C();
  v9 = sub_23F61C640();
  if (sub_23F3B1E8C(v9))
  {
    v10 = (void *)v0[25];
    v11 = (void *)v0[24];
    v12 = sub_23F366668();
    v31 = sub_23F366668();
    *(_DWORD *)v12 = 136315394;
    v13 = sub_23F61C10C();
    sub_23F37AE00(v13, v14, &v31);
    v0[22] = v15;
    sub_23F61C790();
    sub_23F362D18();

    *(_WORD *)(v12 + 12) = 2080;
    v16 = sub_23F61C10C();
    sub_23F37AE00(v16, v17, &v31);
    v0[23] = v18;
    sub_23F61C790();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23F35A000, v8, v1, "Missing NL asset %s/%s", (uint8_t *)v12, 0x16u);
    sub_23F5AB99C();
    sub_23F366530();
  }
  v19 = v0[30];
  v20 = v0[26];
  v21 = v0[27];
  v23 = (void *)v0[24];
  v22 = (void *)v0[25];

  v24 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v24(v19, v20);
  v0[31] = v24;
  v26 = v0[24];
  v25 = v0[25];
  v27 = (void *)objc_opt_self();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_23F5A9B58;
  v28 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v29 = v0 + 10;
  v29[1] = 0x40000000;
  v29[2] = sub_23F5A9FF4;
  v29[3] = &unk_250FDE1F0;
  v29[4] = v28;
  objc_msgSend(v27, sel_requestAssetsForLanguage_tagScheme_completionHandler_, v26, v25, v29);
  return swift_continuation_await();
}

uint64_t sub_23F5A9B58()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 256) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5A9BAC()
{
  uint64_t v0;
  os_log_type_t v1;
  NSObject *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  os_log_type_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v35;

  v2 = *(NSObject **)(v0 + 232);
  v3 = *(void **)(v0 + 192);
  v4 = *(void **)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 120);
  sub_23F3F0F00();
  v6 = v3;
  v7 = v4;
  v8 = v6;
  v9 = v7;
  sub_23F619E8C();
  v10 = sub_23F3F0EEC();
  if (sub_23F3B1E8C(v10))
  {
    v11 = *(void **)(v0 + 200);
    v12 = *(void **)(v0 + 192);
    v35 = v5;
    v13 = sub_23F366668();
    sub_23F366668();
    *(_DWORD *)v13 = 136315650;
    v14 = sub_23F61C10C();
    sub_23F5ABC18(v14, v15, v16, v17, v18, v19, v20, v21);
    *(_QWORD *)(v0 + 152) = v22;
    sub_23F61C790();
    sub_23F362D08();

    *(_WORD *)(v13 + 12) = 2080;
    v23 = sub_23F61C10C();
    sub_23F5ABC18(v23, v24, v25, v26, v27, v28, v29, v30);
    *(_QWORD *)(v0 + 160) = v31;
    sub_23F61C790();
    sub_23F362D08();

    *(_WORD *)(v13 + 22) = 2048;
    *(_QWORD *)(v0 + 168) = v35;
    sub_23F61C790();
    _os_log_impl(&dword_23F35A000, v2, v1, "NLTagger.requestedAsset(%s, %s) -> %ld", (uint8_t *)v13, 0x20u);
    sub_23F5AB99C();
    sub_23F366530();
  }
  v32 = *(void **)(v0 + 200);
  v33 = *(void **)(v0 + 192);

  sub_23F55156C();
  sub_23F5ABC00();
  sub_23F362CC8();
  sub_23F3666DC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

#error "23F5A9E64: call analysis failed (funcsize=132)"

uint64_t sub_23F5A9FF4(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
    return sub_23F5AA030(*(_QWORD *)(a1 + 32), (uint64_t)a3);
  else
    return sub_23F5AA080(*(_QWORD *)(a1 + 32), a2);
}

uint64_t sub_23F5AA030(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  sub_23F35D2E8(&qword_256E70370);
  swift_allocError();
  *v3 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_23F5AA080(uint64_t a1, uint64_t a2)
{
  **(_QWORD **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

uint64_t sub_23F5AA094()
{
  return Unsafe.model.getter();
}

void *sub_23F5AA0B4()
{
  return &unk_256E7D0D8;
}

uint64_t sub_23F5AA0C0()
{
  sub_23F5AB830();
  return sub_23F61CCAC();
}

uint64_t sub_23F5AA0E8()
{
  sub_23F5AB830();
  return sub_23F61CCA0();
}

uint64_t sub_23F5AA110()
{
  uint64_t v0;

  v0 = *(_QWORD *)sub_23F5AA0B4();
  sub_23F617BA0();
  return v0;
}

unint64_t sub_23F5AA140()
{
  unint64_t result;

  result = qword_256E7D108;
  if (!qword_256E7D108)
  {
    result = MEMORY[0x242670A44](&unk_23F62F8C8, &unk_250FDE1B8);
    atomic_store(result, (unint64_t *)&qword_256E7D108);
  }
  return result;
}

unint64_t sub_23F5AA17C()
{
  unint64_t result;

  result = qword_256E7D118;
  if (!qword_256E7D118)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256E7D118);
  }
  return result;
}

uint64_t sub_23F5AA1B8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a3 == a7 && a4 == a8 && a1 >> 16 == a5 >> 16 && a2 >> 16 == a6 >> 16)
    return 1;
  else
    return sub_23F61CC10() & 1;
}

uint64_t sub_23F5AA228(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  BOOL v7;

  if ((a6 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a6) & 0xF;
  else
    v6 = a5 & 0xFFFFFFFFFFFFLL;
  v7 = a3 == a5 && a4 == a6;
  if (v7 && !(a1 >> 16) && a2 >> 16 == v6)
    return 1;
  else
    return sub_23F61CC10() & 1;
}

uint64_t sub_23F5AA298(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = sub_23F617BA0();
  v8 = 0;
  if (!v6)
    goto LABEL_6;
LABEL_5:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v15 = *v14;
    v16 = v14[1];
    sub_23F617BA0();
    sub_23F5AA430(v15, v16);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_5;
LABEL_6:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_21:
    v6 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v7)
    return swift_release();
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23F5AA430(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_23F61CD30();
  sub_23F617BA0();
  sub_23F61C22C();
  v6 = sub_23F61CD60();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_23F61CC64() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_23F61CC64() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23F479780();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_23F5AA5BC(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_23F5AA5BC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23F61C85C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_23F61CD30();
        sub_23F617BA0();
        sub_23F61C22C();
        v10 = sub_23F61CD60();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= (uint64_t)v11)
          {
LABEL_15:
            v14 = *(_QWORD *)(v3 + 48);
            v15 = (_OWORD *)(v14 + 16 * v2);
            v16 = (_OWORD *)(v14 + 16 * v6);
            v17 = v2 != v6 || v15 >= v16 + 1;
            v2 = v6;
            if (v17)
            {
              *v15 = *v16;
              v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= (uint64_t)v11)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

id sub_23F5AA774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)sub_23F61C0E8();
  sub_23F362C60();
  v7 = (void *)sub_23F61C0E8();
  sub_23F362984();
  v8 = objc_msgSend(a5, sel_URLForResource_withExtension_, v6, v7);

  return v8;
}

void sub_23F5AA7FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_23F61C0E8();
  objc_msgSend(a3, sel_setString_, v4);

}

uint64_t type metadata accessor for ResponseValidationAssets()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for Ungrounded(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7D3B8);
}

uint64_t type metadata accessor for Unsafe(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7D230);
}

uint64_t type metadata accessor for BadGrammar(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7D490);
}

uint64_t sub_23F5AA89C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  sub_23F57B974();
  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = swift_task_alloc();
  v9 = (_QWORD *)sub_23F54DBCC(v8);
  *v9 = v3;
  v9[1] = sub_23F362820;
  return sub_23F5A7064(v2, v0, v4, v5, v7, v6);
}

uint64_t initializeWithCopy for ResponseValidationRuleResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for ResponseValidationRuleResult(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ResponseValidationRuleResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseValidationRuleResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseValidationRuleResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResponseValidationRuleResult()
{
  sub_23F362C18();
}

uint64_t _s30IntelligenceFlowPlannerRuntime28ResponseValidationRuleResultVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ResponseValidationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

uint64_t assignWithCopy for ResponseValidationResult(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for ResponseValidationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseValidationResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseValidationResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResponseValidationResult()
{
  sub_23F362C18();
}

uint64_t initializeBufferWithCopyOfBuffer for ResponseValidationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61ADB0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for ResponseValidationContext(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61ADB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for ResponseValidationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61ADB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for ResponseValidationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61ADB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for ResponseValidationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61ADB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for ResponseValidationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61ADB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseValidationContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5AAE18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F57B9D0();
  return sub_23F36195C(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ResponseValidationContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5AAE54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F57B9D0();
  return sub_23F36196C(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ResponseValidationContext(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7D1C8);
}

uint64_t sub_23F5AAE9C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61ADB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of ResponseValidationRule.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ResponseValidationRule.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ResponseValidationRule.validate(text:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v23;

  sub_23F432AC4();
  v23 = **(int **)(v11 + 24) + *(_QWORD *)(v11 + 24);
  v12 = swift_task_alloc();
  v13 = (_QWORD *)sub_23F54DBCC(v12);
  *v13 = v10;
  v13[1] = sub_23F362820;
  sub_23F5ABA6C();
  return v20(v14, v15, v16, v17, v18, v19, v20, v21, v23, a10);
}

uint64_t sub_23F5AAFB0()
{
  return type metadata accessor for Unsafe(0);
}

uint64_t method lookup function for Unsafe()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_23F5AAFC8()
{
  return type metadata accessor for Unsafe._ClientInfo(0);
}

uint64_t sub_23F5AAFD0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F617BC4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23F5AB054()
{
  return type metadata accessor for Ungrounded(0);
}

uint64_t sub_23F5AB05C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F6170CC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for Ungrounded()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Ungrounded.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_23F5AB114()
{
  return type metadata accessor for BadGrammar(0);
}

uint64_t sub_23F5AB11C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F6170CC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BadGrammar()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BadGrammar.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t type metadata accessor for SearchCountsMismatchRule()
{
  return objc_opt_self();
}

uint64_t method lookup function for SearchCountsMismatchRule()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SearchCountsMismatchRule.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_23F5AB210()
{
  return type metadata accessor for ResponseGenerationResponseValidator(0);
}

uint64_t type metadata accessor for ResponseGenerationResponseValidator(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E7D5F8);
}

uint64_t sub_23F5AB22C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F6170CC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ResponseGenerationResponseValidator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResponseGenerationResponseValidator.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ResponseGenerationResponseValidator.__allocating_init(locale:assets:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for ResponseValidationAssets()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResponseValidationAssets.__allocating_init(locale:ruleNames:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for NLTaggerAssets()
{
  return objc_opt_self();
}

uint64_t sub_23F5AB304(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F5AB350 + 4 * byte_23F62F4F7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F5AB384 + 4 * byte_23F62F4F2[v4]))();
}

uint64_t sub_23F5AB384(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5AB38C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5AB394);
  return result;
}

uint64_t sub_23F5AB3A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5AB3A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F5AB3AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5AB3B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ResponseValidationError()
{
  sub_23F362C18();
}

unint64_t sub_23F5AB3D4()
{
  unint64_t result;

  result = qword_256E7D810;
  if (!qword_256E7D810)
  {
    result = MEMORY[0x242670A44](&unk_23F62F858, &unk_250FDE1B8);
    atomic_store(result, (unint64_t *)&qword_256E7D810);
  }
  return result;
}

unint64_t sub_23F5AB410()
{
  unint64_t result;

  result = qword_256E7D818;
  if (!qword_256E7D818)
  {
    result = MEMORY[0x242670A44](&unk_23F62F7D8, &unk_250FDE1B8);
    atomic_store(result, &qword_256E7D818);
  }
  return result;
}

uint64_t sub_23F5AB44C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23F5AB480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_23F54DBCC(v2);
  v4 = sub_23F5AB9D0(v3);
  return sub_23F5A9878(v4, v5, v6, v7, v1);
}

void sub_23F5AB4E0()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_23F51BBD4();
  v1 = v0(0);
  sub_23F38F920(v1);
  sub_23F362928();
}

uint64_t sub_23F5AB508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ResponseValidationContext(0) - 8) + 80);
  v2 = (v1 + 88) & ~v1;
  swift_unknownObjectRelease();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 32);
  swift_bridgeObjectRelease();
  v3 = sub_23F57B9D0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_23F5AB58C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ResponseValidationContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5AB5D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F432AC4();
  type metadata accessor for ResponseValidationContext(0);
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23F54DBCC(v0);
  sub_23F5AB9D0(v1);
  sub_23F5ABA6C();
  return sub_23F5A76C8(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_23F5AB650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23F5AB680()
{
  unint64_t result;

  result = qword_256E7D848;
  if (!qword_256E7D848)
  {
    result = MEMORY[0x242670A44](&unk_23F62F9B0, &type metadata for ResponseValidationAssets.responseValidationAssetsInitError);
    atomic_store(result, (unint64_t *)&qword_256E7D848);
  }
  return result;
}

void sub_23F5AB6BC()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23F51BBD4();
  v1 = sub_23F35D2E8(v0);
  sub_23F38F920(v1);
  sub_23F362928();
}

void sub_23F5AB6E4(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_23F35EB74(a2);
    atomic_store(MEMORY[0x242670A44](MEMORY[0x24BEE7460], v3), a1);
  }
  sub_23F362928();
}

uint64_t storeEnumTagSinglePayload for ResponseValidationAssets.responseValidationAssetsInitError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23F5AB76C + 4 * byte_23F62F501[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23F5AB7A0 + 4 * byte_23F62F4FC[v4]))();
}

uint64_t sub_23F5AB7A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5AB7A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5AB7B0);
  return result;
}

uint64_t sub_23F5AB7BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5AB7C4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23F5AB7C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5AB7D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseValidationAssets.responseValidationAssetsInitError()
{
  return &type metadata for ResponseValidationAssets.responseValidationAssetsInitError;
}

unint64_t sub_23F5AB7F4()
{
  unint64_t result;

  result = qword_256E7D880;
  if (!qword_256E7D880)
  {
    result = MEMORY[0x242670A44](&unk_23F62F988, &type metadata for ResponseValidationAssets.responseValidationAssetsInitError);
    atomic_store(result, (unint64_t *)&qword_256E7D880);
  }
  return result;
}

unint64_t sub_23F5AB830()
{
  unint64_t result;

  result = qword_256E7D888;
  if (!qword_256E7D888)
  {
    result = MEMORY[0x242670A44](&unk_23F62F908, &type metadata for ResponseValidationAssets.responseValidationAssetsInitError);
    atomic_store(result, (unint64_t *)&qword_256E7D888);
  }
  return result;
}

uint64_t dispatch thunk of Unsafe.__allocating_init(_:)()
{
  return dispatch thunk of ResponseGenerationResponseValidator.__allocating_init(_:)();
}

uint64_t sub_23F5AB884()
{
  return sub_23F61CC64();
}

uint64_t sub_23F5AB890()
{
  return swift_allocObject();
}

uint64_t sub_23F5AB8A0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_23F5AB8B4@<X0>(uint64_t (*a1)(_QWORD, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(*(_QWORD *)(v1 - 256), v2);
}

uint64_t sub_23F5AB8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F5AB8D4()
{
  return swift_slowAlloc();
}

uint64_t sub_23F5AB8FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3[7] = v2;
  v3[4] = a1;
  v3[5] = v1;
  return sub_23F61CD0C();
}

uint64_t sub_23F5AB91C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F5AB928@<X0>(_BYTE *a1@<X1>, char a2@<W8>)
{
  *a1 = a2;
  return swift_willThrow();
}

uint64_t sub_23F5AB934()
{
  return swift_task_dealloc();
}

uint64_t sub_23F5AB94C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t sub_23F5AB990()
{
  return sub_23F61C10C();
}

uint64_t sub_23F5AB99C()
{
  return swift_arrayDestroy();
}

void sub_23F5AB9A8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F5AB9C4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F5AB9D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

void sub_23F5AB9EC()
{
  sub_23F377218();
}

void sub_23F5ABA00()
{
  sub_23F377D18();
}

void sub_23F5ABA14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 120));
}

uint64_t sub_23F5ABA20@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_23F5ABA2C(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

void sub_23F5ABA3C()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_23F3663AC(v0, v1);
}

void sub_23F5ABA4C()
{
  sub_23F5AB4E0();
}

uint64_t sub_23F5ABA84()
{
  return sub_23F61BFEC();
}

uint64_t sub_23F5ABAB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = (v1 - 32) | 0x8000000000000000;
  return v2;
}

uint64_t sub_23F5ABACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23F5ABADC(uint64_t a1)
{
  unint64_t v1;

  return sub_23F4F2360(a1, v1);
}

void sub_23F5ABB04()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_23F3663AC(v1, v0);
}

uint64_t sub_23F5ABB14()
{
  return swift_dynamicCast();
}

void sub_23F5ABB24()
{
  sub_23F5AB4E0();
}

uint64_t sub_23F5ABB34@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 152));
}

uint64_t sub_23F5ABB48()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3F3D0C(v0, *(_QWORD *)(v1 - 144));
}

void sub_23F5ABB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_23F37AE00(a1, a2, (uint64_t *)va);
}

uint64_t sub_23F5ABB60(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F5ABB68()
{
  return swift_release();
}

uint64_t sub_23F5ABB74()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5ABB88()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3754D4(v1, v0);
}

void sub_23F5ABB94()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23F3625D8(v0, v1);
}

void sub_23F5ABBA0()
{
  void *v0;

}

void sub_23F5ABBBC()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = 1;
}

uint64_t sub_23F5ABBD0()
{
  return 0x6D6D617247646142;
}

void sub_23F5ABBE4()
{
  void *v0;

}

void sub_23F5ABBF0(uint64_t a1@<X8>)
{
  uint64_t v1;

}

uint64_t sub_23F5ABBF8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5ABC00()
{
  return swift_task_dealloc();
}

uint64_t sub_23F5ABC0C()
{
  return sub_23F617C48();
}

void sub_23F5ABC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_23F37AE00(a1, a2, (uint64_t *)va);
}

uint64_t sub_23F5ABC24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t sub_23F5ABC30()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t sub_23F5ABC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v7 = sub_23F35D2E8(&qword_256E719D0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F618E54();
  v30 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v29 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v27 = (char *)&v24 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v15 = *(_QWORD *)(sub_23F61B2E4() - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v28 = *(_QWORD *)(v15 + 72);
    v24 = a1;
    sub_23F617BA0();
    v17 = MEMORY[0x24BEE4AF8];
    v25 = a2;
    v26 = a3;
    while (1)
    {
      sub_23F5F5AC8(a2, a3, (uint64_t)v9);
      if (v3)
        break;
      if (sub_23F36195C((uint64_t)v9, 1, v10) == 1)
      {
        sub_23F3625D8((uint64_t)v9, &qword_256E719D0);
      }
      else
      {
        v18 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
        v19 = v27;
        v18(v27, v9, v10);
        v18(v29, v19, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37808C();
          v17 = v21;
        }
        v20 = *(_QWORD *)(v17 + 16);
        if (v20 >= *(_QWORD *)(v17 + 24) >> 1)
        {
          sub_23F37808C();
          v17 = v22;
        }
        *(_QWORD *)(v17 + 16) = v20 + 1;
        v18((char *)(v17+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v20), v29, v10);
        a2 = v25;
        a3 = v26;
      }
      v16 += v28;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v17;
}

uint64_t sub_23F5ABEC8()
{
  sub_23F35D2E8(&qword_256E7DC28);
  sub_23F35D2E8(&qword_256E7DC30);
  return sub_23F5B485C();
}

void sub_23F5ABF00()
{
  sub_23F5ABF70((uint64_t (*)(_QWORD))type metadata accessor for PlanResolverService);
}

void sub_23F5ABF1C()
{
  sub_23F5ABF70(type metadata accessor for PlanOverridesService);
}

void sub_23F5ABF38()
{
  sub_23F5ABF70((uint64_t (*)(_QWORD))type metadata accessor for QueryDecorationService);
}

void sub_23F5ABF54()
{
  sub_23F5ABF70((uint64_t (*)(_QWORD))type metadata accessor for PrescribedPlanGenerator);
}

void sub_23F5ABF70(uint64_t (*a1)(_QWORD))
{
  uint64_t *v1;

  sub_23F5B4848(a1);
  sub_23F35D2E8(v1);
  sub_23F5B4A98();
  sub_23F5B485C();
  sub_23F43A384();
}

uint64_t sub_23F5ABF9C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_biomeRoot) = a1;
  return swift_release();
}

uint64_t static ResponseGenerationService.isEnabled()()
{
  return 1;
}

uint64_t static ResponseGenerationService.shouldAllowExplicitContent.getter()
{
  return _AFSupportPreferencesBoolForKeyWithDefault();
}

uint64_t ResponseGenerationService.__allocating_init(toolbox:toolExecutionSession:identityChain:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  ResponseGenerationService.init(toolbox:toolExecutionSession:identityChain:)(a1, a2, a3);
  return v6;
}

uint64_t ResponseGenerationService.init(toolbox:toolExecutionSession:identityChain:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;

  v6 = sub_23F3B1728();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F38F964();
  v7 = sub_23F619E44();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v11 = v10 - v9;
  swift_defaultActor_initialize();
  v12 = v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_responseGenerationInputBuilder;
  *(_OWORD *)v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_QWORD *)(v12 + 32) = 0;
  v13 = v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_responseDialogGenerator;
  *(_QWORD *)(v13 + 32) = 0;
  *(_OWORD *)v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  v14 = v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_fallbackDialogGenerator;
  *(_OWORD *)v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  *(_QWORD *)(v14 + 32) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_inputValidator) = 0;
  v15 = v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_dialogPolicy;
  *(_OWORD *)v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(_QWORD *)(v15 + 32) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_biomeRoot) = 0;
  v16 = v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_toolbox;
  v17 = sub_23F384B34();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, a1, v17);
  sub_23F361418(a2, v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_toolExecutionSession);
  sub_23F619124();
  sub_23F619E2C();
  sub_23F383C64(v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_signposter, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  v22 = type metadata accessor for DefaultCATResponseDialogGenerator();
  v23 = &off_250FD3FA0;
  *(_QWORD *)&v21 = sub_23F36682C();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a2);
  sub_23F3D98EC(a1, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  sub_23F362678(&v21, v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_inAppResponsePolicy);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_identityChain) = a3;
  return v3;
}

uint64_t sub_23F5AC218(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  sub_23F35D2E8(&qword_256E705E0);
  v2[4] = sub_23F366578();
  v3 = sub_23F617E64();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = sub_23F366578();
  v4 = sub_23F38F984();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = sub_23F366578();
  v5 = sub_23F61A0F0();
  v2[11] = v5;
  v2[12] = *(_QWORD *)(v5 - 8);
  v2[13] = sub_23F366578();
  sub_23F55153C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5AC2AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_23F61B11C();
  v1 = v0[7];
  v2 = v0[6];
  v4 = v0[3];
  v3 = v0[4];
  sub_23F61A0E4();
  sub_23F617E58();
  sub_23F383E64(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F36FF44(*(_QWORD *)(v4 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_identityChain), v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[14] = v5;
  *v5 = v0;
  v5[1] = sub_23F5AC3AC;
  return sub_23F5AC504(v0[10]);
}

uint64_t sub_23F5AC3AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *v1;
  v5 = v2;
  v3 = *(_QWORD *)(v2 + 32);
  sub_23F3B2010(&v5);
  *(_QWORD *)(v2 + 120) = v0;
  swift_task_dealloc();
  sub_23F3625D8(v3, &qword_256E705E0);
  return swift_task_switch();
}

uint64_t sub_23F5AC428()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v2 = v0[12];
  v1 = v0[13];
  (*(void (**)(_QWORD, _QWORD))(v0[9] + 8))(v0[10], v0[8]);
  sub_23F383E88(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  v3 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F435B58(v3);
}

uint64_t sub_23F5AC498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  sub_23F384274(*(_QWORD *)(v0 + 72));
  sub_23F383E88(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  return sub_23F435B58(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5AC504(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[69] = v1;
  v2[68] = a1;
  v2[70] = type metadata accessor for ResponseGenerationPreferences();
  v2[71] = sub_23F366578();
  sub_23F55153C();
  return sub_23F3B15DC();
}

uint64_t sub_23F5AC54C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v1 = v0[69];
  v2 = v0[68];
  v3 = v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_toolbox;
  v4 = type metadata accessor for DefaultResponseGenerationInputBuilder();
  v0[5] = v4;
  v0[6] = (uint64_t)&off_250FDD1B8;
  v5 = sub_23F36145C(v0 + 2);
  v6 = sub_23F384B34();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, v3, v6);
  v7 = (char *)v5 + *(int *)(v4 + 20);
  v8 = sub_23F38F984();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, v2, v8);
  v9 = v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_responseGenerationInputBuilder;
  sub_23F3F9B3C();
  sub_23F3E2674((uint64_t)(v0 + 2), v9, &qword_256E7D908);
  swift_endAccess();
  type metadata accessor for ResponseGenerationBiomeRoot();
  sub_23F36682C();
  sub_23F580DA0();
  v32 = swift_retain();
  sub_23F5ABF9C(v32);
  v10 = type metadata accessor for DefaultCATResponseDialogGenerator();
  v11 = sub_23F36682C();
  v0[15] = v10;
  v0[16] = (uint64_t)&off_250FD3FA0;
  v0[12] = v11;
  v0[20] = (uint64_t)&type metadata for FallbackDialogGenerator;
  v0[21] = (uint64_t)&off_250FD60A0;
  v12 = sub_23F36682C();
  v0[17] = v12;
  sub_23F5AC9E8((uint64_t)(v0 + 12), v12 + 16);
  v13 = v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_fallbackDialogGenerator;
  sub_23F3F9B3C();
  sub_23F3E2674((uint64_t)(v0 + 17), v13, &qword_256E7D910);
  swift_endAccess();
  v0[30] = (uint64_t)&type metadata for FallbackDialogGenerator;
  v0[31] = (uint64_t)&off_250FD60A0;
  v14 = sub_23F36682C();
  v0[27] = v14;
  sub_23F5AC9E8((uint64_t)(v0 + 12), v14 + 16);
  v15 = v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_responseDialogGenerator;
  sub_23F3F9B3C();
  sub_23F3E2674((uint64_t)(v0 + 27), v15, &qword_256E7D910);
  swift_endAccess();
  if (qword_256E6F0B8 != -1)
    swift_once();
  v16 = v0[71];
  v17 = sub_23F361498(v0[70], (uint64_t)qword_256E803F8);
  sub_23F3B1450();
  sub_23F362600(v17, v16, (uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationPreferences);
  sub_23F35D2E8(&qword_256E7CBE8);
  sub_23F617C48();
  v18 = v0[66];
  v19 = v0[67];
  sub_23F3663AC(v16, (uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationPreferences);
  if (!v19)
  {
    v0[40] = (uint64_t)&type metadata for AlwaysDialogPolicy;
    v0[41] = (uint64_t)&off_250FD58C8;
    sub_23F3F9B3C();
    v24 = sub_23F3848F0();
    goto LABEL_11;
  }
  v20 = v18 == 0x737961776C41 && v19 == 0xE600000000000000;
  if (!v20 && (sub_23F5B4938() & 1) == 0)
  {
    if (v18 == 0xD000000000000014 && v19 == 0x800000023F63B700)
    {
      sub_23F3837B0();
    }
    else
    {
      v28 = sub_23F5B4938();
      sub_23F3837B0();
      if ((v28 & 1) == 0)
      {
        v0[35] = (uint64_t)&type metadata for AlwaysDialogPolicy;
        v0[36] = (uint64_t)&off_250FD58C8;
        goto LABEL_19;
      }
    }
    v0[25] = (uint64_t)&type metadata for SuccessRequiresOptInDialogPolicy;
    v0[26] = (uint64_t)&off_250FD58B0;
LABEL_19:
    sub_23F3F9B3C();
    v29 = sub_23F3848F0();
    sub_23F3E2674(v29, v30, v31);
    goto LABEL_12;
  }
  v21 = v0[69];
  sub_23F3837B0();
  v0[10] = (uint64_t)&type metadata for AlwaysDialogPolicy;
  v0[11] = (uint64_t)&off_250FD58C8;
  v22 = v21 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_dialogPolicy;
  sub_23F3F9B3C();
  v23 = &qword_256E7D918;
  v24 = (uint64_t)(v0 + 7);
  v25 = v22;
LABEL_11:
  sub_23F3E2674(v24, v25, v23);
LABEL_12:
  swift_endAccess();
  swift_release();
  sub_23F5ACA24((uint64_t)(v0 + 12));
  swift_task_dealloc();
  v26 = (uint64_t (*)(void))sub_23F384760();
  return v26();
}

uint64_t sub_23F5AC9C4()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_23F5AC9E8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyActionRequirementEvaluating(a2, a1);
  return a2;
}

uint64_t sub_23F5ACA24(uint64_t a1)
{
  destroy for FallbackDialogGenerator(a1);
  return a1;
}

uint64_t sub_23F5ACA58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_23F61AFC0();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = sub_23F366578();
  v4 = sub_23F619EE0();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = sub_23F366578();
  sub_23F35D2E8(&qword_256E7BAD0);
  v2[11] = sub_23F366578();
  v5 = sub_23F57B9D0();
  v2[12] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[13] = v6;
  v2[14] = *(_QWORD *)(v6 + 64);
  v2[15] = sub_23F5B43DC();
  v2[16] = sub_23F3E0220();
  v7 = sub_23F3B1728();
  v2[17] = v7;
  v2[18] = *(_QWORD *)(v7 - 8);
  v2[19] = sub_23F4E6230();
  v2[20] = sub_23F3E0220();
  v2[21] = sub_23F3E0220();
  sub_23F35D2E8(&qword_256E719D0);
  v2[22] = sub_23F4E6230();
  v2[23] = sub_23F3E0220();
  v8 = sub_23F619E50();
  v2[24] = v8;
  v2[25] = *(_QWORD *)(v8 - 8);
  v2[26] = sub_23F4E6230();
  v2[27] = sub_23F3E0220();
  v2[28] = sub_23F3E0220();
  v2[29] = sub_23F3E0220();
  v2[30] = sub_23F3E0220();
  sub_23F61A7C8();
  v2[31] = sub_23F366578();
  sub_23F35D2E8(&qword_256E72CB8);
  v2[32] = sub_23F366578();
  sub_23F618134();
  v2[33] = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FFA0);
  v2[34] = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FB20);
  v2[35] = sub_23F366578();
  v9 = sub_23F6180B0();
  v2[36] = v9;
  v2[37] = *(_QWORD *)(v9 - 8);
  v2[38] = sub_23F4E6230();
  v2[39] = sub_23F3E0220();
  sub_23F35D2E8(&qword_256E72CC0);
  v2[40] = sub_23F4E6230();
  v2[41] = sub_23F3E0220();
  v10 = sub_23F617F9C();
  v2[42] = v10;
  v2[43] = *(_QWORD *)(v10 - 8);
  v2[44] = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FB18);
  v2[45] = sub_23F366578();
  v11 = sub_23F594308();
  v2[46] = v11;
  v2[47] = *(_QWORD *)(v11 - 8);
  v2[48] = sub_23F4E6230();
  v2[49] = sub_23F3E0220();
  v12 = sub_23F3846CC();
  v2[50] = v12;
  v2[51] = *(_QWORD *)(v12 - 8);
  v2[52] = sub_23F366578();
  sub_23F35D2E8(&qword_256E7BAC0);
  v2[53] = sub_23F366578();
  v13 = sub_23F5B4990();
  v2[54] = v13;
  v2[55] = *(_QWORD *)(v13 - 8);
  v2[56] = sub_23F366578();
  v14 = sub_23F61B2C0();
  v2[57] = v14;
  v2[58] = *(_QWORD *)(v14 - 8);
  v2[59] = sub_23F4E6230();
  v2[60] = sub_23F3E0220();
  v15 = sub_23F61ADEC();
  v2[61] = v15;
  v2[62] = *(_QWORD *)(v15 - 8);
  v2[63] = sub_23F4E6230();
  v2[64] = sub_23F3E0220();
  sub_23F35D2E8(&qword_256E702E0);
  v2[65] = sub_23F366578();
  v16 = sub_23F61B164();
  v2[66] = v16;
  v2[67] = *(_QWORD *)(v16 - 8);
  v2[68] = sub_23F4E6230();
  v2[69] = sub_23F3E0220();
  v17 = sub_23F61B2E4();
  v2[70] = v17;
  v2[71] = *(_QWORD *)(v17 - 8);
  v2[72] = sub_23F4E6230();
  v2[73] = sub_23F3E0220();
  v18 = sub_23F3846E4();
  v2[74] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v2[75] = v19;
  v2[76] = *(_QWORD *)(v19 + 64);
  v2[77] = sub_23F5B43DC();
  v2[78] = sub_23F3E0220();
  v20 = sub_23F619E20();
  v2[79] = v20;
  v2[80] = *(_QWORD *)(v20 - 8);
  v2[81] = sub_23F4E6230();
  v2[82] = sub_23F3E0220();
  v2[83] = sub_23F3E0220();
  v2[84] = sub_23F3E0220();
  v2[85] = sub_23F3E0220();
  v2[86] = sub_23F3E0220();
  v2[87] = sub_23F3E0220();
  sub_23F55153C();
  return sub_23F362AA0();
}

uint64_t sub_23F5ACDEC()
{
  os_signpost_type_t v0;
  uint64_t v1;
  NSObject *v2;
  _WORD *v3;
  os_signpost_id_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  NSObject *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  _WORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  _BOOL4 v72;
  uint64_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t, uint64_t, uint64_t);
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t (*v99)(uint64_t);
  uint64_t (*v100)(uint64_t);
  _WORD *v102;
  os_signpost_id_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  NSObject *v115;
  uint64_t v116;
  unsigned int (*v117)(uint64_t);
  const char *v118;
  uint64_t v119;
  uint64_t v120;
  uint8_t *v121;
  os_signpost_id_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;

  *(_QWORD *)(v1 + 704) = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_signposter;
  sub_23F619E14();
  v2 = sub_23F619E38();
  sub_23F61C694();
  if ((sub_23F4455D4() & 1) != 0)
  {
    v3 = (_WORD *)sub_23F3EEE70();
    v4 = sub_23F5B4630(v3);
    sub_23F5B4624(&dword_23F35A000, v2, v0, v4, "ResponseGeneration.overall", "");
    sub_23F366530();
  }
  v5 = *(_QWORD *)(v1 + 696);
  v6 = *(_QWORD *)(v1 + 688);
  v7 = *(_QWORD *)(v1 + 640);
  v8 = *(_QWORD *)(v1 + 632);
  v9 = *(_QWORD *)(v1 + 552);
  v155 = *(_QWORD *)(v1 + 536);
  v10 = *(_QWORD *)(v1 + 520);
  v159 = *(_QWORD *)(v1 + 528);
  v161 = *(_QWORD *)(v1 + 560);

  sub_23F362D94(v6, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  sub_23F619E74();
  swift_allocObject();
  *(_QWORD *)(v1 + 712) = sub_23F619E68();
  v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(_QWORD *)(v1 + 720) = v11;
  v11(v5, v8);
  sub_23F616FF4();
  sub_23F61B128();
  v12 = sub_23F61B14C();
  v13 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
  *(_QWORD *)(v1 + 728) = v13;
  v13(v9, v159);
  sub_23F3F1328(v12, v10);
  sub_23F362984();
  sub_23F383740(v10, 1, v161);
  v153 = v11;
  if (v51)
  {
    sub_23F3625D8(*(_QWORD *)(v1 + 520), &qword_256E702E0);
  }
  else
  {
    v14 = *(_QWORD *)(v1 + 584);
    v15 = *(_QWORD *)(v1 + 560);
    v16 = *(_QWORD *)(v1 + 520);
    v17 = *(_QWORD *)(v1 + 480);
    v18 = *(_QWORD *)(v1 + 456);
    v19 = *(_QWORD *)(v1 + 464);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 568) + 32);
    *(_QWORD *)(v1 + 736) = v20;
    v20(v14, v16, v15);
    sub_23F61B2CC();
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 88))(v17, v18);
    if (v21 == *MEMORY[0x24BE56C60])
    {
      v22 = *(_QWORD *)(v1 + 512);
      v23 = *(_QWORD *)(v1 + 496);
      v24 = *(_QWORD *)(v1 + 480);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 464) + 96))(v24, *(_QWORD *)(v1 + 456));
      v25 = sub_23F362D94(v22, v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 32));
      v26 = *(_QWORD *)(MEMORY[0x24266E2E4](v25) + 16);
      v27 = swift_bridgeObjectRelease();
      if (v26 == 1)
      {
        v29 = *(_QWORD *)(v1 + 424);
        v28 = *(_QWORD *)(v1 + 432);
        v30 = MEMORY[0x24266E2E4](v27);
        sub_23F3702BC(v30, v29);
        sub_23F362984();
        sub_23F383740(v29, 1, v28);
        if (v51)
        {
          v31 = *(_QWORD *)(v1 + 424);
          v32 = &qword_256E7BAC0;
        }
        else
        {
          v46 = *(_QWORD *)(v1 + 392);
          v45 = *(_QWORD *)(v1 + 400);
          v47 = *(_QWORD *)(v1 + 368);
          v48 = *(_QWORD *)(v1 + 376);
          v49 = *(_QWORD *)(v1 + 360);
          sub_23F482DB4(*(_QWORD *)(v1 + 440));
          sub_23F61A4F8();
          sub_23F61AC9C();
          v50 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
          v50(v46, v47);
          sub_23F383740(v49, 1, v45);
          if (!v51)
          {
            sub_23F482DB4(*(_QWORD *)(v1 + 408));
            sub_23F5B9370();
            if (v106)
            {
              v158 = *(_QWORD *)(v1 + 624);
              v130 = *(_QWORD *)(v1 + 616);
              v160 = *(_QWORD *)(v1 + 600);
              v157 = *(_QWORD *)(v1 + 592);
              v134 = *(_QWORD *)(v1 + 576);
              v135 = *(_QWORD *)(v1 + 584);
              v136 = *(_QWORD *)(v1 + 568);
              v137 = *(_QWORD *)(v1 + 560);
              v145 = *(_QWORD *)(v1 + 512);
              v143 = *(_QWORD *)(v1 + 496);
              v144 = *(_QWORD *)(v1 + 488);
              v131 = *(_QWORD *)(v1 + 472);
              v132 = *(_QWORD *)(v1 + 464);
              v133 = *(_QWORD *)(v1 + 456);
              v148 = *(_QWORD *)(v1 + 448);
              v141 = *(_QWORD *)(v1 + 440);
              v142 = *(_QWORD *)(v1 + 432);
              v138 = *(_QWORD *)(v1 + 408);
              v139 = *(_QWORD *)(v1 + 400);
              v140 = *(_QWORD *)(v1 + 416);
              v126 = *(_QWORD *)(v1 + 384);
              v128 = *(_QWORD *)(v1 + 368);
              v147 = *(_QWORD *)(v1 + 352);
              v162 = *(_QWORD *)(v1 + 344);
              v149 = *(_QWORD *)(v1 + 336);
              v107 = *(_QWORD *)(v1 + 320);
              v125 = *(_QWORD *)(v1 + 328);
              v150 = *(_QWORD *)(v1 + 312);
              v129 = *(_QWORD *)(v1 + 296);
              v146 = *(_QWORD *)(v1 + 272);
              v127 = *(_QWORD *)(v1 + 256);
              sub_23F35D2E8(&qword_256E700F8);
              v108 = sub_23F617F60();
              v109 = *(_QWORD *)(v108 - 8);
              v110 = (*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
              v111 = swift_allocObject();
              *(_OWORD *)(v111 + 16) = xmmword_23F61E7E0;
              v112 = v111 + v110;
              sub_23F617F30();
              (*(void (**)(unint64_t, _QWORD, uint64_t))(v109 + 104))(v112, *MEMORY[0x24BE52E80], v108);
              sub_23F4064F8();
              sub_23F41C5B8(v125, 1);
              sub_23F41C5B8(v107, 1);
              sub_23F617F78();
              sub_23F61A4C8();
              sub_23F61A480();
              v113 = sub_23F617D08();
              sub_23F36196C(v146, 0, 1, v113);
              sub_23F61A4E0();
              sub_23F61A4F8();
              sub_23F61AC78();
              v50(v126, v128);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v162 + 16))(v127, v147, v149);
              sub_23F36196C(v127, 0, 1, v149);
              sub_23F618080();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 16))(v130, v158, v157);
              MEMORY[0x24266DCCC](v130);
              sub_23F362D94(v131, v150, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v129 + 16));
              (*(void (**)(uint64_t, _QWORD, uint64_t))(v132 + 104))(v131, *MEMORY[0x24BE56C40], v133);
              sub_23F61B230();
              sub_23F38456C(v131, *(uint64_t (**)(uint64_t, uint64_t))(v132 + 8));
              sub_23F35D2E8(&qword_256E701A0);
              v114 = sub_23F5B47F8();
              *(_OWORD *)(v114 + 16) = xmmword_23F61E7E0;
              sub_23F4DC758(v114 + v135, v134);
              sub_23F383E64(v150, *(uint64_t (**)(uint64_t, uint64_t))(v129 + 8));
              (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v147, v149);
              (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v140, v139);
              (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v148, v142);
              (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v145, v144);
              (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v135, v137);
              (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v158, v157);
              v115 = sub_23F5B49E8();
              sub_23F5B47BC();
              sub_23F61C688();
              if ((sub_23F5B4788() & 1) != 0)
              {
                sub_23F3D0A10();
                sub_23F3F40DC();
                sub_23F384AF8();
                v116 = sub_23F406E84();
                if (v117(v116) == *MEMORY[0x24BEE7810])
                {
                  v118 = "[Error] Interval already ended";
                }
                else
                {
                  sub_23F384274(*(_QWORD *)(v1 + 200));
                  v118 = "";
                }
                v121 = (uint8_t *)sub_23F3EEE70();
                *(_WORD *)v121 = 0;
                v122 = sub_23F619E08();
                _os_signpost_emit_with_name_impl(&dword_23F35A000, v115, (os_signpost_type_t)v129, v122, "ResponseGeneration.overall", v118, v121, 2u);
                sub_23F366530();
              }
              v123 = *(_QWORD *)(v1 + 680);
              v124 = *(_QWORD *)(v1 + 632);

              v153(v123, v124);
              sub_23F384AF8();
              sub_23F5B4A2C();
              swift_task_dealloc();
              sub_23F3666DC();
              sub_23F3666C4();
              sub_23F362CC8();
              sub_23F3666A0();
              sub_23F3666D4();
              sub_23F366698();
              sub_23F3666E4();
              sub_23F366708();
              sub_23F3666EC();
              sub_23F3668E4();
              sub_23F3668DC();
              sub_23F3668D4();
              sub_23F383980();
              sub_23F3667E0();
              sub_23F383898();
              sub_23F383978();
              sub_23F383970();
              sub_23F383890();
              sub_23F383888();
              sub_23F383880();
              sub_23F383870();
              sub_23F383868();
              sub_23F383C4C();
              sub_23F383C44();
              sub_23F383C3C();
              sub_23F383C34();
              sub_23F383C2C();
              sub_23F383C24();
              sub_23F383C1C();
              sub_23F383C14();
              sub_23F383C0C();
              sub_23F383C04();
              sub_23F383BFC();
              sub_23F383BF4();
              swift_task_dealloc();
              swift_task_dealloc();
              sub_23F383B0C();
              sub_23F383C54();
              sub_23F383C5C();
              sub_23F383AFC();
              sub_23F383AF4();
              sub_23F383AEC();
              sub_23F383AE4();
              sub_23F383ADC();
              sub_23F383AD4();
              sub_23F383C6C();
              sub_23F383FDC();
              sub_23F38409C();
              return (*(uint64_t (**)(uint64_t))(v1 + 8))(v114);
            }
            v119 = *(_QWORD *)(v1 + 440);
            v120 = *(_QWORD *)(v1 + 448);
            sub_23F384274(*(_QWORD *)(v1 + 408));
            sub_23F383E64(v120, *(uint64_t (**)(uint64_t, uint64_t))(v119 + 8));
            goto LABEL_22;
          }
          v52 = *(_QWORD *)(v1 + 360);
          sub_23F384274(*(_QWORD *)(v1 + 440));
          v32 = &qword_256E6FB18;
          v31 = v52;
        }
        sub_23F3625D8(v31, v32);
      }
LABEL_22:
      v53 = *(_QWORD *)(v1 + 32);
      sub_23F61B128();
      if (*(_QWORD *)(v53 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_biomeRoot))
      {
        sub_23F3D9E08();
        sub_23F58069C();
        sub_23F366748();
        sub_23F5812C0();
        sub_23F3667A8();
      }
      v54 = *(uint8_t **)(v1 + 184);
      v55 = sub_23F61B224();
      v57 = v56;
      v58 = sub_23F61B14C();
      sub_23F617BA0();
      v59 = sub_23F5ABC3C(v58, v55, v57);
      sub_23F362984();
      sub_23F3F1560(v59, (uint64_t)v54);
      sub_23F384364();
      sub_23F38432C();
      v60 = sub_23F618E54();
      sub_23F383740((uint64_t)v54, 1, v60);
      if (v51)
      {
        v61 = *(NSObject **)(v1 + 168);
        sub_23F3F0F00();
        sub_23F619E8C();
        v62 = sub_23F3B1A04();
        if (os_log_type_enabled(v61, v62))
        {
          v63 = (_WORD *)sub_23F3EEE70();
          sub_23F507DB0(v63);
          sub_23F4114BC(&dword_23F35A000, v61, v62, "No Siri request context", v54);
          sub_23F366530();
        }
        v64 = *(_QWORD *)(v1 + 168);
        v65 = *(_QWORD *)(v1 + 144);

        sub_23F3D98EC(v64, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
      }
      v67 = *(_QWORD *)(v1 + 504);
      v66 = *(_QWORD *)(v1 + 512);
      v69 = *(_QWORD *)(v1 + 488);
      v68 = *(_QWORD *)(v1 + 496);
      sub_23F619124();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v67, v66, v69);
      v70 = sub_23F619E8C();
      v71 = sub_23F61C61C();
      v72 = sub_23F5B4878(v70);
      v73 = *(_QWORD *)(v1 + 496);
      if (v72)
      {
        v74 = (uint8_t *)sub_23F366668();
        *(_DWORD *)v74 = 134217984;
        v75 = *(_QWORD *)(MEMORY[0x24266E2E4]() + 16);
        swift_bridgeObjectRelease();
        sub_23F5B4868();
        *(_QWORD *)(v1 + 16) = v75;
        sub_23F61C790();
        sub_23F38485C(&dword_23F35A000, v70, v71, "%ld statement results", v74);
        sub_23F366530();
      }
      sub_23F5B4868();

      *(_QWORD *)(v1 + 744) = v73;
      v77 = *(_QWORD *)(v1 + 176);
      v76 = *(_QWORD *)(v1 + 184);
      v78 = sub_23F384274(*(_QWORD *)(v1 + 144));
      v79 = MEMORY[0x24266E2E4](v78);
      sub_23F382EF8(v76, v77, &qword_256E719D0);
      v80 = sub_23F5B49FC();
      v82 = sub_23F36195C(v80, v81, v60);
      v83 = *(_QWORD *)(v1 + 176);
      v84 = *(_QWORD *)(v1 + 88);
      if (v82 == 1)
      {
        sub_23F3625D8(*(_QWORD *)(v1 + 176), &qword_256E719D0);
        v85 = sub_23F61A0D8();
        sub_23F3838D8(v84, v86, v87, v85);
      }
      else
      {
        StructuredContext.SiriRequestContext.mode.getter(*(_QWORD *)(v1 + 88));
        sub_23F383F80(v83, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8));
      }
      sub_23F5B024C(v79, *(void (**)(_QWORD, _QWORD))(v1 + 544), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 128));
      v152 = *(_QWORD *)(v1 + 616);
      v154 = *(_QWORD *)(v1 + 624);
      v88 = *(_QWORD *)(v1 + 600);
      v151 = *(_QWORD *)(v1 + 592);
      v89 = *(_QWORD *)(v1 + 120);
      v90 = *(_QWORD *)(v1 + 104);
      v156 = *(_QWORD *)(v1 + 112);
      v91 = *(_QWORD *)(v1 + 96);
      v92 = *(_QWORD *)(v1 + 32);
      sub_23F3625D8(*(_QWORD *)(v1 + 88), &qword_256E7BAD0);
      sub_23F384120();
      sub_23F61AD8C();
      *(_QWORD *)(v1 + 752) = v93;
      sub_23F5B4908();
      sub_23F61AFB4();
      sub_23F5B4908();
      v94 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 16);
      *(_QWORD *)(v1 + 760) = v94;
      sub_23F383C64(v152, v154, v94);
      v95 = (*(unsigned __int8 *)(v90 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
      v96 = (v156 + *(unsigned __int8 *)(v88 + 80) + v95) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
      v97 = swift_allocObject();
      *(_QWORD *)(v1 + 768) = v97;
      *(_QWORD *)(v97 + 16) = v92;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v90 + 32))(v97 + v95, v89, v91);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v88 + 32))(v97 + v96, v152, v151);
      sub_23F3D0A10();
      v98 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v1 + 776) = v98;
      v99 = (uint64_t (*)(uint64_t))MEMORY[0x24BE56528];
      sub_23F3612C0(&qword_256E7D940, (uint64_t (*)(uint64_t))MEMORY[0x24BE56528], MEMORY[0x24BE56538]);
      sub_23F3612C0(&qword_256E7D948, v99, MEMORY[0x24BE56530]);
      v100 = (uint64_t (*)(uint64_t))MEMORY[0x24BE54AB8];
      sub_23F3612C0(&qword_256E7D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE54AB8], MEMORY[0x24BE54AC8]);
      sub_23F3612C0(&qword_256E7D958, v100, MEMORY[0x24BE54AC0]);
      *v98 = v1;
      v98[1] = sub_23F5AE100;
      return sub_23F617258();
    }
    v33 = *(_QWORD *)(v1 + 480);
    v8 = *(_QWORD *)(v1 + 456);
    v34 = *(_QWORD *)(v1 + 464);
    sub_23F384274(*(_QWORD *)(v1 + 568));
    sub_23F383E64(v33, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
  }
  v35 = *(NSObject **)(v1 + 152);
  sub_23F3F0F00();
  sub_23F619E8C();
  v36 = sub_23F3B1A04();
  if (sub_23F384458(v36))
  {
    v37 = (uint8_t *)sub_23F3EEE70();
    *(_WORD *)v37 = 0;
    sub_23F4114BC(&dword_23F35A000, v35, (os_log_type_t)v8, "No ResponseGenerationRequest. returning", v37);
    sub_23F366530();
  }
  v38 = *(_QWORD *)(v1 + 624);
  v39 = *(_QWORD *)(v1 + 600);
  v41 = *(_QWORD *)(v1 + 144);
  v40 = *(_QWORD *)(v1 + 152);

  sub_23F383F80(v40, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
  sub_23F5B3B78();
  sub_23F362D64();
  *v42 = 1;
  swift_willThrow();
  sub_23F383D74(v38, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
  v43 = sub_23F5B49E8();
  sub_23F5B47BC();
  sub_23F61C688();
  if ((sub_23F5B4788() & 1) != 0)
  {
    sub_23F3D0A10();
    sub_23F3F40DC();
    sub_23F384AF8();
    if (sub_23F5B48C8() == *MEMORY[0x24BEE7810])
    {
      v44 = "[Error] Interval already ended";
    }
    else
    {
      sub_23F384274(*(_QWORD *)(v1 + 200));
      v44 = "";
    }
    v102 = (_WORD *)sub_23F3EEE70();
    v103 = sub_23F5B4630(v102);
    sub_23F5B4624(&dword_23F35A000, v43, (os_signpost_type_t)v38, v103, "ResponseGeneration.overall", v44);
    sub_23F366530();
  }
  v104 = *(_QWORD *)(v1 + 664);
  v105 = *(_QWORD *)(v1 + 632);

  v11(v104, v105);
  sub_23F384AF8();
  sub_23F5B4A2C();
  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F362CC8();
  sub_23F366708();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3666E4();
  sub_23F3666EC();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23F5AE100()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 784) = v1;
  swift_task_dealloc();
  sub_23F384274(*(_QWORD *)(v0 + 48));
  sub_23F3D9AF4();
  sub_23F3837B0();
  sub_23F5B49B0();
  return sub_23F36664C();
}

uint64_t sub_23F5AE174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void);
  uint64_t v7;
  NSObject *v8;
  const char *v9;
  _WORD *v10;
  os_signpost_id_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;

  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 736);
  v31 = *(void (**)(uint64_t, uint64_t))(v0 + 728);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 760);
  v33 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 616);
  v32 = *(_QWORD *)(v0 + 600);
  v36 = *(_QWORD *)(v0 + 592);
  v14 = *(_QWORD *)(v0 + 576);
  v16 = *(_QWORD *)(v0 + 584);
  v17 = *(_QWORD *)(v0 + 568);
  v23 = *(_QWORD *)(v0 + 560);
  v26 = *(_QWORD *)(v0 + 528);
  v27 = *(_QWORD *)(v0 + 544);
  v28 = *(_QWORD *)(v0 + 488);
  v29 = *(_QWORD *)(v0 + 512);
  v3 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 472);
  v13 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 304);
  v15 = *(_QWORD *)(v0 + 296);
  v30 = *(_QWORD *)(v0 + 184);
  v24 = *(_QWORD *)(v0 + 128);
  v21 = *(_QWORD *)(v0 + 104);
  v22 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 64);
  sub_23F619EC8();
  v34(v2, v1, v36);
  MEMORY[0x24266DCCC](v2);
  sub_23F5B4A20();
  v6();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v4, *MEMORY[0x24BE56C40], v13);
  sub_23F61B230();
  sub_23F38456C(v4, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F35D2E8(&qword_256E701A0);
  v7 = sub_23F5B47F8();
  *(_OWORD *)(v7 + 16) = xmmword_23F61E7E0;
  v35 = v7;
  v25(v7 + v16, v14, v23);
  sub_23F3B1CC8(v5, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v24, v22);
  v31(v27, v26);
  v33(v29, v28);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v23);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v1, v36);
  sub_23F3625D8(v30, &qword_256E719D0);
  v8 = sub_23F619E38();
  sub_23F619E5C();
  sub_23F61C688();
  if ((sub_23F4455D4() & 1) != 0)
  {
    sub_23F3D9E08();
    sub_23F619E80();
    sub_23F366748();
    if (sub_23F5B4918() == *MEMORY[0x24BEE7810])
    {
      v9 = "[Error] Interval already ended";
    }
    else
    {
      sub_23F384274(*(_QWORD *)(v0 + 200));
      v9 = "";
    }
    v10 = (_WORD *)sub_23F3EEE70();
    v11 = sub_23F5B4630(v10);
    sub_23F5B4624(&dword_23F35A000, v8, (os_signpost_type_t)v16, v11, "ResponseGeneration.overall", v9);
    sub_23F366530();
  }

  sub_23F58E31C();
  sub_23F366748();
  sub_23F5B424C();
  swift_task_dealloc();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3666E4();
  sub_23F366708();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F41C50C();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v35);
}

uint64_t sub_23F5AE568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  const char *v11;
  _WORD *v12;
  os_signpost_id_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
  v5 = *(void (**)(uint64_t, uint64_t))(v0 + 728);
  v17 = *(_QWORD *)(v0 + 592);
  v18 = *(_QWORD *)(v0 + 624);
  v6 = *(_QWORD *)(v0 + 584);
  v7 = *(_QWORD *)(v0 + 568);
  sub_23F5B4A84();
  v8 = *(_QWORD *)(v0 + 488);
  v15 = *(_QWORD *)(v0 + 184);
  v16 = v9;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 96));
  v5(v1, v2);
  v4(v3, v8);
  sub_23F383F80(v6, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  sub_23F3625D8(v15, &qword_256E719D0);
  v10 = sub_23F619E38();
  sub_23F619E5C();
  sub_23F61C688();
  if ((sub_23F4455D4() & 1) != 0)
  {
    sub_23F3D9E08();
    sub_23F619E80();
    sub_23F366748();
    if (sub_23F5B4918() == *MEMORY[0x24BEE7810])
    {
      v11 = "[Error] Interval already ended";
    }
    else
    {
      sub_23F384274(*(_QWORD *)(v0 + 200));
      v11 = "";
    }
    v12 = (_WORD *)sub_23F3EEE70();
    v13 = sub_23F5B4630(v12);
    sub_23F5B4624(&dword_23F35A000, v10, (os_signpost_type_t)v8, v13, "ResponseGeneration.overall", v11);
    sub_23F366530();
  }

  sub_23F58E31C();
  sub_23F366748();
  sub_23F5B424C();
  swift_task_dealloc();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3666E4();
  sub_23F366708();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F5AE7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v5[2] = a1;
  v5[3] = a3;
  v8 = sub_23F6180B0();
  v5[4] = v8;
  v5[5] = *(_QWORD *)(v8 - 8);
  v5[6] = swift_task_alloc();
  v9 = swift_task_alloc();
  v5[7] = v9;
  v10 = (_QWORD *)swift_task_alloc();
  v5[8] = v10;
  *v10 = v5;
  v10[1] = sub_23F5AE89C;
  return sub_23F5AE994(v9, a4, a5);
}

uint64_t sub_23F5AE89C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F3B1998();
  *v2 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  swift_task_dealloc();
  sub_23F5B49B0();
  return sub_23F362AA0();
}

uint64_t sub_23F5AE8F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = v0[7];
  v2 = v0[5];
  sub_23F362D94(v0[6], v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_23F619ED4();
  sub_23F383E64(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F362CC8();
  sub_23F3666DC();
  v3 = (uint64_t (*)(void))sub_23F384760();
  return v3();
}

uint64_t sub_23F5AE964()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_23F362CC8();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5AE994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v5 = sub_23F3B1728();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = sub_23F4E6230();
  v4[11] = sub_23F3E0220();
  v4[12] = type metadata accessor for ResponseGenerationTriageReport(0);
  v4[13] = sub_23F4E6230();
  v4[14] = sub_23F3E0220();
  v6 = sub_23F6183EC();
  v4[15] = v6;
  v4[16] = *(_QWORD *)(v6 - 8);
  v4[17] = sub_23F366578();
  v7 = sub_23F617D08();
  v4[18] = v7;
  v4[19] = *(_QWORD *)(v7 - 8);
  v4[20] = sub_23F366578();
  sub_23F35D2E8(&qword_256E72CB8);
  v4[21] = sub_23F366578();
  v8 = sub_23F5B4998();
  v4[22] = v8;
  v4[23] = *(_QWORD *)(v8 - 8);
  v4[24] = sub_23F4E6230();
  v4[25] = sub_23F3E0220();
  v9 = sub_23F5B4990();
  v4[26] = v9;
  v4[27] = *(_QWORD *)(v9 - 8);
  v4[28] = sub_23F4E6230();
  v4[29] = sub_23F3E0220();
  sub_23F35D2E8(&qword_256E72CC0);
  v4[30] = sub_23F4E6230();
  v4[31] = sub_23F3E0220();
  v10 = sub_23F617F9C();
  v4[32] = v10;
  v4[33] = *(_QWORD *)(v10 - 8);
  v4[34] = sub_23F366578();
  v4[35] = type metadata accessor for DialogOutput();
  v4[36] = sub_23F4E6230();
  v4[37] = sub_23F3E0220();
  v4[38] = sub_23F3E0220();
  sub_23F55153C();
  return sub_23F362AA0();
}

uint64_t sub_23F5AEAF8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[7];
  v0[39] = sub_23F61724C();
  sub_23F61AD8C();
  sub_23F57B9D0();
  sub_23F3612C0(&qword_256E7D968, (uint64_t (*)(uint64_t))MEMORY[0x24BE560E0], MEMORY[0x24BE560A8]);
  sub_23F617228();
  sub_23F3837B0();
  v2 = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_biomeRoot;
  v0[40] = OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_biomeRoot;
  if (*(_QWORD *)(v1 + v2))
  {
    v3 = v0[5];
    sub_23F3D9E08();
    sub_23F58069C();
    sub_23F366748();
    sub_23F581BC4(v3);
    sub_23F3D9AF4();
  }
  v4 = (_QWORD *)swift_task_alloc();
  v0[41] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_23F5AEBFC;
  return sub_23F5B0368(v0[37], v0[5]);
}

uint64_t sub_23F5AEBFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 336) = v1;
  swift_task_dealloc();
  return sub_23F362AA0();
}

void sub_23F5AEC4C()
{
  uint64_t *v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  int v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(void);
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  sub_23F36262C(v0[37], v0[38], (uint64_t (*)(_QWORD))type metadata accessor for DialogOutput);
  v2 = v0[42];
  v3 = sub_23F61AD98();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  v87 = v2;
  if (v4)
  {
    v6 = v0[27];
    v7 = v0[23];
    v94 = MEMORY[0x24BEE4AF8];
    sub_23F5B4794();
    sub_23F383EB8();
    v9 = v3 + v8;
    v92 = *(_QWORD *)(v7 + 72);
    v10 = v7;
    v1 = *(void (**)(void))(v7 + 16);
    v11 = v94;
    do
    {
      v12 = v0[25];
      sub_23F5B4A20();
      v1();
      sub_23F5B4A14();
      sub_23F3B1CC8(v12, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F5B4774();
        v11 = v94;
      }
      v13 = *(_QWORD *)(v11 + 16);
      if (v13 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_23F5B465C();
        v11 = v94;
      }
      *(_QWORD *)(v11 + 16) = v13 + 1;
      sub_23F383EB8();
      (*(void (**)(unint64_t))(v6 + 32))(v11 + v14 + *(_QWORD *)(v6 + 72) * v13);
      v94 = v11;
      v9 += v92;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v2 = v87;
    v5 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_23F362D18();
    v11 = MEMORY[0x24BEE4AF8];
  }
  v15 = *(_QWORD *)(v11 + 16);
  if (v15)
  {
    sub_23F543704();
    v17 = (uint64_t (*)(char *, uint64_t))(v11 + v16);
    v19 = *(_QWORD *)(v18 + 72);
    sub_23F617BA0();
    while (1)
    {
      sub_23F5B1664(v17, v0[6], v0[7], &v94);
      if (v2)
        break;
      sub_23F5B49C8();
      v17 = (uint64_t (*)(char *, uint64_t))((char *)v17 + v19);
      if (!--v15)
      {
        swift_bridgeObjectRelease_n();
        v87 = 0;
        goto LABEL_16;
      }
    }
    sub_23F362D18();
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  sub_23F362D18();
LABEL_16:
  v20 = v0[38];
  v21 = v0[35];
  v23 = v0[30];
  v22 = v0[31];
  v24 = sub_23F4064F8();
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v25(v22, v20, v24);
  sub_23F36196C(v22, 0, 1, v24);
  v25(v23, v20 + *(int *)(v21 + 20), v24);
  v26 = sub_23F5B48F8();
  sub_23F36196C(v26, v27, v28, v24);
  v29 = sub_23F61AD98();
  v30 = *(_QWORD *)(v29 + 16);
  if (v30)
  {
    v93 = v0[27];
    v31 = v0[23];
    v94 = v5;
    sub_23F37C1FC();
    sub_23F383EB8();
    v86 = v29;
    v33 = v29 + v32;
    v90 = v31;
    v88 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
    v89 = *(_QWORD *)(v31 + 72);
    v34 = v94;
    do
    {
      v35 = v0[28];
      v36 = v0[25];
      v1 = (void (*)(void))v0[26];
      v37 = v0[22];
      v88(v36, v33, v37);
      sub_23F61AB4C();
      sub_23F61A498();
      sub_23F38456C(v35, *(uint64_t (**)(uint64_t, uint64_t))(v93 + 8));
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v36, v37);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F5B4760();
        v34 = v94;
      }
      v38 = *(_QWORD *)(v34 + 16);
      if (v38 >= *(_QWORD *)(v34 + 24) >> 1)
      {
        sub_23F37C1FC();
        v34 = v94;
      }
      *(_QWORD *)(v34 + 16) = v38 + 1;
      sub_23F383EB8();
      (*(void (**)(unint64_t))(v40 + 32))(v34 + v39 + *(_QWORD *)(v40 + 72) * v38);
      v94 = v34;
      v33 += v89;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_23F362D18();
    v34 = MEMORY[0x24BEE4AF8];
  }
  v41 = v0[33];
  v42 = v0[34];
  v43 = v0[32];
  v44 = v0[21];
  sub_23F617F6C();
  sub_23F383C64(v44, v42, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 16));
  v45 = sub_23F5B48F8();
  sub_23F36196C(v45, v46, v47, v43);
  v48 = sub_23F61AD98();
  v49 = *(_QWORD *)(v48 + 16);
  if (v49)
  {
    v50 = v0[23];
    v34 = v0[16];
    v94 = v5;
    sub_23F5B47A8();
    sub_23F383EB8();
    v52 = v48 + v51;
    v53 = *(_QWORD *)(v50 + 72);
    v1 = *(void (**)(void))(v50 + 16);
    v54 = v87;
    while (1)
    {
      v55 = v0[17];
      v56 = sub_23F406E84();
      ((void (*)(uint64_t))v1)(v56);
      sub_23F5AFE94(v55);
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v0[24], v0[22]);
      v57 = v94;
      if (v54)
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F5B4704();
        v57 = v94;
      }
      v58 = *(_QWORD *)(v57 + 16);
      if (v58 >= *(_QWORD *)(v57 + 24) >> 1)
      {
        sub_23F5B4674();
        v57 = v94;
      }
      sub_23F5B4820();
      (*(void (**)(unint64_t))(v34 + 32))(v59 + v60 * v58);
      v54 = 0;
      v94 = v57;
      v52 += v53;
      if (!--v49)
      {
        sub_23F5B48B0();
        goto LABEL_38;
      }
    }
    sub_23F366748();
LABEL_37:
    sub_23F5B4608();
    return;
  }
  sub_23F362D18();
LABEL_38:
  v61 = v0[40];
  v62 = v0[7];
  sub_23F5B47E4();
  v63 = *(_QWORD *)(v62 + v61);
  if (!v63)
    goto LABEL_41;
  v49 = v0[40];
  v64 = v0[7];
  sub_23F3D9E08();
  sub_23F58069C();
  v62 = v65;
  sub_23F366748();
  sub_23F5B4A60();
  sub_23F3D9AF4();
  v63 = *(_QWORD *)(v64 + v49);
  if (v63)
  {
    sub_23F3D9E08();
    sub_23F580DC8();
    sub_23F366748();
    sub_23F5B48E8();
    sub_23F61AD8C();
    v0[43] = v66;
    v0[44] = swift_task_alloc();
    sub_23F5570B4(&qword_256E7D978, v67, (uint64_t)&protocol conformance descriptor for ResponseGenerationTriageReport);
    sub_23F5570B4(qword_256E7D980, v68, (uint64_t)&protocol conformance descriptor for ResponseGenerationTriageReport);
    sub_23F5B45E4((uint64_t)sub_23F5AF374);
    sub_23F5B4508();
  }
  else
  {
LABEL_41:
    v69 = sub_23F5B4524();
    sub_23F5B483C(v69, v70, (uint64_t (*)(_QWORD))type metadata accessor for DialogOutput);
    v71 = sub_23F507D88();
    v72 = sub_23F61C610();
    sub_23F5B4878(v71);
    sub_23F5B46E4();
    v91 = v73;
    if (v74)
    {
      v75 = (uint8_t *)sub_23F366668();
      v94 = sub_23F366668();
      v76 = sub_23F5B4948(4.845e-34);
      sub_23F5B49DC(v76, v77, v78, v79, v80, v81, v82, v83, v86, v34, (uint64_t)v1);
      sub_23F5B46CC(v84);
      sub_23F384364();
      sub_23F5B4A6C();
      sub_23F38485C(&dword_23F35A000, v71, v72, "Returning system response with \"%{private}s\" response", v75);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F3C8574(v63);
    sub_23F5076E8(v91);
    sub_23F383F80(v49, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
    sub_23F3663AC(v62, (uint64_t (*)(_QWORD))type metadata accessor for DialogOutput);
    sub_23F5B4438();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    v85 = (uint64_t (*)(void))sub_23F384760();
    sub_23F3D0850(v85);
  }
}

uint64_t sub_23F5AF374()
{
  sub_23F3B1998();
  swift_task_dealloc();
  sub_23F362984();
  sub_23F5B49B0();
  return sub_23F362AA0();
}

uint64_t sub_23F5AF3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_QWORD *a26,uint64_t a27,uint64_t a28)
{
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(_QWORD);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);

  sub_23F3D9A84();
  a27 = v29;
  a28 = v30;
  a26 = v28;
  sub_23F3663AC(v28[14], type metadata accessor for ResponseGenerationTriageReport);
  v31 = sub_23F5B4524();
  sub_23F5B483C(v31, v32, (uint64_t (*)(_QWORD))type metadata accessor for DialogOutput);
  v33 = sub_23F507D88();
  v34 = sub_23F61C610();
  if (sub_23F5B4878(v33))
  {
    v35 = (uint8_t *)sub_23F366668();
    a17 = sub_23F366668();
    *(_DWORD *)v35 = 136380675;
    v36 = sub_23F617F84();
    sub_23F37AE00(v36, v37, &a17);
    v28[2] = v38;
    sub_23F61C790();
    sub_23F38432C();
    v39 = sub_23F406E84();
    sub_23F3663AC(v39, v40);
    sub_23F38485C(&dword_23F35A000, v33, v34, "Returning system response with \"%{private}s\" response", v35);
    sub_23F3B17D4();
    sub_23F366530();
  }
  v41 = v28[38];
  v42 = v28[36];
  v44 = v28[33];
  v43 = v28[34];
  v45 = v28[11];
  v46 = v28[9];

  sub_23F3C8574(v42);
  sub_23F3D98EC(v45, *(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
  sub_23F383D74(v43, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
  sub_23F3663AC(v41, (uint64_t (*)(_QWORD))type metadata accessor for DialogOutput);
  sub_23F5B4438();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  v47 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3D995C(v47);
}

uint64_t sub_23F5AF5BC()
{
  uint64_t *v0;
  void *v1;
  NSObject *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(void);
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  int v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(void);
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;

  v1 = (void *)v0[42];
  v2 = v0[10];
  sub_23F619124();
  v3 = v1;
  v4 = v1;
  v5 = v2;
  sub_23F619E8C();
  v6 = sub_23F3F0EEC();
  if (os_log_type_enabled(v2, v6))
  {
    v7 = (void *)v0[42];
    v8 = (uint8_t *)sub_23F366668();
    v9 = (_QWORD *)sub_23F366668();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v11;
    sub_23F61C790();
    *v9 = v11;
    sub_23F3665E8();
    sub_23F3665E8();
    sub_23F38485C(&dword_23F35A000, v5, v6, "ResponseGeneration was unable to produce Dialog due to a non-recoverable error: %@", v8);
    sub_23F35D2E8(&qword_256E6FAB0);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F3665E8();
  sub_23F3665E8();
  sub_23F3665E8();

  v12 = v0;
  v13 = v0[38];
  v14 = v0[35];
  sub_23F384274(v12[9]);
  v15 = sub_23F4064F8();
  v16 = *(_QWORD *)(v15 - 8);
  sub_23F5B49F0(v13);
  sub_23F5B49F0(v13 + *(int *)(v14 + 20));
  v17 = sub_23F61AD98();
  v18 = *(_QWORD *)(v17 + 16);
  v19 = MEMORY[0x24BEE4AF8];
  v105 = v12;
  if (v18)
  {
    v100 = v16;
    v103 = v15;
    v20 = v12[27];
    v21 = v12[23];
    v107 = MEMORY[0x24BEE4AF8];
    sub_23F5B4794();
    sub_23F383EB8();
    v23 = v17 + v22;
    v24 = *(_QWORD *)(v21 + 72);
    v25 = *(void (**)(void))(v21 + 16);
    v26 = v107;
    v27 = v12;
    do
    {
      v28 = v27[25];
      sub_23F5B4A20();
      v25();
      sub_23F5B4A14();
      sub_23F3B1CC8(v28, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F5B4774();
        v26 = v107;
      }
      v27 = v105;
      v29 = *(_QWORD *)(v26 + 16);
      if (v29 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        sub_23F5B465C();
        v27 = v105;
        v26 = v107;
      }
      *(_QWORD *)(v26 + 16) = v29 + 1;
      sub_23F383EB8();
      (*(void (**)(unint64_t))(v20 + 32))(v26 + v30 + *(_QWORD *)(v20 + 72) * v29);
      v107 = v26;
      v23 += v24;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x24BEE4AF8];
    v16 = v100;
    v15 = v103;
  }
  else
  {
    sub_23F362D08();
    v26 = MEMORY[0x24BEE4AF8];
    v27 = v12;
  }
  v106 = v19;
  v31 = *(_QWORD *)(v26 + 16);
  if (v31)
  {
    sub_23F543704();
    v33 = (uint64_t (*)(char *, uint64_t))(v26 + v32);
    v35 = *(_QWORD *)(v34 + 72);
    sub_23F617BA0();
    do
    {
      sub_23F5B1664(v33, v27[6], v27[7], &v107);
      sub_23F5B49C8();
      v27 = v105;
      v33 = (uint64_t (*)(char *, uint64_t))((char *)v33 + v35);
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease_n();
    v36 = v106;
  }
  else
  {
    sub_23F3837B0();
    v36 = MEMORY[0x24BEE4AF8];
  }
  v37 = v27[38];
  v38 = v27[35];
  v40 = v27[30];
  v39 = v27[31];
  v41 = *(void (**)(void))(v16 + 16);
  sub_23F5B4A20();
  v41();
  sub_23F36196C(v39, 0, 1, v15);
  ((void (*)(uint64_t, uint64_t, uint64_t))v41)(v40, v37 + *(int *)(v38 + 20), v15);
  v42 = sub_23F5B48F8();
  sub_23F36196C(v42, v43, v44, v15);
  v45 = sub_23F61AD98();
  v46 = *(_QWORD *)(v45 + 16);
  if (v46)
  {
    v96 = v36;
    v104 = v27[27];
    v47 = v27[23];
    v48 = v27[19];
    v107 = MEMORY[0x24BEE4AF8];
    sub_23F37C1FC();
    sub_23F383EB8();
    v50 = v45 + v49;
    v99 = *(_QWORD *)(v47 + 72);
    v101 = v47;
    v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
    v51 = v107;
    do
    {
      v52 = v27[28];
      v16 = v27[25];
      v98(v16, v50, v27[22]);
      sub_23F61AB4C();
      sub_23F61A498();
      sub_23F3B1CC8(v52, *(uint64_t (**)(uint64_t, uint64_t))(v104 + 8));
      sub_23F383E64(v16, *(uint64_t (**)(uint64_t, uint64_t))(v101 + 8));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F5B4760();
        v51 = v107;
      }
      v53 = *(_QWORD *)(v51 + 16);
      v27 = v105;
      if (v53 >= *(_QWORD *)(v51 + 24) >> 1)
      {
        sub_23F37C1FC();
        v27 = v105;
        v51 = v107;
      }
      *(_QWORD *)(v51 + 16) = v53 + 1;
      sub_23F383EB8();
      (*(void (**)(unint64_t))(v48 + 32))(v51 + v54 + *(_QWORD *)(v48 + 72) * v53);
      v107 = v51;
      v50 += v99;
      --v46;
    }
    while (v46);
    swift_bridgeObjectRelease();
    v36 = v96;
  }
  else
  {
    sub_23F362D18();
    v51 = MEMORY[0x24BEE4AF8];
  }
  v55 = v27[21];
  v56 = v27;
  sub_23F617F6C();
  v57 = sub_23F3848F0();
  sub_23F362D94(v57, v58, v59);
  sub_23F41C5B8(v55, 0);
  v60 = sub_23F61AD98();
  v61 = *(_QWORD *)(v60 + 16);
  if (v61)
  {
    v62 = v27[23];
    v36 = v27[16];
    v107 = MEMORY[0x24BEE4AF8];
    sub_23F5B47A8();
    sub_23F383EB8();
    v64 = v60 + v63;
    v65 = *(_QWORD *)(v62 + 72);
    v16 = *(_QWORD *)(v62 + 16);
    v66 = v107;
    do
    {
      v67 = v56[17];
      ((void (*)(uint64_t, uint64_t, uint64_t))v16)(v56[24], v64, v56[22]);
      sub_23F5AFE94(v67);
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56[24], v56[22]);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F5B4704();
        v66 = v107;
      }
      v51 = *(_QWORD *)(v66 + 16);
      if (v51 >= *(_QWORD *)(v66 + 24) >> 1)
      {
        sub_23F5B4674();
        v66 = v107;
      }
      v56 = v105;
      sub_23F5B4820();
      (*(void (**)(unint64_t))(v36 + 32))(v68 + v69 * v51);
      v107 = v66;
      v64 += v65;
      --v61;
    }
    while (v61);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F362D08();
  }
  v70 = v105[40];
  v71 = v105[7];
  sub_23F5B47E4();
  v72 = *(_QWORD *)(v71 + v70);
  if (!v72)
    goto LABEL_38;
  v73 = v105[40];
  v61 = v105[7];
  sub_23F3D9E08();
  sub_23F58069C();
  v70 = v74;
  sub_23F366748();
  sub_23F5B4A60();
  sub_23F3D9AF4();
  v72 = *(_QWORD *)(v61 + v73);
  if (v72)
  {
    sub_23F3D9E08();
    sub_23F580DC8();
    sub_23F366748();
    sub_23F5B48E8();
    sub_23F61AD8C();
    v105[43] = v75;
    v105[44] = swift_task_alloc();
    sub_23F5570B4(&qword_256E7D978, v76, (uint64_t)&protocol conformance descriptor for ResponseGenerationTriageReport);
    sub_23F5570B4(qword_256E7D980, v77, (uint64_t)&protocol conformance descriptor for ResponseGenerationTriageReport);
    sub_23F5B45E4((uint64_t)sub_23F5AF374);
    return sub_23F5B4508();
  }
  else
  {
LABEL_38:
    v79 = sub_23F5B4524();
    sub_23F5B483C(v79, v80, (uint64_t (*)(_QWORD))type metadata accessor for DialogOutput);
    v81 = sub_23F507D88();
    v82 = sub_23F61C610();
    sub_23F5B4878(v81);
    sub_23F5B46E4();
    v102 = v83;
    if (v84)
    {
      v97 = v61;
      v85 = (uint8_t *)sub_23F366668();
      v107 = sub_23F366668();
      v86 = sub_23F5B4948(4.845e-34);
      sub_23F5B49DC(v86, v87, v88, v89, v90, v91, v92, v93, v36, v16, v97, v51, v70, v102);
      sub_23F5B46CC(v94);
      sub_23F384364();
      sub_23F5B4A6C();
      sub_23F38485C(&dword_23F35A000, v81, v82, "Returning system response with \"%{private}s\" response", v85);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F3C8574(v72);
    sub_23F5076E8(v102);
    sub_23F383F80(v61, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    sub_23F3663AC(v70, (uint64_t (*)(_QWORD))type metadata accessor for DialogOutput);
    swift_task_dealloc();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3668E4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    v95 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F3D0850(v95);
  }
}

uint64_t sub_23F5AFE94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  char *v32;
  _QWORD v34[2];
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;

  v39 = a1;
  v1 = sub_23F618134();
  MEMORY[0x24BDAC7A8](v1);
  v37 = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_23F61ACA8();
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v35 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F617D08();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v34[1] = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)v34 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)v34 - v9;
  v10 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v10);
  v40 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F61A504();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v34[0] = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v34 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)v34 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)v34 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)v34 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)v34 - v28;
  sub_23F61AB4C();
  sub_23F61A4C8();
  v30 = *(void (**)(char *, uint64_t))(v13 + 8);
  v30(v29, v12);
  sub_23F61AB4C();
  sub_23F61A498();
  v30(v27, v12);
  sub_23F61AB4C();
  sub_23F61A480();
  v30(v24, v12);
  sub_23F61AB4C();
  sub_23F61A474();
  v30(v21, v12);
  sub_23F61AB4C();
  sub_23F61A4E0();
  v30(v18, v12);
  v31 = (char *)v34[0];
  sub_23F61AB4C();
  v32 = v35;
  sub_23F61A4F8();
  v30(v31, v12);
  sub_23F61AC78();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v38);
  return sub_23F6183C8();
}

uint64_t sub_23F5B0208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE54B90];
  v3 = sub_23F619F10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_23F5B024C@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD, _QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE *v16;
  __int128 v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v5 = v4;
  v10 = v5 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_dialogPolicy;
  sub_23F3C08CC();
  sub_23F382EF8(v10, (uint64_t)&v17, &qword_256E7D918);
  if (v18)
  {
    sub_23F362678(&v17, (uint64_t)v19);
    v11 = v20;
    v12 = v21;
    sub_23F35EA9C(v19, v20);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a1, v11, v12);
    sub_23F5B1AE4(v13, a2, a3, a4);
    swift_bridgeObjectRelease();
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v19);
  }
  else
  {
    sub_23F3625D8((uint64_t)&v17, &qword_256E7D918);
    sub_23F5B3B78();
    v15 = sub_23F362D64();
    return sub_23F5B49A0(v15, v16);
  }
}

uint64_t sub_23F5B0368(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v4 = sub_23F4064F8();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = sub_23F445578();
  v3[10] = sub_23F3B5ECC();
  v5 = sub_23F38F984();
  v3[11] = v5;
  v3[12] = *(_QWORD *)(v5 - 8);
  v3[13] = sub_23F366578();
  v6 = sub_23F57B9D0();
  v3[14] = v6;
  v3[15] = *(_QWORD *)(v6 - 8);
  v3[16] = sub_23F366578();
  sub_23F35D2E8(&qword_256E7DC40);
  v3[17] = sub_23F366578();
  v7 = sub_23F5B4998();
  v3[18] = v7;
  v3[19] = *(_QWORD *)(v7 - 8);
  v3[20] = sub_23F366578();
  v8 = sub_23F594308();
  v3[21] = v8;
  v3[22] = *(_QWORD *)(v8 - 8);
  v3[23] = sub_23F445578();
  v3[24] = sub_23F3B5ECC();
  v9 = sub_23F5B4990();
  v3[25] = v9;
  v3[26] = *(_QWORD *)(v9 - 8);
  v3[27] = sub_23F445578();
  v3[28] = sub_23F3B5ECC();
  sub_23F35D2E8(&qword_256E73CF8);
  v3[29] = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FB18);
  v3[30] = sub_23F445578();
  v3[31] = sub_23F3B5ECC();
  sub_23F35D2E8(&qword_256E71CF8);
  v3[32] = sub_23F366578();
  v10 = sub_23F617F0C();
  v3[33] = v10;
  v3[34] = *(_QWORD *)(v10 - 8);
  v3[35] = sub_23F445578();
  v3[36] = sub_23F3B5ECC();
  v3[37] = sub_23F3B5ECC();
  v3[38] = sub_23F3B5ECC();
  v3[39] = sub_23F3B5ECC();
  sub_23F35D2E8(&qword_256E72CC0);
  v3[40] = sub_23F445578();
  v3[41] = sub_23F3B5ECC();
  v3[42] = sub_23F3B5ECC();
  v3[43] = sub_23F3B5ECC();
  v3[44] = sub_23F3B5ECC();
  v11 = sub_23F3B1728();
  v3[45] = v11;
  v3[46] = *(_QWORD *)(v11 - 8);
  v3[47] = sub_23F445578();
  v3[48] = sub_23F3B5ECC();
  v3[49] = sub_23F3B5ECC();
  v3[50] = sub_23F3B5ECC();
  sub_23F35D2E8(&qword_256E7DC48);
  v3[51] = sub_23F366578();
  v3[52] = type metadata accessor for DialogOutput();
  v3[53] = sub_23F366578();
  v12 = (_QWORD *)swift_task_alloc();
  v3[54] = v12;
  v13 = sub_23F507D4C(v12);
  return sub_23F450B50(v13, v14);
}

uint64_t sub_23F5B05B4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23F3B1998();
  *v2 = *v1;
  *(_QWORD *)(v3 + 440) = v0;
  swift_task_dealloc();
  sub_23F5B49B0();
  return sub_23F362AA0();
}

uint64_t sub_23F5B0608()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  NSObject *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void);
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  _BOOL4 v71;
  uint64_t v72;
  uint64_t v73;
  uint8_t *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  _BOOL4 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(_QWORD);
  uint64_t v95;
  void (*v96)(uint64_t);
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;

  sub_23F5B459C();
  v114 = v2;
  v115 = v3;
  v113 = v1;
  v4 = v1[51];
  sub_23F383740(v4, 1, v1[52]);
  if (!v29)
  {
    v14 = v1[50];
    sub_23F36262C(v4, v1[53], (uint64_t (*)(_QWORD))type metadata accessor for DialogOutput);
    sub_23F619124();
    v15 = v14;
    sub_23F619E8C();
    v16 = sub_23F507D60();
    if (sub_23F3F0E3C(v16))
    {
      v18 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v18 = 0;
      sub_23F4114BC(&dword_23F35A000, v14, (os_log_type_t)v14, "In-app response policy triggered.", v18);
      sub_23F366530();
    }
    v19 = v1[53];
    v20 = v1[46];
    v21 = v1[4];

    sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    sub_23F36262C(v19, v21, (uint64_t (*)(_QWORD))type metadata accessor for DialogOutput);
LABEL_32:
    sub_23F5B4360();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3668E4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C6C();
    sub_23F383FDC();
    sub_23F38409C();
    sub_23F41C50C();
    v62 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F52E6A4(v62);
  }
  v5 = v1[43];
  sub_23F3625D8(v4, &qword_256E7DC48);
  v6 = sub_23F5B49FC();
  sub_23F3E5350(v6, v7);
  sub_23F3E5350(v5, 1);
  v8 = *(_QWORD *)(sub_23F61AD98() + 16);
  swift_bridgeObjectRelease();
  if (v8 == 1)
  {
    v0 = v1 + 29;
    v9 = v1[18];
    v10 = sub_23F61AD98();
    sub_23F5B4A54(v10);
    sub_23F362984();
    v11 = sub_23F5B49FC();
    sub_23F383740(v11, v12, v9);
    if (v29)
    {
      v13 = &qword_256E73CF8;
    }
    else
    {
      v0 = v1 + 31;
      v22 = v1[31];
      v24 = v1[28];
      v23 = v1[29];
      v25 = v1[26];
      v26 = v1[24];
      v108 = v1[22];
      v110 = v1[21];
      v27 = v1[19];
      sub_23F61AB4C();
      sub_23F3B1CC8(v23, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
      sub_23F61A4F8();
      sub_23F383D74(v24, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
      sub_23F61AC9C();
      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v26, v110);
      v28 = sub_23F3846CC();
      sub_23F383740(v22, 1, v28);
      if (!v29)
      {
        v78 = v1[32];
        v77 = v1[33];
        v79 = v1[31];
        sub_23F618104();
        sub_23F383E64(v79, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8));
        sub_23F383740(v78, 1, v77);
        if (!v80)
        {
          v82 = v1[38];
          v81 = v1[39];
          v83 = v1[34];
          sub_23F38431C(v81, v1[32], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 32));
          sub_23F3F0F00();
          sub_23F38431C(v82, v81, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 16));
          v84 = sub_23F619E8C();
          v85 = sub_23F61C61C();
          v86 = os_log_type_enabled(v84, v85);
          v87 = v1[38];
          v89 = v1[33];
          v88 = v1[34];
          if (v86)
          {
            v90 = (uint8_t *)sub_23F366668();
            v112 = sub_23F366668();
            *(_DWORD *)v90 = 136315138;
            v91 = sub_23F617ED0();
            sub_23F37AE00(v91, v92, &v112);
            v1[3] = v93;
            sub_23F61C790();
            sub_23F384120();
            (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v89);
            sub_23F38485C(&dword_23F35A000, v84, v85, "Passing through dialog '%s'", v90);
            sub_23F3B17D4();
            sub_23F366530();
          }
          v94 = *(uint64_t (**)(_QWORD))(v88 + 8);
          ((void (*)(_QWORD, _QWORD))v94)(v1[38], v1[33]);

          v95 = sub_23F3848F0();
          v96(v95);
          v97 = (uint64_t *)v1[42];
          v98 = sub_23F617ED0();
          v100 = v99;
          sub_23F3B2238(v98, &qword_256E72CC0);
          *v97 = v98;
          v97[1] = v100;
          sub_23F5B48B8();
          sub_23F5B468C();
          sub_23F617EE8();
          v102 = v101;
          v103 = sub_23F406E84();
          v104 = v94(v103);
          if (!v102)
            goto LABEL_25;
          v105 = v1[43];
          sub_23F594470(v104, &qword_256E72CC0);
          sub_23F5B480C();
          v56 = v105;
LABEL_24:
          sub_23F3E5350(v56, 0);
LABEL_25:
          sub_23F5B4590(v1[44]);
          v57 = sub_23F5B4968();
          if (v58 == 1)
          {
            v59 = sub_23F5B48A8(v57);
            sub_23F594470(v59, &qword_256E72CC0);
          }
          else
          {
            sub_23F5B4898(v57);
          }
          sub_23F5B4590(v1[43]);
          v60 = sub_23F5B471C();
          if (v29)
          {
            v61 = sub_23F5B48A8(v60);
            sub_23F594470(v61, &qword_256E72CC0);
          }
          else
          {
            sub_23F5B49BC(v60);
          }
          sub_23F5B4574();
          sub_23F5B474C();
          goto LABEL_32;
        }
        goto LABEL_14;
      }
      v13 = &qword_256E6FB18;
    }
    sub_23F3625D8(*v0, v13);
    sub_23F3838D8(v1[32], v30, v31, v1[33]);
LABEL_14:
    sub_23F3625D8(v1[32], &qword_256E71CF8);
  }
  v32 = *(_QWORD *)(sub_23F61AD98() + 16);
  if (!v32)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    v48 = v1[48];
    sub_23F3F0F00();
    sub_23F619E8C();
    v49 = sub_23F3B1A04();
    if (sub_23F3F0E3C(v49))
    {
      v50 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v50 = 0;
      sub_23F4114BC(&dword_23F35A000, v48, (os_log_type_t)v0, "Dialog suppression requested", v50);
      sub_23F366530();
    }
    v51 = v1[48];
    v52 = v1[46];
    v53 = v1[44];
    v54 = v1[7];
    v55 = v1[8];

    sub_23F383E64(v51, *(uint64_t (**)(uint64_t, uint64_t))(v52 + 8));
    sub_23F3625D8(v53, &qword_256E72CC0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 104))(v53, *MEMORY[0x24BE52F08], v54);
    v56 = v53;
    goto LABEL_24;
  }
  v109 = v1[22];
  v111 = v1[26];
  v33 = v1[19];
  sub_23F383EB8();
  v36 = v34 + v35;
  v106 = *(_QWORD *)(v33 + 72);
  v107 = *(void (**)(uint64_t))(v33 + 16);
  while (1)
  {
    v37 = v1[30];
    v38 = v1[27];
    v39 = v1[23];
    v40 = sub_23F406E84();
    v107(v40);
    sub_23F61AB4C();
    sub_23F61A4F8();
    sub_23F3B1CC8(v38, *(uint64_t (**)(uint64_t, uint64_t))(v111 + 8));
    sub_23F61AC9C();
    sub_23F383E88(v39, *(uint64_t (**)(uint64_t, uint64_t))(v109 + 8));
    v41 = sub_23F3846CC();
    v42 = sub_23F36195C(v37, 1, v41);
    v43 = v1[30];
    if (v42 == 1)
    {
      v64 = &qword_256E6FB18;
      v65 = v1[30];
      goto LABEL_35;
    }
    v44 = v1[17];
    sub_23F6180F8();
    sub_23F383F80(v43, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8));
    v45 = sub_23F6180D4();
    sub_23F383740(v44, 1, v45);
    if (v29)
      break;
    v0 = (uint64_t *)v1[20];
    v46 = v1[17];
    v47 = sub_23F6180C8();
    sub_23F383F80(v46, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8));
    sub_23F3D98EC((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    if ((v47 & 1) == 0)
      goto LABEL_36;
    v36 += v106;
    if (!--v32)
      goto LABEL_21;
  }
  v65 = v1[17];
  v64 = (uint64_t *)&unk_256E7DC40;
LABEL_35:
  sub_23F3625D8(v65, v64);
  (*(void (**)(_QWORD, _QWORD))(v33 + 8))(v1[20], v1[18]);
LABEL_36:
  v67 = v1[15];
  v66 = v1[16];
  v68 = v1[5];
  swift_bridgeObjectRelease();
  sub_23F3F0F00();
  sub_23F38431C(v66, v68, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 16));
  v69 = sub_23F619E8C();
  v70 = sub_23F61C61C();
  v71 = os_log_type_enabled(v69, v70);
  v73 = v1[15];
  v72 = v1[16];
  if (v71)
  {
    v74 = (uint8_t *)sub_23F366668();
    *(_DWORD *)v74 = 134217984;
    v75 = *(_QWORD *)(sub_23F61AD98() + 16);
    swift_bridgeObjectRelease();
    sub_23F383F80(v72, *(uint64_t (**)(uint64_t, uint64_t))(v73 + 8));
    v1[2] = v75;
    sub_23F61C790();
    sub_23F38485C(&dword_23F35A000, v69, v70, "Generating dialog for %ld tool results", v74);
    sub_23F366530();
  }
  sub_23F383F80(v1[16], *(uint64_t (**)(uint64_t, uint64_t))(v73 + 8));

  sub_23F384274(v1[46]);
  v76 = (_QWORD *)swift_task_alloc();
  v1[56] = v76;
  *v76 = v1;
  v76[1] = sub_23F5B0E84;
  return sub_23F5B1C94(v1[37], v1[5]);
}

uint64_t sub_23F5B0E84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 456) = v1;
  swift_task_dealloc();
  return sub_23F362AA0();
}

uint64_t sub_23F5B0ED4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t v26;

  sub_23F5B459C();
  if ((_AFSupportPreferencesBoolForKeyWithDefault() & 1) == 0)
  {
    v1 = v0[37];
    v26 = v0[36];
    v2 = v0[34];
    v3 = v0[33];
    v4 = v0[12];
    v5 = v0[13];
    sub_23F38431C(v0[35], v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    sub_23F61AD74();
    sub_23F617018();
    sub_23F3D98EC(v5, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_23F5B134C();
    swift_bridgeObjectRelease();
    v6 = *(void (**)(uint64_t))(v2 + 8);
    v7 = sub_23F3848F0();
    v6(v7);
    ((void (*)(uint64_t, uint64_t))v6)(v1, v3);
    sub_23F38431C(v1, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
  }
  v8 = (uint64_t *)v0[42];
  v9 = sub_23F617ED0();
  v11 = v10;
  sub_23F3B2238(v9, &qword_256E72CC0);
  *v8 = v9;
  v8[1] = v11;
  sub_23F5B48B8();
  sub_23F5B468C();
  sub_23F617EE8();
  v13 = v12;
  v14 = sub_23F406E84();
  v16 = v15(v14);
  if (v13)
  {
    v17 = v0[43];
    sub_23F594470(v16, &qword_256E72CC0);
    sub_23F5B480C();
    sub_23F3E5350(v17, 0);
  }
  sub_23F5B4590(v0[44]);
  v18 = sub_23F5B4968();
  if (v19 == 1)
  {
    v20 = sub_23F5B48A8(v18);
    sub_23F594470(v20, &qword_256E72CC0);
  }
  else
  {
    sub_23F5B4898(v18);
  }
  sub_23F5B4590(v0[43]);
  v21 = sub_23F5B471C();
  if (v22)
  {
    v23 = sub_23F5B48A8(v21);
    sub_23F594470(v23, &qword_256E72CC0);
  }
  else
  {
    sub_23F5B49BC(v21);
  }
  sub_23F5B4574();
  sub_23F5B474C();
  swift_task_dealloc();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  sub_23F41C50C();
  swift_task_dealloc();
  v24 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F52E6A4(v24);
}

uint64_t sub_23F5B11B4()
{
  uint64_t v0;

  sub_23F5B459C();
  sub_23F5B4360();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  sub_23F41C50C();
  return sub_23F52E6A4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5B1274()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F5B459C();
  v1 = *(_QWORD *)(v0 + 352);
  sub_23F4DC198(*(_QWORD *)(v0 + 344));
  sub_23F4DC198(v1);
  sub_23F5B4360();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  sub_23F41C50C();
  return sub_23F52E6A4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F5B134C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;

  v0 = sub_23F618614();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  sub_23F38F964();
  v4 = v3 - v2;
  sub_23F617EE8();
  if (v5)
  {
    objc_opt_self();
    v6 = (void *)sub_23F5B4928();
    sub_23F362D18();
    v7 = (void *)sub_23F61C0E8();
    v8 = sub_23F5B4958((uint64_t)v7, sel_filterProfanity_locale_);

    sub_23F61C10C();
    sub_23F5B4A78();
    sub_23F5B48D8();
    sub_23F618608();
    sub_23F3B1CC8(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_23F617E88();
  if (v9)
  {
    objc_opt_self();
    v10 = (void *)sub_23F5B4928();
    sub_23F362D18();
    v11 = (void *)sub_23F61C0E8();
    v12 = sub_23F5B4958((uint64_t)v11, sel_filterProfanity_locale_);

    sub_23F61C10C();
    sub_23F5B4A78();
    sub_23F5B48D8();
    sub_23F6185FC();
    sub_23F3B1CC8(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_23F617EA0();
  if (v13)
  {
    v14 = (void *)objc_opt_self();
    v15 = (void *)sub_23F61C0E8();
    sub_23F362984();
    v16 = (void *)sub_23F5B4A08();
    v17 = objc_msgSend(v14, sel_filterProfanity_locale_, v15, v16);

    sub_23F61C10C();
    sub_23F6185E4();
    sub_23F618608();
    v18 = v1;
    sub_23F383E88(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  else
  {
    v18 = v1;
  }
  v19 = (void *)objc_opt_self();
  sub_23F617ED0();
  v20 = (void *)sub_23F61C0E8();
  sub_23F362984();
  v21 = (void *)sub_23F5B4A08();
  v22 = objc_msgSend(v19, sel_filterProfanity_locale_, v20, v21);

  sub_23F61C10C();
  sub_23F406E84();
  sub_23F6185E4();
  sub_23F6185FC();
  sub_23F383E88(v4, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  return sub_23F617EC4();
}

uint64_t sub_23F5B1664@<X0>(uint64_t (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint8_t *v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t);
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t);
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;

  v62 = a4;
  v56 = a3;
  v60 = a2;
  v61 = a1;
  v63 = sub_23F61ACA8();
  v4 = *(_QWORD *)(v63 - 8);
  v5 = MEMORY[0x24BDAC7A8](v63);
  v57 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v53 - v7;
  v9 = sub_23F35D2E8(&qword_256E6FB18);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v53 - v13;
  v15 = sub_23F35D2E8(&qword_256E7DC38);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v55 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v54 = (char *)&v53 - v18;
  v19 = sub_23F61B32C();
  v58 = *(_QWORD *)(v19 - 8);
  v59 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v64 = (uint64_t)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23F619E98();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F619124();
  v25 = sub_23F619E8C();
  v26 = sub_23F61C61C();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v53 = v12;
    v28 = v4;
    v29 = v27;
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_23F35A000, v25, v26, "Building visuals using tool metadata and tool Provided Views.", v27, 2u);
    v30 = v29;
    v4 = v28;
    v12 = v53;
    MEMORY[0x242670B70](v30, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  v32 = v58;
  v31 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v64, v56 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_toolbox, v59);
  v33 = v61;
  sub_23F61A4F8();
  sub_23F61AC9C();
  v34 = *(void (**)(char *, uint64_t))(v4 + 8);
  v34(v8, v63);
  v35 = sub_23F61811C();
  if (sub_23F36195C((uint64_t)v14, 1, v35) == 1)
  {
    v36 = &qword_256E6FB18;
    v37 = (uint64_t)v14;
LABEL_7:
    sub_23F3625D8(v37, v36);
    v41 = (void (*)(char *, uint64_t, uint64_t))MEMORY[0x24BEE4AF8];
    goto LABEL_9;
  }
  v38 = v54;
  sub_23F618110();
  v39 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v14, v35);
  v40 = sub_23F618074();
  if (sub_23F36195C(v39, 1, v40) == 1)
  {
    v36 = &qword_256E7DC38;
    v37 = v39;
    goto LABEL_7;
  }
  v41 = (void (*)(char *, uint64_t, uint64_t))MEMORY[0x24266B4B8]();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
LABEL_9:
  v42 = v57;
  sub_23F61A4F8();
  sub_23F61AC9C();
  v34(v42, v63);
  if (sub_23F36195C((uint64_t)v12, 1, v35) == 1)
  {
    v43 = &qword_256E6FB18;
    v44 = (uint64_t)v12;
  }
  else
  {
    v45 = v55;
    sub_23F618110();
    v46 = (uint64_t)v45;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v12, v35);
    v47 = sub_23F618074();
    if (sub_23F36195C(v46, 1, v47) != 1)
    {
      v48 = sub_23F618038();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
      goto LABEL_15;
    }
    v43 = &qword_256E7DC38;
    v44 = v46;
  }
  sub_23F3625D8(v44, v43);
  v48 = MEMORY[0x24BEE4AF8];
LABEL_15:
  v49 = v64;
  sub_23F5B4AA4(v60, v33, v64, v41, v48);
  v51 = v50;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v49, v31);
  *v62 = v51;
  return result;
}

uint64_t sub_23F5B1AE4@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD, _QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _BYTE *v20;
  __int128 v21;
  uint64_t v22;
  _QWORD v23[5];

  v9 = sub_23F619E98();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F38F964();
  v13 = v12 - v11;
  v14 = v4 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_responseGenerationInputBuilder;
  sub_23F3C08CC();
  sub_23F382EF8(v14, (uint64_t)&v21, &qword_256E7D908);
  if (v22)
  {
    sub_23F362678(&v21, (uint64_t)v23);
    sub_23F35EA9C(v23, v23[3]);
    sub_23F57DFEC(a2, a1, a3, a4);
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v23);
  }
  else
  {
    sub_23F3625D8((uint64_t)&v21, &qword_256E7D908);
    sub_23F619124();
    v16 = sub_23F619E8C();
    v17 = sub_23F61C628();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_23F35A000, v16, v17, "No model input builder", v18, 2u);
      MEMORY[0x242670B70](v18, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
    sub_23F5B3B78();
    v19 = sub_23F362D64();
    return sub_23F5B49A0(v19, v20);
  }
}

uint64_t sub_23F5B1C94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[29] = a2;
  v3[30] = v2;
  v3[28] = a1;
  sub_23F35D2E8(&qword_256E71CF8);
  v3[31] = sub_23F366578();
  v4 = sub_23F617F0C();
  v3[32] = v4;
  v3[33] = *(_QWORD *)(v4 - 8);
  v3[34] = sub_23F366578();
  v5 = sub_23F57B9D0();
  v3[35] = v5;
  v3[36] = *(_QWORD *)(v5 - 8);
  v3[37] = sub_23F366578();
  type metadata accessor for ResponseCatalogMatcher(0);
  v3[38] = sub_23F366578();
  sub_23F35D2E8(&qword_256E73D30);
  v3[39] = sub_23F366578();
  sub_23F35D2E8(&qword_256E73CF8);
  v3[40] = sub_23F366578();
  v6 = sub_23F6193B8();
  v3[41] = v6;
  v3[42] = *(_QWORD *)(v6 - 8);
  v3[43] = sub_23F366578();
  v7 = sub_23F3B1728();
  v3[44] = v7;
  v3[45] = *(_QWORD *)(v7 - 8);
  v3[46] = sub_23F4E6230();
  v3[47] = sub_23F3E0220();
  v3[48] = sub_23F3E0220();
  v3[49] = sub_23F3E0220();
  v3[50] = sub_23F3E0220();
  v3[51] = sub_23F3E0220();
  v3[52] = sub_23F3E0220();
  v8 = sub_23F618B90();
  v3[53] = v8;
  v3[54] = *(_QWORD *)(v8 - 8);
  v3[55] = sub_23F366578();
  v3[56] = type metadata accessor for TypedValueFormatter(0);
  v3[57] = sub_23F366578();
  sub_23F55153C();
  return sub_23F362AA0();
}

uint64_t sub_23F5B1DEC()
{
  os_log_type_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  NSObject *v18;
  os_log_type_t v19;
  _WORD *v20;
  uint64_t v21;
  _BYTE *v22;

  sub_23F3D9A84();
  v2 = *(_QWORD *)(v1 + 240)
     + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_responseDialogGenerator;
  sub_23F3B1450();
  sub_23F382EF8(v2, v1 + 56, &qword_256E7D910);
  if (*(_QWORD *)(v1 + 80))
  {
    v4 = *(_QWORD *)(v1 + 240);
    sub_23F362678((__int128 *)(v1 + 56), v1 + 16);
    v5 = v4 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_fallbackDialogGenerator;
    sub_23F3B1450();
    sub_23F382EF8(v5, v1 + 96, &qword_256E7D910);
    if (*(_QWORD *)(v1 + 120))
    {
      v7 = *(_QWORD *)(v1 + 448);
      v6 = *(_QWORD *)(v1 + 456);
      sub_23F362678((__int128 *)(v1 + 96), v1 + 136);
      sub_23F61AD74();
      v8 = (_QWORD *)(v6 + *(int *)(v7 + 20));
      *v8 = 0;
      v8[1] = 0;
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v1 + 464) = v9;
      *v9 = v1;
      v9[1] = sub_23F5B2088;
      return sub_23F5B337C(*(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 456));
    }
    v18 = *(NSObject **)(v1 + 376);
    sub_23F3625D8(v1 + 96, &qword_256E7D910);
    sub_23F3F0F00();
    sub_23F619E8C();
    v19 = sub_23F3F0EEC();
    if (sub_23F384458(v19))
    {
      v20 = (_WORD *)sub_23F3EEE70();
      sub_23F507DB0(v20);
      sub_23F4114BC(&dword_23F35A000, v18, (os_log_type_t)v5, "No fallback dialog generator", (uint8_t *)(v1 + 200));
      sub_23F366530();
    }
    sub_23F5B49D4();
    sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 104));
    sub_23F5B3B78();
    v21 = sub_23F362D64();
    sub_23F5B45D4(v21, v22);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v1 + 16);
  }
  else
  {
    v11 = *(NSObject **)(v1 + 368);
    sub_23F3B2238(v3, &qword_256E7D910);
    sub_23F3F0F00();
    sub_23F619E8C();
    v12 = sub_23F3F0EEC();
    if (sub_23F3F0E3C(v12))
    {
      v13 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v13 = 0;
      sub_23F4114BC(&dword_23F35A000, v11, v0, "No response dialog generator", v13);
      sub_23F366530();
    }
    v15 = *(_QWORD *)(v1 + 360);
    v14 = *(_QWORD *)(v1 + 368);

    sub_23F383E64(v14, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
    sub_23F5B3B78();
    v16 = sub_23F362D64();
    sub_23F5B45D4(v16, v17);
  }
  sub_23F5B4494();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  return sub_23F3D995C(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23F5B2088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F406D20();
  *(_QWORD *)(v0 + 472) = v2;
  *(_QWORD *)(v0 + 480) = v1;
  swift_task_dealloc();
  return sub_23F362AA0();
}

uint64_t sub_23F5B20E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _WORD *v24;
  _QWORD *v25;
  uint64_t (*v26)();
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::OpaquePointer v62;
  char v63;
  NSObject *v64;
  os_log_type_t v65;
  _WORD *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70[7];

  v2 = *(_QWORD *)(v0 + 432);
  v1 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 424);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BE57440], v3);
  v4 = sub_23F618B84();
  sub_23F383E64(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v4 & 1) == 0)
  {
    v22 = *(NSObject **)(v0 + 416);
    sub_23F3F0F00();
    sub_23F619E8C();
    v23 = sub_23F507D60();
    if (sub_23F384458(v23))
    {
      v24 = (_WORD *)sub_23F3EEE70();
      sub_23F507DB0(v24);
      sub_23F4114BC(&dword_23F35A000, v22, (os_log_type_t)v3, "ResponseGeneration: Is disabled for this request, going to fallback audio", (uint8_t *)v4);
      sub_23F366530();
    }
    sub_23F5B49D4();
    sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v25 = (_QWORD *)sub_23F5B4404();
    v26 = sub_23F5B27BC;
    *(_QWORD *)(v0 + 488) = v25;
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 240)
                 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_inputValidator);
  *(_QWORD *)(v0 + 504) = v5;
  if (!v5)
  {
    v28 = *(NSObject **)(v0 + 384);
    sub_23F3F0F00();
    sub_23F619E8C();
    v29 = sub_23F3F0EEC();
    if (sub_23F384458(v29))
    {
      v30 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v30 = 0;
      sub_23F4114BC(&dword_23F35A000, v28, (os_log_type_t)v3, "No input validator", v30);
      sub_23F366530();
    }
    v31 = *(_QWORD *)(v0 + 456);
    v32 = *(_QWORD *)(v0 + 384);
    v33 = *(_QWORD *)(v0 + 360);

    sub_23F3D98EC(v32, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    sub_23F5B3B78();
    v34 = sub_23F362D64();
    sub_23F5B45D4(v34, v35);
    sub_23F3DDBDC();
    v21 = v31;
    goto LABEL_17;
  }
  swift_getKeyPath();
  swift_retain();
  sub_23F617C9C();
  sub_23F3D9AF4();
  if ((*(_BYTE *)(v0 + 616) & 1) == 0)
  {
    if ((sub_23F59F99C(*(_QWORD *)(v0 + 232)) & 1) != 0)
    {
      sub_23F35EA9C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      v37 = (_QWORD *)sub_23F5B4480();
      *(_QWORD *)(v0 + 528) = v37;
LABEL_21:
      sub_23F5B47C8(v37);
LABEL_13:
      sub_23F5B44EC();
      __asm { BR              X5 }
    }
    if (*(_QWORD *)(*(_QWORD *)(v0 + 240)
                   + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_biomeRoot))
    {
      v45 = *(_QWORD *)(v0 + 336);
      v44 = *(_QWORD *)(v0 + 344);
      v46 = *(_QWORD *)(v0 + 328);
      sub_23F3D9E08();
      sub_23F58069C();
      sub_23F366748();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v45 + 104))(v44, *MEMORY[0x24BE58E08], v46);
      sub_23F581AF8();
      sub_23F3DDBDC();
      sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
    }
    v25 = (_QWORD *)sub_23F5B4404();
    v26 = sub_23F5B28EC;
    *(_QWORD *)(v0 + 512) = v25;
LABEL_12:
    *v25 = v0;
    v25[1] = v26;
    goto LABEL_13;
  }
  v6 = *(_QWORD *)(v0 + 320);
  v7 = sub_23F61AD98();
  sub_23F5B4A54(v7);
  sub_23F362984();
  v8 = sub_23F5B4998();
  v9 = sub_23F5B49FC();
  sub_23F383740(v9, v10, v8);
  if (v13)
  {
    v14 = *(NSObject **)(v0 + 392);
    sub_23F3625D8(*(_QWORD *)(v0 + 320), &qword_256E73CF8);
    sub_23F3F0F00();
    sub_23F619E8C();
    v15 = sub_23F3B1A04();
    if (sub_23F384458(v15))
    {
      v16 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v16 = 0;
      sub_23F4114BC(&dword_23F35A000, v14, (os_log_type_t)v6, "No ResponseGenerationRequest. returning", v16);
      sub_23F366530();
    }
    v17 = *(_QWORD *)(v0 + 456);
    v18 = *(_QWORD *)(v0 + 392);
    v19 = *(_QWORD *)(v0 + 360);

    sub_23F3B1CC8(v18, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    sub_23F5B3B78();
    sub_23F362D64();
    *v20 = 1;
    swift_willThrow();
    sub_23F3DDBDC();
    swift_release();
    v21 = v17;
LABEL_17:
    sub_23F3663AC(v21, type metadata accessor for TypedValueFormatter);
    goto LABEL_18;
  }
  v39 = *(_QWORD *)(v0 + 472);
  v38 = *(_QWORD *)(v0 + 480);
  v40 = *(_QWORD *)(v0 + 312);
  sub_23F3838D8(v40, v11, v12, *(_QWORD *)(v0 + 448));
  v41 = sub_23F5CDCB4(v39, v40);
  if (v38)
  {
    v42 = *(_QWORD *)(v0 + 320);
    sub_23F3625D8(*(_QWORD *)(v0 + 312), &qword_256E73D30);
    sub_23F366898(v43, type metadata accessor for TypedValueFormatter);
    sub_23F3DDBDC();
    sub_23F3D9AF4();
    sub_23F3D98EC(v42, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
LABEL_18:
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
    sub_23F5B4494();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F5B44EC();
    __asm { BR              X0 }
  }
  v69 = (void *)v41;
  v47 = *(_QWORD *)(v0 + 320);
  v48 = *(_QWORD *)(v0 + 296);
  v67 = *(_QWORD *)(v0 + 304);
  v50 = *(_QWORD *)(v0 + 280);
  v49 = *(_QWORD *)(v0 + 288);
  v51 = *(_QWORD *)(v0 + 232);
  sub_23F3625D8(*(_QWORD *)(v0 + 312), &qword_256E73D30);
  sub_23F3D98EC(v47, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v48, v51, v50);
  swift_getKeyPath();
  sub_23F617C9C();
  sub_23F3D9AF4();
  sub_23F5785A0(v48, *(unsigned __int8 *)(v0 + 617), v67);
  v52 = sub_23F578F84();
  *(_QWORD *)(v0 + 544) = v52;
  if (!v52)
  {
    if (qword_256E6F0F0 != -1)
      swift_once();
    v57 = *(uint64_t **)(v0 + 304);
    v58 = v57[1];
    if (v58)
    {
      v5 = v57[5];
      v68 = v57[4];
      v60 = v57[2];
      v59 = v57[3];
      v70[0] = *v57;
      v61 = v70[0];
      v70[1] = v58;
      v70[2] = v60;
      v70[3] = v59;
      v70[4] = v68;
      v70[5] = v5;
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F617BA0();
      v62._rawValue = v69;
      v63 = sub_23F5BF2B4(v62, v70);
      sub_23F38432C();
      sub_23F57B6D0(v61, v58);
      if ((v63 & 1) != 0)
      {
        sub_23F35EA9C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
        v37 = (_QWORD *)sub_23F5B4480();
        *(_QWORD *)(v0 + 584) = v37;
        goto LABEL_21;
      }
    }
    else
    {
      sub_23F5B48B0();
    }
    v64 = *(NSObject **)(v0 + 400);
    sub_23F3F0F00();
    sub_23F619E8C();
    v65 = sub_23F507D60();
    if (sub_23F384458(v65))
    {
      v66 = (_WORD *)sub_23F3EEE70();
      sub_23F507DB0(v66);
      sub_23F4114BC(&dword_23F35A000, v64, (os_log_type_t)v58, "ResponseValidator did not find valid argument pattern. To prevent hallucination, going to fallback.", (uint8_t *)(v0 + 16));
      sub_23F366530();
    }
    sub_23F5B49D4();
    sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    v25 = (_QWORD *)sub_23F5B4404();
    v26 = sub_23F5B2EE4;
    *(_QWORD *)(v0 + 600) = v25;
    goto LABEL_12;
  }
  sub_23F5B48B0();
  v53 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 552) = v53;
  *v53 = v0;
  v53[1] = sub_23F5B2A68;
  sub_23F5B44EC();
  return sub_23F579308(v54, v55);
}

uint64_t sub_23F5B27BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 496) = v1;
  swift_task_dealloc();
  return sub_23F362AA0();
}

uint64_t sub_23F5B280C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3D9A84();
  v1 = *(_QWORD *)(v0 + 456);
  swift_release();
  sub_23F3663AC(v1, type metadata accessor for TypedValueFormatter);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  v2 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3D995C(v2);
}

uint64_t sub_23F5B28EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 520) = v1;
  swift_task_dealloc();
  return sub_23F362AA0();
}

uint64_t sub_23F5B293C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F3D9A84();
  sub_23F5B4A40();
  swift_release();
  sub_23F366748();
  sub_23F3663AC(v0, type metadata accessor for TypedValueFormatter);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v2);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v1 + 16);
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  v3 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3D995C(v3);
}

uint64_t sub_23F5B2A18()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 536) = v1;
  swift_task_dealloc();
  return sub_23F362AA0();
}

uint64_t sub_23F5B2A68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 560) = v1;
  swift_task_dealloc();
  return sub_23F362AA0();
}

uint64_t sub_23F5B2AB8()
{
  os_log_type_t v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t (*v18)(uint64_t);

  sub_23F3D9A84();
  v2 = v1[31];
  sub_23F383740(v2, 1, v1[32]);
  if (v3)
  {
    v4 = v1[51];
    sub_23F3625D8(v2, &qword_256E71CF8);
    sub_23F3F0F00();
    sub_23F619E8C();
    v5 = sub_23F507D60();
    if (sub_23F384458(v5))
    {
      v6 = (uint8_t *)sub_23F3EEE70();
      *(_WORD *)v6 = 0;
      sub_23F4114BC(&dword_23F35A000, v4, v0, "CatalogMatcher did not find valid catalog. To prevent hallucination, going to fallback.", v6);
      sub_23F366530();
    }
    v7 = v1[51];
    v8 = v1[45];

    sub_23F383E64(v7, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    v9 = v1[21];
    sub_23F35EA9C(v1 + 17, v1[20]);
    v18 = (uint64_t (*)(uint64_t))(**(int **)(v9 + 8) + *(_QWORD *)(v9 + 8));
    v10 = (_QWORD *)swift_task_alloc();
    v1[71] = v10;
    v11 = sub_23F5B47C8(v10);
    return v18(v11);
  }
  else
  {
    v12 = v1[57];
    v13 = v1[38];
    v14 = v1[34];
    v15 = v1[28];
    swift_release();
    sub_23F3DDBDC();
    swift_release();
    sub_23F3663AC(v13, type metadata accessor for ResponseCatalogMatcher);
    sub_23F3663AC(v12, type metadata accessor for TypedValueFormatter);
    sub_23F4DC758(v14, v2);
    sub_23F4DC758(v15, v14);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v1 + 17));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v1 + 2));
    sub_23F3666C4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3666EC();
    sub_23F3666DC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F3668E4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F383898();
    sub_23F383978();
    sub_23F383890();
    v16 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F3D995C(v16);
  }
}

uint64_t sub_23F5B2CD8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 576) = v1;
  swift_task_dealloc();
  return sub_23F362AA0();
}

uint64_t sub_23F5B2D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F3D9A84();
  swift_release();
  sub_23F366748();
  v1 = swift_release();
  sub_23F3668C0(v1, type metadata accessor for ResponseCatalogMatcher);
  sub_23F3B1960(v2, type metadata accessor for TypedValueFormatter);
  sub_23F5B463C();
  sub_23F5B44C0();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  v3 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3D995C(v3);
}

uint64_t sub_23F5B2DE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 592) = v1;
  swift_task_dealloc();
  return sub_23F362AA0();
}

uint64_t sub_23F5B2E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23F3D9A84();
  sub_23F5B4A40();
  swift_release();
  v2 = sub_23F366748();
  sub_23F3B1960(v2, type metadata accessor for ResponseCatalogMatcher);
  sub_23F3663AC(v0, type metadata accessor for TypedValueFormatter);
  sub_23F5B463C();
  sub_23F5B44C0();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v1 + 16);
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  v3 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3D995C(v3);
}

uint64_t sub_23F5B2EE4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F406D20();
  sub_23F3B2010(v2);
  *(_QWORD *)(v0 + 608) = v1;
  swift_task_dealloc();
  return sub_23F362AA0();
}

uint64_t sub_23F5B2F34()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23F3B15E8();
  sub_23F3663AC(*(_QWORD *)(v0 + 456), type metadata accessor for TypedValueFormatter);
  sub_23F5B43EC();
  sub_23F5B4204();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  v1 = (uint64_t (*)(void))sub_23F3B1EE0();
  return sub_23F3B13B0(v1);
}

uint64_t sub_23F5B2FB8()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23F3B15E8();
  v0 = swift_release();
  sub_23F3B1960(v0, type metadata accessor for TypedValueFormatter);
  sub_23F5B43EC();
  sub_23F5B4204();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  v1 = (uint64_t (*)(void))sub_23F3B1EE0();
  return sub_23F3B13B0(v1);
}

uint64_t sub_23F5B3044()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23F3B15E8();
  sub_23F5B46B4();
  v0 = sub_23F3D9AF4();
  sub_23F3668C0(v0, type metadata accessor for TypedValueFormatter);
  sub_23F5B43EC();
  sub_23F5B4204();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  v1 = (uint64_t (*)(void))sub_23F3B1EE0();
  return sub_23F3B13B0(v1);
}

uint64_t sub_23F5B30C4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23F3B15E8();
  sub_23F5B46B4();
  v0 = sub_23F3D9AF4();
  sub_23F3668C0(v0, type metadata accessor for TypedValueFormatter);
  sub_23F5B43EC();
  sub_23F5B4204();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  v1 = (uint64_t (*)(void))sub_23F3B1EE0();
  return sub_23F3B13B0(v1);
}

uint64_t sub_23F5B3144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3B15E8();
  sub_23F5B4538();
  sub_23F3D9AF4();
  v0 = sub_23F3667A8();
  sub_23F366898(v0, type metadata accessor for ResponseCatalogMatcher);
  sub_23F366800(v1, type metadata accessor for TypedValueFormatter);
  sub_23F5B43EC();
  sub_23F5B4204();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  v2 = (uint64_t (*)(void))sub_23F3B1EE0();
  return sub_23F3B13B0(v2);
}

uint64_t sub_23F5B31D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3B15E8();
  sub_23F5B4538();
  sub_23F3D9AF4();
  v0 = sub_23F3667A8();
  sub_23F366898(v0, type metadata accessor for ResponseCatalogMatcher);
  sub_23F366800(v1, type metadata accessor for TypedValueFormatter);
  sub_23F5B43EC();
  sub_23F5B4204();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  v2 = (uint64_t (*)(void))sub_23F3B1EE0();
  return sub_23F3B13B0(v2);
}

uint64_t sub_23F5B3264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3B15E8();
  sub_23F5B45B8();
  v0 = sub_23F3D9AF4();
  sub_23F366800(v0, type metadata accessor for ResponseCatalogMatcher);
  sub_23F3668C0(v1, type metadata accessor for TypedValueFormatter);
  sub_23F5B43EC();
  sub_23F5B4204();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  v2 = (uint64_t (*)(void))sub_23F3B1EE0();
  return sub_23F3B13B0(v2);
}

uint64_t sub_23F5B32F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3B15E8();
  sub_23F5B45B8();
  v0 = sub_23F3D9AF4();
  sub_23F366800(v0, type metadata accessor for ResponseCatalogMatcher);
  sub_23F3668C0(v1, type metadata accessor for TypedValueFormatter);
  sub_23F5B43EC();
  sub_23F5B4204();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  v2 = (uint64_t (*)(void))sub_23F3B1EE0();
  return sub_23F3B13B0(v2);
}

uint64_t sub_23F5B337C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v4 = sub_23F617DD4();
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = sub_23F366578();
  v5 = sub_23F618134();
  v3[13] = v5;
  v3[14] = *(_QWORD *)(v5 - 8);
  v3[15] = sub_23F366578();
  v6 = sub_23F594308();
  v3[16] = v6;
  v3[17] = *(_QWORD *)(v6 - 8);
  v3[18] = sub_23F366578();
  v7 = sub_23F5B4990();
  v3[19] = v7;
  v3[20] = *(_QWORD *)(v7 - 8);
  v3[21] = sub_23F366578();
  v8 = sub_23F5B4998();
  v3[22] = v8;
  v3[23] = *(_QWORD *)(v8 - 8);
  v3[24] = sub_23F366578();
  sub_23F55153C();
  return sub_23F3B15DC();
}

void sub_23F5B342C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  void (*v42)(_QWORD, uint64_t, _QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  if (*(_QWORD *)(sub_23F61AD98() + 16))
  {
    v43 = v0[17];
    v44 = v0[20];
    v1 = v0[14];
    v39 = v0[11];
    sub_23F383EB8();
    v5 = v3 + v4;
    v40 = *(_QWORD *)(v6 + 72);
    v45 = v6;
    v42 = *(void (**)(_QWORD, uint64_t, _QWORD))(v6 + 16);
    v7 = MEMORY[0x24BEE4AF8];
    v41 = *MEMORY[0x24BE53328];
    while (1)
    {
      v46 = v2;
      v47 = v7;
      v8 = v0[21];
      v9 = v1;
      v10 = v0[18];
      v11 = v0[15];
      v12 = v0[13];
      v42(v0[24], v5, v0[22]);
      sub_23F61AB4C();
      sub_23F61A4F8();
      sub_23F3D98EC(v8, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
      sub_23F61AC78();
      v13 = v10;
      v1 = v9;
      sub_23F38456C(v13, *(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));
      v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v11, v12);
      v15 = v0[15];
      v16 = v0[13];
      if (v14 == v41)
      {
        v17 = v0[12];
        (*(void (**)(_QWORD, uint64_t))(v9 + 96))(v0[15], v16);
        sub_23F38431C(v17, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 32));
        sub_23F35D2E8(&qword_256E6FC28);
        sub_23F61B92C();
        v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_23F61E7E0;
        sub_23F617DA4();
        sub_23F383D74(v17, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
      }
      else
      {
        (*(void (**)(_QWORD, uint64_t))(v9 + 8))(v0[15], v16);
        v18 = MEMORY[0x24BEE4AF8];
      }
      v7 = v47;
      sub_23F384274(v45);
      v19 = *(_QWORD *)(v18 + 16);
      v20 = *(_QWORD *)(v47 + 16);
      if (__OFADD__(v20, v19))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v20 + v19 > *(_QWORD *)(v47 + 24) >> 1)
      {
        sub_23F377314();
        v7 = v21;
      }
      if (*(_QWORD *)(v18 + 16))
      {
        v22 = *(_QWORD *)(v7 + 16);
        v23 = (*(_QWORD *)(v7 + 24) >> 1) - v22;
        sub_23F61B92C();
        if (v23 < v19)
          goto LABEL_27;
        sub_23F543704();
        v26 = *(_QWORD *)(v25 + 72);
        v27 = v7 + v24 + v26 * v22;
        v28 = v18 + v24;
        v29 = v26 * v19;
        v30 = v27 + v29;
        v31 = v28 + v29;
        if (v28 < v30 && v27 < v31)
          goto LABEL_29;
        swift_arrayInitWithCopy();
        if (v19)
        {
          v33 = *(_QWORD *)(v7 + 16);
          v34 = __OFADD__(v33, v19);
          v35 = v33 + v19;
          if (v34)
            goto LABEL_28;
          *(_QWORD *)(v7 + 16) = v35;
        }
      }
      else if (v19)
      {
        goto LABEL_26;
      }
      sub_23F38432C();
      v5 += v40;
      v2 = v46 - 1;
      if (v46 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    sub_23F61CA9C();
    sub_23F5B44EC();
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
LABEL_24:
    v0[25] = v7;
    sub_23F361418(v0[9] + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_toolExecutionSession, (uint64_t)(v0 + 2));
    v36 = (_QWORD *)swift_task_alloc();
    v0[26] = v36;
    *v36 = v0;
    v36[1] = sub_23F5B37BC;
    sub_23F5B44EC();
    sub_23F41847C(v37, v38);
  }
}

uint64_t sub_23F5B37BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = v6;
  sub_23F3B2010(&v6);
  *(_QWORD *)(v4 + 216) = v1;
  swift_task_dealloc();
  sub_23F362D08();
  if (!v1)
    *(_QWORD *)(v4 + 224) = a1;
  return sub_23F36664C();
}

uint64_t sub_23F5B382C()
{
  uint64_t v0;

  sub_23F5B4558();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 224));
}

uint64_t sub_23F5B3884()
{
  uint64_t v0;

  sub_23F5B4558();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F5B38D8()
{
  sub_23F5B40F4();
  return sub_23F61CCAC();
}

uint64_t sub_23F5B3900()
{
  sub_23F5B40F4();
  return sub_23F61CCA0();
}

uint64_t sub_23F5B3928()
{
  uint64_t v0;

  v0 = qword_256E7D890;
  sub_23F617BA0();
  return v0;
}

void ResponseGenerationService.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F384B34();
  sub_23F362B6C(v1);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_toolExecutionSession);
  swift_bridgeObjectRelease();
  v2 = sub_23F619E44();
  sub_23F362B6C(v2);
  sub_23F5B3D04(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_inAppResponsePolicy);
  sub_23F3625D8(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_responseGenerationInputBuilder, &qword_256E7D908);
  sub_23F4DC198(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_responseDialogGenerator);
  sub_23F4DC198(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_fallbackDialogGenerator);
  swift_release();
  sub_23F3625D8(v0 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime25ResponseGenerationService_dialogPolicy, &qword_256E7D918);
  swift_release();
  swift_defaultActor_destroy();
  sub_23F362928();
}

uint64_t ResponseGenerationService.__deallocating_deinit()
{
  ResponseGenerationService.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t ResponseGenerationService.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5B3A74()
{
  return ResponseGenerationService.unownedExecutor.getter();
}

uint64_t sub_23F5B3A8C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F3609AC;
  return sub_23F5AC218(a1);
}

uint64_t sub_23F5B3ADC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F504CD8;
  return sub_23F5ACA58(a1);
}

uint64_t sub_23F5B3B2C@<X0>(uint64_t a1@<X8>)
{
  return sub_23F5B0208(a1);
}

void sub_23F5B3B40()
{
  sub_23F5ABF70((uint64_t (*)(_QWORD))type metadata accessor for ResponseGenerationService);
}

unint64_t sub_23F5B3B78()
{
  unint64_t result;

  result = qword_256E7D928;
  if (!qword_256E7D928)
  {
    result = MEMORY[0x242670A44](&unk_23F62FBD8, &type metadata for ResponseGenerationService.ResponseGenerationServiceError);
    atomic_store(result, &qword_256E7D928);
  }
  return result;
}

uint64_t sub_23F5B3BB4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(sub_23F57B9D0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_23F3846E4() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  swift_release();
  sub_23F383E88(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F383E64(v0 + v5, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  return swift_deallocObject();
}

uint64_t sub_23F5B3C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(sub_23F57B9D0() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_23F3846E4() - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = *(_QWORD *)(v0 + 16);
  v8 = v0 + v3;
  v9 = v0 + (v6 & ~v5);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v10;
  v11 = sub_23F507D4C(v10);
  return sub_23F5AE7F0(v11, v12, v7, v8, v9);
}

uint64_t sub_23F5B3D04(uint64_t a1)
{
  destroy for AnyActionRequirementEvaluating();
  return a1;
}

void sub_23F5B3D38(uint64_t a1)
{
  uint64_t v2;

  sub_23F3612C0(&qword_256E7D998, (uint64_t (*)(uint64_t))type metadata accessor for ResponseGenerationService, (uint64_t)&protocol conformance descriptor for ResponseGenerationService);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t type metadata accessor for ResponseGenerationService()
{
  uint64_t result;

  result = qword_256E7D9C8;
  if (!qword_256E7D9C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F5B3DAC()
{
  return type metadata accessor for ResponseGenerationService();
}

uint64_t sub_23F5B3DB4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    result = sub_23F619E44();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for ResponseGenerationService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResponseGenerationService.__allocating_init(toolbox:toolExecutionSession:identityChain:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t dispatch thunk of ResponseGenerationService.setup(sessionState:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v3 = (_QWORD *)sub_23F534700();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F3609AC;
  return v5(a1);
}

uint64_t dispatch thunk of ResponseGenerationService.setup(responseLocale:sessionIdentityToken:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)sub_23F3629C0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F5B4880(v1, (uint64_t)sub_23F362820);
  return sub_23F56E560(v2, v3, v4);
}

uint64_t dispatch thunk of ResponseGenerationService.handle(_:plannerServiceContext:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)sub_23F3629C0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F5B4880(v1, (uint64_t)sub_23F50529C);
  return sub_23F56E560(v2, v3, v4);
}

uint64_t dispatch thunk of ResponseGenerationService.handle(_:sessionEventId:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v7 = (_QWORD *)sub_23F534700();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F362820;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ResponseGenerationService.telemetryTarget.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t storeEnumTagSinglePayload for ResponseGenerationService.ResponseGenerationServiceError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23F5B4030 + 4 * byte_23F62FA05[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23F5B4064 + 4 * byte_23F62FA00[v4]))();
}

uint64_t sub_23F5B4064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5B406C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5B4074);
  return result;
}

uint64_t sub_23F5B4080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5B4088);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23F5B408C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5B4094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseGenerationService.ResponseGenerationServiceError()
{
  return &type metadata for ResponseGenerationService.ResponseGenerationServiceError;
}

unint64_t sub_23F5B40B8()
{
  unint64_t result;

  result = qword_256E7DBC8;
  if (!qword_256E7DBC8)
  {
    result = MEMORY[0x242670A44](&unk_23F62FBB0, &type metadata for ResponseGenerationService.ResponseGenerationServiceError);
    atomic_store(result, (unint64_t *)&qword_256E7DBC8);
  }
  return result;
}

unint64_t sub_23F5B40F4()
{
  unint64_t result;

  result = qword_256E7DBD0;
  if (!qword_256E7DBD0)
  {
    result = MEMORY[0x242670A44](&unk_23F62FB30, &type metadata for ResponseGenerationService.ResponseGenerationServiceError);
    atomic_store(result, (unint64_t *)&qword_256E7DBD0);
  }
  return result;
}

uint64_t sub_23F5B4130(uint64_t a1)
{
  destroy for AnyActionRequirementEvaluating();
  return a1;
}

void sub_23F5B4164(_BYTE *a1@<X8>)
{
  *a1 = sub_23F617BF4() & 1;
  sub_23F362928();
}

void sub_23F5B418C(_BYTE *a1@<X8>)
{
  *a1 = sub_23F617C0C() & 1;
  sub_23F362928();
}

uint64_t sub_23F5B41B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E72CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5B4204()
{
  return swift_task_dealloc();
}

uint64_t sub_23F5B424C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = v0[87];
  v3 = v0[27];
  *(_QWORD *)(v1 - 192) = v0[28];
  *(_QWORD *)(v1 - 184) = v3;
  v4 = v0[23];
  *(_QWORD *)(v1 - 176) = v0[26];
  *(_QWORD *)(v1 - 168) = v4;
  v5 = v0[21];
  *(_QWORD *)(v1 - 160) = v0[22];
  *(_QWORD *)(v1 - 152) = v5;
  v6 = v0[19];
  *(_QWORD *)(v1 - 144) = v0[20];
  *(_QWORD *)(v1 - 136) = v6;
  v7 = v0[15];
  *(_QWORD *)(v1 - 128) = v0[16];
  *(_QWORD *)(v1 - 120) = v7;
  v8 = v0[10];
  *(_QWORD *)(v1 - 112) = v0[11];
  *(_QWORD *)(v1 - 104) = v8;
  return result;
}

uint64_t sub_23F5B4360()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[13];
  *(_QWORD *)(v1 - 112) = v0[16];
  *(_QWORD *)(v1 - 104) = v2;
  v3 = v0[9];
  *(_QWORD *)(v1 - 96) = v0[10];
  *(_QWORD *)(v1 - 88) = v3;
  return swift_task_dealloc();
}

uint64_t sub_23F5B43DC()
{
  return swift_task_alloc();
}

uint64_t sub_23F5B43EC()
{
  uint64_t v0;
  uint64_t v1;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v1);
}

uint64_t sub_23F5B4404()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F35EA9C(v0, *(_QWORD *)(v1 + 160));
  return swift_task_alloc();
}

uint64_t sub_23F5B4438()
{
  return swift_task_dealloc();
}

uint64_t sub_23F5B4480()
{
  return swift_task_alloc();
}

uint64_t sub_23F5B4494()
{
  return swift_task_dealloc();
}

uint64_t sub_23F5B44C0()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0);
}

uint64_t sub_23F5B4508()
{
  return sub_23F61721C();
}

uint64_t sub_23F5B4524()
{
  return sub_23F619124();
}

uint64_t sub_23F5B4538()
{
  return swift_release();
}

uint64_t sub_23F5B4558()
{
  uint64_t v0;

  return sub_23F5B4130(v0 + 16);
}

uint64_t sub_23F5B4574()
{
  _QWORD *v0;
  uint64_t (*v1)(_QWORD, _QWORD, _QWORD);

  return v1(v0[4], v0[10], v0[7]);
}

uint64_t sub_23F5B4590(uint64_t a1)
{
  uint64_t v1;

  return sub_23F5B41B4(a1, v1);
}

uint64_t sub_23F5B45B8()
{
  return swift_release();
}

uint64_t sub_23F5B45D4(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_23F5B45E4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *v1 = v2;
  v1[1] = a1;
  return v3;
}

void sub_23F5B4624(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  uint8_t *v6;

  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, v6, 2u);
}

uint64_t sub_23F5B4630(_WORD *a1)
{
  *a1 = 0;
  return sub_23F619E08();
}

void sub_23F5B465C()
{
  sub_23F37C028();
}

void sub_23F5B4674()
{
  sub_23F37C58C();
}

uint64_t sub_23F5B468C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F36196C(v1, 0, 1, v2);
  return sub_23F5B41B4(v1, v0);
}

uint64_t sub_23F5B46B4()
{
  return swift_release();
}

uint64_t sub_23F5B46CC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return sub_23F61C790();
}

void sub_23F5B4704()
{
  sub_23F37C58C();
}

uint64_t sub_23F5B471C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F36195C(v1, 1, v0);
  return *(_QWORD *)(v2 + 72);
}

uint64_t sub_23F5B474C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  return v3(v2 + *(int *)(v4 + 20), v1, v0);
}

void sub_23F5B4760()
{
  sub_23F37C1FC();
}

void sub_23F5B4774()
{
  sub_23F37C028();
}

uint64_t sub_23F5B4788()
{
  return sub_23F61C718();
}

void sub_23F5B4794()
{
  sub_23F37C028();
}

void sub_23F5B47A8()
{
  sub_23F37C58C();
}

uint64_t sub_23F5B47BC()
{
  return sub_23F619E5C();
}

uint64_t sub_23F5B47C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 224);
}

uint64_t sub_23F5B47E4()
{
  return sub_23F61808C();
}

uint64_t sub_23F5B47F8()
{
  return swift_allocObject();
}

uint64_t sub_23F5B480C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t);

  *v1 = v3;
  v1[1] = v2;
  return v5(v1, v0, v4);
}

void sub_23F5B4820()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v1;
}

void sub_23F5B483C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F362600(v4, v3, a3);
}

uint64_t sub_23F5B4848(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t sub_23F5B485C()
{
  return sub_23F61C16C();
}

uint64_t sub_23F5B4868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

BOOL sub_23F5B4878(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t sub_23F5B4880@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_23F5B4898(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 64) + 32))(a1, v1, *(_QWORD *)(v2 + 56));
}

uint64_t sub_23F5B48A8(uint64_t a1)
{
  unsigned int *v1;
  uint64_t (*v2)(uint64_t, _QWORD);

  return v2(a1, *v1);
}

uint64_t sub_23F5B48B0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5B48B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v0, v2);
}

uint64_t sub_23F5B48C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v0);
}

uint64_t sub_23F5B48D8()
{
  return sub_23F6185E4();
}

void sub_23F5B48E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_23F36262C(v1, v0, v2);
}

uint64_t sub_23F5B48F8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5B4908()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v2, v0, v3);
}

uint64_t sub_23F5B4918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v0, v1);
}

uint64_t sub_23F5B4928()
{
  return sub_23F61C0E8();
}

uint64_t sub_23F5B4938()
{
  return sub_23F61CC64();
}

uint64_t sub_23F5B4948(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_23F617F84();
}

id sub_23F5B4958(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  return objc_msgSend(v4, a2, v3, v2);
}

uint64_t sub_23F5B4968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F36195C(v1, 1, v0);
  return *(_QWORD *)(v2 + 80);
}

uint64_t sub_23F5B4990()
{
  return sub_23F61A504();
}

uint64_t sub_23F5B4998()
{
  return sub_23F61AB94();
}

uint64_t sub_23F5B49A0(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_23F5B49BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(a1, v2);
}

void sub_23F5B49C8()
{
  sub_23F387DE8();
}

void sub_23F5B49D4()
{
  void *v0;

}

void sub_23F5B49DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_23F37AE00(a1, a2, (uint64_t *)va);
}

uint64_t sub_23F5B49E8()
{
  return sub_23F619E38();
}

uint64_t sub_23F5B49F0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

uint64_t sub_23F5B49FC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F5B4A08()
{
  return sub_23F61C0E8();
}

uint64_t sub_23F5B4A14()
{
  return sub_23F61AB4C();
}

uint64_t sub_23F5B4A2C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 696);
}

uint64_t sub_23F5B4A40()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 472);
}

uint64_t sub_23F5B4A54(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36FF2C(a1, v1);
}

void sub_23F5B4A60()
{
  sub_23F5816DC();
}

void sub_23F5B4A6C()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_23F3663AC(v0, v1);
}

void sub_23F5B4A78()
{
  void *v0;

}

uint64_t sub_23F5B4A98()
{
  uint64_t *v0;

  return sub_23F35D2E8(v0);
}

void sub_23F5B4AA4(uint64_t a1, uint64_t (*a2)(char *, uint64_t), uint64_t a3, void (*a4)(char *, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  _QWORD *v111;
  _QWORD *v112;
  void (*v113)(char *, uint64_t, uint64_t);
  uint64_t (*v114)(char *, uint64_t);
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t);
  uint64_t (*v123)(char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  NSObject *v129;
  os_log_type_t v130;
  _BOOL4 v131;
  uint64_t v132;
  uint8_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t (*v138)(uint64_t, _QWORD);
  uint64_t v139;
  uint64_t v140;
  BOOL v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  __n128 *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t (*v158)(uint64_t, uint64_t, _QWORD);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  void (*v165)(uint64_t, unint64_t, uint64_t);
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  unint64_t v188;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  __n128 *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t (*v199)(uint64_t, _QWORD);
  __n128 *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  __n128 *v218;
  uint64_t v219;
  uint64_t (*v220)(uint64_t, _QWORD);
  uint64_t v221;
  uint64_t v222;
  uint64_t (*v223)(uint64_t, uint64_t, _QWORD);
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(uint64_t);
  uint64_t v233;
  uint64_t v234;
  __n128 *v235;
  uint64_t (*v236)(uint64_t, _QWORD);
  uint64_t (*v237)(uint64_t, _QWORD);
  uint64_t v238;
  NSObject *v239;
  os_log_type_t v240;
  _DWORD *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  __n128 *v251;
  uint64_t v252;
  uint64_t (*v253)(uint64_t, _QWORD);
  int v254;
  uint64_t v255;
  uint64_t (*v256)(uint64_t, _QWORD);
  uint64_t v257;
  _QWORD *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char v290[8];
  uint64_t v291;
  uint64_t v292;
  uint64_t v293[3];
  char v294[8];
  uint64_t v295;
  uint64_t (*v296)(char *, uint64_t);
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  char *v306;
  uint64_t (*v307)(char *, uint64_t);
  uint64_t v308;
  int v309;
  uint64_t (*v310)(char *, uint64_t);
  void (*v311)(char *, uint64_t, uint64_t);
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  _QWORD *v328;
  uint64_t v329;
  uint64_t v330;

  v298 = a5;
  v311 = a4;
  v297 = a3;
  v289 = a1;
  v6 = sub_23F61A504();
  sub_23F383E7C(v6, (uint64_t)&v303);
  v302 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  sub_23F3B13F0(v9);
  v10 = sub_23F619E98();
  sub_23F383E7C(v10, (uint64_t)&v301);
  v276 = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F383780();
  sub_23F3B13F0(v14);
  v15 = sub_23F617DD4();
  sub_23F383E7C(v15, (uint64_t)&v330);
  v305 = v16;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F36285C();
  v304 = v18;
  sub_23F35D2E8(&qword_256E7DC50);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F36285C();
  v319 = v20;
  sub_23F35D2E8(&qword_256E7DC58);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F36285C();
  v318 = v22;
  sub_23F35D2E8(&qword_256E6FAD8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F383780();
  v320 = v26;
  sub_23F39C56C();
  v325 = sub_23F61B980();
  v314 = *(_QWORD *)(v325 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F36285C();
  v312 = v28;
  sub_23F39C56C();
  v326 = sub_23F61B5D8();
  v323 = *(_QWORD *)(v326 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F36285C();
  v313 = v30;
  sub_23F39C56C();
  v315 = sub_23F618368();
  v321 = *(_QWORD *)(v315 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F36285C();
  v327 = v32;
  sub_23F39C56C();
  v33 = sub_23F6183B0();
  sub_23F383E7C(v33, (uint64_t)&v314);
  v275 = v34;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  v324 = (uint64_t)&v257 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F39C56C();
  v37 = sub_23F61820C();
  sub_23F383E7C(v37, (uint64_t)&v313);
  v285 = v38;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F36285C();
  sub_23F3B13F0(v40);
  v41 = sub_23F618284();
  sub_23F383E7C(v41, (uint64_t)v290);
  v265 = v42;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F36285C();
  v264 = v44;
  sub_23F35D2E8(&qword_256E7DC60);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F36285C();
  sub_23F3B13F0(v46);
  v47 = sub_23F618440();
  sub_23F383E7C(v47, (uint64_t)v293);
  v268 = v48;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F36285C();
  sub_23F3B13F0(v50);
  v51 = sub_23F618314();
  sub_23F383E7C(v51, (uint64_t)&v329);
  v271 = v52;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F383780();
  sub_23F3B13F0(v55);
  v56 = sub_23F618350();
  sub_23F383E7C(v56, (uint64_t)v294);
  v270 = v57;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F36285C();
  sub_23F3B13F0(v59);
  v60 = sub_23F617DEC();
  sub_23F383E7C(v60, (uint64_t)&v320);
  v291 = v61;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v63);
  sub_23F383780();
  sub_23F3B13F0(v64);
  v317 = sub_23F616DB4();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v65);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F3838E4();
  v322 = v67;
  MEMORY[0x24BDAC7A8](v68);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F383780();
  sub_23F3B13F0(v70);
  sub_23F617D08();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v71);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F383780();
  sub_23F3B13F0(v73);
  v74 = sub_23F617000();
  sub_23F383E7C(v74, (uint64_t)&v318);
  v288 = v75;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v77);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v79);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v80);
  sub_23F383780();
  v293[0] = v81;
  sub_23F35D2E8(&qword_256E6FB20);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v82);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v83);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v84);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v85);
  sub_23F3838E4();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v86);
  sub_23F383780();
  sub_23F3B13F0(v87);
  v88 = sub_23F618398();
  sub_23F383E7C(v88, (uint64_t)&v308);
  v282 = v89;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v90);
  sub_23F36285C();
  sub_23F3B13F0(v91);
  v92 = sub_23F61ACA8();
  v93 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  sub_23F38F964();
  v96 = v95 - v94;
  v97 = sub_23F618134();
  v98 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  sub_23F3834D0();
  sub_23F39E564();
  v100 = MEMORY[0x24BDAC7A8](v99);
  v102 = (char *)&v257 - v101;
  v103 = MEMORY[0x24BDAC7A8](v100);
  v105 = (char *)&v257 - v104;
  v106 = MEMORY[0x24BDAC7A8](v103);
  v108 = (char *)&v257 - v107;
  MEMORY[0x24BDAC7A8](v106);
  v110 = (char *)&v257 - v109;
  v310 = a2;
  sub_23F61A4F8();
  sub_23F61AC78();
  (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v96, v92);
  sub_23F5B63D0((uint64_t)v311);
  v112 = v111;
  v113 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
  v316 = v110;
  v311 = v113;
  v113(v108, (uint64_t)v110, v97);
  v114 = *(uint64_t (**)(char *, uint64_t))(v98 + 88);
  v115 = v114(v108, v97);
  v116 = *MEMORY[0x24BE53328];
  v307 = v114;
  v309 = v116;
  if (v115 != v116)
  {
    v305 = v102;
    v120 = (uint64_t)v105;
    v139 = v293[1];
    v140 = v293[2];
    v306 = v108;
    v277 = v98;
    v303 = v97;
    v141 = v115 == *MEMORY[0x24BE532D8];
    v258 = v112;
    if (v141)
    {
      v142 = sub_23F602964((uint64_t)v316, v298);
      v144 = v143;
      v119 = v145;
      v147 = v146;
      sub_23F5B935C();
      sub_23F3841C4(v293[0], v289, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v288 + 16));
      sub_23F61A498();
      v148 = HIBYTE(v144) & 0xF;
      if ((v144 & 0x2000000000000000) == 0)
        v148 = v142 & 0xFFFFFFFFFFFFLL;
      if (!v148)
        swift_bridgeObjectRelease();
      v97 = v303;
      v149 = v277;
      v150 = v283;
      sub_23F616DA8();
      v151 = HIBYTE(v147) & 0xF;
      if ((v147 & 0x2000000000000000) == 0)
        v151 = v119 & 0xFFFFFFFFFFFFLL;
      if (!v151)
      {
        sub_23F362D18();
        v119 = 28494;
      }
      v120 = v281;
      sub_23F616DA8();
      sub_23F61838C();
      sub_23F35D2E8(&qword_256E700F8);
      v114 = (uint64_t (*)(char *, uint64_t))sub_23F5B922C();
      v152 = (__n128 *)sub_23F5B9208();
      sub_23F5B9300(v152, (__n128)xmmword_23F61E7E0);
      v153 = v282;
      v154 = sub_23F5B932C(v299, v120, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v282 + 16));
      sub_23F5B9290(v154, *MEMORY[0x24BE524E8]);
      v155 = sub_23F5B92E8();
      sub_23F5B9238(v155, *MEMORY[0x24BE52E98]);
      (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v120, v150);
      sub_23F3D98EC((uint64_t)v306, *(uint64_t (**)(uint64_t, uint64_t))(v149 + 8));
      sub_23F5B9248();
    }
    else
    {
      if (v115 == *MEMORY[0x24BE532E0])
      {
        sub_23F3841CC((uint64_t)v306, *(uint64_t (**)(uint64_t, _QWORD))(v277 + 96));
        v156 = sub_23F5B92C4();
        v159 = sub_23F3841C4(v156, v157, v158);
        v160 = MEMORY[0x24266B710](v159);
        v161 = *(_QWORD *)(v160 + 16);
        if (v161)
        {
          v328 = (_QWORD *)MEMORY[0x24BEE4AF8];
          sub_23F37C5C0();
          v162 = (*(unsigned __int8 *)(v323 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80);
          v306 = (char *)v160;
          v163 = v160 + v162;
          v164 = *(_QWORD *)(v323 + 72);
          v165 = *(void (**)(uint64_t, unint64_t, uint64_t))(v323 + 16);
          v166 = v313;
          do
          {
            v165(v166, v163, v326);
            v167 = v320;
            sub_23F61B578();
            v168 = v325;
            if (sub_23F36195C(v167, 1, v325) == 1)
            {
              sub_23F3CFCB0(v167, &qword_256E6FAD8);
              sub_23F61B5B4();
              sub_23F616DA8();
              v171 = sub_23F5B9340(v318, v169, v170, v317);
              sub_23F3838D8(v319, v172, v173, v171);
              sub_23F5B92F4();
            }
            else
            {
              v174 = v314;
              v175 = v312;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v314 + 32))(v312, v167, v168);
              sub_23F61B968();
              sub_23F616DA8();
              v178 = sub_23F5B9340(v318, v176, v177, v317);
              sub_23F3838D8(v319, v179, v180, v178);
              sub_23F61B974();
              v166 = v313;
              sub_23F5B92F4();
              sub_23F383E88(v175, *(uint64_t (**)(uint64_t, uint64_t))(v174 + 8));
            }
            sub_23F362A28(v166, *(uint64_t (**)(uint64_t, uint64_t))(v323 + 8));
            v181 = v328;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23F37C5C0();
              v181 = v328;
            }
            v182 = v321;
            v183 = v181[2];
            if (v183 >= v181[3] >> 1)
            {
              sub_23F37C5C0();
              v182 = v321;
              v181 = v328;
            }
            v181[2] = v183 + 1;
            (*(void (**)(unint64_t))(v182 + 32))((unint64_t)v181+ ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80))+ *(_QWORD *)(v182 + 72) * v183);
            v328 = v181;
            v163 += v164;
            --v161;
            v184 = v324;
          }
          while (v161);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_23F362D18();
          v184 = v324;
        }
        v209 = v272;
        sub_23F5B935C();
        sub_23F5B925C(v209);
        v97 = v303;
        v210 = v299;
        v211 = v286;
        v212 = v275;
        if (v141)
        {
          sub_23F616FF4();
          sub_23F3CFCB0(v209, &qword_256E6FB20);
          sub_23F5B931C();
          v214 = *(_QWORD *)(v213 - 256);
        }
        else
        {
          v214 = v288;
          sub_23F3D9B80(v273, v209, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v288 + 32));
          v215 = v289;
        }
        sub_23F3D9B80(v280, v215, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v214 + 16));
        sub_23F61A498();
        sub_23F6183A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v212 + 16))(v210, v184, v211);
        v216 = v291;
        v217 = v292;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v291 + 104))(v210, *MEMORY[0x24BE524F0], v292);
        sub_23F35D2E8(&qword_256E700F8);
        v114 = (uint64_t (*)(char *, uint64_t))sub_23F5B922C();
        v218 = (__n128 *)sub_23F5B9208();
        sub_23F5B9300(v218, (__n128)xmmword_23F61E7E0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v216 + 16))(v278, v210, v217);
        v219 = sub_23F617F48();
        sub_23F5B9238(v219, *MEMORY[0x24BE52E98]);
        (*(void (**)(uint64_t, uint64_t))(v216 + 8))(v210, v217);
        sub_23F3841CC(v324, *(uint64_t (**)(uint64_t, _QWORD))(v212 + 8));
        sub_23F384430();
        sub_23F3841CC(v284, v220);
        v120 = v308;
        v112 = v258;
        goto LABEL_56;
      }
      if (v115 == *MEMORY[0x24BE53300])
      {
        sub_23F602964((uint64_t)v316, v298);
        v193 = v192;
        sub_23F5B935C();
        sub_23F3841C4(v280, v289, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v288 + 16));
        sub_23F61A498();
        sub_23F616DA8();
        v112 = v258;
        sub_23F616DA8();
        sub_23F36196C(v266, 1, 1, v315);
        v194 = v267;
        sub_23F618434();
        sub_23F35D2E8(&qword_256E700F8);
        v114 = (uint64_t (*)(char *, uint64_t))sub_23F5B922C();
        v195 = (__n128 *)sub_23F5B9208();
        sub_23F5B9300(v195, (__n128)xmmword_23F61E7E0);
        v196 = v268;
        v197 = sub_23F5B932C(v299, v194, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v268 + 16));
        sub_23F5B9290(v197, *MEMORY[0x24BE524F8]);
        sub_23F5B92E8();
        v198 = v139;
        v119 = (uint64_t)v307;
        (*(void (**)(uint64_t, _QWORD, uint64_t (*)(char *, uint64_t)))(v193 + 104))(v198, *MEMORY[0x24BE52E98], v114);
        (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v194, v140);
        v97 = v303;
        sub_23F3D98EC((uint64_t)v306, *(uint64_t (**)(uint64_t, uint64_t))(v277 + 8));
        v120 = v308;
        goto LABEL_57;
      }
      v202 = v299;
      if (v115 == *MEMORY[0x24BE53308])
      {
        v203 = (uint64_t)v306;
        v97 = v303;
        sub_23F3D98EC((uint64_t)v306, *(uint64_t (**)(uint64_t, uint64_t))(v277 + 96));
        v204 = sub_23F3841C4(v269, v203, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v270 + 32));
        v205 = MEMORY[0x24266B854](v204);
        v327 = sub_23F5B65C4(v205);
        sub_23F362984();
        v206 = v261;
        sub_23F61A4C8();
        sub_23F5B925C(v206);
        v207 = v291;
        if (v141)
        {
          sub_23F616FF4();
          sub_23F3CFCB0(v206, &qword_256E6FB20);
          sub_23F5B931C();
          v228 = *(_QWORD *)(v208 - 256);
        }
        else
        {
          v228 = v288;
          sub_23F3D9B80(v262, v206, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v288 + 32));
          v229 = v289;
        }
        v230 = v271;
        sub_23F3D9B80(v280, v229, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v228 + 16));
        v114 = v310;
        sub_23F61A498();
        sub_23F618308();
        v231 = sub_23F5B92C4();
        v232(v231);
        v233 = v292;
        (*(void (**)(uint64_t (*)(char *, uint64_t), _QWORD, uint64_t))(v207 + 104))(v114, *MEMORY[0x24BE524E0], v292);
        sub_23F35D2E8(&qword_256E700F8);
        v234 = sub_23F5B922C();
        v235 = (__n128 *)sub_23F5B9208();
        sub_23F5B9300(v235, (__n128)xmmword_23F61E7E0);
        (*(void (**)(uint64_t, uint64_t (*)(char *, uint64_t), uint64_t))(v207 + 16))(v278, v114, v233);
        sub_23F5B92E8();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v230 + 104))(v207, *MEMORY[0x24BE52E98], v234);
        (*(void (**)(uint64_t (*)(char *, uint64_t), uint64_t))(v207 + 8))(v114, v233);
        sub_23F384430();
        sub_23F3841CC(v300, v236);
        sub_23F384430();
        v238 = v269;
LABEL_55:
        sub_23F3841CC(v238, v237);
        v120 = v308;
LABEL_56:
        v119 = (uint64_t)v307;
LABEL_57:
        sub_23F5B92D4();
        v254 = ((uint64_t (*)(uint64_t, uint64_t))v119)(v120, v97);
        if (v254 == v309)
        {
          v255 = v112[2];
          sub_23F5B9280();
          if (v255)
          {
            sub_23F362D18();
LABEL_64:
            v114((char *)v120, v97);
            goto LABEL_65;
          }
        }
        else
        {
          if (v254 == *MEMORY[0x24BE532D8])
          {
            v328 = v112;
            sub_23F387DE8();
            sub_23F5B9280();
            ((void (*)(uint64_t, uint64_t))v328)(v120, v97);
            goto LABEL_65;
          }
          sub_23F5B9280();
        }
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
      v97 = v303;
      if (v115 == *MEMORY[0x24BE532F8])
      {
        sub_23F3D98EC((uint64_t)v306, *(uint64_t (**)(uint64_t, uint64_t))(v277 + 96));
        v221 = sub_23F5B92C4();
        v224 = sub_23F3841C4(v221, v222, v223);
        v225 = MEMORY[0x24266B788](v224);
        sub_23F5B65C4(v225);
        sub_23F362984();
        v226 = v259;
        sub_23F61A4C8();
        sub_23F5B925C(v226);
        if (v141)
        {
          sub_23F616FF4();
          sub_23F3CFCB0(v226, &qword_256E6FB20);
          sub_23F5B931C();
          v246 = *(_QWORD *)(v227 - 256);
        }
        else
        {
          v246 = v288;
          sub_23F3D9B80(v260, v226, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v288 + 32));
          v247 = v289;
        }
        sub_23F3D9B80(v280, v247, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v246 + 16));
        sub_23F61A498();
        v248 = v263;
        sub_23F618308();
        sub_23F3841C4(v202, v248, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v271 + 16));
        v249 = v291;
        v250 = v292;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v291 + 104))(v202, *MEMORY[0x24BE524E0], v292);
        sub_23F35D2E8(&qword_256E700F8);
        v114 = (uint64_t (*)(char *, uint64_t))sub_23F5B922C();
        v251 = (__n128 *)sub_23F5B9208();
        sub_23F5B9300(v251, (__n128)xmmword_23F61E7E0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v249 + 16))(v278, v202, v250);
        v252 = sub_23F617F48();
        sub_23F5B9238(v252, *MEMORY[0x24BE52E98]);
        (*(void (**)(uint64_t, uint64_t))(v249 + 8))(v202, v250);
        sub_23F384430();
        sub_23F3841CC(v263, v253);
        sub_23F384430();
        v238 = v264;
        goto LABEL_55;
      }
      v114 = v296;
      sub_23F619124();
      sub_23F5B92D4();
      v239 = sub_23F619E8C();
      v240 = sub_23F61C61C();
      v119 = v240;
      if (os_log_type_enabled(v239, v240))
      {
        v241 = (_DWORD *)sub_23F366668();
        v328 = (_QWORD *)sub_23F366668();
        *v241 = 136315138;
        v311(v305, v120, v97);
        v242 = sub_23F61C16C();
        sub_23F37AE00(v242, v243, (uint64_t *)&v328);
        sub_23F5276E0(v244);
        sub_23F61C790();
        swift_bridgeObjectRelease();
        sub_23F5B92AC();
        sub_23F5B930C(&dword_23F35A000, v239, v245, "Not building a result model for statement outcome %s");
        sub_23F3B17D4();
        sub_23F366530();
      }
      sub_23F5B92AC();

      sub_23F384430();
      sub_23F3841CC((uint64_t)v114, v256);
      sub_23F5B9248();
      ((void (*)(char *, uint64_t))v112)(v306, v97);
    }
    v112 = v258;
    goto LABEL_57;
  }
  v117 = v295;
  v118 = v302;
  v119 = v301;
  sub_23F3D98EC((uint64_t)v108, *(uint64_t (**)(uint64_t, uint64_t))(v98 + 96));
  v120 = (uint64_t)v305;
  v121 = sub_23F5B92C4();
  v122(v121);
  if ((sub_23F617D98() & 1) == 0)
  {
    sub_23F383E88((uint64_t)v114, *(uint64_t (**)(uint64_t, uint64_t))(v120 + 8));
    sub_23F5B9248();
    goto LABEL_57;
  }
  v303 = v97;
  v123 = v310;
  v124 = sub_23F61A4E0();
  v125 = v287;
  sub_23F5D6644(v124, v126, v287);
  sub_23F362D18();
  sub_23F4AB408(v125, v117, &qword_256E6FAD8);
  if (sub_23F36195C(v117, 1, v325) != 1)
  {
    v114 = (uint64_t (*)(char *, uint64_t))v117;
    sub_23F61B974();
    v119 = v185;
    sub_23F383E88(v117, *(uint64_t (**)(uint64_t, uint64_t))(v314 + 8));
    sub_23F35D2E8(&qword_256E700F8);
    v120 = sub_23F5B922C();
    v186 = *(_QWORD *)(v120 - 8);
    v187 = v112;
    v188 = (*(unsigned __int8 *)(v186 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v186 + 80);
    v189 = swift_allocObject();
    *(_OWORD *)(v189 + 16) = xmmword_23F61E7E0;
    v190 = v189 + v188;
    sub_23F617F30();
    v191 = v190;
    v112 = v187;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v186 + 104))(v191, *MEMORY[0x24BE52E80], v120);
    sub_23F3CFCB0(v125, &qword_256E6FAD8);
    sub_23F3841CC(v304, *((uint64_t (**)(uint64_t, _QWORD))v305 + 1));
    sub_23F5B9248();
    v97 = v303;
    goto LABEL_57;
  }
  swift_bridgeObjectRelease();
  sub_23F3CFCB0(v117, &qword_256E6FAD8);
  sub_23F619124();
  v127 = v274;
  v128 = v279;
  (*(void (**)(uint64_t, uint64_t (*)(char *, uint64_t), uint64_t))(v118 + 16))(v274, v123, v279);
  v129 = sub_23F619E8C();
  v130 = sub_23F61C628();
  v131 = os_log_type_enabled(v129, v130);
  v132 = (uint64_t)v316;
  if (v131)
  {
    v133 = (uint8_t *)sub_23F366668();
    v328 = (_QWORD *)sub_23F366668();
    *(_DWORD *)v133 = 136315138;
    v134 = sub_23F61A4E0();
    if (v135)
    {
      v136 = v135;
    }
    else
    {
      v134 = 0;
      v136 = 0xE000000000000000;
    }
    sub_23F37AE00(v134, v136, (uint64_t *)&v328);
    sub_23F5276E0(v137);
    sub_23F61C790();
    sub_23F362984();
    sub_23F384430();
    sub_23F3841CC(v127, v138);
    _os_log_impl(&dword_23F35A000, v129, v130, "The tool has provided an inAppResponse but we are unable to infer the bundleId. toolId: %s", v133, 0xCu);
    sub_23F3B17D4();
    sub_23F366530();
  }
  (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v127, v128);

  sub_23F384430();
  sub_23F3841CC(v119, v199);
  sub_23F35D2E8(&qword_256E700F8);
  sub_23F5B922C();
  v200 = (__n128 *)sub_23F5B9208();
  sub_23F5B9300(v200, (__n128)xmmword_23F61E7E0);
  v201 = sub_23F617F30();
  sub_23F5B9238(v201, *MEMORY[0x24BE52E80]);
  sub_23F3CFCB0(v125, &qword_256E6FAD8);
  sub_23F3841CC(v304, *((uint64_t (**)(uint64_t, _QWORD))v305 + 1));
  sub_23F3841CC(v132, *(uint64_t (**)(uint64_t, _QWORD))(v98 + 8));
LABEL_65:
  sub_23F362948();
}

void sub_23F5B63D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  char *v25;
  uint64_t v26;

  sub_23F35D2E8(&qword_256E7DC90);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F38F964();
  v5 = v4 - v3;
  v6 = sub_23F617F60();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  sub_23F383780();
  v26 = v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v13 = *(_QWORD *)(sub_23F61802C() - 8);
    v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v15 = *(_QWORD *)(v13 + 72);
    v23[1] = a1;
    sub_23F617BA0();
    v16 = MEMORY[0x24BEE4AF8];
    v24 = v15;
    v25 = v10;
    do
    {
      sub_23F5B6710(v14, v5);
      if (sub_23F36195C(v5, 1, v6) == 1)
      {
        sub_23F3CFCB0(v5, &qword_256E7DC90);
      }
      else
      {
        v17 = v7;
        v18 = v26;
        sub_23F5B9338(v26, v5);
        sub_23F5B9338((uint64_t)v10, v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F5B9364();
          v16 = v21;
        }
        v19 = *(_QWORD *)(v16 + 16);
        if (v19 >= *(_QWORD *)(v16 + 24) >> 1)
        {
          sub_23F5B9364();
          v16 = v22;
        }
        *(_QWORD *)(v16 + 16) = v19 + 1;
        v7 = v17;
        v20 = v16
            + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))
            + *(_QWORD *)(v17 + 72) * v19;
        v10 = v25;
        sub_23F5B9338(v20, (uint64_t)v25);
        v15 = v24;
      }
      v14 += v15;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  sub_23F362948();
}

uint64_t sub_23F5B65C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_23F618368();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_23F37C5C0();
    v7 = v14;
    v8 = *(_QWORD *)(sub_23F61B92C() - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_23F5B6FDC(v9, (uint64_t)v5);
      v14 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      if (v11 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_23F37C5C0();
        v7 = v14;
      }
      *(_QWORD *)(v7 + 16) = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v11, v5, v2);
      v9 += v10;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_23F5B6710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint8_t *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint8_t *v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v103 = a2;
  v3 = sub_23F61BA40();
  MEMORY[0x24BDAC7A8](v3);
  v86 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F617E7C();
  v90 = *(_QWORD *)(v5 - 8);
  v91 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v89 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F617FC0();
  v87 = *(_QWORD *)(v7 - 8);
  v88 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v85 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F617FFC();
  v94 = *(_QWORD *)(v9 - 8);
  v95 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v93 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_23F618020();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v81 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_23F617DEC();
  v100 = *(uint8_t **)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v101 = (uint8_t *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F618164();
  v98 = *(_QWORD *)(v13 - 8);
  v99 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F619E98();
  v96 = *(_QWORD *)(v16 - 8);
  v97 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v84 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v92 = (char *)&v79 - v19;
  v20 = sub_23F617FE4();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23F61802C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v79 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v80 = (char *)&v79 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v79 - v30;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v32((char *)&v79 - v30, a1, v24);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v31, v24);
  if (v33 == *MEMORY[0x24BE52F78])
  {
    (*(void (**)(char *, uint64_t))(v25 + 96))(v31, v24);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v31, v20);
    sub_23F617FCC();
    if (!v34)
    {
      v55 = v92;
      sub_23F619124();
      v56 = sub_23F619E8C();
      v57 = sub_23F61C628();
      if (os_log_type_enabled(v56, v57))
      {
        v58 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v58 = 0;
        _os_log_impl(&dword_23F35A000, v56, v57, "No target bundle ID in archived view", v58, 2u);
        MEMORY[0x242670B70](v58, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v96 + 8))(v55, v97);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
      v54 = sub_23F617F60();
      v52 = v103;
      v53 = 1;
      return sub_23F36196C(v52, v53, 1, v54);
    }
    sub_23F617FD8();
    sub_23F618158();
    v36 = v98;
    v35 = v99;
    v37 = v101;
    (*(void (**)(uint8_t *, char *, uint64_t))(v98 + 16))(v101, v15, v99);
    (*((void (**)(uint8_t *, _QWORD, uint64_t))v100 + 13))(v37, *MEMORY[0x24BE52510], v102);
    v38 = v103;
    sub_23F617F48();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v35);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    goto LABEL_8;
  }
  if (v33 == *MEMORY[0x24BE52F80])
  {
    (*(void (**)(char *, uint64_t))(v25 + 96))(v31, v24);
    v39 = v93;
    v40 = v94;
    v41 = v95;
    (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v93, v31, v95);
    sub_23F617FF0();
    v38 = v103;
    sub_23F617F30();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v41);
    v42 = (unsigned int *)MEMORY[0x24BE52E88];
LABEL_9:
    v50 = *v42;
    v51 = sub_23F617F60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v38, v50, v51);
    v52 = v38;
LABEL_10:
    v53 = 0;
    v54 = v51;
    return sub_23F36196C(v52, v53, 1, v54);
  }
  if (v33 == *MEMORY[0x24BE53028])
  {
    (*(void (**)(char *, uint64_t))(v25 + 96))(v31, v24);
    v44 = v87;
    v43 = v88;
    v45 = v85;
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v85, v31, v88);
    sub_23F617FB4();
    v46 = v89;
    sub_23F617E70();
    v48 = v90;
    v47 = v91;
    v49 = v101;
    (*(void (**)(uint8_t *, char *, uint64_t))(v90 + 16))(v101, v46, v91);
    (*((void (**)(uint8_t *, _QWORD, uint64_t))v100 + 13))(v49, *MEMORY[0x24BE52528], v102);
    v38 = v103;
    sub_23F617F48();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v47);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
LABEL_8:
    v42 = (unsigned int *)MEMORY[0x24BE52E98];
    goto LABEL_9;
  }
  if (v33 == *MEMORY[0x24BE52F88])
  {
    (*(void (**)(char *, uint64_t))(v25 + 96))(v31, v24);
    v60 = v82;
    v61 = v81;
    v62 = v83;
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v81, v31, v83);
    sub_23F618008();
    sub_23F618014();
    v63 = v103;
    sub_23F617F3C();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
    v64 = *MEMORY[0x24BE52E90];
    v51 = sub_23F617F60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v63, v64, v51);
    v52 = v63;
    goto LABEL_10;
  }
  v65 = v84;
  sub_23F619124();
  v66 = v80;
  v32(v80, a1, v24);
  v67 = sub_23F619E8C();
  v68 = sub_23F61C628();
  if (os_log_type_enabled(v67, v68))
  {
    v69 = (uint8_t *)swift_slowAlloc();
    v102 = swift_slowAlloc();
    v105 = v102;
    *(_DWORD *)v69 = 136315138;
    v100 = v69 + 4;
    v101 = v69;
    v32(v79, (uint64_t)v66, v24);
    v70 = sub_23F61C16C();
    v71 = v66;
    sub_23F37AE00(v70, v72, &v105);
    v104 = v73;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v74 = *(void (**)(char *, uint64_t))(v25 + 8);
    v74(v71, v24);
    v75 = v101;
    _os_log_impl(&dword_23F35A000, v67, v68, "Unsupported view type: %s", v101, 0xCu);
    v76 = v102;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v76, -1, -1);
    MEMORY[0x242670B70](v75, -1, -1);

    (*(void (**)(char *, uint64_t))(v96 + 8))(v84, v97);
  }
  else
  {
    v77 = v66;
    v74 = *(void (**)(char *, uint64_t))(v25 + 8);
    v74(v77, v24);

    (*(void (**)(char *, uint64_t))(v96 + 8))(v65, v97);
  }
  v78 = sub_23F617F60();
  sub_23F36196C(v103, 1, 1, v78);
  return ((uint64_t (*)(char *, uint64_t))v74)(v31, v24);
}

uint64_t sub_23F5B6FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  char *v60;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v75 = a2;
  v3 = sub_23F35D2E8(&qword_256E7DC50);
  MEMORY[0x24BDAC7A8](v3);
  v71 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F35D2E8(&qword_256E7DC58);
  MEMORY[0x24BDAC7A8](v5);
  v70 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_23F616DB4();
  MEMORY[0x24BDAC7A8](v68);
  v69 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F619E98();
  v9 = *(_QWORD *)(v8 - 8);
  v66 = v8;
  v67 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v72 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E701F0);
  MEMORY[0x24BDAC7A8](v11);
  v65 = (uint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F61B6E0();
  v73 = *(_QWORD *)(v13 - 8);
  v74 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F61B92C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v58 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (uint8_t *)&v58 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (uint64_t *)((char *)&v58 - v27);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v29((char *)&v58 - v27, a1, v16);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v17 + 88))(v28, v16) != *MEMORY[0x24BEB9988])
  {
    sub_23F5B7584(a1, v75);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v17 + 8))(v28, v16);
  }
  v59 = v26;
  v60 = v20;
  v62 = v29;
  v63 = v23;
  v30 = v72;
  (*(void (**)(uint64_t *, uint64_t))(v17 + 96))(v28, v16);
  v64 = *v28;
  v31 = swift_projectBox();
  v33 = v73;
  v32 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v15, v31, v74);
  v34 = *(_QWORD *)(sub_23F61B6D4() + 16);
  swift_bridgeObjectRelease();
  v35 = v32;
  v36 = a1;
  if (v34 == 1)
  {
    v37 = v33;
    v38 = v35;
    v39 = sub_23F61B6D4();
    v40 = v65;
    sub_23F36FD38(v39, v65);
    swift_bridgeObjectRelease();
    if (sub_23F36195C(v40, 1, v16) != 1)
    {
      v57 = (uint64_t)v59;
      (*(void (**)(uint8_t *, uint64_t, uint64_t))(v17 + 32))(v59, v40, v16);
      sub_23F5B7584(v57, v75);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v57, v16);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
      return swift_release();
    }
    sub_23F3CFCB0(v40, &qword_256E701F0);
  }
  v41 = v30;
  sub_23F619124();
  v43 = (void (*)(char *, char *, uint64_t))v62;
  v42 = v63;
  v62(v63, v36, v16);
  v44 = sub_23F619E8C();
  v45 = sub_23F61C628();
  v46 = os_log_type_enabled(v44, v45);
  v61 = v15;
  if (v46)
  {
    v47 = (uint8_t *)swift_slowAlloc();
    v65 = swift_slowAlloc();
    v77 = v65;
    *(_DWORD *)v47 = 136315138;
    v59 = v47 + 4;
    v43(v60, v42, v16);
    v48 = sub_23F61C16C();
    sub_23F37AE00(v48, v49, &v77);
    v76 = v50;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v42, v16);
    _os_log_impl(&dword_23F35A000, v44, v45, "Unsupported collection %s", v47, 0xCu);
    v51 = v65;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v51, -1, -1);
    MEMORY[0x242670B70](v47, -1, -1);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v72, v66);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v42, v16);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v41, v66);
  }
  v54 = (uint64_t)v70;
  v53 = (uint64_t)v71;
  v55 = v68;
  sub_23F616DA8();
  sub_23F36196C(v54, 1, 1, v55);
  v56 = sub_23F61BC14();
  sub_23F36196C(v53, 1, 1, v56);
  sub_23F61835C();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v61, v74);
  return swift_release();
}

uint64_t sub_23F5B7584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  int v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  void (**v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  void *v94;
  id v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  void (*v101)(char *, uint64_t, uint64_t);
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  void (**v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint8_t *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121[2];

  v118 = a2;
  v119 = a1;
  v2 = sub_23F619E98();
  v111 = *(_QWORD *)(v2 - 8);
  v112 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v107 = (void (**)(uint64_t, uint64_t))((char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v110 = (char *)&v99 - v5;
  v6 = sub_23F61B878();
  v108 = *(_QWORD *)(v6 - 8);
  v109 = (uint8_t *)v6;
  MEMORY[0x24BDAC7A8](v6);
  v113 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E7DC50);
  MEMORY[0x24BDAC7A8](v8);
  v116 = (uint64_t *)((char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_23F35D2E8(&qword_256E7DC58);
  MEMORY[0x24BDAC7A8](v10);
  v115 = (uint64_t)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_23F616DB4();
  MEMORY[0x24BDAC7A8](v117);
  v114 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23F61B8A8();
  v14 = *(char **)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v100 = (char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v106 = (char *)&v99 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v99 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v99 - v22;
  v24 = sub_23F61B7AC();
  v103 = *(_QWORD *)(v24 - 8);
  v104 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v102 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23F61B710();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_23F61B92C();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v99 = (char *)&v99 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v105 = (char *)&v99 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v99 - v36;
  v101 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v101((char *)&v99 - v36, v119, v30);
  v38 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v37, v30);
  if (v38 == *MEMORY[0x24BEB9A00])
  {
    (*(void (**)(char *, uint64_t))(v31 + 96))(v37, v30);
    v39 = swift_projectBox();
    v40 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v14 + 2);
    v40(v23, v39, v13);
    v40(v21, (uint64_t)v23, v13);
    v41 = (*((uint64_t (**)(char *, uint64_t))v14 + 11))(v21, v13);
    v42 = v13;
    v43 = (void (**)(uint64_t, uint64_t))v14;
    if (v41 == *MEMORY[0x24BEB9958])
    {
      (*((void (**)(char *, uint64_t))v14 + 12))(v21, v13);
      sub_23F616DA8();
      sub_23F36196C(v115, 1, 1, v117);
      v44 = sub_23F61BC14();
      sub_23F36196C((uint64_t)v116, 1, 1, v44);
      sub_23F61835C();
      (*((void (**)(char *, uint64_t))v14 + 1))(v23, v13);
    }
    else if (v41 == *MEMORY[0x24BEB9950])
    {
      v119 = (uint64_t)v23;
      (*((void (**)(char *, uint64_t))v14 + 12))(v21, v13);
      v47 = v108;
      v46 = v109;
      (*(void (**)(char *, char *, uint8_t *))(v108 + 32))(v113, v21, v109);
      v48 = (void *)sub_23F61B86C();
      v49 = objc_msgSend(v48, sel_image);

      if (v49 && (v50 = sub_23F5B919C(v49), v51 >> 60 != 15))
      {
        v91 = v50;
        v92 = v51;
        v93 = v113;
        v94 = (void *)sub_23F61B86C();
        v95 = objc_msgSend(v94, sel_displayName);

        sub_23F61C10C();
        v107 = v43;

        sub_23F616DA8();
        sub_23F36196C(v115, 1, 1, v117);
        v96 = v116;
        *v116 = v91;
        v96[1] = v92;
        v97 = *MEMORY[0x24BEBA440];
        v98 = sub_23F61BC14();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 104))(v96, v97, v98);
        sub_23F36196C((uint64_t)v96, 0, 1, v98);
        sub_23F61835C();
        (*(void (**)(char *, uint8_t *))(v47 + 8))(v93, v109);
        v107[1](v119, v42);
      }
      else
      {
        v52 = v47;
        v53 = v113;
        v54 = (void *)sub_23F61B86C();
        v55 = objc_msgSend(v54, sel_displayName);

        sub_23F61C10C();
        sub_23F616DA8();
        sub_23F36196C(v115, 1, 1, v117);
        v56 = sub_23F61BC14();
        sub_23F36196C((uint64_t)v116, 1, 1, v56);
        sub_23F61835C();
        (*(void (**)(char *, uint8_t *))(v52 + 8))(v53, v46);
        v43[1](v119, v42);
      }
    }
    else
    {
      v113 = v21;
      v61 = v110;
      sub_23F619124();
      v62 = v106;
      v40(v106, (uint64_t)v23, v42);
      v63 = sub_23F619E8C();
      v64 = sub_23F61C628();
      if (os_log_type_enabled(v63, v64))
      {
        v119 = (uint64_t)v23;
        v65 = (uint8_t *)swift_slowAlloc();
        v66 = swift_slowAlloc();
        v121[0] = v66;
        v107 = v43;
        *(_DWORD *)v65 = 136315138;
        v109 = v65 + 4;
        v40(v100, (uint64_t)v62, v42);
        v67 = sub_23F61C16C();
        sub_23F37AE00(v67, v68, v121);
        v120 = v69;
        v23 = (char *)v119;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        v70 = v107[1];
        v70((uint64_t)v62, v42);
        _os_log_impl(&dword_23F35A000, v63, v64, "Unsupported primitive %s", v65, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x242670B70](v66, -1, -1);
        MEMORY[0x242670B70](v65, -1, -1);

        (*(void (**)(char *, uint64_t))(v111 + 8))(v110, v112);
      }
      else
      {
        v70 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v14 + 1);
        v70((uint64_t)v62, v42);

        (*(void (**)(char *, uint64_t))(v111 + 8))(v61, v112);
      }
      v83 = v117;
      v85 = v115;
      v84 = v116;
      sub_23F616DA8();
      sub_23F36196C(v85, 1, 1, v83);
      v86 = sub_23F61BC14();
      sub_23F36196C((uint64_t)v84, 1, 1, v86);
      sub_23F61835C();
      v70((uint64_t)v23, v42);
      v70((uint64_t)v113, v42);
    }
    return swift_release();
  }
  if (v38 == *MEMORY[0x24BEB9990])
  {
    (*(void (**)(char *, uint64_t))(v31 + 96))(v37, v30);
    v45 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v29, v45, v26);
    sub_23F5B814C((uint64_t)v29, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9738], MEMORY[0x24BEB9718], v118);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    return swift_release();
  }
  if (v38 == *MEMORY[0x24BEB99E0])
  {
    (*(void (**)(char *, uint64_t))(v31 + 96))(v37, v30);
    v57 = swift_projectBox();
    v59 = (uint64_t)v102;
    v58 = v103;
    v60 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v102, v57, v104);
    sub_23F5B814C(v59, (uint64_t (*)(_QWORD))MEMORY[0x24BEB97D8], (void (*)(void))MEMORY[0x24BEB97B0], v118);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v60);
    return swift_release();
  }
  v71 = (char *)v107;
  sub_23F619124();
  v72 = v105;
  v73 = v30;
  v74 = (void (*)(char *, char *, uint64_t))v101;
  v101(v105, v119, v30);
  v75 = sub_23F619E8C();
  v76 = sub_23F61C628();
  if (os_log_type_enabled(v75, v76))
  {
    v77 = (uint8_t *)swift_slowAlloc();
    v119 = swift_slowAlloc();
    v121[0] = v119;
    *(_DWORD *)v77 = 136315138;
    v113 = (char *)(v77 + 4);
    v74(v99, v72, v30);
    v78 = sub_23F61C16C();
    sub_23F37AE00(v78, v79, v121);
    v120 = v80;
    v73 = v30;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v81 = *(void (**)(char *, uint64_t))(v31 + 8);
    v81(v72, v30);
    _os_log_impl(&dword_23F35A000, v75, v76, "Unsupported item type %s", v77, 0xCu);
    v82 = v119;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v82, -1, -1);
    MEMORY[0x242670B70](v77, -1, -1);
  }
  else
  {
    v81 = *(void (**)(char *, uint64_t))(v31 + 8);
    v81(v72, v30);
  }

  (*(void (**)(char *, uint64_t))(v111 + 8))(v71, v112);
  v88 = v115;
  v87 = v116;
  sub_23F616DA8();
  sub_23F36196C(v88, 1, 1, v117);
  v89 = sub_23F61BC14();
  sub_23F36196C((uint64_t)v87, 1, 1, v89);
  sub_23F61835C();
  return ((uint64_t (*)(char *, uint64_t))v81)(v37, v73);
}

uint64_t sub_23F5B814C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  _DWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void (*v62)(void);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v62 = a3;
  v65 = a4;
  sub_23F35D2E8(&qword_256E7DC50);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F38F964();
  v9 = (void (*)(void))(v8 - v7);
  sub_23F35D2E8(&qword_256E7DC58);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  v61 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_23F616DB4();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F38F964();
  v15 = v14 - v13;
  v59 = a2(0);
  v64 = *(_QWORD *)(v59 - 8);
  sub_23F362850();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  sub_23F383780();
  v63 = v20;
  v21 = sub_23F619E98();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  sub_23F36285C();
  v60 = v23;
  sub_23F35D2E8(&qword_256E70CE8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F38F964();
  v27 = v26 - v25;
  v28 = sub_23F61BC5C();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  sub_23F38F964();
  v32 = v31 - v30;
  v62();
  if (sub_23F36195C(v27, 1, v28) == 1)
  {
    v55 = v22;
    v56 = v21;
    v57 = v15;
    v62 = v9;
    sub_23F3CFCB0(v27, &qword_256E70CE8);
    v33 = v60;
    sub_23F619124();
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
    v35 = v59;
    v34(v63, a1, v59);
    v36 = sub_23F619E8C();
    v37 = sub_23F61C628();
    v38 = os_log_type_enabled(v36, v37);
    v39 = (uint64_t)v61;
    v40 = v58;
    if (v38)
    {
      v41 = (_DWORD *)sub_23F366668();
      v54 = sub_23F366668();
      v67 = v54;
      *v41 = 136315138;
      v53[1] = v41 + 1;
      v42 = v19;
      v43 = v63;
      v34((uint64_t)v42, v63, v35);
      v44 = sub_23F61C16C();
      sub_23F37AE00(v44, v45, &v67);
      v66 = v46;
      sub_23F61C790();
      sub_23F362D18();
      sub_23F362A28(v43, *(uint64_t (**)(uint64_t, uint64_t))(v64 + 8));
      sub_23F5B930C(&dword_23F35A000, v36, v47, "No display representation on %s");
      sub_23F3B17D4();
      sub_23F366530();
    }
    sub_23F383E88(v63, *(uint64_t (**)(uint64_t, uint64_t))(v64 + 8));

    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v33, v56);
    v49 = (uint64_t)v62;
    sub_23F616DA8();
    sub_23F36196C(v39, 1, 1, v40);
    v50 = sub_23F61BC14();
    sub_23F3838D8(v49, v51, v52, v50);
    return sub_23F5B92F4();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v32, v27, v28);
    sub_23F5B8530(v65);
    return sub_23F362A28(v32, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
  }
}

uint64_t sub_23F5B8530@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a1;
  v1 = sub_23F35D2E8(&qword_256E7DC68);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F61BBFC();
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E7DC70);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(&qword_256E7DC50);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v37 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34 - v12;
  v14 = sub_23F35D2E8(&qword_256E7DC78);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F35D2E8(&qword_256E7DC58);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v34 - v21;
  v23 = sub_23F616DB4();
  v40 = *(_QWORD *)(v23 - 8);
  v41 = v23;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v34 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v34 - v27;
  sub_23F61BC2C();
  sub_23F616DA8();
  sub_23F61BC50();
  sub_23F5B8944((uint64_t)v16, (uint64_t)v22);
  v29 = (uint64_t)v16;
  v30 = (uint64_t)v13;
  sub_23F3CFCB0(v29, &qword_256E7DC78);
  sub_23F61BC20();
  sub_23F5B8DA4((uint64_t)v8, (uint64_t)v13);
  sub_23F3CFCB0((uint64_t)v8, &qword_256E7DC70);
  sub_23F61BC08();
  if (sub_23F36195C((uint64_t)v3, 1, v4) == 1)
  {
    sub_23F3CFCB0((uint64_t)v3, &qword_256E7DC68);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v26, v28, v41);
    sub_23F4AB408((uint64_t)v22, (uint64_t)v20, &qword_256E7DC58);
    sub_23F4AB408((uint64_t)v13, v37, &qword_256E7DC50);
    sub_23F61835C();
  }
  else
  {
    v31 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    v32 = v36;
    v35 = v4;
    v31(v36, v3, v4);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v26, v28, v41);
    sub_23F4AB408((uint64_t)v22, (uint64_t)v20, &qword_256E7DC58);
    sub_23F4AB408(v30, v37, &qword_256E7DC50);
    sub_23F61BBE4();
    sub_23F61BBF0();
    sub_23F61835C();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v32, v35);
  }
  sub_23F3CFCB0(v30, &qword_256E7DC50);
  sub_23F3CFCB0((uint64_t)v22, &qword_256E7DC58);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v28, v41);
}

uint64_t sub_23F5B8944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v48 = a2;
  v3 = sub_23F619E98();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F61BC44();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(&qword_256E7DC78);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F35D2E8(&qword_256E7DC88);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v44 = (char *)&v42 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v42 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v49 = (char *)&v42 - v22;
  sub_23F4AB408(a1, (uint64_t)v11, &qword_256E7DC78);
  if (sub_23F36195C((uint64_t)v11, 1, v12) == 1)
  {
    sub_23F3CFCB0((uint64_t)v11, &qword_256E7DC78);
    v23 = sub_23F616DB4();
    v24 = v48;
    v25 = 1;
    return sub_23F36196C(v24, v25, 1, v23);
  }
  v26 = v49;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v49, v11, v12);
  v27 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v27(v21, v26, v12);
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v21, v12) == *MEMORY[0x24BEBA408])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v21, v12);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v21, v5);
    sub_23F61BC38();
    v28 = v48;
    sub_23F616DA8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v49, v12);
    v23 = sub_23F616DB4();
    v24 = v28;
    v25 = 0;
    return sub_23F36196C(v24, v25, 1, v23);
  }
  v43 = v21;
  v30 = v47;
  sub_23F619124();
  v31 = v44;
  v27(v44, v49, v12);
  v32 = sub_23F619E8C();
  v33 = sub_23F61C628();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v42 = swift_slowAlloc();
    v51 = v42;
    *(_DWORD *)v34 = 136315138;
    v27(v16, v31, v12);
    v35 = sub_23F61C16C();
    sub_23F37AE00(v35, v36, &v51);
    v50 = v37;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v38 = *(void (**)(char *, uint64_t))(v13 + 8);
    v38(v31, v12);
    _os_log_impl(&dword_23F35A000, v32, v33, "Unsupported display value %s", v34, 0xCu);
    v39 = v42;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v39, -1, -1);
    MEMORY[0x242670B70](v34, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v46);
  }
  else
  {

    v38 = *(void (**)(char *, uint64_t))(v13 + 8);
    v38(v31, v12);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v46);
  }
  v38(v49, v12);
  v40 = v48;
  v41 = sub_23F616DB4();
  sub_23F36196C(v40, 1, 1, v41);
  return ((uint64_t (*)(char *, uint64_t))v38)(v43, v12);
}

uint64_t sub_23F5B8DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint8_t *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = sub_23F619E98();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F35D2E8(&qword_256E7DC70);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(&qword_256E7DC80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v42 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v42 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v42 - v20;
  sub_23F4AB408(a1, (uint64_t)v8, &qword_256E7DC70);
  if (sub_23F36195C((uint64_t)v8, 1, v9) == 1)
  {
    sub_23F3CFCB0((uint64_t)v8, &qword_256E7DC70);
    v22 = sub_23F61BC14();
    v23 = a2;
    v24 = 1;
    return sub_23F36196C(v23, v24, 1, v22);
  }
  v46 = a2;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v8, v9);
  v25 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v25(v19, v21, v9);
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v19, v9) == *MEMORY[0x24BEBA408])
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v9);
    (*(void (**)(char *, uint64_t))(v10 + 96))(v19, v9);
    v26 = sub_23F61BC14();
    v27 = v46;
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v46, v19, v26);
    v23 = v27;
    v24 = 0;
    v22 = v26;
    return sub_23F36196C(v23, v24, 1, v22);
  }
  v29 = v47;
  sub_23F619124();
  v25(v16, v21, v9);
  v30 = sub_23F619E8C();
  v31 = sub_23F61C628();
  v32 = v31;
  if (os_log_type_enabled(v30, v31))
  {
    v33 = swift_slowAlloc();
    v44 = v32;
    v34 = (uint8_t *)v33;
    v45 = swift_slowAlloc();
    v51 = v45;
    v43 = v34;
    *(_DWORD *)v34 = 136315138;
    v42 = v34 + 4;
    v25(v13, v16, v9);
    v35 = sub_23F61C16C();
    sub_23F37AE00(v35, v36, &v51);
    v50 = v37;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v38 = *(void (**)(char *, uint64_t))(v10 + 8);
    v38(v16, v9);
    v39 = v43;
    _os_log_impl(&dword_23F35A000, v30, (os_log_type_t)v44, "Unsupported display value %s", v43, 0xCu);
    v40 = v45;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v40, -1, -1);
    MEMORY[0x242670B70](v39, -1, -1);

  }
  else
  {

    v38 = *(void (**)(char *, uint64_t))(v10 + 8);
    v38(v16, v9);
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v49);
  v38(v21, v9);
  v41 = sub_23F61BC14();
  sub_23F36196C(v46, 1, 1, v41);
  return ((uint64_t (*)(char *, uint64_t))v38)(v19, v9);
}

uint64_t sub_23F5B919C(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel__imageData);

  if (!v2)
    return 0;
  v3 = sub_23F616EEC();

  return v3;
}

uint64_t sub_23F5B9208()
{
  return swift_allocObject();
}

uint64_t sub_23F5B922C()
{
  return sub_23F617F60();
}

uint64_t sub_23F5B9238(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, a2, v2);
}

uint64_t sub_23F5B925C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, *(_QWORD *)(v1 - 440));
}

uint64_t sub_23F5B9280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8))(*(_QWORD *)(v2 - 200), v0);
}

uint64_t sub_23F5B9290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 432) + 104))(v2, a2, *(_QWORD *)(v3 - 424));
}

uint64_t sub_23F5B92AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 576) + 8))(v1, v0);
}

uint64_t sub_23F5B92C4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23F5B92D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 - 240))(v0, *(_QWORD *)(v2 - 200), v1);
}

uint64_t sub_23F5B92E8()
{
  return sub_23F617F48();
}

uint64_t sub_23F5B92F4()
{
  return sub_23F61835C();
}

__n128 *sub_23F5B9300(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

void sub_23F5B930C(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  uint8_t *v5;

  _os_log_impl(a1, a2, v4, a4, v5, 0xCu);
}

uint64_t sub_23F5B932C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t sub_23F5B9338(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F5B9340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23F36196C(a1, 1, 1, a4);
  return sub_23F61BC14();
}

uint64_t sub_23F5B935C()
{
  return sub_23F61A4C8();
}

void sub_23F5B9364()
{
  sub_23F378158();
}

void sub_23F5B9370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  void (*v35)(_QWORD, _QWORD, _QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t (**v48)(uint64_t, uint64_t);
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  _QWORD v54[4];
  uint64_t v55;
  uint64_t v56;
  int v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void (*v67)(_QWORD, _QWORD, _QWORD);
  uint64_t v68;
  int v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;

  sub_23F35D2E8(&qword_256E7DC98);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F38F964();
  v4 = v3 - v2;
  v64 = sub_23F617DEC();
  v60 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  sub_23F3834D0();
  v59 = v5;
  MEMORY[0x24BDAC7A8](v6);
  v58 = (char *)v54 - v7;
  v8 = sub_23F618020();
  v71 = *(_QWORD *)(v8 - 8);
  v72 = v8;
  MEMORY[0x24BDAC7A8](v8);
  sub_23F383A54();
  v9 = sub_23F61802C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3834D0();
  v65 = v11;
  MEMORY[0x24BDAC7A8](v12);
  v66 = (char *)v54 - v13;
  sub_23F35D2E8(&qword_256E7DCA0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F38F964();
  v17 = v16 - v15;
  sub_23F35D2E8(&qword_256E7DC38);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F38F964();
  v21 = v20 - v19;
  v22 = sub_23F618074();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  sub_23F38F964();
  v26 = v25 - v24;
  sub_23F618110();
  if (sub_23F36195C(v21, 1, v22) == 1)
  {
    v27 = &qword_256E7DC38;
    v28 = v21;
    goto LABEL_26;
  }
  v56 = v23;
  v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v26, v21, v22);
  v30 = MEMORY[0x24266B4B8](v29);
  v31 = *(_QWORD *)(v30 + 16);
  if (!v31)
  {
    v53 = 1;
    goto LABEL_24;
  }
  v54[2] = v26;
  v54[3] = v22;
  v63 = v4;
  v55 = v17;
  v32 = v30 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v33 = *MEMORY[0x24BE52F88];
  v57 = *MEMORY[0x24BE52518];
  v34 = *(_QWORD *)(v10 + 72);
  v35 = *(void (**)(_QWORD, _QWORD, _QWORD))(v10 + 16);
  v54[1] = v30;
  sub_23F617BA0();
  v70 = 0;
  v37 = v65;
  v36 = (uint64_t)v66;
  v61 = v9;
  v62 = v10;
  v69 = v33;
  v67 = v35;
  v68 = v34;
  while (1)
  {
    v35(v36, v32, v9);
    v35(v37, v36, v9);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v10 + 88))(v37, v9) == v33)
      break;
    sub_23F383E88(v37, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
LABEL_20:
    sub_23F383E88(v36, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v32 += v34;
    if (!--v31)
    {
      sub_23F5B9C90();
      v53 = 1;
      v17 = v55;
      goto LABEL_24;
    }
  }
  sub_23F383E88(v37, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 96));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v0, v37, v72);
  v38 = sub_23F618014();
  v40 = v39;
  if (v38 == sub_23F617DE0() && v40 == v41)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v43 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v0, v72);
LABEL_19:
      v33 = v69;
      v35 = v67;
      v34 = v68;
      goto LABEL_20;
    }
  }
  sub_23F616ACC();
  sub_23F3668A0();
  sub_23F616AC0();
  sub_23F618008();
  sub_23F5B9BF8();
  v44 = v63;
  v45 = v0;
  v46 = v64;
  v47 = v70;
  sub_23F616AB4();
  if (v47)
  {
    sub_23F59F3B8();
    swift_release();

    sub_23F482774(*(uint64_t (**)(uint64_t))(v71 + 8));
    sub_23F383CC4(v44, 1);
    sub_23F5B9C38(v44, &qword_256E7DC98);
    v70 = 0;
    v10 = v62;
    v0 = v45;
LABEL_18:
    v9 = v61;
    v37 = v65;
    v36 = (uint64_t)v66;
    goto LABEL_19;
  }
  v70 = 0;
  sub_23F482774(*(uint64_t (**)(uint64_t))(v71 + 8));
  sub_23F59F3B8();
  swift_release();
  sub_23F383CC4(v44, 0);
  v48 = (uint64_t (**)(uint64_t, uint64_t))v60;
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 32);
  v50 = v58;
  v49(v58, v44, v46);
  v51 = v59;
  v49((char *)v59, (uint64_t)v50, v46);
  v52 = v48[11](v51, v46);
  if (v52 != v57)
  {
    sub_23F5B9CAC(v48[1]);
    v10 = v62;
    v0 = v45;
    goto LABEL_18;
  }
  sub_23F5B9CAC(v48[12]);
  sub_23F5B9C90();
  swift_bridgeObjectRelease();
  v9 = v61;
  v10 = v62;
  v17 = v55;
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v55, v66, v61);
  v53 = 0;
LABEL_24:
  sub_23F40B4B8(v17, v53);
  swift_bridgeObjectRelease();
  if (sub_23F36195C(v17, 1, v9) == 1)
  {
    sub_23F5B9C80();
    v27 = &qword_256E7DCA0;
    v28 = v17;
LABEL_26:
    sub_23F5B9C38(v28, v27);
  }
  else
  {
    sub_23F5B98CC();
    sub_23F5B9C80();
    sub_23F383E88(v17, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  }
  sub_23F362948();
}

void sub_23F5B98CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_23F35D2E8(&qword_256E7DC98);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v1);
  sub_23F38F964();
  v35 = v3 - v2;
  v4 = sub_23F617DEC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  v11 = sub_23F61802C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F383A54();
  v13 = sub_23F618020();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  sub_23F38F964();
  v17 = v16 - v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v0, v36, v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 88))(v0, v11) != *MEMORY[0x24BE52F88])
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v11);
    goto LABEL_12;
  }
  v33 = v10;
  v34 = v5;
  v36 = v4;
  v18 = v35;
  (*(void (**)(uint64_t, uint64_t))(v12 + 96))(v0, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v17, v0, v13);
  v19 = sub_23F618014();
  v21 = v20;
  if (v19 == sub_23F617DE0() && v21 == v22)
  {
    swift_bridgeObjectRelease_n();
    v25 = v18;
  }
  else
  {
    v24 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = v18;
    if ((v24 & 1) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v13);
      goto LABEL_12;
    }
  }
  v35 = v13;
  v32 = v8;
  sub_23F616ACC();
  sub_23F3668A0();
  sub_23F616AC0();
  sub_23F618008();
  sub_23F5B9BF8();
  v26 = v36;
  sub_23F616AB4();
  sub_23F5B9C70();
  sub_23F5B9CA0();
  swift_release();
  sub_23F40B4B8(v25, 0);
  v27 = v25;
  v29 = v33;
  v28 = v34;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
  v30(v33, v27, v26);
  v31 = (uint64_t)v32;
  v30(v32, (uint64_t)v29, v26);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v28 + 88))(v31, v26) == *MEMORY[0x24BE52518])
    sub_23F383E88(v31, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 96));
  else
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v31, v26);
LABEL_12:
  sub_23F362948();
}

unint64_t sub_23F5B9BF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E7DCA8;
  if (!qword_256E7DCA8)
  {
    v1 = sub_23F617DEC();
    result = MEMORY[0x242670A44](MEMORY[0x24BE52540], v1);
    atomic_store(result, (unint64_t *)&qword_256E7DCA8);
  }
  return result;
}

uint64_t sub_23F5B9C38(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23F35D2E8(a2);
  sub_23F482774(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  return a1;
}

uint64_t sub_23F5B9C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 104));
}

uint64_t sub_23F5B9C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23F5B9C90()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5B9CA0()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23F3F3D0C(v0, v1);
}

uint64_t sub_23F5B9CAC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F5B9CB8(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v25 = MEMORY[0x24BEE4AF8];
    sub_23F37C090();
    v24 = v25;
    v5 = type metadata accessor for StructuredParameter();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
    v20 = *(_QWORD *)(v6 + 72);
    sub_23F618614();
    v21 = v5;
    v22 = v2;
    do
    {
      sub_23F35D2E8(&qword_256E6FC78);
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_23F61E7E0;
      sub_23F618620();
      sub_23F618620();
      sub_23F6185F0();
      v9 = sub_23F5BA0EC(v2);
      if (v9)
      {
        v10 = v9;
        swift_bridgeObjectRelease();
        v8 = v10;
      }
      v11 = v7[1];
      v23 = *v7;
      v12 = (uint64_t *)((char *)v7 + *(int *)(v5 + 24));
      v13 = *v12;
      v14 = v12[1];
      v15 = v24;
      v17 = *(_QWORD *)(v24 + 16);
      v16 = *(_QWORD *)(v24 + 24);
      sub_23F617BA0();
      sub_23F617BA0();
      if (v17 >= v16 >> 1)
      {
        sub_23F37C090();
        v15 = v24;
      }
      *(_QWORD *)(v15 + 16) = v17 + 1;
      v24 = v15;
      v18 = (_QWORD *)(v15 + 40 * v17);
      v18[4] = v23;
      v18[5] = v11;
      v18[6] = v13;
      v18[7] = v14;
      v18[8] = v8;
      v5 = v21;
      v7 = (uint64_t *)((char *)v7 + v20);
      --v3;
      v2 = v22;
    }
    while (v3);

    return v15;
  }
  else
  {

    return MEMORY[0x24BEE4AF8];
  }
}

void sub_23F5B9ECC(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else if (!__OFSUB__(sub_23F61C238(), a1))
  {
    sub_23F61C250();
    sub_23F61C34C();
    sub_23F517094();
    sub_23F517258();
    sub_23F383488();
    return;
  }
  __break(1u);
}

uint64_t sub_23F5B9F8C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  result = sub_23F5BDD8C(result, a2);
  if (v4)
    v5 = result;
  else
    v5 = v3;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
  {
    sub_23F61B92C();
    return v2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_23F5B9FFC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  result = sub_23F5BDD8C(result, a2);
  if (v4)
    v5 = result;
  else
    v5 = v3;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
    return v2;
LABEL_10:
  __break(1u);
  return result;
}

void sub_23F5BA04C(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v6;
  char v7;
  unint64_t v8;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_23F5BDE04();
  if (__OFSUB__(sub_23F61C760(), a1))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v6 = sub_23F61C754();
  if ((v7 & 1) != 0)
    v8 = a3;
  else
    v8 = v6;
  if (v8 >> 14 >= a2 >> 14)
  {
    sub_23F5BDE04();
    sub_23F61C76C();
    sub_23F517094();
    sub_23F517258();
    sub_23F383488();
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t sub_23F5BA0EC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v33;
  char *v34;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  char v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  char *v46;
  id v47;
  uint64_t v48;
  int v49;
  void (*v50)(char *, uint64_t, uint64_t);
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void *v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  _BYTE v69[32];
  uint64_t v70[5];

  v2 = v1;
  v65 = a1;
  v3 = sub_23F35D2E8(&qword_256E7DCB8);
  MEMORY[0x24BDAC7A8](v3);
  v63 = (uint64_t)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F618614();
  v6 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  v62 = v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v64 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v60 = (char *)&v58 - v9;
  v10 = (int *)type metadata accessor for StructuredParameter();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v58 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v18 = (char *)&v58 - v17;
  v19 = 0;
  v20 = (uint64_t *)(v1 + *(int *)(v15 + 24));
  v22 = *v20;
  v21 = v20[1];
  if (*v20 == 0x5F6E776F6E6B6E75 && v21 == 0xEC00000065707974)
    return v19;
  v59 = v16;
  if ((sub_23F61CC64() & 1) != 0)
    return 0;
  sub_23F5BA8F8(v2 + v10[5], v70);
  v24 = (uint64_t *)(v2 + v10[7]);
  v25 = v24[1];
  if (!v25
    || ((v26 = *v24, *v24 == 0x676E697274536F74) ? (v27 = v25 == 0xE800000000000000) : (v27 = 0),
        v27 || (sub_23F61CC64() & 1) != 0))
  {
    v26 = 0;
    v25 = 0xE000000000000000;
  }
  else
  {
    sub_23F617BA0();
  }
  sub_23F617BA0();
  if ((sub_23F61C31C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_23F617BA0();
    v28 = sub_23F5BAC44(2);
    v22 = MEMORY[0x24266F6AC](v28);
    v21 = v29;
    swift_bridgeObjectRelease();
  }
  if ((v25 & 0x2000000000000000) != 0)
    v30 = HIBYTE(v25) & 0xF;
  else
    v30 = v26 & 0xFFFFFFFFFFFFLL;
  sub_23F5BCEAC(v2, (uint64_t)v18);
  if (v30)
  {
    swift_bridgeObjectRelease();
    sub_23F5BCEF0((uint64_t)v18);
LABEL_45:
    v43 = v61;
    v42 = v62;
    goto LABEL_46;
  }
  v31 = &v18[v10[6]];
  if (*(_QWORD *)v31 == 0x532E676F6C616964 && *((_QWORD *)v31 + 1) == 0xED0000676E697274)
  {
    sub_23F5BCEAC((uint64_t)v18, (uint64_t)v14);
LABEL_42:
    sub_23F5BCEF0((uint64_t)v14);
    v37 = v59;
    sub_23F5BCEAC((uint64_t)v18, v59);
LABEL_43:
    sub_23F5BCEF0(v37);
    sub_23F5BCEF0((uint64_t)v18);
    goto LABEL_44;
  }
  v33 = sub_23F61CC64();
  sub_23F5BCEAC((uint64_t)v18, (uint64_t)v14);
  if ((v33 & 1) != 0)
    goto LABEL_42;
  v34 = &v14[v10[6]];
  if (*(_QWORD *)v34 == 0x4E2E676F6C616964 && *((_QWORD *)v34 + 1) == 0xED00007265626D75)
    goto LABEL_42;
  v36 = sub_23F61CC64();
  sub_23F5BCEF0((uint64_t)v14);
  v37 = v59;
  sub_23F5BCEAC((uint64_t)v18, v59);
  if ((v36 & 1) != 0)
    goto LABEL_43;
  v38 = (_QWORD *)(v37 + v10[6]);
  if (*v38 == 0x422E676F6C616964 && v38[1] == 0xEE006E61656C6F6FLL)
    goto LABEL_43;
  v40 = sub_23F61CC64();
  sub_23F5BCEF0(v37);
  sub_23F5BCEF0((uint64_t)v18);
  if ((v40 & 1) != 0)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  swift_bridgeObjectRelease();
  v41 = v22 == 0x432E676F6C616964 && v21 == 0xEF7261646E656C61;
  v42 = v62;
  if (!v41)
    sub_23F61CC64();
  swift_bridgeObjectRelease();
  v43 = v61;
LABEL_46:
  v44 = v65;
  if (v65)
  {
    v45 = v65;
  }
  else
  {
    sub_23F6185C0();
    v45 = (void *)sub_23F6185B4();
  }
  v46 = v64;
  sub_23F6185D8();
  v47 = v44;
  sub_23F6185CC();

  swift_bridgeObjectRelease();
  sub_23F5BCF2C((uint64_t)v69, (uint64_t)v67);
  if (v68)
  {
    v48 = v63;
    v49 = swift_dynamicCast();
    sub_23F36196C(v48, v49 ^ 1u, 1, v43);
    if (sub_23F36195C(v48, 1, v43) != 1)
    {
      v50 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
      v51 = v60;
      v50(v60, v48, v43);
      sub_23F35D2E8(&qword_256E6FC78);
      v52 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_23F61E7E0;
      v50((char *)(v19 + v52), (uint64_t)v51, v43);
      sub_23F3CFCB0((uint64_t)v69, &qword_256E6FC98);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v70);
      return v19;
    }
  }
  else
  {
    sub_23F3CFCB0((uint64_t)v67, &qword_256E6FC98);
    v48 = v63;
    sub_23F36196C(v63, 1, 1, v43);
  }
  sub_23F3CFCB0(v48, &qword_256E7DCB8);
  sub_23F5BCF2C((uint64_t)v69, (uint64_t)v67);
  if (!v68)
  {
    sub_23F3CFCB0((uint64_t)v67, &qword_256E6FC98);
    goto LABEL_62;
  }
  sub_23F35D2E8(&qword_256E70580);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_62:
    sub_23F3CFCB0((uint64_t)v69, &qword_256E6FC98);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v70);
    return 0;
  }
  v53 = v66;
  v54 = *(_QWORD *)(v66 + 16);
  v19 = MEMORY[0x24BEE4AF8];
  if (v54)
  {
    v67[0] = MEMORY[0x24BEE4AF8];
    sub_23F37C628();
    v19 = v67[0];
    v55 = v53 + 40;
    do
    {
      sub_23F617BA0();
      sub_23F6185E4();
      v67[0] = v19;
      v56 = *(_QWORD *)(v19 + 16);
      if (v56 >= *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_23F37C628();
        v19 = v67[0];
      }
      v55 += 16;
      *(_QWORD *)(v19 + 16) = v56 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v19+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v56, v46, v43);
      --v54;
    }
    while (v54);
  }
  sub_23F3CFCB0((uint64_t)v69, &qword_256E6FC98);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v70);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_23F5BA8F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  _QWORD v27[2];
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;

  v5 = sub_23F5BDEB0();
  sub_23F3D9CE4();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (_QWORD *)((char *)v27 - v10);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v12((char *)v27 - v10, a1, v5);
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 88))(v11, v5);
  if ((_DWORD)result == *MEMORY[0x24BE92BB8])
  {
    result = sub_23F5BDC18();
    v14 = *v11;
    v15 = v11[1];
    a2[3] = MEMORY[0x24BEE0D00];
    *a2 = v14;
    a2[1] = v15;
  }
  else if ((_DWORD)result == *MEMORY[0x24BE92B88])
  {
    sub_23F5BDC18();
    v16 = sub_23F618614();
    a2[3] = v16;
    v17 = sub_23F36145C(a2);
    return (*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v17, v11, v16);
  }
  else if ((_DWORD)result == *MEMORY[0x24BE92BA8])
  {
    result = sub_23F5BDC18();
    v18 = *v11;
    a2[3] = MEMORY[0x24BEE13C8];
    *a2 = v18;
  }
  else if ((_DWORD)result == *MEMORY[0x24BE92BB0])
  {
    sub_23F5BDC18();
    v19 = sub_23F61BFE0();
    swift_bridgeObjectRelease();
    result = sub_23F35D2E8(&qword_256E7D850);
    a2[3] = result;
    *a2 = v19;
  }
  else if ((_DWORD)result == *MEMORY[0x24BE92BA0])
  {
    sub_23F5BDC18();
    v20 = *v11;
    v21 = *(_QWORD *)(*v11 + 16);
    if (v21)
    {
      v30 = MEMORY[0x24BEE4AF8];
      sub_23F37C5F4();
      v22 = v20 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      v23 = *(_QWORD *)(v2 + 72);
      v27[1] = v20;
      v28 = v23;
      do
      {
        v12(v9, v22, v5);
        sub_23F5BA8F8(v29, v9);
        (*(void (**)(char *, uint64_t))(v2 + 8))(v9, v5);
        v24 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37C5F4();
          v24 = v30;
        }
        v25 = *(_QWORD *)(v24 + 16);
        if (v25 >= *(_QWORD *)(v24 + 24) >> 1)
        {
          sub_23F37C5F4();
          v24 = v30;
        }
        *(_QWORD *)(v24 + 16) = v25 + 1;
        sub_23F382A70(v29, (_OWORD *)(v24 + 32 * v25 + 32));
        v22 += v28;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v24 = MEMORY[0x24BEE4AF8];
    }
    result = sub_23F35D2E8(&qword_256E7DCC0);
    a2[3] = result;
    *a2 = v24;
  }
  else if ((_DWORD)result == *MEMORY[0x24BE92B90])
  {
    result = sub_23F5BDC18();
    v26 = *(_BYTE *)v11;
    a2[3] = MEMORY[0x24BEE1328];
    *(_BYTE *)a2 = v26;
  }
  else if ((_DWORD)result == *MEMORY[0x24BE92B98])
  {
    a2[3] = MEMORY[0x24BEE0D00];
    *a2 = 0;
    a2[1] = 0xE000000000000000;
  }
  else
  {
    result = sub_23F61CC58();
    __break(1u);
  }
  return result;
}

uint64_t sub_23F5BAC44(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_23F61C250();
    v1 = sub_23F61C34C();
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

uint64_t sub_23F5BAD00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
    if (v6 || (sub_23F61CC64() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1701869940 && a2 == 0xE400000000000000;
      if (v7 || (sub_23F61CC64() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x74616D726F66 && a2 == 0xE600000000000000;
        if (v8 || (sub_23F61CC64() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x74696E61666F7270 && a2 == 0xEF7265746C694679)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_23F61CC64();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_23F5BAF00(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23F5BAF2C + 4 * byte_23F62FC80[a1]))(7955819, 0xE300000000000000);
}

uint64_t sub_23F5BAF2C()
{
  return 0x65756C6176;
}

uint64_t sub_23F5BAF40()
{
  return 1701869940;
}

uint64_t sub_23F5BAF50()
{
  return 0x74616D726F66;
}

uint64_t sub_23F5BAF64()
{
  return 0x74696E61666F7270;
}

void sub_23F5BAF88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_23F35D2E8(&qword_256E7DDC0);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5BD6A0();
  sub_23F5BDDBC();
  sub_23F5BDDD0();
  if (!v1)
  {
    sub_23F5BDEB8();
    sub_23F4F25D8();
    sub_23F61862C();
    sub_23F3CFCEC(&qword_256E7DDC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE92BC0], MEMORY[0x24BE92BD0]);
    sub_23F61CBE0();
    sub_23F5BDDD0();
    sub_23F61CB80();
    sub_23F61CB8C();
  }
  sub_23F57B90C();
  sub_23F3F4040();
}

void sub_23F5BB118(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v22 = sub_23F61862C();
  v23 = *(_QWORD *)(v22 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F38F964();
  v21 = v5 - v4;
  v24 = sub_23F35D2E8(&qword_256E7DDB0);
  MEMORY[0x24BDAC7A8](v24);
  sub_23F38F964();
  v6 = sub_23F5BDEB8();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v10 = (uint64_t *)(v9 - v8);
  v12 = (uint64_t *)(v9 - v8 + *(int *)(v11 + 28));
  *v12 = 0;
  v12[1] = 0;
  v25 = v12;
  v13 = *(int *)(v11 + 32);
  *((_BYTE *)v10 + v13) = 2;
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5BD6A0();
  sub_23F61CD84();
  if (v26)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    *v10 = sub_23F61CB14();
    v10[1] = v14;
    sub_23F4F25D8();
    sub_23F3CFCEC(&qword_256E7DCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE92BC0], MEMORY[0x24BE92BD8]);
    sub_23F61CB44();
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))((char *)v10 + *(int *)(v6 + 20), v21, v22);
    v15 = sub_23F61CB14();
    v16 = (uint64_t *)((char *)v10 + *(int *)(v6 + 24));
    *v16 = v15;
    v16[1] = v17;
    *v25 = sub_23F61CAE4();
    v25[1] = v18;
    v19 = sub_23F61CAF0();
    sub_23F5BDC4C();
    *((_BYTE *)v10 + v13) = v19;
    sub_23F5BCEAC((uint64_t)v10, a2);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
    sub_23F5BCEF0((uint64_t)v10);
  }
  sub_23F362870();
}

uint64_t sub_23F5BB41C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701869940 && a2 == 0xE400000000000000;
    if (v6 || (sub_23F61CC64() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x676F6C616964 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

void sub_23F5BB540()
{
  sub_23F61CD30();
  sub_23F61CD3C();
  sub_23F61CD60();
  sub_23F362AD4();
}

uint64_t sub_23F5BB57C(char a1)
{
  if (!a1)
    return 7955819;
  if (a1 == 1)
    return 1701869940;
  return 0x676F6C616964;
}

void sub_23F5BB5C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_23F35D2E8(&qword_256E7DD98);
  sub_23F3D9CE4();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5BD5E0();
  sub_23F5BDDBC();
  sub_23F49336C();
  if (!v1)
  {
    sub_23F4F25D8();
    sub_23F49336C();
    sub_23F35D2E8(&qword_256E7DD80);
    sub_23F5BD61C(&qword_256E7DDA0, &qword_256E7DDA8, MEMORY[0x24BE929D8], MEMORY[0x24BEE12A0]);
    sub_23F61CBE0();
  }
  sub_23F57B90C();
  sub_23F3F4040();
}

void sub_23F5BB6F0(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = sub_23F35D2E8(&qword_256E7DD70);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5BD5E0();
  sub_23F61CD84();
  if (v2)
  {
    sub_23F44D4A0();
  }
  else
  {
    v6 = sub_23F5BDDE0();
    v8 = v7;
    v13 = v6;
    sub_23F4F25D8();
    sub_23F617BA0();
    v9 = sub_23F5BDDE0();
    v11 = v10;
    v12 = v9;
    sub_23F35D2E8(&qword_256E7DD80);
    sub_23F5BD61C(&qword_256E7DD88, &qword_256E7DD90, MEMORY[0x24BE929E8], MEMORY[0x24BEE12D0]);
    sub_23F617BA0();
    sub_23F61CB44();
    sub_23F5BDC58();
    sub_23F617BA0();
    sub_23F44D4A0();
    sub_23F362984();
    swift_bridgeObjectRelease();
    sub_23F384120();
    *a2 = v13;
    a2[1] = v8;
    a2[2] = v12;
    a2[3] = v11;
    a2[4] = v14;
  }
  sub_23F362870();
}

uint64_t sub_23F5BB8E0()
{
  unsigned __int8 *v0;

  return sub_23F5BAF00(*v0);
}

uint64_t sub_23F5BB8E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F5BAD00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F5BB90C()
{
  sub_23F5BD6A0();
  return sub_23F61CDC0();
}

uint64_t sub_23F5BB934()
{
  sub_23F5BD6A0();
  return sub_23F61CDCC();
}

void sub_23F5BB95C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_23F5BB118(a1, a2);
}

void sub_23F5BB970(_QWORD *a1)
{
  sub_23F5BAF88(a1);
}

void sub_23F5BB984()
{
  sub_23F5BB540();
}

void sub_23F5BB99C()
{
  sub_23F61CD30();
  sub_23F61CD3C();
  sub_23F61CD60();
  sub_23F362AD4();
}

uint64_t sub_23F5BB9D4()
{
  char *v0;

  return sub_23F5BB57C(*v0);
}

uint64_t sub_23F5BB9DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F5BB41C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F5BBA00()
{
  sub_23F5BD5E0();
  return sub_23F61CDC0();
}

uint64_t sub_23F5BBA28()
{
  sub_23F5BD5E0();
  return sub_23F61CDCC();
}

double sub_23F5BBA50@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_23F5BB6F0(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

void sub_23F5BBA94(_QWORD *a1)
{
  sub_23F5BB5C0(a1);
}

uint64_t sub_23F5BBAA8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F35D2E8(&qword_256E7DCB0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F38F964();
  v8 = (char *)(v7 - v6);
  v28 = sub_23F5BDEB8();
  v26 = *(_QWORD *)(v28 - 8);
  sub_23F362850();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v27 = (uint64_t)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - v12;
  v14 = *(_QWORD *)(a2 + 16);
  if (v14)
  {
    v24 = a1;
    v15 = *(_QWORD *)(sub_23F6181AC() - 8);
    v16 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v17 = *(_QWORD *)(v15 + 72);
    v25 = a2;
    sub_23F617BA0();
    v18 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      sub_23F5BBD24(v8);
      if (v2)
        break;
      if (sub_23F36195C((uint64_t)v8, 1, v28) == 1)
      {
        sub_23F3CFCB0((uint64_t)v8, &qword_256E7DCB0);
      }
      else
      {
        sub_23F5BBF94((uint64_t)v8, (uint64_t)v13);
        sub_23F5BBF94((uint64_t)v13, v27);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F5BDEA4();
          v18 = v20;
        }
        v19 = *(_QWORD *)(v18 + 16);
        if (v19 >= *(_QWORD *)(v18 + 24) >> 1)
        {
          sub_23F5BDEA4();
          v18 = v21;
        }
        *(_QWORD *)(v18 + 16) = v19 + 1;
        sub_23F5BBF94(v27, v18+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v19);
      }
      v16 += v17;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        a1 = v24;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = MEMORY[0x24BEE4AF8];
LABEL_15:
    v14 = sub_23F5B9CB8(v18, a1);
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t type metadata accessor for StructuredParameter()
{
  uint64_t result;

  result = qword_256E7DD28;
  if (!qword_256E7DD28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F5BBD24@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v35 = a1;
  v2 = sub_23F61862C();
  v36 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v30 - v6;
  sub_23F616ACC();
  swift_allocObject();
  sub_23F616AC0();
  v8 = sub_23F618194();
  if (v9 >> 60 == 15)
    v10 = 0;
  else
    v10 = v8;
  if (v9 >> 60 == 15)
    v11 = 0xC000000000000000;
  else
    v11 = v9;
  sub_23F3CFCEC(&qword_256E7DCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE92BC0], MEMORY[0x24BE92BD8]);
  sub_23F616AB4();
  swift_release();
  result = sub_23F3F3D0C(v10, v11);
  if (!v1)
  {
    v33 = 0;
    v13 = v35;
    v14 = sub_23F618188();
    if (!v15)
    {
      v14 = 0;
      v15 = 0xE000000000000000;
    }
    v16 = sub_23F5BBFD8(v14, v15);
    v17 = sub_23F61817C();
    v31 = v18;
    v32 = v17;
    v19 = v36;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v5, v7, v2);
    v34 = v5;
    if (v16 == 16)
    {
      v20 = 0xEC00000065707974;
      v30 = 0x5F6E776F6E6B6E75;
    }
    else
    {
      sub_23F5BCF94(v16);
      v30 = sub_23F5BC504();
      v20 = v21;
      sub_23F5BCF74(v16);
    }
    v36 = sub_23F6181A0();
    v23 = v22;
    v24 = sub_23F618170();
    sub_23F5BCF74(v16);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v2);
    v25 = (int *)type metadata accessor for StructuredParameter();
    v26 = v25[8];
    v27 = (uint64_t *)&v13[v25[7]];
    v28 = v31;
    *(_QWORD *)v13 = v32;
    *((_QWORD *)v13 + 1) = v28;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v13[v25[5]], v34, v2);
    v29 = (uint64_t *)&v13[v25[6]];
    *v29 = v30;
    v29[1] = v20;
    *v27 = v36;
    v27[1] = v23;
    v13[v26] = v24;
    return sub_23F36196C((uint64_t)v13, 0, 1, (uint64_t)v25);
  }
  return result;
}

uint64_t sub_23F5BBF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StructuredParameter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5BBFD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  uint64_t result;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = a1 == 1819242306 && a2 == 0xE400000000000000;
  if (v2 || (sub_23F5BDC0C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656C62756F44 && a2 == 0xE600000000000000;
    if (v6 || (sub_23F5BDDF0(), (sub_23F5BDC0C() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x676E69727453 && a2 == 0xE600000000000000;
      if (v7 || (sub_23F5BDEC0(), (sub_23F5BDC0C() & 1) != 0))
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x800000023F63B870
             || (sub_23F5BDE90(), (sub_23F5BDC0C() & 1) != 0))
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = a1 == 0x6D6563616C504C43 && a2 == 0xEB000000006B7261;
        if (v8 || (sub_23F5BDC0C() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = a1 == 1702125892 && a2 == 0xE400000000000000;
          if (v9 || (sub_23F5BDC0C() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            sub_23F5BDC9C();
            v12 = a1 == v11 && a2 == v10;
            if (v12 || (sub_23F5BDC78(), (sub_23F5BDC0C() & 1) != 0))
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD000000000000014 && (sub_23F5BDC68(), v2) || (sub_23F5BDC0C() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else
            {
              sub_23F5BDD6C();
              v15 = a1 == v14 && a2 == v13;
              if (v15 || (sub_23F5BDCF8(), (sub_23F5BDC0C() & 1) != 0))
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else if (a1 == 0xD000000000000019 && (sub_23F5BDC68(), v2) || (sub_23F5BDC0C() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else if (a1 == 0xD000000000000017 && (sub_23F5BDC68(), v2) || (sub_23F5BDC0C() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else if (a1 == 0xD00000000000001ELL && (sub_23F5BDC68(), v2) || (sub_23F5BDC0C() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 12;
              }
              else if (a1 == 0xD000000000000018 && (sub_23F5BDC68(), v2) || (sub_23F5BDC0C() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 13;
              }
              else if (a1 == 0xD00000000000001BLL && (sub_23F5BDC68(), v2) || (sub_23F5BDC0C() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 14;
              }
              else
              {
                v16 = a1 == 5001813 && a2 == 0xE300000000000000;
                if (v16 || (sub_23F5BDC0C() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 15;
                }
                else
                {
                  sub_23F440EE8();
                  sub_23F440F24();
                  if ((sub_23F61C070() & 1) != 0)
                  {
                    v21 = swift_allocObject();
                    v17 = sub_23F5BCC70();
                    v19 = v18;
                    sub_23F362D18();
                    if (v19)
                    {
                      v20 = sub_23F5BC680(v17, v19);
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      v20 = 16;
                    }
                    result = v21;
                    *(_QWORD *)(v21 + 16) = v20;
                  }
                  else
                  {
                    sub_23F362D18();
                    return 16;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_23F5BC504()
{
  uint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_23F5BDE7C();
  result = sub_23F5BDE54();
  switch(v1)
  {
    case 0:
      return result;
    case 1:
    case 2:
      result = sub_23F5BDD4C();
      break;
    case 3:
    case 4:
    case 15:
      result = sub_23F5BDD18();
      break;
    case 5:
      result = sub_23F5BDD38();
      break;
    case 6:
    case 7:
      result = sub_23F5BDCC0();
      break;
    case 8:
      sub_23F5BDE18();
      result = sub_23F5BDE68();
      break;
    case 9:
      result = sub_23F5BDCE4() & 0xFFFFFFFFFFFFLL | 0x502E000000000000;
      break;
    case 10:
      result = sub_23F5BDCE4() & 0xFFFFFFFFFFFFLL | 0x4C2E000000000000;
      break;
    case 11:
      result = sub_23F5BDCE4() & 0xFFFFFFFFFFFFLL | 0x572E000000000000;
      break;
    case 12:
      result = 0xD000000000000012;
      break;
    case 13:
      result = sub_23F5BDE2C();
      break;
    case 14:
      result = sub_23F5BDE40();
      break;
    default:
      v2 = *(_QWORD *)(v1 + 16);
      if (v2 == 16)
      {
        result = 0x5F6E776F6E6B6E75;
      }
      else
      {
        sub_23F5BCF94(*(_QWORD *)(v1 + 16));
        v3 = sub_23F5BC504(v2);
        sub_23F61C280();
        sub_23F5BCF74(v2);
        result = v3;
      }
      break;
  }
  return result;
}

uint64_t sub_23F5BC680(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  BOOL v11;
  uint64_t v13;
  uint64_t v14;
  BOOL v16;
  uint64_t v18;
  uint64_t v19;
  char v21;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  char v36;
  BOOL v38;

  v2 = a1 == 1819242306 && a2 == 0xE400000000000000;
  if (v2)
    return 0;
  if ((sub_23F5BDC0C() & 1) != 0)
    return 0;
  if (a1 == 0x422E676F6C616964 && a2 == 0xEE006E61656C6F6FLL)
    return 0;
  sub_23F5BDE54();
  sub_23F5BDE7C();
  if ((sub_23F5BDC0C() & 1) != 0)
    return 0;
  if (a1 == 0x656C62756F44 && a2 == 0xE600000000000000)
    return 1;
  sub_23F5BDDF0();
  if ((sub_23F5BDC0C() & 1) != 0)
    return 1;
  sub_23F5BDC38();
  if (a1 == (v9 & 0xFFFFFFFFFFFFLL | 0x4E2E000000000000) && a2 == v8)
    return 1;
  sub_23F5BDD4C();
  if ((sub_23F5BDC0C() & 1) != 0)
    return 1;
  v11 = a1 == 7630409 && a2 == 0xE300000000000000;
  if (v11 || (sub_23F5BDC0C() & 1) != 0)
    return 2;
  if (a1 == 0x676E69727453 && a2 == 0xE600000000000000)
    return 3;
  sub_23F5BDEC0();
  if ((sub_23F5BDC0C() & 1) != 0)
    return 3;
  sub_23F5BDC38();
  if (a1 == (v14 & 0xFFFFFFFFFFFFLL | 0x532E000000000000) && a2 == v13)
    return 3;
  sub_23F5BDD18();
  if ((sub_23F5BDC0C() & 1) != 0)
    return 3;
  if (a1 == 0xD000000000000010)
  {
    sub_23F5BDC28();
    if (v2)
      return 4;
  }
  sub_23F5BDE90();
  if ((sub_23F5BDC0C() & 1) != 0)
    return 4;
  v16 = a1 == 1702125892 && a2 == 0xE400000000000000;
  if (v16 || (sub_23F5BDC0C() & 1) != 0)
    return 6;
  if (a1 == 0x432E676F6C616964 && a2 == 0xEF7261646E656C61)
    return 6;
  sub_23F5BDCC0();
  if ((sub_23F5BDC0C() & 1) != 0)
    return 6;
  sub_23F5BDC9C();
  if (a1 == v19 && a2 == v18)
    return 7;
  sub_23F5BDC78();
  if ((sub_23F5BDC0C() & 1) != 0)
    return 7;
  if (a1 == 0xD000000000000014)
  {
    sub_23F5BDC28();
    if (v2)
      return 8;
  }
  v21 = sub_23F5BDC0C();
  v23 = a1 == 0x432E676F6C616964 && a2 == 0xEF79636E65727275;
  result = 8;
  if ((v21 & 1) == 0 && !v23)
  {
    sub_23F5BDE68();
    sub_23F5BDE18();
    if ((sub_23F5BDC0C() & 1) != 0)
      return 8;
    sub_23F5BDD6C();
    if (a1 == v25 && a2 == v24)
      return 9;
    sub_23F5BDCF8();
    if ((sub_23F5BDC0C() & 1) != 0)
      return 9;
    sub_23F5BDC38();
    v29 = a1 == (v28 & 0xFFFFFFFFFFFFLL | 0x502E000000000000) && a2 == v27;
    if (v29 || (sub_23F5BDC0C() & 1) != 0)
      return 9;
    if (a1 == 0xD000000000000019)
    {
      sub_23F5BDC28();
      if (v2)
        return 10;
    }
    if ((sub_23F5BDC0C() & 1) != 0)
      return 10;
    sub_23F5BDC38();
    if (a1 == (v31 & 0xFFFFFFFFFFFFLL | 0x4C2E000000000000) && a2 == v30)
      return 10;
    sub_23F5BDD38();
    if ((sub_23F5BDC0C() & 1) != 0)
      return 10;
    if (a1 == 0xD000000000000017)
    {
      sub_23F5BDC28();
      if (v2)
        return 11;
    }
    if ((sub_23F5BDC0C() & 1) != 0)
      return 11;
    sub_23F5BDC38();
    v35 = a1 == (v34 & 0xFFFFFFFFFFFFLL | 0x572E000000000000) && a2 == v33;
    if (v35 || (sub_23F5BDC0C() & 1) != 0)
      return 11;
    if (a1 == 0xD00000000000001ELL)
    {
      sub_23F5BDC28();
      if (v2)
        return 12;
    }
    if ((sub_23F5BDC0C() & 1) != 0)
      return 12;
    if (a1 == 0xD000000000000012)
    {
      sub_23F5BDC28();
      if (v2)
        return 12;
    }
    if ((sub_23F5BDC0C() & 1) != 0)
      return 12;
    if (a1 == 0xD000000000000018)
    {
      sub_23F5BDC28();
      if (v2)
        return 13;
    }
    v36 = sub_23F5BDC0C();
    v38 = a1 == 0x532E676F6C616964 && a2 == 0xEC00000064656570;
    result = 13;
    if ((v36 & 1) == 0 && !v38)
    {
      sub_23F5BDE2C();
      if ((sub_23F5BDC0C() & 1) != 0)
        return 13;
      if (a1 == 0xD00000000000001BLL)
      {
        sub_23F5BDC28();
        if (v2)
          return 14;
      }
      if ((sub_23F5BDC0C() & 1) != 0)
        return 14;
      if (a1 == 0x442E676F6C616964 && a2 == 0xEF6E6F6974617275)
      {
        return 14;
      }
      else
      {
        sub_23F5BDE40();
        if ((sub_23F5BDC0C() & 1) != 0)
          return 14;
        else
          return 16;
      }
    }
  }
  return result;
}

uint64_t sub_23F5BCC70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F38813C();
  v0 = sub_23F61C7B4();
  sub_23F3F1340(v0);
  v2 = v1;
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 16);
    sub_23F362D08();
    if (v3 == 2)
    {
      sub_23F5B9ECC(1);
      v2 = MEMORY[0x24266F6AC](v4, v5, v6, v7);
      sub_23F362D08();
    }
    else
    {
      sub_23F362D18();
      return 0;
    }
  }
  else
  {
    sub_23F362D08();
  }
  return v2;
}

void sub_23F5BCD34(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return;
    default:
      if (a2 >= 0x10)
      {
        v2 = *(_QWORD *)(a1 + 16);
        v3 = *(_QWORD *)(a2 + 16);
        if (v2 != 16 && v3 != 16)
        {
          sub_23F5BDBF4(*(_QWORD *)(a2 + 16));
          sub_23F5BDBF4(v2);
          sub_23F5BCD34(v2, v3);
          sub_23F5BCF74(v3);
          sub_23F5BCF74(v2);
        }
        sub_23F362B80();
      }
      break;
  }
}

void sub_23F5BCEA0(uint64_t *a1, unint64_t *a2)
{
  sub_23F5BCD34(*a1, *a2);
}

uint64_t sub_23F5BCEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StructuredParameter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5BCEF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StructuredParameter();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23F5BCF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E6FC98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23F5BCF74(unint64_t result)
{
  if (result != 16)
    return sub_23F5BCF84(result);
  return result;
}

unint64_t sub_23F5BCF84(unint64_t result)
{
  if (result >= 0x10)
    return swift_release();
  return result;
}

unint64_t sub_23F5BCF94(unint64_t result)
{
  if (result >= 0x10)
    return swift_retain();
  return result;
}

uint64_t sub_23F5BCFA4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16) >= 0x11uLL)
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23F5BCFD4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v5;

  v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2)
      return 0;
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  v5 = __OFADD__(result, a2);
  result += a2;
  if (v5)
    goto LABEL_14;
  return result;
}

ValueMetadata *type metadata accessor for FormattedParameter()
{
  return &type metadata for FormattedParameter;
}

_QWORD *sub_23F5BD030(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F61862C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_23F617BA0();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)((char *)v4 + v14);
    v19 = (_QWORD *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    sub_23F617BA0();
    sub_23F617BA0();
  }
  return v4;
}

uint64_t sub_23F5BD118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23F61862C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23F5BD188(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F61862C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_23F617BA0();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

_QWORD *sub_23F5BD244(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F61862C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_23F5BD32C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F61862C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_23F5BD3B8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F61862C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_23F5BD470()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F5BD47C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F362B80();
  }
  else
  {
    v6 = sub_23F5BDEB0();
    sub_23F36195C(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_23F5BD4E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F5BD4F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23F5BDEB0();
    return sub_23F36196C(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23F5BD558()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61862C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23F5BD5E0()
{
  unint64_t result;

  result = qword_256E7DD78;
  if (!qword_256E7DD78)
  {
    result = MEMORY[0x242670A44](&unk_23F62FFE8, &type metadata for FormattedParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7DD78);
  }
  return result;
}

uint64_t sub_23F5BD61C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_23F35EB74(&qword_256E7DD80);
    v10 = sub_23F3CFCEC(a2, (uint64_t (*)(uint64_t))MEMORY[0x24BE929C8], a3);
    result = MEMORY[0x242670A44](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23F5BD6A0()
{
  unint64_t result;

  result = qword_256E7DDB8;
  if (!qword_256E7DDB8)
  {
    result = MEMORY[0x242670A44](&unk_23F62FF98, &type metadata for StructuredParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7DDB8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StructuredParameter.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23F5BD728 + 4 * byte_23F62FCAA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23F5BD75C + 4 * byte_23F62FCA5[v4]))();
}

uint64_t sub_23F5BD75C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5BD764(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5BD76CLL);
  return result;
}

uint64_t sub_23F5BD778(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5BD780);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23F5BD784(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5BD78C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StructuredParameter.CodingKeys()
{
  return &type metadata for StructuredParameter.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FormattedParameter.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F5BD7F4 + 4 * byte_23F62FCB4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F5BD828 + 4 * byte_23F62FCAF[v4]))();
}

uint64_t sub_23F5BD828(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5BD830(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F5BD838);
  return result;
}

uint64_t sub_23F5BD844(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F5BD84CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F5BD850(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F5BD858(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormattedParameter.CodingKeys()
{
  return &type metadata for FormattedParameter.CodingKeys;
}

uint64_t *initializeBufferWithCopyOfBuffer for NLGParameterType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_retain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for NLGParameterType(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_release();
  return result;
}

unint64_t *assignWithCopy for NLGParameterType(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_retain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_retain();
    swift_release();
  }
  return a1;
}

unint64_t *assignWithTake for NLGParameterType(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v3 < 0xFFFFFFFF)
  {
    swift_release();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NLGParameterType(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFF0 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483632);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 15;
  if (v4 >= 0x11)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NLGParameterType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFEF)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483632;
    if (a3 >= 0x7FFFFFF0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF0)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 15;
  }
  return result;
}

ValueMetadata *type metadata accessor for NLGParameterType()
{
  return &type metadata for NLGParameterType;
}

unint64_t sub_23F5BDA78()
{
  unint64_t result;

  result = qword_256E7DDD0;
  if (!qword_256E7DDD0)
  {
    result = MEMORY[0x242670A44](&unk_23F62FEB8, &type metadata for FormattedParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7DDD0);
  }
  return result;
}

unint64_t sub_23F5BDAB8()
{
  unint64_t result;

  result = qword_256E7DDD8;
  if (!qword_256E7DDD8)
  {
    result = MEMORY[0x242670A44](&unk_23F62FF70, &type metadata for StructuredParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7DDD8);
  }
  return result;
}

unint64_t sub_23F5BDAF8()
{
  unint64_t result;

  result = qword_256E7DDE0;
  if (!qword_256E7DDE0)
  {
    result = MEMORY[0x242670A44](&unk_23F62FEE0, &type metadata for StructuredParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7DDE0);
  }
  return result;
}

unint64_t sub_23F5BDB38()
{
  unint64_t result;

  result = qword_256E7DDE8;
  if (!qword_256E7DDE8)
  {
    result = MEMORY[0x242670A44](&unk_23F62FF08, &type metadata for StructuredParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7DDE8);
  }
  return result;
}

unint64_t sub_23F5BDB78()
{
  unint64_t result;

  result = qword_256E7DDF0;
  if (!qword_256E7DDF0)
  {
    result = MEMORY[0x242670A44](&unk_23F62FE28, &type metadata for FormattedParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7DDF0);
  }
  return result;
}

unint64_t sub_23F5BDBB8()
{
  unint64_t result;

  result = qword_256E7DDF8;
  if (!qword_256E7DDF8)
  {
    result = MEMORY[0x242670A44](&unk_23F62FE50, &type metadata for FormattedParameter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7DDF8);
  }
  return result;
}

unint64_t sub_23F5BDBF4(unint64_t result)
{
  if (result != 16)
    return sub_23F5BCF94(result);
  return result;
}

uint64_t sub_23F5BDC0C()
{
  return sub_23F61CC64();
}

uint64_t sub_23F5BDC18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v0, v1);
}

uint64_t sub_23F5BDC4C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 104));
}

uint64_t sub_23F5BDC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F5BDC78()
{
  return 0x706D6F4365746144;
}

uint64_t sub_23F5BDCC0()
{
  return 0x432E676F6C616964;
}

uint64_t sub_23F5BDCE4()
{
  return 0x676F6C616964;
}

uint64_t sub_23F5BDCF8()
{
  return 0x6550746E65746E49;
}

uint64_t sub_23F5BDD18()
{
  return 0x532E676F6C616964;
}

uint64_t sub_23F5BDD38()
{
  return 0x4C2E676F6C616964;
}

uint64_t sub_23F5BDD4C()
{
  return 0x4E2E676F6C616964;
}

uint64_t sub_23F5BDD8C(uint64_t a1, uint64_t a2)
{
  return sub_23F5BCFD4(0, (*(_QWORD *)(a2 + 16) - a1) & ~((*(_QWORD *)(a2 + 16) - a1) >> 63), *(_QWORD *)(a2 + 16));
}

uint64_t sub_23F5BDDBC()
{
  return sub_23F61CD90();
}

uint64_t sub_23F5BDDD0()
{
  return sub_23F61CBB0();
}

uint64_t sub_23F5BDDE0()
{
  return sub_23F61CB14();
}

uint64_t sub_23F5BDDF0()
{
  return 0x656C62756F44;
}

uint64_t sub_23F5BDE2C()
{
  return 0x532E676F6C616964;
}

uint64_t sub_23F5BDE40()
{
  return 0x442E676F6C616964;
}

uint64_t sub_23F5BDE54()
{
  return 0x422E676F6C616964;
}

uint64_t sub_23F5BDE68()
{
  return 0x432E676F6C616964;
}

unint64_t sub_23F5BDE90()
{
  return 0xD000000000000010;
}

void sub_23F5BDEA4()
{
  sub_23F377C4C();
}

uint64_t sub_23F5BDEB0()
{
  return sub_23F61862C();
}

uint64_t sub_23F5BDEB8()
{
  return type metadata accessor for StructuredParameter();
}

uint64_t sub_23F5BDEC0()
{
  return 0x676E69727453;
}

Swift::Bool __swiftcall ToolDefinition.isAppLaunchRequired(willRunOpensIntent:)(Swift::Bool willRunOpensIntent)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(void);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _BOOL4 v60;
  void (*v61)(void);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;

  v60 = willRunOpensIntent;
  v1 = sub_23F61B4F4();
  v65 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_23F3834D0();
  v63 = v2;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v3);
  v64 = (char *)&v52 - v4;
  v5 = sub_23F61B5D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3834D0();
  v59 = v7;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v8);
  v66 = (char *)&v52 - v9;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v10);
  v67 = (uint64_t)&v52 - v11;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v12);
  v68 = (uint64_t)&v52 - v13;
  v14 = sub_23F61B668();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BEB9438];
  v16 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v52 - v20;
  sub_23F61B5C0();
  sub_23F61B650();
  v22 = sub_23F3CFCEC((unint64_t *)&qword_256E74C40, v15, MEMORY[0x24BEB9448]);
  v23 = sub_23F61C844();
  v24 = *(char **)(v16 + 8);
  v25 = v5;
  ((void (*)(char *, uint64_t))v24)(v19, v14);
  v58 = v21;
  ((void (*)(char *, uint64_t))v24)(v21, v14);
  v26 = v6;
  v27 = *(void (**)(void))(v6 + 16);
  v28 = v68;
  v27();
  if ((v23 & 1) != 0)
  {
    sub_23F5BEA90(v28);
    v29 = sub_23F5BEA98();
LABEL_14:
    ((void (*)(uint64_t))v27)(v29);
    v42 = (uint64_t)v66;
LABEL_15:
    sub_23F5BEA90(v22);
    ((void (*)(uint64_t, char *, uint64_t))v27)(v42, v24, v25);
    v48 = 1;
    goto LABEL_16;
  }
  v57 = v26;
  v52 = v22;
  v53 = (void (*)(char *, uint64_t))v24;
  v61 = v27;
  v62 = v25;
  v54 = v19;
  v55 = v14;
  v30 = sub_23F61B554();
  v31 = *MEMORY[0x24BEB8E78];
  v32 = v64;
  v22 = v65;
  v56 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 104);
  v56(v64, v31, v1);
  v33 = *(_QWORD *)(v30 + 16);
  if (v33)
  {
    v24 = (char *)(v30 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80)));
    v34 = *(_QWORD *)(v22 + 72);
    sub_23F3CFCEC(&qword_256E708D8, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8ED8], MEMORY[0x24BEB8EF0]);
    while ((sub_23F5BEAB0() & 1) == 0)
    {
      v24 += v34;
      if (!--v33)
        goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v32, v1);
    swift_bridgeObjectRelease();
    v25 = v62;
    sub_23F5BEA90(v68);
    v29 = sub_23F5BEA98();
    v27 = v61;
    goto LABEL_14;
  }
LABEL_7:
  (*(void (**)(char *, uint64_t))(v22 + 8))(v32, v1);
  swift_bridgeObjectRelease();
  v35 = v22;
  v36 = v62;
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v68, v62);
  ((void (*)(uint64_t, char *, uint64_t))v61)(v67, v69, v36);
  v37 = sub_23F61B554();
  v56(v63, *MEMORY[0x24BEB8EA8], v1);
  v38 = *(_QWORD *)(v37 + 16);
  if (v38)
  {
    v39 = v37 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
    v40 = *(_QWORD *)(v35 + 72);
    sub_23F3CFCEC(&qword_256E708D8, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8ED8], MEMORY[0x24BEB8EF0]);
    while ((sub_23F5BEAB0() & 1) == 0)
    {
      v39 += v40;
      if (!--v38)
        goto LABEL_11;
    }
    sub_23F5BEAC0();
    swift_bridgeObjectRelease();
    v42 = (uint64_t)v66;
    v22 = v67;
    v24 = v69;
    v27 = v61;
    v25 = v62;
    goto LABEL_15;
  }
LABEL_11:
  sub_23F5BEAC0();
  swift_bridgeObjectRelease();
  v41 = v62;
  sub_23F5BEA90(v67);
  v42 = (uint64_t)v66;
  v43 = v61;
  ((void (*)(char *, char *, uint64_t))v61)(v66, v69, v41);
  v44 = v59;
  ((void (*)(uint64_t, uint64_t, uint64_t))v43)(v59, v42, v41);
  if (v60)
  {
    v45 = v58;
    sub_23F61B5C0();
    v46 = v54;
    sub_23F61B65C();
    v47 = v55;
    v48 = sub_23F61C844();
    v49 = v46;
    v50 = v53;
    v53(v49, v47);
    v50(v45, v47);
    sub_23F5BEA90(v44);
  }
  else
  {
    sub_23F5BEA90(v44);
    v48 = 0;
  }
LABEL_16:
  sub_23F5BEA90(v42);
  return v48 & 1;
}

uint64_t ResponseModeRequirementEvaluator.evaluate(tool:transcript:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = sub_23F61A0D8();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = sub_23F366578();
  v3[9] = sub_23F35D2E8(&qword_256E7DE08);
  v3[10] = sub_23F3666CC();
  v3[11] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E719D0);
  v3[12] = sub_23F366578();
  sub_23F35D2E8(&qword_256E7BAD0);
  v3[13] = sub_23F3666CC();
  v3[14] = sub_23F3666CC();
  v3[15] = sub_23F3666CC();
  v3[16] = sub_23F3666CC();
  v3[17] = sub_23F3666CC();
  v3[18] = sub_23F3666CC();
  return swift_task_switch();
}

uint64_t sub_23F5BE478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void (*v41)(uint64_t, uint64_t);
  Swift::Bool v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 16) = sub_23F61B14C();
  sub_23F35D2E8(&qword_256E70F10);
  sub_23F3E29D8();
  sub_23F61ACF0();
  swift_bridgeObjectRelease();
  v2 = sub_23F618E54();
  v3 = sub_23F482D78(v1);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 96);
  if (v3 == 1)
  {
    v6 = *(_QWORD *)(v0 + 48);
    sub_23F3CFCB0(*(_QWORD *)(v0 + 96), &qword_256E719D0);
    v7 = sub_23F36196C(v4, 1, 1, v6);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 96);
    StructuredContext.SiriRequestContext.mode.getter(*(_QWORD *)(v0 + 144));
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v5, v2);
  }
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 48);
  sub_23F5BEAE4(v7, *MEMORY[0x24BE54F08]);
  sub_23F5BEA60();
  sub_23F5BEAD8();
  if (sub_23F36195C(v8, 1, v9) == 1)
  {
    v10 = *(_QWORD *)(v0 + 48);
    sub_23F3CFCB0(*(_QWORD *)(v0 + 136), &qword_256E7BAD0);
    if (sub_23F36195C(v4, 1, v10) == 1)
    {
      sub_23F3CFCB0(*(_QWORD *)(v0 + 88), &qword_256E7BAD0);
      sub_23F5BEACC();
LABEL_17:
      v21 = *(_QWORD *)(v0 + 120);
      goto LABEL_18;
    }
    goto LABEL_9;
  }
  v11 = *(_QWORD *)(v0 + 48);
  sub_23F5BE9A0(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 128));
  if (sub_23F36195C(v4, 1, v11) == 1)
  {
    v12 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 48);
    v14 = *(_QWORD *)(v0 + 56);
    sub_23F3CFCB0(*(_QWORD *)(v0 + 136), &qword_256E7BAD0);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
LABEL_9:
    v15 = *(_QWORD *)(v0 + 144);
    sub_23F3CFCB0(*(_QWORD *)(v0 + 88), &qword_256E7DE08);
    v16 = sub_23F5BEACC();
    goto LABEL_10;
  }
  v29 = *(_QWORD *)(v0 + 136);
  v30 = *(_QWORD *)(v0 + 128);
  v48 = *(_QWORD *)(v0 + 120);
  v49 = *(_QWORD *)(v0 + 144);
  v31 = *(_QWORD *)(v0 + 88);
  v32 = *(_QWORD *)(v0 + 56);
  v33 = *(_QWORD *)(v0 + 64);
  v34 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v33, v4, v34);
  sub_23F3CFCEC(&qword_256E7DE10, (uint64_t (*)(uint64_t))MEMORY[0x24BE54F10], MEMORY[0x24BE54F20]);
  v15 = sub_23F61C0A0();
  v35 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  v35(v33, v34);
  sub_23F3CFCB0(v29, &qword_256E7BAD0);
  v35(v30, v34);
  sub_23F3CFCB0(v31, &qword_256E7BAD0);
  v16 = sub_23F5BE9A0(v49, v48);
  if ((v15 & 1) != 0)
    goto LABEL_17;
LABEL_10:
  v17 = *(_QWORD *)(v0 + 80);
  v18 = *(_QWORD *)(v0 + 48);
  sub_23F5BEAE4(v16, *MEMORY[0x24BE54EE8]);
  sub_23F5BEA60();
  sub_23F5BEAD8();
  if (sub_23F36195C(v17, 1, v18) == 1)
  {
    v19 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 48);
    sub_23F3CFCB0(*(_QWORD *)(v0 + 112), &qword_256E7BAD0);
    sub_23F3CFCB0(v19, &qword_256E7BAD0);
    if (sub_23F36195C(v15, 1, v20) == 1)
    {
      v21 = *(_QWORD *)(v0 + 80);
LABEL_18:
      sub_23F3CFCB0(v21, &qword_256E7BAD0);
      v28 = 0;
      goto LABEL_20;
    }
LABEL_15:
    sub_23F3CFCB0(*(_QWORD *)(v0 + 80), &qword_256E7DE08);
    v28 = 1;
    goto LABEL_20;
  }
  sub_23F5BE9A0(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104));
  v22 = sub_23F482D78(v15);
  v24 = *(_QWORD *)(v0 + 112);
  v23 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(v0 + 104);
  if (v22 == 1)
  {
    v26 = *(_QWORD *)(v0 + 48);
    v27 = *(_QWORD *)(v0 + 56);
    sub_23F3CFCB0(*(_QWORD *)(v0 + 112), &qword_256E7BAD0);
    sub_23F3CFCB0(v23, &qword_256E7BAD0);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    goto LABEL_15;
  }
  v36 = *(_QWORD *)(v0 + 80);
  v38 = *(_QWORD *)(v0 + 56);
  v37 = *(_QWORD *)(v0 + 64);
  v39 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v37, v15, v39);
  sub_23F3CFCEC(&qword_256E7DE10, (uint64_t (*)(uint64_t))MEMORY[0x24BE54F10], MEMORY[0x24BE54F20]);
  v40 = sub_23F61C0A0();
  v41 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  v41(v37, v39);
  sub_23F5BEAF0(v24);
  sub_23F5BEAF0(v23);
  v41(v25, v39);
  sub_23F5BEAF0(v36);
  v28 = v40 ^ 1;
LABEL_20:
  v42 = ToolDefinition.isAppLaunchRequired(willRunOpensIntent:)(v28 & 1);
  v43 = *(_QWORD *)(v0 + 144);
  v44 = *(_QWORD **)(v0 + 24);
  if (v42)
  {
    sub_23F3CFCB0(*(_QWORD *)(v0 + 144), &qword_256E7BAD0);
  }
  else
  {
    sub_23F3E3634((uint64_t)&unk_250FD07D8);
    v46 = v45;
    sub_23F3CFCB0(v43, &qword_256E7BAD0);
    *v44 = v46;
  }
  type metadata accessor for RequirementStatus();
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F5BE9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E7BAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F5BE9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F3E2AC4;
  return ResponseModeRequirementEvaluator.evaluate(tool:transcript:)(a1, a2, a3);
}

ValueMetadata *type metadata accessor for ResponseModeRequirementEvaluator()
{
  return &type metadata for ResponseModeRequirementEvaluator;
}

uint64_t sub_23F5BEA60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F36196C(v1, 0, 1, v3);
  return sub_23F5BE9A0(v0, v2);
}

uint64_t sub_23F5BEA90(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23F5BEA98()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 104);
}

uint64_t sub_23F5BEAB0()
{
  return sub_23F61C0A0();
}

uint64_t sub_23F5BEAC0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t sub_23F5BEACC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F5BE9A0(v1, v0);
}

uint64_t sub_23F5BEAD8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F5BE9A0(v1, v0);
}

uint64_t sub_23F5BEAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v2, a2, v3);
}

uint64_t sub_23F5BEAF0(uint64_t a1)
{
  uint64_t *v1;

  return sub_23F3CFCB0(a1, v1);
}

BOOL sub_23F5BEAF8()
{
  uint64_t v0;

  v0 = sub_23F61CAB4();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_23F5BEB3C()
{
  return sub_23F5BEAF8();
}

uint64_t sub_23F5BEB54()
{
  return 0x69746164696C6176;
}

BOOL sub_23F5BEB84@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_23F5BEAF8();
  *a1 = result;
  return result;
}

void sub_23F5BEBB4(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_23F5BEB54();
  a1[1] = v2;
  sub_23F362928();
}

BOOL sub_23F5BEBD8@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_23F5BEB3C();
  *a1 = result;
  return result;
}

uint64_t sub_23F5BEC00()
{
  sub_23F5BEE6C();
  return sub_23F61CDC0();
}

uint64_t sub_23F5BEC28()
{
  sub_23F5BEE6C();
  return sub_23F61CDCC();
}

uint64_t sub_23F5BEC50(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_23F617BA0();
  return sub_23F5BECD0(v1, v2);
}

uint64_t sub_23F5BEC8C()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1450();
  v1 = *(_QWORD *)(v0 + 16);
  sub_23F617BA0();
  return v1;
}

uint64_t sub_23F5BECD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F3B1450();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t ValidationEntry.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  sub_23F516EA4();
  v2 = swift_allocObject();
  ValidationEntry.init(from:)(a1);
  return v2;
}

void ValidationEntry.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1;
  v5 = sub_23F35D2E8(&qword_256E7DE28);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5BEE6C();
  sub_23F61CD84();
  if (v2)
  {
    type metadata accessor for ValidationEntry();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v6 = sub_23F61CB14();
    v8 = v7;
    sub_23F4F2424();
    *(_QWORD *)(v3 + 16) = v6;
    *(_QWORD *)(v3 + 24) = v8;
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)a1);
  sub_23F362870();
}

unint64_t sub_23F5BEE6C()
{
  unint64_t result;

  result = qword_256E7DE30;
  if (!qword_256E7DE30)
  {
    result = MEMORY[0x242670A44](&unk_23F6303A4, &type metadata for ValidationEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7DE30);
  }
  return result;
}

uint64_t type metadata accessor for ValidationEntry()
{
  return objc_opt_self();
}

uint64_t sub_23F5BEEC8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_23F35D2E8(&qword_256E7DE38);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35EA9C(a1, a1[3]);
  sub_23F5BEE6C();
  sub_23F61CD90();
  swift_beginAccess();
  sub_23F617BA0();
  sub_23F61CBB0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_23F3837B0();
}

uint64_t ValidationEntry.deinit()
{
  uint64_t v0;

  sub_23F5247C0();
  return v0;
}

uint64_t ValidationEntry.__deallocating_deinit()
{
  sub_23F5247C0();
  sub_23F516EA4();
  return swift_deallocClassInstance();
}

uint64_t sub_23F5BF004@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = ValidationEntry.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23F5BF02C(_QWORD *a1)
{
  return sub_23F5BEEC8(a1);
}

uint64_t sub_23F5BF04C()
{
  MEMORY[0x242670A44](&protocol conformance descriptor for ValidationEntry);
  return sub_23F61739C();
}

uint64_t sub_23F5BF0BC()
{
  MEMORY[0x242670A44](&protocol conformance descriptor for ValidationEntry);
  return sub_23F617354();
}

void sub_23F5BF120()
{
  id v0;
  id v1;

  v0 = objc_allocWithZone((Class)type metadata accessor for ResponseValidator());
  v1 = sub_23F57BA30(0xD00000000000001FLL, 0x800000023F63BAF0);
  sub_23F57BE28();

  qword_256E7DE20 = (uint64_t)v1;
  sub_23F362928();
}

id static ResponseValidator.current.getter()
{
  if (qword_256E6F0F0 != -1)
    swift_once();
  return (id)qword_256E7DE20;
}

uint64_t sub_23F5BF1B8()
{
  uint64_t v0;

  sub_23F35D2E8(&qword_256E700E8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23F61EBC0;
  *(_QWORD *)(v0 + 32) = 0xD000000000000041;
  *(_QWORD *)(v0 + 40) = 0x800000023F63B950;
  *(_QWORD *)(v0 + 48) = 0xD00000000000003CLL;
  *(_QWORD *)(v0 + 56) = 0x800000023F63B9A0;
  sub_23F61C8E0();
  swift_bridgeObjectRelease();
  sub_23F61CC1C();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 64) = 0xD000000000000014;
  *(_QWORD *)(v0 + 72) = 0x800000023F63A080;
  return v0;
}

uint64_t sub_23F5BF2B4(Swift::OpaquePointer a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint8_t *v21;
  uint8_t *v22;
  void (*v23)(char *, uint64_t);
  Swift::String v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  IntelligenceFlowPlannerRuntime::ResponseCatalogIdentifiers identifiers;
  uint64_t v61;

  v4 = sub_23F619E98();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v53 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v59 = (char *)v51 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v52 = (char *)v51 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v51 - v12;
  v14 = (void *)a2[1];
  v54 = *a2;
  v15 = a2[2];
  v56 = (void *)a2[3];
  v16 = a2[4];
  v17 = (void *)a2[5];
  sub_23F619124();
  v18 = sub_23F619E8C();
  v19 = sub_23F61C610();
  v20 = os_log_type_enabled(v18, v19);
  v57 = v15;
  v58 = v16;
  if (v20)
  {
    v21 = (uint8_t *)sub_23F366668();
    v51[1] = v17;
    v22 = v21;
    *(_DWORD *)v21 = 67109120;
    swift_getKeyPath();
    sub_23F617C9C();
    swift_release();
    LODWORD(identifiers.appBundleID._countAndFlagsBits) = LOBYTE(identifiers.appBundleID._countAndFlagsBits);
    sub_23F61C790();
    _os_log_impl(&dword_23F35A000, v18, v19, "ResponseGeneration:(ResponseValidator)validateflag = %{BOOL}d", v22, 8u);
    sub_23F366530();
  }

  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v13, v4);
  swift_getKeyPath();
  sub_23F617C9C();
  swift_release();
  if (LOBYTE(identifiers.appBundleID._countAndFlagsBits) != 1)
  {
    v25 = v59;
    sub_23F619124();
    sub_23F516F58();
    v26 = sub_23F619E8C();
    v27 = sub_23F61C610();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)sub_23F366668();
      identifiers.appBundleID._countAndFlagsBits = sub_23F366668();
      *(_DWORD *)v28 = 136315138;
      sub_23F384324();
      v29 = sub_23F5C2078();
      v55 = (uint64_t)v23;
      v31 = v30;
      sub_23F38432C();
      sub_23F37AE00(v29, v31, &identifiers.appBundleID._countAndFlagsBits);
      sub_23F4F2980(v32);
      sub_23F61C790();
      sub_23F384A80();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23F35A000, v26, v27, "ResponseValidator: Because validation currently disabled, permitting the request to go through: %s", v28, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F384A80();
    v33 = v25;
    v36 = (char *)v4;
    goto LABEL_10;
  }
  identifiers.appBundleID._countAndFlagsBits = v54;
  identifiers.appBundleID._object = v14;
  identifiers.intentID._countAndFlagsBits = v15;
  identifiers.intentID._object = v56;
  identifiers.actionType._countAndFlagsBits = v16;
  identifiers.actionType._object = v17;
  v24 = hashInputKeysOnly(inputParams:identifiers:)(a1, &identifiers);
  sub_23F5BFDC8(v24._countAndFlagsBits, (uint64_t)v24._object);
  v35 = v34;
  swift_bridgeObjectRelease();
  if (!v35)
  {
    v59 = (char *)v4;
    v38 = v52;
    sub_23F619124();
    sub_23F5C201C();
    sub_23F5C201C();
    sub_23F5C201C();
    sub_23F516F58();
    v39 = sub_23F619E8C();
    v40 = sub_23F61C628();
    v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      v42 = sub_23F366668();
      LODWORD(v54) = v41;
      v43 = v42;
      v55 = sub_23F366668();
      identifiers.appBundleID._countAndFlagsBits = v55;
      *(_DWORD *)v43 = 136315906;
      sub_23F362CDC();
      v44 = v57;
      sub_23F5C2038(v57, v45, &identifiers.appBundleID._countAndFlagsBits);
      v61 = v46;
      sub_23F5C1FF8();
      sub_23F384A80();
      sub_23F384A80();
      sub_23F55AE40();
      *(_WORD *)(v43 + 12) = 2080;
      sub_23F362CDC();
      sub_23F5C2038(v44, v47, &identifiers.appBundleID._countAndFlagsBits);
      v61 = v48;
      sub_23F5C1FF8();
      sub_23F384A80();
      sub_23F384A80();
      sub_23F55AE40();
      *(_WORD *)(v43 + 22) = 2080;
      sub_23F617BA0();
      sub_23F5C2040();
      v61 = v49;
      sub_23F5C1FF8();
      sub_23F384A80();
      sub_23F384A80();
      sub_23F5C206C();
      *(_WORD *)(v43 + 32) = 2080;
      sub_23F384324();
      sub_23F5C2078();
      sub_23F5C2024();
      sub_23F5C2050();
      v61 = v50;
      sub_23F5C1FF8();
      sub_23F384A80();
      sub_23F38432C();
      _os_log_impl(&dword_23F35A000, v39, (os_log_type_t)v54, "ResponseValidator: INVALID request - Model not trained for these parameters: %s:%s:%s - %s", (uint8_t *)v43, 0x2Au);
      swift_arrayDestroy();
      sub_23F366530();
    }

    sub_23F384A80();
    sub_23F5C2014();
    sub_23F5C2014();
    sub_23F5C2014();
    v33 = v38;
    v36 = v59;
LABEL_10:
    v23(v33, (uint64_t)v36);
    return 1;
  }
  sub_23F3668FC();
  return 1;
}

Swift::String __swiftcall hashInputKeysOnly(inputParams:identifiers:)(Swift::OpaquePointer inputParams, IntelligenceFlowPlannerRuntime::ResponseCatalogIdentifiers *identifiers)
{
  unint64_t object;
  unint64_t countAndFlagsBits;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String result;
  char *v45;
  uint64_t v46[3];

  countAndFlagsBits = identifiers->appBundleID._countAndFlagsBits;
  object = (unint64_t)identifiers->appBundleID._object;
  v6 = identifiers->intentID._countAndFlagsBits;
  v5 = (unint64_t)identifiers->intentID._object;
  v8 = identifiers->actionType._countAndFlagsBits;
  v7 = identifiers->actionType._object;
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F362CDC();
  sub_23F376C88();
  v10 = v9;
  v11 = *(_QWORD *)(v9 + 16);
  v12 = *(_QWORD *)(v9 + 24) >> 1;
  v13 = v11 + 1;
  if (v12 > v11)
    goto LABEL_2;
LABEL_37:
  sub_23F5C2008();
  v10 = v41;
  v12 = *(_QWORD *)(v41 + 24) >> 1;
LABEL_2:
  *(_QWORD *)(v10 + 16) = v13;
  v14 = v10 + 16 * v11;
  *(_QWORD *)(v14 + 32) = countAndFlagsBits;
  *(_QWORD *)(v14 + 40) = object;
  if ((uint64_t)v12 < (uint64_t)(v11 + 2))
  {
    sub_23F5C2008();
    v10 = v42;
  }
  *(_QWORD *)(v10 + 16) = v11 + 2;
  v15 = v10 + 16 * v13;
  *(_QWORD *)(v15 + 32) = v6;
  *(_QWORD *)(v15 + 40) = v5;
  object = *(_QWORD *)(v10 + 16);
  v5 = object + 1;
  if (object >= *(_QWORD *)(v10 + 24) >> 1)
  {
    sub_23F5C2008();
    v10 = v43;
  }
  *(_QWORD *)(v10 + 16) = v5;
  v16 = v10 + 16 * object;
  *(_QWORD *)(v16 + 32) = v8;
  *(_QWORD *)(v16 + 40) = v7;
  v45 = (char *)inputParams._rawValue + 64;
  v17 = 1 << *((_BYTE *)inputParams._rawValue + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  countAndFlagsBits = v18 & *((_QWORD *)inputParams._rawValue + 8);
  v8 = (unint64_t)(v17 + 63) >> 6;
  sub_23F617BA0();
  v6 = 0;
  if (countAndFlagsBits)
  {
LABEL_9:
    v19 = __clz(__rbit64(countAndFlagsBits));
    countAndFlagsBits &= countAndFlagsBits - 1;
    v20 = v19 | (v6 << 6);
    goto LABEL_28;
  }
  while (1)
  {
    v21 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v8)
      goto LABEL_32;
    v22 = *(_QWORD *)&v45[8 * v21];
    ++v6;
    if (!v22)
    {
      v6 = v21 + 1;
      if (v21 + 1 >= v8)
        goto LABEL_32;
      sub_23F5C2060();
      if (!v22)
      {
        v6 = v23 + 2;
        if (v23 + 2 >= v8)
          goto LABEL_32;
        sub_23F5C2060();
        if (!v22)
        {
          v6 = v24 + 3;
          if (v24 + 3 >= v8)
            goto LABEL_32;
          sub_23F5C2060();
          if (!v22)
          {
            v6 = v25 + 4;
            if (v25 + 4 >= v8)
              goto LABEL_32;
            sub_23F5C2060();
            if (!v22)
              break;
          }
        }
      }
    }
LABEL_27:
    countAndFlagsBits = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v6 << 6);
LABEL_28:
    v29 = (unint64_t *)(*((_QWORD *)inputParams._rawValue + 6) + 16 * v20);
    v11 = *v29;
    v7 = (void *)v29[1];
    v13 = *(_QWORD *)(v10 + 24);
    object = v5 + 1;
    sub_23F362CDC();
    if (v5 >= v13 >> 1)
    {
      sub_23F5C2008();
      v10 = v31;
    }
    *(_QWORD *)(v10 + 16) = object;
    v30 = v10 + 16 * v5;
    *(_QWORD *)(v30 + 32) = v11;
    *(_QWORD *)(v30 + 40) = v7;
    ++v5;
    if (countAndFlagsBits)
      goto LABEL_9;
  }
  v27 = v26 + 5;
  if (v27 >= v8)
  {
LABEL_32:
    sub_23F3668FC();
    v46[0] = v10;
    sub_23F617BA0();
    sub_23F5C0CAC(v46);
    swift_bridgeObjectRelease();
    v32 = v46[0];
    v46[0] = 0;
    v46[1] = 0xE000000000000000;
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
    {
      v34 = v32 + 40;
      do
      {
        sub_23F362CDC();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v34 += 16;
        --v33;
      }
      while (v33);
    }
    sub_23F3668FC();
    sub_23F5C0824();
    v36 = v35;
    v38 = v37;
    swift_bridgeObjectRelease();
    v39 = v36;
    v40 = v38;
    goto LABEL_39;
  }
  v22 = *(_QWORD *)&v45[8 * v27];
  if (v22)
  {
    v6 = v27;
    goto LABEL_27;
  }
  while (1)
  {
    v6 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v6 >= v8)
      goto LABEL_32;
    sub_23F5C2060();
    v27 = v28 + 1;
    if (v22)
      goto LABEL_27;
  }
  __break(1u);
  v39 = swift_release();
  __break(1u);
LABEL_39:
  result._object = v40;
  result._countAndFlagsBits = v39;
  return result;
}

void sub_23F5BFDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t (*v25)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v6 = sub_23F619E98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v34 - v13;
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_databaseQueue);
  if (v15)
  {
    v36 = (uint64_t (*)(char *, uint64_t))v7;
    v38 = v12;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = a1;
    *(_QWORD *)(v16 + 24) = a2;
    v37 = v15;
    swift_retain();
    sub_23F617BA0();
    sub_23F619124();
    swift_bridgeObjectRetain_n();
    v17 = sub_23F619E8C();
    v18 = sub_23F61C610();
    if (os_log_type_enabled(v17, v18))
    {
      v34 = v6;
      v19 = sub_23F366668();
      v35 = v16;
      v20 = (uint8_t *)v19;
      v39 = sub_23F366668();
      *(_DWORD *)v20 = 136315138;
      sub_23F617BA0();
      sub_23F37AE00(a1, a2, &v39);
      sub_23F4F2980(v21);
      sub_23F61C790();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23F35A000, v17, v18, "ResponseValidator: searching cache for %s", v20, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }

    swift_bridgeObjectRelease_n();
    v25 = (uint64_t (*)(char *, uint64_t))*((_QWORD *)v36 + 1);
    v26 = v25(v14, v6);
    MEMORY[0x24BDAC7A8](v26);
    *(&v34 - 2) = (uint64_t)sub_23F5C0D2C;
    *(&v34 - 1) = v16;
    sub_23F35D2E8(&qword_256E7DE40);
    sub_23F6172E8();
    v27 = v38;
    if (v3)
    {
      sub_23F619124();
      sub_23F441468();
      sub_23F441468();
      v28 = sub_23F619E8C();
      v29 = sub_23F61C628();
      if (sub_23F49BA04(v29))
      {
        v30 = sub_23F366668();
        v36 = v25;
        v31 = (uint8_t *)v30;
        v32 = (_QWORD *)sub_23F366668();
        v35 = v16;
        *(_DWORD *)v31 = 138412290;
        sub_23F441468();
        v33 = _swift_stdlib_bridgeErrorToNSError();
        v39 = v33;
        sub_23F61C790();
        *v32 = v33;
        sub_23F3665E8();
        sub_23F3665E8();
        _os_log_impl(&dword_23F35A000, v28, (os_log_type_t)&v34, "ResponseValidator: read failed with: %@", v31, 0xCu);
        sub_23F35D2E8(&qword_256E6FAB0);
        swift_arrayDestroy();
        sub_23F366530();
      }
      swift_release();
      sub_23F3665E8();
      sub_23F3665E8();
      sub_23F3665E8();

      v25(v27, v6);
      swift_release();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  else
  {
    sub_23F619124();
    v22 = sub_23F619E8C();
    v23 = sub_23F61C628();
    if (sub_23F49BA04(v23))
    {
      v24 = (uint8_t *)sub_23F366668();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_23F35A000, v22, (os_log_type_t)a1, "ResponseValidator: Unable to access database", v24, 2u);
      sub_23F366530();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }
  sub_23F362870();
}

uint64_t sub_23F5C0230(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;
  uint64_t v30;

  v26 = a1;
  v23 = sub_23F619E98();
  v25 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F6173B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v28[0] = 0;
  *((_QWORD *)&v28[0] + 1) = 0xE000000000000000;
  sub_23F61C8E0();
  sub_23F61C280();
  v24 = a3;
  sub_23F61C280();
  sub_23F61C280();
  type metadata accessor for ValidationEntry();
  v29 = 0;
  memset(v28, 0, sizeof(v28));
  sub_23F6173A8();
  sub_23F5C1FB8(&qword_256E7DF68, v11, (uint64_t (*)(uint64_t))type metadata accessor for ValidationEntry, (uint64_t)&protocol conformance descriptor for ValidationEntry);
  v12 = v27;
  sub_23F617390();
  if (v12)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_23F57D75C((uint64_t)v28);
  }
  else
  {
    v27 = a2;
    v13 = v24;
    v14 = v25;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_23F57D75C((uint64_t)v28);
    v7 = v30;
    if (!v30)
    {
      sub_23F619124();
      swift_bridgeObjectRetain_n();
      v15 = sub_23F619E8C();
      v16 = sub_23F61C610();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        v18 = swift_slowAlloc();
        v26 = v6;
        v19 = v18;
        *(_QWORD *)&v28[0] = v18;
        *(_DWORD *)v17 = 136315138;
        sub_23F617BA0();
        sub_23F37AE00(v27, v13, (uint64_t *)v28);
        v30 = v20;
        sub_23F61C790();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23F35A000, v15, v16, "ResponseValidator: No entry found for hashcode '%s'", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x242670B70](v19, -1, -1);
        MEMORY[0x242670B70](v17, -1, -1);

        (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v23);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v23);
      }
    }
  }
  return v7;
}

void sub_23F5C0558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime23ResponseCatalogDatabase_databaseQueue))
  {
    v2 = MEMORY[0x24BDAC7A8](a1);
    MEMORY[0x24BDAC7A8](v2);
    sub_23F617300();
    swift_retain();
    sub_23F35D2E8(&qword_256E7B648);
    sub_23F61730C();
    swift_release();
  }
  sub_23F4DC270();
}

uint64_t sub_23F5C0638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v5;
  unint64_t v6;

  v0 = sub_23F6173B4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = 0xD000000000000027;
  v6 = 0x800000023F63BA60;
  sub_23F61C280();
  v5 = 0x20545245534E49;
  v6 = 0xE700000000000000;
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F6173A8();
  sub_23F617420();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F5C0754(Swift::OpaquePointer a1, Swift::String *a2)
{
  Swift::String v2;
  uint64_t countAndFlagsBits;
  void *object;
  IntelligenceFlowPlannerRuntime::ResponseCatalogIdentifiers v6;

  v2 = a2[1];
  countAndFlagsBits = a2[2]._countAndFlagsBits;
  object = a2[2]._object;
  v6.appBundleID = *a2;
  v6.intentID = v2;
  v6.actionType._countAndFlagsBits = countAndFlagsBits;
  v6.actionType._object = object;
  hashInputKeysOnly(inputParams:identifiers:)(a1, &v6);
  v6.appBundleID._countAndFlagsBits = 10024;
  v6.appBundleID._object = (void *)0xE200000000000000;
  sub_23F61C280();
  sub_23F3837B0();
  sub_23F61C280();
  sub_23F5C0558(v6.appBundleID._countAndFlagsBits);
  return sub_23F3837B0();
}

id ResponseValidator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ResponseValidator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23F5C0824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  _QWORD v11[10];

  v0 = sub_23F61BEF0();
  MEMORY[0x24BDAC7A8](v0);
  v11[7] = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_23F61BEE4();
  v11[5] = *(_QWORD *)(v2 - 8);
  v11[6] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23F61C148();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61C13C();
  v7 = sub_23F61C118();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v9 >> 60 != 15)
  {
    sub_23F61BED8();
    v10 = (char *)&loc_23F5C094C + dword_23F5C0C74[v9 >> 62];
    v11[8] = v7;
    v11[4] = v9;
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x23F5C0C74);
}

void sub_23F5C0C84(_BYTE *a1@<X8>)
{
  *a1 = sub_23F617BE8() & 1;
  sub_23F362928();
}

void sub_23F5C0CAC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F3BCFE4();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_23F5C1088(v5);
  *a1 = v2;
}

uint64_t sub_23F5C0D14()
{
  sub_23F5247C0();
  sub_23F516EA4();
  return swift_deallocObject();
}

uint64_t sub_23F5C0D2C(char *a1)
{
  uint64_t v1;

  return sub_23F5C0230(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23F5C0D44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t type metadata accessor for ResponseValidator()
{
  uint64_t result;

  result = qword_256E7DF40;
  if (!qword_256E7DF40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F5C0DA8(uint64_t a1, uint64_t a2)
{
  return sub_23F5C1FB8(&qword_256E7DE48, a2, (uint64_t (*)(uint64_t))type metadata accessor for ValidationEntry, (uint64_t)&protocol conformance descriptor for ValidationEntry);
}

uint64_t sub_23F5C0DD4(uint64_t a1, uint64_t a2)
{
  return sub_23F5C1FB8(&qword_256E7DE50, a2, (uint64_t (*)(uint64_t))type metadata accessor for ValidationEntry, (uint64_t)&protocol conformance descriptor for ValidationEntry);
}

void sub_23F5C0E00(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_23F5BEC8C();
  a1[1] = v2;
  sub_23F362928();
}

uint64_t method lookup function for ValidationEntry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ValidationEntry.validationHash.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of ValidationEntry.validationHash.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ValidationEntry.validationHash.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ValidationEntry.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ValidationEntry.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_23F5C0E8C()
{
  return type metadata accessor for ResponseValidator();
}

uint64_t method lookup function for ResponseValidator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResponseValidator.validateInputs(inputParams:identifiers:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ResponseValidator.readValidationEntry(hash:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ResponseValidator.updateCacheEntry(inputParams:identifiers:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t storeEnumTagSinglePayload for ValidationEntry.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F5C0F54 + 4 * asc_23F630080[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F5C0F74 + 4 * byte_23F630085[v4]))();
}

_BYTE *sub_23F5C0F54(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F5C0F74(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F5C0F7C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F5C0F84(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F5C0F8C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F5C0F94(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ValidationEntry.CodingKeys()
{
  return &type metadata for ValidationEntry.CodingKeys;
}

unint64_t sub_23F5C0FB4()
{
  unint64_t result;

  result = qword_256E7DF50;
  if (!qword_256E7DF50)
  {
    result = MEMORY[0x242670A44](&unk_23F63037C, &type metadata for ValidationEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7DF50);
  }
  return result;
}

unint64_t sub_23F5C0FF4()
{
  unint64_t result;

  result = qword_256E7DF58;
  if (!qword_256E7DF58)
  {
    result = MEMORY[0x242670A44](&unk_23F6302B4, &type metadata for ValidationEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7DF58);
  }
  return result;
}

unint64_t sub_23F5C1034()
{
  unint64_t result;

  result = qword_256E7DF60;
  if (!qword_256E7DF60)
  {
    result = MEMORY[0x242670A44](&unk_23F6302DC, &type metadata for ValidationEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E7DF60);
  }
  return result;
}

uint64_t sub_23F5C1070()
{
  return sub_23F5C0638();
}

void sub_23F5C1088(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  BOOL v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;

  v3 = a1[1];
  v4 = sub_23F61CC04();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_23F5C16EC(0, v3, 1, a1);
      return;
    }
    goto LABEL_144;
  }
  v5 = v4;
  sub_23F387ED8(v3 / 2);
  v98 = v6;
  v99 = v3;
  v100 = v7;
  v96 = a1;
  if (v3 <= 0)
  {
    v101 = (char *)MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_110:
    if (v33 < 2)
    {
LABEL_121:
      swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(_QWORD *)(v98 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_149;
    }
    v88 = *v96;
    while (1)
    {
      v89 = v33 - 2;
      if (v33 < 2)
        break;
      if (!v88)
        goto LABEL_153;
      v90 = v101;
      v91 = *(_QWORD *)&v101[16 * v89 + 32];
      v92 = *(_QWORD *)&v101[16 * v33 + 24];
      sub_23F5C17B0((char *)(v88 + 16 * v91), (char *)(v88 + 16 * *(_QWORD *)&v101[16 * v33 + 16]), v88 + 16 * v92, v100);
      if (v1)
        goto LABEL_106;
      if (v92 < v91)
        goto LABEL_139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v90 = sub_23F3BC9E8();
      if (v89 >= *((_QWORD *)v90 + 2))
        goto LABEL_140;
      v93 = &v90[16 * v89 + 32];
      *(_QWORD *)v93 = v91;
      *((_QWORD *)v93 + 1) = v92;
      v94 = *((_QWORD *)v90 + 2);
      if (v33 > v94)
        goto LABEL_141;
      memmove(&v90[16 * v33 + 16], &v90[16 * v33 + 32], 16 * (v94 - v33));
      v101 = v90;
      *((_QWORD *)v90 + 2) = v94 - 1;
      v33 = v94 - 1;
      v3 = v99;
      if (v94 <= 2)
        goto LABEL_121;
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  v97 = v5;
  v8 = 0;
  v9 = *a1;
  v95 = *a1 + 8;
  v101 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v10 = v8++;
    if (v8 >= v3)
      goto LABEL_32;
    v11 = (uint64_t *)(v9 + 16 * v8);
    v12 = *v11;
    v13 = v11[1];
    v14 = (_QWORD *)(v9 + 16 * v10);
    if (v12 == *v14 && v13 == v14[1])
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v3)
        goto LABEL_31;
      v16 = 0;
LABEL_13:
      v18 = (_QWORD *)(v95 + 16 * v17);
      do
      {
        v19 = (_QWORD *)(v9 + 16 * v8);
        if (*(v18 - 1) == *v19 && *v18 == v19[1])
        {
          if ((v16 & 1) != 0)
            goto LABEL_24;
        }
        else if (((v16 ^ sub_23F61CC64()) & 1) != 0)
        {
          goto LABEL_23;
        }
        v18 += 2;
        v21 = v17 + 1;
        v8 = v17;
        v17 = v21;
      }
      while (v21 < v3);
      v17 = v21;
      goto LABEL_23;
    }
    v16 = sub_23F61CC64();
    v17 = v10 + 2;
    if (v10 + 2 < v3)
      goto LABEL_13;
LABEL_23:
    v8 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_32;
LABEL_24:
    if (v17 < v10)
      goto LABEL_148;
    if (v10 < v17)
    {
      v22 = 16 * v17;
      v23 = 16 * v10;
      v24 = v17;
      v25 = v10;
      do
      {
        if (v25 != --v24)
        {
          if (!v9)
            goto LABEL_152;
          v26 = v9 + v22;
          v27 = *(_QWORD *)(v9 + v23);
          v28 = *(_QWORD *)(v9 + v23 + 8);
          *(_OWORD *)(v9 + v23) = *(_OWORD *)(v9 + v22 - 16);
          *(_QWORD *)(v26 - 16) = v27;
          *(_QWORD *)(v26 - 8) = v28;
        }
        ++v25;
        v22 -= 16;
        v23 += 16;
      }
      while (v25 < v24);
    }
LABEL_31:
    v8 = v17;
LABEL_32:
    if (v8 >= v3)
      goto LABEL_41;
    if (__OFSUB__(v8, v10))
      goto LABEL_143;
    if (v8 - v10 >= v97)
      goto LABEL_41;
    if (__OFADD__(v10, v97))
      goto LABEL_146;
    if (v10 + v97 >= v3)
      v29 = v3;
    else
      v29 = v10 + v97;
    if (v29 < v10)
      goto LABEL_147;
    if (v8 == v29)
    {
LABEL_41:
      v30 = v101;
    }
    else
    {
      v81 = (_QWORD *)(v9 + 16 * v8);
      v30 = v101;
      do
      {
        v82 = (uint64_t *)(v9 + 16 * v8);
        v83 = *v82;
        v84 = v82[1];
        v85 = v10;
        v86 = v81;
        do
        {
          v87 = v83 == *(v86 - 2) && v84 == *(v86 - 1);
          if (v87 || (sub_23F61CC64() & 1) == 0)
            break;
          if (!v9)
            goto LABEL_150;
          v83 = *v86;
          v84 = v86[1];
          *(_OWORD *)v86 = *((_OWORD *)v86 - 1);
          *(v86 - 1) = v84;
          *(v86 - 2) = v83;
          v86 -= 2;
          ++v85;
        }
        while (v8 != v85);
        ++v8;
        v81 += 2;
      }
      while (v8 != v29);
      v8 = v29;
    }
    if (v8 < v10)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v30 = sub_23F3BC8F8(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
    v32 = *((_QWORD *)v30 + 2);
    v31 = *((_QWORD *)v30 + 3);
    v33 = v32 + 1;
    if (v32 >= v31 >> 1)
      v30 = sub_23F3BC8F8((char *)(v31 > 1), v32 + 1, 1, v30);
    *((_QWORD *)v30 + 2) = v33;
    v34 = v30 + 32;
    v35 = &v30[16 * v32 + 32];
    *(_QWORD *)v35 = v10;
    *((_QWORD *)v35 + 1) = v8;
    v101 = v30;
    if (v32)
      break;
    v33 = 1;
LABEL_90:
    v3 = v99;
    if (v8 >= v99)
      goto LABEL_110;
  }
  while (1)
  {
    v36 = v33 - 1;
    if (v33 >= 4)
    {
      v41 = &v34[16 * v33];
      v42 = *((_QWORD *)v41 - 8);
      v43 = *((_QWORD *)v41 - 7);
      v47 = __OFSUB__(v43, v42);
      v44 = v43 - v42;
      if (v47)
        goto LABEL_127;
      v46 = *((_QWORD *)v41 - 6);
      v45 = *((_QWORD *)v41 - 5);
      v47 = __OFSUB__(v45, v46);
      v39 = v45 - v46;
      v40 = v47;
      if (v47)
        goto LABEL_128;
      v48 = v33 - 2;
      v49 = &v34[16 * v33 - 32];
      v51 = *(_QWORD *)v49;
      v50 = *((_QWORD *)v49 + 1);
      v47 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      if (v47)
        goto LABEL_129;
      v47 = __OFADD__(v39, v52);
      v53 = v39 + v52;
      if (v47)
        goto LABEL_131;
      if (v53 >= v44)
      {
        v71 = &v34[16 * v36];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v47 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v47)
          goto LABEL_137;
        v64 = v39 < v74;
        goto LABEL_79;
      }
    }
    else
    {
      if (v33 != 3)
      {
        v65 = *((_QWORD *)v30 + 4);
        v66 = *((_QWORD *)v30 + 5);
        v47 = __OFSUB__(v66, v65);
        v58 = v66 - v65;
        v59 = v47;
        goto LABEL_73;
      }
      v38 = *((_QWORD *)v30 + 4);
      v37 = *((_QWORD *)v30 + 5);
      v47 = __OFSUB__(v37, v38);
      v39 = v37 - v38;
      v40 = v47;
    }
    if ((v40 & 1) != 0)
      goto LABEL_130;
    v48 = v33 - 2;
    v54 = &v34[16 * v33 - 32];
    v56 = *(_QWORD *)v54;
    v55 = *((_QWORD *)v54 + 1);
    v57 = __OFSUB__(v55, v56);
    v58 = v55 - v56;
    v59 = v57;
    if (v57)
      goto LABEL_132;
    v60 = &v34[16 * v36];
    v62 = *(_QWORD *)v60;
    v61 = *((_QWORD *)v60 + 1);
    v47 = __OFSUB__(v61, v62);
    v63 = v61 - v62;
    if (v47)
      goto LABEL_134;
    if (__OFADD__(v58, v63))
      goto LABEL_136;
    if (v58 + v63 >= v39)
    {
      v64 = v39 < v63;
LABEL_79:
      if (v64)
        v36 = v48;
      goto LABEL_81;
    }
LABEL_73:
    if ((v59 & 1) != 0)
      goto LABEL_133;
    v67 = &v34[16 * v36];
    v69 = *(_QWORD *)v67;
    v68 = *((_QWORD *)v67 + 1);
    v47 = __OFSUB__(v68, v69);
    v70 = v68 - v69;
    if (v47)
      goto LABEL_135;
    if (v70 < v58)
      goto LABEL_90;
LABEL_81:
    v75 = v36 - 1;
    if (v36 - 1 >= v33)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v9)
      goto LABEL_151;
    v76 = &v34[16 * v75];
    v77 = *(_QWORD *)v76;
    v78 = &v34[16 * v36];
    v79 = *((_QWORD *)v78 + 1);
    sub_23F5C17B0((char *)(v9 + 16 * *(_QWORD *)v76), (char *)(v9 + 16 * *(_QWORD *)v78), v9 + 16 * v79, v100);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_124;
    if (v36 > *((_QWORD *)v101 + 2))
      goto LABEL_125;
    *(_QWORD *)v76 = v77;
    *(_QWORD *)&v34[16 * v75 + 8] = v79;
    v80 = *((_QWORD *)v101 + 2);
    if (v36 >= v80)
      goto LABEL_126;
    v30 = v101;
    v33 = v80 - 1;
    memmove(&v34[16 * v36], v78 + 16, 16 * (v80 - 1 - v36));
    *((_QWORD *)v101 + 2) = v80 - 1;
    if (v80 <= 2)
      goto LABEL_90;
  }
LABEL_106:
  swift_bridgeObjectRelease();
  if (v99 < -1)
    goto LABEL_145;
  *(_QWORD *)(v98 + 16) = 0;
  swift_bridgeObjectRelease();
}

